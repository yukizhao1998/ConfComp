Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocked),Outward issue link (Blocked),Inward issue link (Blocker),Outward issue link (Blocker),Inward issue link (Child-Issue),Outward issue link (Child-Issue),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Container),Outward issue link (Container),Outward issue link (Dependent),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Outward issue link (Incorporates),Outward issue link (Incorporates),Outward issue link (Incorporates),Outward issue link (Incorporates),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Regression),Outward issue link (Regression),Inward issue link (Required),Outward issue link (Required),Inward issue link (Supercedes),Outward issue link (Supercedes),Inward issue link (dependent),Outward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Release Note),Custom field (Review Date),Custom field (Reviewer),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
SQL TX: Fix checking whether currently updating row was updated after it pass query filter,IGNITE-7342,13127670,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,29/Dec/17 13:15,16/Aug/18 15:34,14/Jul/23 06:20,12/Feb/18 13:35,,,,,,2.7,,mvcc,sql,,,0,,,,,,dpavlov,gvvinblade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 20 13:53:07 UTC 2018,,,,,,,,,,"0|i3od9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/18 13:53;dpavlov;Could we enrich decription? what was done? was it merged?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix flaky GridServiceProcessorMultiNodeConfigSelfTest#checkDeployOnEachNodeUpdateTopology,IGNITE-7340,13127651,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,29/Dec/17 09:19,01/Aug/19 22:09,14/Jul/23 06:20,11/Jan/18 13:49,2.3,,,,,2.4,,,,,,0,,,,"{noformat}
junit.framework.AssertionFailedError: serviceConfigEachNode expected:<4> but was:<3>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.Assert.assertEquals(Assert.java:234)
    at junit.framework.TestCase.assertEquals(TestCase.java:401)
    at org.apache.ignite.internal.processors.service.GridServiceProcessorMultiNodeConfigSelfTest.checkDeployOnEachNodeUpdateTopology(GridServiceProcessorMultiNodeConfigSelfTest.java:277)
    at org.apache.ignite.internal.processors.service.GridServiceProcessorMultiNodeConfigSelfTest.testDeployOnEachNodeUpdateTopology(GridServiceProcessorMultiNodeConfigSelfTest.java:144)
{noformat}",,agura,dkarachentsev,githubbot,,,,,,,,,,"dspavlov commented on issue #3319: IGNITE-7340 - Fix flaky GridServiceProcessorMultiNodeConfigSelfTest#c…
URL: https://github.com/apache/ignite/pull/3319#issuecomment-517476193
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3319: IGNITE-7340 - Fix flaky GridServiceProcessorMultiNodeConfigSelfTest#c…
URL: https://github.com/apache/ignite/pull/3319
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 13:49:21 UTC 2018,,,,,,,,,,"0|i3od5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Dec/17 09:26;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3319

    IGNITE-7340 - Fix flaky GridServiceProcessorMultiNodeConfigSelfTest#c…

    …heckDeployOnEachNodeUpdateTopology

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7340

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3319.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3319
    
----
commit ab5622f8c14998908ab36bd22ba6966e36b2e730
Author: dkarachentsev <dkarachentsev@...>
Date:   2017-12-29T09:26:02Z

    IGNITE-7340 - Fix flaky GridServiceProcessorMultiNodeConfigSelfTest#checkDeployOnEachNodeUpdateTopology

----
;;;","11/Jan/18 13:49;agura;LGTM. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RENTING partition is not evicted after restore from storage,IGNITE-7339,13127645,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ascherbakov,sboikov,sboikov,29/Dec/17 08:56,21/Aug/18 09:41,14/Jul/23 06:20,21/Aug/18 09:39,,,,,,2.7,,,,,,0,,,,"If partition was in RENTING state at the moment when node is stopped, then after restart it is not evicted.

It seems it is an issue in GridDhtLocalPartition.rent, 'tryEvictAsync' is not called is partition was already in RENTING state.

Also there is error in GridDhtPartitionTopologyImpl.checkEvictions: partition state is always treated as changed after part.rent call even if part.rent does not actually change state.",,agoncharuk,ascherbakov,dpavlov,githubbot,jokser,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 21 09:41:59 UTC 2018,,,,,,,,,,"0|i3od47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 13:57;githubbot;GitHub user ascherbakoff opened a pull request:

    https://github.com/apache/ignite/pull/4138

    IGNITE-7339 RENTING partition is not evicted after restore from storage

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7339

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4138.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4138
    
----
commit 2dcdb5379e038560888165d2416b20e60dc887ff
Author: Aleksei Scherbakov <alexey.scherbakoff@...>
Date:   2018-05-16T10:01:41Z

    IGNITE-7339 RENTING partition is not evicted after restore from storage

commit 807c90711cdd4577bd3ff788e30a95168fc17848
Author: Aleksei Scherbakov <alexey.scherbakoff@...>
Date:   2018-05-17T17:21:21Z

    Merge branch 'master' of https://github.com/apache/ignite into ignite-7339

commit ba9fe91ea9a81c6aa70bf88fdb50be6354a58275
Author: Aleksei Scherbakov <alexey.scherbakoff@...>
Date:   2018-05-21T09:23:59Z

    IGNITE-7339 RENTING partition is not evicted after restore from storage

commit 814b8e0b6fb2827604d7c2a26d50acabcc3ed7b2
Author: Aleksei Scherbakov <alexey.scherbakoff@...>
Date:   2018-06-04T16:08:52Z

    Merge branch 'master' of https://github.com/apache/ignite into ignite-7339

commit a1d50119a42f27b1d9b3596ac213f366c8ba435c
Author: Aleksei Scherbakov <alexey.scherbakoff@...>
Date:   2018-06-04T17:23:36Z

    IGNITE-7339 RENTING partition is not evicted after restore from storage.

commit 09a6263cbc317f152e668c2a6925052d62a9a820
Author: Aleksei Scherbakov <alexey.scherbakoff@...>
Date:   2018-06-04T17:25:38Z

    IGNITE-7339 RENTING partition is not evicted after restore from storage.

----
;;;","05/Jun/18 16:37;dpavlov;Hi [~ascherbakov]
TC run is not completed, but issue status is Patch Available.;;;","06/Jun/18 08:55;ascherbakov;[~dpavlov],

Patch available = pull request is ready, no ?

I see the following by the link [1]:

Submitting for Review
Attach a patch, pull request url or branch name (see instructions at Workflow)
(OPTIONAL) create an Upsource review: Review With Upsource
Add comment describing what has been implemented.
Move ticket to PATCH AVAILABLE state.

TC completion is never mentioned.

BTW, TC run looks acceptable, please review.

[1] https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-SubmittingforReview;;;","06/Jun/18 10:39;dpavlov;[~vozerov] has deleted mentioning of TC, I don't know reason for it.

In how to contribute in section 'submit review process' there is also recommendation to mention committer/maineteiner you are expecting to do a review. This is best pracrice to run review faster, not a mandatory requirement.;;;","06/Jun/18 12:16;dpavlov;[~Jokser], could you please take a look?;;;","08/Jun/18 11:46;jokser;[~ascherbakov] I've looked at changes and have 2 proposals to improve the solution:
1) To prevent partition eviction/renting you can explicitly reserve it using group reservation (org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition#addReservation), so there is no needs to introduce new debug/test variables.
2) The logic of invoking ""clearAsync"" during restore process can be moved to org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopology#afterStateRestored callback, to avoid GridCacheDatabaseSharedManager restore logic overload.;;;","09/Aug/18 08:19;ascherbakov;[~Jokser],

I've made fixes you recommended.

TC looks acceptable, pls take a look.

 ;;;","10/Aug/18 15:43;jokser;[~ascherbakov] Looks good to me. Ready to merge.;;;","13/Aug/18 17:47;dpavlov;Hi [~ascherbakov], I've checked TC status, and it has a number of suspicious failures.

Could you please merge master into the branch and re-run TC?

Probably statistic was outdated, one TC run is already unavailable. So as the simplest solution I suggest running fix using the fresh master state.

{noformat}
 Platform .NET (Long Running) [ tests 0 TIMEOUT ]	Critical F.R.: 0,0%
 	 	
 PDS 2 [ tests 3 ]	 
 IgnitePdsTestSuite2: IgniteWalReaderTest.testFillWalWithDifferentTypes	(fail rate 0,0%) 
  
 PDS (Direct IO) 2 [ tests 1 ]	 
 IgnitePdsNativeIoTestSuite2: SlowHistoricalRebalanceSmallHistoryTest.testReservation	(fail rate 0,0%) 
 	 	 
 Java Client [ tests 2 ]	 
 IgniteClientTestSuite: ClientTcpMultiThreadedSelfTest.testMultithreadedTaskRun	(fail rate 0,0%) 
 	 	 
 Cache 7 (With Persistence) [ tests 1 ]	 
 IgniteCacheTestSuite7: CacheMetricsManageTest.testClearStatisticsAfterDisableStatistics	(fail rate 0,0%) 
 	 	  	
 Cache 1 [ tests 1 ]	 
 IgniteBinaryCacheTestSuite: IgniteDiagnosticMessagesMultipleConnectionsTest.testRemoteTx	(fail rate 0,0%) 
 	 	
 Basic 1 [ tests 2 ]	 
 IgniteBasicTestSuite: IgniteCacheP2pUnmarshallingErrorTest.testResponseMessageOnUnmarshallingFailed	(fail rate 0,0%) 
 	 	 	
 Cache (Restarts) 1 [ tests 1 ]	 
 IgniteCacheRestartTestSuite: GridCachePartitionedNodeRestartTest.testRestartWithPutTenNodesTwoBackups	(fail rate 0,0%) 
{noformat}
;;;","14/Aug/18 12:52;dpavlov;Please set PA state again once new test (re)run is ready. ;;;","15/Aug/18 07:52;ascherbakov;[~dpavlov],

Re-run is ready.;;;","21/Aug/18 09:39;agoncharuk;Thanks, merged to master.;;;","21/Aug/18 09:41;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4138
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
can get value by entry.getValue but cann't get value by cache.get(entry.getKey),IGNITE-7338,13127610,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dreamingdean,dreamingdean,29/Dec/17 01:02,24/Jan/18 12:06,14/Jul/23 06:20,24/Jan/18 12:06,1.9,,,,,,,cache,,,,0,,,,"bossapp@Linux-Power-NB-AltiDB2-XT:/home/bossapp6$java -version
java version ""1.7.0""
Java(TM) SE Runtime Environment (build pxp6470_27sr4fp15-20171116_01(SR4 FP15))
IBM J9 VM (build 2.7, JRE 1.7.0 Linux ppc64-64 Compressed References 20171011_366929 (JIT enabled, AOT enabled)
J9VM - R27_Java727_SR4_20171011_1720_B366929
JIT  - tr.r13.java_20171011_366929
GC   - R27_Java727_SR4_20171011_1720_B366929_CMPRSS
J9CL - 20171011_366929)
JCL - 20171109_01 based on Oracle jdk7u161-b13
bossapp@Linux-Power-NB-AltiDB2-XT:/home/bossapp6$lsb_release -a
LSB Version:	:core-4.0-noarch:core-4.0-ppc64:graphics-4.0-noarch:graphics-4.0-ppc64:printing-4.0-noarch:printing-4.0-ppc64
Distributor ID:	n/a
Description:	redhat-4 
Release:	n/a
Codename:	n/a
{color:#d04437}test code:{color}
if(cacheName.equalsIgnoreCase(""tariff-ccb_cdr_charge_rule"")){
    CcbCdrChargeRuleKey ccbCdrChargeRuleKey = new CcbCdrChargeRuleKey();
    ccbCdrChargeRuleKey.setFileType(""573"");
    ccbCdrChargeRuleKey.setSourceType(""5"");
    Object cacheDate = ignite.cache(cacheName).get(ccbCdrChargeRuleKey);
    logger.debug(LogProperty.LOGTYPE_DETAIL, ccbCdrChargeRuleKey+""Object eKey:"" + cacheDate );
    ccbCdrChargeRuleKey.setFileType(""1233"");
    ccbCdrChargeRuleKey.setSourceType(""14"");
    Object cacheDate1 = ignite.cache(cacheName).get(ccbCdrChargeRuleKey);
    logger.debug(LogProperty.LOGTYPE_DETAIL, ""Object1:"" + cacheDate1      +""ccbCdrChargeRuleKey""+ccbCdrChargeRuleKey.hashCode());
    IgniteCache<Object, Object> cacheDate3 = ignite.cache(cacheName);
    for (Cache.Entry<Object, Object> e : cacheDate3) {	
         List<ICacheModel> cacheModelList = (List<ICacheModel>) cacheDate3.get(e.getKey());
        {color:#d04437}logger.debug(LogProperty.LOGTYPE_DETAIL,""e.getKey():""+e.getKey() +"" cacheModelList:"" + cacheModelList );
        logger.debug(LogProperty.LOGTYPE_DETAIL,""e.getValue():""+e.getValue() );{color}
   }
}
results:
2017-12-2819:17:36,322||DEBUG||frame_thread_nodestart| com.newland.boss.cloud.commons.igniteclient.PlatformInitIgniteClient.test(PlatformInitIgniteClient.java:337)| ||||||||||||{color:#d04437}e.getKey():573,5 cacheModelList:null{color}
2017-12-2819:17:36,323||DEBUG||frame_thread_nodestart| com.newland.boss.cloud.commons.igniteclient.PlatformInitIgniteClient.test(PlatformInitIgniteClient.java:338)| ||||||||||||{color:#d04437}e.getValue():[CcbCdrChargeRule{ccbCdrChargeRuleKey=573,5, bizDomainCode='3', conditionGroupId=999999999999, fileType='573', preProcessUnitClass='PreProcessGprs', priority=1, rateItemTypes='6', ratingClass='RatingGprs', ruleDesc='国际出访GPRS 专网', sourceType='5', userTariffClass='GetUserTariffInfoGprs', version='0.0.1'}]{color}",,andrey-kuznetsov,dreamingdean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 24 12:05:33 UTC 2018,,,,,,,,,,"0|i3ocwf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Dec/17 01:03;dreamingdean;if(cacheName.equalsIgnoreCase(""tariff-ccb_cdr_charge_rule"")){
		     	  CcbCdrChargeRuleKey ccbCdrChargeRuleKey = new CcbCdrChargeRuleKey();
			ccbCdrChargeRuleKey.setFileType(""573"");
			ccbCdrChargeRuleKey.setSourceType(""5"");
			Object cacheDate = ignite.cache(cacheName).get(ccbCdrChargeRuleKey);
			logger.debug(LogProperty.LOGTYPE_DETAIL, ccbCdrChargeRuleKey+""Object eKey:"" + cacheDate );
			
			ccbCdrChargeRuleKey.setFileType(""1233"");
			ccbCdrChargeRuleKey.setSourceType(""14"");
			Object cacheDate1 = ignite.cache(cacheName).get(ccbCdrChargeRuleKey);
			logger.debug(LogProperty.LOGTYPE_DETAIL, ""Object1:"" + cacheDate1 +""ccbCdrChargeRuleKey""+ccbCdrChargeRuleKey.hashCode());
			IgniteCache<Object, Object> cacheDate3 = ignite.cache(cacheName);
			for (Cache.Entry<Object, Object> e : cacheDate3) {								
				List<ICacheModel> cacheModelList = (List<ICacheModel>) cacheDate3.get(e.getKey());
				{color:#d04437}logger.debug(LogProperty.LOGTYPE_DETAIL,""e.getKey():""+e.getKey() +"" cacheModelList:"" + cacheModelList );
				logger.debug(LogProperty.LOGTYPE_DETAIL,""e.getValue():""+e.getValue() );{color}
			}
		}


results:
    2017-12-2819:17:36,322||DEBUG||frame_thread_nodestart| com.newland.boss.cloud.commons.igniteclient.PlatformInitIgniteClient.test(PlatformInitIgniteClient.java:337)| ||||||||||||{color:#d04437}e.getKey():573,5 cacheModelList:null{color}
2017-12-2819:17:36,323||DEBUG||frame_thread_nodestart| com.newland.boss.cloud.commons.igniteclient.PlatformInitIgniteClient.test(PlatformInitIgniteClient.java:338)| ||||||||||||{color:#d04437}e.getValue():[CcbCdrChargeRule{ccbCdrChargeRuleKey=573,5, bizDomainCode='3', conditionGroupId=999999999999, fileType='573', preProcessUnitClass='PreProcessGprs', priority=1, rateItemTypes='6', ratingClass='RatingGprs', ruleDesc='国际出访GPRS 专网', sourceType='5', userTariffClass='GetUserTariffInfoGprs', version='0.0.1'}]{color};;;","29/Dec/17 08:31;andrey-kuznetsov;At the very least cache key class (CcbCdrChargeRuleKey) is needed to understand the issue. Cache and cluster configuration can also be useful.;;;","24/Jan/18 12:05;dreamingdean;@[~andrey-kuznetsov]  i have resolve this problem by rewrite the hashcode method in this way：

@Override
 public int hashCode() {
 int result = fileType.hashCode();
 result = (result << 5) - result + sourceType.hashCode();
 return result;
 }

 

thanks all

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MBeans fail to be created for caches with special symbols in names,IGNITE-7334,13127550,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slukyanov,slukyanov,slukyanov,28/Dec/17 17:11,01/Aug/19 22:10,14/Jul/23 06:20,16/Jan/18 14:52,2.4,,,,,2.4,,cache,,,,0,,,,"If a cache contains a certain symbols, e.g. an asterisk, its creation will fail due to an exception during MBean creation. This is because of insufficient escaping in the shared MBean registration code in IgniteUtils.",,agura,githubbot,slukyanov,,,,,,,,,,"dspavlov commented on issue #3317: IGNITE-7334: MBeans fail to be created for caches with special symbols in names
URL: https://github.com/apache/ignite/pull/3317#issuecomment-517476252
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600","dspavlov commented on pull request #3317: IGNITE-7334: MBeans fail to be created for caches with special symbols in names
URL: https://github.com/apache/ignite/pull/3317
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 16 14:52:40 UTC 2018,,,,,,,,,,"0|i3ocj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Dec/17 17:46;githubbot;GitHub user slukyano opened a pull request:

    https://github.com/apache/ignite/pull/3317

    IGNITE-7334: added escaping of special characters to MBean registrati…

    …on code

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7334

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3317.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3317
    
----
commit 8650dddb717a32a05071fda0053ac89029bf4a13
Author: Stanislav Lukyanov <stanlukyanov@...>
Date:   2017-12-28T17:13:08Z

    IGNITE-7334: added escaping of special characters to MBean registration code

----
;;;","16/Jan/18 14:52;agura;LGTM. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AssertionError Entry cannot become obsolete when DHT local candidate is added in deadlock detection suite,IGNITE-7324,13127506,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,agoncharuk,agoncharuk,28/Dec/17 11:09,26/Apr/18 08:46,14/Jul/23 06:20,26/Apr/18 08:46,2.3,,,,,2.5,,,,,,0,MakeTeamcityGreenAgain,,,"I observed this assertion in deadlock detection suite on TC:
{code}
[12:11:30]W:		 [org.apache.ignite:ignite-core] java.lang.AssertionError: Entry cannot become obsolete when DHT local candidate is added [e=GridDhtCacheEntry [rdrs=[], part=39, super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=KeyCacheObjectImpl [part=39, val=39, hasValBytes=true], val=null, startVer=1514452286919, ver=GridCacheVersion [topVer=125932251, order=1514452286919, nodeOrder=2], hash=39, extras=GridCacheObsoleteEntryExtras [obsoleteVer=GridCacheVersion [topVer=2147483647, order=0, nodeOrder=0]], flags=2]]], ex=org.apache.ignite.internal.processors.cache.GridCacheEntryRemovedException]
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLockFuture.map(GridDhtLockFuture.java:902)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLockFuture.onOwnerChanged(GridDhtLockFuture.java:655)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager.notifyOwnerChanged(GridCacheMvccManager.java:226)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager.access$200(GridCacheMvccManager.java:80)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager$3.onOwnerChanged(GridCacheMvccManager.java:163)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.checkOwnerChanged(GridCacheMapEntry.java:3709)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedCacheEntry.removeLock(GridDistributedCacheEntry.java:400)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheEntry.removeLock(GridDhtCacheEntry.java:329)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedCacheEntry.txUnlock(GridDistributedCacheEntry.java:665)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.unlockMultiple(IgniteTxManager.java:1672)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.rollbackTx(IgniteTxManager.java:1287)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userRollback(IgniteTxLocalAdapter.java:980)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.localFinish(GridNearTxLocal.java:3080)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxFinishFuture.finish(GridNearTxFinishFuture.java:418)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.rollbackNearTxLocalAsync(GridNearTxLocal.java:3316)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.access$4900(GridNearTxLocal.java:122)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal$26.run(GridNearTxLocal.java:4129)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6673)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$1.body(GridClosureProcessor.java:827)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
[12:11:30]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{code}

It looks like the lock future has acquired one lock and was waiting for another lock. When the future timed-out, the previous lock was already removed, but the next lock was successfully acquired, which led to the assertion above.

My suggestion would be to give up in the mapping code if the future has timed out or if we got entry removed exception",,agoncharuk,ascherbakov,dpavlov,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6827,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 26 08:46:16 UTC 2018,,,,,,,,,,"0|i3oc9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/18 10:23;ascherbakov;[~agoncharuk]

The issue often causes TC run failures for new tests added in IGNITE-6827 which I'm currently working on. 

If you don't mind I'll take it.;;;","26/Apr/18 08:46;ascherbakov;Fixed as part of IGNITE-6827;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Storm dependencies to 1.1.1,IGNITE-7323,13127454,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,shroman,shroman,28/Dec/17 02:24,30/Jan/18 01:00,14/Jul/23 06:20,30/Jan/18 01:00,,,,,,2.5,,,,,,0,,,,http://storm.apache.org/2017/08/01/storm111-released.html,,githubbot,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 30 01:00:39 UTC 2018,,,,,,,,,,"0|i3obxr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Dec/17 03:53;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/3307

    IGNITE-7323: Update Storm dependencies to 1.1.1.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-7323

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3307.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3307
    
----
commit 47e04536650cd4fd6eeaf5cd4c718f1ba89fac87
Author: shroman <rshtykh@...>
Date:   2017-12-28T03:52:34Z

    IGNITE-7323: Update Storm dependencies to 1.1.1.

----
;;;","28/Dec/17 07:54;shroman;Looks like it's built with Java8 but run with Java7 in TC

{{teamcity.agent.jvm.java.home /usr/lib/jvm/java-8-oracle/jre}}

This this failure https://ci.ignite.apache.org/viewLog.html?buildId=1022304&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteStreamers;;;","29/Jan/18 08:50;shroman;Passed on https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8;;;","30/Jan/18 00:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3307
;;;","30/Jan/18 01:00;shroman;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DML operation hangs in case exception is thrown from DHT enlist future,IGNITE-7321,13127365,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,vozerov,vozerov,27/Dec/17 11:45,16/Aug/18 15:34,14/Jul/23 06:20,27/Dec/17 14:07,,,,,,2.7,,mvcc,sql,,,0,,,,"Root cause: when exception is thrown on primary node (e.g. double-insert or MVCC version conflict), primary future is completed, but exception doesn't seem to be propagated to near node.",,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 27 14:08:20 UTC 2017,,,,,,,,,,"0|i3obdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Dec/17 13:25;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/3299

    IGNITE-7321

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7321

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3299.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3299
    
----
commit f6e982540e65ab17d439dba990794f35616a30dd
Author: sboikov <sboikov@...>
Date:   2017-08-30T09:45:40Z

    ignite-3478

commit 275a85db5cd6923b36126166ae99b15e876192be
Author: sboikov <sboikov@...>
Date:   2017-08-31T07:44:07Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit b7b9089f0102b8cab9942a9c887d93e9f26cc7d2
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:00:36Z

    disco cache cleanup

commit 855c2d45794c300d41e386b4e6fa40736cc3e40d
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:09:58Z

    Merge branch 'ignite-3478-1' into ignite-3478

commit 08be7310a93d3ce455215b97cf8ab1a2c3f0ab31
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:52:23Z

    ignite-3478

commit fce2e31f0fd2f4f6a9944422e40408a0c65cfe90
Author: sboikov <sboikov@...>
Date:   2017-09-04T08:13:50Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit d3c049952384750c5543a9f88b383c033ef74096
Author: sboikov <sboikov@...>
Date:   2017-09-04T08:52:11Z

    ignite-3478

commit e71ce1937a18dd32448e92b1038dc48d4cb6f8ab
Author: sboikov <sboikov@...>
Date:   2017-09-04T10:16:03Z

    ignite-3478

commit 5fac5b0965e97f8951e16e10ca9229a2e78ddb0c
Author: sboikov <sboikov@...>
Date:   2017-09-05T10:16:44Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit 2e0c9c08e046e8d6af1b5358d9053eae999b1fb4
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:30:55Z

    ignite-3478

commit e1e07ffdf2d711ba3e72f316f5a3970eff27372e
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:31:14Z

    ignite-3478

commit cbada3934a386668da0b11d4de7d0f58a4d04dfe
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:49:49Z

    ignite-3484

commit 5a82c68dcd1927bb6fded8b7def38c91ff6e145b
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:59:49Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit bc9134c94b7a738dc1664e96ca6eabb059f1c268
Author: sboikov <sboikov@...>
Date:   2017-09-05T12:03:39Z

    Merge branch 'ignite-3478' into ignite-3484
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractDataInnerIO.java

commit b4bfcde78825c6517232e49d389bdb5de19f05a9
Author: sboikov <sboikov@...>
Date:   2017-09-05T12:27:51Z

    ignite-3484

commit 43834aaab9e2c3cd5fdd55289fdc4a9ff8ab6599
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:13:00Z

    ignite-3478

commit d1b828095713fcadfa260cf94fef01b42a1b12fd
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:13:33Z

    Merge branch 'ignite-3478' into ignite-3484

commit 6be6779b6336c36cd71eef0a25199a6a877ce6b5
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:47:11Z

    ignite-3484

commit e3bba83256c1eb53c4b40fbd9ddba47fcf9d58d5
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:10:26Z

    ignite-3484

commit dd0afb28466094b801506da8afa3601bfaebd853
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:30:04Z

    ignite-3484

commit 27b87b413348b03986a463551db24b7726321732
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit dcaf8801accd6ee089849a82b2ccd558aec81895
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:30Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit c966451d0bf7059575de92bcfae43d72096ebce4
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:27:04Z

    Merge branch 'ignite-3478' into ignite-3484

commit 91b9911731a387a3199ddbbc22704bc14af09995
Author: sboikov <sboikov@...>
Date:   2017-09-06T09:22:22Z

    ignite-3484

commit e40b4d9dcd6fe6c1cd2640bdd7116ca5a08ed781
Author: sboikov <sboikov@...>
Date:   2017-09-07T09:12:32Z

    ignite-3484

commit 41a1c571e6ba1765941e2f1679dc4ac1582275c4
Author: sboikov <sboikov@...>
Date:   2017-09-08T07:55:24Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3484

commit 1626130801dc330bcaf693f46906f6564cce6802
Author: sboikov <sboikov@...>
Date:   2017-09-08T08:04:57Z

    ignite-3484

commit 91bbb7cd24f38a38e2e65fc3ebf5637572b11b25
Author: sboikov <sboikov@...>
Date:   2017-09-08T12:34:52Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxPrepareFutureAdapter.java

commit 085a3219088bc1610d1928c437f075a6fb9a4f9b
Author: sboikov <sboikov@...>
Date:   2017-09-08T13:02:16Z

    ignite-6149

commit c6f894817ef063984cee1ea886313eecc8da3be0
Author: sboikov <sboikov@...>
Date:   2017-09-11T13:51:11Z

    ignite-6149

----
;;;","27/Dec/17 13:27;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/3300

    IGNITE-7321 mvcc enabled

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7321-mvcc-enabled

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3300.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3300
    
----
commit 6be6779b6336c36cd71eef0a25199a6a877ce6b5
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:47:11Z

    ignite-3484

commit e3bba83256c1eb53c4b40fbd9ddba47fcf9d58d5
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:10:26Z

    ignite-3484

commit dd0afb28466094b801506da8afa3601bfaebd853
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:30:04Z

    ignite-3484

commit 27b87b413348b03986a463551db24b7726321732
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit dcaf8801accd6ee089849a82b2ccd558aec81895
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:30Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit c966451d0bf7059575de92bcfae43d72096ebce4
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:27:04Z

    Merge branch 'ignite-3478' into ignite-3484

commit 91b9911731a387a3199ddbbc22704bc14af09995
Author: sboikov <sboikov@...>
Date:   2017-09-06T09:22:22Z

    ignite-3484

commit e40b4d9dcd6fe6c1cd2640bdd7116ca5a08ed781
Author: sboikov <sboikov@...>
Date:   2017-09-07T09:12:32Z

    ignite-3484

commit 41a1c571e6ba1765941e2f1679dc4ac1582275c4
Author: sboikov <sboikov@...>
Date:   2017-09-08T07:55:24Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3484

commit 1626130801dc330bcaf693f46906f6564cce6802
Author: sboikov <sboikov@...>
Date:   2017-09-08T08:04:57Z

    ignite-3484

commit 91bbb7cd24f38a38e2e65fc3ebf5637572b11b25
Author: sboikov <sboikov@...>
Date:   2017-09-08T12:34:52Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxPrepareFutureAdapter.java

commit 085a3219088bc1610d1928c437f075a6fb9a4f9b
Author: sboikov <sboikov@...>
Date:   2017-09-08T13:02:16Z

    ignite-6149

commit c6f894817ef063984cee1ea886313eecc8da3be0
Author: sboikov <sboikov@...>
Date:   2017-09-11T13:51:11Z

    ignite-6149

commit 774af444cfc03ab292124ae027e5e85b61496011
Author: sboikov <sboikov@...>
Date:   2017-09-12T07:45:36Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149

commit 6d1702646fc0abbba690b1b4f7b7fde718d9f4d2
Author: sboikov <sboikov@...>
Date:   2017-09-12T08:48:16Z

    ignite-6149

commit 0079a0052215f2c1b66b300c34bcf30e4a1da1b0
Author: sboikov <sboikov@...>
Date:   2017-09-12T08:48:16Z

    ignite-6149

commit 072322f9002df3c2c9033108897d2b7a3de35ca5
Author: sboikov <sboikov@...>
Date:   2017-09-12T14:19:18Z

    Merge remote-tracking branch 'origin/ignite-6149' into ignite-6149
    
    # Conflicts:
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/mvcc/CacheMvccTransactionsTest.java

commit b5cac1c0d818967553c72d4699d1c66c57c1fb10
Author: sboikov <sboikov@...>
Date:   2017-09-13T07:36:42Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149

commit 16e52541ef799f1e135576636a69d89591a1fee2
Author: sboikov <sboikov@...>
Date:   2017-09-13T08:06:37Z

    ignite-6149

commit 9d90972df23a0266246baf6b41774184542233e9
Author: sboikov <sboikov@...>
Date:   2017-09-13T08:49:39Z

    ignite-6149

commit 7a99432655307acf7c5e190e20952322f68e0e4f
Author: sboikov <sboikov@...>
Date:   2017-09-13T09:44:29Z

    ignite-6149

commit c961bd91186217807e51453fad906cd5118a8b9a
Author: sboikov <sboikov@...>
Date:   2017-09-13T11:24:21Z

    ignite-6149

commit f3f58214047d4fa1d9cb5f7ce50ac7278ee17569
Author: sboikov <sboikov@...>
Date:   2017-09-13T14:15:55Z

    ignite-6149

commit 1a7e10ac56e57ddbe1d9ccf99acab90062dc6957
Author: sboikov <sboikov@...>
Date:   2017-09-13T15:01:42Z

    Merge remote-tracking branch 'origin/ignite-6149' into ignite-6149

commit 393f802465c8b68d5a5de59ed9107fe25ad23777
Author: sboikov <sboikov@...>
Date:   2017-09-15T08:06:58Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149

commit 5e886653ca4cf6f538121a0be854a8904e1b4417
Author: sboikov <sboikov@...>
Date:   2017-09-15T09:05:44Z

    ignite-6149

commit 0feca31637feae8ed37dd5d2f53112e3df0c8c00
Author: sboikov <sboikov@...>
Date:   2017-09-15T09:10:04Z

    ignite-6149

commit 5c7f6a5e3bf419130bddac2af4f33db53f9fe657
Author: sboikov <sboikov@...>
Date:   2017-09-15T10:14:01Z

    ignite-6149

commit 06ce6871b18c968023af458f3e118b80be306638
Author: sboikov <sboikov@...>
Date:   2017-09-15T10:25:35Z

    ignite-6149

commit fcf4e3037b0d32efc525ca101a98d506bd372fc5
Author: sboikov <sboikov@...>
Date:   2017-09-15T10:52:49Z

    ignite-6149

----
;;;","27/Dec/17 14:08;githubbot;Github user gvvinblade closed the pull request at:

    https://github.com/apache/ignite/pull/3299
;;;","27/Dec/17 14:08;githubbot;Github user gvvinblade closed the pull request at:

    https://github.com/apache/ignite/pull/3300
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multilevel header in admin panel looks wierd in Safari and Edge,IGNITE-7320,13127347,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,anovikov,alexdel,alexdel,27/Dec/17 08:41,22/Feb/18 02:45,14/Jul/23 06:20,21/Feb/18 07:04,,,,,,2.5,,wizards,,,,0,,,,,,alexdel,anovikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/Feb/18 06:20;alexdel;Lk1YqS (1).jpg;https://issues.apache.org/jira/secure/attachment/12910509/Lk1YqS+%281%29.jpg",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 21 07:04:11 UTC 2018,,,,,,,,,,"0|i3ob9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Feb/18 06:21;alexdel;!Lk1YqS (1).jpg!;;;","15/Feb/18 03:59;alexdel;Fixed columns for Edge, Please test.;;;","16/Feb/18 08:07;alexdel;[~anovikov] [~Dmitriyff] Please review. Branch - ignite-7320;;;","16/Feb/18 09:42;anovikov;Not working under safari 11.;;;","20/Feb/18 11:05;alexdel;Fixed for Safari. For Edge this artifact still remains.;;;","21/Feb/18 07:04;anovikov;Tested. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak during creating/destroying local cache,IGNITE-7319,13127256,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,aealeksandrov,mcherkas,mcherkas,26/Dec/17 19:27,26/Jun/18 17:50,14/Jul/23 06:20,09/Jun/18 15:33,2.3,,,,,2.7,,cache,,,,0,,,,"The following code creates local caches:
{code:java}
private IgniteCache<String, BinaryObject> createLocalCache(String name) { 
        CacheConfiguration<String, BinaryObject> cCfg = new 
CacheConfiguration<>(); 
        cCfg.setName(name); 
        cCfg.setGroupName(""localCaches""); // without group leak is much 
bigger! 
        cCfg.setStoreKeepBinary(true); 
        cCfg.setCacheMode(CacheMode.LOCAL); 
        cCfg.setOnheapCacheEnabled(false); 
        cCfg.setCopyOnRead(false); 
        cCfg.setBackups(0); 
        cCfg.setWriteBehindEnabled(false); 
        cCfg.setReadThrough(false); 
        cCfg.setReadFromBackup(false); 
        cCfg.setQueryEntities(<some basic query here>); 
        return ignite.createCache(cCfg).withKeepBinary(); 
    } 
{code}
The caches are placed in the queue and are picked up by the worker thread which just destroys them after removing from the queue. 
This setup seems to generate a memory leak of about 1GB per day. 
When looking at heap dump, I see all space is occupied by instances of 
java.util.concurrent.ConcurrentSkipListMap$Node.

User list: [http://apache-ignite-users.70518.x6.nabble.com/Memory-leak-in-GridCachePartitionExchangeManager-tt18995.html

Update:

When local cache is created then new CONTINUOUS_QUERY task is created too. This task should work until it canceled but in Ignite code we don't store the CancelableTask somewhere. After destroying the cache this task continues its work.",,aealeksandrov,agura,amashenkov,githubbot,ihorps,mcherkas,zbyszek,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Mar/18 13:29;zbyszek;Demo.java;https://issues.apache.org/jira/secure/attachment/12914045/Demo.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 12 09:12:52 UTC 2018,,,,,,,,,,"0|i3oapr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 15:00;zbyszek;Here is a code to reproduce:;;;","07/Mar/18 15:03;zbyszek;{code:java}
// code placeholder

package p1;

import org.apache.ignite.*;
import org.apache.ignite.binary.BinaryObject;
import org.apache.ignite.cache.CacheMode;
import org.apache.ignite.cache.QueryEntity;
import org.apache.ignite.cluster.ClusterNode;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.concurrent.*;
import java.util.concurrent.atomic.AtomicLong;



public class Demo {

private final static Ignite ignite = createIgnite();
private final static AtomicLong localCacheCreateCount = new AtomicLong();
private final static AtomicLong localCacheDestroyCount = new AtomicLong();
private final static BlockingQueue<IgniteCache<String, BinaryObject>> queue = new LinkedBlockingQueue<>(100);

public static void main(String[] args) throws Exception {

CompletableFuture.runAsync(Demo::runProducer);
CompletableFuture.runAsync(Demo::runProducer);

CompletableFuture.runAsync(Demo::runConsumer);
CompletableFuture.runAsync(Demo::runConsumer);

BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
do {
String input = br.readLine();
if (""q"".equals(input)) {
System.out.println(""Exit!"");
System.exit(0);
} else {
System.out.println(""Queue size: "" + queue.size());
System.out.println(""Caches created: "" + localCacheCreateCount.longValue());
System.out.println(""Caches destroyed: "" + localCacheDestroyCount.longValue());
}
} while (true);
}

private static void runProducer() {
do {
try {
IgniteCache<String, BinaryObject> cache = createLocalCache();
queue.put(cache);
} catch (Exception e) {
throw new RuntimeException(e);
}
} while (true);
}

private static void runConsumer() {
do {
try {
IgniteCache<String, BinaryObject> cache = queue.take();
cache.close();
cache.destroy();
localCacheDestroyCount.incrementAndGet();
} catch (Exception e) {
throw new RuntimeException(e);
}
} while (true);
}

private static Ignite createIgnite() {
IgniteConfiguration iCfg = new IgniteConfiguration();
String workDirectory = System.getProperty(""user.home"") + File.separator + ""ignite"";
iCfg.setWorkDirectory(workDirectory);
System.out.println();
System.out.println(String.format("">>> Starting Ignite on %s; work directory %s ..."", ""MyLeakingNode"", workDirectory));
System.out.println();
final Ignite ignite = Ignition.start(iCfg);
ClusterNode localNode = ignite.cluster().localNode();
System.out.println();
System.out.println(String.format("">>> Ignite started on %s (%s) successfully!"", ""MyLeakingNode"", localNode.id()));
System.out.println();
return ignite;
}

private static IgniteCache<String, BinaryObject> createLocalCache() {
final String cacheName = ""localCache"" + localCacheCreateCount.incrementAndGet();
final CacheConfiguration<String, BinaryObject> cCfg = new CacheConfiguration<>();
cCfg.setName(cacheName);
cCfg.setStoreKeepBinary(true);
cCfg.setCacheMode(CacheMode.LOCAL);
cCfg.setOnheapCacheEnabled(false);
cCfg.setCopyOnRead(false);
cCfg.setBackups(0);
cCfg.setWriteBehindEnabled(false);
cCfg.setReadThrough(false);
cCfg.setReadFromBackup(false);
cCfg.setQueryEntities(Collections.singletonList( new QueryEntity(String.class.getTypeName(), ""LocalEntity"")));
ignite.destroyCache(cacheName); // local cache is not really local - reference can be kept by other nodes if restart during the load happens
return ignite.createCache(cCfg).withKeepBinary();
}



}
{code};;;","07/Mar/18 15:14;zbyszek;on 3 GHz machine with 4 cores one gets OOM after 10 hours. The max heap is set to 3G:;;;","07/Mar/18 15:22;zbyszek;{noformat}
C:\Dev>""C:\Program Files\Java\jdk1.8.0_111\bin\java"" -Xmx3G ""-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.5\lib\idea_rt.jar=4917
1:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2017.2.5\bin"" -Dfile.encoding=UTF-8 -classpath ""C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets
.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_11
1\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\
Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar
;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\
jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files
\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Jav
a\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program
Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Dev\Ig
niteMemLeak2\out\production\IgniteDemo;C:\Dev\IgniteMemLeak2\lib\2.3\cache-api-1.0.0.jar;C:\Dev\IgniteMemLeak2\lib\2.3\commons-codec-1.6.jar;C:\Dev\IgniteMemLea
k2\lib\2.3\h2-1.4.195.jar;C:\Dev\IgniteMemLeak2\lib\2.3\ignite-core-2.3.0.jar;C:\Dev\IgniteMemLeak2\lib\2.3\ignite-indexing-2.3.0.jar;C:\Dev\IgniteMemLeak2\lib\
2.3\lucene-analyzers-common-5.5.2.jar;C:\Dev\IgniteMemLeak2\lib\2.3\lucene-core-5.5.2.jar;C:\Dev\IgniteMemLeak2\lib\2.3\lucene-queryparser-5.5.2.jar"" p1.Demo

>>> Starting Ignite on MyLeakingNode; work directory C:\Users\testuser\ignite ...

Mar 06, 2018 6:12:16 PM java.util.logging.LogManager$RootLogger log
SEVERE: Failed to resolve default logging config file: config/java.util.logging.properties
[18:12:16] __________ ________________
[18:12:16] / _/ ___/ |/ / _/_ __/ __/
[18:12:16] _/ // (7 7 // / / / / _/
[18:12:16] /___/\___/_/|_/___/ /_/ /___/
[18:12:16]
[18:12:16] ver. 2.3.0#20171028-sha1:8add7fd5
[18:12:16] 2017 Copyright(C) Apache Software Foundation
[18:12:16]
[18:12:16] Ignite documentation: http://ignite.apache.org
[18:12:16]
[18:12:16] Quiet mode.
[18:12:16] ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[18:12:16]
[18:12:16] OS: Windows 7 6.1 amd64
[18:12:16] VM information: Java(TM) SE Runtime Environment 1.8.0_111-b14 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.111-b14
[18:12:16] Initial heap size is 256MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[18:12:16] Configured plugins:
[18:12:16] ^-- None
[18:12:16]
[18:12:16] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message qu
eues growth on sender and receiver sides.
[18:12:16] Security status [authentication=off, tls/ssl=off]
[18:12:18] Performance suggestions for grid (fix if possible)
[18:12:18] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[18:12:18] ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[18:12:18] ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[18:12:18] ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[18:12:18] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[18:12:18]
[18:12:18] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[18:12:18]
[18:12:18] Ignite node started OK (id=8219875e)
[18:12:18] Topology snapshot [ver=1, servers=1, clients=0, CPUs=8, heap=2.7GB]

>>> Ignite started on MyLeakingNode (8219875e-97d5-4e0e-852a-15eb83759b7d) successfully!

s
Queue size: 1
Caches created: 387307
Caches destroyed: 387303
Mar 07, 2018 4:20:56 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Error when executing timeout callback: CancelableTask [id=c4ad4810261-a07dab65-3c81-4349-af11-68b9d200e3b3, endTime=1520392859178, period=5000, cancel=f
alse, task=o.a.i.i.processors.cache.query.continuous.CacheContinuousQueryManager$BackupCleaner@1b3cca44]
java.lang.OutOfMemoryError: GC overhead limit exceeded
at java.util.concurrent.ConcurrentSkipListMap.doPut(ConcurrentSkipListMap.java:850)
at java.util.concurrent.ConcurrentSkipListMap.putIfAbsent(ConcurrentSkipListMap.java:1962)
at org.apache.ignite.internal.util.GridConcurrentSkipListSet.add(GridConcurrentSkipListSet.java:143)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor.addTimeoutObject(GridTimeoutProcessor.java:95)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$CancelableTask.onTimeout(GridTimeoutProcessor.java:267)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$TimeoutWorker.body(GridTimeoutProcessor.java:163)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
at java.lang.Thread.run(Thread.java:745)

Mar 07, 2018 4:21:29 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: GridWorker [name=grid-timeout-worker, igniteInstanceName=null, finished=false, hashCode=223614316,
interrupted=false, runner=grid-timeout-worker-#23]
java.lang.OutOfMemoryError: GC overhead limit exceeded
at java.util.concurrent.ConcurrentSkipListMap.doPut(ConcurrentSkipListMap.java:850)
at java.util.concurrent.ConcurrentSkipListMap.putIfAbsent(ConcurrentSkipListMap.java:1962)
at org.apache.ignite.internal.util.GridConcurrentSkipListSet.add(GridConcurrentSkipListSet.java:143)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor.addTimeoutObject(GridTimeoutProcessor.java:95)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$CancelableTask.onTimeout(GridTimeoutProcessor.java:267)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$TimeoutWorker.body(GridTimeoutProcessor.java:163)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
at java.lang.Thread.run(Thread.java:745)

Exception in thread ""grid-timeout-worker-#23"" java.lang.OutOfMemoryError: GC overhead limit exceeded
at java.util.concurrent.ConcurrentSkipListMap.doPut(ConcurrentSkipListMap.java:850)
at java.util.concurrent.ConcurrentSkipListMap.putIfAbsent(ConcurrentSkipListMap.java:1962)
at org.apache.ignite.internal.util.GridConcurrentSkipListSet.add(GridConcurrentSkipListSet.java:143)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor.addTimeoutObject(GridTimeoutProcessor.java:95)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$CancelableTask.onTimeout(GridTimeoutProcessor.java:267)
at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$TimeoutWorker.body(GridTimeoutProcessor.java:163)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
at java.lang.Thread.run(Thread.java:745)
Mar 07, 2018 4:23:36 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Failed to unmarshal discovery custom message.
java.lang.OutOfMemoryError: GC overhead limit exceeded
at java.util.HashMap$KeySet.iterator(HashMap.java:916)
at java.util.HashSet.iterator(HashSet.java:172)
at java.util.AbstractCollection.addAll(AbstractCollection.java:343)
at org.apache.ignite.internal.managers.discovery.DiscoCache.<init>(DiscoCache.java:123)
at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.createDiscoCache(GridDiscoveryManager.java:2280)
at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.access$1700(GridDiscoveryManager.java:160)
at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery0(GridDiscoveryManager.java:712)
at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery(GridDiscoveryManager.java:571)
at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.notifyDiscoveryListener(ServerImpl.java:5463)
at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processCustomMessage(ServerImpl.java:5282)
at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2656)
at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2447)
at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:6648)
at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2533)
at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)

Mar 07, 2018 4:24:13 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Failed to initialize cache. Will try to rollback cache start routine. [cacheName=localCache11251307]
class org.apache.ignite.IgniteCheckedException: Failed to register MBean for component: org.apache.ignite.internal.processors.cache.CacheClusterMetricsMXBeanImp
l@204fbdb1
at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerMbean(GridCacheProcessor.java:3600)
at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createCache(GridCacheProcessor.java:1566)
at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheStart(GridCacheProcessor.java:1799)
at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheChangeRequest(CacheAffinitySharedManager.java:751)
at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onCacheChangeRequest(GridDhtPartitionsExchangeF
uture.java:882)
at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:588)
at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:2279)
at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
at java.util.Arrays.copyOf(Arrays.java:3332)
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448)
at java.lang.StringBuilder.append(StringBuilder.java:136)
at org.apache.ignite.internal.util.GridStringBuilder.a(GridStringBuilder.java:112)
at org.apache.ignite.internal.util.IgniteUtils.makeCacheMBeanName(IgniteUtils.java:4484)
at org.apache.ignite.internal.util.IgniteUtils.registerCacheMBean(IgniteUtils.java:4574)
at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerMbean(GridCacheProcessor.java:3596)
... 8 more

Mar 07, 2018 9:51:20 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1708, name=tcp-disco-sock-reader-#8, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#8"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:51:30 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: IgniteSpiThread [name=tcp-disco-ip-finder-cleaner-#5]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-ip-finder-cleaner-#5"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:51:49 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1706, name=tcp-disco-sock-reader-#6, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#6"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:52:05 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1707, name=tcp-disco-sock-reader-#7, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#7"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:52:37 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1709, name=tcp-disco-sock-reader-#9, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#9"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:53:13 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1711, name=tcp-disco-sock-reader-#11, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#11"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:53:24 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1710, name=tcp-disco-sock-reader-#10, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#10"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:54:45 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1712, name=tcp-disco-sock-reader-#12, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#12"" java.lang.OutOfMemoryError: GC overhead limit exceeded
Mar 07, 2018 9:54:52 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Runtime error caught during grid runnable execution: Socket reader [id=1713, name=tcp-disco-sock-reader-#13, nodeId=null]
java.lang.OutOfMemoryError: GC overhead limit exceeded

Exception in thread ""tcp-disco-sock-reader-#13"" java.lang.OutOfMemoryError: GC overhead limit exceeded
{noformat};;;","19/Apr/18 09:13;githubbot;GitHub user aealeksandrov opened a pull request:

    https://github.com/apache/ignite/pull/3874

    IGNITE-7319: Cancelable future task for backup cleaner should be closed on CacheContinuousQueryManager stop

    When cache is created then new CONTINUOUS_QUERY task is created too. This task should work until it canceled but in Ignite code we don't store the CancelableTask somewhere. After destroying the cache this task continue its work.
    
    Now this issue is fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7319

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3874.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3874
    
----
commit e1826b023834872b8b09fbf820054f2c23a34b25
Author: Andrei Aleksandrov <aealexsandrov@...>
Date:   2018-04-19T09:09:12Z

    IGNITE-7319: Cancelable future task for backup cleaner should be closed on CacheContinuousQueryManager stop

----
;;;","19/Apr/18 09:20;aealeksandrov;[~amashenkov] Couyld you please take a look?;;;","19/Apr/18 12:40;amashenkov;[~aealeksandrov], looks ok for me.
Can be merged.;;;","27/Apr/18 12:24;aealeksandrov;[~agura] Could you please take a look?

Test run results:
https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F3874%2Fhead;;;","08/Jun/18 12:24;agura;[~aealeksandrov] Please, don't use Java asserts in test assertions. Use JUnit assertXxx() methods instead.;;;","08/Jun/18 16:10;aealeksandrov;[~agura] updated. Please check.

 ;;;","09/Jun/18 15:33;agura;LGTM. Merged to master branch. Thanks for contribution.;;;","12/Jun/18 09:12;githubbot;Github user aealeksandrov closed the pull request at:

    https://github.com/apache/ignite/pull/3874
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Iterators could return multiple values of the same key when MVCC is enabled,IGNITE-7314,13127221,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,rkondakov,vozerov,vozerov,26/Dec/17 14:52,27/Aug/18 09:42,14/Jul/23 06:20,01/Feb/18 15:28,,,,,,2.7,,cache,mvcc,,,0,,,,"It MVCC is enabled most of tests in {{IgniteCacheFullApiSelfTestSuite}} works fine. However, they are really *slow*. So slow, that TC cannot cope with them and kills the build after 1h30m of execution.

Root cause: iterators return too much values as they do not use any specific version by default ({{null}} is passed). Essentially, we need to add MVCC support to iterators and ""global"" operations, which use them.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4191,,,,,IGNITE-6353,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-12-26 14:52:52.0,,,,,,,,,,"0|i3oahz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sutable exception should be return as job results when node is about to stop.,IGNITE-7309,13127187,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,guseinov,amashenkov,amashenkov,26/Dec/17 09:17,01/Feb/19 02:16,14/Jul/23 06:20,31/Jan/19 14:58,,,,,,2.8,,compute,general,,,0,newbie,pull-request-available,,"User job can fails with confusing exception when server node is stopping and going to leave the grid. 
We should suppress InterruptedException. If node is stopping then user should see NodeStoppingException.
{code:java}
[org.apache.ignite.internal.processors.job.GridJobWorker] Failed to serialize job response [nodeId=02e1588
c-53eb-454a-99a1-48ac6cb33667, ses=GridJobSessionImpl [ses=GridTaskSessionImpl 
......
org.apache.ignite.IgniteCheckedException: Failed to register class.
  at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9929)
  at org.apache.ignite.internal.processors.job.GridJobWorker.finishJob(GridJobWorker.java:819)
  at org.apache.ignite.internal.processors.job.GridJobWorker.finishJob(GridJobWorker.java:760)
  at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:619)
  at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:483)
  at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
  at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1180)
  at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1899)
  at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1519)
  at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1147)
  at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:119)
  at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1087)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ignite.binary.BinaryObjectException: Failed to register class.
  at org.apache.ignite.internal.binary.BinaryContext.registerUserClassDescriptor(BinaryContext.java:778)
  at org.apache.ignite.internal.binary.BinaryContext.registerClassDescriptor(BinaryContext.java:751)
  at org.apache.ignite.internal.binary.BinaryContext.descriptorForClass(BinaryContext.java:621)
  at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:164)
  at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
  at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
  at org.apache.ignite.internal.binary.GridBinaryMarshaller.marshal(GridBinaryMarshaller.java:239)
  at org.apache.ignite.internal.binary.BinaryMarshaller.marshal0(BinaryMarshaller.java:82)
  at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
  at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9923)
  ... 14 common frames omitted
Caused by: org.apache.ignite.internal.IgniteInterruptedCheckedException: null
  at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:177)
  at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:119)
  at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.tryGetAndPut(GridDhtAtomicCache.java:724)
  at org.apache.ignite.internal.MarshallerContextImpl.registerClassName(MarshallerContextImpl.java:169)
  at org.apache.ignite.internal.MarshallerContextAdapter$1.applyx(MarshallerContextAdapter.java:168)
  at org.apache.ignite.internal.MarshallerContextAdapter$1.applyx(MarshallerContextAdapter.java:166)
  at org.apache.ignite.internal.MarshallerContextAdapter.computeIfAbsent(MarshallerContextAdapter.java:224)
  at org.apache.ignite.internal.MarshallerContextAdapter.registerClass(MarshallerContextAdapter.java:164)
  at org.apache.ignite.internal.binary.BinaryContext.registerUserClassDescriptor(BinaryContext.java:775)
  ... 23 common frames omitted
Caused by: java.lang.InterruptedException: null
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1302)
  at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:161)
  ... 31 common frames omitted
{code}",,amashenkov,dpavlov,githubbot,guseinov,ignitetcbot,ilyak,,,,,,,"alamar commented on pull request #3461: IGNITE-7309 Throw NodeStoppingException if marshaling fails while node stopping
URL: https://github.com/apache/ignite/pull/3461#discussion_r248264635
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/job/GridJobWorker.java
 ##########
 @@ -993,6 +994,23 @@ else if (!internal && ctx.event().isRecordable(EVT_JOB_FAILED))
         }
     }
 
+    /**
+     * This method wraps U.error invocations to check node stopping.
+     * Log message will be skipped if node is stopping and debug is disabled.
+     *
+     * @param msg Message to log using quiet logger.
+     * @param e Optional exception.
+     */
+    private void logError(String msg, @Nullable Throwable e) {
+        if (e != null) {
 
 Review comment:
   Can be rephrased as if (e != null && (log.isDebugEnabled() || !X.hasCause(e, NodeStoppingException.class)))
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jan/19 12:38;githubbot;600","gromtech commented on pull request #3461: IGNITE-7309 Throw NodeStoppingException if marshaling fails while node stopping
URL: https://github.com/apache/ignite/pull/3461#discussion_r251730435
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/job/GridJobWorker.java
 ##########
 @@ -993,6 +994,23 @@ else if (!internal && ctx.event().isRecordable(EVT_JOB_FAILED))
         }
     }
 
+    /**
+     * This method wraps U.error invocations to check node stopping.
+     * Log message will be skipped if node is stopping and debug is disabled.
+     *
+     * @param msg Message to log using quiet logger.
+     * @param e Optional exception.
+     */
+    private void logError(String msg, @Nullable Throwable e) {
+        if (e != null) {
 
 Review comment:
   @alamar, I agree, this will make a method more compact
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/19 08:24;githubbot;600","asfgit commented on pull request #3461: IGNITE-7309 Throw NodeStoppingException if marshaling fails while node stopping
URL: https://github.com/apache/ignite/pull/3461
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 15:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 01 02:16:39 UTC 2019,,,,,,,,,,"0|i3oaaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Feb/18 11:36;githubbot;GitHub user gromtech opened a pull request:

    https://github.com/apache/ignite/pull/3461

    IGNITE-7309 Throw NodeStoppingException if marshaling fails while node stopping

    * Wrapped error log (U.error) at GridJobWorker.onJobFinished to check node stopping
    * Add GridJobWorkerTest

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7309

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3461.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3461
    
----
commit d9ec315c62c542b13844a35617caaa3a4e58ec73
Author: Roman Guseinov <gromcase@...>
Date:   2018-01-31T10:25:58Z

    IGNITE-7309 Throw NodeStoppingException if marshaling fail while node stopping

commit 4f3fd63eddfc76322e38c4bbbc6e6014a3012102
Author: Roman Guseinov <gromcase@...>
Date:   2018-02-01T10:25:25Z

    IGNITE-7309 Added GridJobWorkerTest

----
;;;","02/Feb/18 06:29;guseinov;[~amashenkov], could you please review the PR [https://github.com/apache/ignite/pull/3461] ?

* Wrapped error log (U.error) at GridJobWorker.onJobFinished to check node stopping.

* Added GridJobWorkerTest.

Tests results: [https://ci.ignite.apache.org/viewLog.html?buildId=1071207&tab=queuedBuildOverviewTab]

Thanks. ;;;","06/Feb/18 13:20;guseinov;[~amashenkov] , I added necessary changes to the PR. Please, take a look.

Thanks.;;;","15/Feb/18 10:24;guseinov;[~dmitry.pavlov] , could you please review this PR?

Thanks.;;;","23/May/18 11:10;dpavlov;[~guseinov] I left some comments in PR, could you please address?;;;","01/Jun/18 08:43;guseinov;Hi [~dpavlov], sorry for the delay. There're lots of other jobs... Thanks for your comments. I fixed code style issue and added comments to PR. Please take a look. Thanks a lot.;;;","06/Dec/18 11:49;dpavlov;Hi [~guseinov], is there any news here? I can see the issue is open since Jun 2018, but it is not in Patch Available. ;;;","07/Dec/18 05:12;ignitetcbot;{panel:title=-&gt; Run :: IntelliJ IDEA Inspections: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *-&gt; Run :: IntelliJ IDEA Inspections* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2484009&amp;buildTypeId=IgniteTests24Java8_RunIntelliJIdeaInspections];;;","07/Dec/18 05:56;guseinov;Added a suitable exception if a node stops while running a compute job.;;;","07/Dec/18 06:02;guseinov;Hi [~dpavlov] . Looks like I forgot to change the status of the ticket... PR conflicts are resolved and TC was rerun. Current status of the ticket is PATCH AVAILABLE. Please take a look.

Thanks.;;;","16/Jan/19 12:39;ilyak;[~guseinov] I have reviewed proposed change, asked to simplify if condition and write test if possible.;;;","29/Jan/19 08:32;guseinov;[~ilyak], thank you for the review. I agree we can simplify if condition. I created a test before, but [~amashenkov] asked me to remove it arguing this is unnecessary for such a fix. If you think we really need it I will restore it.;;;","29/Jan/19 09:22;ilyak;[~guseinov] okay, let's just fix the condition. Can you do that?;;;","29/Jan/19 09:44;guseinov;[~ilyak], sure );;;","31/Jan/19 14:39;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2959375&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","31/Jan/19 14:58;ilyak;[~guseinov] thank you for your contribution! I have merged it to master.;;;","01/Feb/19 02:16;guseinov;[~ilyak], thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Caches info is updated on cluster change finish message in discovery thread,IGNITE-7308,13127186,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,26/Dec/17 09:14,14/Feb/18 08:44,14/Jul/23 06:20,14/Feb/18 08:44,2.3,,,,,2.4,,,,,,0,IEP-4,Phase-1,,"This leads to an assertion on 'slow' clients when exchange in the cluster finished before exchange on the client:
{code}
Exception in thread ""exchange-worker-#188%database.IgniteDbBaselineTopologySelfTest14%"" java.lang.AssertionError: CacheGroupDescriptor [grpId=94416770, grpName=null, startTopVer=null, rcvdFrom=5a916a46-7d5a-400c-a9bc-5be543400000, deploymentId=20ec5f19061-8097d64f-4969-4114-bc70-eb3c477953d1, caches={cache=94416770}, rcvdFromVer=null, persistenceEnabled=true, cacheName=cache]
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager$CachesInfo.updateCachesInfo(CacheAffinitySharedManager.java:2620)
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheChangeRequest(CacheAffinitySharedManager.java:743)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onClusterStateChangeRequest(GridDhtPartitionsExchangeFuture.java:842)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:595)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:2284)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
{code}",,agoncharuk,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 14 08:44:15 UTC 2018,,,,,,,,,,"0|i3oaa7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Dec/17 12:43;sboikov;I recall that this is updated in discovery thread since 'registeredCaches'  (which is stored in ClusterCachesInfo) is also updated in discovery thread. It is not possible just move caches.init to exchange, since we need 'registeredCaches' state at the moment node was started/activated. I think correct fix can be save 'registeredCaches' somewhere (e.g. in ExchangeActions) and update CacheAffinitySharedManager.caches using this saved state.;;;","26/Dec/17 18:00;agoncharuk;Agree, I will try to capture the context and pass it to the exchange;;;","14/Feb/18 08:44;agoncharuk;Fixed as a part of IEP-4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect force key request processing when MVCC is enabled,IGNITE-7306,13127179,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,rkondakov,vozerov,vozerov,26/Dec/17 08:38,16/Aug/18 15:35,14/Jul/23 06:20,16/May/18 15:21,,,,,,2.7,,cache,mvcc,,,0,,,,"Reproducer: {{IgniteCacheMultiTxLockSelfTest#testExplicitLockManyKeys}}
Root cause: when {{GridDhtForceKeysRequest}} is processed locally, we obtain {{GridCacheEntryInfo}} through {{GridCacheMapEntry.info}}. Returned instance is unaware of MVCC version. Need to return {{GridCacheMvccEntryInfo}} instead.

{code}
java.lang.AssertionError
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.mvccInitialValue(IgniteCacheOffheapManagerImpl.java:1433)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.mvccInitialValue(IgniteCacheOffheapManagerImpl.java:396)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.initialValue(GridCacheMapEntry.java:2624)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtForceKeysFuture$MiniFuture.onResult(GridDhtForceKeysFuture.java:537)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtForceKeysFuture.onResult(GridDhtForceKeysFuture.java:199)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter.processForceKeyResponse(GridDhtCacheAdapter.java:176)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$11.onMessage(GridDhtTransactionalCacheAdapter.java:193)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$11.onMessage(GridDhtTransactionalCacheAdapter.java:191)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter$MessageHandler.apply(GridDhtCacheAdapter.java:1406)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter$MessageHandler.apply(GridDhtCacheAdapter.java:1388)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1060)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:579)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1567)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1195)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:128)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1092)
	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:499)
	at java.lang.Thread.run(Thread.java:748)
{code}",,dpavlov,rkondakov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,,,,IGNITE-8371,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 16 15:21:16 UTC 2018,,,,,,,,,,"0|i3oa8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/18 12:42;dpavlov;Please mention patch which is available.;;;","16/May/18 15:21;rkondakov;Fixed along with IGNITE-7806 SQL TX: Backup update protocol;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL TX: Failed to query INFORMATIONAL_SCHEMA,IGNITE-7302,13127107,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,vozerov,vozerov,25/Dec/17 12:57,24/Jul/19 16:20,14/Jul/23 06:20,27/Dec/17 13:06,,,,,,2.7,,mvcc,sql,,,0,,,,"{code}
javax.cache.CacheException: class org.apache.ignite.IgniteException: Unsupported query: Unexpected Table implementation [cls=MetaTable]
    at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.assert0(GridSqlQueryParser.java:1876)
    at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.parseTable(GridSqlQueryParser.java:612)
    at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.parseTableFilter(GridSqlQueryParser.java:565)
    at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.parseSelect(GridSqlQueryParser.java:665)
    at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.parseQuery(GridSqlQueryParser.java:1539)
    at org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.parse(GridSqlQueryParser.java:1490)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.mvccTracker(IgniteH2Indexing.java:1294)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryLocalSqlFields(IgniteH2Indexing.java:926)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryLocalSqlFields(IgniteH2Indexing.java:870)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryLocalSqlFields(IgniteH2Indexing.java:1163)
    at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:1951)
    at org.apache.ignite.internal.processors.query.GridQueryProcessor$4.applyx(GridQueryProcessor.java:1936)
    at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
    at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2521)
    at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFields(GridQueryProcessor.java:1968)
    at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.query(IgniteCacheProxyImpl.java:585)
    at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.query(IgniteCacheProxyImpl.java:560)
    at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.query(GatewayProtectedCacheProxy.java:382)
    at org.apache.ignite.internal.processors.cache.local.IgniteCacheLocalFieldsQuerySelfTest.testInformationSchema(IgniteCacheLocalFieldsQuerySelfTest.java:49)
{code}",,githubbot,vozerov,,,,,,,,,,,"dspavlov commented on issue #3294: IGNITE-7302
URL: https://github.com/apache/ignite/pull/3294#issuecomment-514701495
 
 
   
   IGNITE-7302 | Closed
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:20;githubbot;600","dspavlov commented on pull request #3294: IGNITE-7302
URL: https://github.com/apache/ignite/pull/3294
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 27 09:42:35 UTC 2017,,,,,,,,,,"0|i3o9sn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Dec/17 09:42;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/3294

    IGNITE-7302

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7302

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3294.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3294
    
----
commit f6e982540e65ab17d439dba990794f35616a30dd
Author: sboikov <sboikov@...>
Date:   2017-08-30T09:45:40Z

    ignite-3478

commit 275a85db5cd6923b36126166ae99b15e876192be
Author: sboikov <sboikov@...>
Date:   2017-08-31T07:44:07Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit b7b9089f0102b8cab9942a9c887d93e9f26cc7d2
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:00:36Z

    disco cache cleanup

commit 855c2d45794c300d41e386b4e6fa40736cc3e40d
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:09:58Z

    Merge branch 'ignite-3478-1' into ignite-3478

commit 08be7310a93d3ce455215b97cf8ab1a2c3f0ab31
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:52:23Z

    ignite-3478

commit fce2e31f0fd2f4f6a9944422e40408a0c65cfe90
Author: sboikov <sboikov@...>
Date:   2017-09-04T08:13:50Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit d3c049952384750c5543a9f88b383c033ef74096
Author: sboikov <sboikov@...>
Date:   2017-09-04T08:52:11Z

    ignite-3478

commit e71ce1937a18dd32448e92b1038dc48d4cb6f8ab
Author: sboikov <sboikov@...>
Date:   2017-09-04T10:16:03Z

    ignite-3478

commit 5fac5b0965e97f8951e16e10ca9229a2e78ddb0c
Author: sboikov <sboikov@...>
Date:   2017-09-05T10:16:44Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit 2e0c9c08e046e8d6af1b5358d9053eae999b1fb4
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:30:55Z

    ignite-3478

commit e1e07ffdf2d711ba3e72f316f5a3970eff27372e
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:31:14Z

    ignite-3478

commit cbada3934a386668da0b11d4de7d0f58a4d04dfe
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:49:49Z

    ignite-3484

commit 5a82c68dcd1927bb6fded8b7def38c91ff6e145b
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:59:49Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit bc9134c94b7a738dc1664e96ca6eabb059f1c268
Author: sboikov <sboikov@...>
Date:   2017-09-05T12:03:39Z

    Merge branch 'ignite-3478' into ignite-3484
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractDataInnerIO.java

commit b4bfcde78825c6517232e49d389bdb5de19f05a9
Author: sboikov <sboikov@...>
Date:   2017-09-05T12:27:51Z

    ignite-3484

commit 43834aaab9e2c3cd5fdd55289fdc4a9ff8ab6599
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:13:00Z

    ignite-3478

commit d1b828095713fcadfa260cf94fef01b42a1b12fd
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:13:33Z

    Merge branch 'ignite-3478' into ignite-3484

commit 6be6779b6336c36cd71eef0a25199a6a877ce6b5
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:47:11Z

    ignite-3484

commit e3bba83256c1eb53c4b40fbd9ddba47fcf9d58d5
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:10:26Z

    ignite-3484

commit dd0afb28466094b801506da8afa3601bfaebd853
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:30:04Z

    ignite-3484

commit 27b87b413348b03986a463551db24b7726321732
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit dcaf8801accd6ee089849a82b2ccd558aec81895
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:30Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit c966451d0bf7059575de92bcfae43d72096ebce4
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:27:04Z

    Merge branch 'ignite-3478' into ignite-3484

commit 91b9911731a387a3199ddbbc22704bc14af09995
Author: sboikov <sboikov@...>
Date:   2017-09-06T09:22:22Z

    ignite-3484

commit e40b4d9dcd6fe6c1cd2640bdd7116ca5a08ed781
Author: sboikov <sboikov@...>
Date:   2017-09-07T09:12:32Z

    ignite-3484

commit 41a1c571e6ba1765941e2f1679dc4ac1582275c4
Author: sboikov <sboikov@...>
Date:   2017-09-08T07:55:24Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3484

commit 1626130801dc330bcaf693f46906f6564cce6802
Author: sboikov <sboikov@...>
Date:   2017-09-08T08:04:57Z

    ignite-3484

commit 91bbb7cd24f38a38e2e65fc3ebf5637572b11b25
Author: sboikov <sboikov@...>
Date:   2017-09-08T12:34:52Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxPrepareFutureAdapter.java

commit 085a3219088bc1610d1928c437f075a6fb9a4f9b
Author: sboikov <sboikov@...>
Date:   2017-09-08T13:02:16Z

    ignite-6149

commit c6f894817ef063984cee1ea886313eecc8da3be0
Author: sboikov <sboikov@...>
Date:   2017-09-11T13:51:11Z

    ignite-6149

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: error on web agent start in case if demo is opened in browser,IGNITE-7298,13127097,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,pkonstantinov,pkonstantinov,25/Dec/17 10:25,02/Jul/18 02:56,14/Jul/23 06:20,29/Jun/18 13:24,,,,,,2.7,,wizards,,,,0,,,,"{code}
[ERROR][demo-nodes-start-0][] Failed to resolve default logging config file: config/java.util.logging.properties
Console logging handler is not configured.
{code}",,anovikov,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 02 02:56:29 UTC 2018,,,,,,,,,,"0|i3o9qn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/18 10:45;vsisko;Fixed error in log. Test on windows and Linux.;;;","27/Apr/18 02:14;pkonstantinov;Here is what I see when I start console from the branch ignite-7298
{code}
[2018-04-27 09:10:29,927][INFO ][main][AgentLauncher] Starting Apache Ignite Web Console Agent...

Agent configuration:
User's security tokens        : ****************3W5D
URI to Ignite node REST server: http://localhost:8080
URI to Ignite Console server  : http://192.168.1.221
Path to agent property file   : default.properties
Path to JDBC drivers folder   : C:\work\ignite-web-agent-9.9.9\jdbc-drivers
Demo mode                     : enabled

[2018-04-27 09:10:30,951][INFO ][main][AgentLauncher] Connecting to: http://192.168.1.221
[2018-04-27 09:10:31,035][INFO ][EventThread][AgentLauncher] Connection established.
[2018-04-27 09:10:31,120][INFO ][EventThread][AgentLauncher] Authentication success.
[2018-04-27 09:10:31,167][INFO ][pool-4-thread-1][AgentClusterDemo] DEMO: Starting embedded nodes for demo...
[2018-04-27 09:10:32,854][ERROR][demo-nodes-start-0][] Failed to resolve default logging config file: config/java.util.logging.properties
Console logging handler is not configured.
{code};;;","29/May/18 07:11;vsisko;Not reproduced. Please check location of java.util.logging.properties in your build.;;;","01/Jun/18 04:32;pkonstantinov;The reason of the error is that sh-script has the row 'JVM_OPTS=""${JVM_OPTS} -Djava.util.logging.config.file=java.util.logging.properties -Djava.net.useSystemProxies=true""' but the bat-script has no. Please fix the bat-script.;;;","07/Jun/18 03:28;vsisko;Fixed for Windows.;;;","07/Jun/18 07:23;pkonstantinov;The issue has gone.;;;","14/Jun/18 06:53;kuaw26;Looks good. Merged to master.;;;","25/Jun/18 03:43;anovikov;I think this fix is incorrect, because agent use slf4j(over log4j) logger and now embedded demo node use java.util.logging. This can be lead to problems with rolling logs file, race in logs.

Correct fix will be:

{code}

IgniteConfiguration cfg = new IgniteConfiguration();

cfg.setGridLogger(new Slf4jLogger());

{code};;;","25/Jun/18 04:10;anovikov;[~pkonstantinov], please retest in branch.;;;","25/Jun/18 09:44;pkonstantinov;[~anovikov] Demo failed to start - no errors in the log.
Also, the page continuously shows error ""Failed to execute request on cluster."";;;","26/Jun/18 03:45;anovikov;Demo mode was broken after merge of https://issues.apache.org/jira/browse/IGNITE-8428. Please await fix, and try again.;;;","29/Jun/18 13:23;pkonstantinov;Works right, no errors in the log.;;;","02/Jul/18 02:56;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc warning for RProp in MLP,IGNITE-7297,13127088,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,chief,chief,25/Dec/17 08:45,25/Dec/17 09:37,14/Jul/23 06:20,25/Dec/17 09:37,,,,,,2.4,,ml,,,,0,,,,"[Step 7/7] [WARNING] /data/teamcity/work/bd85361428dcdb1/modules/ml/src/main/java/org/apache/ignite/ml/nn/updaters/RPropUpdater.java:32: warning - Tag @see: missing final '>': ""<a href=""https://paginas.fe.up.pt/~ee02162/dissertacao/RPROP%20paper.pdf"">https://paginas.fe.up.pt/~ee02162/dissertacao/RPROP%20paper.pdf</a>.""

[Step 7/7] [WARNING] /data/teamcity/work/bd85361428dcdb1/modules/ml/src/main/java/org/apache/ignite/ml/nn/updaters/RPropUpdaterParams.java:28: warning - Tag @see: missing final '>': ""<a href=""https://paginas.fe.up.pt/~ee02162/dissertacao/RPROP%20paper.pdf"">https://paginas.fe.up.pt/~ee02162/dissertacao/RPROP%20paper.pdf</a>.""",,chief,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6774,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 25 09:37:43 UTC 2017,,,,,,,,,,"0|i3o9on:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Dec/17 09:37;chief;reviewed and merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log of thin client is not disabled in special case,IGNITE-7295,13127066,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,pkonstantinov,vsisko,vsisko,25/Dec/17 03:21,29/Jan/18 08:19,14/Jul/23 06:20,12/Jan/18 04:26,2.3,,,,,2.4,,thin client,,,,0,,,,"Should be possibility to enable/disable thin client log.

We try to disable thin client log in GridClientImpl.java. 
If log4j is located in a classpath log will be showed (f.e. when thin client is run from Windows console) ",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 29 08:19:37 UTC 2018,,,,,,,,,,"0|i3o9jr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Dec/17 03:40;vsisko;Fixed disabling of log in thin client.
Added IGNITE_GRID_CLIENT_LOG_ENABLED environment variable to enable log of thin client.;;;","10/Jan/18 08:23;pkonstantinov;Tested. Client output printed out only if IGNITE_GRID_CLIENT_LOG_ENABLED = true
To test run snapshot utility and try to execute any command (f.e. list);;;","12/Jan/18 04:26;kuaw26;Looks good. Merged to master.;;;","29/Jan/18 08:19;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Services do not work on .NET Core,IGNITE-7281,13126538,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,rokhin,ptupitsyn,ptupitsyn,21/Dec/17 12:21,20/Mar/18 08:48,14/Jul/23 06:20,11/Jan/18 13:31,2.4,,,,,2.4,,platforms,,,,0,.NET,xplat,,"We rely on {{System.Runtime.Remoting.Proxies.RealProxy}} for dynamic proxy generation. However, remoting is not supported on .NET Core.

Investigate whether we can get rid of RealProxy and generate runtime proxies manually. Basically, we need to emit an interface implementation where every method just delegates to our code.",,githubbot,ptupitsyn,rokhin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 13:32:08 UTC 2018,,,,,,,,,,"0|i3o6av:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jan/18 20:34;rokhin;Hi [~ptupitsyn]
May I take this?
Usually I use Reflection.Emit + optional Linq.Expressions for things like this (when 3rd party libraries like Castle.DynamicProxy are not allowed or when performance of proxy is important). Any suggestions or objections?
Should current implementation of ServiceProxy be completely replaced with new one? Or you need special implementation only for .net core?

;;;","04/Jan/18 08:12;ptupitsyn;Hi [~rokhin], yes, you are welcome to take this!
Looks like it is your first Ignite contribution, so please send an email to the dev list as described in https://ignite.apache.org/community/contribute.html#contribute

>  Or you need special implementation only for .net core
I would certainly prefer a single implementation that works on all platforms.;;;","04/Jan/18 08:51;rokhin;[~ptupitsyn]
I've subscribed to mailing list and confirmed email.
However, when I'm sending email with my Jira id to dev@ignite.apache.org, I'm getting response with text of my original email from address like _<my_email>_.invalid .
Is it expected behavior?
;;;","04/Jan/18 13:16;ptupitsyn;[~rokhin] I've replied to your email and added Jira permissions so you can assign this ticket to yourself.

I don't think you should be getting any automatic responses.
By the way, there are two messages from you on the dev list:
http://apache-ignite-developers.2346864.n4.nabble.com/;;;","06/Jan/18 11:20;githubbot;GitHub user AlexeyRokhin opened a pull request:

    https://github.com/apache/ignite/pull/3328

    IGNITE-7281: .NET Core - make Services work through custom proxy.

    Custom proxy generation implemented to exclude Remoting.Proxies

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/AlexeyRokhin/ignite ignite-7281

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3328.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3328
    
----
commit 71fccaa999e913b0f786894e6a783c5d042ad5bb
Author: Alexey Rokhin <arokhin@...>
Date:   2018-01-06T10:17:20Z

    IGNITE-7281: .NET Core - make Services work through custom proxy.

----
;;;","06/Jan/18 23:37;rokhin;Hi [~ptupitsyn]
Seems it is not possible to override non-virtual object.GetType() method as TransparentProxy does.
And there are some tests that test equality of proxy's type and interface type.
Do we really need that equality?;;;","09/Jan/18 08:36;ptupitsyn;[~rokhin] I don't think we need this, let's remove these tests.
By the way, please click ""Start Progress"" when working on the ticket, then ""Submit Patch"" when done.;;;","09/Jan/18 08:38;rokhin;Thanks Pavel, I'll do it.;;;","10/Jan/18 18:25;rokhin;Please review PR: https://github.com/apache/ignite/pull/3328;;;","11/Jan/18 13:30;ptupitsyn;[~rokhin] looks good to me. Awesome contribution, thank you!
I've made some minor changes and included {{ServicesTest}} into DotNetCore project.

Merged to master: {{11508d941ee6f7008538416fc1c7af71e602c9d1}}.;;;","11/Jan/18 13:32;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3328
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL TX: improve JDBC test coverage,IGNITE-7280,13126532,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,vozerov,vozerov,21/Dec/17 12:13,24/Jul/19 16:20,14/Jul/23 06:20,27/Dec/17 11:50,,,,,,2.7,,mvcc,,,,0,,,,"The following cases must be handled:
1) Single update stmt in TX
2) Multiple update stmts in TX
3) Changes to multiple caches in TX
4) Mix of both selects and updates (e.g. get data from select and then build updates based on it)
5) Different operation types - INSERT, UPDATE, MERGE (take in count various DML optimizations to ensure that as much code paths are covered as possible)
6) Batch updates
7) Joins (both co-located and distributed)
8) Different cache modes - PARTITIONED, REPLICATED
9) Different backup counts
10) Communication with client node vs communication with server node
11) Both implicit and explicit transactions",,githubbot,vozerov,,,,,,,,,,,"dspavlov commented on issue #3293: IGNITE-7280
URL: https://github.com/apache/ignite/pull/3293#issuecomment-514701399
 
 
   
   IGNITE-7280 | Closed
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:20;githubbot;600","dspavlov commented on pull request #3293: IGNITE-7280
URL: https://github.com/apache/ignite/pull/3293
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,IGNITE-4192,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 27 09:23:03 UTC 2017,,,,,,,,,,"0|i3o69j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Dec/17 09:23;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/3293

    IGNITE-7280

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7280

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3293.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3293
    
----
commit f6e982540e65ab17d439dba990794f35616a30dd
Author: sboikov <sboikov@...>
Date:   2017-08-30T09:45:40Z

    ignite-3478

commit 275a85db5cd6923b36126166ae99b15e876192be
Author: sboikov <sboikov@...>
Date:   2017-08-31T07:44:07Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit b7b9089f0102b8cab9942a9c887d93e9f26cc7d2
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:00:36Z

    disco cache cleanup

commit 855c2d45794c300d41e386b4e6fa40736cc3e40d
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:09:58Z

    Merge branch 'ignite-3478-1' into ignite-3478

commit 08be7310a93d3ce455215b97cf8ab1a2c3f0ab31
Author: sboikov <sboikov@...>
Date:   2017-08-31T09:52:23Z

    ignite-3478

commit fce2e31f0fd2f4f6a9944422e40408a0c65cfe90
Author: sboikov <sboikov@...>
Date:   2017-09-04T08:13:50Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit d3c049952384750c5543a9f88b383c033ef74096
Author: sboikov <sboikov@...>
Date:   2017-09-04T08:52:11Z

    ignite-3478

commit e71ce1937a18dd32448e92b1038dc48d4cb6f8ab
Author: sboikov <sboikov@...>
Date:   2017-09-04T10:16:03Z

    ignite-3478

commit 5fac5b0965e97f8951e16e10ca9229a2e78ddb0c
Author: sboikov <sboikov@...>
Date:   2017-09-05T10:16:44Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit 2e0c9c08e046e8d6af1b5358d9053eae999b1fb4
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:30:55Z

    ignite-3478

commit e1e07ffdf2d711ba3e72f316f5a3970eff27372e
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:31:14Z

    ignite-3478

commit cbada3934a386668da0b11d4de7d0f58a4d04dfe
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:49:49Z

    ignite-3484

commit 5a82c68dcd1927bb6fded8b7def38c91ff6e145b
Author: sboikov <sboikov@...>
Date:   2017-09-05T11:59:49Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit bc9134c94b7a738dc1664e96ca6eabb059f1c268
Author: sboikov <sboikov@...>
Date:   2017-09-05T12:03:39Z

    Merge branch 'ignite-3478' into ignite-3484
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractDataInnerIO.java

commit b4bfcde78825c6517232e49d389bdb5de19f05a9
Author: sboikov <sboikov@...>
Date:   2017-09-05T12:27:51Z

    ignite-3484

commit 43834aaab9e2c3cd5fdd55289fdc4a9ff8ab6599
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:13:00Z

    ignite-3478

commit d1b828095713fcadfa260cf94fef01b42a1b12fd
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:13:33Z

    Merge branch 'ignite-3478' into ignite-3484

commit 6be6779b6336c36cd71eef0a25199a6a877ce6b5
Author: sboikov <sboikov@...>
Date:   2017-09-05T13:47:11Z

    ignite-3484

commit e3bba83256c1eb53c4b40fbd9ddba47fcf9d58d5
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:10:26Z

    ignite-3484

commit dd0afb28466094b801506da8afa3601bfaebd853
Author: sboikov <sboikov@...>
Date:   2017-09-06T07:30:04Z

    ignite-3484

commit 27b87b413348b03986a463551db24b7726321732
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit dcaf8801accd6ee089849a82b2ccd558aec81895
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:19:30Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit c966451d0bf7059575de92bcfae43d72096ebce4
Author: sboikov <sboikov@...>
Date:   2017-09-06T08:27:04Z

    Merge branch 'ignite-3478' into ignite-3484

commit 91b9911731a387a3199ddbbc22704bc14af09995
Author: sboikov <sboikov@...>
Date:   2017-09-06T09:22:22Z

    ignite-3484

commit e40b4d9dcd6fe6c1cd2640bdd7116ca5a08ed781
Author: sboikov <sboikov@...>
Date:   2017-09-07T09:12:32Z

    ignite-3484

commit 41a1c571e6ba1765941e2f1679dc4ac1582275c4
Author: sboikov <sboikov@...>
Date:   2017-09-08T07:55:24Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3484

commit 1626130801dc330bcaf693f46906f6564cce6802
Author: sboikov <sboikov@...>
Date:   2017-09-08T08:04:57Z

    ignite-3484

commit 91bbb7cd24f38a38e2e65fc3ebf5637572b11b25
Author: sboikov <sboikov@...>
Date:   2017-09-08T12:34:52Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxPrepareFutureAdapter.java

commit 085a3219088bc1610d1928c437f075a6fb9a4f9b
Author: sboikov <sboikov@...>
Date:   2017-09-08T13:02:16Z

    ignite-6149

commit c6f894817ef063984cee1ea886313eecc8da3be0
Author: sboikov <sboikov@...>
Date:   2017-09-11T13:51:11Z

    ignite-6149

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node failed to recover partition from WAL on unstable topology,IGNITE-7278,13126522,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,DmitriyGovorukhin,amashenkov,amashenkov,21/Dec/17 11:02,01/Aug/19 22:10,14/Jul/23 06:20,23/Jan/18 15:31,,,,,,2.4,,persistence,,,,1,,,,"The use case is:
-Grid with partitioned cache with 2 backups (or replicated)
-Node-1 is killed in the middle of checkpoint and started again.
-Node-1 detects unfinished checkpoint and tries to recover it.
-At this point Node-2 is killed while node-1 recovering is in progress.
-Node-1 fails with AssertionError.

PFA logs, parsed WAL, reproducer.

Can be reproduced with IgnitePdsContinuousRestartTest with minor changes,
we have to have 2 nodes flapping and kill nodes ungracefully.",,agoncharuk,alexey.tank2,amashenkov,githubbot,ilyak,xtern,,,,,,,"dspavlov commented on issue #3408: IGNITE-7278-2
URL: https://github.com/apache/ignite/pull/3408#issuecomment-517476324
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600","dspavlov commented on pull request #3408: IGNITE-7278-2
URL: https://github.com/apache/ignite/pull/3408
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Dec/17 11:02;amashenkov;page_corrupted2.tar.gz;https://issues.apache.org/jira/secure/attachment/12903213/page_corrupted2.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 23 15:31:47 UTC 2018,,,,,,,,,,"0|i3o67b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Dec/17 10:08;ilyak;See also ""Partition eviction failed, this can cause grid hang"" letter on userlist, it contains description of a very similar problem to what I have investigated.;;;","26/Dec/17 11:57;ilyak;http://apache-ignite-users.70518.x6.nabble.com/Partition-eviction-failed-this-can-cause-grid-hang-Caused-by-java-lang-IllegalStateException-Failed--tc19122.html;;;","19/Jan/18 10:08;ilyak;We have located at least one reason for ""Failed to get page IO instance"" errors:
{code:java}
Failed to get page store for the given cache ID (cache has not been started): -244919260
 at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.getStore(FilePageStoreManager.java:619)
 at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.read(FilePageStoreManager.java:272)
 at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.read(FilePageStoreManager.java:259)
 at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl.acquirePage(PageMemoryImpl.java:613){code}
There looks to be 2 thing wrong:
 * Insufficient locking on cache delete.
 * Exceptions in acquirePage leading to data corruption on disk.;;;","19/Jan/18 15:18;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/3408

    IGNITE-7278-2

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7278-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3408.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3408
    
----
commit 9755dd25022082be9ce7e175aeeab57e4a614373
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2018-01-19T15:12:54Z

    IGNITE-7278 fix page corruption on node restart

commit 2c2345fb97a2e8d7c0da7711b3c5198ee076dc69
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2018-01-19T15:16:58Z

    Merge branch 'master' into ignite-7278-2

----
;;;","23/Jan/18 15:31;agoncharuk;Thanks, Dmitriy, merged your changes to master and ignite-2.4.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC thin driver may list table name twice.,IGNITE-7277,13126517,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,slava.koptilin,slava.koptilin,21/Dec/17 10:35,10/Jan/18 12:57,14/Jul/23 06:20,10/Jan/18 12:55,2.3,,,,,2.4,,jdbc,sql,,,0,,,,"JDBC thin driver duplicates table name in case of using {{CacheConfiguration.setIndexedTypes()}}

{code}
    CacheConfiguration<?, ?> cfg = new CacheConfiguration<>(""CACHE_NAME"").setSqlSchema(""PUBLIC"");
    cfg.setIndexedTypes(Long.class, Person.class);
    IgniteCache<?, ?> cachePerson = ignite.getOrCreateCache(cfg);
{code}

{code:title=sqlline output|borderStyle=solid}
+--------------------------------+--------------------------------+--------------------------------+--------------------------------+
|           TABLE_CAT            |          TABLE_SCHEM           |           TABLE_NAME           |           TABLE_TYPE           |
+--------------------------------+--------------------------------+--------------------------------+--------------------------------+
|                                | PUBLIC                         | PERSON                         | TABLE                          |
|                                | PUBLIC                         | PERSON                         | TABLE                          |
+--------------------------------+--------------------------------+--------------------------------+--------------------------------+
{code}

On the other hand, the following approach to create a table works as expected
{code}
    cache.query(new SqlFieldsQuery(
                ""CREATE TABLE city (id LONG PRIMARY KEY, name VARCHAR) WITH \""template=partitioned\""""));
{code}

Initial discussion on SO: https://stackoverflow.com/questions/47869429/duplicate-table-show-using-table-in-sqlline-sh",,githubbot,khaerul.rizal,slava.koptilin,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 10 12:57:54 UTC 2018,,,,,,,,,,"0|i3o667:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 15:43;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/3341

    IGNITE-7277: override equals() & hashCode() methods for JdbcTableMeta…

    … to prevent tables duplication at the tables metadata result set.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7277

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3341.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3341
    
----
commit ab93df250dcbe3b15c65d757e9d8746aa6ce9c8a
Author: tledkov-gridgain <tledkov@...>
Date:   2018-01-09T15:41:36Z

    IGNITE-7277: override equals() & hashCode() methods for JdbcTableMeta to prevent tables duplication at the tables metadata result set.

----
;;;","09/Jan/18 16:03;tledkov-gridgain;[~vozerov], please review the patch.
Tests are OK.;;;","10/Jan/18 12:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3341
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Admin panel: Grant\Revoke menu item text doesn't change,IGNITE-7275,13126484,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,alexdel,alexdel,21/Dec/17 07:35,22/Jan/18 04:23,14/Jul/23 06:20,12/Jan/18 07:17,,,,,,2.4,,wizards,,,,0,,,,"# select any ordinary user and Grant admin rights - admin rights were successfully granted
# open Action menu - menu item text still says 'Grant....' but should be 'Revoke...'
# select another user then select prev user - only after that menu item become has right text",,alexdel,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 22 04:23:44 UTC 2018,,,,,,,,,,"0|i3o5yv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/17 08:40;alexdel;Fixed adming toggling. Please test.;;;","09/Jan/18 03:43;pkonstantinov;Tested;;;","12/Jan/18 07:17;kuaw26;Looks good. Merged to master.;;;","22/Jan/18 04:23;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UPDATE and DELETE statements do not work through thin JDBC work in MVCC mode,IGNITE-7271,13126384,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,vozerov,vozerov,20/Dec/17 20:51,16/Aug/18 15:34,14/Jul/23 06:20,21/Dec/17 16:58,,,,,,2.7,,jdbc,mvcc,sql,,0,,,,See relevant failures JDBC suite.,,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-12-20 20:51:21.0,,,,,,,,,,"0|i3o5cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix transactional inserts.,IGNITE-7267,13126326,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,20/Dec/17 16:09,16/Aug/18 15:34,14/Jul/23 06:20,20/Dec/17 17:20,,,,,,2.7,,mvcc,sql,,,0,,,,Inserts optimisation (IGNITE-4490) breaks transactional inserts. Need to rework the feature.,,gvvinblade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4191,,,,,,,,,,,,,,,,,IGNITE-7300,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-12-20 16:09:53.0,,,,,,,,,,"0|i3o4zr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BPlusTreeSelfTest.testIterateConcurrentPutRemove_1 fails,IGNITE-7265,13126290,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergi,vozerov,vozerov,20/Dec/17 13:31,02/Feb/19 07:50,14/Jul/23 06:20,02/Feb/19 07:49,,,,,,2.8,,sql,,,,0,pagememory,,,"{code}
java.lang.AssertionError: Assertion error on row: 26

	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.doPut(BPlusTree.java:2221)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.put(BPlusTree.java:2156)
	at org.apache.ignite.internal.processors.database.BPlusTreeSelfTest.iterateConcurrentPutRemove(BPlusTreeSelfTest.java:2202)
	at org.apache.ignite.internal.processors.database.BPlusTreeSelfTest.testIterateConcurrentPutRemove_1(BPlusTreeSelfTest.java:2169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2008)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1923)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.AssertionError: 27
	at org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusMetaIO.setLevelsCount(BPlusMetaIO.java:98)
	at org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusMetaIO.addRoot(BPlusMetaIO.java:155)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$AddRoot.run(BPlusTree.java:661)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$AddRoot.run(BPlusTree.java:650)
	at org.apache.ignite.internal.processors.cache.persistence.tree.util.PageHandler.writePage(PageHandler.java:277)
	at org.apache.ignite.internal.processors.cache.persistence.DataStructure.write(DataStructure.java:241)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.access$10500(BPlusTree.java:82)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Put.insertWithSplit(BPlusTree.java:3073)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Put.insert(BPlusTree.java:2949)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Put.access$2500(BPlusTree.java:2831)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Insert.run0(BPlusTree.java:420)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Insert.run0(BPlusTree.java:401)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$GetPageHandler.run(BPlusTree.java:5153)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$GetPageHandler.run(BPlusTree.java:5138)
	at org.apache.ignite.internal.processors.cache.persistence.tree.util.PageHandler.writePage(PageHandler.java:342)
	at org.apache.ignite.internal.processors.cache.persistence.DataStructure.write(DataStructure.java:261)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.access$11100(BPlusTree.java:82)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Put.tryInsert(BPlusTree.java:3143)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Put.access$7500(BPlusTree.java:2831)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.putDown(BPlusTree.java:2464)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.doPut(BPlusTree.java:2185)
	... 12 more
{code}",,agoncharuk,gvvinblade,sergi,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Feb 02 07:50:23 UTC 2019,,,,,,,,,,"0|i3oa9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Aug/18 16:00;agoncharuk;Looks like MAX_PER_PAGE is handled incorrectly when MAX_PER_PAGE is equal to 1 - if the tree is printed during the test, there are a lot of empty inner pages.;;;","02/Feb/19 07:49;sergi;Single key per page is a degenerate case: it is very hard to merge pages in a tree because
to merge we need to remove a split key from a parent page and add it to a back page, but this
is impossible if we already have a key in a back page, thus we will have lots of empty routing pages.
This way the tree grows faster than shrinks and gets out of height limit of 26 (for this page size) quickly.

Reduced number of keys to 26 for this test.;;;","02/Feb/19 07:50;sergi;merged to master: 9e47ee55f30b16083766d0766bacdf10acce8d3e;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Daemon-mode Ignite node should not open&listen client port (10800),IGNITE-7263,13126273,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,pvinokurov,alexey.tank2,alexey.tank2,20/Dec/17 12:52,21/Feb/18 17:04,14/Jul/23 06:20,20/Feb/18 08:16,2.1,,,,,2.5,,thin client,visor,,,0,,,,"When I run a Visor console with default configuration file it opens a default port (10800) for ODBC driver connection (and for thin JDBC, and for new ""thin"" client).
Then I run several Ignite nodes.

So after that, the ODBC driver with default settings goes directly to a Visor (daemon-mode Ignite) and does not able to get any data (daemon-mode Ignite does not keep any data)
It is better to avoid such situation.
",,alexey.tank2,dpavlov,githubbot,pvinokurov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7780,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 21 16:53:35 UTC 2018,,,,,,,,,,"0|i3o4nz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/18 13:40;githubbot;GitHub user pvinokurov opened a pull request:

    https://github.com/apache/ignite/pull/3491

    IGNITE-7263 Ignore client configuration for daemon node

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7263

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3491.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3491
    
----
commit 4a1b6b874cc1b39ce3f10ada4c824dfc82c999c6
Author: pvinokurov <vinokurov.pasha@...>
Date:   2018-02-08T13:34:52Z

    IGNITE-7263 Ignore client configuration for daemon node

----
;;;","12/Feb/18 10:29;pvinokurov;[~dpavlov], Please review my changes;;;","12/Feb/18 20:33;dpavlov;[~pvinokurov], could you please share TC run results?;;;","13/Feb/18 07:52;pvinokurov;[~dpavlov],

 https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F3491%2Fmerge;;;","19/Feb/18 16:23;dpavlov;Hi [~vozerov], 

I've checked TC results and code style. 

Could you please confirm we can simply ignore daemon node in ClientListenerProcessor.java, line 82;;;","19/Feb/18 16:34;vozerov;[~dpavlov], [~pvinokurov], patch looks good to me.;;;","20/Feb/18 08:19;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3491
;;;","21/Feb/18 14:34;dpavlov;[~pvinokurov], test which merged to master does not work

testJdbcConnectionDisabledForDaemon
https://ci.ignite.apache.org/viewLog.html?buildId=1103998&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteBinaryObjectsSimpleMapperQueries

could you please address it?;;;","21/Feb/18 16:53;pvinokurov;[~dpavlov], I fixed test  in [https://github.com/apache/ignite/pull/3555] 

Link to issue for the test fix - https://issues.apache.org/jira/browse/IGNITE-7780;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryMetadata may be lost if node with outdated metadata becomes a coordinator,IGNITE-7258,13126246,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,20/Dec/17 10:40,17/Jan/18 11:04,14/Jul/23 06:20,17/Jan/18 11:04,2.1,,,,,2.4,,,,,,0,,,,"Consider the following scenario in PDS-enabled mode:

# Multinode cluster is up and running, BinaryMetadata for some type is created and spread across all nodes.
# Node#1 leaves the cluster, then BinaryMetadata is updated one more time.
# All cluster is restarted *and Node#1 becomes a coordinator*.

As in current implementation coordinator is considered to own a master copy of BinaryMetadata, it spreads its out-of-date version to all nodes so update from step#2 is lost.

We need to improve BinaryMetadata exchange protocol so nodes on join will send their version of BinaryMetadata to coordinator so it is able to update its own local version.

",,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-12-20 10:40:58.0,,,,,,,,,,"0|i3o4hz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: fix reconnection after change profile,IGNITE-7257,13126245,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,Dmitriyff,Dmitriyff,20/Dec/17 10:40,12/Jan/18 04:18,14/Jul/23 06:20,29/Dec/17 04:35,,,,,,2.4,,,,,,0,,,,,,Dmitriyff,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 12 04:18:47 UTC 2018,,,,,,,,,,"0|i3o4hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/17 10:46;Dmitriyff;[~kuaw26] fixed, pls check it;;;","21/Dec/17 02:36;pkonstantinov;Tested;;;","29/Dec/17 04:35;kuaw26;Looks good. Merged to master.;;;","12/Jan/18 04:18;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SQL: Failed to execute explain via new ""non-caches"" API",IGNITE-7255,13126226,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,20/Dec/17 09:15,06/Aug/18 03:56,14/Jul/23 06:20,31/Jul/18 03:09,,,,,,2.7,,wizards,,,,0,,,,"I'm executing code via querySqlFieldsNoCache API:
{code:java}
 qryCursor = ignite.context().query().querySqlFieldsNoCache(qry, true);
{code}
And got exception:
{noformat}
[CacheException] class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to parse query: EXPLAIN select count(*) from Person
   [IgniteSQLException] Failed to parse query: EXPLAIN select count(*) from Person
   [JdbcSQLException] Table ""PERSON"" not found; SQL statement: EXPLAIN select count(*) from Person [42102-195]
{noformat}
Second way to reproduce is execution of Explain in Web console when *{color:#393939}Use selected cache as default schema name{color}* checkbox is disabled.",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 06 03:55:55 UTC 2018,,,,,,,,,,"0|i3o4dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jul/18 11:17;vsisko;Fixed creation of task argument of Explain execution from Web console.

Original issue error is not reproduced.;;;","31/Jul/18 03:09;pkonstantinov;Tested on the branch;;;","31/Jul/18 04:49;kuaw26;Merged to master.;;;","06/Aug/18 03:55;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Schema not found"" error when setting streaming mode for JDBC driver",IGNITE-7248,13125922,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,kukushal,kukushal,19/Dec/17 13:39,19/Jan/18 09:12,14/Jul/23 06:20,19/Jan/18 09:11,2.3,,,,,2.4,,jdbc,,,,1,,,,"Using JDBC ""thick"" driver in streaming mode fails with a ""Schema not found"" erorr:
{code}
Connection connection = DriverManager.getConnection(""jdbc:ignite:cfg://streaming=true:cache=CACHE@file:/path-to-ignite-config.xml"");
{code}

using connection to create a table works fine but this exception is generated when using the connection to execute INSER INTO...

{code}
class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed
to set schema for DB connection for thread [schema=]

org.h2.jdbc.JdbcSQLException: Schema  not found; SQL statement:
SET SCHEMA """" [90079-195]
{code}

See [User List|http://apache-ignite-users.70518.x6.nabble.com/Cannot-insert-data-into-table-using-JDBC-tc17477.html] for more details
",,al.psc,githubbot,kukushal,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 09:12:01 UTC 2018,,,,,,,,,,"0|i3o2in:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jan/18 09:49;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/3384

    IGNITE-7248  ""Schema not found"" error when setting streaming mode for JDBC driver

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7248

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3384.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3384
    
----
commit 6d704008ba4c466059e9d0af7f9e6b603667b6b8
Author: tledkov-gridgain <tledkov@...>
Date:   2018-01-15T13:24:53Z

    IGNITE-7248: add test

commit 6bdf2c89ee2e4cbef819ff3e72605b7154fb8c53
Author: tledkov-gridgain <tledkov@...>
Date:   2018-01-15T15:31:18Z

    IGNITE-7411: fix cache name

commit 67eee4186add25f49b074988e51db1aedfb866d7
Author: tledkov-gridgain <tledkov@...>
Date:   2018-01-16T09:47:07Z

    IGNITE-7248: rename the test, add test to suite

----
;;;","16/Jan/18 09:55;tledkov-gridgain;*Root cause* is wrong usage of the {{schemaName}} and {{cacheName}} at the {{JdbcConnection#prepareNativeStatement}} in JDBC v2 (looks like it is the old code when *schema == cacheName*)

Also please take a look at the test {{JdbcStreamingToPublicCacheTest}} to see the wright way of the streaming to the table that is created by SQL. We have to use separate connection. Also the JDBC connection with enabled streaming should use ONLY for streaming INSERT.

;;;","16/Jan/18 10:09;tledkov-gridgain;[~al.psc], [~vozerov], please review the short patch.
Tests are OK.;;;","16/Jan/18 16:47;al.psc;[~tledkov-gridgain], my comments:

1. {{JdbcStreamingToPublicCacheTest}}: unused imports; looks like we don't need {{getConfiguration0}} method either, just override {{getConfiguration}} and call there {{super.getConfiguration}} like you do now.

2. The fix itself is incorrect. You can't just use cache name as schema name - they may not match (PUBLIC schema, also schema name from cache configuration...). The problem is that we mix caches and schemas in {{JdbcStatement}} and {{GridQueryProcessor}}. Correct fix would be like this:
 * fix {{GridQueryProcessor#prepareNativeStatement}} so that it does not worry about caches and works only in terms of schema (I reverted your change in {{JdbcStatement}} and removed {{idx.schema}} lookup from {{GridQueryProcessor#prepareNativeStatement}} and your test passes just fine).

That said, please make the fix as proposed (cache name should not be used instead of schema name anywhere) and re-run tests.;;;","17/Jan/18 10:06;tledkov-gridgain;[~al.psc], thanks a lot. Fixed.
Tests are OK.
[~vozerov], please review the short patch.
;;;","19/Jan/18 09:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3384
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing description in javadoc for ignite-dev-utils,IGNITE-7245,13125861,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,agoncharuk,ustas,ustas,19/Dec/17 10:36,19/Dec/17 12:34,14/Jul/23 06:20,19/Dec/17 12:34,,,,,,,,,,,,0,,,,Need add description in java doc,,agoncharuk,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 12:34:34 UTC 2017,,,,,,,,,,"0|i3o253:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/17 12:34;agoncharuk;Fixed in commit 6e8cfe324fc7ea69a2b5477ac3187d333aef3134;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing README.txt for ignite-dev-utils module,IGNITE-7244,13125860,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ustas,ustas,19/Dec/17 10:35,19/Dec/17 12:34,14/Jul/23 06:20,19/Dec/17 12:34,,,,,,2.4,,,,,,0,,,,"We need to add some information about this module in README.txt
",,agoncharuk,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 12:34:01 UTC 2017,,,,,,,,,,"0|i3o24v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/17 12:34;agoncharuk;Fixed in commit 6e8cfe324fc7ea69a2b5477ac3187d333aef3134;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken javadoc for KNN,IGNITE-7242,13125848,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,chief,chief,19/Dec/17 10:09,19/Dec/17 14:12,14/Jul/23 06:20,19/Dec/17 10:59,,,,,,2.4,,ml,,,,0,javadoc,,,"[Step 7/7] [WARNING] C:\BuildAgent\work\bd85361428dcdb1\modules\ml\src\main\java\org\apache\ignite\ml\knn\regression\KNNMultipleLinearRegression.java:40: warning - Tag @inheritDoc cannot be used in constructor documentation.  It can only be used in the following types of documentation: class/interface, method, inline text.
[Step 7/7] [WARNING] C:\BuildAgent\work\bd85361428dcdb1\modules\ml\src\main\java\org\apache\ignite\ml\knn\regression\KNNMultipleLinearRegression.java:40: warning - @inheritDoc used but KNNMultipleLinearRegression(int, DistanceMeasure, KNNStrategy, LabeledDataset) does not override or implement any method.",,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 10:59:58 UTC 2017,,,,,,,,,,"0|i3o227:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/17 10:28;githubbot;GitHub user YuriBabak opened a pull request:

    https://github.com/apache/ignite/pull/3251

    IGNITE-7242: Broken javadoc for KNN

    fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7242

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3251.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3251
    
----
commit 25f0d5de50555a4fb93b697141a0eb23c8632471
Author: YuriBabak <y.chief@gmail.com>
Date:   2017-12-19T10:26:06Z

    IGNITE-7242: Broken javadoc for KNN
    
    fixed

----
;;;","19/Dec/17 10:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3251
;;;","19/Dec/17 10:59;chief;merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In case of not serializable cache update response, future on node requester will never complete",IGNITE-7239,13125838,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,19/Dec/17 09:35,01/Aug/19 22:09,14/Jul/23 06:20,11/Jan/18 13:38,2.3,,,,,2.4,,cache,,,,0,,,,"To avoid such hang, if response could not be serialized, create other response with text of the error.",,agura,dkarachentsev,githubbot,,,,,,,,,,"dspavlov commented on issue #3310: IGNITE-7239 - In case of not serializable cache update response, futu…
URL: https://github.com/apache/ignite/pull/3310#issuecomment-517476180
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3310: IGNITE-7239 - In case of not serializable cache update response, futu…
URL: https://github.com/apache/ignite/pull/3310
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 13:38:14 UTC 2018,,,,,,,,,,"0|i3o1zz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Dec/17 09:52;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3310

    IGNITE-7239 - In case of not serializable cache update response, futu…

    …re on node requester will never complete

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7239

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3310.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3310
    
----
commit e0a1ec657b6e638d4ed28fc3d4db4ff552929cff
Author: dkarachentsev <dkarachentsev@...>
Date:   2017-12-28T09:32:06Z

    IGNITE-7239 - In case of not serializable cache update response, future on node requester will never complete

----
;;;","11/Jan/18 13:38;agura;LGTM. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web console: incorrect ""Download agent"" button color",IGNITE-7238,13125832,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,pkonstantinov,Klaster_1,Klaster_1,19/Dec/17 09:09,22/Jan/18 08:29,14/Jul/23 06:20,12/Jan/18 03:48,,,,,,2.4,,wizards,,,,0,,,,"*How to reproduce:*
1. Start demo mode, do not start a web agent.
2. Wait for ""Connection to Ignite Web Agent is not established"" dialog to appear.
3. Focus on ""Download agent"" using Tab button (or any other way).

*What happens:*
""Download agent"" label becomes red.

*What should happen:*
""Download agent"" label should remain white.",,alexdel,Klaster_1,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Dec/17 09:10;Klaster_1;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12902805/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 22 08:29:17 UTC 2018,,,,,,,,,,"0|i3o1yn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/17 10:53;alexdel;Fixed. Please check.;;;","21/Dec/17 04:42;Klaster_1;[~alexdel] the code looks good. Just keep in mind that it fixes this particular issue for .btn-ignite--success only. There's still a chance for other buttons to behave the same, but we don't have any places that reproduce required conditions (anchor element with button class, contained by modal). When this happens, we'll make another small fix.;;;","09/Jan/18 02:48;pkonstantinov;Tested on branch;;;","12/Jan/18 03:48;kuaw26;Merged to master.;;;","22/Jan/18 08:29;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Wrong switcher behaviour on grid deactivation,IGNITE-7237,13125823,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Dmitriyff,vsisko,vsisko,19/Dec/17 08:44,27/Aug/18 11:23,14/Jul/23 06:20,27/Aug/18 11:23,,,,,,,,,,,,0,,,,"# Run node and agent.
# Open notebook page.
# Activate grid.
# Deactivate grid.

In process of deactivation switcher transit to off state. In that transition *Deactivation...* message is changed to ""Activation..."". Progress animation is showed in some time after switcher state was changed.",,Dmitriyff,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 29 10:27:46 UTC 2018,,,,,,,,,,"0|i3o1wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Mar/18 11:16;Dmitriyff;[~vsisko] not reproduced;;;","29/May/18 10:27;vsisko;Reproduced when deactivation spend more time, then refresh rate. Grid return false active state before then state is toggled.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
".NET: remove localhost=""127.0.0.1"" from App.config to run cross-platform .NET examples with standalone node",IGNITE-7232,13125626,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,izaporozhtseva,izaporozhtseva,18/Dec/17 13:19,18/Dec/17 15:32,14/Jul/23 06:20,18/Dec/17 15:32,2.4,,,,,2.4,,platforms,,,,0,.NET,,,"need to remove localhost=""127.0.0.1"" from App.config to run cross-platform .NET examples with standalone node with default config",,izaporozhtseva,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 18 15:32:04 UTC 2017,,,,,,,,,,"0|i3o0p3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Dec/17 15:32;ptupitsyn;Java examples do not have {{localhost}} in config probably for the same reason.

Fixed in master: {{a2b195ced34af644117fde7cbe43f1fd2cbf9db3}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Notification placeholder on empty user table,IGNITE-7226,13125567,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,alexdel,vsisko,vsisko,18/Dec/17 09:26,10/Oct/19 13:11,14/Jul/23 06:20,27/Aug/18 10:40,,,,,,2.8,,wizards,,,,0,,,,"# Open Admin panel
# Filter all data in table.
Table showed without data and any information message.",,alexdel,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-9385,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 05 07:41:50 UTC 2019,,,,,,,,,,"0|i3o0c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/18 08:23;kuaw26;[~alexdel], please take a look, was this issue fixed or not?;;;","05/Feb/19 07:41;alexdel;[~kuaw26] This issue is fixed in current master. Can be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: improve CSV export,IGNITE-7225,13125560,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,Klaster_1,Klaster_1,18/Dec/17 08:50,19/Jan/18 08:25,14/Jul/23 06:20,12/Jan/18 03:13,,,,,,2.4,,wizards,,,,0,,,,"*What to do:*
When exporting to CSV, rely on user's locale and number decimal separator symbol to determine what to use as a CSV separator.

*Motivation:*
During export to CSV, numbers are formatted depending on user's locale. In _non-import mode_, MS Excel requires comma as a decimal separator and semicolon as a CSV separator for _ru_  locale and dot/comma respectively for _en_. After resolving this issue, CSV export will become more aware of user's environment.",Browsers with ru and en locales.,Dmitriyff,Klaster_1,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7036,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 08:17:24 UTC 2018,,,,,,,,,,"0|i3o0an:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Dec/17 10:55;Klaster_1;List of registered users won't use separator behavior implemented in IGNITE-7225 until IGNITE-7036 is merged into master.;;;","18/Dec/17 11:02;Klaster_1;[~Dmitriyff] please review.

There were two options to go with:
1. Use [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat/formatToParts] to programmatically access current locale decimal delimeter.
2. Do a simplified, manual parsing of number converter to a locale string.

I chose #2 because it was substantially simplier and did not require big polyfills.

Affected pages:
1. Everything that uses grid-export directive to export uigrid data to CSV.
2. page-queries, which uses a custom CSV exporter.;;;","19/Dec/17 07:59;Dmitriyff;Looks good.
[~kuaw26] pls merge it ;;;","12/Jan/18 03:13;kuaw26;Looks good. Merged to master.
Please retest. To test under different locale: https://stackoverflow.com/q/37221494/333777;;;","19/Jan/18 08:17;pkonstantinov;tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Remove deprecated fields from configuration,IGNITE-7224,13125556,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,18/Dec/17 08:38,22/Jan/18 06:56,14/Jul/23 06:20,12/Jan/18 03:32,,,,,,2.4,,wizards,,,,0,,,,"Ignite configuration:
# setMarshaller is deprecated since 2.1.
# setLateAffinityAssignment is always enabled since 2.1.
",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5407,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 22 06:56:08 UTC 2018,,,,,,,,,,"0|i3o09r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/17 04:30;vsisko;Marshaller and late affinity assignment properties are hidden in Ignite 2.1 version.
Fixed generation of OptimisedMarshaller from IGNITE-5704 issue. ;;;","09/Jan/18 07:34;pkonstantinov;Tested;;;","12/Jan/18 03:32;kuaw26;Looks good. Merged to master.;;;","22/Jan/18 06:56;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Documentation bug: ""Cross-cache Query"" page is dead",IGNITE-7215,13125282,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kukushal,kukushal,15/Dec/17 17:11,28/Nov/18 14:53,14/Jul/23 06:20,28/Nov/18 14:53,2.3,,,,,,,documentation,,,,0,,,,"Could not find ""Cross-cache Queries"" section in the latest Ignite 2.3 docs. The only page that references ""cross-cache queries"" is [JDBC Client Driver|https://apacheignite-sql.readme.io/docs#section-jdbc-client-driver] and it points to a [dead link|https://apacheignite-sql.readme.io/docs/cache-queries#cross-cache-queries]",,Artem Budnikov,kukushal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 28 14:53:43 UTC 2018,,,,,,,,,,"0|i3nylr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/18 14:53;Artem Budnikov;This was fixed in 2.7 documentation.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Empty class descriptions for KNNModelFormat,IGNITE-7213,13125278,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,chief,chief,chief,15/Dec/17 16:50,15/Dec/17 17:25,14/Jul/23 06:20,15/Dec/17 17:25,,,,,,2.4,,ml,,,,0,,,,Javadoc generation failed if we have classes with empty class-javadoc,,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 15 17:25:39 UTC 2017,,,,,,,,,,"0|i3nykv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 17:18;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/3242

    IGNITE-7213: Empty class descriptions for KNNModelFormat

    fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7213

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3242.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3242
    
----
commit fefebd90dd1d13f4a4c6886eab97f12a19fca30d
Author: YuriBabak <y.chief@gmail.com>
Date:   2017-12-15T17:07:44Z

    IGNITE-7213: Empty class descriptions for KNNModelFormat
    
    fixed.

----
;;;","15/Dec/17 17:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3242
;;;","15/Dec/17 17:25;chief;merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Load stoped after server node kill,IGNITE-7212,13125193,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ustas,ustas,ustas,15/Dec/17 11:42,15/Dec/17 13:50,14/Jul/23 06:20,15/Dec/17 13:38,2.4,,,,,,,general,,,,0,,,,"Scenario:
* Start 4 servers
* Start load tasks on 5 clients
* Kill 1 server
* Waiting for rebalancing
* Kill 1 server
Result:
After the kill of second servers node load stoped.
In servers logs I see messages like this:
{noformat}
[2017-12-15 11:23:50][DEBUG][grid-nio-worker-tcp-comm-0-#41] Remote client closed connection: GridSelectorNioSessionImpl [worker=DirectNioClientWorker [super=AbstractNioClientWorker [idx=0, bytesRcvd=130952565, bytesSent=131203245, bytesRcvd0=3069200, bytesSent0=3068083, select=true, super=GridWorker [name=grid-nio-worker-tcp-comm-0, igniteInstanceName=null, finished=false, hashCode=1748650517, interrupted=false, runner=grid-nio-worker-tcp-comm-0-#41]]], writeBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], readBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], inRecovery=GridNioRecoveryDescriptor [acked=1024, resendCnt=0, rcvCnt=1026, sentCnt=1029, reserved=true, lastAck=1024, nodeLeft=false, node=TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false], connected=false, connectCnt=1, queueLimit=4096, reserveCnt=1, pairedConnections=false], outRecovery=GridNioRecoveryDescriptor [acked=1024, resendCnt=0, rcvCnt=1026, sentCnt=1029, reserved=true, lastAck=1024, nodeLeft=false, node=TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false], connected=false, connectCnt=1, queueLimit=4096, reserveCnt=1, pairedConnections=false], super=GridNioSessionImpl [locAddr=/172.31.23.220:41732, rmtAddr=ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47100, createTime=1513335774008, closeTime=0, bytesSent=131203245, bytesRcvd=130952565, bytesSent0=3068083, bytesRcvd0=3069200, sndSchedTime=1513335774008, lastSndTime=1513337029027, lastRcvTime=1513337029027, readsPaused=false, filterChain=FilterChain[filters=[GridNioCodecFilter [parser=org.apache.ignite.internal.util.nio.GridDirectParser@11ae7d3b, directMode=true], GridConnectionBytesVerifyFilter], accepted=false]]
[2017-12-15 11:23:50][WARN ][tcp-disco-msg-worker-#2] Failed to send message to next node [msg=TcpDiscoveryConnectionCheckMessage [super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=6c7f6d95061-c3cf9fe4-ab13-4d95-ace3-84a54cd73e08, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]], next=TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false], errMsg=Failed to send message to next node [msg=TcpDiscoveryConnectionCheckMessage [super=TcpDiscoveryAbstractMessage [sndNodeId=null, id=6c7f6d95061-c3cf9fe4-ab13-4d95-ace3-84a54cd73e08, verifierNodeId=null, topVer=0, pendingIdx=0, failedNodes=null, isClient=false]], next=ClusterNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, order=1, addr=[127.0.0.1, 172.31.20.3], daemon=false]]]
[2017-12-15 11:23:50][DEBUG][grid-nio-worker-tcp-comm-0-#41] Session was closed but there are unacknowledged messages, will try to reconnect [rmtNode=b7cfaa4e-b3b7-4485-a421-c731d9ed869d]
[2017-12-15 11:23:50][DEBUG][tcp-comm-worker-#1] Recovery reconnect [rmtNode=b7cfaa4e-b3b7-4485-a421-c731d9ed869d]
[2017-12-15 11:23:50][DEBUG][tcp-comm-worker-#1] Creating NIO client to node: TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false]
[2017-12-15 11:23:50][DEBUG][tcp-comm-worker-#1] Addresses resolved from attributes [rmtNode=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47100, /127.0.0.1:47100], isRmtAddrsExist=true]
[2017-12-15 11:23:50][DEBUG][tcp-comm-worker-#1] Client creation failed [addr=ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47100, err=java.net.ConnectException: Connection refused]
[2017-12-15 11:23:50][WARN ][tcp-comm-worker-#1] Connect timed out (consider increasing 'failureDetectionTimeout' configuration property) [addr=ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47100, failureDetectionTimeout=10000]
[2017-12-15 11:23:50][WARN ][disco-event-worker-#61] Node FAILED: TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false]
[2017-12-15 11:23:50][DEBUG][tcp-comm-worker-#1] Skipping local address [addr=/127.0.0.1:47100, locAddrs=[172.31.20.3, 127.0.0.1], node=TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false]]
[2017-12-15 11:23:50][DEBUG][tcp-comm-worker-#1] Skipping local address [addr=/127.0.0.1:47100, locAddrs=[172.31.20.3, 127.0.0.1], node=TcpDiscoveryNode [id=b7cfaa4e-b3b7-4485-a421-c731d9ed869d, addrs=[127.0.0.1, 172.31.20.3], sockAddrs=[ip-172-31-20-3.us-east-2.compute.internal/172.31.20.3:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1513335739604, loc=false, ver=2.4.0#20171214-sha1:da782958, isClient=false]]
{noformat}

Logs and configs was attached to this ticket.",,agoncharuk,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 11:42;ustas;cfg_log_master_1.zip;https://issues.apache.org/jira/secure/attachment/12902285/cfg_log_master_1.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 15 13:50:38 UTC 2017,,,,,,,,,,"0|i3ny27:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 12:51;agoncharuk;The issue is related to org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java:3110
We loop forever here. This is a regression introduced by IGNITE-6639.;;;","15/Dec/17 13:38;agoncharuk;Fixed in master.;;;","15/Dec/17 13:50;ustas;Fix confirmed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web console: Fix show time of ""Connected clusters: N"" label",IGNITE-7210,13125120,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,15/Dec/17 08:12,07/May/18 11:53,14/Jul/23 06:20,12/Jan/18 02:56,,,,,,2.4,,site,,,,0,,,,"Now that label showed quickly when login screen still shown or page is fully empty.
Should appear together with page content.",,alexdel,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 12 02:56:07 UTC 2018,,,,,,,,,,"0|i3nxlz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Dec/17 07:15;alexdel;Fixed. Please test.;;;","09/Jan/18 04:26;pkonstantinov;Tested.;;;","12/Jan/18 02:56;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Failed example on notebook page.,IGNITE-7208,13125084,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,15/Dec/17 03:00,15/Dec/17 03:42,14/Jul/23 06:20,15/Dec/17 03:42,,,,,,2.4,,wizards,,,,0,,,,"Open notebook page.
Example field is empty.
Exception in log:
{code}
vendor.872eb83de73a83496ad3.js:91145 Error: [$parse:syntax] Syntax Error: Token 'Ed' is an unexpected token at column 117 of the expression [example = 'CREATE TABLE Person(ID INTEGER PRIMARY KEY, NAME VARCHAR(100));
INSERT INTO Person(ID, NAME) VALUES (1, 'Ed'), (2, 'Ann'), (3, 'Emma');
SELECT * FROM Person;'] starting at [Ed'), (2, 'Ann'), (3, 'Emma');
SELECT * FROM Person;'].
http://errors.angularjs.org/1.6.6/$parse/syntax?p0=Ed&p1=is%20an%20unexpected%20token&p2=117&p3=example%20%3D%20'CREATE%20TABLE%20Person(ID%20INTEGER%20PRIMARY%20KEY%2C%20NAME%20VARCHAR(100))%3B%0AINSERT%20INTO%20Person(ID%2C%20NAME)%20VALUES%20(1%2C%20'Ed')%2C%20(2%2C%20'Ann')%2C%20(3%2C%20'Emma')%3B%0ASELECT%20*%20FROM%20Person%3B'&p4=Ed')%2C%20(2%2C%20'Ann')%2C%20(3%2C%20'Emma')%3B%0ASELECT%20*%20FROM%20Person%3B'
    at vendor.872eb83de73a83496ad3.js:76561
    at AST.throwError (vendor.872eb83de73a83496ad3.js:91703)
    at AST.ast (vendor.872eb83de73a83496ad3.js:91453)
    at Parser.parse (vendor.872eb83de73a83496ad3.js:92795)
    at $parse (vendor.872eb83de73a83496ad3.js:92941)
    at Scope.$eval (vendor.872eb83de73a83496ad3.js:94868)
    at Object.pre (vendor.872eb83de73a83496ad3.js:104704)
    at vendor.872eb83de73a83496ad3.js:77830
    at invokeLinkFn (vendor.872eb83de73a83496ad3.js:86990)
    at nodeLinkFn (vendor.872eb83de73a83496ad3.js:86356) ""<div class=""block-information ng-isolate-scope"" data-title=""With query notebook you can"" style=""margin-bottom: 30px;"" ng-init=""example = 'CREATE TABLE Person(ID INTEGER PRIMARY KEY, NAME VARCHAR(100));
INSERT INTO Person(ID, NAME) VALUES (1, 'Ed'), (2, 'Ann'), (3, 'Emma');
SELECT * FROM Person;'"">""
{code}",,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 15 03:42:33 UTC 2017,,,,,,,,,,"0|i3nxdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 03:42;kuaw26;Fixed regression in pug template.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nodes may ping each other on stop for a failureDetectionTimeout period,IGNITE-7206,13125003,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,14/Dec/17 17:11,01/Aug/19 22:09,14/Jul/23 06:20,20/Dec/17 13:46,2.3,,,,,2.4,,,,,,0,,,,"On communication connection breakage TcpCommunicationSpi may try to reestablish connection and if it's failed try to ping remote node. But if remote node is stopping it refuses incoming ping connections.

In case of concurrent few node stopping there possible case when nodes ping each other and refuse any incoming pings. This lasts for failureDetectionTimeout or reconenctCount that checks in ServerImpl.pingNode() method.

pingNode() should check if local node is stopping and interrupt pings.",,agura,dkarachentsev,githubbot,,,,,,,,,,"dspavlov commented on issue #3234: IGNITE-7206 - Stop pings if current node is stopping.
URL: https://github.com/apache/ignite/pull/3234#issuecomment-517476126
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3234: IGNITE-7206 - Stop pings if current node is stopping.
URL: https://github.com/apache/ignite/pull/3234
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 20 13:46:45 UTC 2017,,,,,,,,,,"0|i3nwvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 17:17;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3234

    IGNITE-7206 - Stop pings if current node is stopping.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7206

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3234.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3234
    
----
commit 3a8b191db5270b8dcc1599f40a580e4fc891d1bd
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-12-14T17:12:51Z

    IGNITE-7206 - Stop pings if current node is stopping.

----
;;;","20/Dec/17 13:46;agura;LGTM. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Premature access to services() causes NullPointerException,IGNITE-7197,13124725,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,ilyak,ilyak,13/Dec/17 16:18,12/Sep/19 16:49,14/Jul/23 06:20,20/Dec/17 10:06,2.3,,,,,2.4,,managed services,,,,0,,,,"{code}
Caused by: java.lang.NullPointerException
    at org.apache.ignite.internal.processors.service.GridServiceProcessor.serviceEntries(GridServiceProcessor.java:1289)
    at org.apache.ignite.internal.processors.service.GridServiceProcessor.serviceDescriptors(GridServiceProcessor.java:762)
    at org.apache.ignite.internal.IgniteServicesImpl.serviceDescriptors(IgniteServicesImpl.java:203)
    at org.apache.ignite.internal.visor.service.VisorServiceTask$VisorServiceJob.run(VisorServiceTask.java:60)
    at org.apache.ignite.internal.visor.service.VisorServiceTask$VisorServiceJob.run(VisorServiceTask.java:44)
    at org.apache.ignite.internal.visor.VisorJob.execute(VisorJob.java:69)
{code}

Happens with non-Visor jobs and callables, too!",,githubbot,ilyak,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-675,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 21 17:19:50 UTC 2017,,,,,,,,,,"0|i3nv6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 16:19;ilyak;It turns out, jobs and tasks are executed after processor.start(), but services() is only usable after onKernalStart().;;;","13/Dec/17 17:14;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3222

    IGNITE-7197 Avoid NPE in serviced() by waiting on latch.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7197

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3222.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3222
    
----
commit 55cab23ab8561efef1fc144bd1fb827871f69654
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-12-13T17:09:39Z

    IGNITE-7197 Avoid NPE in serviced() by waiting on latch.

----
;;;","13/Dec/17 17:15;ilyak;[~sboikov] please review the proposed fix;;;","20/Dec/17 10:06;sboikov;Reviewed, merged into master.

Thanks;;;","20/Dec/17 10:27;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3222
;;;","20/Dec/17 10:27;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3255

    Ignite gg 12015

    IGNITE-7197 Avoid NPE in services() by waiting on latch=

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-12015

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3255.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3255
    
----
commit 03e507f5021f3aee9728e5cbcbc85ed731e5e538
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-26T16:37:27Z

    Fixed tests.

commit 17b7586a73f6b1179612d601caa38d41924a4fac
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-26T16:38:39Z

    Merge branch 'ignite-1.8.8' into ignite-1.9.4

commit ad6add47b29caf44dadfe2e32acd4d245ee256ab
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-27T07:34:42Z

    Fixed tests.

commit 527c71805ac502290a20c631c8d4484f011f77c2
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-27T07:57:56Z

    Merge branch 'ignite-1.8.8' into ignite-1.9.4

commit 897f4c00c4945eda3f9f4a41d064ded2f6f27ccc
Author: sboikov <sboikov@...>
Date:   2017-06-27T09:55:11Z

    gg-12133 Deadlock for metadata update from GridCacheMapEntry.innerUpdate

commit 90e96db22dbb7a341bfe1a8130b6dc16d5d8ae81
Author: agura <agura@...>
Date:   2017-06-27T11:43:06Z

    Compilation is fixed.

commit 3f33a902ed0d0a3e27be548209fe8e7933da57a9
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-26T09:27:58Z

    Minor fix for GG-12197 ""Ignore events for discarded update in CLOCK mode"".

commit 3668b91817c1da7958cc3d7c4dddf890a2237772
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-27T07:34:42Z

    Partially reverted GG-12352.

commit 172f41c489c0ca5b7613163cd325b0c01d5b28b1
Author: sboikov <sboikov@...>
Date:   2017-06-27T09:55:11Z

    gg-12133 Deadlock for metadata update from GridCacheMapEntry.innerUpdate
    
    (cherry picked from commit 897f4c0)

commit 0521b7780756788d92bfa35ef00f56b5bb01367d
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-27T17:43:07Z

    GG-12370: Fixed massive NODE_FAILED events lead to excessive momentary memory consumption.

commit 6abe5bf5bd732bf9f79df577e159243520dd5c0b
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T06:47:45Z

    Fixed compilation.

commit 6b54f991c13efb3630527a3010c4f90105a4fc76
Author: agura <agura@...>
Date:   2017-06-21T16:09:37Z

    ignite-5574 For offheap_tiered cache first try read value from offheap in order to avoid redundant synchronization on entry

commit 7d5217260b293b7224340349b5e44792999600f3
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T08:47:21Z

    Rethrow handshake exceptions as it done for ConnectionException.

commit 81cdea40743131cac9dae49150c1038073595f7e
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T10:00:30Z

    Fixed tests.

commit 473abcafca568c7c898b0b1ae91fe964084fdf43
Author: agura <agura@...>
Date:   2017-06-28T11:49:49Z

    Tests fixed

commit 4f383ae772631987c3f4ac29bb654b4811fbc407
Author: agura <agura@...>
Date:   2017-06-28T11:49:49Z

    Tests fixed.

commit 4b11bb27d5caeb7ba7bc2929685d7c548f4c327d
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T12:45:42Z

    Tests fixed.

commit 9b92dac5756619ed5218db269acdae1ef02ef8ae
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T15:20:02Z

    Tests fixed.

commit 0295a1a7ecb2ef57a917ddc9015ff8b71a6ddb14
Author: mcherkasov <mcherkasov@...>
Date:   2017-06-23T18:00:45Z

    IGNITE-5521: Large near caches lead to cluster instability with metrics enabled.

commit 16fed552fc8f91de550207eeebd5850e685960a8
Author: AMRepo <andrey.mashenkov@...>
Date:   2017-06-29T07:49:34Z

    Fix tests.

commit 65d93e48c264f4bfff0a94856fdfeb83375a3976
Author: mcherkasov <mcherkasov@...>
Date:   2017-06-23T18:00:45Z

    IGNITE-5521: Large near caches lead to cluster instability with metrics enabled

commit ff1afad1278e939aef71b274e959fd4256904971
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-27T07:34:42Z

    Partially reverted GG-12352.
    
    (cherry picked from commit 3668b91)

commit 7fbb95d1698c534957c9f0b7c5558f43985cfe68
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-27T17:43:07Z

    GG-12370: Fixed massive NODE_FAILED events lead to excessive momentary memory consumption.
    
    (cherry picked from commit 0521b77)

commit 710db327c027d43c0984b7007447cecca71f3cca
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T08:47:21Z

    Rethrow handshake exceptions as it done for ConnectionException.
    
    (cherry picked from commit 7d52172)

commit 7c619f77009cc6876405839f9f6201d332d94b47
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-28T12:45:42Z

    Fixed tests.
    
    (cherry picked from commit 81cdea4)

commit a3717b0cc6d716e3bc966248854334e74b0614e2
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-29T10:06:06Z

    Merge remote-tracking branch 'origin/ignite-1.7.12' into ignite-1.7.12

commit 7d41f5da867294befd6cca1de3c945bfd83ae597
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-29T10:15:57Z

    Merge branch 'ignite-1.8.8' into ignite-1.9.4

commit 5219a35208b95a2d7dea3825dd4cb4edc74b3542
Author: Slava Koptilin <slava.koptilin@...>
Date:   2017-06-26T12:37:26Z

    IGNITE-5076: improved multi-threaded start of nodes

commit aba9bf9982c6eba8cb57d64e6b1090914b8d020e
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-06-30T08:30:20Z

    Merge branch 'ignite-1.8.8' into ignite-1.9.4

commit a4fc555b118d91ec0348154b88764f010dbbae52
Author: nikolay_tikhonov <ntikhonov@...>
Date:   2017-06-30T11:38:54Z

    Fixed ""IGNITE-5424 GridServiceProxy does not unwraps exception message from InvocationTargetException."" This closes #2168
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

----
;;;","20/Dec/17 12:22;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3259

    Ignite gg 12015m1

    IGNITE-7197 Avoid NPE in services() by waiting on latch

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-12015m1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3259.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3259
    
----
commit dd9c3a81d5ff53bdd88dd83e8f03480912cfbd58
Author: tledkov-gridgain <tledkov@...>
Date:   2017-09-15T14:25:26Z

    IGNITE-6395: Remove old test. This closes #2673.

commit b6350366fef2a75e9d4eeba9392aec660c0dda0b
Author: devozerov <ppozerov@...>
Date:   2017-09-16T11:57:55Z

    IGNITE-6327: Added thin client configuration. This closes #2672.

commit ecdb3ea74b1d5444c53a043f52e851c840fc7e7b
Author: Alexander Paschenko <alexander.a.paschenko@...>
Date:   2017-09-16T14:41:34Z

    IGNITE-5620: Implemented SQLSTATE error code for server-side logic and JDBC thin client. This closes #2541.

commit d347c2c00b6084c26c640793ea8ba08114022d07
Author: vsisko <vsisko@...>
Date:   2017-09-18T07:09:22Z

    IGNITE-6417 Fixed missed binary configuration.
    (cherry picked from commit 40597a0)

commit 0a878ece75d2b69be92caac0bacb9a7ba866e522
Author: Ilya Kasnacheev <ilya.kasnacheev@...>
Date:   2017-09-07T13:41:44Z

    Fixed Licenses & Javadoc tests
    
    cherry-pick from aa172573364b3fd91b089df252d884ee9aa8c24f

commit 9f2426ece7a3aab8701902505774627b096ad6e2
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-09-18T09:57:26Z

    IGNITE-6404 Fix failures in .NET (NPE in ExceptionUtils, inspections)

commit a2d9d76cbce8658ec42e951432a0e92ee22f46b5
Author: devozerov <vozerov@...>
Date:   2017-09-18T10:36:38Z

    IGNITE-6413: Improved thin client configuration processing. This closes #2680.

commit 9edcd5f7ca5609860b77a8bbb049ad5e805ad967
Author: Sergey Kalashnikov <skalashnikov@...>
Date:   2017-09-18T11:54:40Z

    IGNITE-6396: JDBC thin driver: added test for error code for NOT NULL violation. This closes #2681.

commit ea2caeb834a100448784c28d49b8d6aca4b3ed51
Author: Alexandr Kuramshin <ein.nsk.ru@...>
Date:   2017-09-18T12:46:46Z

    IGNITE-6200 org.dom4j.QName can't be serialized
    
    Signed-off-by: Andrey Gura <agura@apache.org>

commit bda0b7ce310a24600583869f491326808f07d8bd
Author: tledkov-gridgain <tledkov@...>
Date:   2017-09-18T13:01:34Z

    IGNITE-6317: JDBC driver: SQLSTATE support. This closes #2682.

commit b74744a0f57cda09bea4c8b303fd7aecbf5e1142
Author: Vitaliy Biryukov <biryukovvitaliy92@...>
Date:   2017-09-18T14:15:36Z

    ignite-5865 Deadlock detection test for optimistic transactions is fixed
    
    Signed-off-by: Andrey Gura <agura@apache.org>

commit cde331bf0ebd38993a8720ae0e8e03a26af195fa
Author: dpavlov <dpavlov@...>
Date:   2017-09-18T15:55:48Z

    IGNITE-6427: IgniteOOME in Cache5 test: Increase memory policy size

commit ec4a2229a64e5958ea843704f3c6df88b86a57cb
Author: dpavlov <dpavlov@...>
Date:   2017-09-15T11:47:03Z

    IGNITE-6235 Added ability to handle CacheObject from DataRecord in standalone WAL iterator - Fixes #2620.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit a85a67302195351003300838498f8ae90fc40919
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2017-09-18T16:04:36Z

    IGNITE-6235 Added ability to handle CacheObject from DataRecord in standalone WAL iterator. Fixed compilation

commit f64691636240f026bea929404c15ac1a74f2d8fd
Author: Andrey V. Mashenkov <andrey.mashenkov@...>
Date:   2017-09-18T17:47:47Z

    ignite-5839 Fix BinaryObject builder reuse issue.
    
    Signed-off-by: Andrey Gura <agura@apache.org>

commit 986cf58b724e2c6ba8d76c3fa4f793e369eb6b70
Author: tledkov-gridgain <tledkov@...>
Date:   2017-09-18T18:37:35Z

    IGNITE-6391: Converted protocol version to local variable in JdbcThinTcpIo. This closes #2684.

commit 65d46144bd51583adc9bfa1a5da8bfa8de86aee1
Author: devozerov <ppozerov@...>
Date:   2017-09-18T20:10:45Z

    IGNITE-6403: Fixed a bug causing to early completion of DDL operations on client node. This closes #2688. This closes #2691.

commit 2054430bb65c19a4246f234495c9d27fa50c52e5
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-09-18T14:02:14Z

    IGNITE-6210 Fixed inefficient memory consumption by checkpoint buffer.

commit 6393d39454432c9413e19202cff14e38200fb565
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-09-19T07:46:27Z

    IGNITE-6014 Added TX marker records.

commit 7c1b020705f4ea7cbcd050cc3756790c2e8f3169
Author: voipp <alkuznetsov.sb@...>
Date:   2017-09-19T08:52:50Z

    IGNITE-4931 Fixed cluster deactivation tests - Fixes #2648.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 8b765b2a7167ec35c4bb0c9b9189ecbcb5560c90
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-09-19T09:09:18Z

    IGNITE-6244 .NET: Thin client: ScanQuery
    
    This closes #2693

commit de7d373fedc270344cff9763d7834bf28d97f04d
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-09-19T10:20:25Z

    IGNITE-5884 Change default pageSize of page memory to 4KB - fix .NET

commit 6c416d50b0a24f9e3f66e436f6b581b2f70bdc76
Author: Ilya Kasnacheev <ilya.kasnacheev@...>
Date:   2017-09-07T13:41:44Z

    Fixed Licenses & Javadoc tests.
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

commit 542f2c2b8b93529bde63a76eb8833d6fd2c61020
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-09-19T10:30:01Z

    .NET: Remove empty file (merge byproduct)

commit 4a1e90c654ce8f169960b6ef5035cdb9fa837a19
Author: Vitaliy Biryukov <biryukovvitaliy92@...>
Date:   2017-09-19T10:23:45Z

    ignite-6262 Flaky deadlock detection tests are fixed
    
    Signed-off-by: Andrey Gura <agura@apache.org>

commit be60c08687f873a278d882666b61d60af7c0205c
Author: dpavlov <dpavlov@...>
Date:   2017-09-19T12:23:18Z

    IGNITE-6428 Fixed IgniteOOME in PDS Indexing suite (increased memory policy size) - Fixes #2690.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 718e365f47bb5c91bc910854a7626b1933c83e59
Author: Igor Sapego <igorsapg@...>
Date:   2017-09-19T13:23:54Z

    IGNITE-6099: ODBC: Implemented SQLGetInfo for all info types. This closes #2689.

commit 915682bd5facee9dd62fc5d6dfb35e37ff601db8
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-09-19T13:32:07Z

    IGNITE-6399 .NET: Added ClientConnectorConfiguration. This closes #2696.

commit 433879963db63103ba597e67e703f6ab7d3c64e1
Author: vsisko <vsisko@...>
Date:   2017-09-19T17:10:46Z

    IGNITE-6431 Web console: Fixed duplicate ""Partition loss policy"" field.
    (cherry picked from commit 2299589)

commit 6318c1a15f05e952c22e42e6e238816d7ffdb0ca
Author: vsisko <vsisko@...>
Date:   2017-09-20T10:19:58Z

    IGNITE-6376 Web console: Enable task and job events in demo mode by default.
    (cherry picked from commit ff17783)

----
;;;","20/Dec/17 12:25;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3260

     IGNITE-7197 Avoid NPE in services() by waiting on latch 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-12015m3

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3260.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3260
    
----
commit be91bbf8bcb7e9c71fe6d3bea0f79763f9606558
Author: Krzysztof Chmielewski <krzysiek.chmielewski@...>
Date:   2017-10-10T14:50:59Z

    Fixed ""IGNITE-6234 Initialize schemaIds to empty set if schemas field is null during the deserialization"".
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

commit 08389601728512dc4e7fa5b953f5afe34ae4506f
Author: AMRepo <andrey.mashenkov@...>
Date:   2017-10-10T08:57:20Z

    IGNITE-6545: Failure during Ignite Service.cancel() can break normal shutdown process. This closes #2807.
    
    (cherry picked from commit 8ffa109)

commit 57547b5afae059a0a6dfa13c08b2e0b6c0e96ebd
Author: devozerov <vozerov@...>
Date:   2017-10-13T09:34:35Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit 08798f8e47bdfdd68a557385ed2ce98b4bb1609a
Author: devozerov <vozerov@...>
Date:   2017-10-13T11:12:44Z

    IGNITE-6605: SQL: common backup filter. This closes #2836.

commit 2b59a241de3935a338842b8fc3221aedc8e11e1d
Author: devozerov <vozerov@...>
Date:   2017-10-16T07:33:36Z

    IGNITE-6631: Minor improvements to GridH2KeyValueRowOnheap. This closes #2855.

commit 98438c954c5f9a08634cf3132361268456397864
Author: devozerov <vozerov@...>
Date:   2017-10-16T09:38:54Z

    IGNITE-6632: SQL: simplified GridH2Row inheritance tree. This closes #2856.

commit 95b7ab518dd3c3db6fcc5142c2ee85da2516c2b6
Author: devozerov <vozerov@...>
Date:   2017-10-16T10:37:11Z

    IGNITE-6634: Removed IgniteDistributedJoinTestSuite. It's tests are distributed between ""Query"" and ""Query 2"" suites. This closes #2857.

commit 9c91deff877ebc0eed84559d4abca71408e3cb0a
Author: devozerov <vozerov@...>
Date:   2017-10-16T13:46:13Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit 911ab7ab7a8a6968d219b053adb2338477738506
Author: Alexey Popov <tank2.alex@...>
Date:   2017-10-17T11:45:42Z

    IGNITE-6627 .NET: Fix serialization of enums within generic collections
    
    * Fix EnumEqualityComparer serialization
    * Fix enum arrays serialization
    * Fix empty objects missing metadata
    
    This closes #2864

commit 3ba374c319ac7048a05871692060e2f143d6acdf
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-06T17:11:37Z

    IGNITE-6463 Web Console: Fixed output of big numbers in SQL query results.
    (cherry picked from commit 35589a7)

commit b67feb0f175bfbd6ffbefe82a8d693c8ab7d4213
Author: Vasiliy Sisko <vsisko@...>
Date:   2017-10-09T10:55:23Z

    IGNITE-5767 Web console: Use byte array type instead of java.lang.Object for binary JDBC types.
    (cherry picked from commit 3184437)

commit 8e1560322b87d79b3d3250832a3969ac4032d6fc
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-06T18:10:08Z

    IGNITE-6574 Remove pending requests in case STATUS_AUTH_FAILURE && credentials == null.
    (cherry picked from commit 85261a3)

commit 7a0300ae35894c389b126e95615f720a99a3d360
Author: devozerov <vozerov@...>
Date:   2017-10-18T11:18:08Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit ad01f9b099d0bf92537378859ad6d5a52de57748
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-19T02:43:20Z

    IGNITE-6647 Web Console: Implemented support of schema migration scripts.
    (cherry picked from commit c65399c)

commit 0c66344bc752dac98b256dd140fcab95d1662862
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-10-19T09:36:39Z

    IGNITE-6627 .NET: Fix repeated known metadata updates
    
    This closes #2876

commit 1b8abd214ed2afcd3fd1f6a4c71a19d6fe1a4b01
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-20T04:23:23Z

    IGNITE-6647 Added missing Mongo injector.
    (cherry picked from commit 173ecef)

commit a221066b3d029afc392be704a810c0e830fc0c49
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-20T14:15:02Z

    IGNITE-6647 Web Console: Added folder for modules migrations.
    (cherry picked from commit 3700717)

commit da8a9d5a968ba071697a28adb01bc59f80d1893c
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-10-23T08:55:33Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2
    
    # Conflicts:
    #	modules/platforms/dotnet/Apache.Ignite.Core.Tests/Apache.Ignite.Core.Tests.csproj

commit 69fdac3acf768ecb9df80d4412c4de5ffd5bc4f5
Author: Dmitriy Shabalin <dshabalin@...>
Date:   2017-10-23T09:09:47Z

    IGNITE-5909 Added list editable component.
    (cherry picked from commit 01daee6)

commit 4a2c38333c112d4956d6394667672c1470503435
Author: apopov <tank2.alex@...>
Date:   2017-10-24T08:56:33Z

    IGNITE-6362 NPE in Log4J2Logger

commit 089ebecb3e5962c7a38afd01bd18c77feb23d155
Author: vsisko <vsisko@...>
Date:   2017-10-25T04:23:11Z

    IGNITE-6671 Web Agent: Fixed data type conversion for Oracle NUMBER(N) data types.
    (cherry picked from commit 93be8ea)

commit 1e56de86525a79c895eba2d839b7887b61979b07
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2017-10-25T11:44:51Z

    IGNITE-6572: SQL: allowed many cache to share the same schema. This closes #2850.
    (cherry-picked from commit ee6daae)

commit e53e0937bf57a6e57bf9c61a518c5b70ce8c1303
Author: devozerov <vozerov@...>
Date:   2017-10-26T09:37:28Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit 531086e4b7419b99e47d52db8764113995df3ef1
Author: dpavlov <dpavlov@...>
Date:   2017-10-05T15:06:27Z

    IGNITE-6539 WAL parser fails if empty log files exist in directory - Fixes #2794.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 24e063fb8cb58d615a51274a6208f02d463beb0d
Author: dpavlov <dpavlov@...>
Date:   2017-10-05T15:10:25Z

    IGNITE-6553 Standalone WAL iterator fails to handle WAL delete data records - Fixes #2797.

commit ac86276c3665880df8f8345b61a90ae1da90c131
Author: devozerov <vozerov@...>
Date:   2017-10-26T13:03:58Z

    IGNITE-6111: SQL: ability to execute INSERT INTO without specifying column names. This closes #2881.

commit 937bc30c4a5f1951e7c755728b61571fe50eff26
Author: Roman Shtykh <rshtykh@...>
Date:   2017-10-26T14:13:49Z

    IGNITE-6534: SQL: configure NotNull fields with annotations. This closes #2782.

commit 3675d6401b78b4a70148b4ce7081fafaafcfca44
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2017-10-27T11:12:36Z

    ignite-5860 Try process TcpDiscoveryClientReconnectMessage from socket reader instead of always processing it on coordinator.
    (cherry picked from commit 56a63f8)

commit b1e670109e49bc33a9c8d6486cbfc637f13eaede
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-30T04:07:21Z

    IGNITE-6570 Added missing import.
    (cherry picked from commit 67859f4)

commit 748f6df6b3f2753ad965fafcce55520bed6def8f
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-30T07:56:22Z

    IGNITE-6670 Web Agent: Improved demo startup.
    (cherry picked from commit b4bd20e)

----
;;;","20/Dec/17 14:11;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3255
;;;","21/Dec/17 17:19;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3260
;;;","21/Dec/17 17:19;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3259
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exchange can stuck and wait while new node restoring state from disk and starting caches,IGNITE-7196,13124722,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,mmuzaf,mcherkas,mcherkas,13/Dec/17 16:13,26/Oct/18 12:21,14/Jul/23 06:20,26/Oct/18 12:17,2.3,,,,,2.8,,cache,,,,0,,,,"Exchange can stuck and wait while new node restoring state from disk and starting caches, there's a log snippet from a just joined new node that shows the issue:

{noformat}
[21:36:13,023][INFO][exchange-worker-#62%statement_grid%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], crd=false, evt=NODE_JOINED, evtNode=3ac1160e-0de4-41bc-a366-59292c9f03c1, customEvt=null, allowMerge=true]
[21:36:13,023][INFO][exchange-worker-#62%statement_grid%][FilePageStoreManager] Resolved page store work directory: /mnt/store/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463
[21:36:13,024][INFO][exchange-worker-#62%statement_grid%][FileWriteAheadLogManager] Resolved write ahead log work directory: /mnt/wal/WAL/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463
[21:36:13,024][INFO][exchange-worker-#62%statement_grid%][FileWriteAheadLogManager] Resolved write ahead log archive directory: /mnt/wal/WAL_archive/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463
[21:36:13,046][INFO][exchange-worker-#62%statement_grid%][FileWriteAheadLogManager] Started write-ahead log manager [mode=DEFAULT]
[21:36:13,065][INFO][exchange-worker-#62%statement_grid%][PageMemoryImpl] Started page memory [memoryAllocated=100.0 MiB, pages=6352, tableSize=373.4 KiB, checkpointBuffer=100.0 MiB]
[21:36:13,105][INFO][exchange-worker-#62%statement_grid%][PageMemoryImpl] Started page memory [memoryAllocated=32.0 GiB, pages=2083376, tableSize=119.6 MiB, checkpointBuffer=896.0 MiB]
[21:36:13,428][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Read checkpoint status [startMarker=/mnt/store/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463/cp/1512930965253-306c0895-1f5f-4237-bebf-8bf2b49682af-START.bin, endMarker=/mnt/store/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463/cp/1512930869357-1c24b6dc-d64c-4b83-8166-11edf1bfdad3-END.bin]
[21:36:13,429][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Checking memory state [lastValidPos=FileWALPointer [idx=3582, fileOffset=59186076, len=9229, forceFlush=false], lastMarked=FileWALPointer [idx=3629, fileOffset=50829700, len=9229, forceFlush=false], lastCheckpointId=306c0895-1f5f-4237-bebf-8bf2b49682af]
[21:36:13,429][WARNING][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Ignite node stopped in the middle of checkpoint. Will restore memory state and finish checkpoint on node start.
[21:36:18,312][INFO][grid-nio-worker-tcp-comm-0-#41%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.17.115:57148]
[21:36:21,619][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Found last checkpoint marker [cpId=306c0895-1f5f-4237-bebf-8bf2b49682af, pos=FileWALPointer [idx=3629, fileOffset=50829700, len=9229, forceFlush=false]]
[21:36:21,620][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Finished applying memory changes [changesApplied=165103, time=8189ms]
[21:36:22,403][INFO][grid-nio-worker-tcp-comm-1-#42%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.28.10:47964]
[21:36:23,414][INFO][grid-nio-worker-tcp-comm-2-#43%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.27.101:46000]
[21:36:33,019][WARNING][main][GridCachePartitionExchangeManager] Failed to wait for initial partition map exchange. Possible reasons are:
^-- Transactions in deadlock.
^-- Long running transactions (ignore if this is the case).
^-- Unreleased explicit locks.
[21:36:53,021][WARNING][main][GridCachePartitionExchangeManager] Still waiting for initial partition map exchange [fut=GridDhtPartitionsExchangeFuture [firstDiscoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=3ac1160e-0de4-41bc-a366-59292c9f03c1, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 172.31.20.209], sockAddrs=[/0:0:0:0:0:0:0:1%lo:48500, /127.0.0.1:48500, ip-172-31-20-209.eu-central-1.compute.internal/172.31.20.209:48500], discPort=48500, order=57, intOrder=36, lastExchangeTime=1512931012268, loc=true, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=false], topVer=57, nodeId8=3ac1160e, msg=null, type=NODE_JOINED, tstamp=1512930972992], crd=TcpDiscoveryNode [id=56c97317-26cf-43d2-bf76-0cab59c6fa5f, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 172.31.27.101], sockAddrs=[/0:0:0:0:0:0:0:1%lo:48500, /127.0.0.1:48500, ip-172-31-27-101.eu-central-1.compute.internal/172.31.27.101:48500], discPort=48500, order=1, intOrder=1, lastExchangeTime=1512930972830, loc=false, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=3ac1160e-0de4-41bc-a366-59292c9f03c1, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 172.31.20.209], sockAddrs=[/0:0:0:0:0:0:0:1%lo:48500, /127.0.0.1:48500, ip-172-31-20-209.eu-central-1.compute.internal/172.31.20.209:48500], discPort=48500, order=57, intOrder=36, lastExchangeTime=1512931012268, loc=true, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=false], topVer=57, nodeId8=3ac1160e, msg=null, type=NODE_JOINED, tstamp=1512930972992], nodeId=3ac1160e, evt=NODE_JOINED], added=true, initFut=GridFutureAdapter [ignoreInterrupts=false, state=INIT, res=null, hash=820635914], init=false, lastVer=null, partReleaseFut=null, exchActions=null, affChangeMsg=null, initTs=1512930973012, centralizedAff=false, changeGlobalStateE=null, done=false, state=SRV, evtLatch=0, remaining=[eac777d5-281b-4a2e-a743-c585a08bfc68, ee15ea85-f5f6-4513-871e-7b4b080911cf, 56c97317-26cf-43d2-bf76-0cab59c6fa5f, f87821f1-e4d9-49b9-9dab-39ee6a620b87, 853066b2-fb70-475e-8a77-b41f180df164, 979e0b69-05db-4652-98f2-a59c8f56acf8, 11c1f792-92cb-44a5-a481-1aa8cd257aef], super=GridFutureAdapter [ignoreInterrupts=false, state=INIT, res=null, hash=542833742]]]
[21:37:12,866][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Checkpoint finished [cpId=306c0895-1f5f-4237-bebf-8bf2b49682af, pages=157778, markPos=FileWALPointer [idx=3629, fileOffset=50829700, len=9229, forceFlush=false], pagesWrite=5460ms, fsync=45781ms, total=51241ms]
[21:37:12,878][INFO][exchange-worker-#62%statement_grid%][FileWriteAheadLogManager] Resuming logging to WAL segment [file=/mnt/wal/WAL/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463/0000000000000009.wal, offset=50838929, ver=1]
[21:37:13,028][WARNING][main][GridCachePartitionExchangeManager] Still waiting for initial partition map exchange [fut=GridDhtPartitionsExchangeFuture [firstDiscoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=3ac1160e-0de4-41bc-a366-59292c9f03c1, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 172.31.20.209], sockAddrs=[/0:0:0:0:0:0:0:1%lo:48500, /127.0.0.1:48500, ip-172-31-20-209.eu-central-1.compute.internal/172.31.20.209:48500], discPort=48500, order=57, intOrder=36, lastExchangeTime=1512931032324, loc=true, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=false], topVer=57, nodeId8=3ac1160e, msg=null, type=NODE_JOINED, tstamp=1512930972992], crd=TcpDiscoveryNode [id=56c97317-26cf-43d2-bf76-0cab59c6fa5f, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 172.31.27.101], sockAddrs=[/0:0:0:0:0:0:0:1%lo:48500, /127.0.0.1:48500, ip-172-31-27-101.eu-central-1.compute.internal/172.31.27.101:48500], discPort=48500, order=1, intOrder=1, lastExchangeTime=1512930972830, loc=false, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=3ac1160e-0de4-41bc-a366-59292c9f03c1, addrs=[0:0:0:0:0:0:0:1%lo, 127.0.0.1, 172.31.20.209], sockAddrs=[/0:0:0:0:0:0:0:1%lo:48500, /127.0.0.1:48500, ip-172-31-20-209.eu-central-1.compute.internal/172.31.20.209:48500], discPort=48500, order=57, intOrder=36, lastExchangeTime=1512931032324, loc=true, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=false], topVer=57, nodeId8=3ac1160e, msg=null, type=NODE_JOINED, tstamp=1512930972992], nodeId=3ac1160e, evt=NODE_JOINED], added=true, initFut=GridFutureAdapter [ignoreInterrupts=false, state=INIT, res=null, hash=820635914], init=false, lastVer=null, partReleaseFut=null, exchActions=null, affChangeMsg=null, initTs=1512930973012, centralizedAff=false, changeGlobalStateE=null, done=false, state=SRV, evtLatch=0, remaining=[eac777d5-281b-4a2e-a743-c585a08bfc68, ee15ea85-f5f6-4513-871e-7b4b080911cf, 56c97317-26cf-43d2-bf76-0cab59c6fa5f, f87821f1-e4d9-49b9-9dab-39ee6a620b87, 853066b2-fb70-475e-8a77-b41f180df164, 979e0b69-05db-4652-98f2-a59c8f56acf8, 11c1f792-92cb-44a5-a481-1aa8cd257aef], super=GridFutureAdapter [ignoreInterrupts=false, state=INIT, res=null, hash=542833742]]]
[21:37:13,116][INFO][exchange-worker-#62%statement_grid%][GridCacheProcessor] Started cache [name=ignite-sys-cache, memoryPolicyName=sysMemPlc, mode=REPLICATED, atomicity=TRANSACTIONAL]
[21:37:13,125][INFO][exchange-worker-#62%statement_grid%][GridCacheProcessor] Started cache [name=statementp, memoryPolicyName=Default_Region, mode=PARTITIONED, atomicity=TRANSACTIONAL]
[21:37:13,131][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionsExchangeFuture] Finished waiting for partition release future [topVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], waitTime=0ms, futInfo=NA]
[21:37:13,133][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Read checkpoint status [startMarker=/mnt/store/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463/cp/1512930965253-306c0895-1f5f-4237-bebf-8bf2b49682af-START.bin, endMarker=/mnt/store/node00-d1eb270c-d2cc-4550-87aa-64f6df2a9463/cp/1512930965253-306c0895-1f5f-4237-bebf-8bf2b49682af-END.bin]
[21:37:13,134][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Applying lost cache updates since last checkpoint record [lastMarked=FileWALPointer [idx=3629, fileOffset=50829700, len=9229, forceFlush=false], lastCheckpointId=306c0895-1f5f-4237-bebf-8bf2b49682af]
[21:37:13,738][INFO][exchange-worker-#62%statement_grid%][GridCacheDatabaseSharedManager] Finished applying WAL changes [updatesApplied=0, time=607ms]
[21:37:13,749][INFO][exchange-worker-#62%statement_grid%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], crd=false]
[21:37:13,782][INFO][sys-#72%statement_grid%][GridDhtPartitionsExchangeFuture] Received full message, will finish exchange [node=56c97317-26cf-43d2-bf76-0cab59c6fa5f, resVer=AffinityTopologyVersion [topVer=57, minorTopVer=0]]
[21:37:13,796][INFO][grid-nio-worker-tcp-comm-4-#45%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.24.98:58928]
[21:37:13,796][INFO][grid-nio-worker-tcp-comm-3-#44%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.27.95:52532]
[21:37:13,804][INFO][grid-nio-worker-tcp-comm-5-#46%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.17.174:54358]
[21:37:13,805][INFO][grid-nio-worker-tcp-comm-6-#47%statement_grid%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/172.31.20.209:48100, rmtAddr=/172.31.23.109:42528]
[21:37:17,569][INFO][sys-#72%statement_grid%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=57, minorTopVer=0], err=null]
{noformat}",,agoncharuk,DmitriyGovorukhin,dpavlov,githubbot,ignitetcbot,jokser,mcherkas,mmuzaf,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-9741,,,,,,,,,,,,,,,,,,,,,IGNITE-9420,,,IGNITE-9418,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 26 12:21:15 UTC 2018,,,,,,,,,,"0|i3nv67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/18 14:51;dpavlov;[~agoncharuk] are you going to implement this ticket? If not could you please move it to unassigned?;;;","12/Jul/18 11:50;mmuzaf;[~agoncharuk],

I would like to take this ticket for myself and start investigation. Can I?;;;","17/Jul/18 09:57;agoncharuk;No objections from my side, unassigned the ticket.;;;","13/Sep/18 08:11;mmuzaf;Changes are ready. Implementation details:
 # Moved binary recovery at the node startup – {{readCheckpointAndRestoreMemory}}
 # Resume WAL logging inside PME – {{onDoneRestoreBinaryMemory}}
 # Perform recovery on the node start after all caches initialized – {{cacheProcessorStarted}}
 # Start memory regions at the moment of first usage – {{initAndStartRegions}}
 # Save FileWriteHandler tail on activate\deactivate for resuming logging – {{FileWriteAheadLogManager#walTail}}
 # Check recovery on the middle of checkpoint – {{testBinaryRecoverBeforePMEWhenMiddleCheckpoint}}

PR: [Pull Request #4520|https://github.com/apache/ignite/pull/4520/files]
Upsource: [IGNT-CR-727|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-727]
TC: [#4342 (10 Sep 18 20:45)|https://ci.ignite.apache.org/viewLog.html?buildId=1835822&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll];;;","13/Sep/18 08:18;mmuzaf;[~dpavlov] , [~Jokser] , [~DmitriyGovorukhin]

Folks,

I need our help with the review.

Current TC `Run:All` looks good. Test looks a bit suspicious \{{IgnitePdsPageReplacementTest#testPageReplacement}}, but I've checked it and it passes. I will rerun TC and thoroughly recheck all tests before merge after we will come to an agreement with these PR changes.

 ;;;","19/Sep/18 15:39;DmitriyGovorukhin;[~Mmuzaf] Thanks for your work, I left my comments in UpSource review.;;;","19/Sep/18 15:41;DmitriyGovorukhin;[~Mmuzaf] Also, please add a link to TC run in links block, same place as for PR link.;;;","19/Sep/18 17:58;mmuzaf;[~DmitriyGovorukhin]

I've added TC link for the latest test results.
Also, I've also answered to your comments in Upsouce. We can continue the discussion here or there, as you like.;;;","21/Sep/18 10:36;DmitriyGovorukhin;[~Mmuzaf] Let's fix an issue related to init for persistence cache description and double initialize fort metastorage.;;;","24/Sep/18 11:57;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}ZooKeeper (Discovery) 2{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1929135]]

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1929157]]

{color:#d04437}Cache 6{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1929159]]
* IgniteCacheTestSuite6: TxRollbackOnTimeoutTest.testSimple - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 8{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1929184]]
* IgniteCacheTestSuite8: GridCacheConcurrentEvictionConsistencySelfTest.testPolicyConsistencyLruLocalFewKeys - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=1929175]]
* IgniteCacheTestSuite5: IgniteCachePartitionLossPolicySelfTest.testReadWriteSafeAfterKillTwoNodes - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 4{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1929174]]
* IgniteCacheTestSuite4: CacheStoreUsageMultinodeDynamicStartTxTest.testDynamicStartFromClientWriteBehindStore - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1929194&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","24/Sep/18 17:20;mmuzaf;[~DmitriyGovorukhin] ,

I've fixed cache persistence initialization according to our discussion, but I think, unfortunately, we can't avoid double initialization of meta storage for now. On cluster de-activation we destroy `FilePageStore's` related to particular cache holders and on cluster activation they have to be created by calling init method.

To avoid ambiguity I've created a new lifecycle database manager method `beforeResumeWalLogging`. I will file a new ticket to move `metastorage.initializeForMetastorage()` method to database lifecycle interface. So we will avoid double-call of it.

I've re-run TC and tests mentioned by `Ignite TC Bot` passed successfully. Exception messages are not due to my changes.
But I'm a little bit worry about timeouts in `ZooKeeper (Discovery) 2`, generally, timeouts are not related to my changes, but I'd like to double-check it.;;;","24/Sep/18 21:00;mmuzaf;Summary,

[Without minor changes - Run :: All #4342 (10 Sep 18 20:45)|https://ci.ignite.apache.org/viewLog.html?buildId=1835822&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]
[Run :: All #4832 (24 Sep 18 12:11)|https://ci.ignite.apache.org/viewLog.html?buildId=1929194&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]
[ZooKeeper (Discovery) 2 #3538 (24 Sep 18 20:11)|https://ci.ignite.apache.org/viewLog.html?buildId=1933147&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_ZooKeeperDiscovery2];;;","25/Sep/18 09:48;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Cache 5{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1934224]]
* CacheLateAffinityAssignmentTest.testConcurrentStartStaticCachesWithClientNodes (last started)

{color:#d04437}SPI{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=1934176]]
* IgniteSpiTestSuite: TcpCommunicationSpiFaultyClientTest.testNoServerOnHost - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1934243&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","25/Sep/18 13:35;mmuzaf;[~DmitriyGovorukhin]

I've re-run these suites:
 [Cache 5 - #3864 (25 Sep 18 15:12)|https://ci.ignite.apache.org/viewLog.html?buildId=1939408&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Cache5] – all tests passed.
 [SPI - #3410 (25 Sep 18 03:46)|https://ci.ignite.apache.org/viewLog.html?buildId=1934176&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Spi] – {{testNoServerOnHost}} test passed accoring suite report.
 [SPI - #3425 (25 Sep 18 15:12)|https://ci.ignite.apache.org/viewLog.html?buildId=1939410&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Spi] – some tests failed due to infrastructure problem - {{Caused by: java.net.BindException: Address already in use}};;;","25/Sep/18 14:09;dpavlov;[~Mmuzaf] if all tests passed you can re-issue TC Bot visa and it will be green.;;;","26/Sep/18 03:12;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Hadoop{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1942720]]

{color:#d04437}Platform C++ (Windows x86){color} [[tests 4 TIMEOUT , Out Of Memory Error , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=1942747]]
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionExp - 6,0% fails in last 100 master runs.
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionFloor - 6,0% fails in last 100 master runs.
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionLog - 6,0% fails in last 100 master runs.
* IgniteOdbcTest: SqlNumericFunctionTestSuite: TestNumericFunctionDegrees - 5,0% fails in last 100 master runs.

{color:#d04437}PDS (Direct IO) 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=1942756]]
* IgnitePdsNativeIoTestSuite: IgnitePdsDestroyCacheTest.testDestroyCachesAbruptly - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1942804&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","26/Sep/18 08:27;mmuzaf;[~dpavlov], [~DmitriyGovorukhin],

In general, I don't think that it's possible to get clear TC Bot visa on such PRs. I've noticed that if TC agents are under the pressure we will get failure suites more often.

But, test {{IgnitePdsDestroyCacheTest.testDestroyCachesAbruptly}} *definitely failed due to my changes*. It's flaky - [the next PDS (Direct IO) 1|https://ci.ignite.apache.org/viewLog.html?buildId=1942756] is OK here. Probable cause – we remove cache configuration from the store before writing checkpoint end marker, so on binary restore, we will get an exception with missing cache descriptor and it's not happened at the master branch due to getting cache descriptors after joining node to the cluster. 

I need some time to investigate the original cause.

[PDS (Direct IO) 1 - #3660 (26 Sep 18 09:37)|https://ci.ignite.apache.org/viewLog.html?buildId=1945365&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_PdsDirectIo1] -- all tests passed;;;","27/Sep/18 09:52;mmuzaf;Folks,

I've found the cause. The main problem with `flakiness` is that even `waitForCheckpoint` completes unsuccessfully (e.g. InterruptedException occurs) we only log this exception and delete cache group descriptor anyway. That's why at the restore binary state on node startup we've got {{testDestroyCachesAbruptly}} failure. I think we should restore only that caches we have at node start. PR fixed according to this assumption.

{code:java|title=GridCacheProcessor:2333}
            try {
                sharedCtx.database().waitForCheckpoint(""caches stop"");
            }
            catch (IgniteCheckedException e) {
                U.error(log, ""Failed to wait for checkpoint finish during cache stop."", e);
            }
{code}

I've merged PR with the latest changes of master branch and resolve all conflicts. Suppose, the IGNITE-9419 issue affects my branch and I've got some tests to hang at the moment of exchange future done.

I need to investigate this case, sorry. I'll back to you soon.;;;","27/Sep/18 13:03;mmuzaf;[~mcherkas]

Are we expecting this change to be included in 2.8 release? 
I would like to include this change in the 2.7 release and I will do everything possible for it.;;;","27/Sep/18 14:32;dpavlov;I think we almost did this change, no reason to move it to 2.8. Am I missing something?;;;","28/Sep/18 08:52;mmuzaf;Folks,

I've found problem commit. With reverting IGNITE-8559 in my local PR all tests start to pass.
I will investigate it.;;;","02/Oct/18 11:48;mmuzaf;Hello,

I've had the private discussion with Dmitry G. and we've agreed that the {{MemoryRecoveryRecord}} not used anymore. 
I will deprecate it for future releases. The whole code simplified according to this assumption.

Re-run TC.;;;","05/Oct/18 06:34;zstan;[~Mmuzaf] are any updates here?;;;","05/Oct/18 07:58;mmuzaf;[~zstan]

Yes, I'm working on fixing .NET tests. Changes will be ready within the next day or two.

https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_PlatformNet&branch_IgniteTests24Java8=pull%2F4520%2Fhead&tab=buildTypeStatusDiv;;;","07/Oct/18 16:25;mmuzaf;Folks,

I've had flaky `JVM crashed` on my PR branch on TC. Can't reproduce it locally.
I will fix it and back to you soon, hopefully before code freeze.

||Result||Changes||Started||
|Tests failed: 1 (1 new), passed: 1765, ignored: 35, muted: 2|No changes|07 Oct 18 18:33|
|JVM crashed; tests passed: 679, ignored: 9, muted: 2|No changes|07 Oct 18 18:18|
|JVM crashed (new); tests passed: 679, ignored: 9, muted: 2|No changes|07 Oct 18 18:09|
|Tests passed: 1766, ignored: 35, muted: 2|No changes|07 Oct 18 18:09|
|Tests failed: 1 (1 new), passed: 1765, ignored: 35, muted: 2|Maxim Muzafarov (2)|07 Oct 18 17:46|;;;","07/Oct/18 16:33;dpavlov;Please check if it is not the same problem as in [IGNITE-5555]. If it is same tests affected, probably there is nothing to worry about.;;;","10/Oct/18 09:57;mmuzaf;Sorry, folks.

I  have to move the issue to 2.8 release. I can't find the cause of JVM crash happened after merge lates changes with the master branch in .NET test {{TestBaselineTopology}}. I will spend all my time to fix this issue.;;;","15/Oct/18 16:34;mmuzaf;Folks,

I've found the cause of JVM crash. I will prepare the final TC-run review by myself.
Probably, the changes will be ready tomorrow.;;;","16/Oct/18 08:32;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Hadoop{color} [[tests 0 Out Of Memory Error , Exit Code , [Artifacts publishing failed] |https://ci.ignite.apache.org/viewLog.html?buildId=2095530]]
* HadoopMapReduceErrorResilienceTest.testRecoveryAfterAnError0_Error (last started)

{color:#d04437}_Javadoc_{color} [[tests 0 Exit Code , BuildFailureOnMessage |https://ci.ignite.apache.org/viewLog.html?buildId=2095534]]

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2090960&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","16/Oct/18 08:33;mmuzaf;Folks,

The TC build looks good. Both of these suites constantly failing in the master branch.;;;","16/Oct/18 09:38;mmuzaf;[~DmitriyGovorukhin], [~Jokser]

Can you review my changes, please?;;;","16/Oct/18 16:02;jokser;[~Mmuzaf] [~DmitriyGovorukhin] Changes look good to me. Ready to merge.;;;","17/Oct/18 13:11;mmuzaf;Folks,

I've resolved conflicts with the master branch. I've added new test -- we have to reset {{lastAbsArchivedIdx}} on BLT changed.;;;","17/Oct/18 15:43;mmuzaf;Folks,

I've resolved conflicts again due to new commits in the master branch.
Re-run TC.;;;","20/Oct/18 09:12;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Inspections (AOP){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2125157]]

{color:#d04437}Inspections (Core){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2125284]]

{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2125286]]
* IgniteSqlSplitterSelfTest.testIndexSegmentationPartitionedReplicated (last started)

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2122988&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","20/Oct/18 09:14;mmuzaf;I've merged the latest changes from the master branch.

It seems to me that everything is OK. The blockers mentioned by TCBot visa currently fail in the master branch too.;;;","23/Oct/18 11:00;mmuzaf;Guys,

We've got another conflict with the master branch. I've merged the changes but need to recheck the whole tests. It will take some time.;;;","23/Oct/18 22:05;DmitriyGovorukhin;[~Mmuzaf] Thanks, I try to help you with failed tests.;;;","26/Oct/18 11:43;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2164249&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","26/Oct/18 12:18;DmitriyGovorukhin;[~Mmuzaf] Thanks for great work, merged changes to master.;;;","26/Oct/18 12:21;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4520
;;;",
GridToStringBuilder should limit large collections output to first N elements,IGNITE-7195,13124719,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sbberkov,yzhdanov,yzhdanov,13/Dec/17 16:03,12/Jan/18 09:18,14/Jul/23 06:20,12/Jan/18 09:18,2.3,,,,,2.4,,,,,,0,,,,"GridToStringBuilder should limit large collections output to first N elements (otherwise, OOME is possible). N should be limited by IGNITE_TO_STRING_COLLECTION_LIMIT system property and should be 10 by default.

Upd: how about we limit GridToStringBuilder to 10000 chars by default to avoid OOME in complex recursive obj graphs? and (1) provide system property to change default and (2) also provide S.toString() overload that will accept maxLen parameter. 

Upd1: how about we add thread local message length counter in addition to thread local with buffers.",,ein,sbberkov,sboikov,SomeFire,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5473,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 12 09:18:41 UTC 2018,,,,,,,,,,"0|i3nv5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 15:03;sboikov;Added quick fix for length limit (#7a751436a573b292e17c534c09c8a626f6cd24f6).;;;","18/Dec/17 07:12;sbberkov;https://reviews.ignite.apache.org/ignite/review/IGNT-CR-437
https://github.com/apache/ignite/pull/3237;;;","20/Dec/17 08:51;sboikov;[~sbberkov],

You added limit for arrays, it is ok, but could you please combine it with my fix for length limit (let's have 2 parameters IGNITE_TO_STRING_MAX_LENGTH and IGNITE_TO_STRING_COLLECTION_LIMIT).

Thank you!;;;","21/Dec/17 04:19;sbberkov;[~ein] please watch tail printing here;;;","21/Dec/17 04:20;sbberkov;pull/3237;;;","10/Jan/18 09:03;sboikov;Merged into master.;;;","10/Jan/18 10:32;sboikov;Commented out code initializing tail, since it fails:
{noformat}
Caused by: class org.apache.ignite.IgniteException: String index out of range: -7752
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toStringImpl(GridToStringBuilder.java:1028)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:826)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:783)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxEntry.toString(IgniteTxEntry.java:1267)
	at java.lang.String.valueOf(String.java:2849)
	at java.lang.StringBuilder.append(StringBuilder.java:128)
	at java.util.AbstractCollection.toString(AbstractCollection.java:458)
	at java.lang.String.valueOf(String.java:2849)
	at org.apache.ignite.internal.util.GridStringBuilder.a(GridStringBuilder.java:101)
	at org.apache.ignite.internal.util.tostring.SBLimitedLength.a(SBLimitedLength.java:86)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:939)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toStringImpl(GridToStringBuilder.java:1005)
	... 24 more
Caused by: class org.apache.ignite.IgniteException: String index out of range: -7752
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toStringImpl(GridToStringBuilder.java:1028)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:826)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:783)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:885)
	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedCacheEntry.toString(GridDistributedCacheEntry.java:722)
	at org.apache.ignite.internal.processors.cache.distributed.dht.colocated.GridDhtDetachedCacheEntry.toString(GridDhtDetachedCacheEntry.java:90)
	at java.lang.String.valueOf(String.java:2849)
	at org.apache.ignite.internal.util.GridStringBuilder.a(GridStringBuilder.java:101)
	at org.apache.ignite.internal.util.tostring.SBLimitedLength.a(SBLimitedLength.java:86)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:939)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toStringImpl(GridToStringBuilder.java:1005)
	... 35 more
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -7752
	at java.lang.AbstractStringBuilder.substring(AbstractStringBuilder.java:872)
	at java.lang.StringBuilder.substring(StringBuilder.java:72)
	at java.lang.AbstractStringBuilder.substring(AbstractStringBuilder.java:819)
	at java.lang.StringBuilder.substring(StringBuilder.java:72)
	at org.apache.ignite.internal.util.tostring.SBLengthLimit.onWrite(SBLengthLimit.java:62)
	at org.apache.ignite.internal.util.tostring.SBLimitedLength.onWrite(SBLimitedLength.java:72)
	at org.apache.ignite.internal.util.tostring.SBLimitedLength.a(SBLimitedLength.java:88)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:939)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toString(GridToStringBuilder.java:897)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.appendVals(GridToStringBuilder.java:1666)
	at org.apache.ignite.internal.util.tostring.GridToStringBuilder.toStringImpl(GridToStringBuilder.java:1008)
	... 45 more
{noformat};;;","10/Jan/18 16:01;SomeFire;??Upd: how about we limit GridToStringBuilder to 10000 chars by default to avoid OOME in complex recursive obj graphs???
It will not help because some {{toString()}} methods have subsequent {{toString()}} calls in their body like {{AbstractCollection}}. It creates {{StringBuilder}}, which calls {{toString()}} of every element. They can call other {{toString()}}'s and so on. So we need to parse inner objects manually like in [IGNITE-602|https://issues.apache.org/jira/browse/IGNITE-602].;;;","12/Jan/18 09:18;sbberkov;Fixed in IGNITE-7385;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteReflectionFactory does not handle primitive data types.,IGNITE-7193,13124710,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,slava.koptilin,slava.koptilin,slava.koptilin,13/Dec/17 15:39,22/Feb/18 15:23,14/Jul/23 06:20,22/Feb/18 15:23,2.1,,,,,2.5,,general,,,,0,,,,"{code:java}
public class TestClass {
    public static final int INITIAL_VALUE = 12;
    public static final int UPDATED_VALUE = 42;

    private int field = INITIAL_VALUE;

    public void setField(int value) {
        this.field = value;
    }

    public int getField() {
        return this.field;
    }

    public static void main(String[] args) {
        Map<String, Serializable> props = new HashMap<>();
        props.put(""field"", UPDATED_VALUE);

        IgniteReflectionFactory<ExampleNodeStartup.TestClass> factory = new IgniteReflectionFactory<>(ExampleNodeStartup.TestClass.class);
        factory.setProperties(props);

        assertEquals(UPDATED_VALUE, factory.create().getField());
    }
}
{code}
",,agoncharuk,dpavlov,slava.koptilin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 22 15:23:43 UTC 2018,,,,,,,,,,"0|i3nv3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 10:17;dpavlov;Hi [~slava.koptilin], are there any news on this issue?;;;","21/Feb/18 00:02;slava.koptilin;Hi [~dpavlov],
Thanks for the review. I really appreciate it.
I fixed all your comments/findings. TC looks good to me.;;;","22/Feb/18 14:43;dpavlov;Looks good to me, [~agoncharuk], could you please merge?;;;","22/Feb/18 15:23;agoncharuk;Thanks, merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: ODBC return weird names for tables created with DDL,IGNITE-7189,13124700,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,13/Dec/17 15:24,26/Dec/17 09:41,14/Jul/23 06:20,26/Dec/17 09:41,2.3,,,,,2.4,,odbc,,,,0,,,,"If the table has been created by the {{CREATE TABLE}} statement, and then its metadata requested, returned names for tables are looking like the following:
{{SQL_PUBLIC_TABLE_NAME_00112233_4455_6677_8899_aabbccddeeff}}
Instead of:
{{TABLE_NAME}}",,githubbot,isapego,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 26 09:41:29 UTC 2017,,,,,,,,,,"0|i3nv1b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 17:53;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/3223

    IGNITE-7189: Fixed ODBC table names in metadata

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7189

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3223.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3223
    
----
commit c0df7f244f453371e6d38284c3c486e8b1aa217d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-13T15:26:02Z

    IGNITE-7189: Fixed

commit 57c2d0bd662ef770165a54ba9a7cff3b55530187
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-13T17:49:56Z

    IGNITE-7189: Added tests

----
;;;","13/Dec/17 17:56;isapego;Ready for review. [~tledkov-gridgain], can you take a look?;;;","25/Dec/17 12:46;tledkov-gridgain;[~isapego], the Ignite's server part is OK with me.;;;","26/Dec/17 09:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3223
;;;","26/Dec/17 09:41;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix IGNITE-7086 doesn't work with PESSIMISTIC REPEATABLE_READ transaction,IGNITE-7181,13124612,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,13/Dec/17 09:19,10/Oct/19 13:11,14/Jul/23 06:20,25/Dec/17 07:12,,,,,,2.8,,,,,,0,,,,,,dkarachentsev,githubbot,,,,,,,,,,,"dspavlov commented on issue #3217: IGNITE-7181 - Fix IGNITE-7086 doesn't work with PESSIMISTIC REPEATABL…
URL: https://github.com/apache/ignite/pull/3217#issuecomment-517476113
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3217: IGNITE-7181 - Fix IGNITE-7086 doesn't work with PESSIMISTIC REPEATABL…
URL: https://github.com/apache/ignite/pull/3217
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 13 11:08:06 UTC 2017,,,,,,,,,,"0|i3nuhr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 11:08;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3217

    IGNITE-7181 - Fix IGNITE-7086 doesn't work with PESSIMISTIC REPEATABL…

    …E_READ transaction

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7181

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3217.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3217
    
----
commit 13e9625e0821b74d8017d36ce84cd2f602283019
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-12-13T11:06:57Z

    IGNITE-7181 - Fix IGNITE-7086 doesn't work with PESSIMISTIC REPEATABLE_READ transaction

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Custom discovery messages from plugins are handled incorrectly,IGNITE-7177,13124397,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,12/Dec/17 16:10,07/Feb/18 16:28,14/Jul/23 06:20,07/Feb/18 16:28,2.1,,,,,2.4,,,,,,0,,,,We call onServerNodeJoin for custom messages which do not change affinity,,agoncharuk,ihorps,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 07 16:28:48 UTC 2018,,,,,,,,,,"0|i3nt5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Feb/18 16:28;agoncharuk;Fixed as a part of IEP-4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SqlQuery does not always find matching entries,IGNITE-7176,13124372,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,mk_mgb,mk_mgb,12/Dec/17 14:17,03/Jan/19 08:37,14/Jul/23 06:20,05/Oct/18 12:40,2.3,2.4,,,,2.7,,sql,,,,1,,,,"When the @QuerySqlField annotation is put on a custom class, the sql query sometimes does not find the entry.
With an cache of 100'000 entries, the problem occurs in about 50% of the test runs for 1 - 2 entries.

When the entry is not found, no log statement is written and no exception is thrown, but the result is missing, despite beeing accessible via cache.get(key).

Note that i could not reproduce the Issue when i rename the class LegaldocAcceptPk to TestEntityPk.

A reproducible unit test is attached.
",,csteffen,mk_mgb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 14:17;mk_mgb;sqlbug.zip;https://issues.apache.org/jira/secure/attachment/12901685/sqlbug.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 03 08:37:47 UTC 2019,,,,,,,,,,"0|i3nt0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jan/19 22:31;csteffen;[~mk_mgb] Can you clarify the scope of this bug?;;;","03/Jan/19 08:37;mk_mgb;In the versions below 2.7, you cannot trust the result of an SqlQuery under certain circumstances. Sometimes the SqlQuery finds all the matching entries, sometimes it does not.


The example is:


{code:java}
class LegaldocAcceptPk {
    @QuerySqlField(index = true)
    protected MyIdClass personId; 
}{code}


For a query with 'WHERE personId=?' the resultset is randomly wrong when
A. The @QuerySqlField Annotation is on a custom class
B. The name of the cached class 'LegaldocAcceptPk' is relevant. For some class names there where no missing results from the sql queries.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Throttling is not applied to page allocation,IGNITE-7175,13124362,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,dpavlov,dpavlov,12/Dec/17 13:16,25/Jan/18 14:35,14/Jul/23 06:20,14/Dec/17 09:05,2.3,,,,,2.4,,persistence,,,,0,,,,"Found during IGNITE-6341 testing, throttling check is not done for newly allocated pages.

Allocated page already has dirty flag, but Throttling parkNanos is applied only for intially not dirty page.

For initial load case it is required to do Throttling check for mostly new pages",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7533,IGNITE-7182,,IGNITE-7507,IGNITE-7017,IGNITE-6341,IGNITE-6334,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 14 10:08:32 UTC 2017,,,,,,,,,,"0|i3nsy7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 13:25;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/3209

    IGNITE-7175: Throttling is not applied to page allocation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3209.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3209
    
----
commit c4b794f4d6d2efe50b75094d06196d174b821b55
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-12T13:24:59Z

    IGNITE-7175: Throttling is not applied to page allocation

----
;;;","12/Dec/17 14:08;dpavlov;https://github.com/apache/ignite/pull/3209

https://ci.ignite.apache.org/viewQueued.html?itemId=994157&tab=queuedBuildOverviewTab;;;","14/Dec/17 07:38;dpavlov;[~agoncharuk], could you please review my changes?;;;","14/Dec/17 09:03;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3209
;;;","14/Dec/17 09:05;agoncharuk;Thanks, Dmitriy, changes look good. Merged to master.;;;","14/Dec/17 10:08;dpavlov;[~agoncharuk], thank you!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: implement optional row cache,IGNITE-7173,13124349,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,12/Dec/17 12:22,10/Jan/18 15:59,14/Jul/23 06:20,10/Jan/18 13:15,,,,,,2.4,,sql,,,,0,,,,,,githubbot,ptupitsyn,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7376,IGNITE-7379,,IGNITE-6945,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 10 15:59:07 UTC 2018,,,,,,,,,,"0|i3nsvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/17 14:11;vozerov;Cache should be cleared on the following events:
1) Cache destroy
2) Page eviction (PageMemoryImpl.Segment#evictPage)
3) Page update (FreeList.updateDataRow, FreeList.removeDataRowByLink)

To get number of elements on the page: {{DataPageIO.getDirectCount()}}
To understand if evicted page is data page: {{PageIO#getType(long) == T_DATA}};;;","25/Dec/17 15:48;tledkov-gridgain;[~vozerov], please review the patch.;;;","26/Dec/17 15:04;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/3291

    IGNITE-7173  SQL: implement optional row cache

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7173

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3291.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3291
    
----
commit c383ff6fc4e84b6c1c21a37a18a52558e712fdc6
Author: tledkov-gridgain <tledkov@...>
Date:   2017-12-26T12:18:31Z

    IGNITE-7173: save the progress

commit d3e6ee2c137c41daa8069ef7382e6b63f76951dc
Author: tledkov-gridgain <tledkov@...>
Date:   2017-12-26T12:25:44Z

    IGNITE-7173: save the progress

commit 551312877afeecadff115a1a080ca18a0404401f
Author: tledkov-gridgain <tledkov@...>
Date:   2017-12-26T12:31:10Z

    IGNITE-7173: save the progress

commit 9d4edbce23979ffb94a6f9e90610d1022e6f8e84
Author: tledkov-gridgain <tledkov@...>
Date:   2017-12-26T15:02:48Z

    IGNITE-7173: save the progress

----
;;;","27/Dec/17 08:20;vozerov;[~tledkov-gridgain], my comments:
1) {{H2RowCache.touch}} - is this the only possible approach to ""touching"" the page? The thing is that when we hit the cache, page is already acquired, so probably there should be less intrusive ways to do this. May be we even do not need to ""touch"" it at all. Please verify.
2) {{RowStore.ctor}} - please make sure that you do not hit NPE if indexing is not configured. Also you will obviously get NPEs in other places if cache is disabled in cache configuration. Moreover, some cache in the group may have
row cache, while others - don't. Again this would leave to NPE. Also, cache group context is started *before* cache context. So I doubt it could work at all. Can we inject row cache if it exists to row store inside cache start routine instead? Or may be it is better to do a lookup on every update/remove call.
Please make sure to cover with tests all possible cases.
3) {{PageMemoryImpl}} - same as p.1, not sure we need change ""touch"" logic anyhow, as row cache doesn't affect read lock/unlock cycles, so page usage stats should be updated anyway.
4) {{H2RowCachePageEvictionTest._testTouchPageOnRead}} - dead code
5) We need more precise tests. It is not enough to simply check that cache size changed. In case of update/remove we need to verify that exactly updated entries were removed. This can be done by iether manual inspection of row cache content, or indirectly through new query.
6) {{CacheConfiguration}} - we need better JavaDocs for this feature, describing on when and how entries are cached and invalidated.
7) Initial implementation also contained changes to {{CacheQueryObjectValueContext}} - {{copyOnGet}} was changed to {{false}} and {{storeValue}} was changed to {{true}}. This was done for a reason - in this mode when binary object is cached inside a row and SqlQuery is executed, then deserialized value is cached in inside binary object as well, what increases SqlQuery speed significantly. Any reason why these changes were reverted?;;;","09/Jan/18 11:42;tledkov-gridgain;2, 4, 6, 7 - Fixed
1,3 - We have to acquire page because a data page isn't acquired. The page is acquired on {{CacheDataRowAdapter#initFromLink}} for basic flow and on {{H2RowCache.touch}} when on-heap row cache is enabled and row is cached.

[~vozerov], tests results are OK with me. Please review the changes.;;;","10/Jan/18 13:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3291
;;;","10/Jan/18 15:59;ptupitsyn;Failed .NET test fixed: {{954b9b67320a00076b889aeb3ac751be11d4ae0e}}.
Ticket created: IGNITE-7379.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix javadoc MemoryConfiguration (20% instead of 80%),IGNITE-7170,13124315,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,alexey.tank2,alexey.tank2,alexey.tank2,12/Dec/17 09:18,10/Apr/18 13:37,14/Jul/23 06:20,12/Dec/17 11:54,2.3,,,,,2.4,,general,,,,0,,,,"org.apache.ignite.configuration.MemoryConfiguration#setDefaultMemoryPolicySize - has wrong javadoc - there is info about 80%.
It should be 20% ",,alexey.tank2,githubbot,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7824,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 10 13:37:49 UTC 2018,,,,,,,,,,"0|i3nsnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 09:22;githubbot;GitHub user apopovgg opened a pull request:

    https://github.com/apache/ignite/pull/3203

    IGNITE-7170 Fix javadoc MemoryConfiguration (20% instead of 80%)

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7170

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3203.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3203
    
----
commit 104b43cec4e8b07bbb8f2d00852bda6b762a5716
Author: apopov <tank2.alex@gmail.com>
Date:   2017-12-12T09:20:40Z

    IGNITE-7170 Fix javadoc MemoryConfiguration (20% instead of 80%)

----
;;;","12/Dec/17 09:23;alexey.tank2;[~ntikhonov@apache.org], please review this cosmetic change;;;","12/Dec/17 11:54;ntikhonov;[~alexey.tank2],
Thank for your contribution! I've merged the changes to master.;;;","12/Dec/17 11:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3203
;;;","10/Apr/18 13:35;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/3788

    IGNITE-7170

    Fixed log message.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-7170

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3788.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3788
    
----
commit 11424e9eeefc8fe1b8575623c18a8d565a376ab9
Author: NSAmelchev <nsamelchev@...>
Date:   2017-11-28T14:25:13Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 0b16700731bda414b8d7921f2c098c5ad1b6540b
Author: NSAmelchev <nsamelchev@...>
Date:   2018-01-19T09:46:31Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 0de054fe0a1ae41db58a67d3387d08deaf6d22e2
Author: NSAmelchev <nsamelchev@...>
Date:   2018-02-27T11:00:41Z

    Merge remote-tracking branch 'apache/master'

commit 29cb0f44d25621d1e41e00d504c3e7bf44c1d735
Author: NSAmelchev <nsamelchev@...>
Date:   2018-03-15T10:58:37Z

    Merge pull request #20 from apache/master
    
    merge

commit 9b0f16930a5e1da4ef3a528b7879cd1fca5307f7
Author: NSAmelchev <nsamelchev@...>
Date:   2018-03-20T08:17:26Z

    Merge pull request #21 from apache/master
    
    Merge

commit 07dc37c806dcc9a9527f4b85c116d1bb6543effc
Author: NSAmelchev <nsamelchev@...>
Date:   2018-04-10T13:33:27Z

    fix log message

----
;;;","10/Apr/18 13:37;githubbot;Github user NSAmelchev closed the pull request at:

    https://github.com/apache/ignite/pull/3788
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missed javadoc for IgniteToDoubleFunction,IGNITE-7169,13124307,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,chief,chief,12/Dec/17 08:15,12/Dec/17 13:52,14/Jul/23 06:20,12/Dec/17 13:50,,,,,,2.4,,ml,,,,0,,,,Missed javadoc for IgniteToDoubleFunction,,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 13:52:10 UTC 2017,,,,,,,,,,"0|i3nslz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 08:19;chief;Already fixed per IGNITE-6949;;;","12/Dec/17 13:16;chief;javadoc is empty;;;","12/Dec/17 13:18;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/3208

    IGNITE-7169: Missed javadoc for IgniteToDoubleFunction

    fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7169

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3208.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3208
    
----
commit 9bab0d8cca9873cfb0ee1ee87442025bf9d658f6
Author: YuriBabak <y.chief@gmail.com>
Date:   2017-12-12T13:17:58Z

    IGNITE-7169: Missed javadoc for IgniteToDoubleFunction
    
    fixed

----
;;;","12/Dec/17 13:50;chief;merged;;;","12/Dec/17 13:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3208
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL join with partition and replicated caches fails if number of partitions is too low.,IGNITE-7166,13124149,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ascherbakov,ascherbakov,11/Dec/17 15:11,12/Dec/17 17:07,14/Jul/23 06:20,12/Dec/17 17:07,2.3,,,,,2.4,,sql,,,,0,,,,"If not all nodes receive primary partition, we fail to validate nodes predicate:

{code}
org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor#stableDataNodes
...
else if (!isReplicatedOnly && extraCctx.isReplicated()) {
                if (!extraNodes.containsAll(nodes))
{code}

Solution: remove from validation nodes containing no primary partitions for replicated cache.

Reproducer:

{noformat}
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ignite.internal.processors.cache.distributed.replicated;

import java.util.List;
import org.apache.ignite.Ignite;
import org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction;
import org.apache.ignite.cache.query.FieldsQueryCursor;
import org.apache.ignite.cache.query.SqlFieldsQuery;
import org.apache.ignite.cache.query.annotations.QuerySqlField;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;

import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL;
import static org.apache.ignite.cache.CacheMode.PARTITIONED;
import static org.apache.ignite.cache.CacheMode.REPLICATED;
import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC;

/**
 * Tests non collocated join with replicated cache.
 */
public class IgniteCacheReplicatedJoinSelfTest extends GridCommonAbstractTest {
    /** */
    public static final String REP_CACHE_NAME = ""repCache"";

    /** */
    public static final String PART_CACHE_NAME = ""partCache"";

    /** */
    public static final int REP_CNT = 3;

    /** */
    public static final int PART_CNT = 10_000;

    /** {@inheritDoc} */
    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {
        final IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);

        cfg.setClientMode(""client"".equals(igniteInstanceName));

        final CacheConfiguration ccfg1 = new CacheConfiguration(PART_CACHE_NAME);
        ccfg1.setCacheMode(PARTITIONED);
        ccfg1.setAtomicityMode(TRANSACTIONAL);
        ccfg1.setWriteSynchronizationMode(FULL_SYNC);
        ccfg1.setIndexedTypes(Integer.class, PartValue.class);

        final CacheConfiguration ccfg2 = new CacheConfiguration(REP_CACHE_NAME);
        ccfg2.setAffinity(new RendezvousAffinityFunction(false, REP_CNT));
        ccfg2.setCacheMode(REPLICATED);
        ccfg2.setAtomicityMode(TRANSACTIONAL);
        ccfg2.setWriteSynchronizationMode(FULL_SYNC);
        ccfg2.setIndexedTypes(Integer.class, RepValue.class);

        cfg.setCacheConfiguration(ccfg1, ccfg2);

        return cfg;
    }

    /**
     *
     * @throws Exception
     */
    public void testJoinNonCollocated() throws Exception {
        startGridsMultiThreaded(3);

        final Ignite client = startGrid(""client"");

        for (int i = 0; i < REP_CNT; i++)
            client.cache(REP_CACHE_NAME).put(i, new RepValue(i, ""rep"" + i));

        for (int i = 0; i < PART_CNT; i++)
            client.cache(PART_CACHE_NAME).put(i, new PartValue(i, ""part"" + i, ((i + 1) % REP_CNT)));

        final FieldsQueryCursor<List<?>> qry = client.cache(PART_CACHE_NAME).
            query(new SqlFieldsQuery(""select PartValue._VAL, r._VAL from PartValue, \""repCache\"".RepValue as r where PartValue.repId=r.id""));

        final List<List<?>> all = qry.getAll();

        assertEquals(10_000, all.size());

        for (List<?> objects : all) {
            final PartValue pv = (PartValue)objects.get(0);
            final RepValue rv = (RepValue)objects.get(1);

            assertNotNull(rv);

            assertEquals(rv.getId(), pv.getRepId());
        }
    }

    /** */
    public static class PartValue {
        /** Id. */
        @QuerySqlField
        private int id;

        /** Name. */
        @QuerySqlField
        private String name;

        /** Rep id. */
        @QuerySqlField
        private int repId;

        /**
         * @param id Id.
         * @param name Name.
         * @param repId Rep id.
         */
        public PartValue(int id, String name, int repId) {
            this.id = id;
            this.name = name;
            this.repId = repId;
        }

        /** */
        public int getId() {
            return id;
        }

        /** */
        public void setId(int id) {
            this.id = id;
        }

        /** */
        public String getName() {
            return name;
        }

        /** */
        public void setName(String name) {
            this.name = name;
        }

        /** */
        public int getRepId() {
            return repId;
        }

        /** */
        public void setRepId(int repId) {
            this.repId = repId;
        }
    }

    /** */
    public static class RepValue {
        /** Id. */
        @QuerySqlField
        private int id;

        /** Name. */
        @QuerySqlField
        private String name;

        /**
         * @param id Id.
         * @param name Name.
         */
        public RepValue(int id, String name) {
            this.id = id;
            this.name = name;
        }

        /** */
        public int getId() {
            return id;
        }

        /** */
        public void setId(int id) {
            this.id = id;
        }

        /** */
        public String getName() {
            return name;
        }

        /** */
        public void setName(String name) {
            this.name = name;
        }
    }
}
{noformat}",,ascherbakov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 17:07:32 UTC 2017,,,,,,,,,,"0|i3nrn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 08:11;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/3202

    IGNITE-7166

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7166

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3202.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3202
    
----
commit f86f15ce3c5563626acfed62f20ae97f894b83b0
Author: devozerov <vozerov@gridgain.com>
Date:   2017-12-12T07:11:30Z

    Test.

commit c2e492c89983a6f732968296e2dc0ed87310c9a2
Author: devozerov <vozerov@gridgain.com>
Date:   2017-12-12T07:29:04Z

    Simplifying test.

commit 40e86a21f61ecd73298995d22b7d7b423c9d3624
Author: devozerov <vozerov@gridgain.com>
Date:   2017-12-12T07:33:31Z

    Simplifying test.

commit bd3aa152dbd638dc94b0ecfde0112a2c6d535832
Author: devozerov <vozerov@gridgain.com>
Date:   2017-12-12T08:02:02Z

    Fix.

commit 7a6bcadeeaddd3b44999baae743cc7ba93c46762
Author: devozerov <vozerov@gridgain.com>
Date:   2017-12-12T08:10:51Z

    Finalization.

----
;;;","12/Dec/17 17:07;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/3202
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-balancing is cancelled if client node joins,IGNITE-7165,13124136,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,mmuzaf,mcherkasov,mcherkasov,11/Dec/17 13:52,25/Apr/19 11:09,14/Jul/23 06:20,01/Aug/18 15:41,,,,,,2.7,,,,,,0,rebalance,,,"Re-balancing is canceled if client node joins. Re-balancing can take hours and each time when client node joins it starts again:

[15:10:05,700][INFO][disco-event-worker-#61%statement_grid%][GridDiscoveryManager] Added new node to topology: TcpDiscoveryNode [id=979cf868-1c37-424a-9ad1-12db501f32ef, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.31.16.213], sockAddrs=[/0:0:0:0:0:0:0:1:0, /127.0.0.1:0, /172.31.16.213:0], discPort=0, order=36, intOrder=24, lastExchangeTime=1512907805688, loc=false, ver=2.3.1#20171129-sha1:4b1ec0fe, isClient=true]
[15:10:05,701][INFO][disco-event-worker-#61%statement_grid%][GridDiscoveryManager] Topology snapshot [ver=36, servers=7, clients=5, CPUs=128, heap=160.0GB]
[15:10:05,702][INFO][exchange-worker-#62%statement_grid%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=36, minorTopVer=0], crd=false, evt=NODE_JOINED, evtNode=979cf868-1c37-424a-9ad1-12db501f32ef, customEvt=null, allowMerge=true]
[15:10:05,702][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=36, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=36, minorTopVer=0], err=null]
[15:10:05,702][INFO][exchange-worker-#62%statement_grid%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=36, minorTopVer=0], crd=false]
[15:10:05,703][INFO][exchange-worker-#62%statement_grid%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=36, minorTopVer=0], evt=NODE_JOINED, node=979cf868-1c37-424a-9ad1-12db501f32ef]
[15:10:08,706][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Cancelled rebalancing from all nodes [topology=AffinityTopologyVersion [topVer=35, minorTopVer=0]]
[15:10:08,707][INFO][exchange-worker-#62%statement_grid%][GridCachePartitionExchangeManager] Rebalancing scheduled [order=[statementp]]
[15:10:08,707][INFO][exchange-worker-#62%statement_grid%][GridCachePartitionExchangeManager] Rebalancing started [top=null, evt=NODE_JOINED, node=a8be3c14-9add-48c3-b099-3fd304cfdbf4]
[15:10:08,707][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Starting rebalancing [mode=ASYNC, fromNode=2f6bde48-ffb5-4815-bd32-df4e57dc13e0, partitionsCount=18, topology=AffinityTopologyVersion [topVer=36, minorTopVer=0], updateSeq=-1754630006]
[15:10:08,707][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Starting rebalancing [mode=ASYNC, fromNode=35d01141-4dce-47dd-adf6-a4f3b2bb9da9, partitionsCount=15, topology=AffinityTopologyVersion [topVer=36, minorTopVer=0], updateSeq=-1754630006]
[15:10:08,708][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Starting rebalancing [mode=ASYNC, fromNode=b3a8be53-e61f-4023-a906-a265923837ba, partitionsCount=15, topology=AffinityTopologyVersion [topVer=36, minorTopVer=0], updateSeq=-1754630006]
[15:10:08,708][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Starting rebalancing [mode=ASYNC, fromNode=f825cb4e-7dcc-405f-a40d-c1dc1a3ade5a, partitionsCount=12, topology=AffinityTopologyVersion [topVer=36, minorTopVer=0], updateSeq=-1754630006]
[15:10:08,708][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Starting rebalancing [mode=ASYNC, fromNode=4ae1db91-8b88-4180-a84b-127a303959e9, partitionsCount=11, topology=AffinityTopologyVersion [topVer=36, minorTopVer=0], updateSeq=-1754630006]
[15:10:08,708][INFO][exchange-worker-#62%statement_grid%][GridDhtPartitionDemander] Starting rebalancing [mode=ASYNC, fromNode=7c286481-7638-49e4-8c68-fa6aa65d8b76, partitionsCount=18, topology=AffinityTopologyVersion [topVer=36, minorTopVer=0], updateSeq=-1754630006]

so in clusters with a big amount of data and the frequent client left/join events this means that a new server will never receive its partitions.
",,avinogradov,avk47,dpavlov,githubbot,ilyak,mcherkasov,mmuzaf,qvad,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-10374,,,IGNITE-11803,IGNITE-9309,IGNITE-11187,,,,,,,,,,"16/Aug/18 15:01;qvad;GridCacheRebalancingCancelTestNoReproduce.java;https://issues.apache.org/jira/secure/attachment/12935881/GridCacheRebalancingCancelTestNoReproduce.java","15/Aug/18 11:36;qvad;node-2-jstack.log;https://issues.apache.org/jira/secure/attachment/12935682/node-2-jstack.log","14/Aug/18 09:56;qvad;node-NO_REBALANCE-7165.log;https://issues.apache.org/jira/secure/attachment/12935518/node-NO_REBALANCE-7165.log",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 26 12:22:44 UTC 2018,,,,,,,,,,"0|i3nrk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/17 14:19;avinogradov;It looks like we can continue rebalancing in case joined/left node is a client.;;;","11/Dec/17 15:16;yzhdanov;[~avinogradov] It looks like we can continue rebalancing if assignment has not been changed and local node still needs the partition being rebalanced. No matter how topology changed.;;;","11/Dec/17 15:31;avinogradov;Agree.;;;","20/Dec/17 14:33;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3264

    IGNITE-7165 Only cancel old rebalance future when new rebalance is non-trivial.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3264.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3264
    
----
commit 2cbf1c5f50bcd301897fd4a1ded681b14e95e795
Author: Ilya Kasnacheev <ilya.kasnacheev@...>
Date:   2017-12-20T14:31:16Z

    IGNITE-7165 Only cancel old rebalance future when new rebalance is non-trivial.

----
;;;","29/Dec/17 14:14;ilyak;The above patch seems to fail one peculiar test:
CacheLateAffinityAssignmentTest.testConcurrentStartStaticCachesWithClientNodes 

Here, it seems that in some runs, ignite-sys-cache is only rebalanced when client node joins, and never before that. I haven't figured out this one yet.;;;","11/Jan/18 15:01;ilyak;[~agoncharuk] please review the proposed patch https://github.com/apache/ignite/pull/3264;;;","23/May/18 11:11;githubbot;GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/4048

     IGNITE-7165: do not cancel rebalance at client join left topology

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite ignite-7165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4048.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4048
    
----
commit 339e5a6e6e18bb136d988e85dc81f67686bda285
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-23T11:07:53Z

    IGNITE-7165: do not cancel rebalance at client join left topology

commit 4c0b5a3649033bf22f773f753bf96f0ae54e7537
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-23T11:11:10Z

    IGNITE-7165: code styles

----
;;;","30/May/18 17:19;githubbot;GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/4097

    IGNITE-7165: suggesstions by AV

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite av-ignite-7165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4097.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4097
    
----
commit e7a80e64da07af5c43c15fd5a7b1abe14d387057
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-30T16:46:06Z

    IGNITE-7165: add fix by suggestions AV

commit 9f7551c15ff62c187422095c0626200245c36a36
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-30T16:49:01Z

    IGNITE-7165: revert some

----
;;;","31/May/18 10:36;githubbot;GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/4099

    IGNITE-7165: check aff assignments

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite mm-ignite_7165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4099.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4099
    
----
commit 2d469ee16cc494c9fe90d371a6626250451d268b
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-31T10:35:47Z

    IGNITE-7165: check aff assignments

----
;;;","03/Jun/18 16:38;githubbot;GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/4112

    IGNITE-7165: check affinity changed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite mm-fix-7165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4112.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4112
    
----
commit ab92cefc8a93462fa68746a3379a9afdc81bea60
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-03T16:38:17Z

    IGNITE-7165: check affinity changed

----
;;;","16/Jul/18 16:17;githubbot;GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/4368

    IGNITE-7165 Rebalance control version holds by exchange thread

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite av-ignit-7165-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4368.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4368
    
----
commit e7a80e64da07af5c43c15fd5a7b1abe14d387057
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-30T16:46:06Z

    IGNITE-7165: add fix by suggestions AV

commit 9f7551c15ff62c187422095c0626200245c36a36
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-30T16:49:01Z

    IGNITE-7165: revert some

commit 0ab2d301bd5a100f8dcf1ef964786264ebee6b0a
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-05-30T17:39:04Z

    IGNITE-7165: changes due to else if

commit 0d37670990f6546202771313ba0869bd2b709ad4
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-07T12:56:45Z

    Merge branch 'master' into av-ignite-7165

commit 7673f1afdb7eaa79d4e03ee16083ee5ea4b92290
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-07T14:29:51Z

    IGNITE-7165: add assignments calculations compare

commit ce2ea0b397f416a764681259911adf04fa397d61
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-07T20:28:09Z

    IGNITE-7165: hasPendingExchanges flag to start rebalance

commit 9f5d9f7871ba9cff079a76097bb4f269fd7f7a5b
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-07T20:30:39Z

    IGNITE-7165: rename rebalance assingns needs

commit 4dcb6270d026f36fb7b3ae2b904ce36bc633ac55
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-07T20:35:29Z

    IGNITE-7165: javadoc

commit cccdd69b86ebcce1626dfc9416f32f88e708d4e9
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-08T15:06:39Z

    IGNITE-7165: remove skip rebalance twice

commit 3410aaca6298be1b3b26c5202b43a1b787123396
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-10T13:50:00Z

    IGNITE-7165: calculate assigns on last running topology version

commit 5f98a480a07d2c0504a60763da482c2792540719
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-19T11:00:32Z

    Merge branch 'master' into av-ignite-7165
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java

commit cfb9574d65f64660f36689789b0090ef0be50fcb
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-20T16:48:28Z

    IGNITE-7165: keep last rebalance topology version

commit d15515f3ee83455697dead6ff39e75dafebcfd76
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-20T17:10:11Z

    IGNITE-7165: return last rebalance topology version

commit d0d47eb0eda31165f5c8f1e53ef92ecf82d9c548
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-21T10:29:15Z

    IGNITE-7165: default value for rebalance topVer should be null

commit 68d53d7c317ee676c08d45b6a4be360bb4659fb7
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-21T10:30:56Z

    Merge branch 'master' into av-ignite-7165

commit 4cf7c72e9db55d47a305f93c649d29e6557354e2
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-21T10:33:55Z

    IGNITE-7165: debug messages for update topology version

commit 7bd0be89c66bf5bf78f88c5e30d32c70c79a5fcd
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T09:11:33Z

    ignite-7165: skip if null

commit 4b2e232c0d97452986fe79f6c33ec62e5b9ad9a7
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T09:46:34Z

    ignite-7165: java doc update

commit 682194b1597a91a86c4b3546a8f3726bdae07254
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T12:20:11Z

    ignite-7165: move latest ver to rebalance future

commit d9fbea3af09478332347181c3f2b330541a7e7b5
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T14:29:06Z

    ignite-7165: use get topology version method

commit 15d90b01535c9e199286b6cd5cdd16e0eb28e76e
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T14:39:21Z

    ignite-7165: fix javadoc exchange

commit 9568763143cf136cfc4e15ab4076f654c9f78131
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T14:47:16Z

    ignite-7165: remove unnecessary topology check

commit 648ab2df71f4a06e59843371181ba0c075efed2f
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T14:51:34Z

    ignite-7165: java doc fix 2

commit 84d4cfa4b08226f8d2ad8cb163dd3015675692ec
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:00:04Z

    ignite-7165: force rebalance routine

commit 38218eeea65574c8d3965fddaf2b037e60127ac9
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:01:36Z

    ignite-7165: force rebalance 2

commit aa21fd2133b0fca74a135795bbab1393ec56fb87
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:05:38Z

    ignite-7165: simplify topology changed conditions

commit 66b5f76c15cb67b60adeca864a21fdad39acf6f7
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:10:43Z

    ignite-7165: new java doc for assignments

commit a097a153ed637f2928a1c183af28c3050213df08
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:46:56Z

    ignite-7165: reorganize newly added methods

commit a0fca19c12045461ba3fc4bac25b75b27dada7ae
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:50:00Z

    ignite-7165: remove missprint

commit df8fc1e551899cd70f139e646ca7abc348fa12b6
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-06-22T15:53:40Z

    ignite-7165: GridToStringInclude for assignments

----
;;;","27/Jul/18 06:49;githubbot;Github user Mmuzaf closed the pull request at:

    https://github.com/apache/ignite/pull/4048
;;;","27/Jul/18 06:49;githubbot;Github user Mmuzaf closed the pull request at:

    https://github.com/apache/ignite/pull/4099
;;;","27/Jul/18 06:49;githubbot;Github user Mmuzaf closed the pull request at:

    https://github.com/apache/ignite/pull/4112
;;;","27/Jul/18 06:50;githubbot;Github user Mmuzaf closed the pull request at:

    https://github.com/apache/ignite/pull/4368
;;;","27/Jul/18 07:29;githubbot;GitHub user Mmuzaf opened a pull request:

    https://github.com/apache/ignite/pull/4442

    IGNITE-7165: skip rebalance if assigns not changed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Mmuzaf/ignite ignite-7165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4442.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4442
    
----
commit e38cd5db2b3f3c1529d08e78875eb0e043c0d9f1
Author: Maxim Muzafarov <maxmuzaf@...>
Date:   2018-07-27T07:27:58Z

    IGNITE-7165: skip rebalance if assigns not changed

----
;;;","29/Jul/18 12:10;mmuzaf;h5. Changes ready
 * TC: [#3025 (27 Jul 18 20:00)|https://ci.ignite.apache.org/viewLog.html?buildId=1554633&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]
 * PR: [#4442|https://github.com/apache/ignite/pull/4442]
 * Upsource: [IGNT-CR-699|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-699]

h5. Implementation details
 # _Keep rebalance version_
 Now it's not the last affinity topology version. To calculate affinity assignment difference with the last topology version we should save version on which rebalance is being currently running. Keep it in exchange thread.
 # _{{LEFT\FAIL}} events triggers rebalance_
 Each cache group have collection of supplier nodes to be retrieved for partitions -- {{Map<> remaining}}. If some nodes of this collection {{LEFT\FAIL}} cluster, rebalance must be restarted.
 # _{{onLocalJoin}} event triggers rebalance_
 Partition state changed OWNING → MOVING on coordinator due to obsolete partititon update counter. Coordinator performs PME and after megre all SingleMessages marks partitions with obsolete update sequence to be demanded from remote nodes (by change OWNING -> MOVING partition state).
 # _{{empty}} affinity history triggers rebalance_
 Cache group can be started much later (not at local join event). So, this cache group wouldn't have affinity history to compare with latest affinity.
  # _Clear suppy contex map changed_
 Previously, supply context map have been cleared after each topology version change occurs. Since we can preform rebalance not on the latest topology version this behavior should be changed. Clear context only for nodes left\failed from topology.
 # _topologyChanged() method new condition_
 PME prepares partition to be {{RENTED}} or {{EVICTED}} if they are not assign on local node regarding new affinity calculation. Processing stale supply message (on previous versions) can lead to exceptions with getting partitions on local node with incorrect state. Thats why stale {{GridDhtPartitionSupplyMessage}} must be ignored by {{Demander}}.
  # _REPLICATED cache processing_
 Affinity assignment for this type of cache groups always not changed.;;;","31/Jul/18 16:51;mmuzaf;*Improvements created*

IGNITE-9149 – Get rid of logging remaining supplier nodes rebalance time
 IGNITE-9119 – Missed dumpDebugInfo for rebalance;;;","01/Aug/18 15:08;mmuzaf;Folks,

Rerun TC with changes merged from master.

Seems everething is OK.

[#3089 (01 Aug 18 11:10)|https://ci.ignite.apache.org/viewLog.html?buildId=1571605&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll];;;","01/Aug/18 15:41;avinogradov;Merged to master.
Thanks for contribution.;;;","13/Aug/18 13:26;qvad;I've problem with current solution

Following test passed on version before fix, and hangs on current master on first iteration.
Test hangs on JMX LocalNodeMovingPartitionsCount and looks like rebalance did not started at all.

Repeat 10 times:
1. stop node
2. clean lfs
3. add stopped node (trigger rebalance)
4. 3 times: start 2 clients, wait for topology snapshot, close clients
5. for each cache group check JMX metrics LocalNodeMovingPartitionsCount (like waitForFinishRebalance());;;","13/Aug/18 13:41;avinogradov;[~qvad], 
Thanks for reporting the issue. 
But, provided description is not clear to me.
Could you please attach the test (reproducer) you mentioned? 
This will help us to solve the issue.;;;","13/Aug/18 13:43;mmuzaf;[~qvad]

Which test hungs? Does it persists in project code base? 
Please, attach logs or your reproducer.;;;","14/Aug/18 11:18;qvad;For now, I have no reproducer on Java.
 I've investigated persistent store in my test and found that there is rebalanced data in storage on the node with cleared LFS, but metrics LocalNodeMovingPartitionsCount is definitely broken after client node joins the cluster. If I remove the client join event after the node is back - rebalance finished correctly.

Here is code from my test log: (Rebalance didn't finish in 240 seconds, while in previous versions it's done in 10-15 seconds)

[13:14:17][:568 :617] Wait rebalance to finish 8/240Current metric state for cache cache_group_3_088 on node 2: 19
 ....
 [13:18:04][:568 :617] Wait rebalance to finish 235/240Current metric state for cache cache_group_3_088 on node 2: 19

 

P.S. Test runs on a distributed environment, not on a single machine;;;","14/Aug/18 11:46;mmuzaf;[~qvad]

I've checked logs you provided. Actually it's a common case with rebalacing procedure and it completes successfully (accorgind your logs).
We have a lot of tests covered this e.g.:
* {{IgniteCacheGroupsTest#testRestartsAndCacheCreateDestroy}} – 10 casches, 10 nodes (server + client) random put\get operations on caches.
* {{CacheLateAffinityAssignmentTest#testConcurrentStartStaticCachesWithClientNodes}}

So, probably, your issue about {{LocalNodeMovingPartitionsCount}} metrics propagation with client nodes. 
I can check it additionally, but It very hepls me if you provide info about your test suite.;;;","15/Aug/18 11:50;qvad;[~Mmuzaf]

Config:
 (UPD: Disabling persistance solves the problem)
{code:java}
<property name=""clientMode"" value=""false""/>
<property name=""activeOnStart"" value=""false""/>
<property name=""consistentId"" value=""${CONSISTENT_ID}""/>
<property name=""cacheConfiguration"" ref=""caches""/>
<property name=""communicationSpi"">
    <bean class=""org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi"">
        <property name=""sharedMemoryPort"" value=""-1""/>
    </bean>
</property>

<property name=""binaryConfiguration"">
    <bean class=""org.apache.ignite.configuration.BinaryConfiguration"">
        <property name=""compactFooter"" value=""false""/>
    </bean>
</property>

<property name=""dataStorageConfiguration"">
    <bean class=""org.apache.ignite.configuration.DataStorageConfiguration"">
        <property name=""defaultDataRegionConfiguration"">
            <bean class=""org.apache.ignite.configuration.DataRegionConfiguration"">
                <property name=""persistenceEnabled"" value=""true""/>
            </bean>
        </property>
        <property name=""walSegments"" value=""5""/>
        <property name=""walSegmentSize"" value=""1000000""/>
    </bean>
</property>{code}
Test code:
{code:java}
def test_blinking_clients_clean_lfs(self):
    """"""
    IGNITE-7165
    """"""
    self.wait_for_running_clients_num(client_num=0, timeout=120)

    self.start_grid() # start 4 nodes

    for _ in range(0, 10):
        log_print(""Iteration %s"" % str(_))

        self.assert_nodes_alive() # check that no nodes left grid because of FailHandler

        self.ignite.kill_node(2)
        self._cleanup_lfs(2)
        self.ignite.start_node(2)

        # start Ignition.start() with client config and do nothing 3 times
        with PiClient(self.ignite, self.get_client_config()):
            pass 

        with PiClient(self.ignite, self.get_client_config()):
            pass

        with PiClient(self.ignite, self.get_client_config()):
            pass

        # check LocalNodeMovingPartitionsCount metric for all cache groups in cluster
        # wait that for all cache groups this value will be 0
        self.wait_for_finish_rebalance(){code}
self.start_grid() start real grid on distributed servers using ignite.sh scripts. with PiClient block start JVM and runs Ignition.start() with client config (major difference with server config is clientMode=true)

Log file of this test contains following information: metric dos not change their state in 240 seconds in current master. (I've recently check this on 15 Aug nightly build)
{code:java}
Current metric state for cache cache_group_1_028 on node 2: 19
[14:44:58][:568 :617] Wait rebalance to finish 7/240
Current metric state for cache cache_group_1_028 on node 2: 19
[14:45:04][:568 :617] Wait rebalance to finish 13/240
Current metric state for cache cache_group_1_028 on node 2: 19
....
[14:48:47][:568 :617] Wait rebalance to finish 236/240
Current metric state for cache cache_group_1_028 on node 2: 19{code}
Config of the cache that fails:
{code:xml}
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_1_028""/>
    <property name=""atomicityMode"" value=""ATOMIC""/>
    <property name=""backups"" value=""1""/>
    <property name=""cacheMode"" value=""PARTITIONED""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""evictionPolicy"">
        <bean class=""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"">
            <property name=""maxSize"" value=""1000""/>
        </bean>
    </property>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""32""/>
        </bean>
    </property>
</bean>{code}
I'm afraid that this all information that I can provide for you for now. I've attached jstack from node2: [^node-2-jstack.log]^[^node-2-jstack.log]^;;;","15/Aug/18 12:03;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3264
;;;","15/Aug/18 12:36;mmuzaf;[~qvad]

Thanks! I will have a look today. 
I will need some time to investigate your case.;;;","15/Aug/18 13:42;qvad;[~Mmuzaf]

I'm looking on this issue too. I've some additional information: cache cache_group_1_028 is not the single cache in test. And there is some dependency on caches number or(and) configs. I will provide you information, when I'll got some results.;;;","15/Aug/18 14:38;qvad;Following set of caches leads to bug in my test :) All this caches unable to change their JMX properties after clients connect/disconnect.

I'm still trying to reduce this list, but for now this is final set
 
{code:xml}
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_1_028""/>
    <property name=""atomicityMode"" value=""ATOMIC""/>
    <property name=""backups"" value=""1""/>
    <property name=""cacheMode"" value=""PARTITIONED""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""evictionPolicy"">
        <bean class=""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"">
            <property name=""maxSize"" value=""1000""/>
        </bean>
    </property>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""32""/>
        </bean>
    </property>
</bean>
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_2_031""/>
    <property name=""backups"" value=""1""/>
    <property name=""atomicityMode"" value=""ATOMIC""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
</bean>
        <bean class=""org.apache.ignite.configuration.CacheConfiguration"">
            <property name=""name"" value=""cache_group_2_038""/>
            <property name=""groupName"" value=""cache_group_5""/>
            <property name=""atomicityMode"" value=""ATOMIC""/>
            <property name=""backups"" value=""1""/>
            <property name=""cacheMode"" value=""REPLICATED""/>
            <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
            <property name=""onheapCacheEnabled"" value=""true""/>
            <property name=""affinity"">
                <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
                    <constructor-arg value=""false""/>
                    <constructor-arg value=""128""/>
                </bean>
            </property>
        </bean>
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_2_045""/>
    <property name=""groupName"" value=""cache_group_6""/>
    <property name=""atomicityMode"" value=""ATOMIC""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
    <property name=""backups"" value=""1""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""evictionPolicy"">
        <bean class=""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"">
            <property name=""maxSize"" value=""1000""/>
        </bean>
    </property>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""64""/>
        </bean>
    </property>
</bean>
 <bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_2_058""/>
    <property name=""atomicityMode"" value=""ATOMIC""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
     <property name=""backups"" value=""1""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""evictionPolicy"">
        <bean class=""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"">
            <property name=""maxSize"" value=""1000""/>
        </bean>
    </property>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""32""/>
        </bean>
    </property>
</bean>
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_4_091""/>
    <property name=""groupName"" value=""cache_group_4""/>
    <property name=""backups"" value=""1""/>
    <property name=""atomicityMode"" value=""TRANSACTIONAL""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
</bean>
 <bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_4_098""/>
    <property name=""groupName"" value=""cache_group_5""/>
    <property name=""atomicityMode"" value=""ATOMIC""/>
     <property name=""backups"" value=""1""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""128""/>
        </bean>
    </property>
</bean>
 <bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_4_105""/>
    <property name=""groupName"" value=""cache_group_6""/>
     <property name=""backups"" value=""1""/>
    <property name=""atomicityMode"" value=""TRANSACTIONAL""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""evictionPolicy"">
        <bean class=""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"">
            <property name=""maxSize"" value=""1000""/>
        </bean>
    </property>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""64""/>
        </bean>
    </property>
</bean>
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
    <property name=""name"" value=""cache_group_4_118""/>
    <property name=""atomicityMode"" value=""TRANSACTIONAL""/>
    <property name=""cacheMode"" value=""REPLICATED""/>
    <property name=""backups"" value=""1""/>
    <property name=""writeSynchronizationMode"" value=""FULL_SYNC""/>
    <property name=""evictionPolicy"">
        <bean class=""org.apache.ignite.cache.eviction.fifo.FifoEvictionPolicy"">
            <property name=""maxSize"" value=""1000""/>
        </bean>
    </property>
    <property name=""onheapCacheEnabled"" value=""true""/>
    <property name=""affinity"">
        <bean class=""org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction"">
            <constructor-arg value=""false""/>
            <constructor-arg value=""32""/>
        </bean>
    </property>
</bean>{code}

This is log from test frameworks output:
{code}
Current metric state for cache cache_group_1_028 on node 2: 19
Current metric state for cache cache_group_2_058 on node 2: 32
Current metric state for cache cache_group_5 on node 2: 128
Current metric state for cache cache_group_5 on node 2: 128
Current metric state for cache cache_group_4 on node 2: 512
Current metric state for cache cache_group_4_118 on node 2: 32
Current metric state for cache cache_group_6 on node 2: 64
Current metric state for cache cache_group_2_031 on node 2: 512
Current metric state for cache cache_group_6 on node 2: 64
[17:43:27][:568 :617] Wait rebalance to finish 7/240
Current metric state for cache cache_group_1_028 on node 2: 19
Current metric state for cache cache_group_2_058 on node 2: 32
Current metric state for cache cache_group_5 on node 2: 128
Current metric state for cache cache_group_5 on node 2: 128
Current metric state for cache cache_group_4 on node 2: 512
Current metric state for cache cache_group_4_118 on node 2: 32
Current metric state for cache cache_group_6 on node 2: 64
Current metric state for cache cache_group_2_031 on node 2: 512
Current metric state for cache cache_group_6 on node 2: 64
{code};;;","15/Aug/18 15:56;avinogradov;[~qvad], 
1) Is it possible to simplify or create brand new reproducer? 
Currently Maxim is trying to write a reproducer using your tips. 
That's a looooong way without any chances to win, I think. 
Better case is to make your reproducer as small as possible and attach it to the issue.

2) Why you decided that exactly this issue is responsible for the bug?
;;;","16/Aug/18 09:42;qvad;[~avinogradov]
1) I'm trying to solve this problem by writing jUnit reproducer.
2) I've test with and without this pull request and it is definitely a problem in this commit.;;;","16/Aug/18 10:51;avinogradov;[~qvad],
Please confirm that you tested two *absolutely identical* branches with only one difference - only one of them contained fix.
In case you checked 2 branches with 2+ commits difference that means each of commits can be the cause.
Could you please provide refs to branches you compared?
;;;","16/Aug/18 12:50;qvad;[~avinogradov]

Yes.

Two builds under test: from apache-ignite master (137dd06aaee9cc84104e6b4bf48306b050341e3a and f6f731f575290b10d6d6bcb6869bb0a1b470455e revisions);;;","16/Aug/18 13:02;avinogradov;[~qvad], 

Great, thanks for confirmation.;;;","16/Aug/18 14:44;qvad;Looks like we have old issue with hanging rebalance. 7165 pull request increase the chance of this issue

Adding Thread.sleep(200) in this method solves the problem:
{code:java}
GridCachePartitionExchangeManager.java

private void processFullPartitionUpdate(ClusterNode node, GridDhtPartitionsFullMessage msg) {
    if (!enterBusy())
        return;

    try {
        if (msg.exchangeId() == null) {
            if (log.isDebugEnabled())
                log.debug(""Received full partition update [node="" + node.id() + "", msg="" + msg + ']');

            boolean updated = false;

            for (Map.Entry<Integer, GridDhtPartitionFullMap> entry : msg.partitions().entrySet()) {
                try {
                    Thread.sleep(200);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }{code}
I've recently test 137dd06aaee9cc84104e6b4bf48306b050341e3a + this code in my test environment and it's passed.;;;","16/Aug/18 14:57;mmuzaf;[~qvad]

Thanks for providing details. 
Let's file new issue and continue envestigation there. I will take a look too.;;;","16/Aug/18 15:03;qvad;[~Mmuzaf]

Here is code of the test. There is one big problem with it: it is single JVM. Second problem that it is not a reproducer.   [^GridCacheRebalancingCancelTestNoReproduce.java] 

 ;;;","16/Aug/18 16:01;avinogradov;[~Mmuzaf]
Please link new Issue to this to keep discussion;;;","17/Aug/18 08:40;mmuzaf;[~avinogradov],

Issue created. Let's continue discussion there.
https://issues.apache.org/jira/browse/IGNITE-9309

 [~qvad],

Please, attach to thouse issue the lates info you have about test scenario and test configuration.;;;","26/Oct/18 12:22;githubbot;Github user Mmuzaf closed the pull request at:

    https://github.com/apache/ignite/pull/4097
;;;","26/Oct/18 12:22;githubbot;Github user Mmuzaf closed the pull request at:

    https://github.com/apache/ignite/pull/4442
;;;"
Fix IGNITE-7086 fails IgniteCacheAtomicExpiryPolicyWithStoreTest.testGetReadThrough,IGNITE-7159,13124101,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,11/Dec/17 11:09,01/Aug/19 22:09,14/Jul/23 06:20,11/Dec/17 15:06,2.4,,,,,2.4,,,,,,0,,,,,,dkarachentsev,githubbot,,,,,,,,,,,"dspavlov commented on issue #3196: IGNITE-7159 - Fix IgniteCacheAtomicExpiryPolicyWithStoreTest.testGetR…
URL: https://github.com/apache/ignite/pull/3196#issuecomment-517476081
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3196: IGNITE-7159 - Fix IgniteCacheAtomicExpiryPolicyWithStoreTest.testGetR…
URL: https://github.com/apache/ignite/pull/3196
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 11 11:13:38 UTC 2017,,,,,,,,,,"0|i3nrcf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/17 11:13;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3196

    IGNITE-7159 - Fix IgniteCacheAtomicExpiryPolicyWithStoreTest.testGetR…

    …eadThrough

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7159

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3196.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3196
    
----
commit c190864356f56d7f0c73d405ba630bbdd5d88a26
Author: xmitya <dkarachentsev@gridgain.com>
Date:   2017-12-11T11:11:40Z

    IGNITE-7159 - Fix IgniteCacheAtomicExpiryPolicyWithStoreTest.testGetReadThrough

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock on partition eviction from multiple threads.,IGNITE-7157,13124079,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,11/Dec/17 08:56,12/Dec/17 09:17,14/Jul/23 06:20,11/Dec/17 14:31,,,,,,2.4,,cache,,,,0,,,,"When node receive partition update message, it acquire partition and checkpoint locks in different order than asyncronous eviction.

PFA thread dump.",,agura,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Dec/17 09:00;amashenkov;thread-dump;https://issues.apache.org/jira/secure/attachment/12901465/thread-dump",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 09:17:47 UTC 2017,,,,,,,,,,"0|i3nr7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/17 09:00;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/3193

    IGNITE-7157: Fixed deadlock when partition eviction run in different threads.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7157

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3193.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3193
    
----
commit cec30537cd08de42ae1be43f36a1fc80c1577b32
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-12-07T16:16:25Z

    IGNITE-7157: Fixed deadlock when partition eviction run in different threads.

----
;;;","11/Dec/17 14:31;agura;Merged to master branch.;;;","12/Dec/17 09:17;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/3193
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Redis: BufferUnderflowException at GridRedisProtocolParser.readBulkStr for values > 8kb,IGNITE-7153,13123697,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,nizhikov,alexey.tank2,alexey.tank2,08/Dec/17 12:50,08/Sep/22 10:17,14/Jul/23 06:20,01/Apr/22 12:03,2.3,,,,,2.14,,general,,,,0,ise,redis,,"Exception:
{noformat}
[15:03:23,690][SEVERE][grid-nio-worker-tcp-rest-0-#36][GridTcpRestProtocol] Failed to process selector key [ses=GridSelectorNioSessionImpl [worker=ByteBufferNioClientWorker [readBuf=java.nio.HeapByteBuffer[pos=28 lim=8192 cap=8192], super=AbstractNioClientWorker [idx=0, bytesRcvd=0, bytesSent=0, bytesRcvd0=0, bytesSent0=0, select=true, super=GridWorker [name=grid-nio-worker-tcp-rest-0, igniteInstanceName=null, finished=false, hashCode=396395638, interrupted=false, runner=grid-nio-worker-tcp-rest-0-#36]]], writeBuf=null, readBuf=null, inRecovery=null, outRecovery=null, super=GridNioSessionImpl [locAddr=/127.0.0.1:6380, rmtAddr=/127.0.0.1:51794, createTime=1512734602674, closeTime=0, bytesSent=0, bytesRcvd=8192, bytesSent0=0, bytesRcvd0=8192, sndSchedTime=1512734602674, lastSndTime=1512734602674, lastRcvTime=1512734602674, readsPaused=false, filterChain=FilterChain[filters=[GridNioCodecFilter [parser=GridTcpRestParser [jdkMarshaller=JdkMarshaller [], routerClient=false], directMode=false]], accepted=true]]]
java.nio.BufferUnderflowException
	at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:151)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.redis.GridRedisProtocolParser.readBulkStr(GridRedisProtocolParser.java:107)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.redis.GridRedisProtocolParser.readArray(GridRedisProtocolParser.java:86)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.GridTcpRestParser.decode(GridTcpRestParser.java:150)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.GridTcpRestParser.decode(GridTcpRestParser.java:70)
	at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:114)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3392)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
	at org.apache.ignite.internal.util.nio.GridNioServer$ByteBufferNioClientWorker.processRead(GridNioServer.java:1096)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2272)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:2048)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1717)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:748)
[15:03:23,691][SEVERE][grid-nio-worker-tcp-rest-0-#36][GridTcpRestProtocol] Closing NIO session because of unhandled exception.
class org.apache.ignite.internal.util.nio.GridNioException: null
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2296)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:2048)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1717)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.nio.BufferUnderflowException
	at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:151)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.redis.GridRedisProtocolParser.readBulkStr(GridRedisProtocolParser.java:107)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.redis.GridRedisProtocolParser.readArray(GridRedisProtocolParser.java:86)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.GridTcpRestParser.decode(GridTcpRestParser.java:150)
	at org.apache.ignite.internal.processors.rest.protocols.tcp.GridTcpRestParser.decode(GridTcpRestParser.java:70)
	at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:114)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3392)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
	at org.apache.ignite.internal.util.nio.GridNioServer$ByteBufferNioClientWorker.processRead(GridNioServer.java:1096)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2272)
	... 4 more
{noformat}

Simple PHP reproducer with Redis client:

{code:php}
<?php
$redis = new Redis();
$redis->connect('localhost', 6380);
$valueSize = 10000;
$key = 'x';
$value = str_repeat($key, $valueSize);
$result = $redis->set($key, $value);
printf(""%s%s"", $result === true ? ""Setting key was successful"" : ""Setting key failed"", PHP_EOL);
$retrievedResult = $redis->get($key);
if ($retrievedResult === false) {
    echo ""Fetching key failed"" . PHP_EOL;
} else {
    printf('Key successfully retrieved, length: %d%s', strlen($retrievedResult), PHP_EOL);
}
{code}

It seems that the client set tcp socket buffer size > 8k. That is why unit test works fine with default (8k) tcp socket size.","Win, PHP 7, php_redis-3.1.1-7.0",alexey.tank2,ashu210890,dmagda,dpavlov,githubbot,ignitetcbot,mcfongtw,nizhikov,palnabarun,RyzhovSV,shroman,,"ashu210890 opened a new pull request #7808:
URL: https://github.com/apache/ignite/pull/7808


   Add validation method to check packet completeness
   
   Add logic to store incomplete packet temporarily and assemble them until
   the final CRLF is seen.
   
   Implement test cases for data = 8k, 10k and 16k
   
   Thank you for submitting the pull request to the Apache Ignite.
   
   In order to streamline the review of the contribution 
   we ask you to ensure the following steps have been taken:
   
   ### The Contribution Checklist
   - [ ] There is a single JIRA ticket related to the pull request. 
   - [ ] The web-link to the pull request is attached to the JIRA ticket.
   - [ ] The JIRA ticket has the _Patch Available_ state.
   - [ ] The pull request body describes changes that have been made. 
   The description explains _WHAT_ and _WHY_ was made instead of _HOW_.
   - [ ] The pull request title is treated as the final commit message. 
   The following pattern must be used: `IGNITE-12407: Add Cluster API support to Java thin client`
   - [ ] A reviewer has been mentioned through the JIRA comments 
   (see [the Maintainers list](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-ReviewProcessandMaintainers)) 
   - [ ] The pull request has been checked by the Teamcity Bot and 
   the `green visa` attached to the JIRA ticket (see [TC.Bot: Check PR](https://mtcga.gridgain.com/prs.html))
   
   ### Notes
   - [How to Contribute](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute)
   - [Coding abbreviation rules](https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules)
   - [Coding Guidelines](https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines)
   - [Apache Ignite Teamcity Bot](https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+Teamcity+Bot)
   
   If you need any help, please email dev@ignite.apache.org or ask anу advice on http://asf.slack.com _#ignite_ channel.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/20 16:45;githubbot;600","palnabarun opened a new pull request #7810:
URL: https://github.com/apache/ignite/pull/7810


   Add validation method to check packet completeness
   
   Add logic to store incomplete packet temporarily and assemble them until
   the final CRLF is seen.
   
   Implement test cases for data = 8k, 10k and 16k
   
   
   Thank you for submitting the pull request to the Apache Ignite.
   
   In order to streamline the review of the contribution 
   we ask you to ensure the following steps have been taken:
   
   ### The Contribution Checklist
   - [ ] There is a single JIRA ticket related to the pull request. 
   - [ ] The web-link to the pull request is attached to the JIRA ticket.
   - [ ] The JIRA ticket has the _Patch Available_ state.
   - [ ] The pull request body describes changes that have been made. 
   The description explains _WHAT_ and _WHY_ was made instead of _HOW_.
   - [ ] The pull request title is treated as the final commit message. 
   The following pattern must be used: `IGNITE-12407: Add Cluster API support to Java thin client`
   - [ ] A reviewer has been mentioned through the JIRA comments 
   (see [the Maintainers list](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-ReviewProcessandMaintainers)) 
   - [ ] The pull request has been checked by the Teamcity Bot and 
   the `green visa` attached to the JIRA ticket (see [TC.Bot: Check PR](https://mtcga.gridgain.com/prs.html))
   
   ### Notes
   - [How to Contribute](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute)
   - [Coding abbreviation rules](https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules)
   - [Coding Guidelines](https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines)
   - [Apache Ignite Teamcity Bot](https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+Teamcity+Bot)
   
   If you need any help, please email dev@ignite.apache.org or ask anу advice on http://asf.slack.com _#ignite_ channel.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/20 10:58;githubbot;600","dmagda commented on a change in pull request #7808:
URL: https://github.com/apache/ignite/pull/7808#discussion_r428315712



##########
File path: modules/core/src/main/java/org/apache/ignite/internal/processors/rest/protocols/tcp/GridTcpRestParser.java
##########
@@ -246,6 +246,45 @@ else if (msg instanceof GridRouterRequest) {
         }
     }
 
+    /**
+     * Parses redis protocol message.
+     *
+     * @param ses Session.
+     * @param buf Buffer containing not parsed bytes.
+     * @param state Current parser state.
+     * @return Parsed packet.s
+     * @throws IOException If packet cannot be parsed.
+     * @throws IgniteCheckedException If deserialization error occurred.
+     */
+    private GridClientMessage parseRedisPacket(GridNioSession ses, ByteBuffer buf, ParserState state)

Review comment:
       Wouldn't it be better to move this method to GridRedisProtocolParser.java class and renaming it to ""readPacket""? This would also allow us to use ""private"" visibility level for the ""validate.."" set of the new methods 

##########
File path: modules/core/src/main/java/org/apache/ignite/internal/processors/rest/protocols/tcp/redis/GridRedisProtocolParser.java
##########
@@ -112,6 +115,60 @@ public static String readBulkStr(ByteBuffer buf) throws IgniteCheckedException {
         return new String(bulkStr);
     }
 
+    /*
+     * A validation method to check packet completeness.
+     * return true if and only if
+     * 1. First byte is ARRAY (43)
+     * 2. Last two bytes are CR(13) LF(10)
+     *
+     * Otherwise, return false representing this is an incomplete packet with three possible scenarios:
+     * 1. A beginning packet with leading ARRAY byte
+     * 2. A continual packet with ending CRLF bytes.
+     * 3. A continual packet with neither conditions above.
+     */
+    public static boolean validatePacket(ByteBuffer buf) {

Review comment:
       I would suggest naming the method ""isCompletePacket""

##########
File path: modules/clients/src/test/java/org/apache/ignite/internal/processors/rest/protocols/tcp/redis/RedisProtocolConnectSelfTest.java
##########
@@ -74,4 +75,21 @@ public void testSelect() throws Exception {
             Assert.assertEquals(""v0"", jedis.get(""k0""));
         }
     }
+
+    //IGNITE-7153

Review comment:
       Please remove the mentioning of ""IGNITE-7153"". Instead, use the text below as a method description
   
   ```
   /**
        * @throws Exception If failed.
        */
       @Test
   ```

##########
File path: modules/core/src/main/java/org/apache/ignite/internal/processors/rest/protocols/tcp/redis/GridRedisProtocolParser.java
##########
@@ -112,6 +115,60 @@ public static String readBulkStr(ByteBuffer buf) throws IgniteCheckedException {
         return new String(bulkStr);
     }
 
+    /*
+     * A validation method to check packet completeness.
+     * return true if and only if
+     * 1. First byte is ARRAY (43)
+     * 2. Last two bytes are CR(13) LF(10)
+     *
+     * Otherwise, return false representing this is an incomplete packet with three possible scenarios:
+     * 1. A beginning packet with leading ARRAY byte
+     * 2. A continual packet with ending CRLF bytes.
+     * 3. A continual packet with neither conditions above.
+     */
+    public static boolean validatePacket(ByteBuffer buf) {
+        return validatePacketHeader(buf) && validatePacketFooter(buf);
+    }
+
+    public static boolean validatePacketHeader(ByteBuffer buf) {
+        boolean result = true;
+
+        //mark at initial position
+        buf.mark();
+
+        if(buf.get() != ARRAY) {
+            result = false;
+        }
+
+        //reset to initial position
+        buf.reset();
+
+        return result;
+    }
+
+    public static boolean validatePacketFooter(ByteBuffer buf) {
+        boolean result = true;
+
+        //mark at initial position
+        buf.mark();
+

Review comment:
       Extra space, please remove. Check guidelines for reference: https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines#CodingGuidelines-Whitespacesandemptylines




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 21:30;githubbot;600","palnabarun closed pull request #7810:
URL: https://github.com/apache/ignite/pull/7810


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Mar/21 18:24;githubbot;600","Sega76 opened a new pull request #9790:
URL: https://github.com/apache/ignite/pull/9790


   Thank you for submitting the pull request to the Apache Ignite.
   
   In order to streamline the review of the contribution 
   we ask you to ensure the following steps have been taken:
   
   ### The Contribution Checklist
   - [ ] There is a single JIRA ticket related to the pull request. 
   - [ ] The web-link to the pull request is attached to the JIRA ticket.
   - [ ] The JIRA ticket has the _Patch Available_ state.
   - [ ] The pull request body describes changes that have been made. 
   The description explains _WHAT_ and _WHY_ was made instead of _HOW_.
   - [ ] The pull request title is treated as the final commit message. 
   The following pattern must be used: `IGNITE-XXXX Change summary` where `XXXX` - number of JIRA issue.
   - [ ] A reviewer has been mentioned through the JIRA comments 
   (see [the Maintainers list](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-ReviewProcessandMaintainers)) 
   - [ ] The pull request has been checked by the Teamcity Bot and 
   the `green visa` attached to the JIRA ticket (see [TC.Bot: Check PR](https://mtcga.gridgain.com/prs.html))
   
   ### Notes
   - [How to Contribute](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute)
   - [Coding abbreviation rules](https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules)
   - [Coding Guidelines](https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines)
   - [Apache Ignite Teamcity Bot](https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+Teamcity+Bot)
   
   If you need any help, please email dev@ignite.apache.org or ask anу advice on http://asf.slack.com _#ignite_ channel.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Feb/22 14:56;githubbot;600","nizhikov opened a new pull request #9925:
URL: https://github.com/apache/ignite/pull/9925


   Thank you for submitting the pull request to the Apache Ignite.
   
   In order to streamline the review of the contribution 
   we ask you to ensure the following steps have been taken:
   
   ### The Contribution Checklist
   - [ ] There is a single JIRA ticket related to the pull request. 
   - [ ] The web-link to the pull request is attached to the JIRA ticket.
   - [ ] The JIRA ticket has the _Patch Available_ state.
   - [ ] The pull request body describes changes that have been made. 
   The description explains _WHAT_ and _WHY_ was made instead of _HOW_.
   - [ ] The pull request title is treated as the final commit message. 
   The following pattern must be used: `IGNITE-XXXX Change summary` where `XXXX` - number of JIRA issue.
   - [ ] A reviewer has been mentioned through the JIRA comments 
   (see [the Maintainers list](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-ReviewProcessandMaintainers)) 
   - [ ] The pull request has been checked by the Teamcity Bot and 
   the `green visa` attached to the JIRA ticket (see [TC.Bot: Check PR](https://mtcga.gridgain.com/prs.html))
   
   ### Notes
   - [How to Contribute](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute)
   - [Coding abbreviation rules](https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules)
   - [Coding Guidelines](https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines)
   - [Apache Ignite Teamcity Bot](https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+Teamcity+Bot)
   
   If you need any help, please email dev@ignite.apache.org or ask anу advice on http://asf.slack.com _#ignite_ channel.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/22 08:16;githubbot;600","nizhikov merged pull request #9925:
URL: https://github.com/apache/ignite/pull/9925


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Apr/22 12:03;githubbot;600",,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 01 12:03:47 UTC 2022,,,,,,,,,,"0|i3nouv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 07:22;shroman;Needs to be handled with {{ParserState}};;;","21/Oct/18 13:59;githubbot;GitHub user mcfongtw opened a pull request:

    https://github.com/apache/ignite/pull/5044

    IGNITE-7153: Fix parser to handle incomplete Redis packet

    Add validation method to check packet completeness
    
    Add logic to store incomplete packet temporarily and assemble them until
    the final CRLF is seen.
    
    Implement test cases for data = 8k, 10k and 16k

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mcfongtw/ignite ignite-7153

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5044.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5044
    
----

----
;;;","31/Oct/18 15:08;dpavlov;[~roman_s] could you please move the issue to unassigned or assign it to [~mcfongtw]? it seems there is a fix.;;;","01/Nov/18 10:01;shroman;[~dpavlov] Sure, but can't do that – 'No matches found.' [~mcfongtw], thanks for the fix! Please go ahead and reassign to yourself.;;;","01/Nov/18 13:53;dpavlov;Hi [~roman_s] ,thank you.

[~mcfongtw], I've added you to the list of contributors, so you can now assign an issue to yourself. I've also assigned this issue to you, I hope you don't mind.

Please set the issue to 'patch available' once you think that change is ready.;;;","27/Nov/18 15:17;dpavlov;Hi [~mcfongtw] could you please move the issue to Patch Available if you're sure the fix is ready?;;;","11/Dec/18 07:30;dpavlov;[~mcfongtw] a kindly reminder, could you please set PA if it is ready for review?;;;","10/Jan/19 19:20;ignitetcbot;{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}PDS (Direct IO) 1{color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2763628]]
* IgnitePdsNativeIoTestSuite: IgnitePdsCacheConfigurationFileConsistencyCheckTest.testStartDuplicatedCacheConfigurations - 0,0% fails in last 569 master runs.
* IgnitePdsNativeIoTestSuite: IgnitePdsCacheConfigurationFileConsistencyCheckTest.testCorruptedCacheConfigurationsValidation - 0,0% fails in last 569 master runs.

{color:#d04437}SPI{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2763632]]
* IgniteSpiTestSuite: TcpDiscoverySslTrustedSelfTest.testNodeShutdownOnRingMessageWorkerStartNotFinished - 0,0% fails in last 560 master runs.

{color:#d04437}Java Client{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=2763640]]
* IgniteClientTestSuite: RedisProtocolConnectSelfTest.testSetBigObject1
* IgniteClientTestSuite: RedisProtocolStringSelfTest.testGetSet - 0,0% fails in last 571 master runs.

{color:#d04437}MVCC Cache{color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2763642]]
* IgniteCacheMvccTestSuite: CacheMvccTransactionsTest.testPutAllGetAll_ClientServer_Backups1_Restart_Scan - 0,0% fails in last 0 master runs.

{color:#d04437}Activate / Deactivate Cluster{color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2763646]]
* IgniteStandByClusterSuite: IgniteStandByClusterTest.testSimple - 0,0% fails in last 573 master runs.
* IgniteStandByClusterSuite: IgniteChangeGlobalStateFailOverTest.testActivateDeActivateOnFixTopologyWithPutValues - 0,0% fails in last 573 master runs.

{color:#d04437}PDS (Indexing){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2763636]]

{color:#d04437}Thin client: PHP{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2763644]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2137608&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","14/Jan/19 10:38;dpavlov;I concerned about test failures
- IgniteClientTestSuite: RedisProtocolConnectSelfTest.testSetBigObject1
- IgniteClientTestSuite: RedisProtocolStringSelfTest.testGetSet - 0,0% fails in last 571 master runs.

It may be related by the proposed change.;;;","02/Apr/20 00:16;palnabarun;Hi [~dpavlov] [~mcfongtw],

We stumbled on this issue while setting up Ignite as our caching solution. We feel that it is critical to fix the issue.

I tried to see why the tests are failing but CI says `Build with id '2137608' not found`, possibly CI not retaining this old build.

Can you please help me out how can I run the CI for the PR, find out what is blocking this change and possibly solve it?

Thank You;;;","06/Apr/20 16:21;dpavlov;Hi [~palnabarun] , [~mcfongtw]

I've triggered one more build on TC to double check. It is expected that too old build is not available now. Let's check results tomorrow.

Sincerely,
Dmitriy Pavlov;;;","06/Apr/20 18:06;ignitetcbot;{panel:title=Branch: [pull/5044/head] Base: [master] : Possible Blockers (244)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Platform C++ (Linux)*{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5197063]]

{color:#d04437}PDS (Indexing){color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5197102]]
* IgnitePdsWithIndexingCoreTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgnitePdsWithIndexingTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 6{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197092]]
* IgniteCacheTestSuite6: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}ZooKeeper (Discovery) 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197062]]
* ZookeeperDiscoverySpiTestSuite2: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 5{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5197091]]
* IgniteCacheWithIndexingTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteCacheTestSuite5: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 7{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5197093]]
* IgniteCacheWithIndexingAndPersistenceTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteCacheTestSuite7: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}ZooKeeper (Discovery) 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197061]]
* ZookeeperDiscoverySpiTestSuite1: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}SPI{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197054]]
* IgniteSpiTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Basic 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197066]]
* org.apache.ignite.testsuites.IgniteBasicTestSuite.initializationError - History for base branch is absent.

{color:#d04437}Cache (Expiry Policy){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197077]]
* IgniteCacheExpiryPolicyTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Examples{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197035]]
* IgniteExamplesSparkSelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Scala (Examples){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197059]]
* org.apache.ignite.scalar.testsuites.ScalarExamplesSelfTestSuite.initializationError - History for base branch is absent.

{color:#d04437}Cache 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197088]]
* IgniteCacheTestSuite2: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Platform .NET{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=5197108]]
* exe: CacheQueriesTestSimpleName.TestScanQuery(False) - Test has low fail rate in base branch 0,0% and is not flaky
* exe: CacheAbstractTest.TestWithExpiryPolicy - Test has low fail rate in base branch 0,0% and is not flaky
* exe: CacheAbstractTest.TestWithExpiryPolicy - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Queries 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197114]]
* IgniteBinaryCacheQueryTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Start Nodes{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197053]]
* org.apache.ignite.internal.IgniteStartStopRestartTestSuite.initializationError - History for base branch is absent.

{color:#d04437}Streamers{color} [[tests 8|https://ci.ignite.apache.org/viewLog.html?buildId=5197052]]
* IgniteStreamSelfTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteJmsStreamerTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteKafkaStreamerSelfTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteZeroMqStreamerTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteMqttStreamerTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteTwitterStreamerTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteStormStreamerSelfTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteCamelStreamerTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}PDS 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197104]]
* IgnitePdsTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Platform .NET (Core Linux){color} [[tests 144|https://ci.ignite.apache.org/viewLog.html?buildId=5197109]]
* dll: CacheLinqTestSqlEscapeAll.TestGroupBy - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTestSqlEscapeAll.TestGroupBySubquery - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTestSqlEscapeAll.TestIntersect - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTestSqlEscapeAll.TestIntrospection - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTestSqlEscapeAll.TestInvalidJoin - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTest.TestPrimitiveCache - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTest.TestRemoveAll - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTest.TestSameCacheJoin - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTest.TestScalarQuery - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTest.TestSelfJoin - Test has low fail rate in base branch 0,0% and is not flaky
* dll: CacheLinqTest.TestSelfJoinInline - Test has low fail rate in base branch 0,0% and is not flaky
... and 133 tests blockers

{color:#d04437}MVCC Queries{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197072]]
* IgniteCacheMvccSqlTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 1{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5197087]]
* IgniteBinaryCacheTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteRestHandlerTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 8{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197094]]
* IgniteCacheTestSuite8: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Queries 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197049]]
* IgniteBinaryCacheQueryTestSuite2: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Basic 3{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197067]]
* IgniteBasicWithPersistenceTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Thin Client: Java{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197045]]
* ClientTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}JDBC Driver{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197046]]
* IgniteJdbcDriverTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 3{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197089]]
* org.apache.ignite.testsuites.IgniteBinaryObjectsCacheTestSuite3.initializationError - History for base branch is absent.

{color:#d04437}Platform C++ (Linux Clang){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5197069]]

{color:#d04437}Compute (Grid){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197032]]
* IgniteBinaryObjectsComputeGridTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}PDS 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197105]]
* IgnitePdsTestSuite2: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Basic 2{color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=5197026]]
* IgniteComputeBasicConfigVariationsFullApiTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteIpcTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteMessagingConfigVariationFullApiTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteSchedulerTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Continuous Query 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197034]]
* IgniteCacheQuerySelfTestSuite4: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}PDS 3{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197106]]
* IgnitePdsTestSuite3: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Deadlock Detection){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197076]]
* TxDeadlockDetectionTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}PDS 4{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197107]]
* IgnitePdsTestSuite4: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 4{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197090]]
* IgniteCacheTestSuite4: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}MVCC Cache{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197070]]
* IgniteCacheMvccTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Failover) 3{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197081]]
* IgniteCacheFailoverTestSuite3: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Failover SSL){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197078]]
* IgniteCacheFailoverTestSuiteSsl: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Service Grid{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=5197120]]
* IgniteServiceConfigVariationsFullApiTestSuite: IgniteServiceConfigVariationsFullApiTest.testClusterSingletonDeploy - New test duration 654s is more that 1 minute
* IgniteServiceConfigVariationsFullApiTestSuite: IgniteServiceConfigVariationsFullApiTest.testDeploy - New test duration 719s is more that 1 minute
* IgniteServiceConfigVariationsFullApiTestSuite: IgniteServiceConfigVariationsFullApiTest.testNodeSingletonDeploy - New test duration 852s is more that 1 minute

{color:#d04437}ZooKeeper{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197058]]
* ZookeeperIpFinderTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Activate / Deactivate Cluster{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197028]]
* IgniteStandByClusterSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Failover) 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197079]]
* IgniteCacheFailoverTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Client Nodes{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5197029]]
* IgniteClientNodesTestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteClientReconnectTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Data Structures{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197099]]
* IgniteCacheDataStructuresSelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}PDS (Compatibility)*{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197101]]
* IgniteCompatibilityBasicTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache 9{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197095]]
* IgniteCacheTestSuite9: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Service Grid (legacy mode){color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=5197121]]
* IgniteServiceConfigVariationsFullApiTestSuite: IgniteServiceConfigVariationsFullApiTest.testClusterSingletonDeploy - New test duration 804s is more that 1 minute
* IgniteServiceConfigVariationsFullApiTestSuite: IgniteServiceConfigVariationsFullApiTest.testDeploy - New test duration 748s is more that 1 minute
* IgniteServiceConfigVariationsFullApiTestSuite: IgniteServiceConfigVariationsFullApiTest.testNodeSingletonDeploy - New test duration 859s is more that 1 minute

{color:#d04437}Cache (Full API){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197083]]
* IgniteCacheFullApiSelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Full API Multi JVM){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197082]]
* IgniteCacheFullApiMultiJvmSelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Restarts) 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197084]]
* IgniteCacheRestartTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Java Client{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197042]]
* IgniteClientTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Tx Recovery){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197086]]
* IgniteCacheTxRecoverySelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}RDD{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197048]]
* IgniteRDDTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Open Census{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5197137]]

{color:#d04437}Cache (Restarts) 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197085]]
* IgniteCacheRestartTestSuite2: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Continuous Query 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197033]]
* org.apache.ignite.testsuites.IgniteCacheQuerySelfTestSuite3.initializationError - History for base branch is absent.

{color:#d04437}Examples (LGPL){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197118]]
* IgniteLgplExamplesSelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cache (Failover) 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197080]]
* IgniteCacheFailoverTestSuite2: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}AWS{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=5197025]]
* IgniteS3TestSuite: TestSuite$1.warning - History for base branch is absent.
* IgniteElbTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Kubernetes{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197041]]
* IgniteKubernetesTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Geospatial Indexing{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197037]]
* GeoSpatialIndexingTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Hibernate 5.1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197039]]
* IgniteHibernate5TestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Hibernate 4.2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197038]]
* IgniteHibernateTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Cloud{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197030]]
* IgniteCloudTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Queries (Config Variations){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197047]]
* IgniteCacheConfigVariationQueryTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}GCE{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197036]]
* IgniteGCETestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Binary Objects{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197027]]
* IgniteBinaryObjectsTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Spring{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197050]]
* IgniteSpringTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Compute (Affinity Run){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197031]]
* IgniteCacheAffinityRunTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Platform .NET (Inspections)*{color} [[tests 0 Failure on metric |https://ci.ignite.apache.org/viewLog.html?buildId=5197110]]

{color:#d04437}JTA{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197040]]
* IgniteJtaTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Web Sessions{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197056]]
* IgniteWebSessionSelfTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}MVCC JDBC{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197071]]
* IgniteJdbcDriverMvccTestSuite: TestSuite$1.warning - History for base branch is absent.

{color:#d04437}Platform C++ (Win x64 / Release){color} [[tests 2 BuildFailureOnMessage |https://ci.ignite.apache.org/viewLog.html?buildId=5197064]]
* IgniteOdbcTest: QueriesTestSuite: TestManyCursorsTwoSelects2 - Test has low fail rate in base branch 0,0% and is not flaky
* IgniteOdbcTest: QueriesTestSuite: TestManyCursorsSelectMerge2 - Test has low fail rate in base branch 0,0% and is not flaky

{color:#d04437}Spring (Data){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5197051]]

{color:#d04437}Interceptor Cache (Full API Config Variations / Basic)*{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5197379]]
* InterceptorCacheConfigVariationsFullApiTestSuite: TestSuite$1.warning - History for base branch is absent.

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5197138&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","08/Apr/20 12:37;dpavlov;Hi [~palnabarun], unfortunately current PR code and master have diverged strongly, there is not possible  without upgrading PR's state to current master to say if this change is safe or not.

TC bot compares state of tests in master and in current PR, so merge of current master into branch is required to get representative tests results.;;;","08/Apr/20 16:04;palnabarun;Hi [~dpavlov], I also inferred the same looking at the CI results. So, I am patching the changes on top of master and will be creating a new PR.

 

Can we tag this issue as part of the 2.8.1 milestone? I see that the scope freeze is due on 15th April.

 

 ;;;","16/May/20 16:53;ashu210890;[~dpavlov] [~palnabarun] I have rebased the pull request created by [~mcfongtw] on top of latest master and created another pull request.  I am assuming the CI run will happen automatically. ;;;","17/May/20 11:13;palnabarun;[~ashu210890] I have filed a new [PR][1] fixing the CI reported lint errors.

[~dpavlov] Can you please review the changes and suggest how to move ahead?

 

[1]: https://github.com/apache/ignite/pull/7810;;;","20/May/20 21:32;dmagda;Thanks for your contribution! I left minor suggestions in the GitHub. Please take them into consideration. 

Also, assign the ticket on yourself and move it to the patch available state. Pay attention to the checklist added in the very first message of the pull-request.;;;","01/Feb/22 12:06;RyzhovSV;[~mcfongtw]
Hello, can you correct the comments?
Or I can pick up the ticket and continue it?;;;","31/Mar/22 08:22;nizhikov;https://github.com/apache/ignite/pull/9925;;;","31/Mar/22 18:05;nizhikov;https://ci2.ignite.apache.org/viewLog.html?buildId=6370729&tab=queuedBuildOverviewTab
;;;","01/Apr/22 12:03;nizhikov;Fix merged to master.;;;",,,,,,,,,,,,,,,,,,,,,
CPP: Can not insert zero decimal value with the ODBC driver.,IGNITE-7143,13123481,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,isapego,isapego,isapego,07/Dec/17 15:02,20/Dec/17 11:33,14/Jul/23 06:20,20/Dec/17 11:31,2.1,,,,,2.4,,odbc,,,,0,,,,"Create the following table:
{code}
CREATE TABLE IF NOT EXISTS TestTable (RecId varchar PRIMARY KEY, RecValue DECIMAL(4,2))
WITH ""template=replicated, cache_name=TestTable_Cache"";
{code}

Then do an ODBC insert using the OdbcParameter with the OdbcCommand object:

{code}
INSERT INTO TestTable (RecId, RecValue) VALUES ('1', ?)
{code}

The Odbc error is ""The connection has been disabled."" however the JVM is
throwing this error:

{noformat}
[SEVERE][client-connector-#47][ClientListenerNioListener] Failed to parse
client request.
java.lang.ArrayIndexOutOfBoundsException: 0
 at org.apache.ignite.internal.binary.BinaryUtils.doReadDecimal
{noformat}

Everything works out ok until the actual value set on the parameter is 0.
Null works fine, values other than 0 work fine. Precision and
Scale are set appropriately. ",,githubbot,isapego,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 20 11:33:11 UTC 2017,,,,,,,,,,"0|i3nniv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 13:12;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/3207

    IGNITE-7143: Fixed Decimal serialization issue

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7143

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3207.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3207
    
----
commit f0dfad560ce7b6013346454bff2700282de4ca65
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-12T13:08:35Z

    IGNITE-7143: Fixed Decimal serialization issue

----
;;;","12/Dec/17 13:16;isapego;Ready for review. [~skalashnikov], can you take a look?;;;","19/Dec/17 15:46;skalashnikov;[~isapego]
Igor, the changes look good to me.;;;","20/Dec/17 11:31;isapego;Merged to master.;;;","20/Dec/17 11:33;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3207
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails,IGNITE-7135,13123394,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ein,ein,ein,07/Dec/17 08:44,01/Aug/19 22:09,14/Jul/23 06:20,11/Jan/18 14:07,2.3,,,,,2.4,,,,,,0,test,,,"After unsuccessful start of three remote nodes with {{IgniteCluster#startNodes(Collection<Map<String,Object>>, Map<String,Object>, boolean, int, int)}} we get {{Collection<ClusterStartNodeResult>}} with three elements, each has {{isSuccess()}} is true.

But the remote node startup log was
{noformat}
nohup: ignoring input
/data/teamcity/work/820be461cd64b574/bin/ignite.sh, ERROR:
The version of JAVA installed in JAVA_HOME=/usr/lib/jvm/java-9-oracle is incorrect.
Please point JAVA_HOME variable to installation of JDK 1.7 or JDK 1.8.
You can also download latest JDK at http://java.com/download
{noformat}",,agura,ein,githubbot,,,,,,,,,,"dspavlov commented on issue #3280: IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.
URL: https://github.com/apache/ignite/pull/3280#issuecomment-517476156
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3280: IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.
URL: https://github.com/apache/ignite/pull/3280
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 14:06:58 UTC 2018,,,,,,,,,,"0|i3nmzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Dec/17 08:53;githubbot;GitHub user akuramshingg opened a pull request:

    https://github.com/apache/ignite/pull/3178

    IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.

    Fix windows startup scripts. Add startNodes() Windows support through task scheduling.
    Check successful node startup by reading the output log.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7135

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3178.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3178
    
----
commit 8efb48f51f7e33dfc760657527957d3bf5138fb6
Author: Alexandr Kuramshin <ein.nsk.ru@gmail.com>
Date:   2017-12-07T20:42:47Z

    IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.
    
    Fix windows startup scripts. Add startNodes() Windows support through task scheduling.

commit e5319d57310c0fab1f22ae279f0db18a6150b243
Author: Alexandr Kuramshin <ein.nsk.ru@gmail.com>
Date:   2017-12-08T08:46:53Z

    IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.
    
    Check successful node startup by reading the output log.

----
;;;","25/Dec/17 05:29;githubbot;Github user akuramshingg closed the pull request at:

    https://github.com/apache/ignite/pull/3178
;;;","25/Dec/17 05:35;githubbot;GitHub user akuramshingg opened a pull request:

    https://github.com/apache/ignite/pull/3280

    IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.

    Fix windows startup scripts.
    Add startNodes() Windows support through task scheduling.
    Check successful node startup by reading the output log.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7135

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3280.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3280
    
----
commit 4f98842343baf03da97c7973739ba32d629e4b33
Author: Alexandr Kuramshin <ein.nsk.ru@...>
Date:   2017-12-25T05:33:46Z

    IGNITE-7135 IgniteCluster.startNodes() returns successful ClusterStartNodeResult even though the remote process fails.
    
    Fix windows startup scripts.
    Add startNodes() Windows support through task scheduling.
    Check successful node startup by reading the output log.

----
;;;","26/Dec/17 07:32;ein;TC done, looks good
https://ci.ignite.apache.org/viewLog.html?buildId=1016958&tab=queuedBuildOverviewTab;;;","10/Jan/18 04:49;ein; Two improvements was done:

1) control remote node startup (was it successful or not) through IgniteCluster.startNodes();

2) keep the main Java principle working ""Write once, run everywhere"" - running remotely on Windows now also supported.;;;","11/Jan/18 14:06;agura;LGTM. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page lock status is not checked in BPlusTree.treePrinter methods,IGNITE-7122,13123172,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kirill.shirokov,kirill.shirokov,kirill.shirokov,06/Dec/17 11:51,12/Dec/17 13:07,14/Jul/23 06:20,12/Dec/17 13:05,2.4,,,,,2.4,,sql,,,,0,,,,"The result of readLock(), which can be 0 is not checked in BPlusTree.treePrinter getChildren() and formatTreeNode() calls:

{noformat}
java.lang.AssertionError: 0
    at org.apache.ignite.internal.pagemem.PageUtils.getLong(PageUtils.java:117)
    at org.apache.ignite.internal.processors.cache.persistence.tree.io.PageIO.getPageId(PageIO.java:279)
    at org.apache.ignite.internal.processors.database.BPlusTreeSelfTest.checkPageId(BPlusTreeSelfTest.java:2307)
    at org.apache.ignite.internal.processors.database.BPlusTreeSelfTest$TestTree.onReadUnlock(BPlusTreeSelfTest.java:2445)
    at org.apache.ignite.internal.processors.cache.persistence.tree.util.PageHandler.readUnlock(PageHandler.java:203)
    at org.apache.ignite.internal.processors.cache.persistence.DataStructure.readUnlock(DataStructure.java:186)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.access$400(BPlusTree.java:82)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$1.getChildren(BPlusTree.java:163)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$1.getChildren(BPlusTree.java:120)
    at org.apache.ignite.internal.util.lang.GridTreePrinter.printTree(GridTreePrinter.java:60)
    at org.apache.ignite.internal.util.lang.GridTreePrinter.printTree(GridTreePrinter.java:67)
    at org.apache.ignite.internal.util.lang.GridTreePrinter.print(GridTreePrinter.java:32)
    at org.apache.ignite.internal.util.lang.GridTreePrinter.print(GridTreePrinter.java:43)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.printTree(BPlusTree.java:1188)
    at org.apache.ignite.internal.processors.database.BPlusTreeSelfTest$19.call(BPlusTreeSelfTest.java:1777)
    at org.apache.ignite.internal.processors.database.BPlusTreeSelfTest$19.call(BPlusTreeSelfTest.java:1771)
    at org.apache.ignite.testframework.GridTestThread.run(GridTestThread.java:86)
{noformat}

...which causes intermittent failures in the BPlusTree unit tests:

BPlusTreePageMemoryImplTest.testPutRmvSizeSinglePageContention  	
BPlusTreeReuseListPageMemoryImplTest.testPutRmvSizeSinglePageContention ",,githubbot,gvvinblade,kirill.shirokov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 13:07:37 UTC 2017,,,,,,,,,,"0|i3nlmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 12:21;githubbot;GitHub user gg-shq opened a pull request:

    https://github.com/apache/ignite/pull/3157

    IGNITE-7122: Fixed assertion in BPLusTree printing code

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7122

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3157.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3157
    
----
commit 9af2f53973302cc9b39d0707ff8d90fb8dd45008
Author: gg-shq <kshirokov@gridgain.com>
Date:   2017-12-06T12:14:53Z

    IGNITE-7122: Fixed assertion BPLusTree printing code

----
;;;","08/Dec/17 21:15;gvvinblade;[~kirill.shirokov], returned from {{readLock(..)}} zero doesn't mean that page is locked. This method will wait until whether write lock is freed or page is recycled, so that {{<locked>}} output is incorrect. Such node must be just skipped.;;;","11/Dec/17 10:32;kirill.shirokov;[~gvvinblade], fixed.;;;","12/Dec/17 13:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3157
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
visorcmd: there is no output for last command in batch mode in case of using -nq option,IGNITE-7121,13123148,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,06/Dec/17 09:59,19/Dec/17 09:44,14/Jul/23 06:20,12/Dec/17 04:26,2.3,,,,,2.4,,visor,,,,0,,,,"To reproduce try to execute visorcmd in batch mode 
{code}
ignitevisorcmd.bat ""-nq -b=commands.visor""
{code}
with command file
{code}
open -cpath=config/your-config.xml
config
{code}
output of 'config' command will not displayed
",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 09:44:18 UTC 2017,,,,,,,,,,"0|i3nlh3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 07:15;vsisko;Fixed reading of last command in batch mode.;;;","08/Dec/17 02:50;pkonstantinov;Tested;;;","11/Dec/17 14:20;kuaw26;I reviewed code.
Can you move adding ""\n"" logic near line VisorConsole.scala:166?;;;","12/Dec/17 02:04;vsisko;Fixed. Master merged.;;;","12/Dec/17 04:20;kuaw26;Looks good. Merged to master.;;;","19/Dec/17 09:44;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test cases inherited by AbstractSchemaSelfTest became flucky after the refactoring to use SQL API.,IGNITE-7120,13123132,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,rkondakov,rkondakov,06/Dec/17 09:23,11/Dec/17 12:08,14/Jul/23 06:20,11/Dec/17 12:08,2.3,,,,,2.4,,sql,,,,0,,,,"This problem may be caused by the delay between CREATE INDEX command and the consequitive JDBC metadata updating.  Therefore, a metadata info may be outdated in AbstractSchemaSelfTest#assertIndex() {.. c.getMetaData().getIndexInfo() ..}",,githubbot,rkondakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7001,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 06 13:20:52 UTC 2017,,,,,,,,,,"0|i3nldz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 10:30;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/3156

    IGNITE-7120 Dynamic indexes tests fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7120

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3156.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3156
    
----
commit bd9a7aaded9572401949c82e6251d8b7f88105af
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-12-06T10:30:12Z

    IGNITE-7120 Dynamic indexes tests fix

----
;;;","06/Dec/17 13:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3156
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
performance measurement for distributed k-means clustering,IGNITE-7118,13122956,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oignatenko,oignatenko,oignatenko,05/Dec/17 18:44,12/Dec/17 14:21,14/Jul/23 06:20,12/Dec/17 13:56,,,,,,2.4,,ml,yardstick,,,0,,,,"We want to start tracking our performance to avoid performance degradation. Also we need some performance comparison with other ml libs.

Initial draft for this benchmark was made per IGNITE-6123 (class {{IgniteKMeansDistributedClustererBenchmark}}) but it currently fails because of the implementation issues reported in IGNITE-6849 so it is excluded.

Enable this benchmark and re-test it using codebase that has has corrected implementation.",,chief,githubbot,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6849,,,,,,,IGNITE-6123,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 14:21:08 UTC 2017,,,,,,,,,,"0|i3nkav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Dec/17 18:50;oignatenko;Fix for IGNITE-6849 is currently merged to master. I checked benchmark with part of the changes done per this fix and it appears to run fine.

Plan to do as follows: After IGNITE-6123 is merged to master, enable the benchmark, remove ""TODO"" comment from {{IgniteKMeansDistributedClustererBenchmark}}, re-run it with master codebase and fix if there are any other issues found.

This entry needs to be added to file {{ignite-ml.properties}} in order to enable benchmark:
{code:none}-cfg ${SCRIPT_DIR}/../config/ignite-localhost-config.xml -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} -sm ${sm} -dn IgniteKMeansDistributedClustererBenchmark -sn IgniteNode -ds ${ver}kmeans-distributed-clusterer-${b}-backup,\
{code};;;","12/Dec/17 13:32;githubbot;GitHub user oignatenko opened a pull request:

    https://github.com/apache/ignite/pull/3210

    IGNITE-7118 performance measurement for distributed k-means clustering

    - enabled benchmark after integration of necessary fix from master
    -- verified with diffs overview, clean rebuild, trial execution of the benchmarks and studying results

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7118

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3210.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3210
    
----
commit a782ee3f944d556686e8d0a68acb3f534e3ecb13
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-12-12T13:30:11Z

    IGNITE-7118 performance measurement for distributed k-means clustering
    - enabled benchmark after integration of necessary fix from master
    -- verified with diffs overview, clean rebuild, trial execution of the benchmarks and studying results

----
;;;","12/Dec/17 13:56;chief;reviewed and merged;;;","12/Dec/17 13:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3210
;;;","12/Dec/17 14:06;githubbot;GitHub user oignatenko opened a pull request:

    https://github.com/apache/ignite/pull/3211

    IGNITE-7118 performance measurement for distributed k-means clustering

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7118

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3211.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3211
    
----
commit a782ee3f944d556686e8d0a68acb3f534e3ecb13
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-12-12T13:30:11Z

    IGNITE-7118 performance measurement for distributed k-means clustering
    - enabled benchmark after integration of necessary fix from master
    -- verified with diffs overview, clean rebuild, trial execution of the benchmarks and studying results

commit 125b3d1fe182dbaeba3ba99476e92a48f6daf9aa
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-12-12T14:04:42Z

    IGNITE-7118 performance measurement for distributed k-means clustering
    - enabled benchmark after integration of necessary fix from master
    -- verified with diffs overview, clean rebuild, trial execution of the benchmarks and studying results

----
;;;","12/Dec/17 14:21;githubbot;Github user oignatenko closed the pull request at:

    https://github.com/apache/ignite/pull/3211
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Classpath resolver relies on Java examples,IGNITE-7117,13122945,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,05/Dec/17 17:30,19/Jan/18 13:25,14/Jul/23 06:20,19/Jan/18 13:24,,,,,,,,platforms,,,,0,.NET,,,We should rely solely on jar directory presence. See {{IgniteHome.IsIgniteHome}} method.,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7114,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 13:25:04 UTC 2018,,,,,,,,,,"0|i3nk8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jan/18 09:24;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/3402

    IGNITE-7117 .NET: Improve IgniteHome resolver

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-7117

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3402.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3402;;;","19/Jan/18 09:28;ptupitsyn;Fixed: rely solely on {{libs/ignite-core-*.jar}} presence for binary releases and {{modules/core/src/main/java/org/apache/ignite}} for source release.
Waiting for TC, need to check on different platforms (win/linux, .NET/.NET Core/Mono).;;;","19/Jan/18 13:20;ptupitsyn;Merged to master: {{c305b91318789150ac898dd8bd74d944baf4e90d}}.;;;","19/Jan/18 13:23;ptupitsyn;Cherry-picked to ignite-2.4: {{25e91b60694c589d8bf50c63a0d898ca4180b428}}.;;;","19/Jan/18 13:25;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3402
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: C++ node can't start without java examples folder,IGNITE-7114,13122856,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,isapego,ezhuravl,ezhuravl,05/Dec/17 12:03,22/Mar/18 11:55,14/Jul/23 06:20,12/Dec/17 13:22,2.1,,,,,2.4,,platforms,,,,0,,,,"Error message: 
ERROR: Java classpath is empty (did you set {{IGNITE_HOME}} environment variable?)",,alexey.tank2,ezhuravl,githubbot,isapego,ptupitsyn,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7117,,,,,,,,,,,,,,,"07/Dec/17 11:37;alexey.tank2;sample.png;https://issues.apache.org/jira/secure/attachment/12901051/sample.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 22 11:55:38 UTC 2018,,,,,,,,,,"0|i3njp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 15:10;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/3160

    IGNITE-7114: C++ node can now start without java examples folder.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7114

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3160.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3160
    
----
commit db1136828b11647226c73d38ff2586e52cfc9b3b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-06T13:51:16Z

    IGNITE-7114: Fixed for Windows

commit eb515c99aa3964b0c06c16418ad12bf30f91a73e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-06T14:16:29Z

    IGNITE-7114: Fixed for Linux.

commit 16f8bd860d9d688d840112eac9f5e70a88be2941
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-06T15:00:07Z

    IGNITE-7114: Fixes for Linux

commit 6d9143fecdb275f5f8b25ab3bb467f027464ecbe
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-12-06T15:08:12Z

    IGNITE-7114: Minor fix

----
;;;","06/Dec/17 16:56;isapego;Ready for review. [~ptupitsyn], [~skalashnikov], take a look please.;;;","06/Dec/17 17:39;ptupitsyn;[~isapego] source release logic looks good to me.
But for binary releases I would check {{libs\ignite-core-x.y.z.jar}} presence instead of {{ignite-indexing}} and {{ignite-spring}} folders, because that is the main JAR file, and you can run Ignite without indexing or spring.;;;","07/Dec/17 10:12;isapego;[~ptupitsyn], agree. I'll try to implement proposed logic.;;;","07/Dec/17 11:39;alexey.tank2;[~isapego], Please look through the attached sample.png. Can you please check the absence of ""-x.y.z"" part with some error indication as well. That's a real-world example );;;","07/Dec/17 11:47;alexey.tank2;just FYI, sample files for regexp:
ignite-core-2.1.7-p1.jar
ignite-core-2.1.7.b3.jar;;;","07/Dec/17 13:50;isapego;[~apopov], what do you mean by ""check the absence of ""-x.y.z"" part with some error indication""?
Currently, I simply check for existence of the {{/libs/ignite-core*.jar}} file. Is it OK for your case?;;;","07/Dec/17 13:57;alexey.tank2;[~isapego], please see the attached .png. It has {{/libs/ignite-core.jar}} file. 
{{/libs/ignite-core*.jar}} is ok;;;","07/Dec/17 14:12;isapego;[~apopov], I've seen the attached file. So should it be detected or should not?
By the way, these checks only used when user did not provide us {{IGNITE_HOME}} and we are trying to find it by ourselves. If user provides us {{IGNITE_HOME}} that points to any existent directory, no additional checks performed now, so user can rename libs however they want, if only they point out {{IGNITE_HOME}} for us.;;;","07/Dec/17 14:47;isapego;[~ptupitsyn], can you take a look on a new version?;;;","07/Dec/17 15:03;ptupitsyn;[~isapego] logic looks good to me, but there is a lot of code duplication.
I think Windows and Linux differ only in path separators and jvm library names, so all the logic can be shared.;;;","08/Dec/17 11:37;isapego; [~ptupitsyn], it's an inherent thing. I've created a ticket to remove code duplication - IGNITE-7151.;;;","11/Dec/17 07:57;alexey.tank2;[~isapego], it should be detected. Btw, changes look good for me too.;;;","11/Dec/17 14:37;skalashnikov;[~isapego], I did review the code and I'm OK with the changes.;;;","12/Dec/17 13:22;isapego;Merged to master.;;;","22/Mar/18 11:55;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/3160
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"Non informative ""Failed to wait for partition map exchange"" message.",IGNITE-7112,13122831,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,zstan,zstan,zstan,05/Dec/17 10:36,10/Dec/18 16:40,14/Jul/23 06:20,04/May/18 06:16,2.3,,,,,2.7,,,,,,0,,,,"Eventually can be observed ""Failed to wait for partition map exchange"" with no further detalization info, due to code below.
{code:java}
final long futTimeout = 2 * cctx.gridConfig().getNetworkTimeout();

long nextDumpTime = 0;

while (true) {
    try {
        resVer = exchFut.get(futTimeout, TimeUnit.MILLISECONDS);

        break;
    }
catch (IgniteFutureTimeoutCheckedException ignored) {
U.warn(diagnosticLog, ""Failed to wait for partition map exchange ["" +
...
if (nextDumpTime <= U.currentTimeMillis()) {
    try {
        dumpDebugInfo(exchFut);
    }
    catch (Exception e) {
        U.error(diagnosticLog, ""Failed to dump debug information: "" + e, e);
    }
    nextDumpTime = U.currentTimeMillis() + nextDumpTimeout(dumpCnt++, futTimeout);
}
{code}
",,agoncharuk,githubbot,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:40:47 UTC 2018,,,,,,,,,,"0|i3njjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Dec/17 12:21;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/3144

    IGNITE-7112 More informative: Failed to wait PME

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7112

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3144.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3144
    
----
commit d10bd69f79cbe943f015063406ba08eaae0be101
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-12-05T12:20:28Z

    IGNITE-7112 More informative: Failed to wait PME

----
;;;","08/Dec/17 05:47;zstan;this fix partially consist in https://github.com/apache/ignite/pull/3175, if 3175 will be merged, no need in this fix.;;;","03/May/18 13:38;agoncharuk;[~zstan], IGNITE-6827 is already merged to master, can you please check if the fix is still relevant?;;;","04/May/18 06:16;zstan;[~agoncharuk], check it, no need to merge it, thanks.;;;","10/Dec/18 16:40;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/3144
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc package descriptions missed for ML,IGNITE-7110,13122670,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,chief,skozlov,skozlov,04/Dec/17 20:26,07/Dec/17 16:46,14/Jul/23 06:20,07/Dec/17 16:44,2.3,,,,,2.4,,ml,,,,0,,,,"The following packages have no description:

org.apache.ignite.development.utils
org.apache.ignite.ml.trees.trainers.columnbased.caches
org.apache.ignite.ml.util",,chief,githubbot,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 07 16:46:12 UTC 2017,,,,,,,,,,"0|i3nik7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 16:28;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/3174

    IGNITE-7110: Javadoc package descriptions missed for ML

    fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7110

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3174.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3174
    
----
commit 3e48a703208b99451f0191746cc20f9ec7809d13
Author: YuriBabak <y.chief@gmail.com>
Date:   2017-12-07T16:27:39Z

    IGNITE-7110: Javadoc package descriptions missed for ML
    
    fixed.

----
;;;","07/Dec/17 16:44;chief;Added missed package-info`s.

Merged.;;;","07/Dec/17 16:46;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3174
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add option to VisorNodeDataCollectorTask to not collect cache metrics,IGNITE-7106,13122590,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,04/Dec/17 14:27,21/Dec/17 01:58,14/Jul/23 06:20,21/Dec/17 01:56,,,,,,2.4,,,,,,0,,,,"On large clusters with > 100 nodes and > 1000 caches this task can collect huge amount of data.
We can add an option to collect this info on demand",,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 21 01:56:40 UTC 2017,,,,,,,,,,"0|i3ni2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/17 01:56;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missed dependencies in examples pom files,IGNITE-7096,13122364,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,chief,chief,02/Dec/17 14:45,02/Dec/17 14:57,14/Jul/23 06:20,02/Dec/17 14:56,,,,,,2.4,,ml,,,,0,example,,,"Missed dependencies in ML profiles in pom-standalone.xml and pom-standalone-lgpl.xml.

missed:
<dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2</version>
</dependency>",,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Dec 02 14:57:20 UTC 2017,,,,,,,,,,"0|i3ngpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 14:51;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/3132

    IGNITE-7096: Missed dependencies in examples pom files

    fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7096

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3132.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3132
    
----
commit 9a2e8e88b49601f0c6ec39f0d92572b6729bcf17
Author: YuriBabak <y.chief@gmail.com>
Date:   2017-12-02T14:48:44Z

    IGNITE-7096: Missed dependencies in examples pom files
    
    fixed

----
;;;","02/Dec/17 14:56;chief;We have this dependency in pom.xml, but it was missed in pom-standalone.xml and in pom-standalone-lgpl.xml.

No TC build required for this fix.;;;","02/Dec/17 14:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3132
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JdbcConnection hard linked in IgniteH2Indexing preventing old connections from closing,IGNITE-7095,13122362,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,ein,ein,02/Dec/17 14:36,12/Dec/17 13:22,14/Jul/23 06:20,12/Dec/17 13:20,2.3,,,,,2.4,,sql,,,,0,,,,"Every time a new thread performs {{SqlFieldsQuery}} the new {{org.h2.jdbc.JdbcConnection}} will be created and added to the {{org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing#conns}}.

Such hard link prevents from the {{org.h2.util.CloseWatcher}} to be enqueued and old connections will remain in heap even after the thread exits.

After some number of SQL queries the {{java.lang.OutOfMemoryError}} will occur.",,ein,githubbot,kcheng.mvp,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 14:52;ein;IndexClientTest.java;https://issues.apache.org/jira/secure/attachment/12900343/IndexClientTest.java","02/Dec/17 14:52;ein;IndexTest.java;https://issues.apache.org/jira/secure/attachment/12900342/IndexTest.java",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 13:22:02 UTC 2017,,,,,,,,,,"0|i3ngpb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 14:53;ein;Simple reproducer. Start IndexTest then start IndexClientTest.

After message 'All queries done' on the client the heap will contain the number of JdcbConnection and related objects.;;;","05/Dec/17 09:45;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/3141

    IGNITE-7095: close & cleanup internal H2 JDBC Connection

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7095

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3141.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3141
    
----
commit 398c18657761a8a7a415edc059862870c339a664
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-12-05T09:43:59Z

    IGNITE-7095: close & cleanup internal H2 JDBC Connection

----
;;;","05/Dec/17 14:50;tledkov-gridgain;Tests results are OK with me.
[~vozerov], please review the patch.;;;","11/Dec/17 13:25;vozerov;[~tledkov-gridgain], my comments:
1) I did minor changes to the test, please review them
2) There is an obvious bug in {{IgniteH2Indexing.onSqlException}} method - {{conns.remove(conn)}}. Please fix and add a test.;;;","12/Dec/17 09:26;tledkov-gridgain;[~vozerov], the issues are fixed. Tests results are OK with me. Please review he changes.;;;","12/Dec/17 13:22;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3141
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Javadoc warnings in ml module ,IGNITE-7094,13122352,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,lexa,lexa,02/Dec/17 11:40,02/Dec/17 14:40,14/Jul/23 06:20,02/Dec/17 14:40,2.4,,,,,2.4,,ml,,,,0,,,,"
{code:java}
[14:20:11][Step 18/41] [WARNING] Javadoc Warnings
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link:illegal character: ""47"" in ""/*SparseDistributedVector""
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link:illegal character: ""42"" in ""/*SparseDistributedVector""
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/ContinuousSplitCalculator.java:37: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/ContinuousSplitCalculator.java:37: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/ContinuousSplitCalculator.java:37: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:39: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:39: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/MatrixColumnDecisionTreeTrainerInput.java:40: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/MatrixColumnDecisionTreeTrainerInput.java:40: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/MatrixColumnDecisionTreeTrainerInput.java:47: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see: reference not found: ColumnDecisionTreeTrainer
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:78: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:78: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:78: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:78: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:39: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see: reference not found: ColumnDecisionTreeTrainer
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:39: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see: reference not found: ColumnDecisionTreeTrainer
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:39: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see: reference not found: ColumnDecisionTreeTrainer
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:39: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/CacheColumnDecisionTreeTrainerInput.java:82: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/CategoricalFeatureProcessor.java:44: warning - Tag @see: reference not found: ColumnDecisionTreeTrainer
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/ColumnDecisionTreeTrainerInput.java:28: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/trees/trainers/columnbased/vectors/FeatureProcessor.java:31: warning - Tag @see cannot be used in inline documentation.  It can only be used in the following types of documentation: overview, package, class/interface, constructor, field, method.
[14:20:11][Step 18/41] [WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/impls/storage/vector/SparseDistributedVectorStorage.java:43: warning - Tag @link: reference not found: /*SparseDistributedVector
{code}",,chief,lexa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Dec 02 14:40:04 UTC 2017,,,,,,,,,,"0|i3ngn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 14:40;chief;merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite compatibility test.jar does not builds,IGNITE-7093,13122345,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,02/Dec/17 10:27,05/Dec/17 12:33,14/Jul/23 06:20,05/Dec/17 12:33,,,,,,2.4,,,,,,0,,,,Ignite compatibility test classes does not build into test.jar during package phase. It may lead to a problem with test dependency.,,agoncharuk,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 05 12:33:19 UTC 2017,,,,,,,,,,"0|i3nglj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Dec/17 13:36;kcheng.mvp;yeah, I run into this issue http://apache-ignite-developers.2346864.n4.nabble.com/Can-not-build-from-source-code-td24587.html#a24659;;;","05/Dec/17 11:02;oleg-ostanin;[~avinogradov]
Please review:
https://github.com/apache/ignite/pull/3142;;;","05/Dec/17 12:33;agoncharuk;Thanks, Oleg, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDS Compatibilty: Assertion error in case serializer V1 is found and there is no next segment to read in WAL iterator,IGNITE-7091,13122226,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dpavlov,dpavlov,dpavlov,01/Dec/17 17:38,05/Dec/17 08:26,14/Jul/23 06:20,05/Dec/17 08:26,2.4,,,,,2.4,,persistence,,,,0,,,,"In case of absence of next segment for WAL iterator and current segment having V1 version there is flaky failure of PDS compatibilty tests
{noformat}
java.lang.AssertionError
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$FileArchiver.releaseWorkSegment(FileWriteAheadLogManager.java:1424)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$FileArchiver.access$8400(FileWriteAheadLogManager.java:1173)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$RecordsIterator.releaseWorkSegment(FileWriteAheadLogManager.java:3104)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$RecordsIterator.advanceSegment(FileWriteAheadLogManager.java:3084)
    at org.apache.ignite.internal.processors.cache.persistence.wal.AbstractWalRecordsIterator.advance(AbstractWalRecordsIterator.java:168)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$RecordsIterator.<init>(FileWriteAheadLogManager.java:2949)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$RecordsIterator.<init>(FileWriteAheadLogManager.java:2883)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager.replay(FileWriteAheadLogManager.java:646)
    at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.applyLastUpdates(GridCacheDatabaseSharedManager.java:1980)
    at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.restoreState(GridCacheDatabaseSharedManager.java:1344)
    at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.beforeExchange(GridCacheDatabaseSharedManager.java:1139)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.distributedExchange(GridDhtPartitionsExchangeFuture.java:1054)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:658)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:2284)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
{noformat}",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 05 08:26:52 UTC 2017,,,,,,,,,,"0|i3nfv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 17:40;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/3128

    IGNITE-7091: PDS Compatibilty: Assertion error in case serializer V1

    Flaky failure fix

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-13117

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3128.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3128
    
----
commit bd9e4c8893e0b1f9452b7cd222f6aeed3a9aec6c
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-01T14:42:12Z

    GG-13117: PDS compatibility test flaky failure: debug code added

commit b6d4753ce4ab5866f888c183b89a8708abcbe52a
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-01T15:59:19Z

    GG-13117: PDS compatibility test flaky failure: debug code added

commit a6454caa288dcc603a6b55774a257ef130c24491
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-01T16:47:45Z

    GG-13117: PDS compatibility test flaky failure: debug code added

commit f728b33967d9829719d9aa2b964cb3bf1dfe65bd
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-01T17:09:08Z

    GG-13117: PDS compatibility test flaky failure: fix

commit 17d967fded2e54164d8e9f753c61fa1ada97edc0
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-01T17:13:52Z

    GG-13117: PDS compatibility test flaky failure: fix

commit 11c9b6e3f55b769ec86b2c810120401a419d7e81
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-12-01T17:35:23Z

    GG-13117: PDS compatibility test flaky failure: debug code return

----
;;;","01/Dec/17 18:07;dpavlov;https://ci.ignite.apache.org/viewQueued.html?itemId=972475&tab=queuedBuildOverviewTab;;;","04/Dec/17 06:34;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3128
;;;","05/Dec/17 08:26;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Semaphore Stuck when no acquirers to assign permit,IGNITE-7090,13122225,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Timay,Timay,Timay,01/Dec/17 17:35,31/Mar/18 13:05,14/Jul/23 06:20,31/Mar/18 13:02,2.1,2.4,,,,2.5,,cache,data structures,,,0,,,,"If no acquirers are available to take permit of semaphore, the permit never gets release and any further acquirerers will wait forever. 

On node shut down DataStructuresProcessor.dsMap gets cleared out prior to event listener being able to execute onNodeRemoved, hence owner is never cleared out if it was unable to pass to a different acquirer. 

 


",,ascherbakov,dpavlov,githubbot,ilantukh,Timay,vladisav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 17:36;Timay;SemaphoreFailoverNoWaitingAcquirerTest.java;https://issues.apache.org/jira/secure/attachment/12900254/SemaphoreFailoverNoWaitingAcquirerTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Mar 31 13:05:04 UTC 2018,,,,,,,,,,"0|i3nfuv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Dec/17 21:18;Timay;It appears that a local node DataProcess dsMap get cleared prior to the event listner attempting to execute the onNodeRemoved. This causes the onNodeRemoved to never be called and will corrupt the semaphore and never allow another permit to be acquired. 

Pull request https://github.com/apache/ignite/pull/3138 ;;;","20/Jan/18 14:08;vladisav;Hi Tim, thanks for the contribution! I have reviewed the pull request and left you a few minor comments there;;;","23/Jan/18 13:59;vladisav;Hi Tim, I reviewed the updated pull request. Another thing came to my mind, this solution will only work if the node 1 that created the first semaphore instance can execute transaction after it fails, we should cover a more dire scenario when it can't. In this case the node 2 which creates the second semaphore instance has to do the recovery.

Since we already have a mapping of all nodes that are waiting on semaphore in GridCacheSemaphoreState we can check this when creating the new instance (in DataStructuresProcessor#semaphore() method). What do you think?;;;","24/Jan/18 04:04;Timay;[~vladisav] I agree, this is a better approach. However, from what i see in DataStructuresProcessor#semaphore() only get executed on the first time. In getAtomic if it exists it would be returned prior to the closure being executed. So just wondering what you would suggest for gaining access to GridCacheSemaphoreState. Seems to be a bit of hoops to get with in the semaphore method, outside of the closure. It was getting ugly when i was trying, but i could be missing something.

2 thoughts i have
 # In the getAtomic, prior to the return of an existing datastructure, check for a type of DS. If the DS implements a new or existing interface, we can run a validation and execute onNodeRemoved for any node found to be removed.
 # Add new interface that will abstract the validation within the Datastructure itself which can then validate from with in the Datastructures them self?

Might be a question of where/how we want to do it, but will like to hear what you have to say. I think i like option 2, which can be bit more generic and i am not sure if other datastructures would want to run other logic. Thoughts?

 ;;;","25/Jan/18 16:49;vladisav;[~Timay] but if semaphore already exists than it will do the recovery itself, no need to check state? If I understand correctly, this bug only happens when there are no acquirers to handle the node failure (or am I missing something)?;;;","25/Jan/18 17:32;Timay;It will happen when their is no acquirers *period*, weather or not node failed or goes down gracefully. So if 0 clients exists after a semaphore was created and permit acquired any future client will get stuck waiting to acquire since it believe the permit is still held by the node which went away. 

So two noted solutions
 # On graceful shutdown call onNodeRemoved
 # On startup check Semaphore state.

For 1 you stated this is only the case of the graceful shutdown and we should plan for non-graceful shutdown. Completely agree with you.

For 2 i found when debugging DataStructuresProcessor#semaphore(), the closure(where we have access to GridCacheSemaphoreState explicitly)  is only executed during initial creation. So to get access of GridCacheSemaphoreState would require a bunch of casting and instance of checking in the DataStructuresProcessor#getAtomic(), I was trying to avoid that by suggesting adding an interface we can use on specific data structures that we want to proactively check state and act accordingly.

 

That make sense?

 ;;;","26/Jan/18 11:21;vladisav;Thanks [~Timay], makes sense completely. I think I wasn't clear enough - if there are no acquirers, the next client that creates the semaphore will execute the closure in DataStructuresProcessor#semaphore() and this is where we can fix the state.
{quote}In getAtomic if it exists it would be returned prior to the closure being executed. 
{quote}
If it exists, than it returns the semaphore that has the right state (since it was alive to execute #onNodeRemoved() when the first node left). 

If not, than we can iterate the semaphore waiters map from this closure, check if every node is alive, and adjust the global state for everyone (this is needed only once since it is done in transaction, after this all the others will get the right state). 

This will work since getAtomic() only checks the local cache (which doesn't have the entry before the semaphore on client is created) and than proceeds executing the closure.


What do you think?  ;;;","29/Jan/18 03:33;githubbot;GitHub user tonyschak opened a pull request:

    https://github.com/apache/ignite/pull/3443

    IGNITE-7090 

    Fixed Broken Semaphore by checking state on creation of new on. 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tonyschak/ignite IGNITE-7090-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3443.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3443
    
----
commit c30592f94d2d30f7ec9702ccd878f17121f328ad
Author: Tim Onyschak <tonyschak@...>
Date:   2017-10-26T18:55:42Z

    IGNITE-6767 reset of the topVer on loading of the entry.

commit 0014171e045bc993fbcaf7279378294fee44810f
Author: Tim Onyschak <tonyschak@...>
Date:   2017-12-04T20:05:37Z

    Revert ""IGNITE-6767 reset of the topVer on loading of the entry.""
    
    This reverts commit c30592f94d2d30f7ec9702ccd878f17121f328ad.

commit a4469e17f8097ab58d157095de075f9593cdab6c
Author: Tim Onyschak <tonyschak@...>
Date:   2017-12-04T20:12:55Z

    done
    
    Merge branch 'master' of https://github.com/apache/ignite

commit d75a9b5ffc71f157a744c7f68bc224fd5a86137c
Author: Tim Onyschak <tonyschak@...>
Date:   2018-01-29T02:00:44Z

    Merge branch 'master-true' into IGNITE-7090-1
    
    * master-true:
      Revert ""IGNITE-6767 reset of the topVer on loading of the entry.""
      IGNITE-6767 reset of the topVer on loading of the entry.

commit 3de65e55f2186529b281389029414daeb651f357
Author: Tim Onyschak <tonyschak@...>
Date:   2018-01-29T02:20:21Z

    Added Cluster State check for Semaphore State check

commit dde908ffa9e358810d1ad618b9cdf2b697c742b7
Author: Tim Onyschak <tonyschak@...>
Date:   2018-01-29T02:21:20Z

    Merge branch 'master-up' into IGNITE-7090-1
    
    * master-up: (27 commits)
      IGNITE-7550 Fix windows *.bat scripts Java 9 compatibility
      IGNITE-7003: Fixed SQL WAL enable/disable command usability: throw exception in case of change failure.
      IGNITE-7031 Web Console: Refactored confirmation cancellation logic.
      IGNITE-7521 Add new assertions to FilePageStore and provide page content if read page is broken - Fixes #3432.
      IGNITE-7530 .NET: Fix GetAll memory usage and performance in binary mode
      IGNITE-7392 Visor Cmd: Added missing word 'factory'.
      IGNITE-7064 Web Console: Minor test fix.
      Revert ""IGNITE-7514 Choose owner primary node after cluster restart""
      IGNITE-7529 Web Console: Refactor UIGrid column filters.
      IGNITE-7522 Web Console: Fixed cluster selector state after cluster restart.
      IGNITE-7316: Make Linear SVM for binary classification
      ignite-6643 Marshalling improvements
      IGNITE-7064 Web Console: Implemented basic E2E tests.
      IGNITE-7502 Disabled BLT for non-persistent caches
      AI 2.4 release notes.
      IGNITE-7507: Ignite node performance drop during checkpoint start: store metapage eviction causes long checkpoint lock hold time - Fixes #3423.
      IGNITE-7506 Fixed resetting of GridClusterStateProcessor#compatibilityMode flag
      IGNITE-6832 Properly handle IO errors while checkpointing - Fixes #3394.
      IGNITE-7514 Choose owner primary node after cluster restart
      IGNITE-7443: Native batching for ODBC. This closes #3422.
      ...

commit 729e1112cdc522065a2d9a52b6ad47e603e96430
Author: Tim Onyschak <tonyschak@...>
Date:   2018-01-29T02:28:28Z

    Added to test suite

commit f0fbbc35989bb7678b7df3902fbebdbe26517a27
Author: Tim Onyschak <tonyschak@...>
Date:   2018-01-29T03:28:39Z

    fixed placement of call

----
;;;","29/Jan/18 03:45;Timay;Forgive me, i'm learning git as i go. A new pull request is above. 

Anyway, take a look at this pull request. I was getting confused when GridCacheSemaphoreEx sem = cast(dsMap.get(key), GridCacheSemaphoreEx.class) was always returning null and how we would access it. BUt after further debuggin was i able to understand what you meant. Let me know what you think. 

 ;;;","29/Jan/18 11:49;vladisav;[~Timay] no problem, thanks for the update! Looks like a good and elegant solution, I think were almost there. I left you a few minor comments in the PR, I think we should clear the map manually and adjust the state accordingly, to avoid calling a transaction within transaction. Thanks!;;;","30/Jan/18 04:36;Timay;I may be doing something wrong, but when i attempted both solution. Removing the closure and manually adjusting the SemaphoreState, neither seemed to work. The execution without the closure in same thread seems to hang/deadlock on initializeSemaphore() ( specifically cacheView.get(key); )

Then, manually setting SemaphoreState within the DataStructuresProcessor#semaphore() witha few iterations of the below code did not seem to work as well. I must be missing something within the onNodeRemoved. Guessing something around the GridCacheSemaphoreImpl.Sync

 
{code:java}
if(val!=null){    
    GridCacheSemaphoreState semState=(GridCacheSemaphoreState)val;
    boolean updated=false;
    Map<UUID,Integer> waiters = semState.getWaiters();
    for(UUID nodeId:waiters.keySet()){
        ClusterNode node = ctx.cluster().get().node(nodeId);
        if(node==null){
            waiters.remove(nodeId);
            updated=true;
        }
    }
    if(updated) {
        semState.setWaiters(waiters);
        sem0.onUpdate(semState);
        retVal=semState;
    }
 }{code}
 

Any thoughts? 

 ;;;","30/Jan/18 21:41;vladisav;Hi Tim, thank you for the extended effort! Looking at this code, first that springs to my mind is that when you remove node from the waiters, you also need to add permits belonging to this node to the available permits in semaphore state. Second thing, sem0 is created in the same transaction, so no need to update it, you can create it with the modified state (by changing the state first, i.e. checking/removing the node ids and increasing the number of available permits before the semaphore initialization). Let's see if this will bring us closer to the goal. Thanks!;;;","31/Jan/18 03:01;Timay;I missed the resetting of the permits. OK i think i have what you want. However, i began thinking of a more generic solution to apply to any data structure which could end up out of sync between it's state object and cluster state. Should we look into handling something across the board?

 

Specifically, if we can hook into specific children of AtomicDataStructureValue that implement a new interface we can check instance and pass in current grid state to check DSState against and handle accordingly? Maybe a new Jira to track and refactor? Thoughts?;;;","31/Jan/18 11:40;vladisav;I think your'e right; this probably could be done, but you are also right about the scope of this task, It's should be in a separate issue ticket, can you make one? Thanks!;;;","01/Feb/18 02:22;Timay;Latest pull request [https://github.com/apache/ignite/pull/3443];;;","01/Feb/18 02:23;githubbot;Github user tonyschak closed the pull request at:

    https://github.com/apache/ignite/pull/3138
;;;","01/Feb/18 11:21;vladisav;On more thing and we're done; Can you please refactor the code according to guidelines (you can apply the checkstyle):[[https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines]]

Thanks!;;;","13/Feb/18 16:02;Timay;[~vladisav] code has been updated, sorry for so many iteration. Let me know if i finally have it right. 

Thanks;;;","16/Mar/18 08:17;ascherbakov;Guys,

The issues blocks out customer's production. Any chances it will be ready soon ?;;;","16/Mar/18 15:02;vladisav;Hi [~Timay] sorry for the late response, can you please run tests on TeamCity once more before we merge your pr? Thanks!;;;","20/Mar/18 17:39;EdShangGG;[~vladisav] I have triggered TC Run All. https://ci.ignite.apache.org/viewQueued.html?itemId=1148373
Will be ready in ~14 hours.;;;","21/Mar/18 16:04;dpavlov;Hi [~Timay], could you please merge current master into your branch?

It seems to me a lot of failed tests were fixed already. Later we can re-run tests.

Also I have concern related to timeout of DS suite:
Ignite Data Structures [ tests 0 TIMEOUT , TC_EXIT_CODE ] 
   GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreSingleNodeFailure (last started)

Is it separate issue?;;;","21/Mar/18 16:48;Timay;Committed merge of master into my branch. Kicked off a test run, i will look at results and trouble shoot the issues. ;;;","23/Mar/18 13:54;dpavlov;Hi [~Timay], thank you.

This run loolks better than previous , but there are several failures in D
{noformat}
Ignite Data Structures [ tests 4 ]  
     IgniteCacheDataStructuresSelfTestSuite: GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreConstantTopologyChangeNonFailoverSafe (fail rate 3,0%) 
     IgniteCacheDataStructuresSelfTestSuite: GridCacheReplicatedDataStructuresFailoverSelfTest.testSemaphoreConstantTopologyChangeNonFailoverSafe (fail rate 1,8%) 
     IgniteCacheDataStructuresSelfTestSuite: GridCacheReplicatedDataStructuresFailoverSelfTest.testSemaphoreMultipleTopologyChangeNonFailoverSafe (fail rate 1,2%) 
    IgniteCacheDataStructuresSelfTestSuite: GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreMultipleTopologyChangeNonFailoverSafe (fail rate 0,6%) 
{noformat}

Is it a separate issue, which is not to be fixed by your patch?
;;;","23/Mar/18 14:43;dpavlov;[~ascherbakov], let me remind you about ASF Phylosophy https://www.apache.org/foundation/how-it-works.html and http://community.apache.org/projectIndependence.html 

So customer needs can't be an argument for speeding up any activities. You can suggest assistance, if you are interested in results. ;;;","27/Mar/18 02:25;Timay;[~vladisav], it looks like when failoverSafe flag is set to false it does not expect the permits to be given back. i added a failoverSafe check to fix the test, but i am not sure if thats expected functionality.  If yes, code is checked in. 


If we expect the permit to be given back on even in failoverSafe set to false, we may need to update test. I did not want to change any test until i fully understood the requirements on that.

I've kicked off a RunAll on team city, let me know what you think. ;;;","29/Mar/18 11:56;ilantukh;[~Timay],
Thank you for the work you've done on this issue. I've checked TC status. looks like it doesn't introduce new test failures anymore.

[~vladisav],
Thanks for review! Is it ready to be merged?;;;","29/Mar/18 12:17;dpavlov;[~vladisav], [~Timay], let me say thank you from my side also.

Because [~ilantukh] had also checked this fix and failures context, I suggest following, if there is no objections, I will merge this change during weekend. Any additional improvements still could be fixed with separate ticket/PR. If [~vladisav] you're agree, could you merge before weekend?

Is it OK for you?;;;","31/Mar/18 10:29;vladisav;[~dpavlov] I agree, LGTM.

 

 ;;;","31/Mar/18 13:02;dpavlov;[~Timay], Folks, thank you for contribution

Merged to master;;;","31/Mar/18 13:05;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3443
;;;",,,,,,,,,,,
Wrong implementation of DIRECT comparator for ordering cache start operations,IGNITE-7088,13122174,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ezhuravl,ezhuravl,ezhuravl,01/Dec/17 13:47,07/Dec/17 12:44,14/Jul/23 06:20,07/Dec/17 12:43,2.3,,,,,2.4,,,,,,0,,,,"{code:java}
java.lang.IllegalArgumentException: Comparison method violates its general contract!
	at java.util.TimSort.mergeHi(TimSort.java:899) ~[?:1.8.0_102]
	at java.util.TimSort.mergeAt(TimSort.java:516) ~[?:1.8.0_102]
	at java.util.TimSort.mergeForceCollapse(TimSort.java:457) ~[?:1.8.0_102]
	at java.util.TimSort.sort(TimSort.java:254) ~[?:1.8.0_102]
	at java.util.Arrays.sort(Arrays.java:1512) ~[?:1.8.0_102]
	at java.util.ArrayList.sort(ArrayList.java:1454) ~[?:1.8.0_102]
	at java.util.Collections.sort(Collections.java:175) ~[?:1.8.0_102]
	at org.apache.ignite.internal.processors.cache.ClusterCachesInfo.orderedCaches(ClusterCachesInfo.java:1616) ~[ignite-core-2.1.7.jar:2.1.7]
	at org.apache.ignite.internal.processors.cache.ClusterCachesInfo.cachesReceivedFromJoin(ClusterCachesInfo.java:839) ~[ignite-core-2.1.7.jar:2.1.7]
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.startReceivedCaches(GridCacheProcessor.java:1709) ~[ignite-core-2.1.7.jar:2.1.7]
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:606) [ignite-core-2.1.7.jar:2.1.7]
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:2278) [ignite-core-2.1.7.jar:2.1.7]
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110) [ignite-core-2.1.7.jar:2.1.7]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]

{code}

When 2 not user caches will be compared using this comparator, this above exception will be thrown.

As a workaround can be used system variable -Djava.util.Arrays.useLegacyMergeSort=true ",,agoncharuk,ezhuravl,githubbot,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 07 12:44:38 UTC 2017,,,,,,,,,,"0|i3nfjr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Dec/17 16:11;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/3136

    IGNITE-7088 Fix implementation of DIRECT comparator for ordering caches

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7088

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3136.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3136
    
----
commit bf7f857d15e17ab27ffcc2b5448160a72d481045
Author: ezhuravl <ezhuravlev@gridgain.com>
Date:   2017-12-04T16:09:36Z

    IGNITE-7088 Fix implementation of DIRECT comparator for ordering cache start operations

----
;;;","06/Dec/17 16:46;ezhuravl;Folks, please review my fix. TC looks good: https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F3136%2Fhead;;;","07/Dec/17 09:30;agoncharuk;Looks good to me.;;;","07/Dec/17 12:43;ntikhonov;[~ezhuravl],
Thank you for your contribution! I've merged your changes to master.;;;","07/Dec/17 12:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3136
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backups are not updated when ReadFromBackup=true and ReadThrough happens.,IGNITE-7086,13122155,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,amashenkov,amashenkov,01/Dec/17 11:20,01/Aug/19 22:09,14/Jul/23 06:20,08/Dec/17 11:44,,,,,,2.4,,cache,,,,0,,,,"Ignite Replicated cache with CacheStore and ReadThrough=true and ReadFromBackup=true works in unexpected way from user perspective.

On backup node, get operation will always go to the primary node regardless of ReadFromBackup=true and ReadThrough=true when entry doesn't exists in local map.
So, Replicated cache works like a Partitioned with no backups.",,amashenkov,githubbot,kcheng.mvp,,,,,,,,,,"dspavlov commented on issue #3158: IGNITE-7086 - Backups are not updated when ReadFromBackup=true and Re…
URL: https://github.com/apache/ignite/pull/3158#issuecomment-517476050
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3158: IGNITE-7086 - Backups are not updated when ReadFromBackup=true and Re…
URL: https://github.com/apache/ignite/pull/3158
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,IGNITE-11130,,,,,,,,,,,,,,,,,,"01/Dec/17 12:35;amashenkov;ReplicatedReadFromBackupWithStoreTest.java;https://issues.apache.org/jira/secure/attachment/12900211/ReplicatedReadFromBackupWithStoreTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 06 13:07:10 UTC 2017,,,,,,,,,,"0|i3nffj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 13:07;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3158

    IGNITE-7086 - Backups are not updated when ReadFromBackup=true and Re…

    …adThrough happens.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7086

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3158.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3158
    
----
commit 161892eee237a197d93f29c4e332fe1b0a7c9397
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-12-06T13:06:11Z

    IGNITE-7086 - Backups are not updated when ReadFromBackup=true and ReadThrough happens.

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS property is set and IgniteCache#put is called a node hangs,IGNITE-7085,13122143,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,asfedotov,asfedotov,asfedotov,01/Dec/17 10:39,01/Aug/19 22:09,14/Jul/23 06:20,08/Dec/17 12:33,2.1,,,,,2.4,,binary,,,,0,,,,"When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS property is set and IgniteCache#put is called a node hangs.

The root cause is that when IGNITE_BINARY_SORT_OBJECT_FIELDS flag is enabled
BinaryMetadata#fields field is stored as TreeMap, but because BinaryUtils#WRAP_TREES is
set by default, that leads to BinaryMetadata#fields being wrapped into a BinaryTreeMap.
When an update for BinaryMetadata is initiated it ends up in a discovery thread from where
a metadata update for BinaryTreeMap is initiated. Since this update should be processed by the same discovery thread, that results in a deadlock.
",,agoncharuk,asfedotov,githubbot,,,,,,,,,,"dspavlov commented on issue #3143: IGNITE-7085 When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS …
URL: https://github.com/apache/ignite/pull/3143#issuecomment-517476023
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600","dspavlov commented on pull request #3143: IGNITE-7085 When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS …
URL: https://github.com/apache/ignite/pull/3143
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7138,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 08 12:35:17 UTC 2017,,,,,,,,,,"0|i3nfcv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 12:49;githubbot;GitHub user asfedotov opened a pull request:

    https://github.com/apache/ignite/pull/3121

    IGNITE-7085 When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS is set and IgniteCache#put is called node hangs

    CI

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7085

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3121.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3121
    
----
commit 9eabbe915b8c465033f047152fdcacd2ff41f400
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-09-04T10:21:06Z

    ignite-6254 : Fixed assertions for req.txState().

commit f34b5547e536d84133a1a242aaf6a369e61a4b59
Author: Alexander Belyak <alexandr.belyak@xored.com>
Date:   2017-09-06T14:07:33Z

    ignite-5061: move rebalance enabled methods to GridCacheSharedContext&GridCacheProcessor

commit b5897d4dca6cca69f841321004550f4e43ecb66a
Author: devozerov <ppozerov@gmail.com>
Date:   2017-09-06T14:34:11Z

    IGNITE-5339: JDBC thin driver: improved compliance. This closes #2112.

commit 9b5c9af084fa05dc1a5d5ab6db60eb7870647b15
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-09-06T15:18:23Z

    IGNITE-5572: SQL: ALTER TABLE ADD COLUMN support. This closes #2344.

commit 19e204250b05f76116c59981003bd1740a8efacd
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-06T15:42:22Z

    IGNITE-6130 JDBC thin driver: implemented type conversions. This closes #2510.

commit 25898aa06e161940a5b8267cc43e78e89dd1d8ef
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-09-07T07:17:27Z

    Merge remote-tracking branch 'remotes/origin/ignite-2.1.4-p1' into ignite-2.1.5

commit d6fb2bf5e5f6bd978ec376c03de0346eaaff1212
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-08-22T10:51:55Z

    IGNITE-6120 Lazy query execution from Web console.
    (cherry picked from commit fea96f7)

commit 8a07888d7a01cc78b1cb3433af362c2b4912fda7
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-09-04T09:05:34Z

    IGNITE-6120 Fixed lazy query since version for Web Console.
    (cherry picked from commit c03549e)

commit 8173f31d621ec5cbc9e959dd02c1542397afbe1b
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-07T10:23:37Z

    Better SQL tests placement.

commit 291faf9e8649a139805c755bd84b8ae008271cb1
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-09-07T11:25:14Z

    IGNITE-5855: SQL: fixed BigInteger data type handling, This closes #2512.

commit 9dba29f3bec638f1f906a515fd5c451eb2d37475
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-06T14:46:56Z

    IGNITE-6119: Compilation fix
    
    (cherry picked from commit ffaf108)

commit c08b397b965ce070fa758ffe75b8c05098e96922
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-07T13:50:06Z

    IGNITE-6297: JDBC: improved driver name. This closes #2613.

commit 9d0a707dd58b3b90eeb5bd2b5e48184326a10b3a
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-07T14:47:14Z

    IGNITE-6245: Implemented return of affected rows number.
    
    (cherry picked from commit e881993)

commit d606870177536ce552558e2cd827d4e83318572b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-07T16:22:35Z

    IGNITE-6282: CPP: Implemented lazy initialization of IgniteImpl members
    
    (cherry picked from commit cf9e804)

commit f8ce1188f12d95038408fe4f476e295551aa802c
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-09-08T09:11:44Z

    IGNITE-5884 Change default pageSize of page memory to 4KB

commit 27853baaecd090b737c7e3136ac61168ac364e67
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-08T10:40:31Z

    IGNITE-3558: Use default equals for GridJobWorker. This closes #1326.

commit 1921b59a0c4788a03c4be36f57a803c8008285cd
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-08T13:25:26Z

    Increased available memory for DynamicIndexAbstractSelfTest.

commit afb039a1c1fc440425f9563df90224b72070dd69
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T07:13:45Z

    IGNITE-6288: SQL: fixed NPE in IgniteH2Indexing.bindPartitionInfoParameter. This closes #2617.

commit 49d8368f09cac37ad44fc3e36e84f65dbb83920a
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T10:05:58Z

    IGNITE-6291: JDBC thin driver: fixed borken handshake compatibility. This closes #2630.

commit 223b646f674177892deab7d1d55fe973fb162821
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-17T14:06:55Z

    ignite-5763 Race in concurrent client cache start
    
    (cherry picked from commit 644c9f3)

commit 9ad1613ea7e3fd9e50a00b70b1dc641eeba5b586
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-06T13:54:25Z

    IGNITE-6253 .NET: Use DocFX for API documentation
    
    This closes #2588

commit eb99b5845ec5acf9b41ffe635a299b855d956406
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-12T07:52:04Z

    IGNITE-6326: JDBC thin driver: as of now error is thrown before query execution in case of type mismatch (executeQuery, executeUpdate). This closes #2631.

commit 5b70793c9d633ec2179a22f842aead5880caa55d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-12T08:29:15Z

    IGNITE-6253 .NET: Use DocFX for API documentation

commit 8470f32a546a5eacaa9c905735dda7a307713c8d
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-09-12T08:40:47Z

    IGNITE-5703: SQL: Added WRITE_SYNCHRONIZATION_MODE parameter to CREATE TABLE command. This closes #2591.

commit e17ad23b89a016fe30cbac29266d10c65b6ede96
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-12T08:41:56Z

    Merge remote-tracking branch 'upstream/ignite-2.1.5' into ignite-2.1.5

commit b06c89c7c9c2ddf65ad7c9b7877e7a1e1c55669a
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-12T11:44:07Z

    IGNITE-6151: Impemented getting and setting of the SQL_ATTR_CONNECTION_DEAD
    
    (cherry picked from commit 0bc1d84)

commit 9489e9a59ce6eb9aa63cf84dc40269029794ca3e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-12T13:10:51Z

    IGNITE-6151: Review fixes
    
    (cherry picked from commit 8c23805)

commit 726a35208c48f613ec43f17139a2ab48c11a0b94
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-09-12T13:53:50Z

    IGNITE-5648: SQL: Added support for NOT NULL constraint. This closes #2341.

commit 4194aafd2928905176a93892d808793451f399ee
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-12T14:33:23Z

    Added more memory to DynamicColumnsAbstractTest.

commit 4d305e19ab790a196337812723d3297e2d152d84
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-12T14:41:38Z

    IGNITE-6354 .NET: Fix DataStreamer with complex object graphs
    
    Cherry-picked from commit 67d716f00806c8d69f8339b090e0ddd877b225e3

----
;;;","05/Dec/17 11:51;githubbot;GitHub user asfedotov opened a pull request:

    https://github.com/apache/ignite/pull/3143

    IGNITE-7085 When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS …

    …is set and IgniteCache#put is called node hangs

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7085

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3143.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3143
    
----
commit 6da957cbd5546ff8340ded18342db325fa3a04ed
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-12-01T11:16:15Z

    IGNITE-7085 When PDS is enabled and IGNITE_BINARY_SORT_OBJECT_FIELDS is set and IgniteCache#put is called node hangs

----
;;;","08/Dec/17 12:33;agoncharuk;Thanks, Alexandr, merged your changes to master.;;;","08/Dec/17 12:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3121
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
YARN fails to create containers if Bash functions exported in environment,IGNITE-7080,13121923,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,ilyak,ilyak,30/Nov/17 14:07,06/Dec/17 16:33,14/Jul/23 06:20,06/Dec/17 16:32,2.3,,,,,,,yarn,,,,0,,,,"Ignite YARN collects all existing environment variables to pass them to container, including variables with incorrect names, such as Bash functions, which have extra characters at the end, and are ignored by most shells but not the JVM.

When you tell Bash to export functions, it puts BASH_FUNC_your_function_name%% variable into env. This is what is causing problems because Ignite YARN picks this variable and tells Hadoop to pass it to container, which leads to incorrectly written startup scrips.

Hadoop tries to sanitize env var values but not env var names. I think Ignite should not try to pass all env vars to containers (it may contain sensitive or master-specific vars!). We should only pass env vars that are relevant to containers, such as IGNITE_* vars.

See http://apache-ignite-users.70518.x6.nabble.com/Error-running-ignite-in-YARN-td18280.html",,githubbot,ilyak,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 14:45;ilyak;ignite-7080.patch;https://issues.apache.org/jira/secure/attachment/12900229/ignite-7080.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 06 16:33:45 UTC 2017,,,,,,,,,,"0|i3ne07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 14:46;ilyak;I have introduced a patch.;;;","06/Dec/17 16:22;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3161

    IGNITE-7080 Check env variable names to only pass IGNITE_* to nodes.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7080

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3161.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3161
    
----
commit b3ececfd8a226da577fe2390142ac4ebc25b6e07
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-12-06T16:20:35Z

    IGNITE-7080 Check env variable names to only pass IGNITE_* to nodes.

----
;;;","06/Dec/17 16:32;ntikhonov;[~ilyak],
Thank you for your contribution! I've merged the changes to master.;;;","06/Dec/17 16:33;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3161
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when WAL path and WAL archive path are the same,IGNITE-7074,13121727,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,dpavlov,danellis,danellis,29/Nov/17 20:31,30/Jan/18 07:39,14/Jul/23 06:20,30/Jan/18 07:39,2.2,2.3,,,,2.5,,persistence,,,,0,,,,"Log here: https://gist.github.com/danellis/660054b5a7f0e83ae4dcac8c1516d2ca

It appears that the WAL path and the WAL archive path cannot be set to the same directory. When they are, instead of the invalid configuration being caught, a number of NPEs are thrown as shown in the above log.

Additionally, this constraint does not appear to be documented.",,danellis,dpavlov,SomeFire,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7017,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 30 07:39:31 UTC 2018,,,,,,,,,,"0|i3nct3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/17 11:56;SomeFire;[~dpavlov], [~danellis], this ticket duplicates [IGNITE-6802|https://issues.apache.org/jira/browse/IGNITE-6802].;;;","30/Jan/18 07:39;dpavlov;Under https://issues.apache.org/jira/browse/IGNITE-7017 there was supported special WAL mode: 'no archiver'.
In case folders are equall then all files (both archive and work) are placed into this folder instead of placing files first in work and then copying file from work to archive.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IgniteCache.replace(k, v, nv) does not work in binary mode without classes",IGNITE-7072,13121663,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,ptupitsyn,ptupitsyn,29/Nov/17 14:35,12/Apr/19 09:00,14/Jul/23 06:20,27/Nov/18 16:30,,,,,,2.8,,cache,,,,0,,,,"{{IgniteCache.replace(K key, V oldVal, V newVal)}} method deserializes cache values in order to compare them, which causes exception when classes are not present on server:

{code}
class org.apache.ignite.IgniteCheckedException: Unknown pair [platformId=0, typeId=-1690383137]
	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7260)
	at org.apache.ignite.internal.processors.cache.GridCacheContext.isAll(GridCacheContext.java:1242)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.onEntriesLocked(GridDhtTxPrepareFuture.java:464)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare0(GridDhtTxPrepareFuture.java:1223)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.mapIfLocked(GridDhtTxPrepareFuture.java:666)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare(GridDhtTxPrepareFuture.java:1040)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.prepareAsyncLocal(GridNearTxLocal.java:3452)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareColocatedTx(IgniteTxHandler.java:257)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.proceedPrepare(GridNearOptimisticTxPrepareFuture.java:574)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.prepareSingle(GridNearOptimisticTxPrepareFuture.java:401)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.prepare0(GridNearOptimisticTxPrepareFuture.java:344)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFutureAdapter.prepareOnTopology(GridNearOptimisticTxPrepareFutureAdapter.java:137)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFutureAdapter.prepare(GridNearOptimisticTxPrepareFutureAdapter.java:74)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.prepareNearTxLocal(GridNearTxLocal.java:3161)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.commitNearTxLocalAsync(GridNearTxLocal.java:3221)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.optimisticPutFuture(GridNearTxLocal.java:2391)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.putAsync0(GridNearTxLocal.java:622)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.putAsync(GridNearTxLocal.java:385)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$34.op(GridCacheAdapter.java:2707)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$AsyncOp.op(GridCacheAdapter.java:5120)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.asyncOp(GridCacheAdapter.java:4260)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$AsyncOpRetryFuture.execute(GridCacheAdapter.java:4841)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.asyncOp(GridCacheAdapter.java:4173)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync0(GridCacheAdapter.java:2705)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2689)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.replaceAsync(GridCacheAdapter.java:2776)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.replaceAsync(IgniteCacheProxyImpl.java:1182)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.replaceAsync(GatewayProtectedCacheProxy.java:1082)
	at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInStreamOutLong(PlatformCache.java:677)
	at org.apache.ignite.internal.processors.platform.PlatformTargetProxyImpl.inStreamOutLong(PlatformTargetProxyImpl.java:67)
Caused by: java.lang.ClassNotFoundException: Unknown pair [platformId=0, typeId=-1690383137]
	at org.apache.ignite.internal.MarshallerContextImpl.getClassName(MarshallerContextImpl.java:378)
	at org.apache.ignite.internal.MarshallerContextImpl.getClass(MarshallerContextImpl.java:328)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:688)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize0(BinaryReaderExImpl.java:1755)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1714)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:797)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:143)
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.value(GridCacheUtils.java:1298)
	at org.apache.ignite.internal.processors.cache.CacheEntryPredicateContainsValue.apply(CacheEntryPredicateContainsValue.java:64)
	at org.apache.ignite.internal.processors.cache.CacheEntryPredicateContainsValue.apply(CacheEntryPredicateContainsValue.java:32)
	at org.apache.ignite.internal.processors.cache.GridCacheContext.isAll(GridCacheContext.java:1237)
{code}

Same problem with {{boolean remove(K key, V oldVal)}}.

To reproduce:
* Create key and value with {{BinaryObjectBuilder}} so that there are no Java classes for specified type name
* Call {{cache.withKeepBinary().replace(k, v, nv)}}

After the fix make sure to un-ignore tests (search entire repo for {{IGNITE-7072}} text, .NET has a couple).",,githubbot,ignitetcbot,isapego,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-11734,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 27 16:38:11 UTC 2018,,,,,,,,,,"0|i3ncev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/18 09:15;vozerov;Moved to 2.8 due to inactivity. Please feel free to move back if you will be able to complete the ticket by AI 2.7 code freeze date, September 30, 2018.;;;","24/Oct/18 13:57;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/5064

    IGNITE-7072: IgniteCache.replace(k, v, nv) fix for binary mode

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7072

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5064.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5064
    
----
commit 76445c35b792f7b922ea0a74a5259193dedd4f78
Author: Igor Sapego <isapego@...>
Date:   2018-10-24T13:56:12Z

    IGNITE-7072: IgniteCache.replace(k, v, nv) fix for binary mode

----
;;;","26/Oct/18 12:10;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2166798]]

{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2156199&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","26/Oct/18 14:33;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2166798]]

{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2167553&amp;buildTypeId=IgniteTests24Java8_BinaryObjectsSimpleMapperQueries];;;","29/Oct/18 14:42;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2156199&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","29/Oct/18 14:44;isapego;Ready for review. [~vozerov], can you take a look?;;;","12/Nov/18 07:17;vozerov;[~isapego], cannot accept the patch since there is no tests confirming the fix, Could you please add them?;;;","23/Nov/18 10:52;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|https://ci.ignite.apache.org/viewLog.html?buildId=2362099&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","23/Nov/18 10:54;isapego;Added tests and re-run TC. [~vozerov], can you take a look again?;;;","27/Nov/18 09:00;vozerov;[~isapego], looks good to me. No more objections.;;;","27/Nov/18 16:30;isapego;Merged to master.;;;","27/Nov/18 16:38;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/5064
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache stop requests batching,IGNITE-7071,13121643,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,dpavlov,dpavlov,29/Nov/17 13:16,30/Nov/17 13:20,14/Jul/23 06:20,30/Nov/17 13:19,,,,,,2.4,,persistence,,,,0,,,,"It is more efficient to create batch of cahe stop request to save number of exchanges required.

But it is now possible to batch such requests only using same settings.

It is suggested to implement stop request with batching, but with diferent stop operation parameters for each cache.

",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 30 13:20:00 UTC 2017,,,,,,,,,,"0|i3ncaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 13:17;dpavlov;https://github.com/apache/ignite/pull/3098
;;;","30/Nov/17 13:19;agoncharuk;Thanks, Dmitriy, merged your changes to master;;;","30/Nov/17 13:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3098
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Ignite PDS compatibilty framework: implement configurable classpath, JVM options, node startup timeout",IGNITE-7070,13121638,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dpavlov,dpavlov,dpavlov,29/Nov/17 12:54,30/Nov/17 13:26,14/Jul/23 06:20,30/Nov/17 13:24,,,,,,2.4,,persistence,,,,0,,,,"Ignite PDS compatibilty framework filters out classpath from current test classpath.
It involves only ignite-core and there is no warning about it in pom.xml
During extending scope of testing it is requied to extend CP with ignite-indexing, spring etc.

It is required to add ability to configure filtered out classpath element by test.
Additional fixes:
- dump classpath in case multi-jvm mode startup failed
- dump classpath in case multi-jvm mode startup hangs
- make node join timeout configurable (post startup may require considerable amount of time
- wait detached node not in assert (assert with side effect)

Fixes are prepared in
https://github.com/apache/ignite/pull/3106
",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7069,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 30 13:26:03 UTC 2017,,,,,,,,,,"0|i3nc9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 12:59;dpavlov;[~agoncharuk], could you please review my changes in PR 
https://github.com/apache/ignite/pull/3106

https://ci.ignite.apache.org/viewQueued.html?itemId=969136&tab=queuedBuildOverviewTab;;;","30/Nov/17 13:24;agoncharuk;Thanks, Dmitriy, merged your changes to master;;;","30/Nov/17 13:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3106
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Text query for a particular field not working,IGNITE-7055,13121481,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,vkulichenko,vkulichenko,28/Nov/17 23:06,12/Dec/17 00:37,14/Jul/23 06:20,12/Dec/17 00:37,2.3,,,,,2.4,,cache,,,,0,,,,"Lucene queries allow to specify a specific field name to search in [1], however this doesn't seem to work in latest versions of Ignite.

To reproduce, modify {{CacheQueryExample#textQuery}} to use Lucene field expression:
{code}
QueryCursor<Cache.Entry<Long, Person>> masters =
    cache.query(new TextQuery<Long, Person>(Person.class, ""resume:Master""));
{code}
This query returns empty result.

[1] http://lucene.apache.org/core/5_5_2/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#Fields",,dsetrakyan,githubbot,shroman,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 12 00:37:43 UTC 2017,,,,,,,,,,"0|i3nbaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Dec/17 03:04;shroman;In _GridLuceneIndex_ _IndexWriter_ is build with a _StandardAnalyzer_, which applies _LowerCaseFilter_ to query terms. It makes queries case-insensitive. However, field names are case-sensitive, and in Ignite indexes are upper-cased. Therefore _resume:Master_ won't be found, but _RESUME:Master_ will be found.
I propose to convert all queries to upper case. That will make Ignite indexes searcheable when a field is specified in a Lucene query, and won't effect the current search behavior.;;;","06/Dec/17 03:08;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/3151

    IGNITE-7055: Fix text query to work with a particular field.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-7055

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3151.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3151
    
----
commit 8cb22b7e7311d18b1b3d27d1dfcd43493a7e7101
Author: shroman <rshtykh@yahoo.com>
Date:   2017-12-06T03:06:16Z

    IGNITE-6534: Configure NotNull fields with annotations.

----
;;;","06/Dec/17 03:09;shroman;[~vkulichenko] Can you please review?;;;","06/Dec/17 21:57;vkulichenko;[~roman_s], just to clarify: how does Lucene typically behave in this case? Are field names case sensitive there or not?;;;","06/Dec/17 23:33;shroman;[~vkulichenko] Field names are case sensitive (https://wiki.apache.org/lucene-java/LuceneFAQ)
Therefore we have to upper-case them to match Ignite index names. Hence, the solution I provided.;;;","08/Dec/17 00:09;vkulichenko;[~roman_s], is there a way to make them case sensitive in Ignite as well, so that we're consistent with Lucene?;;;","08/Dec/17 00:28;shroman;[~vkulichenko] I believe it can be done, but do we really need to do it? ;) All SQL indexes are upper-cased. Shall we treat text indexes differently?;;;","09/Dec/17 16:38;dsetrakyan;Ticket status is ""PATCH AVAILABLE"", so I am setting the release to 2.4. If there are still unsolved issues, please move it to 2.5.;;;","12/Dec/17 00:12;vkulichenko;[~roman_s], agree, Ignite being consistent with Ignite makes sense to me :) Feel free to merge to master. Thanks!;;;","12/Dec/17 00:37;shroman;Merged.
[~vkulichenko] Thanks for reviewing!
;;;","12/Dec/17 00:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3151
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimistic transaction is not properly rolled back if timed out before sending prepare response.,IGNITE-7049,13121377,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ascherbakov,ascherbakov,28/Nov/17 17:21,02/Dec/17 17:38,14/Jul/23 06:20,02/Dec/17 17:38,2.3,,,,,2.4,,,,,,0,,,,"It seems what GridDhtTxRemote transaction is not properly timed out.

Reproducer:

{noformat}
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ignite.internal.processors.cache.transactions;

import org.apache.ignite.Ignite;
import org.apache.ignite.cluster.ClusterNode;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.internal.TestRecordingCommunicationSpi;
import org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareResponse;
import org.apache.ignite.internal.util.typedef.G;
import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;
import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;
import org.apache.ignite.transactions.Transaction;

import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL;
import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC;
import static org.apache.ignite.transactions.TransactionConcurrency.OPTIMISTIC;
import static org.apache.ignite.transactions.TransactionIsolation.SERIALIZABLE;

/**
 * Tests an ability to eagerly rollback timed out optimistic transactions.
 */
public class TxRollbackOnTimeoutOptimisticTest extends GridCommonAbstractTest {
    /** */
    private static final String CACHE_NAME = ""test"";

    /** IP finder. */
    private static final TcpDiscoveryVmIpFinder IP_FINDER = new TcpDiscoveryVmIpFinder(true);

    /** */
    private static final int GRID_CNT = 3;

    /** {@inheritDoc} */
    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {
        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);

        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(IP_FINDER);

        TestRecordingCommunicationSpi commSpi = new TestRecordingCommunicationSpi();

        cfg.setCommunicationSpi(commSpi);

        boolean client = ""client"".equals(igniteInstanceName);

        cfg.setClientMode(client);

        if (!client) {
            CacheConfiguration ccfg = new CacheConfiguration(CACHE_NAME);

            ccfg.setAtomicityMode(TRANSACTIONAL);
            ccfg.setBackups(2);
            ccfg.setWriteSynchronizationMode(FULL_SYNC);

            cfg.setCacheConfiguration(ccfg);
        }

        return cfg;
    }

    /**
     * @return Near cache flag.
     */
    protected boolean nearCacheEnabled() {
        return false;
    }

    /** {@inheritDoc} */
    @Override protected void beforeTest() throws Exception {
        super.beforeTest();

        startGridsMultiThreaded(GRID_CNT);
    }

    /** {@inheritDoc} */
    @Override protected void afterTest() throws Exception {
        super.afterTest();

        stopAllGrids();
    }

    /** */
    public void testOptimisticTimeout() throws Exception {
        final ClusterNode n0 = grid(0).affinity(CACHE_NAME).mapKeyToNode(0);

        final Ignite prim = G.ignite(n0.id());

        toggleBlocking(prim, true);

        final int val = 0;

        try {
            multithreaded(new Runnable() {
                @Override public void run() {
                    try (Transaction txOpt = prim.transactions().txStart(OPTIMISTIC, SERIALIZABLE, 300, 1)) {

                        prim.cache(CACHE_NAME).put(val, val);

                        txOpt.commit();
                    }
                }
            }, 1, ""tx"");

            fail();
        }
        catch (Exception e) {
            // No-op.
        }

        toggleBlocking(prim, false);

        startGrid(GRID_CNT);

        awaitPartitionMapExchange();
    }

    /**
     * @param nodeToBlock Node to block.
     * @param block Block.
     */
    private void toggleBlocking(Ignite nodeToBlock, boolean block) {
        for (Ignite ignite : G.allGrids()) {
            if (ignite == nodeToBlock)
                continue;

            final TestRecordingCommunicationSpi spi =
                (TestRecordingCommunicationSpi)ignite.configuration().getCommunicationSpi();

            if (block)
                spi.blockMessages(GridDhtTxPrepareResponse.class, nodeToBlock.name());
            else
                spi.stopBlock(true);
        }
    }
}
{noformat}",,Alexey Kuznetsov,ascherbakov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Dec 02 17:38:17 UTC 2017,,,,,,,,,,"0|i3nanb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Dec/17 10:56;ascherbakov;PR: https://github.com/apache/ignite/pull/3118

TC: https://ci.ignite.apache.org/viewLog.html?buildId=970779&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll#testNameId-3304574784337155345;;;","02/Dec/17 17:38;sboikov;Merged into master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache get fails on node not in BaselineTopology.,IGNITE-7048,13121364,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,sergey-chugunov,sergey-chugunov,28/Nov/17 16:42,07/Feb/18 17:46,14/Jul/23 06:20,07/Feb/18 17:46,,,,,,2.4,,persistence,,,,0,,,,"As an example take a look at IgnitePdsBinaryMetadataOnClusterRestartTest::testMixedMetadataIsRestoredOnRestart.

When reading data for check from node not in BaselineTopology it fails with the following assertion:
{noformat}java.lang.AssertionError: result = true, persistenceEnabled = true, partitionState = EVICTED

	at org.apache.ignite.internal.processors.cache.GridCacheContext.allowFastLocalRead(GridCacheContext.java:2044)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.mapKeyToNode(GridPartitionedSingleGetFuture.java:321)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.map(GridPartitionedSingleGetFuture.java:211)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridPartitionedSingleGetFuture.init(GridPartitionedSingleGetFuture.java:203)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.getAsync0(GridDhtAtomicCache.java:1392)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$1600(GridDhtAtomicCache.java:131)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$16.apply(GridDhtAtomicCache.java:470)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$16.apply(GridDhtAtomicCache.java:468)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:757)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.getAsync(GridDhtAtomicCache.java:468)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get0(GridCacheAdapter.java:4545)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:4526)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:1343)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.get(IgniteCacheProxyImpl.java:828)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.get(GatewayProtectedCacheProxy.java:662)
	at org.apache.ignite.internal.processors.cache.persistence.IgnitePdsBinaryMetadataOnClusterRestartTest.examineStaticMetadata(IgnitePdsBinaryMetadataOnClusterRestartTest.java:145)
	at org.apache.ignite.internal.processors.cache.persistence.IgnitePdsBinaryMetadataOnClusterRestartTest.testMixedMetadataIsRestoredOnRestart(IgnitePdsBinaryMetadataOnClusterRestartTest.java:334)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

The problem with the test is that in method *GridCacheProcessor::prepareCacheStart* flag *affNode* is calculated ignoring information about BaselineTopology distribution.",,agoncharuk,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 07 17:46:47 UTC 2018,,,,,,,,,,"0|i3nakf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Dec/17 07:44;agoncharuk;During further investigation, I found that switching this flag to false leads to major difficulties when we add the node to the baseline. I will try to see if we can keep the flag as true and still have correct reads.;;;","07/Feb/18 17:46;agoncharuk;Fixed in IGNITE-7505;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client queries should throw a correct exception,IGNITE-7046,13121327,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,kirill.shirokov,kirill.shirokov,28/Nov/17 14:10,17/Oct/18 12:55,14/Jul/23 06:20,17/Oct/18 12:54,2.3,,,,,,,sql,,,,0,,,,"The following test being added to org.apache.ignite.internal.processors.cache.distributed.replicated.IgniteCacheReplicatedQuerySelfTest:


{noformat}
    /**
     * Verifies that in the case of client query the index is not used and a correct exception is thrown.
     *
     * @throws Exception If failed.
     */
    public void testClientOnlyNodeIndexException() throws Exception {
        try {
            Ignite g = startGrid(""client"");

            IgniteCache<Integer, Integer> c = jcache(g, Integer.class, Integer.class);

            try {
                List<List<?>> cres = c.query(new SqlFieldsQuery(""select count(*) from Integer"")
                    .setLocal(true)).getAll();
            } 
            catch (IgniteException e) {
                throw e; // FIXME: put an exception-checking code here instead of throw
            }
        }
        finally {
            stopGrid(""client"");
        }
    }
{noformat}

...will result in NPE instead of an Ignite exception explaining the appropriate cause.",,kirill.shirokov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7045,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 17 12:54:33 UTC 2018,,,,,,,,,,"0|i3nac7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/18 12:54;vozerov;Already fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect method name suggested when page eviction starts,IGNITE-7043,13121283,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,ilyak,ilyak,ilyak,28/Nov/17 12:46,29/Nov/17 06:56,14/Jul/23 06:20,29/Nov/17 06:53,2.3,,,,,,,persistence,,,,0,,,,"Reported via gitter:

WARNING: Page evictions started, this will affect storage performance (consider increasing DataStorageConfiguration#setPageCacheSize).
since there is no such setting (field/property) setPageCacheSize (ver. 2.3.0#20171028-sha1:8add7fd5)

The actual method is DataRegionConfiguration.setMaxSize.",,agoncharuk,githubbot,ilyak,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 29 06:56:08 UTC 2017,,,,,,,,,,"0|i3na2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/17 12:49;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3103

    IGNITE-7043 Fix method name suggested when page eviction starts

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alamar/ignite patch-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3103.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3103
    
----
commit 40700bbba66528e8c42da66f28bcc07f634dbb20
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-11-28T12:49:23Z

    IGNITE-7043 Fix method name suggested when page eviction starts

----
;;;","28/Nov/17 16:43;ivan.glukos;Looks good, please merge.;;;","29/Nov/17 06:53;agoncharuk;Thanks, Ilya, merged to master.;;;","29/Nov/17 06:56;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3103
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test written in scala doesn't executed on TC ,IGNITE-7042,13121256,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,nizhikov,nizhikov,nizhikov,28/Nov/17 10:40,19/Feb/18 15:31,14/Jul/23 06:20,19/Feb/18 15:28,2.3,,,,,2.5,,spark,,,,0,,,,Tests from module `spark` and `spark_2.10` written in scala don't executes on TC.,,avinogradov,githubbot,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7727,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 19 15:31:01 UTC 2018,,,,,,,,,,"0|i3n9wf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 12:24;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/3530

    IGNITE-7042: Trying to configure scala-test plugin for a TeamCity

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-7042

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3530.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3530
    
----
commit 7d4cdd920f3c67142450850e9570d574d4ff2529
Author: Nikolay Izhikov <nizhikov@...>
Date:   2018-02-15T12:23:57Z

    IGNITE-7042: Trying to configure scala-test plugin for a TeamCity

----
;;;","17/Feb/18 16:23;nizhikov;What have been done:
 # scalatest maven plugin configured both for spark and spark_2.10 modules.
 # minor source changes to make all scalatest work correct for both modules.
 # failed scala test are muted on TC:
 ## IgniteRDDSpec.IgniteRDD should successfully query complex object fields (org.apache.ignite.spark)
 ## IgniteRDDSpec.IgniteRDD should successfully store data to ignite using saveValues with inline transformation (org.apache.ignite.spark)

spark:

1. WAS - 9 test passed, [https://ci.ignite.apache.org/viewLog.html?buildId=1098576&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteRdd]
2. IGNITE-7042 - 92 test passed - [https://ci.ignite.apache.org/viewLog.html?buildId=1099064&]

spark_2.10:

1. master - 9 test passed - [https://ci.ignite.apache.org/viewLog.html?buildId=1098512&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteRddSpark210]
2. IGNITE-7042 - 92 test passed - [https://ci.ignite.apache.org/viewLog.html?buildId=1099065&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteRddSpark210];;;","17/Feb/18 16:24;nizhikov;Hello, [~vkulichenko].

Can you please, take a look at my changes.
They are fully described in this comment:

https://issues.apache.org/jira/browse/IGNITE-7042?focusedCommentId=16368262&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16368262;;;","19/Feb/18 14:07;avinogradov;[~NIzhikov]
Changes looks good to me;;;","19/Feb/18 15:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3530
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Invalid user table height,IGNITE-7040,13121210,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,28/Nov/17 07:41,22/Jan/18 08:25,14/Jul/23 06:20,15/Jan/18 04:52,,,,,,2.4,,wizards,,,,0,,,,"# Filter user list (f.e. to 2 rows)
# Change period of showed activity metrics.

Height of table changed to maximum available but show only filtered rows.",,Dmitriyff,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 22 08:23:23 UTC 2018,,,,,,,,,,"0|i3n9m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/17 10:50;kuaw26;Please test in branch.;;;","12/Dec/17 02:48;pkonstantinov;Tested on branch;;;","15/Jan/18 04:52;kuaw26;Merged to master.;;;","22/Jan/18 08:23;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Wrong export of grouped users,IGNITE-7036,13121176,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,28/Nov/17 04:09,19/Jan/18 06:42,14/Jul/23 06:20,18/Jan/18 04:56,,,,,,2.4,,wizards,,,,0,,,,On export of grouped users when group is collapsed in table only header row is exported.,,Dmitriyff,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7225,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 06:42:30 UTC 2018,,,,,,,,,,"0|i3n9en:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 09:04;Dmitriyff;[~kuaw26] fixed, pls check it;;;","11/Jan/18 10:07;kuaw26;Looks good. Merged to master.
Please retest.;;;","12/Jan/18 02:41;pkonstantinov;Now users are exported but all the metrics are empty;;;","16/Jan/18 09:16;Dmitriyff;[~pkonstantinov] added fix, pls test it.;;;","16/Jan/18 11:00;pkonstantinov;tested;;;","18/Jan/18 04:56;kuaw26;Merged to master and 2.4.;;;","19/Jan/18 06:42;pkonstantinov;tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web console: Hide connected clusters label on ""become this user""",IGNITE-7034,13121174,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,28/Nov/17 04:00,11/Jan/18 08:51,14/Jul/23 06:20,10/Jan/18 10:21,,,,,,2.4,,wizards,,,,0,,,,,,alexdel,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 08:51:40 UTC 2018,,,,,,,,,,"0|i3n9e7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Dec/17 09:09;alexdel;Connected clusters label remove on ""Become user"" mode.;;;","09/Jan/18 04:43;pkonstantinov;Tested;;;","10/Jan/18 10:21;kuaw26;Merged to master.;;;","11/Jan/18 08:51;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Increase width of columns on admin page,IGNITE-7033,13121170,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,28/Nov/17 03:43,06/Mar/18 07:15,14/Jul/23 06:20,01/Mar/18 07:39,,,,,,2.5,,wizards,,,,0,,,,"*""Last activity"" and ""email"" columns are too narrow*",,alexdel,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 06 07:14:57 UTC 2018,,,,,,,,,,"0|i3n9db:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Feb/18 04:47;alexdel;Email column adjusted to fit 24 characters.;;;","01/Mar/18 07:39;pkonstantinov;Looks acceptable.;;;","02/Mar/18 02:33;kuaw26;Merged to master.;;;","06/Mar/18 07:14;pkonstantinov;re-tested on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Error on cancellation of comfirm dialog,IGNITE-7031,13121168,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,28/Nov/17 03:28,13/Mar/18 15:37,14/Jul/23 06:20,26/Jan/18 09:11,,,,,,2.5,,wizards,,,,0,,,,"On cancellation of confirm dialog error message showed in log of browser.
F.e. Clone dialog or remove all dialog.",,alexdel,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 06:37;pkonstantinov;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12905227/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 05 07:49:40 UTC 2018,,,,,,,,,,"0|i3n9cv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Dec/17 09:48;alexdel;Added handlers to prevent console errors. Please verify.;;;","09/Jan/18 06:37;pkonstantinov;I still see some error when canceling Clone operation
!screenshot-1.png!;;;","15/Jan/18 09:39;alexdel;Added handling expections on canceling clone functions. No console warning. Please test.;;;","16/Jan/18 07:44;alexdel;Fixed some bug. Please test.;;;","24/Jan/18 02:40;pkonstantinov;Tested. Can be merged.;;;","24/Jan/18 14:07;kuaw26;I do not like this fix.

Please discuss with [~Klaster_1] how we can fix Confirm service.

May be do not reject on cancelation? And return false for example?;;;","25/Jan/18 10:08;alexdel;[~pkonstantinov] Fixed. Please test 
1) Cancelation when you click ""Clone"" on advanced cluster settings.

2) Any other confirmation.modal.;;;","26/Jan/18 08:27;pkonstantinov;Tested in branch;;;","26/Jan/18 09:11;kuaw26;Now code looks good. Merged to master.;;;","05/Feb/18 07:49;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteOOM is not propogated to client  in case of implicit transaction,IGNITE-7021,13120877,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,mcherkasov,mcherkasov,mcherkasov,27/Nov/17 10:21,27/Dec/18 16:35,14/Jul/23 06:20,22/Dec/17 13:38,2.3,,,,,2.4,,cache,,,,0,,,,"it's related to https://issues.apache.org/jira/browse/IGNITE-7019
when transaction fails due IgniteOOM,  ignite tries to rollback transaction and it fails too, because can't add free pages to free list due a new IgniteOOM:

[2017-11-27 12:47:37,539][ERROR][sys-stripe-2-#4%cache.IgniteOutOfMemoryPropagationTest0%][GridNearTxLocal] Heuristic transaction failure.
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:835)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.localFinish(GridDhtTxLocalAdapter.java:774)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.localFinish(GridDhtTxLocal.java:555)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.finishTx(GridDhtTxLocal.java:441)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.commitDhtLocalAsync(GridDhtTxLocal.java:489)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.commitAsync(GridDhtTxLocal.java:498)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.onDone(GridDhtTxPrepareFuture.java:727)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.onDone(GridDhtTxPrepareFuture.java:104)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(GridFutureAdapter.java:451)
	at org.apache.ignite.internal.util.future.GridCompoundFuture.checkComplete(GridCompoundFuture.java:285)
	at org.apache.ignite.internal.util.future.GridCompoundFuture.markInitialized(GridCompoundFuture.java:276)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare0(GridDhtTxPrepareFuture.java:1246)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.mapIfLocked(GridDhtTxPrepareFuture.java:666)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare(GridDhtTxPrepareFuture.java:1040)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:398)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareNearTx(IgniteTxHandler.java:519)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxPrepareRequest0(IgniteTxHandler.java:150)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxPrepareRequest(IgniteTxHandler.java:135)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$000(IgniteTxHandler.java:97)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:177)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:175)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1060)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:579)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1555)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1183)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1090)
	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:499)
	at java.lang.Thread.run(Thread.java:748)
Caused by: class org.apache.ignite.IgniteException: Runtime failure on search row: org.apache.ignite.internal.processors.cache.tree.SearchRow@2b17e5c8
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invoke(BPlusTree.java:1622)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:1201)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:343)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.storeValue(GridCacheMapEntry.java:3191)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSet(GridCacheMapEntry.java:988)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:667)
	... 32 more
Caused by: class org.apache.ignite.internal.mem.IgniteOutOfMemoryException: Not enough memory allocated [policyName=default, size=10.5 MB]
Consider increasing memory policy size, enabling evictions, adding more nodes to the cluster, reducing number of backups or reducing model size.
	at org.apache.ignite.internal.pagemem.impl.PageMemoryNoStoreImpl.allocatePage(PageMemoryNoStoreImpl.java:294)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.FreeListImpl.allocateDataPage(FreeListImpl.java:467)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.FreeListImpl.insertDataRow(FreeListImpl.java:505)
	at org.apache.ignite.internal.processors.cache.persistence.RowStore.addRow(RowStore.java:90)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.createRow(IgniteCacheOffheapManagerImpl.java:1255)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$UpdateClosure.call(GridCacheMapEntry.java:3887)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$UpdateClosure.call(GridCacheMapEntry.java:3845)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Invoke.invokeClosure(BPlusTree.java:2978)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Invoke.access$6200(BPlusTree.java:2872)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invokeDown(BPlusTree.java:1703)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invoke(BPlusTree.java:1592)
	... 37 more
",,agura,githubbot,mcherkasov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 27 16:35:33 UTC 2018,,,,,,,,,,"0|i3n7k7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Dec/17 16:12;mcherkasov;The issue can be reproduced for all operation that is done in one phase way.;;;","14/Dec/17 12:24;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/3227

    IGNITE-7021

    IgniteOOM is not propogated to client in case of implicit transaction

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7021

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3227.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3227
    
----
commit 5deacbd9ac8d14dd0b1d773e2139d49b1397652e
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-12-04T16:15:45Z

    IGNITE-7021
    IgniteOOM is not propogated to client in case of implicit transaction

----
;;;","22/Dec/17 13:38;agura;LGTM. Merged to master branch.;;;","27/Dec/18 16:35;githubbot;Github user mcherkasov closed the pull request at:

    https://github.com/apache/ignite/pull/3227
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cluster can not survive after IgniteOOM,IGNITE-7019,13120863,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,cyberdemon,mcherkasov,mcherkasov,27/Nov/17 09:35,12/Feb/18 09:54,14/Jul/23 06:20,12/Feb/18 09:54,2.3,,,,,2.5,,cache,,,,0,iep-7,,,"even if we have full sync mode and transactional cache we can't add new nodes if there  was IgniteOOM, after adding new nodes and re-balancing, old nodes can't evict partitions:

{code}
[2017-11-17 20:02:24,588][ERROR][sys-#65%DR1%][GridDhtPreloader] Partition eviction failed, this can cause grid hang.
class org.apache.ignite.internal.mem.IgniteOutOfMemoryException: Not enough memory allocated [policyName=100MB_Region_Eviction, size=104.9 MB]
Consider increasing memory policy size, enabling evictions, adding more nodes to the cluster, reducing number of backups or reducing model size.
    at org.apache.ignite.internal.pagemem.impl.PageMemoryNoStoreImpl.allocatePage(PageMemoryNoStoreImpl.java:294)
    at org.apache.ignite.internal.processors.cache.persistence.DataStructure.allocatePageNoReuse(DataStructure.java:117)
    at org.apache.ignite.internal.processors.cache.persistence.DataStructure.allocatePage(DataStructure.java:105)
    at org.apache.ignite.internal.processors.cache.persistence.freelist.PagesList.addStripe(PagesList.java:413)
    at org.apache.ignite.internal.processors.cache.persistence.freelist.PagesList.getPageForPut(PagesList.java:528)
    at org.apache.ignite.internal.processors.cache.persistence.freelist.PagesList.put(PagesList.java:617)
    at org.apache.ignite.internal.processors.cache.persistence.freelist.FreeListImpl.addForRecycle(FreeListImpl.java:582)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Remove.reuseFreePages(BPlusTree.java:3847)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Remove.releaseAll(BPlusTree.java:4106)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Remove.access$6900(BPlusTree.java:3166)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.doRemove(BPlusTree.java:1782)
    at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.remove(BPlusTree.java:1567)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.remove(IgniteCacheOffheapManagerImpl.java:1387)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.remove(IgniteCacheOffheapManagerImpl.java:374)
    at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.removeValue(GridCacheMapEntry.java:3233)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheEntry.clearInternal(GridDhtCacheEntry.java:588)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.clearAll(GridDhtLocalPartition.java:892)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.tryEvict(GridDhtLocalPartition.java:750)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader$3.call(GridDhtPreloader.java:593)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader$3.call(GridDhtPreloader.java:580)
    at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6639)
    at org.apache.ignite.internal.processors.closure.GridClosureProcessor$2.body(GridClosureProcessor.java:967)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:748)
{code}

Discussion on the dev list: http://apache-ignite-developers.2346864.n4.nabble.com/How-properly-handle-IgniteOOM-td25288.html",,avinogradov,cyberdemon,dmagda,gvvinblade,mcherkasov,slukyanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4958,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 12 09:54:43 UTC 2018,,,,,,,,,,"0|i3n7h3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/17 23:01;dmagda;This problem is related to the discussion around Ignite internal problems and their possible resolution:
http://apache-ignite-developers.2346864.n4.nabble.com/Internal-problems-requiring-graceful-node-shutdown-reboot-etc-td24856.html

Referring to that discussion, I would define a special IgniteFailureAction in response to IgniteOOM (IgniteFailureCause in terms of the new API). The action can purge, wipe out the page memory or do another extra steps.;;;","22/Jan/18 09:58;cyberdemon;We discussed possible solutions with [~mcherkasov] and [~avinogradov], and chose the following: first, when IOOME occured on page moving from bucket with lower index to higher one, we leave page on old bucket; second, we add periodical task for looking up such pages (placed on wrong buckets) and correcting its placement if possible (no IOOME on page moving).

Also we need reproducer for this bug, I'll make it at first.;;;","26/Jan/18 11:38;cyberdemon;Final solution which was coded is passing ReuseBag instance as parameter through PagesList's getPageForPut and addStripe methods to allocatePage method. That allows use ReuseBag's pages before trying to allocate new pages.;;;","29/Jan/18 11:23;cyberdemon;[~avinogradov],
Review my patch, please.;;;","07/Feb/18 17:11;gvvinblade;[~cyberdemon], I've left a couple of comments on github;;;","09/Feb/18 13:23;gvvinblade;[~cyberdemon], looks OK;;;","09/Feb/18 13:41;avinogradov;[~cyberdemon], 

Please ping me once TC will be fully checked and I'll merge the changes. 

 

[~gvvinblade],

Thanks a lot for final review!;;;","12/Feb/18 09:54;avinogradov;Merged to the master branch.

Thanks for contribution.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Ignite does not start on macOS,IGNITE-7013,13120620,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,24/Nov/17 12:01,28/Nov/17 15:34,14/Jul/23 06:20,28/Nov/17 15:33,2.4,,,,,2.4,,platforms,,,,0,.NET,xplat,,"Looks like dlopen code is incorrect for macOS:

{code}
Unhandled Exception: System.DllNotFoundException: Unable to load DLL 'libcoreclr.so': The specified module or one of its dependencies could not be found.
 (Exception from HRESULT: 0x8007007E)
   at Apache.Ignite.Core.Impl.Unmanaged.DllLoader.NativeMethodsCore.dlopen(String filename, Int32 flags)
   at Apache.Ignite.Core.Impl.Unmanaged.DllLoader.Load(String dllPath)
   at Apache.Ignite.Core.Impl.IgniteUtils.LoadDll(String filePath, String simpleName)
   at Apache.Ignite.Core.Impl.IgniteUtils.LoadJvmDll(String configJvmDllPath, ILogger log)
   at Apache.Ignite.Core.Impl.IgniteUtils.LoadDlls(String configJvmDllPath, ILogger log)
   at Apache.Ignite.Core.Ignition.Start(IgniteConfiguration cfg)
   at ignite_nuget_test.Program.Main(String[] args) in /Users/vveider/Development/VCS/Git/ignite-dotnetcore-demo/Program.cs:line 17
{code}

Steps to reproduce:
{code}
git clone https://github.com/ptupitsyn/ignite-dotnetcore-demo.git
cd ignite-dotnetcore-demo
dotnet run
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 28 15:34:45 UTC 2017,,,,,,,,,,"0|i3n5z3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/17 12:13;ptupitsyn;MacOS dlopen should look like this:

{code}
            [DllImport(""libSystem.dylib"")]
            internal static extern IntPtr dlopen(string filename, int flags);
{code};;;","24/Nov/17 13:08;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/3091

    IGNITE-7013 .NET: Fix startup on macOS (dlopen call)

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-7013

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3091.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3091
    
----
commit 071010551e3cde09e206c168408f13a3c15e615e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-11-24T13:06:10Z

    IGNITE-7013 .NET: Ignite does not start on macOS

----
;;;","24/Nov/17 15:01;ptupitsyn;* {{jvm.dll}} is {{libjvm.dylib}} on macOs.
* lookup path is something like {{/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/libjvm.dylib}};;;","27/Nov/17 12:29;ptupitsyn;{{LoadLibrary}} + {{DllImport}} combo does not work on macOs (where {{LoadLibrary}} is called with a full path, and {{DllImport}} uses simple name).

We have to switch to {{dlopen}} + {{dlsym}} and manual delegate creation.;;;","27/Nov/17 15:15;ptupitsyn;Very ""fun"" bug: https://bugs.openjdk.java.net/browse/JDK-7131356
Users may have to update Java to certain version or install Java 6.;;;","27/Nov/17 15:31;ptupitsyn;Finally was able to start Ignite.NET on macOS Sierra:
* libjvm.dylib support added
* {{DllImport}} refactored to {{dlopen}} + {{dlsym}} calls

Will add separate JAVA_HOME resolving code by looking into {{/Library/Java/JavaVirtualMachines/}} folder.;;;","28/Nov/17 06:32;ptupitsyn;Thin client tests failed on macOs: setting socket buffer size to 0 throws an error there. Fixed that by skipping socket setting update when defaults are set.;;;","28/Nov/17 15:32;ptupitsyn;TC is fine, merged to master: {{0b849abce4514ffe949915c85b15ad6aae23ee33}}.;;;","28/Nov/17 15:34;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3091
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: investigate E2E tests,IGNITE-7012,13120597,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,alexdel,Klaster_1,Klaster_1,24/Nov/17 09:37,14/Mar/18 02:46,14/Jul/23 06:20,29/Nov/17 08:42,,,,,,,,wizards,,,,0,,,,"Investigate what tools we can use to implement E2E tests and try some of them out. I think that testcafe will be a good start:
https://github.com/DevExpress/testcafe
https://github.com/DevExpress/testcafe-angular-selectors
http://devexpress.github.io/testcafe/documentation/test-api/authentication/user-roles.html",,alexdel,Klaster_1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 14 02:46:28 UTC 2018,,,,,,,,,,"0|i3n5tz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Nov/17 08:40;alexdel;E2E testing investigate with testcafe toolkit. Minimal viable test lives in ignite-7012 branch. -
 frontend/test/e2e/cafe.test.js;;;","14/Mar/18 02:46;alexdel;Investigation done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoverySharedFsIpFinder fails with NPE if address can't be resolved.,IGNITE-7008,13120529,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,23/Nov/17 17:13,08/Dec/17 13:24,14/Jul/23 06:20,08/Dec/17 13:24,,,,,,2.4,,general,,,,0,,,,"Seems, we should add a check to registerAddresses() method if address has been resolved and use hostname otherwise.

2017-11-23 14:25:19,487 ERROR [tcp-disco-msg-worker-#2%null%] [Slf4jLogger.java:119] Runtime error caught during grid runnable execution: IgniteSpiThread [name=tcp-disco-msg-worker-#2%null%]
{noformat}
java.lang.NullPointerException: null

at org.apache.ignite.spi.discovery.tcp.ipfinder.sharedfs.TcpDiscoverySharedFsIpFinder.name(TcpDiscoverySharedFsIpFinder.java:277)

at org.apache.ignite.spi.discovery.tcp.ipfinder.sharedfs.TcpDiscoverySharedFsIpFinder.distinctNames(TcpDiscoverySharedFsIpFinder.java:260)

at org.apache.ignite.spi.discovery.tcp.ipfinder.sharedfs.TcpDiscoverySharedFsIpFinder.registerAddresses(TcpDiscoverySharedFsIpFinder.java:220)

at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processNodeAddFinishedMessage(ServerImpl.java:4442)

at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processNodeAddedMessage(ServerImpl.java:4052)

at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2623)

at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2437)

at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:6568)

at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2523)

at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{noformat}",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 07 16:20:09 UTC 2017,,,,,,,,,,"0|i3n5f3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/17 17:33;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/3087

    IGNITE-7008: Fixed NPE in TcpDiscoverySharedFsIpFinder.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-7008

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3087.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3087
    
----
commit 989546ecc1c47c10a1f6367322e823f00076dae0
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-11-23T17:31:25Z

    IGNITE-7008: Fixed NPE in TcpDiscoverySharedFsIpFinder.

----
;;;","07/Dec/17 16:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3087
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor CMD: Actualize showed grid/cache configuration.,IGNITE-6995,13120378,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,23/Nov/17 02:49,12/Jan/18 03:08,14/Jul/23 06:20,13/Dec/17 16:33,,,,,,2.4,,wizards,,,,0,,,,Actualise in accordance to IGNITE-6649 changes.,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 12 03:08:26 UTC 2018,,,,,,,,,,"0|i3n4hj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Nov/17 10:27;vsisko;Implemented configuration of eviction policy by factory.;;;","11/Dec/17 13:49;kuaw26;Please, test in branch;;;","13/Dec/17 10:02;pkonstantinov;Tested;;;","13/Dec/17 16:33;kuaw26;Looks good. Merged to master.;;;","12/Jan/18 03:08;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite MR problem with accessing hdfs with enabled Kerberos,IGNITE-6992,13120229,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ezhuravl,ezhuravl,ezhuravl,22/Nov/17 13:22,29/Nov/17 10:52,14/Jul/23 06:20,29/Nov/17 10:51,2.0,2.1,2.3,,,2.4,,hadoop,,,,0,,,,"
{code:java}
class org.apache.ignite.IgniteCheckedException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2JobResourceManager.prepareJobEnvironment(HadoopV2JobResourceManager.java:169)
	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2Job.initialize(HadoopV2Job.java:328)
	at org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.job(HadoopJobTracker.java:1141)
	at org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.submit(HadoopJobTracker.java:318)
	at org.apache.ignite.internal.processors.hadoop.HadoopProcessor.submit(HadoopProcessor.java:173)
	at org.apache.ignite.internal.processors.hadoop.HadoopImpl.submit(HadoopImpl.java:69)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolSubmitJobTask.run(HadoopProtocolSubmitJobTask.java:50)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolSubmitJobTask.run(HadoopProtocolSubmitJobTask.java:33)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolTaskAdapter$Job.execute(HadoopProtocolTaskAdapter.java:101)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6629)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1181)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1908)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1562)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1190)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:622)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.hadoop.security.AccessControlException: SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.hadoop.ipc.RemoteException.instantiateException(RemoteException.java:106)
	at org.apache.hadoop.ipc.RemoteException.unwrapRemoteException(RemoteException.java:73)
	at org.apache.hadoop.hdfs.DFSClient.getFileInfo(DFSClient.java:2110)
	at org.apache.hadoop.hdfs.DistributedFileSystem$22.doCall(DistributedFileSystem.java:1305)
	at org.apache.hadoop.hdfs.DistributedFileSystem$22.doCall(DistributedFileSystem.java:1301)
	at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)
	at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:1301)
	at org.apache.hadoop.fs.FileSystem.exists(FileSystem.java:1426)
	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2JobResourceManager.prepareJobEnvironment(HadoopV2JobResourceManager.java:136)
	... 22 more
Caused by: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.security.AccessControlException): SIMPLE authentication is not enabled.  Available:[TOKEN, KERBEROS]
	at org.apache.hadoop.ipc.Client.call(Client.java:1475)
	at org.apache.hadoop.ipc.Client.call(Client.java:1412)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:229)
	at com.sun.proxy.$Proxy36.getFileInfo(Unknown Source)
	at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getFileInfo(ClientNamenodeProtocolTranslatorPB.java:771)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:191)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:102)
	at com.sun.proxy.$Proxy37.getFileInfo(Unknown Source)
	at org.apache.hadoop.hdfs.DFSClient.getFileInfo(DFSClient.java:2108)
	... 28 more
{code}
",,ezhuravl,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 29 10:52:59 UTC 2017,,,,,,,,,,"0|i3n3kf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 16:36;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/3097

    IGNITE-6992 FIX Ignite MR problem with accessing hdfs with enabled Ke…

    …rberos

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6992

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3097.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3097
    
----
commit 683233bfbb72c35f0ecdcc5703d7d8654ffcc72f
Author: ezhuravl <ezhuravlev@gridgain.com>
Date:   2017-11-27T16:34:32Z

    IGNITE-6992 FIX Ignite MR problem with accessing hdfs with enabled Kerberos

----
;;;","29/Nov/17 08:26;ezhuravl;TC link: https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F3097%2Fhead;;;","29/Nov/17 10:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3097
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Thin client: OP_CACHE_DESTROY should take cacheId instead of name,IGNITE-6988,13120208,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,22/Nov/17 11:59,24/Nov/17 10:43,14/Jul/23 06:20,24/Nov/17 10:41,,,,,,2.4,,platforms,thin client,,,0,.NET,,,"All cache operations take cacheId, not cache name. Fix this for OP_CACHE_DESTROY.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 24 10:41:41 UTC 2017,,,,,,,,,,"0|i3n3fr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/17 10:41;ptupitsyn;Fixed in master: {{555fcebb2261e0ce3cfb1713a4322fad69505d2c}}.

Protocol doc updated: https://cwiki.apache.org/confluence/display/IGNITE/IEP-9+Thin+Client+Protocol;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor CMD: Config command should show client connector pool size.,IGNITE-6987,13120199,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,22/Nov/17 11:17,11/Jan/18 04:42,14/Jul/23 06:20,06/Dec/17 15:35,,,,,,2.4,,wizards,,,,0,,,,Now show size for deprecated SqlConnectorConfiguration.,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 04:32:59 UTC 2018,,,,,,,,,,"0|i3n3dr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 11:22;vsisko;Fixed showed property to actual.;;;","28/Nov/17 09:04;kuaw26;Looks good. Please test in branch ignite-6987.;;;","06/Dec/17 08:10;pkonstantinov;Tested on branch;;;","06/Dec/17 15:35;kuaw26;Merged to master.;;;","11/Jan/18 04:32;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong value of RebalancingStartTime cache metric,IGNITE-6985,13120172,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,alex_pl,alex_pl,alex_pl,22/Nov/17 09:20,17/Apr/18 05:49,14/Jul/23 06:20,23/Nov/17 13:55,2.3,,,,,2.4,,cache,,,,0,iep-6,jmx,,"If ""rebalance delay"" property is set in the cache configuration and more then one nodes are joined cluster in a period of rebalance delay then cache metric RebalancingStartTime has wrong value (for example, metric value is 4534024989722 when currentTimeMillis is 1511341657692 and rebalance delay is 5000).",,alex_pl,avinogradov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 17 05:49:42 UTC 2018,,,,,,,,,,"0|i3n37z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 09:27;githubbot;GitHub user alex-plekhanov opened a pull request:

    https://github.com/apache/ignite/pull/3080

    IGNITE-6985 Wrong value of RebalancingStartTime cache metric

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alex-plekhanov/ignite ignite-6985

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3080.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3080
    
----
commit 64f07ce774e88d7bb83c5fddfdcaf59ef28a7f79
Author: Aleksey Plekhanov <plehanov.alex@gmail.com>
Date:   2017-11-22T09:24:50Z

    IGNITE-6985 Wrong value of RebalancingStartTime cache metric

----
;;;","23/Nov/17 08:12;alex_pl;[~avinogradov] please review the patch in upsource;;;","23/Nov/17 13:55;avinogradov;Merged to master branch. Thanks for contribution.;;;","17/Apr/18 05:49;githubbot;Github user alex-plekhanov closed the pull request at:

    https://github.com/apache/ignite/pull/3080
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong initial BitSet size in GridPartitionStateMap,IGNITE-6977,13119963,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,sbberkov,sbberkov,sbberkov,21/Nov/17 14:36,26/Jun/18 17:50,14/Jul/23 06:20,21/May/18 13:28,2.1,,,,,2.7,,general,,,,0,,,,"In constructor of org.apache.ignite.internal.utilGridPartitionStateMap(int parts) {
        states = new BitSet(parts);
    }
we initialize BitSet with part bit, but use private static final int BITS for each partition state. As result long[] in BitSet get difficult predictable size (depends of access order it can be exact as needed or almost twice bigger with at least one additional array copying)",,agoncharuk,dpavlov,sbberkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 21 13:28:58 UTC 2018,,,,,,,,,,"0|i3n1xr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 15:28;sbberkov;Minor memory consumption even in huge topologies/cacheGroup numbers.;;;","27/Nov/17 09:15;sbberkov;https://github.com/apache/ignite/pull/3082;;;","18/May/18 15:27;agoncharuk;Looks good to me.;;;","18/May/18 15:27;agoncharuk;Looks good to me.;;;","21/May/18 13:28;dpavlov;[~sbberkov] thank you for contribution, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: consoleWrite error during application shutdown,IGNITE-6974,13119916,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ptupitsyn,alexey.tank2,alexey.tank2,21/Nov/17 12:07,19/Jan/18 08:25,14/Jul/23 06:20,19/Jan/18 08:24,2.3,,,,,2.4,,platforms,,,,0,.NET,,,"from Gitter:

Hey all (again xD)! Using Apache Ignite .NET 2.3 I (sometimes) get an error when shutting down my application. The error is only observable on server nodes and not on every shutdown. Seems like a kind of race condition.
The application runs as windows service. The windows application event log shows the following error (see above) and a I get a hs_err_pid[PID].log like that (snip):
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  org.apache.ignite.internal.processors.platform.callback.PlatformCallbackUtils.consoleWrite(Ljava/lang/String;Z)V+0
j  org.apache.ignite.internal.processors.platform.callback.PlatformCallbackGateway.consoleWrite(Ljava/lang/String;Z)V+2
j  org.apache.ignite.internal.processors.platform.dotnet.PlatformDotNetConsoleStream.write([BII)V+18
j  java.io.PrintStream.write([BII)V+16
j  sun.nio.cs.StreamEncoder.writeBytes()V+120
j  sun.nio.cs.StreamEncoder.implFlushBuffer()V+11
j  sun.nio.cs.StreamEncoder.flushBuffer()V+15
j  java.io.OutputStreamWriter.flushBuffer()V+4
j  java.io.PrintStream.write(Ljava/lang/String;)V+27
j  java.io.PrintStream.print(Ljava/lang/String;)V+9
j  org.apache.ignite.internal.util.IgniteUtils.quiet(Z[Ljava/lang/Object;)V+126
j  org.apache.ignite.internal.IgniteKernal.stop0(Z)V+943
j  org.apache.ignite.internal.IgniteKernal.stop(Z)V+6
j  org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.stop0(Z)V+162
j  org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.stop(Z)V+26
j  org.apache.ignite.internal.IgnitionEx.stop(Ljava/lang/String;ZZ)Z+72
j  org.apache.ignite.Ignition.stop(Ljava/lang/String;Z)Z+3
j  org.apache.ignite.internal.processors.platform.PlatformIgnition.stop(Ljava/lang/String;Z)Z+2
v  ~StubRoutines::call_stub
For me it seems that the Java side wants to write something to the (.NET) console using a callback and the underlying memory is already freed - therefore we get a AccessViolation",,alexey.tank2,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6911,IGNITE-5343,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 08:24:43 UTC 2018,,,,,,,,,,"0|i3n1nb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Dec/17 08:30;ptupitsyn;We should call `UnregisterNatives` on domain unload to fix this.
IGNITE-6911 is a workaround.;;;","19/Jan/18 08:24;ptupitsyn;This is fixed by IGNITE-5343: unmanaged callbacks are registered always from default AppDomain, which is never unloaded.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node restarts with enabled persistence lead to affinity assignment mismatch on different nodes.,IGNITE-6973,13119900,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ascherbakov,ascherbakov,21/Nov/17 10:43,22/Nov/17 10:19,14/Jul/23 06:20,22/Nov/17 10:19,2.3,,,,,2.4,,,,,,0,,,,"Most probably this is caused by deploymentId reassign after grid restart.

All nodes must have same deploymentId in such case.

Reproducer:

{noformat}
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ignite.internal.processors.cache.persistence;

import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Callable;
import java.util.concurrent.atomic.AtomicInteger;
import org.apache.ignite.Ignite;
import org.apache.ignite.IgniteCache;
import org.apache.ignite.cache.CacheAtomicityMode;
import org.apache.ignite.cache.CacheMode;
import org.apache.ignite.cache.affinity.rendezvous.RendezvousAffinityFunction;
import org.apache.ignite.cluster.ClusterNode;
import org.apache.ignite.configuration.CacheConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.configuration.MemoryConfiguration;
import org.apache.ignite.configuration.MemoryPolicyConfiguration;
import org.apache.ignite.configuration.PersistentStoreConfiguration;
import org.apache.ignite.configuration.WALMode;
import org.apache.ignite.internal.IgniteEx;
import org.apache.ignite.internal.IgniteInternalFuture;
import org.apache.ignite.internal.IgniteKernal;
import org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion;
import org.apache.ignite.internal.processors.cache.CacheGroupDescriptor;
import org.apache.ignite.internal.processors.cache.IgniteInternalCache;
import org.apache.ignite.internal.util.typedef.G;
import org.apache.ignite.internal.util.typedef.internal.U;
import org.apache.ignite.lang.IgniteUuid;
import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;
import org.apache.ignite.spi.discovery.tcp.ipfinder.TcpDiscoveryIpFinder;
import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder;
import org.apache.ignite.testframework.GridTestUtils;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;

import static org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL;
import static org.apache.ignite.cache.CacheMode.PARTITIONED;
import static org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC;
import static org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.IGNITE_PDS_CHECKPOINT_TEST_SKIP_SYNC;

/**
 * The test validates assignment after nodes restart with enabled persistence.
 */
public class IgnitePdsCacheAssignmentNodeRestartsTest extends GridCommonAbstractTest {
    /** */
    private static TcpDiscoveryIpFinder ipFinder = new TcpDiscoveryVmIpFinder(true);

    /** {@inheritDoc} */
    @Override protected IgniteConfiguration getConfiguration(String igniteInstanceName) throws Exception {
        IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);

            cfg.setMemoryConfiguration(new MemoryConfiguration().setDefaultMemoryPolicyName(""d"").
                setPageSize(1024).setMemoryPolicies(new MemoryPolicyConfiguration().setName(""d"").
                setInitialSize(50 * 1024 * 1024L).setMaxSize(50 * 1024 * 1024)));

            cfg.setPersistentStoreConfiguration(new PersistentStoreConfiguration().setWalMode(WALMode.LOG_ONLY));

        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder);

        return cfg;
    }

    /** {@inheritDoc} */
    @Override protected void beforeTest() throws Exception {
        super.beforeTest();

        deleteRecursively(U.resolveWorkDirectory(U.defaultWorkDirectory(), ""db"", false));
    }

    /** {@inheritDoc} */
    @Override protected void afterTest() throws Exception {
        stopAllGrids();

        deleteRecursively(U.resolveWorkDirectory(U.defaultWorkDirectory(), ""db"", false));

        super.afterTest();
    }

    /**
     * @param name Name.
     * @param atomicityMode Atomicity mode.
     * @param cacheMode Cache mode.
     * @param backups Backups.
     * @param grp Group.
     */
    private CacheConfiguration cacheConfiguration(String name,
        CacheAtomicityMode atomicityMode,
        CacheMode cacheMode,
        int backups,
        String grp)
    {
        CacheConfiguration ccfg = new CacheConfiguration(name);

        ccfg.setAtomicityMode(atomicityMode);
        ccfg.setWriteSynchronizationMode(FULL_SYNC);
        ccfg.setCacheMode(cacheMode);
        ccfg.setGroupName(grp);

        ccfg.setAffinity(new RendezvousAffinityFunction(false, 128));

        if (cacheMode == PARTITIONED)
            ccfg.setBackups(backups);

        return ccfg;
    }

    /**
     *
     */
    public void testAssignmentAfterRestarts() throws Exception {
        try {
            System.setProperty(IGNITE_PDS_CHECKPOINT_TEST_SKIP_SYNC, ""true"");

            final int gridsCnt = 5;

            final int groupsCnt = 2;

            final IgniteEx node = (IgniteEx)startGridsMultiThreaded(gridsCnt);

            final List<CacheConfiguration> cfgs = Arrays.asList(
                cacheConfiguration(""g1c1"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp1""),
                cacheConfiguration(""g1c2"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp1""),
                cacheConfiguration(""g2c1"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp2""),
                cacheConfiguration(""g2c2"", TRANSACTIONAL, PARTITIONED, gridsCnt, ""testGrp2""));

            final Collection<IgniteCache> caches = node.getOrCreateCaches(cfgs);

            validateDepIds(groupsCnt);

            stopAllGrids();

            IgniteEx node2 = (IgniteEx)startGridsMultiThreaded(gridsCnt);

            validateDepIds(groupsCnt); // Deployment ids must be the same on all nodes.

            final int restartIdxFrom = 2;

            final AtomicInteger idx = new AtomicInteger(restartIdxFrom);

            IgniteInternalFuture fut = GridTestUtils.runMultiThreadedAsync(new Callable<Void>() {
                @Override public Void call() throws Exception {
                    int nodeIdx = idx.getAndIncrement();

                    stopGrid(nodeIdx);

                    return null;
                }
            }, gridsCnt - restartIdxFrom, ""stop-node"");

            fut.get();

            awaitPartitionMapExchange();

            checkAffinity();

            idx.set(restartIdxFrom);

            fut = GridTestUtils.runMultiThreadedAsync(new Callable<Void>() {
                @Override public Void call() throws Exception {
                    int nodeIdx = idx.getAndIncrement();

                    startGrid(nodeIdx);

                    return null;
                }
            }, gridsCnt - restartIdxFrom, ""start-node"");

            fut.get();

            awaitPartitionMapExchange();

            AffinityTopologyVersion topVer = node2.context().cache().context().exchange().readyAffinityVersion();

            log.info(""Using version: "" + topVer);

            checkAffinity();
        }
        finally {
            System.clearProperty(IGNITE_PDS_CHECKPOINT_TEST_SKIP_SYNC);
        }
    }

    /**
     * @param grpCnt Group count.
     */
    private void validateDepIds(int grpCnt) {
        Map<Integer, IgniteUuid> depIds = new HashMap<>();

        for (Ignite ignite : G.allGrids()) {
            final Map<Integer, CacheGroupDescriptor> descMap = ((IgniteEx)ignite).context().cache().cacheGroupDescriptors();

            for (Map.Entry<Integer, CacheGroupDescriptor> entry : descMap.entrySet()) {
                final IgniteUuid u = entry.getValue().deploymentId();

                final IgniteUuid u0 = depIds.get(entry.getKey());

                if (u0 == null)
                    depIds.put(entry.getKey(), u);
                else
                    assertEquals(""Descriptors do not match"", u0, u);
            }
        }

        assertEquals(grpCnt + 1, depIds.size());
    }

    /**
     * @throws Exception If failed.
     */
    private void checkAffinity() throws Exception {
        List<Ignite> nodes = G.allGrids();

        ClusterNode crdNode = null;

        for (Ignite node : nodes) {
            ClusterNode locNode = node.cluster().localNode();

            if (crdNode == null || locNode.order() < crdNode.order())
                crdNode = locNode;
        }

        AffinityTopologyVersion topVer = ((IgniteKernal)grid(crdNode)).
            context().cache().context().exchange().readyAffinityVersion();

        Map<String, List<List<ClusterNode>>> affMap = new HashMap<>();

        for (Ignite node : nodes) {
            IgniteKernal node0 = (IgniteKernal)node;

            for (IgniteInternalCache cache : node0.context().cache().caches()) {
                List<List<ClusterNode>> aff = affMap.get(cache.name());
                List<List<ClusterNode>> aff0 = cache.context().affinity().assignments(topVer);

                if (aff != null)
                    assertEquals(aff, aff0);
                else
                    affMap.put(cache.name(), aff0);
            }
        }
    }
}
{noformat}",,ascherbakov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 22 10:19:49 UTC 2017,,,,,,,,,,"0|i3n1jr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 10:19;sboikov;There was a bug with deploymentId assigned to caches started during activation, fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite restart with PDS enabled may cause delays in TTL cleanup worker,IGNITE-6964,13119721,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,dpavlov,dpavlov,20/Nov/17 17:07,26/Jun/18 17:50,14/Jul/23 06:20,14/May/18 11:58,,,,,,2.7,,persistence,,,,0,,,,"If ignite was restarted and not all TTL entries were evicted, simple restart does not cause entries to be deleted, even if test waits for some time.

In the same time if some entries were touched by get() TTL eviction starts to work as it is expected.",,amashenkov,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5874,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 14 11:58:57 UTC 2018,,,,,,,,,,"0|i3n0g7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 16:30;dpavlov;Test code can be found in 
https://github.com/apache/ignite/compare/master...gridgain:ignite-6964;;;","14/May/18 11:58;amashenkov;Fixed within IGNITE-5874.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TotalAllocatedPages metric does not match PhysicalMemoryPages when persistence is disabled,IGNITE-6963,13119698,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,andrey-kuznetsov,andrey-kuznetsov,andrey-kuznetsov,20/Nov/17 15:49,23/Nov/17 10:18,14/Jul/23 06:20,21/Nov/17 13:59,2.3,,,,,2.4,,general,,,,0,,,,"As javadoc states for DataRegionMetrics#getPhysicalMemoryPages()

{noformat}
When persistence is disabled, this metric is equal to getTotalAllocatedPages()
{noformat}

and this seems to be sane requirement.",,andrey-kuznetsov,avinogradov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 23 10:18:36 UTC 2017,,,,,,,,,,"0|i3n0bb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/17 17:36;githubbot;GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/3072

    IGNITE-6963: Made PhysicalMemoryPages equal to TotalAllocatedPages when PDS is off

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6963

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3072.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3072
    
----
commit e5d412392c2d7d3e8310f2a7772db8fc104efac0
Author: Andrey Kuznetsov <stkuzma@gmail.com>
Date:   2017-11-20T17:35:14Z

    IGNITE-6963: Made PhysicalMemoryPages equal to TotalAllocatedPages when PDS is off.

----
;;;","20/Nov/17 17:48;andrey-kuznetsov;[~avinogradov], could you please review the change.;;;","21/Nov/17 13:59;avinogradov;Merged to master, thanks for contribution;;;","23/Nov/17 10:18;githubbot;Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/3072
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Baseline should throw appropriate exception in case of --baseline version OLD_VERSION,IGNITE-6954,13119583,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,kuaw26,kuaw26,20/Nov/17 08:54,04/Dec/17 09:58,14/Jul/23 06:20,04/Dec/17 09:58,,,,,,2.4,,,,,,0,,,,"Steps to reproduce:
# Start node.
# Activate it (it will create baseline).
# Start one more node and add it to baseline.
# Execute: control.sh --baseline version 1

This should throw appropriate exception. ",,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 04 09:58:14 UTC 2017,,,,,,,,,,"0|i3mzlr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 09:26;kuaw26;[~pkonstantinov] Please test in branch.;;;","04/Dec/17 09:58;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite fails to start on non x86/64 architectures,IGNITE-6952,13119349,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,dmekhanikov,dmagda,dmagda,17/Nov/17 22:40,10/Jan/18 16:46,14/Jul/23 06:20,10/Jan/18 16:46,2.3,,,,,2.4,,,,,,0,important,,,"Ignite fails on AIX with the following stack trace:

{noformat}
java.lang.IllegalArgumentException: null 
        at java.nio.Buffer.position(Buffer.java:255) ~[?:1.8.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readArrayLE(DirectByteBufferStreamImplV2.java:1587) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readArrayLE(DirectByteBufferStreamImplV2.java:1542) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readLongArray(DirectByteBufferStreamImplV2.java:1013) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.DirectMessageReader.readLongArray(DirectMessageReader.java:212) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.GridLongList.readFrom(GridLongList.java:558) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMessage(DirectByteBufferStreamImplV2.java:1165) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.read(DirectByteBufferStreamImplV2.java:1785) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readCollection(DirectByteBufferStreamImplV2.java:1244) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.DirectMessageReader.readCollection(DirectMessageReader.java:333) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.CacheGroupAffinityMessage.readFrom(CacheGroupAffinityMessage.java:292) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMessage(DirectByteBufferStreamImplV2.java:1165) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.read(DirectByteBufferStreamImplV2.java:1785) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMap(DirectByteBufferStreamImplV2.java:1294) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.DirectMessageReader.readMap(DirectMessageReader.java:345) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsFullMessage.readFrom(GridDhtPartitionsFullMessage.java:645) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMessage(DirectByteBufferStreamImplV2.java:1165) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.direct.DirectMessageReader.readMessage(DirectMessageReader.java:311) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.managers.communication.GridIoMessage.readFrom(GridIoMessage.java:262) ~[ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridDirectParser.decode(GridDirectParser.java:90) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:114) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onMessageReceived(GridConnectionBytesVerifyFilter.java:133) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3388) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioServer$DirectNioClientWorker.processRead(GridNioServer.java:1261) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2272) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:2048) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1717) [ignite-core-2.3.0.jar:2.3.0] 
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110) [ignite-core-2.3.0.jar:2.3.0] 
        at java.lang.Thread.run(Thread.java:785) [?:2.6 (05-16-2017)] 
{noformat}

More details are here:
http://apache-ignite-users.70518.x6.nabble.com/Trouble-with-v-2-3-0-on-AIX-td17915.html",,agura,dmagda,dmekhanikov,mcherkas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7178,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 10 16:46:05 UTC 2018,,,,,,,,,,"0|i3my5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/17 13:34;mcherkas;The problem can be reproduced with a spark machine too:

https://ci.ignite.apache.org/downloadBuildLog.html?buildId=984942&plain=true;;;","25/Dec/17 09:55;dmekhanikov;Fix is ready. Please review: https://github.com/apache/ignite/pull/3277;;;","10/Jan/18 16:46;agura;LGTM. Merged to master. Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup OLS code,IGNITE-6949,13119231,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,zaleslaw,chief,chief,17/Nov/17 13:59,29/Nov/17 15:13,14/Jul/23 06:20,23/Nov/17 16:05,,,,,,2.4,,ml,,,,0,,,,"We want fix wrong styles like wildcards in imports, unnecessary empty lines, missed empty lines and if-else blocks format in OLS related files.",,chief,githubbot,ntikhonov,oignatenko,zaleslaw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7007,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 29 11:31:33 UTC 2017,,,,,,,,,,"0|i3mxfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 15:57;githubbot;GitHub user zaleslaw opened a pull request:

    https://github.com/apache/ignite/pull/3063

    IGNITE-6949: Add support of distributed matrices for OLS regression

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6949

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3063.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3063
    
----
commit b84d1b6ae284edaa510f7eefa84f5594dd1cb83e
Author: zaleslaw <zaleslaw.sin@gmail.com>
Date:   2017-11-17T14:44:05Z

    Removed incorrect patch

commit 401a464c6bde191111bbf1f11d0d32a2aea9facc
Author: zaleslaw <zaleslaw.sin@gmail.com>
Date:   2017-11-17T15:11:09Z

    Added OLS Distributed support

commit 9701adc7957ef20cc84eeef3394634dabb6a9af0
Author: zaleslaw <zaleslaw.sin@gmail.com>
Date:   2017-11-17T15:55:07Z

    Fixed code style

----
;;;","21/Nov/17 09:55;chief;I reviewed this PR, looks good for me.;;;","21/Nov/17 10:28;ntikhonov;[~zaleslaw],
Thank you for your contribution! I've looked at the changes and still see some code style issues. For example 
* extra space in imports (SparseBlockDistributedMatrix file);
* CacheUtils#reduce has incorrect alignments;

[~chief],
Please, double check this changes again and help [~zaleslaw] with it. ;;;","21/Nov/17 15:01;zaleslaw;[~chief] please review, I formatted changed files with codestyle file from ignite/idea;;;","23/Nov/17 12:06;chief;[~zaleslaw], reviewed, looks good for me.;;;","23/Nov/17 14:27;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3063
;;;","23/Nov/17 14:34;ntikhonov;[~zaleslaw],
Thank you for your contribution! I've merged the changes to master. 

Anyway, ML module needs to serious review. I've found code style issues and rude exception handling. For example
{noformat}
org.apache.ignite.ml.util.Utils#copy
...
catch (IOException | ClassNotFoundException e) {
    e.printStackTrace();
}
{noformat}

[~chief], could you handle this?;;;","29/Nov/17 11:31;chief;[~ntikhonov], This will be fixed in IGNITE-7007.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Near optimistic prepare future should abandon remap after failed map attempt,IGNITE-6947,13119216,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,17/Nov/17 12:47,17/Nov/17 12:48,14/Jul/23 06:20,17/Nov/17 12:48,,,,,,2.4,,,,,,0,,,,"Otherwise, it leads to an NPE if there are no affinity nodes.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-11-17 12:47:11.0,,,,,,,,,,"0|i3mxc7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fail to execute task with immutable list string,IGNITE-6944,13119108,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,tsanged,tsanged,17/Nov/17 03:53,26/Nov/17 20:13,14/Jul/23 06:20,26/Nov/17 20:13,2.3,,,,,2.4,,binary,,,,0,,,,"Exception occurs when executing task with immutable list of string due to not able to find method readResolve/writeReplace for binary object.

It appears this is caused by a side effect of Jira https://issues.apache.org/jira/browse/IGNITE-6485 ",,agoncharuk,agura,dpavlov,tsanged,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Nov/17 10:55;tsanged;BinaryMarshellerWithGuavaSelfTest.java;https://issues.apache.org/jira/secure/attachment/12898454/BinaryMarshellerWithGuavaSelfTest.java","20/Nov/17 10:54;tsanged;TestClientWithGuava.java;https://issues.apache.org/jira/secure/attachment/12898455/TestClientWithGuava.java",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Nov 26 20:12:59 UTC 2017,,,,,,,,,,"0|i3mwof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 19:52;vkulichenko;This is indeed a regression occurred after [IGNITE-6485|https://issues.apache.org/jira/browse/IGNITE-6485] was fixed. For some reason, since 2.3 it is looking for readResolve/writeReplace methods only in exact class that is being serialized, but not in the whole hierarchy.

[~agura], looks like you did that change. Can you please check?;;;","20/Nov/17 10:35;agura;[~tsanged], Do you have a simple reproducer for this problem? ;;;","20/Nov/17 11:01;tsanged;[~agura] We have 2 test cases, the 1st one is more important as it is more the use case for us and 2nd one is just a Junit test.

1. [^TestClientWithGuava.java] - this one is to send a task to Ignite server

2. [^BinaryMarshellerWithGuavaSelfTest.java] - the Junit test

Proposing fix for the issue - under org.apache.ignite.internal.binary.BinaryClassDescriptor.java, under the constructor of BinaryClassDescriptor(), use findNonPublicMembers when trying to resolve readResolve()/writeReplace():

{code:java}
        ...
        if (mode == BinaryWriteMode.BINARY || mode == BinaryWriteMode.OBJECT) {
//            readResolveMtd = U.getNonPublicMethod(cls, ""readResolve"");
        	readResolveMtd = U.findNonPublicMethod(cls, ""readResolve"");

//            writeReplaceMthd = U.getNonPublicMethod(cls, ""writeReplace"");
            writeReplaceMthd = U.findNonPublicMethod(cls, ""writeReplace"");
        }
        ...
{code}
;;;","20/Nov/17 11:58;agura;This fix will break IGNITE-6485. I'll take a look and share my findings.;;;","21/Nov/17 02:11;tsanged;[~agura] by breaking [IGNITE-6485|https://issues.apache.org/jira/browse/IGNITE-6485] do you mean it would break the test case testWriteReplace() under org.apache.ignite.internal.binary.BinaryMarshallerSelfTest.java?

if so, it appears it is an issue in the test case. 

testWriteReplace() try serialize and deserialize the TestObject:
{code:java}
    public void testWriteReplace() throws Exception {
        BinaryMarshaller marsh = binaryMarshaller(Collections.singleton(
            new BinaryTypeConfiguration(TestObject.class.getName())
        ));

        TestObject obj = new TestObject();

        BinaryObject po = marshal(obj, marsh);

        assertEquals(obj, po.deserialize());

        assertEquals(obj.val, ((BinaryObject)po.field(""val"")).deserialize());
    }
{code}

TestObject has variable val of type Intf:
{code:java}
    static class TestObject {
        /** Value. */
        Intf val = new IntfImpl();

        /** {@inheritDoc} */
        @Override public boolean equals(Object o) {
            if (this == o)
                return true;
            if (o == null || getClass() != o.getClass())
                return false;

            TestObject obj = (TestObject)o;

            return val.equals(obj.val);
        }
    }
{code}

IntfImpl extends Cls and implement Intf:
{code:java}
    static class IntfImpl extends Cls implements Intf {
        /** {@inheritDoc} */
        @Override public long value() {
            return longValue();
        }
    }
{code}

Method readResolve() from SerializationProxy return val from Cls object, however Cls doesn't implement IntfImpl which causes the issue:
{code:java}
    static class Cls implements Serializable {
        /** Value. */
    	long val;

        /** */
        public long longValue() {
            return val;
        }

        /** {@inheritDoc} */
        @Override public boolean equals(Object o) {
            if (this == o)
                return true;
            if (o == null || getClass() != o.getClass())
                return false;

            Cls cls = (Cls)o;

            return val == cls.val;
        }

        /** */
        private Object writeReplace() {
            return new SerializationProxy(this);
        }

        /** */
        private static class SerializationProxy implements Serializable {
            /** Value. */
            private final long val;

            /** */
            SerializationProxy(Cls a) {
                val = a.longValue();
            }

            /** */
            private Object readResolve() {
            	Cls a = new Cls();

                a.val = val;

                return a;
            }
        }
    }
{code}

Changing the readResolve method to return val from IntfImpl object can fix the issue:
{code:java}
            private Object readResolve() {
            	IntfImpl a = new IntfImpl();

                a.val = val;

                return a;
            }
{code}




;;;","22/Nov/17 15:54;agura;IGNITE-6485 test case is real and valid case. 

I've took a look to the problem and see that Java serializer use protected {{SingletoneImmutableList.writeReplace()/readResolve()}} methods in despite of absence of methods parameters. It looks strange for me but it is implementation of Java serialization and we should take it into account.

My solution the following:

- try to find in class private writeReplace/readResolve methods with output/input stream as parameter.
- if there are no such methods then we should try to find writeReplace/readResolve methods with any access modifiers and signatures.

It should work for IGNITE-6485 case and for this issue. But there are some problem in case of several methods with equal name but different signatures.

Will check my solution soon.;;;","22/Nov/17 22:25;vkulichenko;[~agura], you need to search for {{writeReplace}} in parent classes, but this doesn't happen anymore after your fix. Was this change intentional?;;;","23/Nov/17 10:02;tsanged;[~agura], [~vkulichenko],yes according to java.io.Serializable interface, we should search for the writeReplace/ReadResolve methods in the class being serialized as well as its parent classes.

Can I suggest with proposed fix below (which the logic is actually from java.io.ObjectStreamClass).

In org.apache.ignite.internal.binary.BinaryClassDescriptor.java, under the constructor BinaryClassDescriptor(), call getInheritableMethod():
{code:java}
        if (mode == BinaryWriteMode.BINARY || mode == BinaryWriteMode.OBJECT) {
        	readResolveMtd = U.getInheritableMethod(cls, ""readResolve"");

            writeReplaceMthd = U.getInheritableMethod(cls, ""writeReplace"");
        }
{code}

In org.apache.ignite.internal.util.IgniteUtils.java, add below functions:
{code:java}
    /**
     * Finds inheritable method in the class and it parents.
     *
     * The logic is based on java.io.ObjectStreamClass
     *
     * @param cls The class to search,
     * @param name Name of the method.
     * @param paramTypes Method parameters.
     * @return Method or {@code null}.
     */
    @Nullable public static Method getInheritableMethod(Class<?> cls, String name, Class<?>... paramTypes) {
    	Method meth = null;
    	Class defCl = cls;
    	while (defCl != null) {
    		try {
    			meth = defCl.getDeclaredMethod(name, paramTypes);
    			break;
    		} catch (NoSuchMethodException ex) {
    			defCl = defCl.getSuperclass();
    		}
    	}

    	if ((meth == null) || (meth.getReturnType() == void.class)) {
    		return null;
    	}
    	meth.setAccessible(true);
    	int mods = meth.getModifiers();
    	if ((mods & (Modifier.STATIC | Modifier.ABSTRACT)) != 0) {
    		return null;
    	} else if ((mods & (Modifier.PUBLIC | Modifier.PROTECTED)) != 0) {
    		return meth;
    	} else if ((mods & Modifier.PRIVATE) != 0) {
    		return (cls == defCl) ? meth : null;
    	} else {
    		return packageEquals(cls, defCl) ? meth : null;
    	}
    }
    
    private static boolean packageEquals(Class cl1, Class cl2) {
    	return (cl1.getClassLoader() == cl2.getClassLoader() && 
    		getPackageName(cl1).equals(getPackageName(cl2)));
    }

    private static String getPackageName(Class cl) {
    	String s = cl.getName();
    	int i = s.lastIndexOf('[');
    	if (i >= 0) {
    		s = s.substring(i + 2);
    	}
    	i = s.lastIndexOf('.');
    	return (i >= 0) ? s.substring(0, i) : """";
    }
{code}

With these changes, it shouldn't break your [IGNITE-6485|https://issues.apache.org/jira/browse/IGNITE-6485] as it is passing your original unit test testWriteReplace() under BinaryMarshallerSelfTest.java.

Please let me know.;;;","23/Nov/17 11:31;agura;[~vkulichenko] this was change intentional. But methods modifiers aren't taken into account. It's obviously bug.

[~tsanged] Yes, your solution looks correct. I'll implement it and run all tests.;;;","23/Nov/17 15:47;agura;Fixed. PR: https://github.com/apache/ignite/pull/3085

Waiting for TC.;;;","24/Nov/17 14:59;agoncharuk;Changes look good to me;;;","26/Nov/17 20:12;agura;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Preserve mvcc versions on index rebuild,IGNITE-6929,13118858,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,gvvinblade,gvvinblade,16/Nov/17 09:58,16/Aug/18 15:51,14/Jul/23 06:20,27/Nov/17 17:00,,,,,,2.7,,mvcc,sql,,,0,,,,Currently we may loose next available version for an index row on index rebuild ({{org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.CacheDataStoreImpl#updateIndexes}}),,githubbot,gvvinblade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6874,,IGNITE-6931,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 27 16:59:57 UTC 2017,,,,,,,,,,"0|i3mv53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/17 12:46;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/3090

    IGNITE-6929

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6929

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3090.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3090
    
----
commit f6e982540e65ab17d439dba990794f35616a30dd
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-30T09:45:40Z

    ignite-3478

commit 275a85db5cd6923b36126166ae99b15e876192be
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-31T07:44:07Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit b7b9089f0102b8cab9942a9c887d93e9f26cc7d2
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-31T09:00:36Z

    disco cache cleanup

commit 855c2d45794c300d41e386b4e6fa40736cc3e40d
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-31T09:09:58Z

    Merge branch 'ignite-3478-1' into ignite-3478

commit 08be7310a93d3ce455215b97cf8ab1a2c3f0ab31
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-31T09:52:23Z

    ignite-3478

commit fce2e31f0fd2f4f6a9944422e40408a0c65cfe90
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-04T08:13:50Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit d3c049952384750c5543a9f88b383c033ef74096
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-04T08:52:11Z

    ignite-3478

commit e71ce1937a18dd32448e92b1038dc48d4cb6f8ab
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-04T10:16:03Z

    ignite-3478

commit 5fac5b0965e97f8951e16e10ca9229a2e78ddb0c
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T10:16:44Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit 2e0c9c08e046e8d6af1b5358d9053eae999b1fb4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T11:30:55Z

    ignite-3478

commit e1e07ffdf2d711ba3e72f316f5a3970eff27372e
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T11:31:14Z

    ignite-3478

commit cbada3934a386668da0b11d4de7d0f58a4d04dfe
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T11:49:49Z

    ignite-3484

commit 5a82c68dcd1927bb6fded8b7def38c91ff6e145b
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T11:59:49Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478

commit bc9134c94b7a738dc1664e96ca6eabb059f1c268
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T12:03:39Z

    Merge branch 'ignite-3478' into ignite-3484
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractDataInnerIO.java

commit b4bfcde78825c6517232e49d389bdb5de19f05a9
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T12:27:51Z

    ignite-3484

commit 43834aaab9e2c3cd5fdd55289fdc4a9ff8ab6599
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T13:13:00Z

    ignite-3478

commit d1b828095713fcadfa260cf94fef01b42a1b12fd
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T13:13:33Z

    Merge branch 'ignite-3478' into ignite-3484

commit 6be6779b6336c36cd71eef0a25199a6a877ce6b5
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-05T13:47:11Z

    ignite-3484

commit e3bba83256c1eb53c4b40fbd9ddba47fcf9d58d5
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-06T07:10:26Z

    ignite-3484

commit dd0afb28466094b801506da8afa3601bfaebd853
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-06T07:30:04Z

    ignite-3484

commit 27b87b413348b03986a463551db24b7726321732
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-06T08:19:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit dcaf8801accd6ee089849a82b2ccd558aec81895
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-06T08:19:30Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3478
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java

commit c966451d0bf7059575de92bcfae43d72096ebce4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-06T08:27:04Z

    Merge branch 'ignite-3478' into ignite-3484

commit 91b9911731a387a3199ddbbc22704bc14af09995
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-06T09:22:22Z

    ignite-3484

commit e40b4d9dcd6fe6c1cd2640bdd7116ca5a08ed781
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-07T09:12:32Z

    ignite-3484

commit 41a1c571e6ba1765941e2f1679dc4ac1582275c4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-08T07:55:24Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-3484

commit 1626130801dc330bcaf693f46906f6564cce6802
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-08T08:04:57Z

    ignite-3484

commit 91bbb7cd24f38a38e2e65fc3ebf5637572b11b25
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-08T12:34:52Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-6149
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxPrepareFutureAdapter.java

commit 085a3219088bc1610d1928c437f075a6fb9a4f9b
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-08T13:02:16Z

    ignite-6149

commit c6f894817ef063984cee1ea886313eecc8da3be0
Author: sboikov <sboikov@gridgain.com>
Date:   2017-09-11T13:51:11Z

    ignite-6149

----
;;;","27/Nov/17 16:59;githubbot;Github user alexpaschenko closed the pull request at:

    https://github.com/apache/ignite/pull/3090
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: SimpleWorkerPool select wrong worker in special case,IGNITE-6926,13118783,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,16/Nov/17 02:55,16/Nov/17 03:14,14/Jul/23 06:20,16/Nov/17 03:12,2.3,,,,,2.4,,wizards,,,,0,,,,In case when several tasks submitted at once to newly created pool it has a bug of selecting next available worked.,,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 16 03:14:15 UTC 2017,,,,,,,,,,"0|i3muof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 03:14;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheStoreSessionListener#onSessionStart() is not called in case of 'WriteBehind' mode is enabled and 'writeCache' size exceeds critical size.,IGNITE-6924,13118629,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slava.koptilin,slava.koptilin,slava.koptilin,15/Nov/17 19:01,17/Nov/17 12:31,14/Jul/23 06:20,17/Nov/17 12:31,2.4,,,,,2.4,,cache,,,,0,,,,,,slava.koptilin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6669,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 17 12:31:38 UTC 2017,,,,,,,,,,"0|i3mtq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 11:59;slava.koptilin;pull-request: https://github.com/apache/ignite/pull/3040/
TeamCity looks good enough https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F3040%2Fhead;;;","17/Nov/17 12:31;slava.koptilin;merged into master e3099cc47e4086605312d88aeda3ca85e1e6aeff;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Class can not undeploy from grid in some specific cases,IGNITE-6922,13118562,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,v.pyatkov,v.pyatkov,15/Nov/17 14:43,22/Nov/17 07:53,14/Jul/23 06:20,22/Nov/17 07:53,,,,,,2.4,,,,,,0,,,,"Peer class loading enable on cluster and deployment mode set as SHARED.
In several cases after master (so that who deploy a class) node leave cluster and reconnect with other implementation, old implementation of the class continue execute in grid.",,agoncharuk,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 22 07:53:07 UTC 2017,,,,,,,,,,"0|i3mtbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/17 08:54;v.pyatkov;Look at the PR:

https://github.com/apache/ignite/pull/3045

and TC passed:

https://ci.ignite.apache.org/viewLog.html?buildId=948611&buildTypeId=Ignite20Tests_RunAll&tab=dependencies#_expand=block_bt307-948611&hpos=0&vpos=200
;;;","21/Nov/17 08:26;agoncharuk;[~v.pyatkov],

Please remove System.err.println("""") calls from the code, use `@IgniteInstanceResource` with Ignite injection to obtain an instance of log instead.;;;","21/Nov/17 09:32;v.pyatkov;[~agoncharuk]
Thanks for comment.
I have applied your proposals.
Could you please, review it again?;;;","22/Nov/17 07:53;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Prepare Web Console package with simple deploy.,IGNITE-6920,13118505,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,anovikov,anovikov,anovikov,15/Nov/17 10:26,19/Jan/18 03:04,14/Jul/23 06:20,19/Jan/18 03:04,2.0,,,,,2.5,,wizards,,,,0,,,,"* Package Web Console backend into an executable that can be run even on devices without Node.js installed.
* Let Web Console backend will be used to serve static files (compiled Web Console frontend)
* Let Web Console backend download and run as child process mongoDB. if mongoDB is not installed.",,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 03:04:22 UTC 2018,,,,,,,,,,"0|i3msyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 14:46;anovikov;Implemented direct install build.
How to use:
* In <modules/web-console/backend> run in terminal following command: {{npm run build}}
* copy <modules/web-console/backend/build/ignite-web-console*> to <direct-install-dist>
* build Web Console agent. Copy agent archive <modules/web-console/web-agent/target/ignite-web-agent-*.zip> to <direct-install-dist/libs/agent_dists>
* build Web Console frontend. Copy static files <modules/web-console/frontend/build/*> to <direct-install-dist/libs/frontend>
* Create folder <direct-install-dist/user_data>, <direct-install-dist/libs/mongodb/mongodb-download>

[~kuaw26], please review, my changes.;;;","15/Nov/17 15:14;kuaw26;[~anovikov] Looks good for me.
One minor note - add new section about this package to DEVNOTES.txt and ask [~pkonstantinov] to test Web Console packaged by this instruction.;;;","16/Nov/17 03:54;anovikov;[~kuaw26], Instructions will be added to DEVNOTES.txt  in IGNITE-6927.
[~pkonstantinov], please test.;;;","17/Nov/17 03:18;pkonstantinov;Successfully tested in branch;;;","19/Jan/18 03:04;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: incorrect character in tab name under IE11,IGNITE-6919,13118495,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,15/Nov/17 09:59,05/Feb/18 07:50,14/Jul/23 06:20,28/Nov/17 15:28,,,,,,2.4,,,,,,0,,,,!screenshot-1.png!,,alexdel,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 10:00;pkonstantinov;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12897716/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 19 03:37:21 UTC 2017,,,,,,,,,,"0|i3mswf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/17 07:07;alexdel;Fixed symbol rendering.;;;","23/Nov/17 03:32;pkonstantinov;Test failed. That issue found not only on 'logout' page.
Could you please find out and fix all places with the same issue;;;","23/Nov/17 06:52;alexdel;[~pkonstantinov] Fixed app-wide charset issue. Please verify.;;;","23/Nov/17 09:11;pkonstantinov;Tested. Can be merged into the target branch.;;;","28/Nov/17 15:28;kuaw26;Looks good. Merged to master.;;;","19/Dec/17 03:37;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A node joining with enabled persistence and empty disc space causes exchange to hang.,IGNITE-6916,13118474,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,zstan,zstan,15/Nov/17 08:47,22/Nov/17 07:55,14/Jul/23 06:20,22/Nov/17 07:53,2.4,,,,,2.4,,persistence,,,,0,,,,"If no more free disk space occurs, while node joining cluster, it will be hanging.",,agoncharuk,githubbot,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 22 07:55:44 UTC 2017,,,,,,,,,,"0|i3msrr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 08:57;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/3036

    IGNITE-6916: node joining with enabled pds and empty disc space cause…

    …s exchange to hang

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6916

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3036.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3036
    
----
commit 56d27cb452d64c493dfb00d72578fd49f321795c
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-11-15T08:51:25Z

    IGNITE-6916: node joining with enabled pds and empty disc space causes exchange to hang

----
;;;","15/Nov/17 12:28;zstan;TC https://ci.ignite.apache.org/viewLog.html?buildId=943507&tab=buildResultsDiv&buildTypeId=IgniteTests_RunAllPds;;;","22/Nov/17 07:53;agoncharuk;Merged to master;;;","22/Nov/17 07:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3036
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Failed to invoke getter method (type=class java.lang.String),IGNITE-6915,13118454,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kirill.shirokov,pkonstantinov,pkonstantinov,15/Nov/17 06:19,26/Dec/17 16:14,14/Jul/23 06:20,26/Dec/17 16:12,,,,,,2.4,,sql,,,,0,,,,"cluster configuration:
- 2 server nodes (one with a load, OPTIMIZED marshaller)
- cache populated with data

Executed ' select * from ""cache"".Person '

!screenshot-1.png!
{code}
Caused by: org.h2.jdbc.JdbcSQLException: ┬эєЄЁхээ   ю°шсър: ""class org.apache.ignite.IgniteCheckedException: Failed to invoke getter method [type=class java.lang.String, property=firstName]""
General error: ""class org.apache.ignite.IgniteCheckedException: Failed to invoke getter method [type=class java.lang.String, property=firstName]""; SQL statement:
SELECT
__Z0.FIRSTNAME __C0_0,
__Z0.LASTNAME __C0_1,
__Z0.RANK __C0_2,
__Z0.TITLE __C0_3,
__Z0.AGE __C0_4,
__Z0.SALARY __C0_5,
__Z0.ID __C0_6,
__Z0.DEPID __C0_7
FROM ""c_partitioned"".PERSON __Z0 [50000-195]
        at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
        at org.h2.message.DbException.get(DbException.java:168)
        at org.h2.message.DbException.convert(DbException.java:295)
        at org.apache.ignite.internal.processors.query.h2.H2RowDescriptor.columnValue(H2RowDescriptor.java:348)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2AbstractKeyValueRow.getValue(GridH2AbstractKeyValueRow.java:236)
        at org.h2.table.TableFilter.getValue(TableFilter.java:1083)
        at org.h2.expression.ExpressionColumn.getValue(ExpressionColumn.java:186)
        at org.h2.expression.Alias.getValue(Alias.java:36)
        at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1459)
        at org.h2.result.LazyResult.hasNext(LazyResult.java:79)
        at org.h2.result.LazyResult.next(LazyResult.java:59)
        at org.h2.command.dml.Select.queryFlat(Select.java:519)
        at org.h2.command.dml.Select.queryWithoutCache(Select.java:625)
        at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:114)
        at org.h2.command.dml.Query.query(Query.java:352)
        at org.h2.command.dml.Query.query(Query.java:333)
        at org.h2.command.CommandContainer.query(CommandContainer.java:113)
        at org.h2.command.Command.executeQuery(Command.java:201)
        at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:111)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:967)
        ... 31 more
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to invoke getter method [type=class java.lang.String, property=firstName]
        at org.apache.ignite.internal.processors.query.property.QueryReadOnlyMethodsAccessor.getValue(QueryReadOnlyMethodsAccessor.java:51)
        at org.apache.ignite.internal.processors.query.property.QueryClassProperty.value(QueryClassProperty.java:82)
        at org.apache.ignite.internal.processors.query.h2.H2RowDescriptor.columnValue(H2RowDescriptor.java:345)
        ... 47 more
Caused by: java.lang.IllegalArgumentException: object is not an instance of declaring class
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.ignite.internal.processors.query.property.QueryReadOnlyMethodsAccessor.getValue(QueryReadOnlyMethodsAccessor.java:48)
        ... 49 more
{code}",,githubbot,kirill.shirokov,pkonstantinov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 07:31;pkonstantinov;export-query-Query123-all.csv;https://issues.apache.org/jira/secure/attachment/12897695/export-query-Query123-all.csv","15/Nov/17 06:21;pkonstantinov;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12897682/screenshot-1.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 26 16:14:32 UTC 2017,,,,,,,,,,"0|i3msnb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 06:47;pkonstantinov;Here is a class source on scala
{code}
case class Person(
    dep: Department,
    @ScalaCacheQuerySqlField
    @BeanProperty
    firstName: String,
    @ScalaCacheQuerySqlField
    @BeanProperty
    lastName: String,
    @ScalaCacheQuerySqlField(orderedGroups = Array(new ScalaCacheQuerySqlFieldGroup(name = ""MY_IDX"", order = 1)))
    @BeanProperty
    rank: Int,
    @ScalaCacheQueryTextField
    @BeanProperty
    title: String,
    @ScalaCacheQuerySqlField(orderedGroups = Array(new ScalaCacheQuerySqlFieldGroup(name = ""MY_IDX"", order = 2, descending = true)))
    @BeanProperty
    age: Int,
    @ScalaCacheQueryTextField
    @BeanProperty
    salary: Long
    ) {
    /** Person ID. */
    @ScalaCacheQuerySqlField(index = true)
    @BeanProperty
    val id = UUID.randomUUID

    /** Organization ID. */
    @ScalaCacheQuerySqlField(index = true)
    val depId = dep.id

    /** Affinity key. */
    @AffinityKeyMapped
    val key: AffinityKey[UUID] = new AffinityKey[UUID](id, depId)

    override def toString: String = {
        val sb = new StringBuilder()

        sb.append(""Person "")
        sb.append(""[id="").append(id)
        sb.append("", firstName="").append(firstName)
        sb.append("", lastName="").append(lastName)
        sb.append("", rank="").append(rank)
        sb.append("", title="").append(title)
        sb.append("", age="").append(age)
        sb.append("", salary="").append(salary)
        sb.append(']')

        sb.toString()
    }
}
{code};;;","15/Nov/17 07:32;pkonstantinov;Attached CSV file from previous workable version;;;","06/Dec/17 09:23;kirill.shirokov;[~pkonstantinov], I cannot reproduce the bug on the master branch (2.3). Could you please add:
1. A scenario or test case that reproduces the bug
2. Product version on which it reproduces
Thanks in advance.;;;","06/Dec/17 10:35;kirill.shirokov;I've reproduced the issue in local mode.;;;","08/Dec/17 13:44;githubbot;GitHub user gg-shq opened a pull request:

    https://github.com/apache/ignite/pull/3183

    IGNITE-6915: Fixed b+tree index names for non-binary marshaller case...

    … Added more diagnostics to QueryXxxAccessor exceptions.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6915

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3183.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3183
    
----
commit 02d5a368e7dccdedb9fc393bf361446016e08ea4
Author: gg-shq <kshirokov@gridgain.com>
Date:   2017-12-08T13:44:10Z

    IGNITE-6915: Fixed b+tree index names for non-binary marshaller case. Added more diagnostics to QueryXxxAccessor exceptions.

----
;;;","13/Dec/17 09:53;kirill.shirokov;Note that the fix substantially minimizes the probability of this bug. Still, under extremely rare circumstances two tables in the same cache can still erroneously share b+tree. This can happen when both Optimized Marshaller and persistence is enabled, and two different value types for which the tables are created are:
1) both Externalizable
2) have the same simple name 
3) have the same first letters of the packages 
4) have the same hash code of the fully qualified class name (see H2TreeIndex.mangleClassName() for details)
or
simple class name length is close to 250 characters (see MetadataStorage.MAX_IDX_NAME_LEN);;;","25/Dec/17 08:04;vozerov;[~kirill.shirokov], my comments:
1) {{GridToStringBuilder.excSafeToString}} - method and all it's usages should be removed, because it is illegal to print user objects to log for security reasons, neither it is a good practice to swallow exceptions. 
2) {{OptimizedMarshallerIndexNameTest}} should be assigned to a test suite. Otherwise it will not be executed by TC. {{IgniteCacheQuerySelfTestSuite}} is good candidate for this.
3) We cannot change existing logic of BTree name resolution, because in this case users migrating from previous versions will not be able to migrate from previous versions. Another point to consider - {{OpimizedMarshaller}} is deprecated and once index name is calculated, we add cache group ID to it later. For this reason it doesn't make sense to change logic a lot. It should be enough to do the following (pseudocode):
{code}
int typeId;

if (binary)
    typeId = tbl.rowDescriptor().type().typeId()
else
    typeId = tbl.rowDescriptor().type().valueClass().getName().hashCode();
{code};;;","25/Dec/17 12:17;kirill.shirokov;Reviewers' comments addressed.;;;","26/Dec/17 16:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3183
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: 'Export All' for scan stucks in Chrome but successfully finish in FireFox,IGNITE-6914,13118446,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,15/Nov/17 04:24,23/Nov/17 07:48,14/Jul/23 06:20,21/Nov/17 13:16,,,,,,2.4,,,,,,0,,,,"I populated a cache with 100K of data.
Then I opened Query screen and execute Scan for that cache.
Then I executed Export All - under Chrome it stuck",,alexdel,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 23 04:35:02 UTC 2017,,,,,,,,,,"0|i3mslj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 10:04;pkonstantinov;Tested in branch, can be merged into target branch;;;","20/Nov/17 04:18;kuaw26;Please also test on: Safari, FireFox, IE11, Edge.;;;","20/Nov/17 04:52;alexdel;Removed ng wrapper for fileSaver. Added blocking on btns whie file preparing.;;;","20/Nov/17 04:53;alexdel;Removed ng wrapper for fileSaver. Added blocking on btns whie file preparing. Please retest;;;","20/Nov/17 08:36;pkonstantinov;Please disable 'Scan' and 'Scan on selected node' buttons while 'Export All' in progress.;;;","20/Nov/17 09:16;alexdel;[~pkonstantinov] Disabling buttons on csv baking done. Please retest;;;","20/Nov/17 09:17;alexdel;Disabling done;;;","21/Nov/17 02:22;pkonstantinov;Tested. Can be merged into the target branch.;;;","21/Nov/17 13:16;kuaw26;Looks good. Merged to master.;;;","23/Nov/17 04:35;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: partition reservations are released too early in lazy mode,IGNITE-6904,13118255,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,rkondakov,vozerov,vozerov,14/Nov/17 13:56,05/Apr/18 12:12,14/Jul/23 06:20,25/Dec/17 09:41,2.3,,,,,2.4,,sql,,,,0,,,,"In lazy mode we advance query execution as new page requests arrive. However, method {{GridMapQueryExecutor#onQueryRequest0}} releases partition reservations when only the very first page is processed:
{code}
finally {
    GridH2QueryContext.clearThreadLocal();

    if (distributedJoinMode == OFF)
        qctx.clearContext(false);
}
{code}

It means that incorrect results may be returned on unstable topology. We need to release partitions only after the whole query is executed.",,githubbot,rkondakov,skalashnikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7712,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 25 09:43:09 UTC 2017,,,,,,,,,,"0|i3mrf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Nov/17 10:17;githubbot;GitHub user dolphin1414 opened a pull request:

    https://github.com/apache/ignite/pull/3074

    IGNITE-6904 SQL: partition reservations are released too early in lazy mode

    In lazy mode partitions reservations are released only after last page has been sent.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6904

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3074.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3074
    
----
commit c28dda18e185692c93f722996a03c70daab19bcd
Author: rkondakov <rkondakov@gridgain.com>
Date:   2017-11-21T10:09:12Z

    IGNITE-6904: in lazy mode partitions reservations are released only after last page has been sent.

commit 7dda28980eb792392454583f26970e31eb1727eb
Author: rkondakov <rkondakov@gridgain.com>
Date:   2017-11-21T10:11:29Z

    Merge remote-tracking branch 'apache/master' into ignite-6904

commit 153de4033fe53407ac7db9615891798e47b1dc19
Author: rkondakov <rkondakov@gridgain.com>
Date:   2017-11-21T10:12:13Z

    Merge remote-tracking branch 'origin/master' into ignite-6904

----
;;;","23/Nov/17 06:57;rkondakov;[~vozerov], please review. Tests are ok.;;;","24/Nov/17 08:55;vozerov;[~rkondakov], fix looks good to me, but we need a test confirming that everything is OK. It could work as follows:
1) Start 1 server and load data to all partitions (use affinity API)
2) Start a client, then start lazy query execution with small page size (say, 1 entry) and read one page.
3) Start another server and wait for a while (e.g. 1 sec)
4) Read remaining pages and confirm that result set contain all expected entries.;;;","29/Nov/17 07:52;rkondakov;[~vozerov], test implemented, TC run is ok. Please, review.;;;","06/Dec/17 09:06;skalashnikov;[~rkondakov] Roma, I have reviewed the code and it looks good. 
Perhaps you may add a test to confirm that partition reservations are released in case the cursor is closed and last page is never requested. 
As far as I can tell looking at the code it is OK, but having a test would be great. 
[~vozerov], what do you think?;;;","11/Dec/17 06:58;rkondakov;[~skalashnikov], [~vozerov], I've added a test for the checking if the partition reservations are released after the cursor having been closed. Actually, reservations have not been released in this case and test revealed this problem. I added a fix for this also. 

Please, review. TC run is ok.;;;","25/Dec/17 08:54;vozerov;[~rkondakov], why don't we check for {{qctx.distributedJoinMode() == OFF}} inside {{MapQueryLazyWorker.stop}}?;;;","25/Dec/17 09:25;rkondakov;[~vozerov], this is a cursor close case. And therefore as in the case of query canceling it should be treated in the same manner - all reservations should be released despite of the query type.;;;","25/Dec/17 09:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3074
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor doesn't show the list of caches after persistence enabled cluster restart,IGNITE-6897,13118108,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vkulichenko,vkulichenko,14/Nov/17 00:49,11/Jan/18 04:30,14/Jul/23 06:20,06/Dec/17 16:49,2.3,,,,,2.4,,cache,visor,,,0,,,,"# Start a cluster with persistence enabled.
# Create a cache dynamically, put some data.
# Restart the cluster.
# Connect with Visor and execute {{cache}} command to get list of caches.
# No caches are shown.
# Try to access the cache from code (e.g. execute a query).
# Now caches are shown in Visor.",,kuaw26,pkonstantinov,vkulichenko,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 11 04:30:04 UTC 2018,,,,,,,,,,"0|i3mqif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Nov/17 01:36;kuaw26;[~vsisko] Could you take a look?;;;","14/Nov/17 04:09;vsisko;Visor does not show caches while cluster is not active.
Use *top -activate* command for cluster activation.
After activation of cluster *cache* command shows list of caches.;;;","14/Nov/17 18:43;vkulichenko;[~vsisko], got it. However, I find this a bit confusing. Why does Visor even show information in case cluster is inactive? Note that all API calls throw an exception in this case ({{Ignite#cacheNames}} as well). I think Visor should clearly report this and also should be able to activate the cluster as well.

Thoughts?

;;;","05/Dec/17 08:32;vsisko;Implemented showing of valid message on cache command when cluster in inactive.
Changed format of warning messages.;;;","06/Dec/17 06:51;pkonstantinov;Tested on branch;;;","06/Dec/17 16:49;kuaw26;Merged to master;;;","11/Jan/18 04:30;pkonstantinov;Re-tested in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: support Multidimensional Arrays in binary serializer,IGNITE-6896,13117989,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,alexey.tank2,alexey.tank2,13/Nov/17 15:57,15/Nov/17 12:49,14/Jul/23 06:20,15/Nov/17 12:48,2.3,,,,,2.4,,platforms,,,,0,.NET,,,"It is found that legacy 2D, 3D, etc. are not working in BinarySerializer.

Sample reproducer:
{code:java}
        [Test]
        public void TestXX()
        {
            var array2D = new float[32, 32];
            var res = TestUtils.SerializeDeserialize(array2D);
            Assert.AreEqual(array2D, res);
        }
{code}

BTW, please note that 2D array in Java (a[2][2]) is just a jugged array:

{noformat}
obj = {byte[2][]@1928}
 0 = {byte[2]@1974}
 1 = {byte[2]@1975}
{noformat}
",,alexey.tank2,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 15 12:49:46 UTC 2017,,,,,,,,,,"0|i3mprz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Nov/17 15:58;alexey.tank2;Sample exception:

{noformat}
System.TypeInitializationException : The type initializer for 'Casters`1' threw an exception.
  ----> System.InvalidOperationException : No coercion operator is defined between types 'System.Single[,]' and 'System.Single[]'.
   at Apache.Ignite.Core.Impl.Common.TypeCaster`1.Cast[TFrom](TFrom obj) in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Common\TypeCaster.cs:line 45
   at Apache.Ignite.Core.Impl.Binary.BinarySystemWriteHandler`1.Write[T](BinaryWriter writer, T obj) in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\BinarySystemHandlers.cs:line 716
   at Apache.Ignite.Core.Impl.Binary.BinaryWriter.Write[T](T obj) in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\BinaryWriter.cs:line 1168
   at Apache.Ignite.Core.Impl.Binary.Marshaller.Marshal[T](T val, IBinaryStream stream) in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\Marshaller.cs:line 159
   at Apache.Ignite.Core.Impl.Binary.Marshaller.Marshal[T](T val) in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\Marshaller.cs:line 144
   at Apache.Ignite.Core.Tests.TestUtils.SerializeDeserialize[T](T obj) in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core.Tests\TestUtils.cs:line 384
   at Apache.Ignite.Core.Tests.Binary.Serializable.GenericCollectionsTest.TestXX() in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core.Tests\Binary\Serializable\GenericCollectionsTest.cs:line 98
--InvalidOperationException
   at System.Linq.Expressions.Expression.GetUserDefinedCoercionOrThrow(ExpressionType coercionType, Expression expression, Type convertToType)
   at Apache.Ignite.Core.Impl.Common.TypeCaster`1.Casters`1.Compile() in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Common\TypeCaster.cs:line 85
   at Apache.Ignite.Core.Impl.Common.TypeCaster`1.Casters`1..cctor() in C:\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Common\TypeCaster.cs:line 69

{noformat}

;;;","14/Nov/17 09:44;ptupitsyn;I see two approaches for a fix:
- Write multidimensional as jagged, convert on use (same as int as uint situation)
- Wrap multidimensional in a wrapper (see {{PeerLoadingObjectHolderSerializer}} for an example)

First one breaks idenstity (returned object cannot be cast to initial type), so we should go with the second one I think.;;;","14/Nov/17 13:48;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/3031

    IGNITE-6896 .NET: support Multidimensional Arrays in binary serializer

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6896

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3031.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3031
    
----
commit 8735d68ec178b7593f25f1207a6362ed9ea238fc
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-11-14T13:48:21Z

    IGNITE-6896 .NET: support Multidimensional Arrays in binary serializer

----
;;;","14/Nov/17 13:51;ptupitsyn;Fixed, [~alexey.tank2], please review.;;;","14/Nov/17 14:43;alexey.tank2;[~ptupitsyn]. looks good for me.
One minor comment:
It makes sense to change square 2x2, 2x2x2 arrays to rectangular ones at unit tests.
It would better verify {{private static int[] GetIndices(int globalIdx, int[] lengths)}} and index distibution logic.

so please change

{code:java}
            int[,] ints = {{1, 2}, {3, 4}};
           uint[,,] uints = {{{1, 2}, {3, 4}}, {{5, 6}, {7, 8}}};
{code}
to 
{code:java}
            int[,] ints = new int[2,3] { { 1, 2, 3 }, { 4, 5, 6 } };
            uint[,,] uints = new uint [2,3,1] { { {1}, {2}, {3} }, { {4}, {5}, {6} } };
{code}
;;;","14/Nov/17 16:30;ptupitsyn;Good idea, fixed. Waiting for TC.;;;","15/Nov/17 12:48;ptupitsyn;Merged to master: {{fa52789d7679d4c4b65efcdfb86cf146abb920fe}}.;;;","15/Nov/17 12:49;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3031
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
visorcmd: 'cache -a' shows nodes that are not matched by nodeFilter,IGNITE-6863,13117565,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,dmekhanikov,dmekhanikov,10/Nov/17 13:16,15/Nov/17 09:30,14/Jul/23 06:20,14/Nov/17 02:53,2.3,,,,,2.4,,visor,,,,0,,,,"'cache -a' command shows all nodes in the detailed summary, even those, which are not matched by a configured node filter.

Please find attached archive with the reproducing example project.

LOCAL cache also has this issue.",,dmekhanikov,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/17 13:17;dmekhanikov;node-filter.zip;https://issues.apache.org/jira/secure/attachment/12897079/node-filter.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 15 09:30:15 UTC 2017,,,,,,,,,,"0|i3mn67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Nov/17 15:22;kuaw26;[~vsisko] as you one of most often contributing to Visor CMD, can you take a look?;;;","13/Nov/17 06:56;vsisko;Fixed showing of cache info when cache is not configured for node.
Fixed NPE for client node when data storage is not configured.;;;","13/Nov/17 07:29;kuaw26;Looks good.

Please add test with node filter and assign to [~pkonstantinov] for test.;;;","13/Nov/17 10:48;pkonstantinov;Successfully tested in branch;;;","14/Nov/17 02:53;kuaw26;Merged to master.;;;","15/Nov/17 09:30;pkonstantinov;re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lack of context information upon serializing and marshalling (writeObject and writeFields),IGNITE-6860,13117548,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ivandasch,ein,ein,10/Nov/17 11:10,01/Aug/19 22:10,14/Jul/23 06:20,14/Mar/18 09:56,2.3,,,,,2.5,,general,,,,0,,,,"Having the stack trace

{noformat}
Caused by: org.apache.ignite.binary.BinaryObjectException: Failed to marshal object with optimized marshaller: [org.apache.logging.log4j.core.config.AppenderControl@302e61a8]
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:186)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteCollection(BinaryWriterExImpl.java:764)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeCollectionField(BinaryWriterExImpl.java:1274)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:631)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteMap(BinaryWriterExImpl.java:786)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:699)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObjectArray(BinaryWriterExImpl.java:743)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectArrayField(BinaryWriterExImpl.java:1266)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:626)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.marshal(GridBinaryMarshaller.java:248)
	at org.apache.ignite.internal.binary.BinaryMarshaller.marshal0(BinaryMarshaller.java:82)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9845)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.sendRequest(GridTaskWorker.java:1373)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.processMappedJobs(GridTaskWorker.java:660)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.access$000(GridTaskWorker.java:112)
	at org.apache.ignite.internal.processors.task.GridTaskWorker$1.send(GridTaskWorker.java:223)
	at com.sbt.dpl.gridgain.DistributedCollectTask.sendCollectJobs(DistributedCollectTask.java:167)
	at com.sbt.dpl.gridgain.DistributedCollectTask.result(DistributedCollectTask.java:137)
	... 14 common frames omitted
Caused by: org.apache.ignite.IgniteCheckedException: Failed to serialize object: [org.apache.logging.log4j.core.config.AppenderControl@302e61a8]
	at org.apache.ignite.internal.marshaller.optimized.OptimizedMarshaller.marshal0(OptimizedMarshaller.java:206)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9845)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:179)
	... 160 common frames omitted
Caused by: java.io.IOException: java.io.IOException: java.io.IOException: java.lang.NoClassDefFoundError: org/apache/commons/csv/CSVFormat
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:339)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObjectOverride(OptimizedObjectOutputStream.java:159)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:344)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedMarshaller.marshal0(OptimizedMarshaller.java:201)
	... 163 common frames omitted
Caused by: java.io.IOException: java.io.IOException: java.lang.NoClassDefFoundError: org/apache/commons/csv/CSVFormat
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:339)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObjectOverride(OptimizedObjectOutputStream.java:159)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:344)
	at java.util.concurrent.CopyOnWriteArrayList.writeObject(CopyOnWriteArrayList.java:973)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:333)
	... 172 common frames omitted
Caused by: java.io.IOException: java.lang.NoClassDefFoundError: org/apache/commons/csv/CSVFormat
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:339)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObjectOverride(OptimizedObjectOutputStream.java:159)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:344)
	at java.util.concurrent.CopyOnWriteArrayList.writeObject(CopyOnWriteArrayList.java:973)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:333)
	... 197 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/apache/commons/csv/CSVFormat
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethod(Class.java:2128)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.<init>(OptimizedClassDescriptor.java:355)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedMarshallerUtils.classDescriptor(OptimizedMarshallerUtils.java:214)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:780)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeLinkedHashMap(OptimizedObjectOutputStream.java:440)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:765)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeFields(OptimizedObjectOutputStream.java:531)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:343)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:239)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObjectOverride(OptimizedObjectOutputStream.java:159)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:344)
	at java.util.concurrent.CopyOnWriteArrayList.writeObject(CopyOnWriteArrayList.java:973)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:333)
	... 218 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.apache.commons.csv.CSVFormat
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:338)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 263 common frames omitted
{noformat}

We really coudn't event guess which field of which object (type) cause the {{ClassNotFoundException}}.

The context information about what field and what object type cause the problem should be logged on each level of call stack.",,agura,githubbot,ivandasch,,,,,,,,,,"dspavlov commented on issue #3617: IGNITE-6860 Add logging and additional info while BinaryMarshaller fa…
URL: https://github.com/apache/ignite/pull/3617#issuecomment-517476482
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600","dspavlov commented on pull request #3617: IGNITE-6860 Add logging and additional info while BinaryMarshaller fa…
URL: https://github.com/apache/ignite/pull/3617
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 14 09:56:25 UTC 2018,,,,,,,,,,"0|i3mn2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Mar/18 13:52;githubbot;GitHub user ivandasch opened a pull request:

    https://github.com/apache/ignite/pull/3617

    IGNITE-6860 Add logging and additional info while BinaryMarshaller fa…

    …ils to serialize object.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ivandasch/ignite ignite-6860

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3617.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3617
    
----
commit 81071bec84d2cbb146acfb40d294e93cc44e7ffc
Author: Ivan Daschinskiy <ivandasch@...>
Date:   2018-03-07T13:43:59Z

    IGNITE-6860 Add logging and additional info while BinaryMarshaller fails to serialize object.

----
;;;","07/Mar/18 13:52;ivandasch;Please, review my pull-request

https://github.com/apache/ignite/pull/3617;;;","13/Mar/18 10:01;ivandasch;CI Tests seem [ok|https://ci.ignite.apache.org/viewLog.html?buildTypeId=IgniteTests24Java8_RunAll&buildId=1134940&branch_IgniteTests24Java8_RunAll=pull/3617/head];;;","14/Mar/18 09:56;agura;[~ivandasch] LGTM! Merged to master branch. Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: does not work in IE11,IGNITE-6859,13117523,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,Klaster_1,Klaster_1,10/Nov/17 08:46,15/Nov/17 10:10,14/Jul/23 06:20,13/Nov/17 06:23,,,,,,2.4,,wizards,,,,0,,,,"*What happens:*
Web console does not work in IE11 at all, it gets stuck at loading screen indefinitely and logs an error into console.

*Expected behavior:*
Web console should work in IE11.","WIndows 10, IE11",anovikov,Klaster_1,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Nov/17 08:46;Klaster_1;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12897041/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 15 10:10:18 UTC 2017,,,,,,,,,,"0|i3mmx3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Nov/17 09:00;Klaster_1;[~anovikov], please review.;;;","13/Nov/17 06:23;anovikov;Looks good for me. Merged to master.;;;","13/Nov/17 09:16;pkonstantinov;demo mode doesn't work. ;;;","15/Nov/17 07:21;Klaster_1;I've fixed base64 encoding issue in IE11, please check it now. You'll have to build a new web agent.;;;","15/Nov/17 08:28;pkonstantinov;Tested starting of demo mode on IE 11, FireFox 57, Chrome 62, Safari 11;;;","15/Nov/17 09:08;kuaw26;Looks good. Merged to master.
Please retest.;;;","15/Nov/17 10:10;pkonstantinov;re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wait for exchange inside GridReduceQueryExecutor.query which never finishes due to opened transaction,IGNITE-6858,13117505,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,ein,ein,10/Nov/17 07:56,16/Nov/17 09:46,14/Jul/23 06:20,16/Nov/17 09:46,2.3,,,,,2.4,,sql,,,,0,,,,"Infinite waiting in loop

{noformat}
        for (int attempt = 0;; attempt++) {
            if (attempt != 0) {
                try {
                    Thread.sleep(attempt * 10); // Wait for exchange.
                }
                catch (InterruptedException e) {
                    Thread.currentThread().interrupt();

                    throw new CacheException(""Query was interrupted."", e);
                }
            }
{noformat}

because of exchange will wait for partition eviction with opened transaction in a related thread

{noformat}
        at java.lang.Thread.sleep(Native Method)
        at o.a.i.i.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:546)
        at o.a.i.i.processors.query.h2.IgniteH2Indexing$8.iterator(IgniteH2Indexing.java:1236)
        at o.a.i.i.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:95)
{noformat}
",,ascherbakov,ein,ihorps,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 16 09:46:35 UTC 2017,,,,,,,,,,"0|i3mmt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Nov/17 11:43;ascherbakov;https://github.com/apache/ignite/pull/3020;;;","11/Nov/17 11:43;ascherbakov;https://ci.ignite.apache.org/viewQueued.html?itemId=938907;;;","16/Nov/17 09:29;ascherbakov;Latest tc result: https://ci.ignite.apache.org/viewLog.html?buildId=944130&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll;;;","16/Nov/17 09:46;sboikov;[~ascherbakov], 

I reviewed your fix and merged into master.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: invalid security checks during query execution,IGNITE-6856,13117501,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,10/Nov/17 07:41,22/Apr/20 08:44,14/Jul/23 06:20,02/Nov/18 11:59,2.3,,,,,2.8,,cache,sql,,,1,vulnerability,,,"Currently security check is performed inside {{IgniteCacheProxy}}. This is wrong place. Instead, we should perform it inside query processor after parsing when all affected caches are known.",,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 02 11:53:47 UTC 2018,,,,,,,,,,"0|i3mms7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/18 10:52;vozerov;Apparently, the problem is deeper than I thought in the first place. 
1) SQL permissions have never worked correctly. If query is executed through cache API, then we only check permissions against this cache. It means, that if one has read permission to one cache, it could be used as a ""window"" for all other caches.
2) Our new DML and DDL commands are not integrated into security circuit anyhow at the moment. They require different checks and permissions comparing to {{SELECT}} statements. Also note that with DDL we need to have completely new permissions for {{CREATE/DROP INDEX}}.;;;","23/Aug/18 15:17;isapego;[~vozerov], maybe, we should hide this ticket?;;;","28/Aug/18 05:14;vozerov;[~isapego], agree. I've made it private.;;;","02/Nov/18 09:34;vozerov;PR: https://github.com/apache/ignite/pull/5238;;;","02/Nov/18 09:36;vozerov;Test run (only SQL part is affected): https://ci.ignite.apache.org/viewLog.html?buildId=2226029;;;","02/Nov/18 11:53;vozerov;Tests are OK.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cassandra cache store does not clean prepared statements cache when remove old cassandra session,IGNITE-6853,13117352,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,jason.man@gmail.com,mcherkasov,mcherkasov,09/Nov/17 17:46,08/Mar/18 04:04,14/Jul/23 06:20,21/Jan/18 20:53,2.3,,,,,2.5,,cassandra,,,,2,important,,,"Cassandra cache store does not clean prepared statements cache when remove old cassandra session which can lead to:
 Prepared
statement cluster error detected, refreshing Cassandra session
com.datastax.driver.core.exceptions.InvalidQueryException: Tried to execute
unknown prepared query : 0xcad5832309a512feeb602eec67408130. You may have
used a PreparedStatement that was created with another Cluster instance.",,dsetrakyan,githubbot,irudyak,jason.man@gmail.com,mcherkasov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6252,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jan/18 08:12;jason.man@gmail.com;CassandraSessionImplTest.java;https://issues.apache.org/jira/secure/attachment/12906193/CassandraSessionImplTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Jan 21 20:54:23 UTC 2018,,,,,,,,,,"0|i3mlvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 11:52;mcherkasov;link to ul thread: http://apache-ignite-users.70518.x6.nabble.com/Ignite-cassandra-module-issue-tt13808.html;;;","24/Nov/17 09:04;githubbot;GitHub user jasonman107 opened a pull request:

    https://github.com/apache/ignite/pull/3088

    IGNITE-6853: Cassandra cache store does not clean prepared statements…

    IGNITE-6853: Cassandra cache store does not clean prepared statements cache when remove old cassandra session

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jasonman107/ignite ignite-6853

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3088.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3088
    
----
commit a025adba87d7f4df8f8c9b13a9ceaf9eb80942b9
Author: Jason Man <jason.man@clsa.com>
Date:   2017-11-24T08:52:57Z

    IGNITE-6853: Cassandra cache store does not clean prepared statements cache when remove old cassandra session

----
;;;","24/Nov/17 09:06;jason.man@gmail.com;The simple fix is to re-prepare the statement after recovering the connection.  PR available above with the fix.  Please review.  Thanks.;;;","02/Jan/18 10:03;jason.man@gmail.com;https://github.com/apache/ignite/pull/3088;;;","02/Jan/18 10:12;jason.man@gmail.com;[~irudyak], Please review my changes.;;;","11/Jan/18 21:31;irudyak;[~jason.man@gmail.com] It looks good to me except the fact that you introduced new testing framework Mockito. I am in general fine with Mockito, but such way it should be introduced on the global level in the parent project POM  and just reused by other modules like Cassandra.;;;","12/Jan/18 19:16;dsetrakyan;I agree with Igor. If we introduce a new mocking framework, it should be done at the project level and discussed with the community on the dev@ list. Is there any chance to create a patch without Mockito for now?;;;","16/Jan/18 02:12;jason.man@gmail.com;It's difficult to simulate the Cassandra errors without using a mocking framework.  I think this is why currently there is a lack of 'negative' tests covering the ignite-cassandra module, and why this bug was not discovered/fixed earlier.

Perhaps we could start discussing this in the community dev email list?;;;","16/Jan/18 06:14;irudyak;I think you can just manually implement analogs of mocks created by Mockito (inheriting mock classes from Cassandra Session, Cluster and etc.) and use them the same way like you already doing it in your tests.;;;","16/Jan/18 08:13;jason.man@gmail.com;This is less than ideal though.  I am trying this and the number of lines of the test class quickly grows from 1xx lines to 800+ lines of boiler plate code.  Even at this point I'm still not done mocking the objects manually.

Then eventually I get stuck at mocking this class com.datastax.driver.core.ColumnDefinitions because it lacks a public constructor so I couldn't call super() when I try to extend it.

See attachment of the work so far:  [^CassandraSessionImplTest.java]

I think there are good reasons Mockito is popular for testing and this is the use case where it is very powerful at helping write unit tests.  Perhaps we could really consider adopting it or some other mocking framework if there is a preference for something else?;;;","17/Jan/18 02:03;jason.man@gmail.com;As discussed, updated the PR with the change to put the mockito version at the parent POM and using it on the cassandra module.

[https://github.com/apache/ignite/pull/3088]

[~irudyak] please review.  Thanks.;;;","18/Jan/18 07:14;irudyak;Hi [~jason.man@gmail.com],

I added my comment to your PR.;;;","21/Jan/18 20:53;irudyak;[PR|https://github.com/apache/ignite/pull/3088]  was merged into Apache master branch.;;;","21/Jan/18 20:54;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3088
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: CREATE INDEX statement should accept no name indexes,IGNITE-6851,13117301,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,rkondakov,rkondakov,09/Nov/17 15:07,10/Nov/17 07:59,14/Jul/23 06:20,10/Nov/17 07:59,2.4,,,,,2.4,,sql,,,,0,,,,"Ignite SqlParser failed to parse CREATE INDEX statement with missed index name. 
Examples:
""CREATE INDEX idx_city_id on Person (city_id)"" - OK
""CREATE INDEX on Person (city_id)"" - Fail",,rkondakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-11-09 15:07:30.0,,,,,,,,,,"0|i3mljz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed k-means tests with multiple nodes,IGNITE-6849,13117221,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amalykh,chief,chief,09/Nov/17 10:30,05/Dec/17 18:51,14/Jul/23 06:20,10/Nov/17 11:21,,,,,,2.4,,ml,,,,0,,,,"* MapWrapperVector: missed no-op constructor.
* Cardinality violation exceptions.",,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7118,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 09 13:45:53 UTC 2017,,,,,,,,,,"0|i3ml27:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 13:45;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3009
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Add new version for multiple result set functionality,IGNITE-6841,13116935,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,08/Nov/17 10:35,10/Nov/17 10:14,14/Jul/23 06:20,10/Nov/17 10:13,2.3,,,,,2.4,,odbc,,,,0,odbc,,,"Changes made in IGNITE-6357 changed ODBC protocol, but protocol version was not increased. Need to fix it.",,githubbot,isapego,skalashnikov,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6836,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 10 10:14:57 UTC 2017,,,,,,,,,,"0|i3mjb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/17 10:42;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2995

    IGNITE-6841: Increased ODBC protocol version for multiple statements.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6841

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2995.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2995
    
----
commit 9feae7a5f6be5de66ee22b360050dc720974f5f6
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-11-08T10:40:29Z

    IGNITE-6841: Increased ODBC protocol version for multiple statements

----
;;;","08/Nov/17 10:54;isapego;Ready for review. [~ptupitsyn], [~tledkov-gridgain], can you take a look?;;;","09/Nov/17 13:49;isapego;[~skalashnikov] can you take a look too?;;;","09/Nov/17 13:50;tledkov-gridgain;[~isapego], the patch is OK with me.;;;","09/Nov/17 14:03;skalashnikov;[~isapego], Looks good to me.;;;","10/Nov/17 10:13;isapego;Merged to master.;;;","10/Nov/17 10:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2995
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Compatibility: flaky test testFoldersReuseCompatibility_2_1 & 2_2 & 2_3,IGNITE-6839,13116719,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,dpavlov,dpavlov,07/Nov/17 16:08,26/Jun/18 17:50,14/Jul/23 06:20,06/Apr/18 17:09,2.3,,,,,2.7,,persistence,,,,0,MakeTeamcityGreenAgain,Muted_test,,"Ignite Compatibility: 2 test are flaky:
  org.apache.ignite.compatibility.testsuites.IgniteCompatibilityBasicTestSuite: org.apache.ignite.compatibility.persistence.FoldersReuseCompatibilityTest.testFoldersReuseCompatibility_2_1 (fails: 2/55): 

https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-1418165996957466785&branch=%3Cdefault%3E&tab=testDetails
https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=1638023358531502921&tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E

{noformat}
junit.framework.AssertionFailedError: Directory [binary_meta, 135628fa_5763_46a1_88ff_8c0c8e51fc4e] is expected to exist [/data/teamcity/work/820be461cd64b574/work/binary_meta/135628fa_5763_46a1_88ff_8c0c8e51fc4e]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.TestCase.assertTrue(TestCase.java:192)
    at org.apache.ignite.compatibility.persistence.FoldersReuseCompatibilityTest.assertDirectoryExist(FoldersReuseCompatibilityTest.java:220)
    at org.apache.ignite.compatibility.persistence.FoldersReuseCompatibilityTest.assertPdsDirsDefaultExist(FoldersReuseCompatibilityTest.java:193)
    at org.apache.ignite.compatibility.persistence.FoldersReuseCompatibilityTest.runFoldersReuse(FoldersReuseCompatibilityTest.java:108)
    at org.apache.ignite.compatibility.persistence.FoldersReuseCompatibilityTest.testFoldersReuseCompatibility_2_1(FoldersReuseCompatibilityTest.java:86)
{noformat}

Test probaly indicates a bug in https://issues.apache.org/jira/browse/IGNITE-6285",,avinogradov,daradurvs,dpavlov,githubbot,vveider,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6285,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 09 08:40:35 UTC 2018,,,,,,,,,,"0|i3mhz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 16:14;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2990

    IGNITE-6839: delete binary meta before tests, PDS compatibility tests 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6839

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2990.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2990
    
----
commit e6dcb4af579aeb3e01bcd3555098e2ad49b28040
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-11-07T16:13:42Z

    IGNITE-6839: delete binary meta before tests, PDS compatibility tests improved

----
;;;","08/Nov/17 10:37;dpavlov;Hi [~daradurvs],
could you please advice on the follwing:
https://ci.ignite.apache.org/viewLog.html?buildId=933513&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCompatibility#testNameId-1418165996957466785

I've added cleanup of directory in my PR, put test is still flaky. I can see version of Ignite is correct:
{nofromat}
[2017-11-08 10:23:23,529][INFO ][Thread-20][jvm-07abff3d#2_1_0] >>> ver. 2.1.0
{nofromat}

but the same VM prints message introduced in Ignite 2.3
{noformat}
[2017-11-08 10:23:23,893][INFO ][Thread-20][jvm-07abff3d#2_1_0] [2017-11-08 10:23:23,892][INFO ][main][PdsFoldersResolver] Successfully created new persistent storage folder [/data/teamcity/work/820be461cd64b574/work/db/node00-4a55251f-725f-4f58-8605-34aa1efb5f3b]
{noformat}

Why classes from actual ignite code are come here?;;;","10/Nov/17 08:03;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2990
;;;","10/Nov/17 09:18;dpavlov;Hi [~daradurvs], did you have a chance to look through my comments above? Would you please assign issue to yourself if it is problem in framework code?;;;","10/Nov/17 15:49;dpavlov;Hi [~daradurvs], [~avinogradov] pointed me to the reason of this problem:
{noformat}
Ignite ver. 2.2.0#20171010-sha1:f0c64e7288ef94c84984a5e7a70f7038a539c6cd
{noformat}

it is not problem in framework, but some local issue: Ignite having newer code is deployed as 2.2.0 version.

To fix this problem it will be required to implement maven-local cleanup step before compatiblity testing.;;;","10/Nov/17 15:49;dpavlov;[~avinogradov], thank you!;;;","13/Nov/17 08:44;daradurvs;Hi, [~dpavlov], [~avinogradov], sorry for the delay with the answer.
bq. it is not problem in framework, but some local issue: Ignite having newer code is deployed as 2.2.0 version.
It is the definitely bad situation. In my opinion artifacts of previously released versions should equal to artifacts in Maven central repo. Manual deploying should be forbidden.
If necessary to test updates of releases, we should add a new [repository in Maven settings|https://maven.apache.org/guides/mini/guide-multiple-repositories.html] on TeamCity agents with such artifacts, which must be named like 2.2.1, 2.2.2 etc.
The framework supports this feature by tuning of Maven system environment.

bq. To fix this problem it will be required to implement maven-local cleanup step before compatiblity testing.
There are two ways to implement it:
1) Add a new step of cleaning local repo to the build configuration in TeamCity.
2) Implement a new method of cleaning local repo in Framework, in {{MavenUtils}} class.
At first sight, both ways can be implemented by calling Maven command [{{mvn dependency:purge-local-repository}} |https://maven.apache.org/plugins/maven-dependency-plugin/examples/purging-local-repository.html]
Vote for the first way because it will be called once, before running all test suites from Framework.;;;","13/Nov/17 09:42;dpavlov;Hi [~daradurvs], [~avinogradov],

I also like option
1) Add a new step of cleaning local repo to the build configuration in TeamCity.

[~avinogradov], do you know if there is some example of .m2 clearing step?;;;","13/Nov/17 09:47;avinogradov;[~dpavlov],
We should avoid m2 repo cleanup, this will make compatibility tests time consuming.
Instead of this we should find reason of this situation and fix it. ;;;","15/Nov/17 12:01;daradurvs;[~dpavlov], I also agree with [~avinogradov] that tests with cleaned repo will take significantly more time than now.
In my opinion, the best way of resolving this issue is the cleanup local repo at agents and prohibition of manual installation of artifacts in the local repo.
The framework works with artifacts: ignite-core-VERSION.jar and ignite-core-VERSION-tests.jar, you can just delete them and they will be downloaded from Maven central repo on demand.  ;;;","15/Nov/17 12:09;avinogradov;[~dpavlov]
Is it possible to clean all org.apache.ignite.* at agents m2? Only once :) 
I'm pretty sure that problem caused by incorrect 2.2 release tasks.;;;","17/Nov/17 16:40;dpavlov;Hi [~avinogradov], [~daradurvs],

I guess if we implement clean all org.apache.ignite.* at agents m2 it will not affect task performance as it can be affected by whole repository clean.

What do you think about cleaning ignite related artifacts before PDS compatibility suite run?;;;","17/Nov/17 17:23;avinogradov;[~dpavlov]
We should fix current problem. Lets clean all org.apache.ignite.* ONCE but everywhere.
Can we make such task and run it once?
There is no need to perform clean all org.apache.ignite.* until someone will install broken libs again :) ;;;","17/Nov/17 17:30;dpavlov;Hi [~avinogradov], 

It will require us to run it manually 48 times with run on specific agent (binded at start). It is manual work. If someone in community can help with this I would be glad :)

From the developer's point of view it is simpler to insert cleanup as build step. Moreover, for some tests repo clean may be required also.

As result I suggest to insert clean for ignite.* at 1st step. If Ignite PDS Compatiblity will be come dramatically slower, we will return to this question again. What do you think?;;;","26/Mar/18 13:32;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/3700

    IGNITE-6839 Ignite Compatibility: flaky test testFoldersReuseCompatibility_2_1 & 2_2 & 2_3

    ….util.IgniteUtils.classLoaderUrls(Ljava/lang/ClassLoader;)[Ljava/net/URL;"" was fixed; code cleanup

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-6839

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3700.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3700
    
----
commit 4a63069e026537fbecc4d33aca80a3ade25dbfd9
Author: Vyacheslav Daradur <daradurvs@...>
Date:   2018-03-26T13:31:40Z

    ignite-6839: ""java.lang.NoSuchMethodError: org.apache.ignite.internal.util.IgniteUtils.classLoaderUrls(Ljava/lang/ClassLoader;)[Ljava/net/URL;"" was fixed; code cleanup

----
;;;","06/Apr/18 09:50;daradurvs;Hi, [~dpavlov],

I did some research and found 2 issues:
 1) I suppose that the main reason of tests' flakiness was side effects of an issue which already fixed into IGNITE-7969
 2) There is a mistake introduced IGNITE-7070: {{dumpClasspath}} method use methods which absent in releases before 2.4 and can't properly work in case of exception at node startup.

I've prepared PR to resolve the 2'nd issue.

TC tests look good: [#1|https://ci.ignite.apache.org/viewLog.html?buildId=1183047], [#2|https://ci.ignite.apache.org/viewLog.html?buildId=1183040]

Please have a look if you have free time.

Also, I've filed a ticket for common improvements: IGNITE-8156;;;","06/Apr/18 17:09;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3700
;;;","06/Apr/18 17:09;dpavlov;[~daradurvs], thank you for your contribution.

Merged your changes to master (2.6).

I hope [~vveider] will implement cleaning ignite artifacts from local maven, so we mark issue as resolved now.;;;","09/Apr/18 08:40;vveider;[~dpavlov] -- artifacts are cleaned from local maven repository before every build (relevant for new scheme builds). Is that enough?;;;",,,,,,,,,,,,,,,,,,,,,,,
ODBC driver should handle ungraceful tcp disconnects,IGNITE-6835,13116689,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,alexey.tank2,alexey.tank2,07/Nov/17 14:42,17/Nov/17 14:08,14/Jul/23 06:20,14/Nov/17 13:09,2.1,,,,,2.4,,odbc,,,,0,odbc,,,"It is found that ungraceful TCP disconnect makes ODBC driver stuck at socket recv().
Ungraceful TCP disconnect could be caused:
1. Network failure (or new firewall rules)
2. Remote party shutdown (Half Closed Connection)

So, the proposal is:
setup socket  options: 
1) SO_KEEPALIVE enabled
2) TCP_KEEPIDLE to 60 sec. It is 2 hour by default
3) TCP_KEEPINTVL to 1 sec. It is 1 sec at Win and 75 sec at Linux by default.
4) send/receive buffers to some greater value (8k by default)
",,alexey.tank2,githubbot,isapego,ptupitsyn,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 14 13:09:43 UTC 2017,,,,,,,,,,"0|i3mhsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/17 11:51;githubbot;GitHub user apopovgg opened a pull request:

    https://github.com/apache/ignite/pull/2997

    IGNITE-6835 ODBC driver should handle ungraceful tcp disconnects

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6835

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2997.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2997
    
----
commit dd595013ea42af8f5c60a3a8f5ea7a6c7b9c8e7e
Author: apopov <tank2.alex@gmail.com>
Date:   2017-11-08T11:42:59Z

    IGNITE-6835 ODBC driver should handle ungraceful tcp disconnects

----
;;;","09/Nov/17 12:59;alexey.tank2;[~isapego] Please review the changes.
1. Set Socket options added to win & linux code
2. Set socket does not cause failure, just a log output
3. Send & receive buffer size is set to 64k;;;","09/Nov/17 13:16;isapego;[~apopov], see my comments:
1. {{SetOptions}} currently always return {{true}}, so it's unclear why does it has a return value at all.
2. I believe we should add diagnostic record and return {{SQL_SUCCESS_WITH_INFO}} in case we've failed to configure socket the right way.;;;","09/Nov/17 13:20;isapego;Ok, let me fix it myself. Thanks for your PR!;;;","10/Nov/17 10:09;isapego;Ready. [~skalashnikov], [~ptupitsyn], can you guys take a look?;;;","10/Nov/17 16:02;skalashnikov;[~isapego]
Here are my comments:

1. Duplicate {{LOG_MSG()}} in linux variant of {{SocketClient::Connect()}}

2. {{SocketClient::TrySetOptions()}}
It would be great to have additional {{LOG_MSG}} output with {{errno}}/{{WSAGetLastError()}} in case of {{setsockopt}} failures.

3. Windows {{SocketClient::TrySetOption()}}

{{struct tcp_keepalive settings;}}
I would initialize it with zero (struct tcp_keepalive settings = {0};) before filling individual fields.

;;;","13/Nov/17 08:39;ptupitsyn;[~isapego] looks good to me (aside from what Sergey noted above).;;;","13/Nov/17 15:42;isapego;Fixed. [~skalashnikov], check it out.;;;","14/Nov/17 09:17;skalashnikov;[~isapego]
Please correct the misprint ""Netwirking initialisation "". Otherwise, looks good.;;;","14/Nov/17 12:05;isapego;[~skalashnikov], good catch, fixed.;;;","14/Nov/17 12:51;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2997
;;;","14/Nov/17 13:09;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: runtime errors after each SCSS save,IGNITE-6833,13116595,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Klaster_1,Klaster_1,Klaster_1,07/Nov/17 07:41,14/Nov/17 06:28,14/Jul/23 06:20,10/Nov/17 03:45,,,,,,2.4,,wizards,,,,0,,,,"*What happens:*
Web console frontend throws runtime errors after every SCSS file save. You have to save any non-stylesheet file to fix the error.

*How to reproduce:*
1. Checkout master.
2. Start frontend development environment.
3. Save any SCSS file, no changes necessary.
4. Open local web console, open browser console, see the error.

*Expected behavior:*
No errors should happen after SCSS file saves.

*Note:*
I had a hand at this earlier: the error always mentions missing global dependency of some sort (i.e. _.head). If you replace all implicit lodash uses with explicit imports in every file, error eventually starts to point at polyfills (i.e. RegExp.esacpe). Maybe this will be of help, I did not progress any further.
","Windows 10, MacOS, master branch",alexdel,Klaster_1,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 07:42;Klaster_1;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12896355/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 14 06:28:31 UTC 2017,,,,,,,,,,"0|i3mh7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/17 08:21;alexdel;The problem with incremental sass compilation was solved by updating dependencies version. Please review;;;","10/Nov/17 02:11;pkonstantinov;Tested.;;;","10/Nov/17 03:45;kuaw26;Merged to master. Please retest.;;;","13/Nov/17 09:50;pkonstantinov;Please re-test in dev-mode;;;","14/Nov/17 06:28;Klaster_1;I confirm that the error is gone.

*Note:* {{webpack-dev-server}} was updated to a newer version which serves untranspiled ES2015 code when ""inline: true"" option's enabled. That means that web console won't work at all in non-ES2015 enabled browsers (IE9, Firefox 35, Chrome 29 and so on) when built in _development_ mode.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handle IO errors while checkpointing,IGNITE-6832,13116392,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,sbberkov,sbberkov,06/Nov/17 13:47,12/Feb/18 08:02,14/Jul/23 06:20,24/Jan/18 15:13,2.1,,,,,2.4,,,,,,0,,,,"If we get some IO error (like ""No spece left on device"") during checkpointing (GridCacheDatabaseSharedManager$WriteCheckpointPages:2509) node didn't stop as when get same error while writting WAL log and clients will get some ""Long running cache futures"". We must stop node in this case! Better - add some internal healthcheck and stop node anyway if  it won't pass for few times (do it with different issue).",,agoncharuk,githubbot,jokser,sbberkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6797,,IGNITE-6891,,,,,,,,IGNITE-6797,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 24 15:13:09 UTC 2018,,,,,,,,,,"0|i3mfyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jan/18 12:50;agoncharuk;For starters, we need to have a generic method to check the environment and invoke when an unrecoverable exception occurs.;;;","17/Jan/18 14:08;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/3394

    IGNITE-6832 Proper handling LFS and WAL persistence errors.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6832

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3394.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3394
    
----
commit ec62923d7ea35ca2cf6bc0030de628f9ad9872e2
Author: Jokser <jokserfn@...>
Date:   2018-01-17T14:03:58Z

    IGNITE-6832 Proper handling LFS and WAL persistence errors.

----
;;;","18/Jan/18 11:40;jokser;Ready to review

TeamCity results: https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F3394%2Fhead
;;;","24/Jan/18 15:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3394
;;;","24/Jan/18 15:13;agoncharuk;Merged to master and ignite-2.4;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite SPI: Test local port range failed on TC agents,IGNITE-6831,13116258,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dpavlov,dpavlov,05/Nov/17 16:12,08/Nov/17 13:03,14/Jul/23 06:20,08/Nov/17 11:32,2.2,,,,,2.4,,,,,,0,MakeTeamcityGreenAgain,,,"Thanks to [~ilyak] for locating failure reasons:

Test failed on TC agents, but passes locally
https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-8122916584508695460&tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E

Test is failed after applying commit: https://github.com/apache/ignite/pull/2972/commits/14f04c4ce80178dc55ee62b3cf09dd4ec129f3e2
caused by IGNITE-6667 implementation

{noformat}
org.apache.ignite.spi.IgniteSpiException: Failed to add node to topology because remote node is configured to use loopback address, but local node is not (consider changing 'localAddress' configuration parameter) [locNodeAddrs=[758001b16ff9/127.0.0.1, /172.17.0.5], rmtNodeAddrs=[127.0.0.1], creatorNodeId=24e3282c-a857-4d5f-beb4-255801500000]
{noformat}

where 172.17.0.5 is IP of TC agent coming from docker

",,dpavlov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6667,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 08 13:03:52 UTC 2017,,,,,,,,,,"0|i3mf5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/17 11:32;sboikov;Test added in IGNITE-6667 did not stop nodes (IgniteDiscoveryCacheReuseSelfTest), fixed.;;;","08/Nov/17 13:03;dpavlov;[~sboikov], [~ascherbakov], [~ilyak], thank you!

I've unmuted test. Test is now passing: https://ci.ignite.apache.org/viewLog.html?buildId=933907&buildTypeId=Ignite20Tests_IgniteSpi&tab=testsInfo;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Confusing messages ""SLF4J: Failed to load class"" at Ignite start",IGNITE-6828,13115906,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,alexey.tank2,alexey.tank2,alexey.tank2,03/Nov/17 12:19,30/Nov/17 12:48,14/Jul/23 06:20,30/Nov/17 12:47,2.1,,,,,2.4,,general,,,,0,,,,"How to reproduce:
1. build Ignite
2. go to examples\
3. run: mvn exec:java -Dexec.mainClass=""org.apache.ignite.examples.ExampleNodeStartup""

you will see the following confusing output:
SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.

SLF4J dependency comes from org.springframework.data:spring-data-commons:

[INFO] +- org.apache.ignite:ignite-spring-data:jar:2.3.0-SNAPSHOT:compile
[INFO] |  +- (org.apache.ignite:ignite-core:jar:2.3.0-SNAPSHOT:compile - omitted for duplicate)
[INFO] |  +- (org.apache.ignite:ignite-indexing:jar:2.3.0-SNAPSHOT:compile - omitted for duplicate)
[INFO] |  +- org.springframework.data:spring-data-commons:jar:1.13.1.RELEASE:compile
[INFO] |  |  +- (org.springframework:spring-core:jar:4.3.7.RELEASE:compile - omitted for duplicate)
[INFO] |  |  +- (org.springframework:spring-beans:jar:4.3.7.RELEASE:compile - omitted for duplicate)
[INFO] |  |  +- org.slf4j:slf4j-api:jar:1.7.24:compile
[INFO] |  |  \- org.slf4j:jcl-over-slf4j:jar:1.7.24:runtime
[INFO] |  |     \- (org.slf4j:slf4j-api:jar:1.7.24:runtime - omitted for duplicate)
[INFO] |  \- (org.apache.ignite:ignite-spring:jar:2.3.0-SNAPSHOT:compile - omitted for duplicate)

We should remove this dependency because it is confusing and does not affects to Ignite logging functionality

Dev-list:
http://apache-ignite-developers.2346864.n4.nabble.com/Confusing-slf4j-error-messages-td24334.html
",,alexey.tank2,githubbot,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 30 12:48:18 UTC 2017,,,,,,,,,,"0|i3mcz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 12:48;githubbot;GitHub user apopovgg opened a pull request:

    https://github.com/apache/ignite/pull/2980

    IGNITE-6828 Confusing messages SLF4J: Failed to load class at Ignite …

    …start

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6828

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2980.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2980
    
----
commit 49dea9dc830b7284d14bf5fc7087df7a32c2d712
Author: apopov <tank2.alex@gmail.com>
Date:   2017-11-03T12:47:05Z

    IGNITE-6828 Confusing messages SLF4J: Failed to load class at Ignite start

----
;;;","16/Nov/17 10:17;alexey.tank2;Or it could be second option - add slf to log4j package:

   <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-log4j12</artifactId>
       <version>1.7.24</version>
   </dependency>;;;","27/Nov/17 08:34;alexey.tank2;[~ntikhonov@apache.org], please review;;;","30/Nov/17 12:47;ntikhonov;[~alexey.tank2],
Thank you for your contribution! I've merged the changes to master.;;;","30/Nov/17 12:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2980
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unhandled interruption in GridH2Table,IGNITE-6825,13115828,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,sbberkov,sbberkov,03/Nov/17 06:31,15/Feb/18 12:47,14/Jul/23 06:20,03/Nov/17 11:07,2.1,,,,,2.4,,sql,,,,0,,,,"In GridH2Table.lock(Ses, excl, force) method we:
1) put session in sessions table;
2) add lock in H2 session locks
3) try to Lock(excl), but if in GridH2Table.lock(excl):277 while thread in lock.lockInterruptiblu() it got interruption - session with lock still alive in GridH2Table sessions map but no really lock acquired and when session will trying to unlock all acquired locks it will try to unlock it too and we get exception:
{noformat}
[ERROR][pub-#3855%DPL_GRID%DplGridNodeName%][o.a.i.i.p.q.h.t.GridMapQueryExecutor] Failed to run map query on local node.
 
org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:970)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:1029)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:1008)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest0(GridMapQueryExecutor.java:660)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest(GridMapQueryExecutor.java:506)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onMessage(GridMapQueryExecutor.java:206)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor$1.applyx(GridReduceQueryExecutor.java:145)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor$1.applyx(GridReduceQueryExecutor.java:143)
        at org.apache.ignite.internal.util.lang.IgniteInClosure2X.apply(IgniteInClosure2X.java:38)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.send(IgniteH2Indexing.java:2066)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.send(GridReduceQueryExecutor.java:1273)
        at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:733)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$8.iterator(IgniteH2Indexing.java:1214)
        at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:95)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$9.iterator(IgniteH2Indexing.java:1256)
        at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:95)
        at com.sbt.dpl.gridgain.collection.dataselectors.executor.cachequery.IgniteCacheQueryExecutor.iterator(IgniteCacheQueryExecutor.java:131)
        at com.sbt.dpl.gridgain.collection.dataselectors.executor.cachequery.impl.SqlQueryExecutor.iterator(SqlQueryExecutor.java:58)
        at com.sbt.dpl.gridgain.collection.dataselectors.executor.cachequery.impl.SqlQueryExecutor.iterator(SqlQueryExecutor.java:23)
        at com.sbt.dpl.gridgain.collection.dataselectors.impl.H2IndexesDataSelector.binaryIterator(H2IndexesDataSelector.java:142)
        at com.sbt.dpl.gridgain.collection.dataselectors.AbstractDataSelector.getIterator(AbstractDataSelector.java:110)
        at com.sbt.dpl.gridgain.collection.dataselectors.IndexesSwitchSelectDataSelector.getIterator(IndexesSwitchSelectDataSelector.java:106)
        at com.sbt.dpl.gridgain.collection.base.GGAbstractCollectionWithDataSelector.iterator(GGAbstractCollectionWithDataSelector.java:390)
        at ru.sbt.deposit_pf_api.comparators.EntityService.findDepositByProduct(EntityService.java:846)
        at ru.sbt.deposit_pf_api.comparators.EntityService.findDepositByProduct(EntityService.java:807)
        at ru.sbt.deposit_pf_api.comparators.EntityService.getDepositByObjectInner(EntityService.java:1350)
        at ru.sbt.deposit_pf_api.comparators.EntityService.getDepositByObject(EntityService.java:1169)
        at ru.sbt.deposit_pf_api.comparators.EntityService.getGroupingObject(EntityService.java:1098)
        at ru.sbt.deposit_pf_api.comparators.UnknownClassMapFunction$FindUnknownMapFunctionPredicate.apply(UnknownClassMapFunction.java:183)
        at ru.sbt.deposit_pf_api.comparators.UnknownClassMapFunction$FindUnknownMapFunctionPredicate.apply(UnknownClassMapFunction.java:1)
        at ru.sbt.deposit_pf_api.CollectionUtils.filter(CollectionUtils.java:55)
        at ru.sbt.deposit_pf_api.comparators.UnknownClassMapFunction.map(UnknownClassMapFunction.java:91)
        at ru.sbt.deposit_pf_api.comparators.UnknownClassMapFunction.map(UnknownClassMapFunction.java:1)
        at com.sbt.dpl.gridgain.Job.executeUserMap(Job.java:110)
        at com.sbt.dpl.gridgain.Job.execute(Job.java:68)
at com.sbt.dpl.gridgain.compute.ComputeJobAdapterWrapper.execute(ComputeJobAdapterWrapper.java:68)
        at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6629)
        at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
        at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1181)
        at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1908)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1562)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1190)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
        at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)
Caused by: org.h2.jdbc.JdbcSQLException: General error: ""java.lang.IllegalMonitorStateException: attempt to unlock read lock, not locked by current thread"" [50000-195]
        at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
        at org.h2.message.DbException.get(DbException.java:168)
        at org.h2.message.DbException.convert(DbException.java:295)
        at org.h2.message.DbException.toSQLException(DbException.java:268)
        at org.h2.message.TraceObject.logAndConvert(TraceObject.java:352)
        at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:123)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:963)
        ... 49 common frames omitted
Caused by: java.lang.IllegalMonitorStateException: attempt to unlock read lock, not locked by current thread
        at java.util.concurrent.locks.ReentrantReadWriteLock$Sync.unmatchedUnlockException(ReentrantReadWriteLock.java:444)
        at java.util.concurrent.locks.ReentrantReadWriteLock$Sync.tryReleaseShared(ReentrantReadWriteLock.java:428)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(AbstractQueuedSynchronizer.java:1341)
        at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.unlock(ReentrantReadWriteLock.java:881)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.unlock(GridH2Table.java:296)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.unlock(GridH2Table.java:389)
        at org.h2.engine.Session.unlockAll(Session.java:942)
        at org.h2.engine.Session.endTransaction(Session.java:713)
        at org.h2.engine.Session.commit(Session.java:661)
        at org.h2.command.Command.stop(Command.java:156)
        at org.h2.command.Command.executeQuery(Command.java:231)
        at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:111)
        ... 50 common frames omitted
{noformat}",,githubbot,sbberkov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7719,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 03 11:05:23 UTC 2017,,,,,,,,,,"0|i3mchr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 06:47;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2976

    IGNITE-6825

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6825

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2976.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2976
    
----
commit f6399b46770a11beb0fb131bf0ce87162f052f1e
Author: devozerov <ppozerov@gmail.com>
Date:   2017-11-03T06:45:44Z

    IGNITE-6825: SQL: Fixed GridH2Table unlock in case of interrupt.

----
;;;","03/Nov/17 06:49;vozerov;Test run: https://ci.ignite.apache.org/viewQueued.html?itemId=928807;;;","03/Nov/17 11:05;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/2976
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In case of incoming communication connection ping the old one if it's alive,IGNITE-6818,13115556,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,02/Nov/17 07:57,24/Jul/19 16:37,14/Jul/23 06:20,14/Nov/17 07:45,2.3,,,,,2.4,,,,,,0,,,,"Assume the following scenario:
1. Client opens connection to the server.
2. Server checks that it is a first connection to that node and accepts it.
3. By some reason firewall starts rejecting client messages with TCP reset flag set.
4. Client closes connection, but server doesn't know about it.
5. Client tries connect again.
6. Server rejects new connection, because it already has connection to that node.

Possible fix: on step 6 server must check old connection if it's alive by sending some communication message and check response. If old connection is dead - close it and accept new one.",,dkarachentsev,githubbot,,,,,,,,,,,"dspavlov commented on issue #3010: IGNITE-6818 - Handle half open connection in communication.
URL: https://github.com/apache/ignite/pull/3010#issuecomment-514707787
 
 
   
   IGNITE-6818 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:37;githubbot;600","dspavlov commented on pull request #3010: IGNITE-6818 - Handle half open connection in communication.
URL: https://github.com/apache/ignite/pull/3010
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6071,IGNITE-6542,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 20 15:44:12 UTC 2017,,,,,,,,,,"0|i3matj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Nov/17 13:14;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/3010

    IGNITE-6818 - Handle half open connection in communication.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6818

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3010.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3010
    
----
commit e0268851579b77d916212b08d567381ede076c64
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-11-09T13:12:44Z

    IGNITE-6818 - Handle half open connection in communication.

----
;;;","10/Nov/17 12:39;dkarachentsev;[~sboikov] please review.

Thanks!;;;","17/Nov/17 15:47;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3062

    Backport IGNITE-6818, fix test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-13069

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3062.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3062
    
----
commit 4a1415ad01ff9fde30d5c7c02e6d938f1515178d
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit e206b9f1fd3dbf927f940d558144a4796479ed5d
Author: vsisko <vsisko@gridgain.com>
Date:   2017-04-14T11:32:30Z

    IGNITE-4871 Added Kubernetes IP finder to Cluster configuration screen.
    (cherry picked from commit f978ff2)

commit b22738080101536a8af1ed60e70d693897e9bc7c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:54:02Z

    ignite-4173 Fix test. Permits must be released on node fail.
    
    (cherry picked from commit 1f867c6)

commit 41c5288606710b9c42983780ac7464a746d09eb0
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:56:25Z

    Merge remote-tracking branch 'origin/ignite-1.8.6' into ignite-1.8.6

commit 1985496ea98f4d7112a0b99727297427f343e9b2
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-17T07:20:41Z

    Add missed license headers.

commit ae794ab45b22abe1e570d5d29661396ea7c0f951
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-17T10:40:28Z

    IGNITE-4159 Fix version.

commit bf1049741f7a64728bd433f78262ba273f969848
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-17T16:00:30Z

    IGNITE-4954 - Configurable expiration timeout for Cassandra session. This closes #1785.

commit aca67066ceaf762fcd44ef0715a4ba0f941226a8
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-18T09:23:28Z

    Merge branch 'ignite-1.8.5-p1' into ignite-1.8.6

commit a4c70f12305c15cbf15a6e5eb7c500f883a8b317
Author: agura <agura@apache.org>
Date:   2017-04-20T17:45:58Z

    ignite-5041 NPE in deadlock detection fixed

commit d94172e7bb7ff4ebab422997e5c70f8cd03c0ae4
Author: agura <agura@apache.org>
Date:   2017-04-26T12:16:46Z

    Redundant test removed

commit f9ecacc625b458539775e6550bd9b7613ed38f21
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-28T08:46:23Z

    IGNITE-5077 - Support service security permissions
    
    backport from master
    (cherry picked from commit 6236b5f)

commit 91c899b909383c78b78b9bf0c8f233b8c75ef29e
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2017-04-28T12:48:57Z

    IGNITE-5081 - Removed redundant duplication of permissions in SecurityPermissionSetBuilder

commit b48a26b9b1e97fb8eb52c2a2f36005770922ac3d
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2017-04-28T12:53:33Z

    IGNITE-5080 - Fixes in SecurityBasicPermissionSet

commit f66c23cbb9a6f2c923ebf75c58f00afaf1c0b5f3
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-05-03T14:47:45Z

    IGNITE-4939 Receive event before cache initialized fix

commit 45b4d6316145d0b4b46713409f5e8fbe55ff4c41
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-05-04T09:11:37Z

    IGNITE-4939 Receive event before cache initialized fix

commit 075bcfca0ea22633be13cd02647e359ad6fdca16
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-04T09:21:04Z

    Fix flacky service deployment tests.

commit 25c06b50d46937cb39534cdf4147b862217289a2
Author: rfqu <rfq@list.ru>
Date:   2017-05-02T16:46:44Z

    ignite-4220 Support statements for JDBC and Cassandra store

commit 987c182686962673e70398395cb27e94f894713b
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2017-05-15T08:54:16Z

    Fixed ""IGNITE-5214 ConcurrentModificationException with enable DEBUG log level""
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

commit a5d2b9ba3ed1e72ef3970ecfed499a97f925ff2c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-15T14:39:52Z

    Fixed thread pools incorrect shutdown.
    
    (cherry picked from commit dacf973)

commit 5e08c2951522a640bf84b6c60f03f29edd970ffc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-15T17:24:10Z

    IGNITE-5225: Fix NPE caused by changes in IGNITE-4577.
    
    (cherry picked from commit d463840)

commit 62765b5b7598ab2a82b9c595e4a1276d9f2f5860
Author: sboikov <sboikov@gridgain.com>
Date:   2017-05-16T08:30:29Z

    DirectByteBufferStreamImpl: converted asserts into exceptions.
    
    (cherry picked from commit 560ef60)

commit ebc4a1648a80fbbd485e4c351fce9bee163318f9
Author: sboikov <sboikov@gridgain.com>
Date:   2017-05-16T08:30:29Z

    DirectByteBufferStreamImpl: converted asserts into exceptions.
    
    (cherry picked from commit 560ef60)

commit a609dc7a0bb2d923ecf79a25fb4c13f48eab5f5b
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-16T12:36:22Z

    Merge branch 'ignite-1.8.7.b1' into ignite-1.8.7

commit 9cd7e0f8d132f9b7c496fe64f75f271ef60da5eb
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-02-09T09:44:41Z

    IGNITE-4676 Fixed hang if closure executed nested internal task with continuation. Added test.
    (cherry picked from commit e7a5307)

commit 43bcc15127bd3fd7ac4e277da6da9e5fb6a855c0
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-03-30T04:08:10Z

    IGNITE-4838 Fixed internal task detection logic. Added tests.
    (cherry picked from commit ba68c6c)

commit 72882126c047b937bd5ed93c85e28262530e4977
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-03-30T04:08:10Z

    IGNITE-4838 Fixed internal task detection logic. Added tests.
    (cherry picked from commit ba68c6c)

commit 0d3d93cd4eeb589f1b6a11b48e429defad01c82f
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-05-18T16:11:08Z

    IGNITE-4842 Now containsKey() respects isReadFromBackup() flag.
    
    (cherry picked from commit d84fd29)

commit 4bf9123a6cff3b1fd17e8772bb0496108fce3f5e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-05-18T16:13:47Z

    Merge remote-tracking branch 'origin/ignite-1.8.7' into ignite-1.8.7

commit 2a818d36395dd1af23acf444adf396b2e2edbede
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2017-05-22T13:28:07Z

    Fixed ""IGNITE-4205 CassandraCacheStore should start IiteThread threads in loadCache() method""
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

commit 04fadd4a499239176ba21c390d93e30809abb4c1
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-05-23T12:42:20Z

    IGNITE-5223 Allow use local binary metadata cache if it's possible

----
;;;","20/Nov/17 15:44;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3062
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Unexpected exception during cache update"" via NullPointerException thrown using TouchedExpiryPolicy",IGNITE-6815,13115513,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,rsandberg,rsandberg,rsandberg,02/Nov/17 00:53,25/May/18 21:45,14/Jul/23 06:20,04/Apr/18 16:47,2.2,2.3,2.4,,,2.5,,cache,streaming,,,0,pull-request-available,,,"This is triggered when I apply an expiry on the cache during an import with StreamLoader, with no expiry on the cache, the import runs fine.

Somehow the following line of code is hit with val == null:
org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java:1253

Stack trace (version 2.3.0 release package from maven public repo):

{noformat}
16:04:25.259 ERROR o.a.i.i.p.c.d.d.a.GridDhtAtomicCache - <devid-dbid-map> Unexpected exception during cache update
org.apache.ignite.IgniteException: Runtime failure on search row: org.apache.ignite.internal.processors.cache.tree.SearchRow@68a4e885
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invoke(BPlusTree.java:1632)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:1201)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:343)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:1693)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2419)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.update(GridDhtAtomicCache.java:1882)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1735)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1627)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.sendSingleRequest(GridNearAtomicAbstractUpdateFuture.java:299)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.map(GridNearAtomicSingleUpdateFuture.java:483)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapOnTopology(GridNearAtomicSingleUpdateFuture.java:443)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.map(GridNearAtomicAbstractUpdateFuture.java:248)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.update0(GridDhtAtomicCache.java:1116)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.invoke0(GridDhtAtomicCache.java:825)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.invoke(GridDhtAtomicCache.java:783)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.invoke(IgniteCacheProxyImpl.java:1338)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.invoke(GatewayProtectedCacheProxy.java:1320)
	at org.apache.ignite.stream.StreamTransformer.receive(StreamTransformer.java:45)
	at org.apache.ignite.internal.processors.datastreamer.DataStreamerUpdateJob.call(DataStreamerUpdateJob.java:137)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6631)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$2.body(GridClosureProcessor.java:967)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:505)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.createRow(IgniteCacheOffheapManagerImpl.java:1253)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$AtomicCacheUpdateClosure.initResultOnCancelUpdate(GridCacheMapEntry.java:4267)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$AtomicCacheUpdateClosure.call(GridCacheMapEntry.java:4154)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$AtomicCacheUpdateClosure.call(GridCacheMapEntry.java:3918)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Invoke.invokeClosure(BPlusTree.java:2988)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Invoke.access$6200(BPlusTree.java:2882)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invokeDown(BPlusTree.java:1719)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invoke(BPlusTree.java:1602)
	... 23 common frames omitted
{noformat}


The NPE seems to be triggered only when applying a TTL to the cache:

{noformat}
        CacheConfiguration<DeviceId, DeviceIdCacheEntry> ccDevidCache =
                new CacheConfiguration<>();
        ccDevidCache = ccDevidCache.setExpiryPolicyFactory(FactoryBuilder.factoryOf(
                new TouchedExpiryPolicy(new Duration(DAYS, GRAPH_CACHE_TTL))))
                .setEagerTtl(true)
                .setName(""devid-dbid-map"");
        ignite.getOrCreateCache(ccDevidCache);
{noformat}


However it works fine with a 'plain' cache config:

{noformat}
ignite.createCache(""devid-dbid-map"");
{noformat}


","4.10.0-33-generic #37~16.04.1-Ubuntu SMP Fri Aug 11 14:07:24 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

Distributor ID:	LinuxMint
Description:	Linux Mint 18.2 Sonya
Release:	18.2
Codename:	sonya

",dpavlov,githubbot,rsandberg,tburch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5874,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 25 21:44:27 UTC 2018,,,,,,,,,,"0|i3majz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/17 04:17;rsandberg;Seems to stem from the following level of the stack trace (version 2.3.0 release package from maven public repo):

{noformat}
at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$AtomicCacheUpdateClosure.initResultOnCancelUpdate(GridCacheMapEntry.java:4267)
{noformat}


With an expiry configured, the block at line 4243 is entered and the `needUpdate` flag is then set. However, in this particular case, I'm using a StreamTransformer closure, where CacheInvokeEntry.setValue(...) is never called. This is perhaps why `storeLoadedVal` is null (line 4270), but it should have some value because an update is triggered by the TouchedExpiryPolicy to update the entry's timestamp. Something like the following might fix it:

starting at line 4266:

{noformat}
if (needUpdate) {
    if (storeLoadedVal == null) {
        storeLoadedVal = entry.val;
    }
    newRow = entry.localPartition().dataStore().createRow(
        entry.cctx,
        entry.key,
        storeLoadedVal,
        newVer,
        entry.expireTimeExtras(),
        oldRow);
...
{noformat}

;;;","02/Nov/17 04:52;rsandberg;I was able to come up with a workaround so am pretty sure the suggested fix above will work (or some safer variation). The workaround is to always call CacheInvokeEntry.setValue(...) somewhere within a StreamTransformer closure so if nothing else, call setValue() with the existing cache value if using TouchedExpiryPolicy.;;;","30/Mar/18 19:48;rsandberg;The following has fixed the problem in our production environment (stable for 3 months now)

 

2.3:

[https://github.com/reed-sandberg/ignite/commit/e6310e8d1481396f8cf3a5ede834989d0b277fc5]

 

2.4:

[https://github.com/reed-sandberg/ignite/commit/29ffe10e7be5ce3193b2fcb89c713c5269761c1c]

 ;;;","30/Mar/18 21:21;githubbot;GitHub user reed-sandberg opened a pull request:

    https://github.com/apache/ignite/pull/3726

    IGNITE-6815 NPE when using expiry policy

    
    * storeLoadedVal needs to be set at each branch of these conditionals
      or NPE in inevitible.
    
    
    A recent update on this Jira says a related patch is available from:
    https://issues.apache.org/jira/browse/IGNITE-5874
    
    but this is a bit different - has been running in production successfully at our site with this fix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/reed-sandberg/ignite rsandberg/IGNITE-6815-expiry-npe

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3726.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3726
    
----
commit 181ec8d2ec928e0ceee418fc16c6148a2c1feea4
Author: Reed Sandberg <reed.sandberg@...>
Date:   2018-02-07T23:02:05Z

    IGNITE-6815 NPE when using expiry policy
    
    * storeLoadedVal needs to be set at each branch of these conditionals
      or NPE in inevitible.

----
;;;","30/Mar/18 21:41;dpavlov;CI: https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_RunAll&branch_IgniteTests24Java8=pull%2F3726%2Fhead&tab=buildTypeStatusDiv;;;","02/Apr/18 10:34;dpavlov;CI results: there is no suspicious tests.

[~rsandberg], please assign issue to yourself and set status to 'Patch Available';;;","04/Apr/18 16:46;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3726
;;;","04/Apr/18 16:47;dpavlov;[~rsandberg] thank you for your contribution.

Merged to master, it will be available after 2.5 release, so I've changed version assignment.

https://git-wip-us.apache.org/repos/asf?p=ignite.git;a=commit;h=28304fdb5984eb426fbf6c20a71c2072a3339c6a ;;;","25/May/18 21:44;tburch;I ran into this issue and it also appears that the same thing is triggered with a
{code:java}
AccessedExpiryPolicy{code}
. Will the PR also fix that?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Readme.md: Update link to TC build and remove gitter,IGNITE-6812,13115426,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,dpavlov,dpavlov,dpavlov,01/Nov/17 18:12,10/Nov/17 10:58,14/Jul/23 06:20,01/Nov/17 23:46,,,,,,2.4,,documentation,,,,0,,,,"Related discussion http://apache-ignite-developers.2346864.n4.nabble.com/Set-gitter-aside-td23690.html
",,dmagda,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 10 10:58:20 UTC 2017,,,,,,,,,,"0|i3ma0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 18:26;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2967

    IGNITE-6812: Readme.md: Update link to TC build and remove glitter

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6812

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2967.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2967
    
----
commit 91448a9ee7a22fb9ced7104f09952ff989c9cf24
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-11-01T18:15:55Z

    IGNITE-6812: Readme.md: Update link to TC build and remove glitter

commit 748e6c4f139c91bacb6079e6cf4a2330a6169bf8
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-11-01T18:19:19Z

    IGNITE-6812: Readme.md: Update link to TC build and remove glitter

----
;;;","01/Nov/17 18:29;dpavlov;Hi [~dmagda], 
I've updated AI readme.md 
- with correct link to TC 
- and with removal gitter from github main page, 

could you please review my changes?;;;","01/Nov/17 23:46;dmagda;[~dpavlov], the changes have been merged to the master. Thanks!;;;","10/Nov/17 10:58;githubbot;Github user dspavlov closed the pull request at:

    https://github.com/apache/ignite/pull/2967
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JDBC Thin: SQLException(""Batch is empty."") when batch list is empty",IGNITE-6811,13115348,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,pkouznet,bvpyar,bvpyar,01/Nov/17 12:52,25/Oct/18 12:02,14/Jul/23 06:20,25/Oct/18 11:59,2.3,,,,,2.8,,jdbc,,,,0,,,,"The method executeBatch() throws SQLException(""Batch is empty."") when batch list is empty.
The api doc of java.sql.Statement.executeBatch() 
does not require an exception to be thrown in such situation.
I guess it is more convinient for client code if the exception is not thrown.",,bvpyar,githubbot,ignitetcbot,pkouznet,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 25 12:02:57 UTC 2018,,,,,,,,,,"0|i3m9jb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Oct/18 15:25;pkouznet;[~tledkov-gridgain] Could you please take a look at the patch?;;;","22/Oct/18 15:55;pkouznet;SQL Test run: https://ci.ignite.apache.org/viewQueued.html?itemId=2140637;;;","22/Oct/18 19:19;githubbot;GitHub user pavel-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/5051

    IGNITE-6811: Allowed empty batch in JDBC thin driver.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6811

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5051.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5051
    
----
commit 7cd8faa9280c9708989604f17c1859f25450a6b5
Author: Pavel Kuznetsov <palmihal@...>
Date:   2018-10-22T14:30:01Z

    ignite-6811: Added tests that reproduce the bug.
    
    When streaming is OFF we can't perform empty batch neither for Statement
    nor for PreparedStatement.

commit 7cd9dd1b250655b19dafd95ad54ced751ab6f3c9
Author: Pavel Kuznetsov <palmihal@...>
Date:   2018-10-22T15:19:38Z

    ignite-6811: Fixed empty batch.
    
    Now if empty batch is executed, no error is thrown. Empty updates counts
    array is returned. This is done due to usability reasons.

commit 6ed512e24f3e0184f1ad9236dbe2e518942324c4
Author: Pavel Kuznetsov <palmihal@...>
Date:   2018-10-22T15:53:21Z

    Merge remote-tracking branch 'origin/master' into ignite-6811

----
;;;","23/Oct/18 09:01;vozerov;Patch looks fine, but there are new tests failures in JDBC suite which needs to be fixed.;;;","23/Oct/18 12:26;pkouznet;Sure, fixed JdbcThinStatementSelfTest.testBatchEmpty - I forgot to update it
The other tests seems to be flacky
Run All: https://ci.ignite.apache.org/viewLog.html?buildId=2148137&;;;","24/Oct/18 16:03;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Queries (Binary Objects Simple Mapper){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2148134]]
* IgniteSqlSplitterSelfTest.testDistributedJoinsPlan (last started)

{color:#d04437}MVCC Cache{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2148084]]

{color:#d04437}Queries 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2148135]]
* IgniteBinaryCacheQueryTestSuite: OptimizedMarshallerIndexNameTest.testOptimizedMarshallerIndex - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 1{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2148103]]
* IgniteBinaryCacheTestSuite: IgniteCacheEntryListenerTxReplicatedTest.testNoOldValue - 0,0% fails in last 100 master runs.
* IgniteBinaryCacheTestSuite: IgniteCacheEntryListenerTxReplicatedTest.testSynchronousEvents - 0,0% fails in last 100 master runs.

{color:#d04437}PDS 1{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2148124]]
* IgnitePdsTestSuite: IgnitePdsDestroyCacheWithoutCheckpointsTest.testDestroyCachesAbruptlyWithoutCheckpoints - 0,0% fails in last 100 master runs.
* IgnitePdsTestSuite: BPlusTreeReuseListPageMemoryImplTest.testMassiveRemove2_true - 0,0% fails in last 100 master runs.

{color:#d04437}Compute (Grid){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2148040]]
* IgniteBinaryObjectsComputeGridTestSuite: GridEventStorageCheckAllEventsSelfTest.testFailoverJobTask - 0,0% fails in last 100 master runs.

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2148137&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","24/Oct/18 16:07;pkouznet;Changes are trivial and are located only in Jdbc thin driver, so problems seems to be not related to this changes.;;;","24/Oct/18 16:41;pkouznet;removed merge conflicts; re-ran only SQL tests: https://ci.ignite.apache.org/viewQueued.html?itemId=2157062;;;","25/Oct/18 12:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/5051
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tests are red for another MAX_BLOCK_SIZE value (4 or 8 instead 32),IGNITE-6805,13113368,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,zaleslaw,zaleslaw,zaleslaw,31/Oct/17 17:46,14/Nov/17 12:50,14/Jul/23 06:20,07/Nov/17 14:38,2.4,,,,,2.4,,ml,,,,0,,,,"In SparseDistributedBlockMatrixTest are red next tests
* testCacheBehaviour
* testSquareMatrixTimes
with another value of constant MAX_BLOCK_SIZE (4 or 8, for example)

In my opinion, it means that algorithm is incorrect for matrices with large number of blocks",,githubbot,zaleslaw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6693,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 07 09:06:30 UTC 2017,,,,,,,,,,"0|i3lxbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Nov/17 15:52;githubbot;GitHub user zaleslaw opened a pull request:

    https://github.com/apache/ignite/pull/2965

    IGNITE-6805: Tests are red for another MAX_BLOCK_SIZE value (4 or 8 instead 32)

    Added two test cases and fix in BlockMatrixStorage

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6805

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2965.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2965
    
----
commit 919c3f23622785afefe59e1d7642838e27163c86
Author: zaleslaw <zaleslaw.sin@gmail.com>
Date:   2017-11-01T15:23:08Z

    Fixed bugs in BlockMatrixStorage

commit ddf4548daa4729bc6b0ce010bdf5d60c16393663
Author: zaleslaw <zaleslaw.sin@gmail.com>
Date:   2017-11-01T15:40:13Z

    IGNITE-6805: Added missed JavaDocs

----
;;;","07/Nov/17 09:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2965
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridClusterStateProcessor$5 has no @GridInternal annotation,IGNITE-6796,13113218,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,akorensh,pkonstantinov,pkonstantinov,31/Oct/17 04:34,29/Jul/19 13:57,14/Jul/23 06:20,29/Jul/19 13:56,,,,,,2.8,,,,,,0,,,,,,ignitetcbot,ilyak,pkonstantinov,,,,,,,,,,"akorensh commented on pull request #6680: IGNITE-6796 Add @GridInternal annotation to GridClusterStateProcessor.CheckGlobalStateComputeRequest class
URL: https://github.com/apache/ignite/pull/6680
 
 
   ….
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 14:11;githubbot;600","akorensh commented on pull request #6720: IGNITE-6796 Add @GridInternal annotation to GridClusterStateProcessor.CheckGlobalStateComputeRequest class
URL: https://github.com/apache/ignite/pull/6720
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 13:04;githubbot;600","asfgit commented on pull request #6720: IGNITE-6796 Add @GridInternal annotation to GridClusterStateProcessor.CheckGlobalStateComputeRequest class
URL: https://github.com/apache/ignite/pull/6720
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 13:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 29 13:56:24 UTC 2019,,,,,,,,,,"0|i3lwe7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jul/19 14:59;ignitetcbot;{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}PDS (Indexing){color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=4311476]]
* IgnitePdsWithIndexingCoreTestSuite: IgnitePdsDiskErrorsRecoveringTest.testRecoveringOnWALWritingFail2

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4311438]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4311511&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","24/Jul/19 22:18;ignitetcbot;{panel:title=Branch: [pull/6720/head] Base: [master] : Possible Blockers (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Check Code Style]{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4390800]]

{color:#d04437}[Licenses Headers]{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4390801]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4388335&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","29/Jul/19 13:42;ignitetcbot;{panel:title=Branch: [pull/6720/head] Base: [master] : Possible Blockers (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Check Code Style]{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4390800]]

{color:#d04437}[Licenses Headers]{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4390801]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4388335&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","29/Jul/19 13:56;ilyak;Thank you for this fix! I have merged it to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Make default file name for saving scan results more informative,IGNITE-6795,13113216,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,31/Oct/17 04:07,15/Nov/17 06:28,14/Jul/23 06:20,14/Nov/17 01:45,,,,,,2.4,,wizards,,,,0,,,,"Currently file name is '<scan_name>' + '-all' in case if I want to save all result set. (export all)
I suggest to use 'scan-''<cahe_name>''-all'
",,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 15 06:28:23 UTC 2017,,,,,,,,,,"0|i3lwdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Oct/17 06:55;kuaw26;Please test in branch ignite-6795.
Also test export in Demo mode.;;;","07/Nov/17 10:26;pkonstantinov;Successfully tested in branch;;;","14/Nov/17 01:45;kuaw26;Merged to master.;;;","15/Nov/17 06:28;pkonstantinov;Successfully tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Rework sorting of caches list on Queries screen to ignore case,IGNITE-6789,13113010,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,kuaw26,kuaw26,30/Oct/17 12:20,19/Feb/19 02:10,14/Jul/23 06:20,30/Oct/17 12:21,,,,,,2.4,,wizards,,,,0,,,,"Currently caches are sorted case sensitive that is not very useful
",,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 07 08:01:13 UTC 2017,,,,,,,,,,"0|i3lv47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 12:21;kuaw26;Fixed. Merged to master.
Please retest.;;;","07/Nov/17 08:01;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite WAL reader fails on Tx marker record for persistent store with new style folder naming,IGNITE-6788,13113003,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dpavlov,dpavlov,dpavlov,30/Oct/17 11:45,01/Nov/17 14:43,14/Jul/23 06:20,01/Nov/17 00:42,2.3,,,,,2.4,,persistence,,,,0,,,,"After chaning paths generation and consistent ID to be UUID
also after introduction of Tx Markers
WAL records iterator begin to fail to deserialize consistentID from TX record in mode when binary_meta and marshaller cache paths are not provided
{noformat}
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.binary.BinaryMarshaller.unmarshal0(BinaryMarshaller.java:99)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.unmarshal(AbstractNodeNameAwareMarshaller.java:82)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.TxRecordSerializer.readConsistentId(TxRecordSerializer.java:211)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.TxRecordSerializer.readTxRecord(TxRecordSerializer.java:114)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.RecordDataV1Serializer.readRecord(RecordDataV1Serializer.java:812)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.RecordV1Serializer$1.readWithHeaders(RecordV1Serializer.java:96)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.RecordV1Serializer.readWithCrc(RecordV1Serializer.java:230)
	... 18 more
{noformat}",,agura,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5558,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 01 14:43:35 UTC 2017,,,,,,,,,,"0|i3lv2n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 13:36;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2945

    IGNITE-6788: Ignite WAL reader fails on Tx marker

    NPE during reading of Tx marker record for persistent store with new style folder naming

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6788

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2945.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2945
    
----

----
;;;","30/Oct/17 16:30;dpavlov;https://ci.ignite.apache.org/viewLog.html?buildId=920566&
https://github.com/apache/ignite/pull/2945
https://reviews.ignite.apache.org/ignite/review/IGNT-CR-386;;;","01/Nov/17 00:42;agura;LGTM. Merged to master branch.;;;","01/Nov/17 14:43;githubbot;Github user dspavlov closed the pull request at:

    https://github.com/apache/ignite/pull/2945
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCacheDatabaseSharedManager#persistenceEnabled used incorrectly,IGNITE-6778,13112594,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,agoncharuk,agoncharuk,27/Oct/17 12:44,03/Nov/17 08:55,14/Jul/23 06:20,03/Nov/17 08:55,2.3,,,,,2.4,,,,,,0,,,,"After IGNITE-6030 the method is used globally, however, it's usage is cache group context dependant.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 03 08:55:07 UTC 2017,,,,,,,,,,"0|i3lsk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 08:15;agoncharuk;TC run: https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=ignite-6778;;;","03/Nov/17 08:55;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Divergent descriptions of thread pool sizes in documentation,IGNITE-6775,13112553,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ilyak,ilyak,ilyak,27/Oct/17 09:50,27/Oct/17 15:39,14/Jul/23 06:20,27/Oct/17 15:39,,,,,,,,documentation,,,,0,,,,"https://apacheignite.readme.io/docs/thread-pools#section-services-pool
> The default pool size is max(8, total number of cores)

https://apacheignite.readme.io/docs/performance-tips#section-configure-thread-pools
> By default, Ignite has it's main thread pool size set to 2 times the available CPU count

What's ""main thread pool"" also?",,dmagda,ilyak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 27 15:39:51 UTC 2017,,,,,,,,,,"0|i3lsbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 15:39;dmagda;Fixed, thanks Ilya!
https://apacheignite.readme.io/v2.2/docs/performance-tips#configure-thread-pools;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Java doc is broken: ""LUDecomposition.java:40: warning - Tag @see: missing final '>'""",IGNITE-6774,13112548,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,krybakova,krybakova,27/Oct/17 09:19,25/Dec/17 09:24,14/Jul/23 06:20,27/Oct/17 16:56,2.1,,,,,,,ml,,,,0,,,,"Java doc is broken in the build

{noformat}
[WARNING] Javadoc Warnings
[WARNING] /var/lib/teamcity/data/work/6ae9d4bd0822354f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/decompositions/LUDecomposition.java:40: warning - Tag @see: missing final '>': ""<a href=""http://en.wikipedia.org/wiki/LU_decomposition"">Wikipedia</a>
[WARNING] TODO: Maybe we should make this class (and other decompositions) Externalizable.""
{noformat}",,krybakova,ntikhonov,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7297,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 27 16:56:01 UTC 2017,,,,,,,,,,"0|i3lsa7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 11:41;oignatenko;reproduced the issue in local build. Formal syntax of complained tag looks compliant with [javadoc specification|https://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#see]. Experimentally it looks like some sort of side effect of the next line (with ""TODO blah blah""). Wrapping that next line in html {{<p>}} tag did the trick and javadoc stopped complaining:

{code}<p>TODO: Maybe we should make this class (and other decompositions) Externalizable.</p>{code};;;","27/Oct/17 16:56;ntikhonov;Thank you for your contribution! I've merged the changes to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL exception messages are not descriptive,IGNITE-6772,13112509,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,rkondakov,ptupitsyn,ptupitsyn,27/Oct/17 08:16,19/Jan/18 09:04,14/Jul/23 06:20,19/Jan/18 09:03,,,,,,2.4,,sql,,,,0,usability,,,"Top level SQL exception messages are cryptic and not descriptive. Real details are buried deep inside inner exceptions.

For example, when there is a typo in table name, exception looks like this:

{code}
class org.apache.ignite.IgniteCheckedException: Failed to parse query: SELECT ""persons-sql"".""PERSON""._KEY, ""persons-sql"".""PERSON""._VAL from Person1, ""orgs-sql"".Organization where Person.OrgId = ""orgs-sql"".Organization._key and ""orgs-sql"".Organization.Name = ?
  at org.apache.ignite.internal.processors.platform.utils.PlatformUtils.unwrapQueryException(PlatformUtils.java:510)
  at org.apache.ignite.internal.processors.platform.cache.PlatformCache.runQuery(PlatformCache.java:1219)
  at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInStreamOutObject(PlatformCache.java:875)
  at org.apache.ignite.internal.processors.platform.PlatformTargetProxyImpl.inStreamOutObject(PlatformTargetProxyImpl.java:77)
Caused by: javax.cache.CacheException: class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to parse query: SELECT ""persons-sql"".""PERSON""._KEY, ""persons-sql"".""PERSON""._VAL from Person1, ""orgs-sql"".Organization where Person.OrgId = ""orgs-sql"".Organization._key and ""orgs-sql"".Organization.Name = ?
  at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:807)
  at org.apache.ignite.internal.processors.platform.cache.PlatformCache.runQuery(PlatformCache.java:1213)
  ... 2 more
Caused by: class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to parse query: SELECT ""persons-sql"".""PERSON""._KEY, ""persons-sql"".""PERSON""._VAL from Person1, ""orgs-sql"".Organization where Person.OrgId = ""orgs-sql"".Organization._key and ""orgs-sql"".Organization.Name = ?
  at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1293)
  at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSql(IgniteH2Indexing.java:1198)
  at org.apache.ignite.internal.processors.query.GridQueryProcessor$8.applyx(GridQueryProcessor.java:1957)
  at org.apache.ignite.internal.processors.query.GridQueryProcessor$8.applyx(GridQueryProcessor.java:1955)
  at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
  at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2293)
  at org.apache.ignite.internal.processors.query.GridQueryProcessor.queryDistributedSql(GridQueryProcessor.java:1954)
  at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySql(GridQueryProcessor.java:1934)
  at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:792)
  ... 3 more
Caused by: org.h2.jdbc.JdbcSQLException: Table ""PERSON1"" not found; SQL statement:
SELECT ""persons-sql"".""PERSON""._KEY, ""persons-sql"".""PERSON""._VAL from Person1, ""orgs-sql"".Organization where Person.OrgId = ""orgs-sql"".Organization._key and ""orgs-sql"".Organization.Name = ? [42102-195]
  at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
  at org.h2.message.DbException.get(DbException.java:179)
  at org.h2.message.DbException.get(DbException.java:155)
  at org.h2.command.Parser.readTableOrView(Parser.java:5506)
  at org.h2.command.Parser.readTableFilter(Parser.java:1260)
  at org.h2.command.Parser.parseSelectSimpleFromPart(Parser.java:1940)
  at org.h2.command.Parser.parseSelectSimple(Parser.java:2089)
  at org.h2.command.Parser.parseSelectSub(Parser.java:1934)
  at org.h2.command.Parser.parseSelectUnion(Parser.java:1749)
  at org.h2.command.Parser.parseSelect(Parser.java:1737)
  at org.h2.command.Parser.parsePrepared(Parser.java:448)
  at org.h2.command.Parser.parse(Parser.java:320)
  at org.h2.command.Parser.parse(Parser.java:292)
  at org.h2.command.Parser.prepareCommand(Parser.java:257)
  at org.h2.engine.Session.prepareLocal(Session.java:573)
  at org.h2.engine.Session.prepareCommand(Session.java:514)
  at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204)
  at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
  at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
  at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:398)
  at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1273)
{code}

As we can see, top level message is {{Failed to parse query}}, but the real problem that user needs to know is {{Table ""PERSON1"" not found}}. We should make sure that top level message includes the useful information and not some internal implementation details.

Make sure to add unit tests for common SQL query problems:
* Incorrect table name
* Incorrect column name
* Syntax error (shoukd include character index)

Error messages are part of the API.",,githubbot,kuaw26,ptupitsyn,rkondakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 19 09:04:16 UTC 2018,,,,,,,,,,"0|i3ls1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jan/18 16:19;githubbot;GitHub user dolphin1414 opened a pull request:

    https://github.com/apache/ignite/pull/3342

    IGNITE-6772: SQL exception messages made more informative.

    SQL exception messages made more informative.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6772

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3342.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3342
    
----
commit 2d3a681632e972ec647f41e9c5940a394cad3817
Author: rkondakov <rkondakov@...>
Date:   2018-01-09T16:14:39Z

    IGNITE-6772: SQL exception messages became more informative.

----
;;;","10/Jan/18 07:05;rkondakov;[~vozerov], [~ptupitsyn], I made a small fix for this problem, please review. [TC tests|https://ci.ignite.apache.org/viewQueued.html?itemId=1030457] are OK except some flaky tests in Queries2 suite and .NET tests which depends on the old error messages. [~ptupitsyn], I think we need to fix these .NET tests.;;;","10/Jan/18 09:16;ptupitsyn;[~rkondakov] you are right, .NET tests should be fixed, please go ahead.;;;","11/Jan/18 08:49;rkondakov;[~vozerov], [~ptupitsyn], TC run is ok, please review.;;;","11/Jan/18 09:44;ptupitsyn;[~rkondakov],
* {{JdbcResultSet}}: why change to {{cls.getSimpleName().toLowerCase()}}? Should we also include source class which we tried to convert?
* {{IgniteH2Indexing}}: I would include both the message and the query text, like {{Failed to parse query [error=..., query=...]}}.;;;","11/Jan/18 11:42;rkondakov;[~ptupitsyn], 
*  This made for an uniformity error messages between different types of JDBC drivers. JDBC and JDBC2 drivers used to return {{Value is an not instance of "" + cls.getName()}} in case of types mismatch. JDBC Thin driver returns {{Cannot convert to URL/boolean/float... etc.}} where type is hardcoded. It is useful not only for users but also for testing purposes.  I'm not sure if we need to add a source class to the message because this problem is relevant only for JDBC and JDBC2 drivers which are going to be deprecated as far as I know. Thin driver {{ResultSet}} includes value (but not value class) in the error message. E.g. {{""Cannot convert to float: "" + val}}. From my point of view it should be enough for debugging reasons.
* Query text is already included into the exception's message sent from the parsing engine: {{Column ""WRONG"" not found; SQL statement: select wrong from test \[42122-195\]}}. If we also include it here, query will be dublicated in the same message.;;;","11/Jan/18 12:09;ptupitsyn;Ok, looks good to me then. [~vozerov] please have a look as well.;;;","19/Jan/18 09:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3342
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Thin client: Cache id is calculated incorrectly,IGNITE-6768,13112344,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,26/Oct/17 16:55,27/Oct/17 09:56,14/Jul/23 06:20,27/Oct/17 09:56,,,,,,2.4,,platforms,thin client,,,0,.NET,,,"We use {{BinaryUtiles.GetStringHashCode}} to get cache id, but this method uses uppercase characters only.

Make sure to add tests for cache names with same name in different case.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6336,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 27 09:56:53 UTC 2017,,,,,,,,,,"0|i3lr0v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 09:56;ptupitsyn;Fixed in master: {{717c549248eb377dd0dc7b28c8707d2e496c5a4e}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"NearCache#localPeek(key, NEAR) always returns 'null' if the node, which owns the primary partition for the given key, left the cluster.",IGNITE-6767,13112341,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Timay,slava.koptilin,slava.koptilin,26/Oct/17 16:41,01/Sep/21 15:08,14/Jul/23 06:20,13/Nov/17 07:48,2.1,,,,,2.4,,cache,,,,1,,,,"{{IgniteCache.localPeek(key, PeekMode.NEAR)}} always returns 'null' if the node, which owns the primary partition for the given key, left the cluster, even if {{IgniteCache.get(key)}} was called.

How to reproduce:
# start two server nodes.
# create partitioned, atomic cache and populate data.
# start client node with near cache configured.
# perform {{IgniteCache.get(key)}} and check that {{IgniteCache.localPeek(key, PeekMode.NEAR)}} returns not null value.
# stop server node which owns primary partition for the given {{key}}.
# perform {{IgniteCache.get(key)}}.
# after that {{IgniteCache.localPeek(key, PeekMode.NEAR)}} always returns null value.

This issue was reported on the user-list: http://apache-ignite-users.70518.x6.nabble.com/Near-Cache-Topoolgy-change-causes-NearCache-to-always-miss-tt17539.html",,githubbot,sboikov,slava.koptilin,Timay,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6756,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 17:05;slava.koptilin;GridCacheNearClientHitTest.java;https://issues.apache.org/jira/secure/attachment/12894173/GridCacheNearClientHitTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,"NearCache#loaclPeek(key, NEAR) always returns 'null' if the node, which owns the primary partition for the given key, left the cluster.",false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 04 19:48:06 UTC 2017,,,,,,,,,,"0|i3lr07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 20:23;githubbot;GitHub user tonyschak opened a pull request:

    https://github.com/apache/ignite/pull/2939

    IGNITE-6767 reset of the topVer on loading of the entry

    I added though the loadedValue method should reset the topVer since it could be inval

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tonyschak/ignite IGNITE-6767

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2939.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2939
    
----
commit 84523afcec51c56f0a23ac2d248012841bce11aa
Author: Tim Onyschak <tonyschak@trustwave.com>
Date:   2017-10-26T18:59:33Z

    IGNITE-6767 reset of the topVer on loading of the entry

----
;;;","27/Oct/17 16:59;Timay;I cannot claim ticket, but submitted a pull request. I added a reset of the topVer in the loadedValue. My thoughts were a reset would be proper when loading from the cluster. ;;;","08/Nov/17 10:35;slava.koptilin;Hi [~Timay]

1. Please add the test to the {{IgniteCacheTestSuite2}}

2. I would prefer the following patch which is very similar to the provided by you

{code:java}
--- a/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearCacheEntry.java
+++ b/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearCacheEntry.java
@@ -379,7 +379,7 @@ public class GridNearCacheEntry extends GridDistributedCacheEntry {
                 CacheObject old = this.val;
                 boolean hasVal = hasValueUnlocked();

-                if (this.dhtVer == null || this.dhtVer.compareTo(dhtVer) < 0) {
+                if ((this.dhtVer == null || this.dhtVer.compareTo(dhtVer) < 0) || !valid(topVer)) {
                     primaryNode(primaryNodeId, topVer);

                     update(val, expireTime, ttl, ver, true);
{code};;;","08/Nov/17 10:41;slava.koptilin;Hi [~sboikov]

Could you please review the patch?;;;","08/Nov/17 17:35;Timay;Patch has been updated with suggested changes. ;;;","13/Nov/17 07:48;sboikov;Fix was merged into master.

Thanks;;;","04/Dec/17 19:30;githubbot;Github user tonyschak closed the pull request at:

    https://github.com/apache/ignite/pull/2939
;;;","04/Dec/17 19:45;githubbot;GitHub user tonyschak reopened a pull request:

    https://github.com/apache/ignite/pull/2939

    IGNITE-6767 reset of the topVer on loading of the entry

    I added though the loadedValue method should reset the topVer since it could be inval

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tonyschak/ignite IGNITE-6767

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2939.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2939
    
----
commit 84523afcec51c56f0a23ac2d248012841bce11aa
Author: Tim Onyschak <tonyschak@trustwave.com>
Date:   2017-10-26T18:59:33Z

    IGNITE-6767 reset of the topVer on loading of the entry

commit 1efbd512374a96852e8f92f980c23df543acd322
Author: Tim Onyschak <tonyschak@trustwave.com>
Date:   2017-11-08T17:25:20Z

    IGNITE-6767 updated from comments by Vyacheslav Koptilin

commit 6b7918446eaeef7ad801250db69fd4f28e477d3e
Author: Tim Onyschak <tonyschak@trustwave.com>
Date:   2017-11-08T17:33:53Z

    IGNITE-6767 Removed topUpdate from original fix, will be taken care of with !valid() check

----
;;;","04/Dec/17 19:48;githubbot;Github user tonyschak closed the pull request at:

    https://github.com/apache/ignite/pull/2939
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Error when closing executed DML statement.,IGNITE-6765,13112293,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,isapego,isapego,isapego,26/Oct/17 14:24,22/Mar/18 11:56,14/Jul/23 06:20,03/Nov/17 09:51,2.2,,,,,2.4,,odbc,,,,0,important,odbc,,"There is an error, on attempt to close executed DML statement:
{code}
SQLRETURN ret = SQLExecDirect(stmt, ""UPDATE Person SET salary=1000 WHERE _key=2"" , SQL_NTS);
assert(ret == SQL_SUCCESS);
ret = SQLFreeStmt(stmt, SQL_CLOSE);
assert(ret == SQL_SUCCESS);
{code}

The error message is ""Failed to close statement: HY000: Failed to find query with ID: <some_id>""",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 22 11:56:05 UTC 2018,,,,,,,,,,"0|i3lqpj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Oct/17 14:57;isapego;Seems to be fixed by IGNITE-6357;;;","31/Oct/17 12:14;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2949

    IGNITE-6765: Added ODBC test for closing cursor after DML execution

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6765

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2949.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2949
    
----
commit dd7e9e5d69c09f2a781fc177d12c3a6a47a5af1a
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-10-31T12:08:07Z

    IGNITE-6765: Added test

----
;;;","01/Nov/17 14:20;isapego;Ready. [~ptupitsyn], can you take a look? I've only added a test to confirm the correct behaviour.;;;","01/Nov/17 20:49;ptupitsyn;[~isapego] looks good to me.;;;","03/Nov/17 09:51;isapego;Merged to master.;;;","22/Mar/18 11:56;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2949
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SparseDistributedMatrixExample failed with NPE,IGNITE-6762,13112270,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,chief,skozlov,skozlov,26/Oct/17 12:34,08/Dec/17 11:07,14/Jul/23 06:20,08/Dec/17 11:07,2.3,,,,,2.4,,examples,ml,,,0,,,,"1. Open ignite-examples project in IDEA
2. Start 3 nodes by {{ExampleNodeStartup}}
3. Run {{SparseDistributedMatrixExample}}. It throws the exception: 
{noformat}
>>> Ignite grid started.
>>> Create new SparseDistributedMatrix inside IgniteThread.
Exception in thread ""SparseDistributedMatrixExample-#51"" java.lang.NullPointerException
	at org.apache.ignite.ml.math.distributed.CacheUtils.sum(CacheUtils.java:170)
	at org.apache.ignite.ml.math.distributed.CacheUtils.sparseSum(CacheUtils.java:160)
	at org.apache.ignite.ml.math.impls.matrix.SparseDistributedMatrix.sum(SparseDistributedMatrix.java:185)
	at org.apache.ignite.examples.ml.math.matrix.SparseDistributedMatrixExample.lambda$main$1(SparseDistributedMatrixExample.java:58)
	at java.lang.Thread.run(Thread.java:745)
[15:28:44] Ignite node stopped OK [uptime=00:00:04.399]

{noformat}",,chief,githubbot,oignatenko,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 08 11:07:18 UTC 2017,,,,,,,,,,"0|i3lqkf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 12:19;oignatenko;I managed to reproduce this issue in branch [ignite-2.3|https://github.com/apache/ignite/tree/ignite-2.3]. Note that amount of nodes at step 2 seems to be critically important to catch it: in my attempts starting an example without nodes or with only one node passed without issues while reported exception happened only when 2 and 3 nodes were started.;;;","08/Nov/17 14:49;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/3003

    IGNITE-6762: SparseDistributedMatrixExample failed with NPE.

    Fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6762

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3003.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3003
    
----
commit 51cae84a705042e123a063ef0e323333d6e1b910
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-11-03T13:01:39Z

    IGNITE-6762: SparseDistributedMatrixExample failed with NPE.
    Fixed.

----
;;;","09/Nov/17 13:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3003
;;;","08/Dec/17 11:07;chief;merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skip upload ignite-dev-utils module into maven repository,IGNITE-6751,13111939,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,25/Oct/17 11:44,25/Oct/17 15:53,14/Jul/23 06:20,25/Oct/17 15:53,,,,,,2.3,,build,,,,0,,,,Skip upload ignite-dev-utils module into maven repository,,dpavlov,githubbot,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 25 15:51:24 UTC 2017,,,,,,,,,,"0|i3loj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Oct/17 11:54;githubbot;GitHub user oleg-ostanin opened a pull request:

    https://github.com/apache/ignite/pull/2926

    IGNITE-6751 skipped upload ignite-dev-utils module into maven repository

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6751

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2926.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2926
    
----
commit ab97135ab0add6f97513dfebba0fa27f63dd22e8
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-10-25T11:53:52Z

    IGNITE-6751 skipped upload ignite-dev-utils module into maven repository

----
;;;","25/Oct/17 11:55;oleg-ostanin;[~vozerov]
Please review:
https://github.com/apache/ignite/pull/2926;;;","25/Oct/17 13:31;dpavlov;Hi [~oleg-ostanin], why it is not desired to deploy dev-utils module to maven repo?;;;","25/Oct/17 15:51;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2926
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid calculation of required node memory,IGNITE-6748,13111880,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,vsisko,vsisko,25/Oct/17 06:35,26/Oct/17 07:33,14/Jul/23 06:20,26/Oct/17 07:33,2.3,,,,,2.3,,persistence,,,,0,,,,"# org.apache.ignite.internal.managers.discovery.GridDiscoveryManager#requiredOffheap calculate size of system and configured data regions 2 times.
# org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager#getDataStorageConfiguration initialize assign 2 variable by getDataStorageConfiguration result
#  When data regions are not configured org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager#checkpointBufferSize get DataStorageConfiguration.DFLT_DATA_REGION_MAX_SIZE constant instead of maximum size of default data region.",,agoncharuk,ptupitsyn,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 26 07:33:08 UTC 2017,,,,,,,,,,"0|i3lo6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Oct/17 08:33;agoncharuk;In the scope of IGNITE-6030 it looks like there is no much sense to have checkpoint page buffer size in DataStorageConfiguration. The checkpoint page buffer size should be moved to DataRegionConfiguration, then the size calculation will be straightforward.;;;","25/Oct/17 10:05;ptupitsyn;Moved {{CheckpointPageBufferSize}} to {{DataRegionConfiguration}} on .NET side.;;;","26/Oct/17 07:33;agoncharuk;Merged to master and ignite-2.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridDeploymentPerVersionStore retries loading class infinitely,IGNITE-6737,13111708,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,v.pyatkov,v.pyatkov,24/Oct/17 14:03,08/Nov/17 08:47,14/Jul/23 06:20,08/Nov/17 08:47,,,,,,2.4,,,,,,0,,,,"{noformat}
2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentLocalStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Deployment meta for local deployment: GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=null, sndNodeId=1b852edd-1f41-4489-af78-dbe8226a9b16, clsLdrId=null, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=n/a]

2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentLocalStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Failed to load class for local auto-deployment [ldr=grid:com.sbt.core.envelope.container.FileClassLoader@3e4327dc, meta=GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=null, sndNodeId=1b852edd-1f41-4489-af78-dbe8226a9b16, clsLdrId=null, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=n/a]]

2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentPerVersionStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Deployment cannot be reused (class does not exist on participating nodes) [dep=SharedDeployment [rmv=false, super=GridDeployment [ts=1508810401226, depMode=SHARED, clsLdr=GridDeploymentClassLoader [id=7953e0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, singleNode=false, nodeLdrMap={bc5a1eaa-e056-4bd8-b7d3-684e75522b81=373cd8c4f51-bc5a1eaa-e056-4bd8-b7d3-684e75522b81, 3018f0bb-7c94-410e-9a0f-028c3fbc8aab=a5b822c4f51-3018f0bb-7c94-410e-9a0f-028c3fbc8aab, f1774f8d-84e9-43c3-86a3-d7a47c291f45=afd441c4f51-f1774f8d-84e9-43c3-86a3-d7a47c291f45, 5a0b56e8-a8ae-4742-834c-d688592866c4=a6e985c4f51-5a0b56e8-a8ae-4742-834c-d688592866c4, 65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea=bcd257c4f51-65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea, 045ddd4d-3e39-4b25-bf52-c264f59efbc6=e6ec81c4f51-045ddd4d-3e39-4b25-bf52-c264f59efbc6, afadbbce-542d-435c-b85a-78d395b463a5=967664c4f51-afadbbce-542d-435c-b85a-78d395b463a5, 4b2662e9-d525-4d96-936c-8cc645464e65=591541c4f51-4b2662e9-d525-4d96-936c-8cc645464e65}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], clsLdrId=7953e0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, userVer=0, loc=false, sampleClsName=com.sbt.fea_cc.services.business.autoStopTurnkeySettings.AutoStopTurnkeySettingsService$FindOrderTurnkeyForSuspend, pendingUndeploy=false, undeployed=false, usage=0]], meta=GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=0, sndNodeId=4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdrId=898962c4f51-4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=1508811118744]]


2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentPerVersionStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Deployment cannot be reused (random class could not be loaded from sender node) [dep=SharedDeployment [rmv=false, super=GridDeployment [ts=1508810401226, depMode=SHARED, clsLdr=GridDeploymentClassLoader [id=7953e0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, singleNode=false, nodeLdrMap={bc5a1eaa-e056-4bd8-b7d3-684e75522b81=373cd8c4f51-bc5a1eaa-e056-4bd8-b7d3-684e75522b81, 3018f0bb-7c94-410e-9a0f-028c3fbc8aab=a5b822c4f51-3018f0bb-7c94-410e-9a0f-028c3fbc8aab, f1774f8d-84e9-43c3-86a3-d7a47c291f45=afd441c4f51-f1774f8d-84e9-43c3-86a3-d7a47c291f45, 5a0b56e8-a8ae-4742-834c-d688592866c4=a6e985c4f51-5a0b56e8-a8ae-4742-834c-d688592866c4, 65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea=bcd257c4f51-65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea, 045ddd4d-3e39-4b25-bf52-c264f59efbc6=e6ec81c4f51-045ddd4d-3e39-4b25-bf52-c264f59efbc6, afadbbce-542d-435c-b85a-78d395b463a5=967664c4f51-afadbbce-542d-435c-b85a-78d395b463a5, 4b2662e9-d525-4d96-936c-8cc645464e65=591541c4f51-4b2662e9-d525-4d96-936c-8cc645464e65}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], clsLdrId=7953e0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, userVer=0, loc=false, sampleClsName=com.sbt.fea_cc.services.business.autoStopTurnkeySettings.AutoStopTurnkeySettingsService$FindOrderTurnkeyForSuspend, pendingUndeploy=false, undeployed=false, usage=0]], meta=GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=0, sndNodeId=4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdrId=898962c4f51-4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=1508811118744]]

2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentPerVersionStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - None of the existing class-loaders fits (will try to create a new one): GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=0, sndNodeId=4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdrId=898962c4f51-4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=1508811118744]

2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentPerVersionStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Retrying due to concurrency issues: GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=0, sndNodeId=4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdrId=898962c4f51-4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=1508811118744]

2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentPerVersionStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Skipping deployment (loaders on remote node are different) [dep=SharedDeployment [rmv=false, super=GridDeployment [ts=1508809994185, depMode=SHARED, clsLdr=GridDeploymentClassLoader [id=a699d0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, singleNode=false, nodeLdrMap={bc5a1eaa-e056-4bd8-b7d3-684e75522b81=373cd8c4f51-bc5a1eaa-e056-4bd8-b7d3-684e75522b81, 3018f0bb-7c94-410e-9a0f-028c3fbc8aab=a5b822c4f51-3018f0bb-7c94-410e-9a0f-028c3fbc8aab, 09c2b7ff-e4d1-4b73-b1f3-1e51922ef654=a02961c4f51-09c2b7ff-e4d1-4b73-b1f3-1e51922ef654, 450f9f88-62e8-4e97-9e75-c5628f09cfda=49d551c4f51-450f9f88-62e8-4e97-9e75-c5628f09cfda, 4457016c-5f93-450f-b2a7-86bd25f536cf=371751c4f51-4457016c-5f93-450f-b2a7-86bd25f536cf, 5a0b56e8-a8ae-4742-834c-d688592866c4=a6e985c4f51-5a0b56e8-a8ae-4742-834c-d688592866c4, f1774f8d-84e9-43c3-86a3-d7a47c291f45=afd441c4f51-f1774f8d-84e9-43c3-86a3-d7a47c291f45, 65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea=bcd257c4f51-65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea, afadbbce-542d-435c-b85a-78d395b463a5=967664c4f51-afadbbce-542d-435c-b85a-78d395b463a5, 045ddd4d-3e39-4b25-bf52-c264f59efbc6=e6ec81c4f51-045ddd4d-3e39-4b25-bf52-c264f59efbc6, 7eaf77f9-5fdc-42ef-8424-e2eb067a16a1=f80341c4f51-7eaf77f9-5fdc-42ef-8424-e2eb067a16a1, 4b2662e9-d525-4d96-936c-8cc645464e65=591541c4f51-4b2662e9-d525-4d96-936c-8cc645464e65, 92cfc07a-3895-4267-98d0-d84939620c35=a77541c4f51-92cfc07a-3895-4267-98d0-d84939620c35}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], clsLdrId=a699d0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, userVer=0, loc=false, sampleClsName=com.sbt.kmd.mapper.integration.dpl.search.storage.SearchMapFunction, pendingUndeploy=false, undeployed=false, usage=0]], meta=GridDeploymentMetadata [depMode=SHARED, alias=com.sbt.bgp.task.AffinityApplicationTaskCallable, clsName=com.sbt.bgp.task.AffinityApplicationTaskCallable, userVer=0, sndNodeId=4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdrId=898962c4f51-4457016c-5f93-450f-b2a7-86bd25f536cf, clsLdr=null, participants=null, parentLdr=null, record=true, nodeFilter=null, seqNum=1508811118744]]

2017-10-24 14:34:06 [DEBUG] [org.apache.ignite.internal.managers.deployment.GridDeploymentPerVersionStore] [pub-#5258%DPL_GRID%DplGridNodeName%] - Adding deployment to check: SharedDeployment [rmv=false, super=GridDeployment [ts=1508810401226, depMode=SHARED, clsLdr=GridDeploymentClassLoader [id=7953e0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, singleNode=false, nodeLdrMap={bc5a1eaa-e056-4bd8-b7d3-684e75522b81=373cd8c4f51-bc5a1eaa-e056-4bd8-b7d3-684e75522b81, 3018f0bb-7c94-410e-9a0f-028c3fbc8aab=a5b822c4f51-3018f0bb-7c94-410e-9a0f-028c3fbc8aab, f1774f8d-84e9-43c3-86a3-d7a47c291f45=afd441c4f51-f1774f8d-84e9-43c3-86a3-d7a47c291f45, 5a0b56e8-a8ae-4742-834c-d688592866c4=a6e985c4f51-5a0b56e8-a8ae-4742-834c-d688592866c4, 65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea=bcd257c4f51-65fdae9e-78c7-49a2-b9ee-a8e99dbb87ea, 045ddd4d-3e39-4b25-bf52-c264f59efbc6=e6ec81c4f51-045ddd4d-3e39-4b25-bf52-c264f59efbc6, afadbbce-542d-435c-b85a-78d395b463a5=967664c4f51-afadbbce-542d-435c-b85a-78d395b463a5, 4b2662e9-d525-4d96-936c-8cc645464e65=591541c4f51-4b2662e9-d525-4d96-936c-8cc645464e65}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], clsLdrId=7953e0c4f51-1b852edd-1f41-4489-af78-dbe8226a9b16, userVer=0, loc=false, sampleClsName=com.sbt.fea_cc.services.business.autoStopTurnkeySettings.AutoStopTurnkeySettingsService$FindOrderTurnkeyForSuspend, pendingUndeploy=false, undeployed=false, usage=0]]
{noformat}",,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4806,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Nov 08 08:15:12 UTC 2017,,,,,,,,,,"0|i3ln4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Oct/17 14:46;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/2934

    IGNITE-6737

    GridDeploymentPerVersionStore retries loading class infinitely

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6737

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2934.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2934
    
----
commit c6ba3255ee0e822baa05c135083ebd356feb6cee
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2017-10-26T14:44:54Z

    IGNITE-6737
    GridDeploymentPerVersionStore retries loading class infinitely

----
;;;","07/Nov/17 08:25;v.pyatkov;Looks to, TC passed
https://ci.ignite.apache.org/viewModification.html?modId=442914&personal=false&buildTypeId=&tab=vcsModificationTests;;;","08/Nov/17 08:15;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2934
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Licenses for Sqlline are missing,IGNITE-6726,13111670,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,24/Oct/17 12:09,02/Aug/19 20:23,14/Jul/23 06:20,25/Oct/17 09:45,2.3,,,,,2.3,,build,,,,0,,,,Licenses for Sqlline are missing,,avinogradov,oleg-ostanin,,,,,,,,,,,"dspavlov commented on issue #2920: IGNITE-6726
URL: https://github.com/apache/ignite/pull/2920#issuecomment-517833060
 
 
   
   IGNITE-6726 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 20:23;githubbot;600","dspavlov commented on pull request #2920: IGNITE-6726
URL: https://github.com/apache/ignite/pull/2920
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 20:23;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 25 09:44:43 UTC 2017,,,,,,,,,,"0|i3lmvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 14:51;oleg-ostanin;https://github.com/apache/ignite/pull/2920;;;","24/Oct/17 15:48;avinogradov;[~oleg-ostanin]
Why you added BSD license to sqlline/pom.xml?

Also, I see no build based on these changes.;;;","24/Oct/17 16:09;avinogradov;Merged to master & ignite-2.3.
Thanks for contribution.;;;","25/Oct/17 09:06;oleg-ostanin;License for Jline are still missing;;;","25/Oct/17 09:08;oleg-ostanin;[~avinogradov]
I've added BSD license to sqlline/pom.xml by mistake, thank you for correcting. ;;;","25/Oct/17 09:44;oleg-ostanin;I found out that Jline is a transitive dependency for sqlline and it is also under the BSD license so we do not need to add license for Jline.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PersistentStoreExample is broken,IGNITE-6724,13111667,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,skozlov,skozlov,24/Oct/17 11:56,24/Oct/17 13:13,14/Jul/23 06:20,24/Oct/17 13:13,2.3,,,,,2.3,,examples,,,,0,,,,"1. Open in IDEA {{ignite-examples}} project
2. Start {{PersistentStoreExampleNodeStartup}}
3. Run {{PersistentStoreExample}}. Looks like it does nothing for now:
{noformat}
14:50:46] Topology snapshot [ver=2, servers=1, clients=1, CPUs=8, heap=7.1GB]
SQL Result: []
GET Result: null
[14:50:47] Ignite node stopped OK [uptime=00:00:01.181]
{noformat}",,agoncharuk,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 13:13:51 UTC 2017,,,,,,,,,,"0|i3lmvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 13:13;agoncharuk;The reason is wrong UPDATE flag value.;;;","24/Oct/17 13:13;agoncharuk;Fixed in master and ignite-2.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ScalarCreditRiskExample failed with StackOverflowError,IGNITE-6723,13111665,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,tledkov-gridgain,skozlov,skozlov,24/Oct/17 11:53,24/Oct/17 14:44,14/Jul/23 06:20,24/Oct/17 14:44,2.3,,,,,2.3,,examples,,,,0,,,,"1. Open in IDEA {{ignite-examples}} project
2. Start {{ExampleNodeStartup}}
3. Run {{ScalarCreditRiskExample}}. It fails:
{noformat}
java.lang.StackOverflowError
	at java.util.IdentityHashMap.maskNull(IdentityHashMap.java:192)
	at java.util.IdentityHashMap.put(IdentityHashMap.java:426)
	at org.apache.ignite.internal.binary.BinaryWriterHandles.put(BinaryWriterHandles.java:88)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.tryWriteAsHandle(BinaryWriterExImpl.java:1879)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.preWrite(BinaryClassDescriptor.java:888)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:790)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
...
{noformat}",,githubbot,skozlov,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 14:44:24 UTC 2017,,,,,,,,,,"0|i3lmuv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 14:19;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2919

    IGNITE-6723: example fix: change type from scala sequence to scala Ar…

    …ray for member of serialized closure

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6723

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2919.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2919
    
----
commit 6f4e31602ff073b71089fc688f09e0227a509478
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-24T14:18:34Z

    IGNITE-6723: example fix: change type from scala sequence to scala Array for member of serialized closure

----
;;;","24/Oct/17 14:23;tledkov-gridgain;*Root cause:* {{StackOverflowError}} on serialization scala sequence collection (because Ignite binary serializer doesn't handle scala's linked list as collections, so the collection with 5K elements is too deep for ordinary object serialization).
*Fix:* change type to Array for member of the serialized closure.

[Examples tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2919%2Fhead] are OK.

[~vozerov], [~kuaw26], please review the patch.;;;","24/Oct/17 14:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2919
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Marshaller mappings and binary metadata must be merged and written to disk on registerLocally,IGNITE-6722,13111662,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,24/Oct/17 10:56,07/Nov/17 12:19,14/Jul/23 06:20,07/Nov/17 12:19,,,,,,2.4,,,,,,0,,,,"Each mapping/metadata register operation must result in creating/updating corresponding file in file system.

Methods for local register ({{MarshallerContext::registerClassNameLocally}} and {{CacheObjectBinaryProcessor::addMetaLocally}}) lack this part.",,agura,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 07 12:19:01 UTC 2017,,,,,,,,,,"0|i3lmu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 12:37;sergey-chugunov;github PR: https://github.com/apache/ignite/pull/2915

TC run: https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_RunAll&branch_Ignite20Tests=pull%2F2915%2Fhead&tab=buildTypeStatusDiv;;;","07/Nov/17 12:19;agura;LGTM. Merged to master branch.
Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data page evictions do not work in mixed persistence mode,IGNITE-6721,13111650,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,agoncharuk,agoncharuk,agoncharuk,24/Oct/17 09:47,24/Oct/17 11:21,14/Jul/23 06:20,24/Oct/17 11:21,2.3,,,,,2.3,,,,,,0,,,,"After IGNITE-6030 data page evictions are broken if in-memory caches are mixed with persistence-enabled caches.
The problem is in page eviction tracker creation code:
{code}
        if (plc.getPageEvictionMode() == DataPageEvictionMode.DISABLED || CU.isPersistenceEnabled(cctx.gridConfig()))
            return new NoOpPageEvictionTracker();
{code}

We should check not the global configuration, but the data region configuration.",,agoncharuk,krybakova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 11:21:10 UTC 2017,,,,,,,,,,"0|i3lmrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 11:21;agoncharuk;Merged to master and to ignite-2.3;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get rid of noop segment lock-unlock in PageMemoryImpl,IGNITE-6719,13111633,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,24/Oct/17 08:19,24/Oct/17 08:22,14/Jul/23 06:20,24/Oct/17 08:22,2.3,,,,,2.4,,,,,,0,,,,"We have the following pattern in PageMemoryImpl#stop():
{code}
volatile boolean closed;

...
closed = true;
writeLock.lock();
writeLock.unlock();
{code}

An empty lock/unlock pair can be eliminated, so the code must be changed and the flag should be moved to the segment class.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 08:22:48 UTC 2017,,,,,,,,,,"0|i3lmnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 08:22;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skip deploy sqlline and compatibility modules into repositiry,IGNITE-6718,13111624,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,24/Oct/17 07:23,26/May/22 10:09,14/Jul/23 06:20,24/Oct/17 07:34,,,,,,2.3,,build,,,,0,,,,Skip deploy sqlline and compatibility modules into repositiry,,githubbot,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-17037,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 07:35:53 UTC 2017,,,,,,,,,,"0|i3lmlr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 07:27;githubbot;GitHub user oleg-ostanin opened a pull request:

    https://github.com/apache/ignite/pull/2911

    IGNITE-6718 skipped upload sqlline and compatibility modules into  ma…

    …ven central

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6718

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2911.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2911
    
----
commit c8f49fc6fa068fd202bcc73b05aef837086a855c
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-10-24T07:26:31Z

    IGNITE-6718 skipped upload sqlline and compatibility modules into  maven central

----
;;;","24/Oct/17 07:29;oleg-ostanin;[~vozerov]

Please review:
https://github.com/apache/ignite/pull/2911;;;","24/Oct/17 07:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2911
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Cache 5 flaky test CacheRebalancingSelfTest.testDisableRebalancing(),IGNITE-6713,13111423,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,dpavlov,dpavlov,23/Oct/17 14:02,30/Oct/17 14:10,14/Jul/23 06:20,30/Oct/17 14:10,2.3,,,,,2.4,,,,,,0,MakeTeamcityGreenAgain,,,"https://ci.ignite.apache.org/viewLog.html?buildId=904771&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache5

CacheRebalancingSelfTest.testDisableRebalancing().

has flaky failures on TC

Success rate: 87,9%

https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-2095494394421107338&tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E

Reproducible locally (30 runs)",,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 30 12:26:58 UTC 2017,,,,,,,,,,"0|i3lldj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 14:07;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2907

    IGNITE-6713: Ignite Cache 5 flaky test 

    CacheRebalancingSelfTest.testDisableRebalancing()

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6713

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2907.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2907
    
----
commit 147f82f612fe31f0c19f390ec91546bcdc93a305
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-23T14:06:41Z

    IGNITE-6713: Ignite Cache 5 flaky test CacheRebalancingSelfTest.testDisableRebalancing()

----
;;;","23/Oct/17 14:19;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2907
;;;","23/Oct/17 14:37;dpavlov;Only test code was affected by this change
https://github.com/apache/ignite/pull/2907

https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache5&branch_Ignite20Tests=pull%2F2907%2Fhead&tab=buildTypeStatusDiv;;;","24/Oct/17 10:16;dpavlov;Test has flaky failures after fix of random keys collision
;;;","24/Oct/17 11:41;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2914

    IGNITE-6713: Ignite Cache 5 flaky test CacheRebalancingSelfTest.testD…

    …isableRebalancing()
    
    Full sync added, standalone suite for mass test startup

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6713-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2914.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2914
    
----
commit 6330ba221251f3d8d24868f38ea1fed18b5dd41b
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-24T11:40:43Z

    IGNITE-6713: Ignite Cache 5 flaky test CacheRebalancingSelfTest.testDisableRebalancing()
    Full sync added, standalone suite for mass test startup

----
;;;","24/Oct/17 12:34;dpavlov;https://github.com/apache/ignite/pull/2914

https://ci.ignite.apache.org/viewLog.html?buildId=908164&buildTypeId=Ignite20Tests_IgniteReproducingSuite&tab=buildResultsDiv;;;","30/Oct/17 12:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2914
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataRegionMetrics#totalAllocatedPages is not valid after node restart,IGNITE-6711,13111412,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,agoncharuk,agoncharuk,23/Oct/17 13:38,11/Dec/18 13:02,14/Jul/23 06:20,22/Jan/18 16:22,2.2,,,,,2.4,,general,,,,1,iep-6,newbie,,"Currently, data region metric tracks total allocated pages by a callback on page allocation. However, when a node with enabled persistence is started, some of the pages are already allocated, which leads to an incorrect metric value.",,agoncharuk,andrey-kuznetsov,avinogradov,githubbot,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6902,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 11 13:02:53 UTC 2018,,,,,,,,,,"0|i3llb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Nov/17 15:37;andrey-kuznetsov;Even when I start with persistence enabled on empty db I still see strange values, e.g.

{noformat}
PhysycalMemoryPages = 4610
TotalAllocatedPages = 4063
{noformat}

;;;","07/Dec/17 08:25;githubbot;GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/3165

    IGNITE-6711: TotalAllocatedPages metric fix.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6711

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3165.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3165
    
----
commit e6c75e81b87ec7e4e2489dd6a96e2f5a0b3d0c89
Author: Andrey Kuznetsov <stkuzma@gmail.com>
Date:   2017-12-07T08:23:47Z

    IGNITE-6711: TotalAllocatedPages metric fix.

----
;;;","07/Dec/17 08:36;andrey-kuznetsov;Metric calculation is now fixed [1]. There are some unfamiliar extra allocations at very first restart with PDS enabled, but in general the metric looks consistent. CI tests are queued right now.

This change also provides correct value of derived metric in [2]

[1] https://github.com/apache/ignite/pull/3165
[2] https://issues.apache.org/jira/browse/IGNITE-6902;;;","18/Dec/17 08:15;andrey-kuznetsov;[~avinogradov], this issue is ready for review. Could you take a look please?;;;","18/Jan/18 14:07;avinogradov;Task merge delayed due we detected that allocated metric have different nature when we have persistence store.
In case cache store used we should accumulate metric at operations inside FilePageStore. 
So, now Andrey is working on this refactoring.;;;","18/Jan/18 14:27;githubbot;GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/3401

    IGNITE-6711: Squashed ignite-6711 branch.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6711-squashed

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3401.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3401
    
----
commit d5d9a5af16eaf3cac829443d3c3174470dfdc99d
Author: Andrey Kuznetsov <stkuzma@...>
Date:   2018-01-18T14:26:47Z

    IGNITE-6711: Squashed ignite-6711 branch.

----
;;;","19/Jan/18 16:28;githubbot;GitHub user anton-vinogradov opened a pull request:

    https://github.com/apache/ignite/pull/3409

    IGNITE-6711 DataRegionMetrics#totalAllocatedPages is not valid after …

    …node restart
    
    Signed-off-by: Anton Vinogradov <av@apache.org>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6711

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3409.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3409
    
----
commit 7ae5135ec7e5e496a10526b380f078316d527ab5
Author: Anton Vinogradov <av@...>
Date:   2018-01-19T16:27:50Z

    IGNITE-6711 DataRegionMetrics#totalAllocatedPages is not valid after node restart
    
    Signed-off-by: Anton Vinogradov <av@apache.org>

----
;;;","19/Jan/18 16:29;avinogradov;[~andrey-kuznetsov]

I've refactored code, please check changes at [https://github.com/apache/ignite/pull/3409]

https://reviews.ignite.apache.org/ignite/review/IGNT-CR-469;;;","19/Jan/18 17:00;andrey-kuznetsov;[~avinogradov], it looks more elegant now, after you removed redundant mapping from data regions to their allocation counters.;;;","22/Jan/18 16:22;avinogradov;Merged to master and ignite-2.4;;;","22/Jan/18 19:29;githubbot;Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/3401
;;;","15/Feb/18 12:02;githubbot;Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/3165
;;;","21/Mar/18 12:05;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/3668

     IGNITE-6711 DataRegionMetrics#totalAllocatedPages is not valid after PDS restart

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6711v3

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3668.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3668
    
----
commit be91bbf8bcb7e9c71fe6d3bea0f79763f9606558
Author: Krzysztof Chmielewski <krzysiek.chmielewski@...>
Date:   2017-10-10T14:50:59Z

    Fixed ""IGNITE-6234 Initialize schemaIds to empty set if schemas field is null during the deserialization"".
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

commit 08389601728512dc4e7fa5b953f5afe34ae4506f
Author: AMRepo <andrey.mashenkov@...>
Date:   2017-10-10T08:57:20Z

    IGNITE-6545: Failure during Ignite Service.cancel() can break normal shutdown process. This closes #2807.
    
    (cherry picked from commit 8ffa109)

commit 57547b5afae059a0a6dfa13c08b2e0b6c0e96ebd
Author: devozerov <vozerov@...>
Date:   2017-10-13T09:34:35Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit 08798f8e47bdfdd68a557385ed2ce98b4bb1609a
Author: devozerov <vozerov@...>
Date:   2017-10-13T11:12:44Z

    IGNITE-6605: SQL: common backup filter. This closes #2836.

commit 2b59a241de3935a338842b8fc3221aedc8e11e1d
Author: devozerov <vozerov@...>
Date:   2017-10-16T07:33:36Z

    IGNITE-6631: Minor improvements to GridH2KeyValueRowOnheap. This closes #2855.

commit 98438c954c5f9a08634cf3132361268456397864
Author: devozerov <vozerov@...>
Date:   2017-10-16T09:38:54Z

    IGNITE-6632: SQL: simplified GridH2Row inheritance tree. This closes #2856.

commit 95b7ab518dd3c3db6fcc5142c2ee85da2516c2b6
Author: devozerov <vozerov@...>
Date:   2017-10-16T10:37:11Z

    IGNITE-6634: Removed IgniteDistributedJoinTestSuite. It's tests are distributed between ""Query"" and ""Query 2"" suites. This closes #2857.

commit 9c91deff877ebc0eed84559d4abca71408e3cb0a
Author: devozerov <vozerov@...>
Date:   2017-10-16T13:46:13Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit 911ab7ab7a8a6968d219b053adb2338477738506
Author: Alexey Popov <tank2.alex@...>
Date:   2017-10-17T11:45:42Z

    IGNITE-6627 .NET: Fix serialization of enums within generic collections
    
    * Fix EnumEqualityComparer serialization
    * Fix enum arrays serialization
    * Fix empty objects missing metadata
    
    This closes #2864

commit 3ba374c319ac7048a05871692060e2f143d6acdf
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-06T17:11:37Z

    IGNITE-6463 Web Console: Fixed output of big numbers in SQL query results.
    (cherry picked from commit 35589a7)

commit b67feb0f175bfbd6ffbefe82a8d693c8ab7d4213
Author: Vasiliy Sisko <vsisko@...>
Date:   2017-10-09T10:55:23Z

    IGNITE-5767 Web console: Use byte array type instead of java.lang.Object for binary JDBC types.
    (cherry picked from commit 3184437)

commit 8e1560322b87d79b3d3250832a3969ac4032d6fc
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-06T18:10:08Z

    IGNITE-6574 Remove pending requests in case STATUS_AUTH_FAILURE && credentials == null.
    (cherry picked from commit 85261a3)

commit 7a0300ae35894c389b126e95615f720a99a3d360
Author: devozerov <vozerov@...>
Date:   2017-10-18T11:18:08Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit ad01f9b099d0bf92537378859ad6d5a52de57748
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-19T02:43:20Z

    IGNITE-6647 Web Console: Implemented support of schema migration scripts.
    (cherry picked from commit c65399c)

commit 0c66344bc752dac98b256dd140fcab95d1662862
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-10-19T09:36:39Z

    IGNITE-6627 .NET: Fix repeated known metadata updates
    
    This closes #2876

commit 1b8abd214ed2afcd3fd1f6a4c71a19d6fe1a4b01
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-20T04:23:23Z

    IGNITE-6647 Added missing Mongo injector.
    (cherry picked from commit 173ecef)

commit a221066b3d029afc392be704a810c0e830fc0c49
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-20T14:15:02Z

    IGNITE-6647 Web Console: Added folder for modules migrations.
    (cherry picked from commit 3700717)

commit da8a9d5a968ba071697a28adb01bc59f80d1893c
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2017-10-23T08:55:33Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2
    
    # Conflicts:
    #	modules/platforms/dotnet/Apache.Ignite.Core.Tests/Apache.Ignite.Core.Tests.csproj

commit 69fdac3acf768ecb9df80d4412c4de5ffd5bc4f5
Author: Dmitriy Shabalin <dshabalin@...>
Date:   2017-10-23T09:09:47Z

    IGNITE-5909 Added list editable component.
    (cherry picked from commit 01daee6)

commit 4a2c38333c112d4956d6394667672c1470503435
Author: apopov <tank2.alex@...>
Date:   2017-10-24T08:56:33Z

    IGNITE-6362 NPE in Log4J2Logger

commit 089ebecb3e5962c7a38afd01bd18c77feb23d155
Author: vsisko <vsisko@...>
Date:   2017-10-25T04:23:11Z

    IGNITE-6671 Web Agent: Fixed data type conversion for Oracle NUMBER(N) data types.
    (cherry picked from commit 93be8ea)

commit 1e56de86525a79c895eba2d839b7887b61979b07
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2017-10-25T11:44:51Z

    IGNITE-6572: SQL: allowed many cache to share the same schema. This closes #2850.
    (cherry-picked from commit ee6daae)

commit e53e0937bf57a6e57bf9c61a518c5b70ce8c1303
Author: devozerov <vozerov@...>
Date:   2017-10-26T09:37:28Z

    Merge branch 'ignite-2.3.1' into ignite-2.3.2

commit 531086e4b7419b99e47d52db8764113995df3ef1
Author: dpavlov <dpavlov@...>
Date:   2017-10-05T15:06:27Z

    IGNITE-6539 WAL parser fails if empty log files exist in directory - Fixes #2794.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 24e063fb8cb58d615a51274a6208f02d463beb0d
Author: dpavlov <dpavlov@...>
Date:   2017-10-05T15:10:25Z

    IGNITE-6553 Standalone WAL iterator fails to handle WAL delete data records - Fixes #2797.

commit ac86276c3665880df8f8345b61a90ae1da90c131
Author: devozerov <vozerov@...>
Date:   2017-10-26T13:03:58Z

    IGNITE-6111: SQL: ability to execute INSERT INTO without specifying column names. This closes #2881.

commit 937bc30c4a5f1951e7c755728b61571fe50eff26
Author: Roman Shtykh <rshtykh@...>
Date:   2017-10-26T14:13:49Z

    IGNITE-6534: SQL: configure NotNull fields with annotations. This closes #2782.

commit 3675d6401b78b4a70148b4ce7081fafaafcfca44
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2017-10-27T11:12:36Z

    ignite-5860 Try process TcpDiscoveryClientReconnectMessage from socket reader instead of always processing it on coordinator.
    (cherry picked from commit 56a63f8)

commit b1e670109e49bc33a9c8d6486cbfc637f13eaede
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-30T04:07:21Z

    IGNITE-6570 Added missing import.
    (cherry picked from commit 67859f4)

commit 748f6df6b3f2753ad965fafcce55520bed6def8f
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-10-30T07:56:22Z

    IGNITE-6670 Web Agent: Improved demo startup.
    (cherry picked from commit b4bd20e)

----
;;;","10/Jul/18 15:11;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/3668
;;;","11/Dec/18 13:02;githubbot;Github user anton-vinogradov closed the pull request at:

    https://github.com/apache/ignite/pull/3409
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ignite-compatibility from optional directory,IGNITE-6708,13111393,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,skozlov,skozlov,23/Oct/17 11:58,24/Oct/17 06:55,14/Jul/23 06:20,24/Oct/17 06:51,2.3,,,,,2.3,,build,,,,0,,,,{{ignite-compatibility}} presented in optional directory of Apache Ignite Fabric but it's not an actual module,,githubbot,oleg-ostanin,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 06:55:00 UTC 2017,,,,,,,,,,"0|i3ll6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 12:51;githubbot;GitHub user oleg-ostanin opened a pull request:

    https://github.com/apache/ignite/pull/2902

    IGNITE-6708 Remove ignite-compatibility from optional directory

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6708

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2902.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2902
    
----
commit 71a44b677a341d02a689ad82f2418d6c0f0f4d81
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-10-23T12:49:42Z

    IGNITE-6708 Remove ignite-compatibility from optional directory

----
;;;","23/Oct/17 12:52;oleg-ostanin;[~vozerov]
Please review the changes:
https://github.com/apache/ignite/pull/2902;;;","24/Oct/17 06:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2902
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove ignite-sqlline module from optioanl directory,IGNITE-6706,13111390,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,oleg-ostanin,skozlov,skozlov,23/Oct/17 11:56,24/Oct/17 06:55,14/Jul/23 06:20,24/Oct/17 06:51,2.3,,,,,2.3,,build,,,,0,,,,{{ignite-sqlline}} presented in optional directory of Apache Ignite Fabric but it's not an actual module,,githubbot,oleg-ostanin,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 06:55:00 UTC 2017,,,,,,,,,,"0|i3ll67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 12:25;githubbot;GitHub user oleg-ostanin opened a pull request:

    https://github.com/apache/ignite/pull/2901

    IGNITE-6706 Remove ignite-sqlline module from optioanl directory

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6706

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2901.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2901
    
----
commit 678136b4932049b2b9b175005508157cd1b7def8
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-10-23T12:23:37Z

    IGNITE-6706 Remove ignite-sqlline module from optioanl directory

----
;;;","23/Oct/17 12:26;oleg-ostanin;[~vozerov] 
Please review https://github.com/apache/ignite/pull/2901;;;","24/Oct/17 06:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2901
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Add data region option to CREATE TABLE,IGNITE-6689,13110940,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,20/Oct/17 11:26,06/Nov/17 21:38,14/Jul/23 06:20,06/Nov/17 21:38,2.3,,,,,2.3,,sql,,,,0,usability,,,Subj. We need to be able to create tables in different data regions.,,dmagda,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6698,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-10-20 11:26:33.0,,,,,,,,,,"0|i3lie7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move WAL and Checkpointing sections to separate pages,IGNITE-6683,13110735,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dmagda,dmagda,dmagda,19/Oct/17 17:43,26/Oct/17 19:19,14/Jul/23 06:20,26/Oct/17 19:19,,,,,,2.3,,documentation,,,,0,,,,"Please move WAL and checkpointing sections from this page [1] to dedicated ones.

Page [1] should mention and refer to the new pages.

Make the new pages invisible until 2.3 release.

[1] https://dash.readme.io/project/apacheignite/v2.2/docs/ignite-persistence-23",,dmagda,pgarg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 26 19:19:23 UTC 2017,,,,,,,,,,"0|i3lh4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 22:52;pgarg;[~dmagda], Please review -
# https://apacheignite.readme.io/v2.2/docs/write-ahead-log
# https://apacheignite.readme.io/v2.2/docs/persistence-checkpointing;;;","26/Oct/17 19:19;dmagda;[~pgarg], thanks looks good. Did minor changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document manual cluster activation feature,IGNITE-6682,13110733,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dmagda,dmagda,dmagda,19/Oct/17 17:41,26/Oct/17 19:35,14/Jul/23 06:20,26/Oct/17 19:35,,,,,,2.3,,documentation,,,,0,,,,"Once Ignite persistence is enabled, the cluster has to be activated manually before any operation can be processed by it. That's needed to ensure that all the nodes that have data on disk have joined the cluster after a restart and that the topology is considered to be stable.

Some details can be found in this discussion:
* Usage section of this doc [1]. Look for a paragraph that starts with _""Next, when Ignite sees that the persistence is enabled it moves the cluster from active to inactive state making sure that applications cannot​ modify the data until allowed.""_
* http://apache-ignite-developers.2346864.n4.nabble.com/Control-sh-script-and-cluster-activation-td20821.html

Document the manual cluster activation on a dedicated page [2] at least considering the following:
* Overview. Why it's required? Move the paragraph from [1] and expand if required.
* Show an exception that happens if you try to execute a SQL or key-value query or run a computation against an activated cluster.
* Explain how to activate the cluster with:
 * From command line with control.sh script. 
 * From web console.
 * From source code with {{Ignite.activate()}} method.
* Add a callout that the automatic cluster activation is to be added in the future. You may refer to this discussion [3] and a wiki page [4].

[1] https://apacheignite.readme.io/v2.2/docs/ignite-persistence-23#section-usage
[2] https://apacheignite.readme.io/v2.2/docs/cluster-activation
[3] http://apache-ignite-developers.2346864.n4.nabble.com/Cluster-auto-activation-design-proposal-td20295.html
[4] https://cwiki.apache.org/confluence/display/IGNITE/Automatic+activation+design+-+draft",,dmagda,pgarg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 26 19:35:33 UTC 2017,,,,,,,,,,"0|i3lh47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Oct/17 06:11;dmagda;Worth putting some info to prevent questions raised here: 
http://apache-ignite-users.70518.x6.nabble.com/Node-and-cluster-maintenance-best-practice-td17587.html;;;","23/Oct/17 20:23;pgarg;[~dmagda], Please review - https://apacheignite.readme.io/docs/cluster-activation;;;","26/Oct/17 19:35;dmagda;[~pgarg], thanks, did minor changes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IGNITE_HOME is not detected automatically when using IgniteOutputCacheProvider,IGNITE-6675,13110670,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,izaporozhtseva,izaporozhtseva,19/Oct/17 13:15,19/Oct/17 15:45,14/Jul/23 06:20,19/Oct/17 15:44,2.3,,,,,2.3,,platforms,,,,0,.NET,NuGet,,"Steps to reproduce:
1) Create a new C# Web application in the MS Visual Studio:
File -> New -> Project -> Visual C# -> Web -> ASP.NET Web Application

2) Install Apache.Ignite.AspNet NuGet package

3) Open Web.config file and add following code into beginning of ""configuration"" section:

{code:java}
<configSections>
<section name=""igniteConfiguration"" type=""Apache.Ignite.Core.IgniteConfigurationSection, Apache.Ignite.Core"" />
</configSections>

<igniteConfiguration>
<cacheConfiguration>
<cacheConfiguration name='myWebCache' />
</cacheConfiguration>
</igniteConfiguration>
{code}

And following code into beginning of ""system.web"" section:


{code:java}
<caching>
<outputCache defaultProvider=""apacheIgnite"">
<providers>
<add name=""apacheIgnite"" type=""Apache.Ignite.AspNet.IgniteOutputCacheProvider, Apache.Ignite.AspNet"" igniteConfigurationSectionName=""igniteConfiguration"" cacheName=""myWebCache"" />
</providers>
</outputCache>
</caching>

<sessionState mode=""Custom"" customProvider=""IgniteSessionStateProvider"">
<providers>
<add name=""IgniteSessionStateProvider""
type=""Apache.Ignite.AspNet.IgniteSessionStateStoreProvider, Apache.Ignite.AspNet"" />
</providers>
</sessionState>
{code}

Open Default.aspx.cs file and add the following to Page_Load method:

{code:java}
Session[""test""] = ""abc"";
{code}

4) Run project

Following exception appears in browser:


{code}
Configuration Error

Description: An error occurred during the processing of a configuration file required to service this request. Please review the specific error details below and modify your configuration file appropriately. 

Parser Error Message: Failed to initialize Apache.Ignite.AspNet.IgniteSessionStateStoreProvider: Apache.Ignite.Core.Common.IgniteException: Failed to initialize JVM. ---> Apache.Ignite.Core.Common.IgniteException: Java class is not found (did you set IGNITE_HOME environment variable?): org/apache/ignite/internal/processors/platform/utils/PlatformUtils ---> Apache.Ignite.Core.Common.JavaException
  --- End of inner exception stack trace ---
  --- End of inner exception stack trace ---
  at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedCallbacks.Error(Void* target, Int32 errType, SByte* errClsChars, Int32 errClsCharsLen, SByte* errMsgChars, Int32 errMsgCharsLen, SByte* stackTraceChars, Int32 stackTraceCharsLen, Void* errData, Int32 errDataLen)
  at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.CreateContext(Void* opts, Int32 optsLen, Void* cbs)
  at Apache.Ignite.Core.Impl.IgniteManager.CreateJvm(IgniteConfiguration cfg, UnmanagedCallbacks cbs)
  at Apache.Ignite.Core.Impl.IgniteManager.CreateJvmContext(IgniteConfiguration cfg, UnmanagedCallbacks cbs, ILogger log)
  at Apache.Ignite.Core.Ignition.Start(IgniteConfiguration cfg)
  at Apache.Ignite.AspNet.Impl.ConfigUtil.InitializeCache[TK,TV](NameValueCollection config, Type callerType, String defaultCacheName)

Source Error: 


Line 29:     <sessionState mode=""Custom"" customProvider=""IgniteSessionStateProvider"">
Line 30:       <providers>
Line 31:         <add name=""IgniteSessionStateProvider"" type=""Apache.Ignite.AspNet.IgniteSessionStateStoreProvider, Apache.Ignite.AspNet"" />
Line 32:       </providers>
Line 33:     </sessionState>

Source File: c:\visual studio 2015\Projects\WebApplication10\WebApplication10\web.config    Line: 31 
{code}
","Visual Studio Community 2015 version 14.0.25431.01 update 3
.NET Framework version 4.7.02046
64bit version of IIS",githubbot,izaporozhtseva,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 19 15:45:36 UTC 2017,,,,,,,,,,"0|i3lgq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Oct/17 13:36;ptupitsyn;Reproduced the problem.
* {{IgniteConfiguration.IgniteHome}} is being detected correctly (points to {{c:\w\temp\WebApplication1\WebApplication1\bin}}).
* JARs are in place
* Same IgniteHome works well in Console application
* Same code works with ignite-2.2
* {{Environment.SetEnvironmentVariable(""IGNITE_HOME"", home)}} solves the problem;;;","19/Oct/17 13:57;ptupitsyn;Found the problem: {{IgniteConfiguration.CopyLocalProperties}} does not copy {{IgniteHome}} property.
Looks like there are no tests for this.;;;","19/Oct/17 14:36;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2886

    IGNITE-6675 .NET: Fix ignored IgniteConfiguration.IgniteHome

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-6675

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2886.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2886
    
----
commit f3e22cdc43df1b2d134b8edd296edcdf1e86bb9d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-10-19T14:34:53Z

    IGNITE-6675 .NET: Fix ignored IgniteConfiguration.IgniteHome

----
;;;","19/Oct/17 15:43;ptupitsyn;Fixed in master: {{8f23bca2e0599eec15d059f2ed7b14dd4fe93aa9}}.;;;","19/Oct/17 15:45;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2886
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Web Console] Wrong java type used in generated config from DB schema,IGNITE-6671,13110587,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,dkarachentsev,dkarachentsev,19/Oct/17 07:16,27/Oct/17 06:54,14/Jul/23 06:20,25/Oct/17 04:25,2.2,,,,,2.4,,,,,,0,,,,"We should be confident that java types in generated config are able to fit in values from DB. For example, WC generates short for Oracle's NUMBER(5), when short could be max 32767, but NUMBER(5) - 99999.

That may produce errors like below during DB import:
{noformat}
 Exception in thread ""main"" javax.cache.integration.CacheLoaderException: Failed to load cache: test
       at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore.loadCache(CacheAbstractJdbcStore.java:798)
       at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadCache(GridCacheStoreManagerAdapter.java:502)
       at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter.localLoadCache(GridDhtCacheAdapter.java:486)
       at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.localLoadCache(GridCacheProxyImpl.java:217)
       at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJob.localExecute(GridCacheAdapter.java:5439)
       at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJobV2.localExecute(GridCacheAdapter.java:5488)
       at org.apache.ignite.internal.processors.cache.GridCacheAdapter$TopologyVersionAwareJob.execute(GridCacheAdapter.java:6103)
       at org.apache.ignite.compute.ComputeJobAdapter.call(ComputeJobAdapter.java:132)
       at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1842)
       at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
       at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6621)
       at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
       at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
       at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
       at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1114)
       at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1907)
       at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1257)
       at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:885)
       at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:114)
       at org.apache.ignite.internal.managers.communication.GridIoManager$7.run(GridIoManager.java:802)
       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
       at java.lang.Thread.run(Thread.java:745)
Caused by: javax.cache.CacheException: Failed to read binary object: org.apache.TestModel
       at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildBinaryObject(CacheJdbcPojoStore.java:255)
       at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildObject(CacheJdbcPojoStore.java:136)
       at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$1.call(CacheAbstractJdbcStore.java:463)
       at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$1.call(CacheAbstractJdbcStore.java:430)
       at java.util.concurrent.FutureTask.run(FutureTask.java:266)
       ... 3 more
Caused by: java.sql.SQLException: Numeric Overflow
       at oracle.jdbc.driver.NumberCommonAccessor.throwOverflow(NumberCommonAccessor.java:4170)
       at oracle.jdbc.driver.NumberCommonAccessor.getShort(NumberCommonAccessor.java:311)
       at oracle.jdbc.driver.GeneratedStatement.getShort(GeneratedStatement.java:305)
       at oracle.jdbc.driver.GeneratedScrollableResultSet.getShort(GeneratedScrollableResultSet.java:879)
       at org.apache.ignite.cache.store.jdbc.JdbcTypesDefaultTransformer.getColumnValue(JdbcTypesDefaultTransformer.java:84)
       at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildBinaryObject(CacheJdbcPojoStore.java:247)
       ... 7 more
{noformat}

*This should be checked for all supported databases.*",,dkarachentsev,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 27 06:53:57 UTC 2017,,,,,,,,,,"0|i3lg87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 09:46;vsisko;Fixed data type selection to fit to maximal values of Oracle number columns.
Types to test: NUMBER, NUMBER(1), NUMBER(3), NUMBER(5), NUMBER(10), NUMBER(19), NUMBER(20);;;","24/Oct/17 03:12;pkonstantinov;Failed tested in branch:
# created a table with types described above
# imported into project via web console
{code}
                            <property name=""types"">
                                <list>
                                    <bean class=""org.apache.ignite.cache.store.jdbc.JdbcType"">
                                        <property name=""cacheName"" value=""Ignite6671Cache""/>
                                        <property name=""keyType"" value=""model.Ignite6671Key""/>
                                        <property name=""valueType"" value=""model.Ignite6671""/>
                                        <property name=""databaseSchema"" value=""GRIDGAIN""/>
                                        <property name=""databaseTable"" value=""IGNITE6671""/>

                                        <property name=""keyFields"">
                                            <list>
                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.NUMERIC""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F0""/>
                                                    <constructor-arg value=""java.math.BigDecimal""/>
                                                    <constructor-arg value=""f0""/>
                                                </bean>
                                            </list>
                                        </property>

                                        <property name=""valueFields"">
                                            <list>
                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.NUMERIC""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F0""/>
                                                    <constructor-arg value=""java.math.BigDecimal""/>
                                                    <constructor-arg value=""f0""/>
                                                </bean>

                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.TINYINT""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F1""/>
                                                    <constructor-arg value=""java.lang.Byte""/>
                                                    <constructor-arg value=""f1""/>
                                                </bean>

                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.SMALLINT""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F3""/>
                                                    <constructor-arg value=""java.lang.Short""/>
                                                    <constructor-arg value=""f3""/>
                                                </bean>

                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.INTEGER""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F5""/>
                                                    <constructor-arg value=""java.lang.Integer""/>
                                                    <constructor-arg value=""f5""/>
                                                </bean>

                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.BIGINT""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F10""/>
                                                    <constructor-arg value=""java.lang.Long""/>
                                                    <constructor-arg value=""f10""/>
                                                </bean>

                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.NUMERIC""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F19""/>
                                                    <constructor-arg value=""java.math.BigDecimal""/>
                                                    <constructor-arg value=""f19""/>
                                                </bean>

                                                <bean class=""org.apache.ignite.cache.store.jdbc.JdbcTypeField"">
                                                    <constructor-arg>
                                                        <util:constant static-field=""java.sql.Types.NUMERIC""/>
                                                    </constructor-arg>
                                                    <constructor-arg value=""F20""/>
                                                    <constructor-arg value=""java.math.BigDecimal""/>
                                                    <constructor-arg value=""f20""/>
                                                </bean>
                                            </list>
                                        </property>
                                    </bean>
                                </list>
                            </property>
                        </bean>
                    </property>

                    <property name=""readThrough"" value=""true""/>
                    <property name=""writeThrough"" value=""true""/>

                    <property name=""queryEntities"">
                        <list>
                            <bean class=""org.apache.ignite.cache.QueryEntity"">
                                <property name=""keyType"" value=""model.Ignite6671Key""/>
                                <property name=""valueType"" value=""model.Ignite6671""/>

                                <property name=""keyFields"">
                                    <list>
                                        <value>f0</value>
                                    </list>
                                </property>

                                <property name=""fields"">
                                    <map>
                                        <entry key=""f0"" value=""java.math.BigDecimal""/>
                                        <entry key=""f1"" value=""java.lang.Byte""/>
                                        <entry key=""f3"" value=""java.lang.Short""/>
                                        <entry key=""f5"" value=""java.lang.Integer""/>
                                        <entry key=""f10"" value=""java.lang.Long""/>
                                        <entry key=""f19"" value=""java.math.BigDecimal""/>
                                        <entry key=""f20"" value=""java.math.BigDecimal""/>
                                    </map>
                                </property>
                            </bean>
                        </list>
                    </property>
{code}
# started two node using ServerNodeSpringStartup + ServerNodeCodeStartup
# started web agent and connected to cluster
# open SQL in web console and successfully inserted two rows
{code}
insert into ""Ignite6671Cache"".Ignite6671(f0,f1,f3,f5,f10,f19,f20)values(123456789,9,999,99999,9999999999,9999999999999999999,99999999999999999999)
insert into ""Ignite6671Cache"".Ignite6671(f0,f1,f3,f5,f10,f19,f20)values(12345689,9,999,99999,9999999999,9999999999999999999,99999999999999999999)
{code}
# then tried to 
{code}
select * from ""Ignite6671Cache"".Ignite6671
{code}
and got error
{code}
Error: Numeric value (9999999999999999999) out of range of long (-9223372036854775808 - 9223372036854775807) at [Source: buffer(okhttp3.internal.http1.Http1Codec$FixedLengthSource@d13283f).inputStream(); line: 1, column: 212] (through reference chain: org.apache.ignite.console.agent.rest.RestResponseHolder[""response""])
{code};;;","24/Oct/17 07:51;vsisko;Fixed JSON serialisation of big numbers to show on web console.;;;","24/Oct/17 09:01;pkonstantinov;Successfully tested in branch;;;","25/Oct/17 04:25;kuaw26;Looks good. Merged to master.
Please retest.;;;","27/Oct/17 06:53;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheStoreSessionListener#onSessionStart() #onSessionEnd() methods are called by GridCacheStoreManagerAdapter even if a store operation should not be performed.,IGNITE-6669,13110438,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slava.koptilin,slava.koptilin,slava.koptilin,18/Oct/17 18:36,15/Nov/17 19:01,14/Jul/23 06:20,09/Nov/17 15:12,1.8,,,,,2.4,,cache,,,,0,,,,"In the case of transactional cache, which is configured using {{CacheStore}} and {{CacheJdbcStoreSessionListener}}, every update triggers {{CacheStoreSessionListener # onSessionStart()}} that results in creating the connection to an underlying database, even if read-through and write-through modes are disabled.",,agoncharuk,ptupitsyn,sboikov,slava.koptilin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6924,,,,,,,,,,,,,,,"18/Oct/17 18:36;slava.koptilin;Reproducer.java;https://issues.apache.org/jira/secure/attachment/12892866/Reproducer.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 09 15:12:02 UTC 2017,,,,,,,,,,"0|i3lfb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/17 11:45;agoncharuk;Changes look good to me. Please make sure that TC is in a good shape before the merge.;;;","23/Oct/17 12:02;slava.koptilin;Thank you for the review!
TC looks good enough. I have not found test failures that are related to the fix.

pull-request: https://github.com/apache/ignite/pull/2894
TC: https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2894%2Fhead;;;","30/Oct/17 14:21;slava.koptilin;Pull-Request was updated in order to properly handle Write-Behind mode.
TC looks good enough. I have not found test failures that are related to the fix.

pull-request: https://github.com/apache/ignite/pull/2894
review: https://reviews.ignite.apache.org/ignite/review/IGNT-CR-385
TC: https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2894%2Fhead;;;","31/Oct/17 09:52;ptupitsyn;.NET changes look ok to me.;;;","09/Nov/17 15:12;sboikov;Reviewed last version, merged into master.

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary metadata read must not block if called from discovery thread.,IGNITE-6668,13110329,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,18/Oct/17 15:30,19/Jul/18 14:14,14/Jul/23 06:20,23/Oct/17 14:22,,,,,,2.4,,,,,,0,,,,"Some actions like {{Messaging.RemoteListen}} from .NET functionality involve reading binary metadata when handling message in discovery thread.

This may cause a deadlock as metadata read can block and wait for another discovery event to arrive.

To avoid deadlock we can check if current thread executing metadata read call is discovery thread and return current value right away.",,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8860,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-10-18 15:30:40.0,,,,,,,,,,"0|i3lf0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObjectImpl.writeFieldByOrder method does not support TIME,IGNITE-6666,13110318,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,NSAmelchev,NSAmelchev,18/Oct/17 15:08,19/Apr/18 09:59,14/Jul/23 06:20,19/Apr/18 09:57,2.2,,,,,2.5,,binary,,,,1,,,,The variable totalLen is not define for TIME in method BinaryObjectImpl.writeFieldByOrder.,,alex_pl,githubbot,NSAmelchev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 19 09:59:55 UTC 2018,,,,,,,,,,"0|i3ley7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 15:13;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/2878

    IGNITE-6666

    Defined the variable totalLen for TIME type in method BinaryObjectImpl.writeFieldByOrder.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-6666

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2878.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2878
    
----
commit 727b47e704310cac7ae3cb4dc23a8153f48123d0
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-10-18T15:09:52Z

    add fix and test

----
;;;","30/Oct/17 07:50;vozerov;[~NSAmelchev], thank you for the patch. Write-related part looks good to me. However, it is not symmetrical to read part at the moment. We need to implement it as well, see
{{BinaryFieldImpl.readField}}.;;;","01/Nov/17 08:50;NSAmelchev;[~vozerov], thank you for taking your time for the review, I have implemented read part symmetrical to the write-related part. Please, look at it again. [Tests|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2878%2Fhead] passed OK.;;;","19/Jan/18 09:14;vozerov;Moving to AI 2.5 due to scope freeze. Will review in the nearest time.;;;","10/Apr/18 12:19;alex_pl;[~NSAmelchev], I looked at your patch. Looks good to me.;;;","19/Apr/18 09:58;vozerov;Pushed to master and 2.5 branches.;;;","19/Apr/18 09:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2878
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python Redis example fails for python 3 run,IGNITE-6660,13110252,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,skozlov,skozlov,18/Oct/17 10:04,24/Oct/17 12:28,14/Jul/23 06:20,24/Oct/17 12:28,1.8,1.9,2.0,2.1,2.2,2.3,,examples,,,,0,,,,"Looks like python redis example fails due to design python 2. But for python 3 run raised the following error:
{noformat}
  File ""/var/lib/teamcity/data/work/17028f058b6ef75f/i2test/var/suite-examples/gg-pro-fab/examples/redis/redis-example.py"", line 32
    print 'Value for ""k1"": %s' % r.get('k1')
                             ^
SyntaxError: invalid syntax
{noformat}

The suggested fix is to put brackets for print calls: 
-{{print 'Value for ""k1"": %s' % r.get('k1')}}-
{{print('Value for ""k1"": %s' % r.get('k1'))}}
",,githubbot,ntikhonov,oleg-ostanin,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 24 12:28:38 UTC 2017,,,,,,,,,,"0|i3lejj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 15:17;githubbot;GitHub user oleg-ostanin opened a pull request:

    https://github.com/apache/ignite/pull/2879

    IGNITE-6660 fixed Python Redis example (print statements)

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6660

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2879.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2879
    
----
commit 5b2329fb1f75de4c41592868c58be92fa5a908da
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-10-18T15:16:19Z

    IGNITE-6660 fixed Python Redis example (print statements)

----
;;;","18/Oct/17 15:18;oleg-ostanin;[~ntikhonov@apache.org]
Please review the changes
https://github.com/apache/ignite/pull/2879;;;","18/Oct/17 15:54;ntikhonov;[~oleg-ostanin],
Thank you for your contribution! Let's make this example compatibility with second version python too. For it need to add just one import. Please, look at a post on [SO|https://stackoverflow.com/questions/32032697/how-to-use-from-future-import-print-function].;;;","19/Oct/17 15:03;skozlov;I tested the suggested changes for Python 2.7/3.6. It works. Also would be good to add a separate config file to start node(s) for redis example;;;","22/Oct/17 08:51;oleg-ostanin;Added new configuration file for Redis examples.

[~ntikhonov@apache.org] please review.;;;","24/Oct/17 12:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2879
;;;","24/Oct/17 12:28;ntikhonov;[~oleg-ostanin],
Thank you for your contribution! I've merged your changes to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite client can hang in case IgniteOOM on server,IGNITE-6654,13110015,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,mcherkasov,mcherkasov,17/Oct/17 15:21,10/Nov/17 19:50,14/Jul/23 06:20,25/Oct/17 15:48,,,,,,,,cache,general,,,0,,,,Ignite client can hang in case IgniteOOM on server,,agoncharuk,mcherkasov,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5940,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 25 15:47:59 UTC 2017,,,,,,,,,,"0|i3ld3b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 16:17;mcherkasov;pull request: https://github.com/apache/ignite/pull/2908;;;","25/Oct/17 15:16;agoncharuk;The change looks good, thanks!;;;","25/Oct/17 15:47;ntikhonov;[~mcherkas],
Thank you for your contribution! I've merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add EvictionPolicy factory support in IgniteConfiguration.,IGNITE-6649,13109966,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,17/Oct/17 12:43,22/Oct/19 09:07,14/Jul/23 06:20,10/Nov/17 14:35,,,,,,2.4,,cache,,,,0,,,,"For now the only way to set EvictionPolicy to IgniteConfiguration is to use EvictionPolicy instance. 
That looks error prone as user can easily share instance between caches or cache reincarnations and got unexpected results.

E.g. it can cause an AssertionError if EvictionPolicy is reused.
Steps to reproduce.

1. Create CacheConfiguration object that will be reused.
2. Create and fill a cache.
3. Destroy cache and create cache again with same CacheConfiguration object.
4. One of next put can fails with stacktrace below.

The error is throws when EvictionPolicy tries to evict entries from cache that has just been destroyed.
Also, EvictionPolicy object can be implicitly holds by some user objects (together with IgniteConfiguration) that can cause memory leak.

java.lang.AssertionError
	at org.apache.ignite.internal.processors.cache.CacheEvictableEntryImpl.evict(CacheEvictableEntryImpl.java:71)
	at org.apache.ignite.cache.eviction.lru.LruEvictionPolicy.shrink0(LruEvictionPolicy.java:275)
	at org.apache.ignite.cache.eviction.lru.LruEvictionPolicy.shrink(LruEvictionPolicy.java:250)
	at org.apache.ignite.cache.eviction.lru.LruEvictionPolicy.onEntryAccessed(LruEvictionPolicy.java:161)
	at org.apache.ignite.internal.processors.cache.GridCacheEvictionManager.notifyPolicy(GridCacheEvictionManager.java:1393)
	at org.apache.ignite.internal.processors.cache.GridCacheEvictionManager.touch(GridCacheEvictionManager.java:825)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.unlockEntries(GridDhtAtomicCache.java:3058)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1952)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1730)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.mapSingle(GridNearAtomicAbstractUpdateFuture.java:264)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.map(GridNearAtomicSingleUpdateFuture.java:494)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapOnTopology(GridNearAtomicSingleUpdateFuture.java:436)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.map(GridNearAtomicAbstractUpdateFuture.java:209)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.update0(GridDhtAtomicCache.java:1245)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put0(GridDhtAtomicCache.java:680)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2328)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2305)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1379) 


UPD: See discussion here [1].

[1] http://apache-ignite-developers.2346864.n4.nabble.com/CacheConfiguration-reusage-issues-with-EvictionPolicy-enabled-td23437.html

",,agura,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-896,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6838,,,,,,"17/Oct/17 16:38;amashenkov;EvictionPolicyTest.java;https://issues.apache.org/jira/secure/attachment/12892644/EvictionPolicyTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 17 07:09:18 UTC 2017,,,,,,,,,,"0|i3lcsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 12:55;amashenkov;Todo: 
1. add eviction policy factory methods to IgniteConfiguration.
2. deprecate setEvictionPolicy method and update javadoc.
3. create a ticket for old method discontinuation in next major release.;;;","20/Oct/17 12:17;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2896

    IGNITE-6649: Add EvictionPolicy factory support in IgniteConfiguration.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6649

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2896.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2896
    
----
commit 7bf47bfc6dad6efafb244a357f0687b35d44d1ee
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-10-17T16:32:11Z

    Add eviction policy to cache configuration.

commit 7b5e23bc0212745944a4830d5ffacc67033c3884
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-10-17T16:32:21Z

    WIP

commit 6a7118da4aece6783770d59364d162f792251d05
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-10-20T12:15:15Z

    WIP.
    Tests added.

----
;;;","23/Oct/17 15:46;amashenkov;TC tests looks fine.;;;","01/Nov/17 14:09;agura;Could you please add support of eviction policy factory for near caches? Also your change contains some TODOs that should be fixed.

Note, that eviction policy factory should implement {{Serializable}} interface because cache configuration will be passed over network for joining nodes. It should be stated in documentation.;;;","02/Nov/17 14:50;amashenkov;1. Added eviction factory support for near caches.
2. Getter and setter methods use Factory interface that already implements Serializable. But I add a note to make it clear for user who implements his own factory.
3. Added cache configuration consistency tests.
4. Also, I revert back some changes that can break compatibility with prev. versions as EvictionPolicy can't be fully replaced with factory until 3.0 version
Waiting for TC tests.;;;","07/Nov/17 18:14;amashenkov;[~agura],
TC tests looks fine. 
Would you please review once again?;;;","10/Nov/17 14:35;agura;LGTM. Merged to master branch.;;;","17/Nov/17 07:09;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/2896
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ML javadoc is missing in 2.2 binary release	,IGNITE-6648,13109941,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,17/Oct/17 11:01,17/Oct/17 12:21,14/Jul/23 06:20,17/Oct/17 12:21,,,,,,2.3,,,,,,0,,,,"ML javadoc is missing in binary releases. 	
",,avinogradov,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 17 12:21:13 UTC 2017,,,,,,,,,,"0|i3lcn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Oct/17 12:08;oleg-ostanin;[~avinogradov]

Please review the changes:
https://github.com/apache/ignite/pull/2868

Here is the example build:
https://ci.ignite.apache.org/viewLog.html?buildId=894883&tab=artifacts&buildTypeId=IgniteRelease_XxxFromMirrorIgniteRelease3PrepareVote#!1rrb2,-wpvx2aopzexz,-1wknai9u1u6n4,1oz6l8xp9zo0n,-14amd5eyzzgpi,-1i6ixr10ypdh6;;;","17/Oct/17 12:21;avinogradov;Merged to 2.3 and master. 
Thanks for contribution.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exploitable unsafe deserialization in Ignite cluster,IGNITE-6643,13109750,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,dmagda,dmagda,dmagda,16/Oct/17 17:40,22/Apr/20 08:12,14/Jul/23 06:20,11/Jul/18 21:23,,,,,,2.4,,binary,,,,0,vulnerability,,,"The security breach was reported by an end-user:
https://mail-search.apache.org/pmc/private-arch/ignite-private/201710.mbox/%3cDDA66C96-83C3-458B-ABC7-EC89CFF0FBE6@apache.org%3e

This unsafe deserialization here can be used to attack any ignite node (not require other pluggins enabled), happened during an incoming packet is parsed (so probably pre-authentication) and can be attacked through the standard ignite port (47500).

1. Start an ignite node e.g. with 'examples/config/example-ignite.xml'.

2. Run `ExampleNodeExploit` to send a malicious packet.

Remote code execution will happen when:

https://lgtm.com/projects/g/apache/ignite/latest/files/modules/core/src/main/java/org/apache/ignite/spi/discovery/tcp/ServerImpl.java?sort=name&dir=ASC&mode=list#L5771

calls the `JdkMarshaller` to deserializer the packet data. (The logging in line 5760 also shows that this is a plausible scenario)This is easily prevented as you know at compile time that this data is supposed to be an instance of `TcpDiscoveryAbstractMessage`, so checking the type and prevent unsafe deserialization in this case is fairly straightforward.

Please let me know if you need help or more information. Thanks.

*Vulnerabilities resolution process:*
https://www.apache.org/security/committers.html",,dmagda,ilyak,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 17:42;dmagda;ExampleNodeExploit.java;https://issues.apache.org/jira/secure/attachment/12892416/ExampleNodeExploit.java","16/Oct/17 17:42;dmagda;obj;https://issues.apache.org/jira/secure/attachment/12892417/obj",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 22 08:11:50 UTC 2020,,,,,,,,,,"0|i3lbgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 17:41;dmagda;Don't discuss the issue via public channels (such as @user or @dev) until the fix gets released.;;;","18/Jan/18 01:25;dmagda;Andrey Gura is working on the tickets preparing a patch for 2.4 release.;;;","30/Jan/18 14:01;ptupitsyn;[~dmagda] are we going to include the fix in 2.4? Why is this ticket {{Open}}?;;;","30/Jan/18 21:36;dmagda;Yes, the fix goes into 2.4 but we have to confirm it with the reporter first. So, let's keep the ticket in ""in progress"" state for a moment.;;;","11/Jul/18 21:23;dmagda;Was fixed and announced.;;;","22/Apr/20 08:11;ilyak;commit d268eb2573ad46efce8b6d9480b7c9c317b792cd
Author: Andrey Gura <agura@apache.org>
Date:   Mon Jan 22 22:41:54 2018 +0300

    ignite-6643 Marshalling improvements
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite node can try to join to itself,IGNITE-6639,13109692,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,mcherkasov,mcherkasov,16/Oct/17 12:20,16/Jul/18 16:13,14/Jul/23 06:20,25/Oct/17 15:45,2.3,,,,,2.4,,general,,,,0,,,,,,agoncharuk,githubbot,mcherkasov,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8683,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 16 16:13:50 UTC 2018,,,,,,,,,,"0|i3lb3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 16:18;mcherkasov;pull request: https://github.com/apache/ignite/pull/2909;;;","25/Oct/17 15:16;agoncharuk;Looks good, thanks!;;;","25/Oct/17 15:47;ntikhonov;[~mcherkas],
Thank you for your contribution! I've merged to master.;;;","01/Jun/18 14:54;githubbot;GitHub user Mikhail1988 opened a pull request:

    https://github.com/apache/ignite/pull/4109

    Tests fail after IGNITE-6639

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-master-8683

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4109.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4109
    
----
commit 08cc735b3dd802370ad67ee09c2a83d738ba8b55
Author: mcherkasov <mcherkasov@...>
Date:   2018-06-01T14:53:29Z

    Tests fail after IGNITE-6639

----
;;;","16/Jul/18 16:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4109
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No proper cleanup of statements cache is done on table drop,IGNITE-6637,13109681,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,16/Oct/17 11:35,16/Oct/17 13:44,14/Jul/23 06:20,16/Oct/17 13:44,,,,,,2.3,,sql,,,,0,,,,"We should cleanup statements cache whenever cache is deregistered - otherwise it's possible to retrieve from statements cache a statement that is prepared from H2 perspective but may not be executed. Such situation may arise for any dynamic cache, not only for that created via SQL.
Reproducer attached.",,al.psc,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 11:36;al.psc;IgniteCacheLocalQuerySelfTest.java;https://issues.apache.org/jira/secure/attachment/12892367/IgniteCacheLocalQuerySelfTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 16 13:44:22 UTC 2017,,,,,,,,,,"0|i3lb1b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 12:19;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2860

    IGNITE-6637 Statements cache clear on cache destroy.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6637

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2860.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2860
    
----
commit 0f2acd36c851a4f4ebdf5eff976e94289aa09bf2
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-10-16T12:18:46Z

    IGNITE-6637 Statements cache clear on cache destroy.

----
;;;","16/Oct/17 12:27;vozerov;[~al.psc], looks good to me.;;;","16/Oct/17 13:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2860
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect time units of average transaction commit/rollback duration cache metrics.,IGNITE-6630,13109336,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,xtern,xtern,xtern,13/Oct/17 18:58,02/Apr/18 13:06,14/Jul/23 06:20,02/Apr/18 13:05,2.2,,,,,2.5,,,,,,1,metrics,newbie,,"AverageTxCommitTime and AverageTxRollbackTime metrics in CacheMetrics counts in milliseconds instead of microseconds as pointed in javadoc.

Simple junit reproducer:
{code:java}
public class CacheMetricsTxAvgTimeTest extends GridCommonAbstractTest {
    /** */
    private <K, V> CacheConfiguration<K, V> cacheConfiguration(String name) {
        CacheConfiguration<K, V> cacheConfiguration = new CacheConfiguration<>(name);
        cacheConfiguration.setCacheMode(CacheMode.PARTITIONED);
        cacheConfiguration.setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL);
        cacheConfiguration.setStatisticsEnabled(true);
        return cacheConfiguration;
    }

    /** */
    public void testTxCommitDuration() throws Exception {
        try ( Ignite node = startGrid(0)) {
            IgniteCache<Object, Object> cache = node.createCache(cacheConfiguration(DEFAULT_CACHE_NAME));

            try (Transaction tx = node.transactions().txStart()) {
                cache.put(1, 1);

                // Await 1 second.
                U.sleep(1_000);

                tx.commit();
            }

            // Documentation says that this metric is in microseconds.
            float commitTime = cache.metrics().getAverageTxCommitTime();

            // But this assertion will fail because it in milliseconds and returns only ~1000.
            assert commitTime >= 1_000_000;
        }
    }
}
{code}
",,alex_pl,githubbot,nizhikov,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 02 13:06:16 UTC 2018,,,,,,,,,,"0|i3l99b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Oct/17 19:05;githubbot;GitHub user xtern opened a pull request:

    https://github.com/apache/ignite/pull/2854

    IGNITE-6630 Time units fix.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/xtern/ignite IGNITE-6630

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2854.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2854
    
----
commit 73cdd7c96914b3a08551f918e2214a5fdb7a4390
Author: Pereslegin Pavel <xtern@users.noreply.github.com>
Date:   2017-10-13T19:01:40Z

    IGNITE-6630 Time units fix.

----
;;;","06/Feb/18 07:14;nizhikov;[~xtern] Looks good to me.

Also, I can't open Team City build link you provide.
Can you, please, make sure the link is OK?;;;","07/Feb/18 13:24;xtern;[~NIzhikov], thank you,
I updated the link.;;;","29/Mar/18 12:30;xtern;Hello [~NIzhikov],
tests looks good, could you merge these changes?;;;","30/Mar/18 12:32;xtern;[~alex_pl]
could you take a look at this change, please?;;;","02/Apr/18 07:42;alex_pl;[~xtern], looks good to me.;;;","02/Apr/18 13:05;nizhikov;Merged to master.

[~xtern] Thanks for the contribution!;;;","02/Apr/18 13:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2854
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: cache deserialization fails with complex value type & enum,IGNITE-6627,13109290,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,alexey.tank2,alexey.tank2,13/Oct/17 15:29,27/Oct/17 12:53,14/Jul/23 06:20,19/Oct/17 09:38,2.2,,,,,2.4,,platforms,,,,0,.NET,,,"There is an deserialization issue with complex structure.

Please see the sample code below:
{noformat}
    public enum SampleEnum : byte
    {
        One = 0,
        Two = 1,
        Three = 2
    }
{noformat}
{noformat}
                var cache = ignite.GetOrCreateCache<string, Dictionary<SampleEnum, Dictionary<int, int>>>(""mySampleCache"");
                cache.Put(""DictData"", Dict);
                var result = cache.Get(""DictData"");                
{noformat}

var result = cache.Get(""DictData""); fails with exception:
{""The constructor to deserialize an object of type 'System.Collections.Generic.ObjectEqualityComparer`1[SampleProject.SampleEnum]' was not found.""}

If we change 
Dictionary<SampleEnum, Dictionary<int, int>>
to 
Dictionary<int, Dictionary<int, int>>
then everything works fine ",,alexey.tank2,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 19 09:38:58 UTC 2017,,,,,,,,,,"0|i3l8z3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Oct/17 16:10;alexey.tank2;There are 3 actual fixes here:
1. Type EnumEqualityComparer`1 serialization issue: its object type ObjectEqualityComparer`1 is not ISerializable and should not be serialized.
Some explanation could be found here http://dotnetstudio.blogspot.ru/2012/06/net-35-to-net-40-enum.html
2. HashSet and other generic collection deserialization issue for enum arrays: object array was not casted to enum array
3. EmptyObject serialization issues: typeid of such object were not passed to Grid (BinaryProcessor)

Several tests were added for all issues.

[~ptupitsyn] please review the changes;;;","16/Oct/17 16:11;githubbot;GitHub user apopovgg opened a pull request:

    https://github.com/apache/ignite/pull/2864

    IGNITE-6627 .NET: cache deserialization fails with complex value type…

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6627

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2864.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2864
    
----
commit 80bebfc0752fb75feb8eaea1771fb03ce01429ac
Author: apopov <tank2.alex@gmail.com>
Date:   2017-10-16T16:10:16Z

    IGNITE-6627 .NET: cache deserialization fails with complex value type & enum

----
;;;","17/Oct/17 11:47;ptupitsyn;Looks good to me. Merged to master: {{93bf555a98c472ff7028a641b32ef5d8ba8df7cd}}.
Great job, [~alexey.tank2].;;;","17/Oct/17 11:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2864
;;;","18/Oct/17 12:57;ptupitsyn;Merged fix defeats {{BinaryStructureTracker}} purpose, which is to avoid sending already known metadata to the cluster. Investigating.;;;","18/Oct/17 13:07;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2876

    IGNITE-6627 .NET: Fix repeated known metadata updates

    Previous commit has broken the BinaryStructureTracker optimization

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-6627-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2876.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2876
    
----
commit d3c4a3e61a32343aeee012c1b751a96b490fb1bc
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-10-18T13:03:48Z

    IGNITE-6627 .NET: Fix structure tracker optimization

----
;;;","19/Oct/17 09:38;ptupitsyn;Repeated known metadata update fixed, merged to master: {{92cbc6b33dd936de2163bf1ec340c2c9f567e039}}.;;;","19/Oct/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2876
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: export query result set doesn't work on Edge,IGNITE-6623,13109229,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,pkonstantinov,pkonstantinov,13/Oct/17 10:43,21/Nov/17 13:20,14/Jul/23 06:20,17/Nov/17 10:04,,,,,,2.4,,wizards,,,,0,,,,Execute any query and try to Export\ExportAll in result table,,alexdel,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 17 10:03:54 UTC 2017,,,,,,,,,,"0|i3l8lj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 09:55;alexdel;This issue was fixed along with IGNITE-6914;;;","17/Nov/17 10:03;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Document JDBC/ODBC ""skipReducerOnUpdate"" flag",IGNITE-6620,13109205,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,vozerov,vozerov,13/Oct/17 09:36,14/Nov/17 19:44,14/Jul/23 06:20,14/Nov/17 19:44,,,,,,2.3,,documentation,,,,0,,,,,,dmagda,pgarg,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6685,,,,,,,,IGNITE-6024,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 14 19:44:23 UTC 2017,,,,,,,,,,"0|i3l8g7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Oct/17 01:02;dmagda;[~vozerov], presently this parameter is documented as {{UPDATE_ON_SERVER}} in ODBC doc. Please update it if required:
https://apacheignite-sql.readme.io/docs/connection-string-and-dsn;;;","06/Nov/17 21:53;dmagda;[~pgarg],

Please check up {{skipReducerOnUpdate}} description on both JDBC drivers' pages:
https://apacheignite-sql.readme.io/v2.3/docs/jdbc-client-driver
https://apacheignite-sql.readme.io/v2.3/docs/jdbc-driver

and {{SKIP_REDUCER_ON_UPDATE}} for ODBC:
https://apacheignite-sql.readme.io/v2.3/docs/connection-string-and-dsn

The content is the same on all three pages.;;;","14/Nov/17 19:44;pgarg;Done.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Do not show client nodes in node selection modal,IGNITE-6618,13109195,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,13/Oct/17 08:46,16/Nov/17 09:51,14/Jul/23 06:20,15/Nov/17 15:02,2.1,,,,,2.4,,wizards,,,,0,,,,"I tried to 'Execute on Selected Node' the following query
{code}
SELECT c.id, d.id, p.id, p.salary 
FROM ""c_partitioned"".City c
inner join ""c_partitioned"".Department d
on c.id=d.CTYID 
inner join ""c_partitioned"".Person p
on d.id=p.depID and p.salary > 5000
inner join ""c_partitioned"".PersonBonus pb
on p.id=pb.perID and pb.COUNT  < 5000
where exists (select * from ""c_partitioned"".Person where rank > 0)
{code}

and selected a client node in the list of nodes
and got exception
{code}
General error: ""java.lang.NullPointerException""; SQL statement: SELECT c.id, d.id, p.id, p.salary 
 FROM ""c_partitioned"".City c
 inner join ""c_partitioned"".Department d
 on c.id=d.CTYID 
 inner join ""c_partitioned"".Person p
 on d.id=p.depID and p.salary > 5000
 inner join ""c_partitioned"".PersonBonus pb
 on p.id=pb.perID and pb.COUNT < 5000
 where exists (select * from ""c_partitioned"".Person where rank > 0) [50000-195]
{code}",,alexdel,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 16 09:50:57 UTC 2017,,,,,,,,,,"0|i3l8dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Nov/17 04:16;alexdel;Excluded client nodes from selection modal. Please test.;;;","15/Nov/17 10:38;pkonstantinov;Tested in branch;;;","15/Nov/17 15:02;kuaw26;Merged to master. Please retest.;;;","16/Nov/17 09:50;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H2PkHashIndex.H2Cursor doesn't take in count expiration,IGNITE-6609,13108891,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkouznet,vozerov,vozerov,12/Oct/17 11:46,04/Mar/19 17:28,14/Jul/23 06:20,26/Feb/19 09:22,2.3,,,,,2.8,,sql,,,,0,,,,"Correct: {{H2Cursor#next}} - expire time is checked;
Incorrect: {{H2PkHashIndex.H2Cursor#next}} - expired time is ignored.",,ignitetcbot,pkouznet,vozerov,,,,,,,,,,"pavel-kuznetsov commented on pull request #6158: IGNITE-6609: Skip expired rows.
URL: https://github.com/apache/ignite/pull/6158
 
 
   Added condition to skip rows that have expired (H2PkHashIndex)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Feb/19 16:49;githubbot;600","asfgit commented on pull request #6158: IGNITE-6609: Skip expired rows.
URL: https://github.com/apache/ignite/pull/6158
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 09:25;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 04 17:28:06 UTC 2019,,,,,,,,,,"0|i3l6nz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/19 16:56;pkouznet;I've done the trivial changes. 
1) Don't we have other Cursors to do same thing left?
2) These changes doesn't seem to be easy-to-test, any ideas?

[~tledkov-gridgain], could you please take a look at the patch ?;;;","21/Feb/19 18:27;pkouznet;p2: do we need to check row for expire time in the {{org.apache.ignite.internal.processors.query.h2.database.H2TreeIndex#find}} ?
{code:java}
            if (!cctx.mvccEnabled() && indexType.isPrimaryKey() && lower != null && upper != null &&
                tree.compareRows((H2Row)lower, (H2Row)upper) == 0) {
                H2Row row = tree.findOne((H2Row)lower, filter(qryCtxRegistry.getThreadLocal()), null);

                return (row == null) ? GridH2Cursor.EMPTY : new SingleRowCursor(row);
            }
{code};;;","25/Feb/19 08:24;vozerov;[~pkouznet], fix looks good, but there are no tests. Note that index usage can be forced with {{USE INDEX}} hint [1].

[1] http://www.h2database.com/html/performance.html;;;","25/Feb/19 11:50;pkouznet;[~vozerov] Thank you for the link.
I've pushed the tests.
I experienced that index hints doesn't work if we want to set tree index.
next query actually causes using the hash index: 
{code:sql}
SELECT * FROM ""notEager"".Integer use index (""_key_PK"") WHERE id >= 42 and id <= 42
{code}

so I din't use index hints in the tests for the tree index.;;;","26/Feb/19 09:22;vozerov;Looks good. Merged to master.;;;","04/Mar/19 17:28;ignitetcbot;{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}MVCC Cache 3{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=3175720]]

{color:#d04437}Cache (Full API){color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=3175676]]
* IgniteCacheFullApiSelfTestSuite: GridCacheReplicatedNearOnlyMultiNodeFullApiSelfTest.testTtlTx - 0,0% fails in last 599 master runs.

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3175732&amp;buildTypeId=IgniteTests24Java8_RunAll];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A safer way for user re-login in kerberized cluster,IGNITE-6596,13108533,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,reidchan,reidchan,11/Oct/17 08:54,26/Jun/18 17:50,14/Jul/23 06:20,05/Jun/18 11:09,2.2,,,,,2.7,,hadoop,,,,0,,,,"I'm running kerberos related tests before putting ignite into productions. And accidentally found that the re-login user (login through keytab), somehow, was replaced by system-wide user (login through kinit).",,reidchan,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 09:00;reidchan;IGNITE-6596.master.001.patch;https://issues.apache.org/jira/secure/attachment/12891443/IGNITE-6596.master.001.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 05 14:35:18 UTC 2018,,,,,,,,,,"0|i3l4gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 09:01;reidchan;A small patch;;;","11/Oct/17 09:05;reidchan;ping [~vozerov], [~iveselovskiy] for a review.
Btw, i don't have the privilege to assign this issue to myself.;;;","05/Jun/18 09:44;vozerov;[~reidchan], 
Patch looks good, thank you for contribution. I created a PR [1] to be able to run tests prior to merge.

[1] https://github.com/apache/ignite/pull/4129;;;","05/Jun/18 09:47;vozerov;Test runs:
https://ci.ignite.apache.org/viewQueued.html?itemId=1359882
https://ci.ignite.apache.org/viewQueued.html?itemId=1359884
https://ci.ignite.apache.org/viewQueued.html?itemId=1359886;;;","05/Jun/18 11:09;vozerov;[~reidchan], 
Tests looks fine. I merged patch to master branch.
Thank you!;;;","05/Jun/18 14:35;reidchan;Thanks [~vozerov]
Also, would you mind taking a look at https://issues.apache.org/jira/browse/IGNITE-6747;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rebuildIndexesFromHash does not touch cache entries,IGNITE-6595,13108532,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,agoncharuk,agoncharuk,11/Oct/17 08:51,05/Jun/18 11:08,14/Jul/23 06:20,18/Oct/17 08:04,2.2,,,,,2.3,,cache,,,,0,,,,"rebuildIndexesFromHash does not touch cache entry after ensureIndex(), which leads to memory leak.",,agoncharuk,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6628,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 05 11:08:50 UTC 2018,,,,,,,,,,"0|i3l4gf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Oct/17 08:04;agoncharuk;Added touch() for cache entry during index rebuild;;;","05/Jun/18 09:44;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/4129

    IGNITE-6595: Applied patch.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6596

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4129.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4129
    
----
commit 5ca069c63c97a1007b45a89167472f8041d84879
Author: devozerov <vozerov@...>
Date:   2018-06-05T09:39:46Z

    Applied patch.

----
;;;","05/Jun/18 11:08;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/4129
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TCP port in bin/control.sh differs from default,IGNITE-6590,13108284,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,MikeZhur,ilyak,ilyak,10/Oct/17 12:34,15/Jul/20 10:34,14/Jul/23 06:20,11/Dec/17 12:46,2.2,,,,,2.4,,clients,control.sh,,,0,,,,"{code}
% bin/ignite.sh -v
>>> Local ports: TCP:8081 TCP:10800 TCP:11211 TCP:47100 TCP:47500 

% bin/control.sh --host 127.0.0.1
окт 10, 2017 3:01:26 PM org.apache.ignite.internal.client.impl.GridClientImpl <init>
WARNING: Failed to initialize topology on client start. Will retry in background.
Caused by: class org.apache.ignite.internal.client.GridServerUnreachableException: Failed to connect to any of the servers in list: [/127.0.0.1:11212]
{code}

11212 != 11211. But it's very hard to spot visually. Please fix control.sh to use correct port by default.",,agura,githubbot,ilyak,,,,,,,,,,"dspavlov commented on issue #3042: IGNITE-6590: TCP port in bin/control.sh differs from default
URL: https://github.com/apache/ignite/pull/3042#issuecomment-517662717
 
 
   The ticket is resolved, closing PR. Feel free to reopen if needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:13;githubbot;600","dspavlov commented on pull request #3042: IGNITE-6590: TCP port in bin/control.sh differs from default
URL: https://github.com/apache/ignite/pull/3042
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 11 12:46:27 UTC 2017,,,,,,,,,,"0|i3l2y7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 10:23;githubbot;GitHub user MikeZhur opened a pull request:

    https://github.com/apache/ignite/pull/3042

    IGNITE-6590: TCP port in bin/control.sh differs from default

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/MikeZhur/ignite ignite-2.2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3042.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3042
    
----
commit 31b00d5edb48379aa7652ce3fcf88f3cda0a2821
Author: Mike Zhuravlev <mike.zhur@gmail.com>
Date:   2017-11-15T11:17:00Z

    IGNITE-6590: TCP port in bin/control.sh differs from default

----
;;;","11/Dec/17 12:46;agura;LGTM. Merged to master branch. 
Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Methods of rebalancing progress metrics must obey JavaBean naming conventions,IGNITE-6583,13107975,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,09/Oct/17 13:23,26/Oct/17 09:51,14/Jul/23 06:20,09/Oct/17 15:40,,,,,,2.3,,general,,,,0,,,,"h2. Notes
Getters for *rebalancingStartTime* and *estimateRebalancingFinishTime* metrics from *CacheMetrics* interface don't follow JavaBean naming conventions; method names don't start with *get* prefix.

As a result metrics cannot be accessed via MXBean interface.

h2. Acceptance Criteria
# Methods *getRebalancingStartTime* and *getEstimateRebalancingFinishTime* are introduced to *CacheMetrics* interface.
# Existing methods *rebalancingStartTime* and *estimateRebalancingFinishTime* are declared as deprecated and will be deleted in future major release.",,agura,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 09 15:40:56 UTC 2017,,,,,,,,,,"0|i3l127:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Oct/17 15:40;agura;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
clent deadlock in spiStart,IGNITE-6581,13107967,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kdudkov,kdudkov,kdudkov,09/Oct/17 12:57,18/Oct/17 10:02,14/Jul/23 06:20,18/Oct/17 10:02,1.9,,,,,,,,,,,0,,,,"
{code:java}
""tcp-client-disco-msg-worker-#4%soloots-tg-ManagementFabric%"" #50 prio=5 os_prio=0 tid=0x00007fafecd50800 nid=0x469e sleeping[0x00007fafc3bfa000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at org.apache.ignite.internal.util.GridSpinReadWriteLock.tryWriteLock(GridSpinReadWriteLock.java:349)
        at org.apache.ignite.internal.GridKernalGatewayImpl.writeLock(GridKernalGatewayImpl.java:121)
        at org.apache.ignite.internal.IgniteKernal.onDisconnected(IgniteKernal.java:3427)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery(GridDiscoveryManager.java:601)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.notifyDiscovery(ClientImpl.java:2400)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.notifyDiscovery(ClientImpl.java:2379)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.body(ClientImpl.java:1707)
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)

""main"" #1 prio=5 os_prio=0 tid=0x00007fafec010000 nid=0x4644 waiting on condition [0x00007faff3250000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x000000068a331ad0> (a java.util.concurrent.CountDownLatch$Sync)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl.spiStart(ClientImpl.java:265)
        at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStart(TcpDiscoverySpi.java:1862)
        at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:268)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.start(GridDiscoveryManager.java:690)
        at org.apache.ignite.internal.IgniteKernal.startManager(IgniteKernal.java:1682)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:940)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1814)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1605)
        - locked <0x00000004107210e8> (a org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:569)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:516)
        at org.apache.ignite.Ignition.start(Ignition.java:322)
        at com.workday.fabric.ignite.IgniteFabric.lambda$start$1(IgniteFabric.java:143)
        at com.workday.fabric.ignite.IgniteFabric$$Lambda$6/576020159.run(Unknown Source)
        at com.workday.fabric.util.InvocationInterceptor.invokeRunnable(InvocationInterceptor.java:119)
        at com.workday.fabric.ignite.IgniteFabric.start(IgniteFabric.java:138)
        - locked <0x00000004107212e0> (a com.workday.fabric.ignite.IgniteWorkdayFabric)
        at com.workday.fabric.FabricManager.ensureFabric(FabricManager.java:146)
        - locked <0x0000000410721368> (a java.util.concurrent.ConcurrentHashMap)
        at com.workday.fabric.WorkdayFabricManager.ensureFabric(WorkdayFabricManager.java:76)
        at com.workday.fabric.verifier.FabricVerifier.verify(FabricVerifier.java:347)
        at com.workday.fabric.verifier.FabricVerifier.main(FabricVerifier.java:276)
{code}
",,dopsun,kdudkov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 13 13:18:09 UTC 2017,,,,,,,,,,"0|i3l10f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Oct/17 13:18;sboikov;[~kdudkov], I think this issue should be fixed in this way: when client detects that it is disconnected but client join was never finished (joinLatch is not released), then there is no need to call notifyDiscovery.

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Too many diagnostic: Found long running cache future,IGNITE-6578,13107903,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,guseinov,sbberkov,sbberkov,09/Oct/17 07:29,26/Feb/19 14:01,14/Jul/23 06:20,26/Feb/19 13:23,2.1,2.7,,,,2.8,,general,,,,0,,,,"Get about 100Mb of message:
<date> [WARN][grid-timeout-worker-...][o.apache.ignite.internal.diagnostic] Found long running cache future <future>
few equals message per ms! Can loose logs by rotating! Can't read logs without prefiltering!

Reproducer is attached  [^LongRunningCacheFutureReproducer.java] ",,briggxs,guseinov,ignitetcbot,ilyak,sbberkov,,,,,,,,"gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/19 16:41;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259388546
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
 
 Review comment:
   Can we please extract this number to IGNITE_foo system property?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/19 15:30;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259389202
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
+
         if (tm != null) {
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
         }
 
+        warnings.flush(""First %d long running transactions [total=%d]"");
 
 Review comment:
   It would be nicer if we won't reuse warnings, but create new object each time (of smallest visibility scope possible). This way you won't need cleanup code, just discard your object.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/19 15:30;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259721935
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
+
         if (tm != null) {
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
         }
 
+        warnings.flush(""First %d long running transactions [total=%d]"");
 
 Review comment:
   The smallest visibility scope possible is a good approach. But wouldn't it be better to avoid multiple objects creation? Especially if they won't be used in most cases.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 08:44;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259725944
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
 
 Review comment:
   Yes, this makes sense. However other parts of this class don't make a similar parameter configurable.
   
   https://github.com/apache/ignite/blob/26a15264ae69e4127f9e0b3e88830bf3edc56ece/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java#L1859
   
   https://github.com/apache/ignite/blob/26a15264ae69e4127f9e0b3e88830bf3edc56ece/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java#L2729
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 08:55;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259741323
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
 
 Review comment:
   I would propose to introduce a single sys var to configure all three of them. Use default values (5, 10) if it is not present.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 09:37;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259743430
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
+
         if (tm != null) {
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
         }
 
+        warnings.flush(""First %d long running transactions [total=%d]"");
 
 Review comment:
   Nope, this code runs once per tens of seconds, correctness and brevity is much more important here
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 09:42;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259815090
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 13:10;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r259815124
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1935,41 +1935,61 @@ private boolean dumpLongRunningOperations0(long timeout) {
         final IgniteDiagnosticPrepareContext diagCtx = cctx.kernalContext().cluster().diagnosticEnabled() ?
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
+        WarningsGroup warnings = new WarningsGroup(diagnosticLog, 10);
+
         if (tm != null) {
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
         }
 
+        warnings.flush(""First %d long running transactions [total=%d]"");
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 13:10;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260224635
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -3366,4 +3396,99 @@ private AffinityReadyFuture(AffinityTopologyVersion topVer) {
             return S.toString(AffinityReadyFuture.class, this, super.toString());
         }
     }
+
+    /**
+     * Class to print only limited number of warnings.
+     */
+    private static class WarningsGroup {
+        /** */
+        private final IgniteLogger log;
+
+        /** */
+        private final int warningsLimit;
+
+        /** */
+        private List<String> messages;
+
+        /** */
+        private int warningsTotal;
+
+        /**
+         * @param log Target logger.
+         * @param warningsLimit Warnings limit.
+         */
+        private WarningsGroup(IgniteLogger log, int warningsLimit) {
+            this.log = log;
+
+            this.warningsLimit = warningsLimit;
+        }
+
+        /**
+         * @param msg Warning message.
+         * @return {@code true} if message is added to list.
+         */
+        private boolean add(String msg) {
+            boolean added = false;
+
+            if (canAddMessage()) {
+                if (messages == null)
+                    messages = new ArrayList<>(warningsLimit);
+
+                messages.add(msg);
+
+                added = true;
+            }
+
+            warningsTotal++;
+
+            return added;
+        }
+
+        /**
+         * @return {@code true} if messages list size less than limit.
+         */
+        private boolean canAddMessage() {
+            return warningsTotal < warningsLimit;
+        }
+
+        /**
+         * Increase total number of warnings.
+         */
+        private void incTotal() {
+            warningsTotal++;
+        }
+
+        /**
+         * Print warnings block title and messages.
+         *
+         * @param title Title template.
+         */
+        private void flush(String title) {
 
 Review comment:
   Thus you can only keep one flush() method and simplify it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 10:41;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260224047
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -153,6 +154,9 @@
     private final long IGNITE_EXCHANGE_MERGE_DELAY =
         IgniteSystemProperties.getLong(IgniteSystemProperties.IGNITE_EXCHANGE_MERGE_DELAY, 0);
 
+    /** */
+    private final int DIAGNOSTIC_WARN_LIMIT = IgniteSystemProperties.getInteger(IGNITE_DIAGNOSTIC_WARN_LIMIT, 10);
 
 Review comment:
   Private final fields should not be in ALL_CAPS and should go after private static final. My suggestion is to compute it in dumpDebugInfo() every time. We are trying to avoid static fields since they have side-effects when running a lot of tests (can't change mid-flight).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 10:41;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260224384
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1936,40 +1944,62 @@ private boolean dumpLongRunningOperations0(long timeout) {
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
         if (tm != null) {
+            WarningsGroup warnings = new WarningsGroup(diagnosticLog, DIAGNOSTIC_WARN_LIMIT);
+
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
+
+            warnings.flush(""First %d long running transactions [total=%d]"");
         }
 
         if (mvcc != null) {
+            WarningsGroup warnings = new WarningsGroup(diagnosticLog, DIAGNOSTIC_WARN_LIMIT);
+
             for (GridCacheFuture<?> fut : mvcc.activeFutures()) {
                 if (curTime - fut.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running cache future [startTime="" + formatTime(fut.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", fut="" + fut + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Future [startTime="" + formatTime(fut.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", fut="" + fut + ']');
+                    }
+                    else
+                        warnings.incTotal();
 
                     if (diagCtx != null && fut instanceof IgniteDiagnosticAware)
                         ((IgniteDiagnosticAware)fut).addDiagnosticRequest(diagCtx);
                 }
             }
 
+            warnings.flush(""First %d long running cache futures [total=%d]"", true);
 
 Review comment:
   My suggestion is to have two Warnings instances activeWarnings/atomicWarnings instead, removing the need of clear=true.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 10:41;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260257526
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1936,40 +1944,62 @@ private boolean dumpLongRunningOperations0(long timeout) {
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
         if (tm != null) {
+            WarningsGroup warnings = new WarningsGroup(diagnosticLog, DIAGNOSTIC_WARN_LIMIT);
+
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
+
+            warnings.flush(""First %d long running transactions [total=%d]"");
         }
 
         if (mvcc != null) {
+            WarningsGroup warnings = new WarningsGroup(diagnosticLog, DIAGNOSTIC_WARN_LIMIT);
+
             for (GridCacheFuture<?> fut : mvcc.activeFutures()) {
                 if (curTime - fut.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running cache future [startTime="" + formatTime(fut.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", fut="" + fut + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Future [startTime="" + formatTime(fut.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", fut="" + fut + ']');
+                    }
+                    else
+                        warnings.incTotal();
 
                     if (diagCtx != null && fut instanceof IgniteDiagnosticAware)
                         ((IgniteDiagnosticAware)fut).addDiagnosticRequest(diagCtx);
                 }
             }
 
+            warnings.flush(""First %d long running cache futures [total=%d]"", true);
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 12:15;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260257559
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -3366,4 +3396,99 @@ private AffinityReadyFuture(AffinityTopologyVersion topVer) {
             return S.toString(AffinityReadyFuture.class, this, super.toString());
         }
     }
+
+    /**
+     * Class to print only limited number of warnings.
+     */
+    private static class WarningsGroup {
+        /** */
+        private final IgniteLogger log;
+
+        /** */
+        private final int warningsLimit;
+
+        /** */
+        private List<String> messages;
+
+        /** */
+        private int warningsTotal;
+
+        /**
+         * @param log Target logger.
+         * @param warningsLimit Warnings limit.
+         */
+        private WarningsGroup(IgniteLogger log, int warningsLimit) {
+            this.log = log;
+
+            this.warningsLimit = warningsLimit;
+        }
+
+        /**
+         * @param msg Warning message.
+         * @return {@code true} if message is added to list.
+         */
+        private boolean add(String msg) {
+            boolean added = false;
+
+            if (canAddMessage()) {
+                if (messages == null)
+                    messages = new ArrayList<>(warningsLimit);
+
+                messages.add(msg);
+
+                added = true;
+            }
+
+            warningsTotal++;
+
+            return added;
+        }
+
+        /**
+         * @return {@code true} if messages list size less than limit.
+         */
+        private boolean canAddMessage() {
+            return warningsTotal < warningsLimit;
+        }
+
+        /**
+         * Increase total number of warnings.
+         */
+        private void incTotal() {
+            warningsTotal++;
+        }
+
+        /**
+         * Print warnings block title and messages.
+         *
+         * @param title Title template.
+         */
+        private void flush(String title) {
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 12:15;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260257526
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1936,40 +1944,62 @@ private boolean dumpLongRunningOperations0(long timeout) {
             new IgniteDiagnosticPrepareContext(cctx.localNodeId()) : null;
 
         if (tm != null) {
+            WarningsGroup warnings = new WarningsGroup(diagnosticLog, DIAGNOSTIC_WARN_LIMIT);
+
             for (IgniteInternalTx tx : tm.activeTransactions()) {
                 if (curTime - tx.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running transaction [startTime="" + formatTime(tx.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Transaction [startTime="" + formatTime(tx.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", tx="" + tx + ']');
+                    }
+                    else
+                        warnings.incTotal();
                 }
             }
+
+            warnings.flush(""First %d long running transactions [total=%d]"");
         }
 
         if (mvcc != null) {
+            WarningsGroup warnings = new WarningsGroup(diagnosticLog, DIAGNOSTIC_WARN_LIMIT);
+
             for (GridCacheFuture<?> fut : mvcc.activeFutures()) {
                 if (curTime - fut.startTime() > timeout) {
                     found = true;
 
-                    U.warn(diagnosticLog, ""Found long running cache future [startTime="" + formatTime(fut.startTime()) +
-                        "", curTime="" + formatTime(curTime) + "", fut="" + fut + ']');
+                    if (warnings.canAddMessage()) {
+                        warnings.add("">>> Future [startTime="" + formatTime(fut.startTime()) +
+                            "", curTime="" + formatTime(curTime) + "", fut="" + fut + ']');
+                    }
+                    else
+                        warnings.incTotal();
 
                     if (diagCtx != null && fut instanceof IgniteDiagnosticAware)
                         ((IgniteDiagnosticAware)fut).addDiagnosticRequest(diagCtx);
                 }
             }
 
+            warnings.flush(""First %d long running cache futures [total=%d]"", true);
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 12:15;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260257559
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -3366,4 +3396,99 @@ private AffinityReadyFuture(AffinityTopologyVersion topVer) {
             return S.toString(AffinityReadyFuture.class, this, super.toString());
         }
     }
+
+    /**
+     * Class to print only limited number of warnings.
+     */
+    private static class WarningsGroup {
+        /** */
+        private final IgniteLogger log;
+
+        /** */
+        private final int warningsLimit;
+
+        /** */
+        private List<String> messages;
+
+        /** */
+        private int warningsTotal;
+
+        /**
+         * @param log Target logger.
+         * @param warningsLimit Warnings limit.
+         */
+        private WarningsGroup(IgniteLogger log, int warningsLimit) {
+            this.log = log;
+
+            this.warningsLimit = warningsLimit;
+        }
+
+        /**
+         * @param msg Warning message.
+         * @return {@code true} if message is added to list.
+         */
+        private boolean add(String msg) {
+            boolean added = false;
+
+            if (canAddMessage()) {
+                if (messages == null)
+                    messages = new ArrayList<>(warningsLimit);
+
+                messages.add(msg);
+
+                added = true;
+            }
+
+            warningsTotal++;
+
+            return added;
+        }
+
+        /**
+         * @return {@code true} if messages list size less than limit.
+         */
+        private boolean canAddMessage() {
+            return warningsTotal < warningsLimit;
+        }
+
+        /**
+         * Increase total number of warnings.
+         */
+        private void incTotal() {
+            warningsTotal++;
+        }
+
+        /**
+         * Print warnings block title and messages.
+         *
+         * @param title Title template.
+         */
+        private void flush(String title) {
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 12:15;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260267244
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1856,14 +1860,17 @@ public void dumpDebugInfo(@Nullable GridDhtPartitionsExchangeFuture exchFut) thr
         exchWorker.dumpExchangeDebugInfo();
 
         if (!readyFuts.isEmpty()) {
-            U.warn(diagnosticLog, ""First 5 pending affinity ready futures [total="" + readyFuts.size() + ']');
+            int warningsLimit = IgniteSystemProperties.getInteger(IGNITE_DIAGNOSTIC_WARN_LIMIT, 5);
+
+            U.warn(diagnosticLog, ""First "" + warningsLimit + "" pending affinity ready futures [total="" +
+                readyFuts.size() + ']');
 
             int cnt = 0;
 
             for (AffinityReadyFuture fut : readyFuts.values()) {
                 U.warn(diagnosticLog, "">>> "" + fut);
 
-                if (++cnt == 5)
+                if (++cnt == warningsLimit)
 
 Review comment:
   It looks like we can't have IGNITE_DIAGNOSTIC_WARN_LIMIT = 0 since at least one message will always be printed. Can we move this check up (while avoiding off-by-one error) so that we could completely disable those messages with IGNITE_DIAGNOSTIC_WARN_LIMIT=0? Here and below, everywhere where it is checked.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 12:44;githubbot;600","alamar commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260267244
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1856,14 +1860,17 @@ public void dumpDebugInfo(@Nullable GridDhtPartitionsExchangeFuture exchFut) thr
         exchWorker.dumpExchangeDebugInfo();
 
         if (!readyFuts.isEmpty()) {
-            U.warn(diagnosticLog, ""First 5 pending affinity ready futures [total="" + readyFuts.size() + ']');
+            int warningsLimit = IgniteSystemProperties.getInteger(IGNITE_DIAGNOSTIC_WARN_LIMIT, 5);
+
+            U.warn(diagnosticLog, ""First "" + warningsLimit + "" pending affinity ready futures [total="" +
+                readyFuts.size() + ']');
 
             int cnt = 0;
 
             for (AffinityReadyFuture fut : readyFuts.values()) {
                 U.warn(diagnosticLog, "">>> "" + fut);
 
-                if (++cnt == 5)
+                if (++cnt == warningsLimit)
 
 Review comment:
   It looks like we can't have IGNITE_DIAGNOSTIC_WARN_LIMIT = 0 since at least one message will always be printed. Can we move this check up (while avoiding off-by-one error) so that we could completely disable those messages with IGNITE_DIAGNOSTIC_WARN_LIMIT=0? Here and below, everywhere where it is checked.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 12:44;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260274376
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1856,14 +1860,17 @@ public void dumpDebugInfo(@Nullable GridDhtPartitionsExchangeFuture exchFut) thr
         exchWorker.dumpExchangeDebugInfo();
 
         if (!readyFuts.isEmpty()) {
-            U.warn(diagnosticLog, ""First 5 pending affinity ready futures [total="" + readyFuts.size() + ']');
+            int warningsLimit = IgniteSystemProperties.getInteger(IGNITE_DIAGNOSTIC_WARN_LIMIT, 5);
+
+            U.warn(diagnosticLog, ""First "" + warningsLimit + "" pending affinity ready futures [total="" +
+                readyFuts.size() + ']');
 
             int cnt = 0;
 
             for (AffinityReadyFuture fut : readyFuts.values()) {
                 U.warn(diagnosticLog, "">>> "" + fut);
 
-                if (++cnt == 5)
+                if (++cnt == warningsLimit)
 
 Review comment:
   That's a good point. Fixed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 13:04;githubbot;600","gromtech commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168#discussion_r260274376
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
 ##########
 @@ -1856,14 +1860,17 @@ public void dumpDebugInfo(@Nullable GridDhtPartitionsExchangeFuture exchFut) thr
         exchWorker.dumpExchangeDebugInfo();
 
         if (!readyFuts.isEmpty()) {
-            U.warn(diagnosticLog, ""First 5 pending affinity ready futures [total="" + readyFuts.size() + ']');
+            int warningsLimit = IgniteSystemProperties.getInteger(IGNITE_DIAGNOSTIC_WARN_LIMIT, 5);
+
+            U.warn(diagnosticLog, ""First "" + warningsLimit + "" pending affinity ready futures [total="" +
+                readyFuts.size() + ']');
 
             int cnt = 0;
 
             for (AffinityReadyFuture fut : readyFuts.values()) {
                 U.warn(diagnosticLog, "">>> "" + fut);
 
-                if (++cnt == 5)
+                if (++cnt == warningsLimit)
 
 Review comment:
   That's a good point. Fixed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 13:04;githubbot;600","asfgit commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 13:24;githubbot;600","asfgit commented on pull request #6168: IGNITE-6578 Too many diagnostic: Found long running cache future
URL: https://github.com/apache/ignite/pull/6168
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 13:24;githubbot;600",,0,13200,,,0,13200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Feb/19 08:20;guseinov;LongRunningCacheFutureReproducer.java;https://issues.apache.org/jira/secure/attachment/12958832/LongRunningCacheFutureReproducer.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 26 14:01:24 UTC 2019,,,,,,,,,,"0|i3l0m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Feb/19 18:49;ignitetcbot;{panel:title=-&gt; Run :: IntelliJ IDEA Inspections: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *-&gt; Run :: IntelliJ IDEA Inspections* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3147083&amp;buildTypeId=IgniteTests24Java8_RunIntelliJIdeaInspections];;;","22/Feb/19 14:18;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3153304&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","22/Feb/19 14:22;guseinov;Added limit of diagnostic warnings;;;","22/Feb/19 14:24;guseinov;[~ilyak], could you please review the PR https://github.com/apache/ignite/pull/6168 ?;;;","22/Feb/19 15:30;ilyak;[~guseinov] I have left some comments;;;","25/Feb/19 13:09;guseinov;[~ilyak], thank you for the review. I've made the required changes and triggered TC tests one more time.;;;","26/Feb/19 09:56;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3176421&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","26/Feb/19 09:57;guseinov;Hi [~ilyak], please take a look at the updated PR.;;;","26/Feb/19 13:22;ilyak;[~guseinov] Thank you for this contribution! I have merged it to master after some tweaks.;;;","26/Feb/19 14:01;guseinov;[~ilyak], thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
During start cache we should check temporary file existence besides lock file,IGNITE-6577,13107848,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,08/Oct/17 15:10,23/Oct/17 14:11,14/Jul/23 06:20,23/Oct/17 14:09,2.2,,,,,2.4,,,,,,0,,,,"Now we discard content of cache directory if there is lock file because it means that cache was not completely restored.
But except it, there could be temporary directory and if there is marker file it means that cache restore wasn't completed. ",,agoncharuk,githubbot,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 23 14:11:25 UTC 2017,,,,,,,,,,"0|i3l09z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Oct/17 16:08;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/2817

    IGNITE-6577

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6577

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2817.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2817
    
----
commit 308d1d787e8046663731118b758189d9d00fdf03
Author: Eduard Shangareev <eshangareev@gridgain.com>
Date:   2017-10-08T14:53:42Z

    GG-12682 Restart cluster during snapshot RESTORE fails

----
;;;","08/Oct/17 16:08;EdShangGG;PR
https://github.com/apache/ignite/pull/2817

Test run
https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_RunAll&tab=buildTypeStatusDiv&branch_Ignite20Tests=pull%2F2817%2Fhead;;;","11/Oct/17 14:33;sergey-chugunov;Change looks good to me, TC status is acceptable.;;;","11/Oct/17 14:49;EdShangGG;Please, review and merger.;;;","23/Oct/17 14:09;agoncharuk;Looks good, merged to master;;;","23/Oct/17 14:11;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2817
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridClientNioTcpConnection does not clean pending request in case of auth failed and no credentials,IGNITE-6574,13107582,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,06/Oct/17 18:08,06/Oct/17 18:13,14/Jul/23 06:20,06/Oct/17 18:13,,,,,,2.4,,,,,,0,,,,,,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 06 18:13:18 UTC 2017,,,,,,,,,,"0|i3kz53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 18:13;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DROP table is frozen in special case,IGNITE-6569,13107453,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,vsisko,vsisko,06/Oct/17 09:14,09/Oct/17 19:19,14/Jul/23 06:20,09/Oct/17 19:19,2.1,,,,,2.3,,sql,,,,0,,,,"In attached project file:
# Run node with using of DropFrozenTableStartup class.
Execution is frozen in time of DROP table process.",,al.psc,githubbot,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 09:16;vsisko;DropTableExample2-project.tar.gz;https://issues.apache.org/jira/secure/attachment/12890691/DropTableExample2-project.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 09 19:19:19 UTC 2017,,,,,,,,,,"0|i3kycf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 16:33;al.psc;In this case, {{DROP TABLE}} hangs because it's executed via cache API of the same cache that's being destroyed. If query is run via {{GridQueryProcessor#querySqlFieldsNoCache}}, or via API of other cache, everything works. That said, this freeze is expected behavior - you can't destroy a cache which has a query running on it.
Closing as *not a problem*.;;;","06/Oct/17 17:05;al.psc;Reopening to refactor for graceful notification of the user about such situations.;;;","09/Oct/17 15:41;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2823

    IGNITE-6569 Exception on DROP TABLE via cache API of cache being dropped

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6569

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2823.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2823
    
----
commit c3c78b630aa556e95f0dd4ab3c6ed9067cc49ed9
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-10-09T12:03:20Z

    IGNITE-6569 Exception on DROP TABLE via cache API of cache being dropped

----
;;;","09/Oct/17 19:19;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2823
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to DROP table created by DDL query after restart,IGNITE-6568,13107429,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,vsisko,vsisko,06/Oct/17 06:45,10/Oct/17 07:07,14/Jul/23 06:20,10/Oct/17 07:07,2.1,,,,,2.3,,sql,,,,0,,,,"In attached project:
# Run node by using of CreateTableStartup class.
# Stop node.
# Run node by using of DropTableStartup class.
On try to stop cache showed next exception:
{code}
Exception in thread ""main"" class org.apache.ignite.internal.processors.query.IgniteSQLException: Unexpected DLL operation failure: class org.apache.ignite.IgniteCheckedException: Only cache created with CREATE TABLE may be removed with DROP TABLE [cacheName=SQL_PUBLIC_CITY]
	at org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.runDdlStatement(DdlStatementsProcessor.java:280)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1385)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1923)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1919)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2401)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFieldsNoCache(GridQueryProcessor.java:1927)
	at startup.DropTableStartup.main(DropTableStartup.java:21)
Caused by: javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: Only cache created with CREATE TABLE may be removed with DROP TABLE [cacheName=SQL_PUBLIC_CITY]
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1327)
	at org.apache.ignite.internal.IgniteKernal.destroyCache0(IgniteKernal.java:3118)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.dynamicTableDrop(GridQueryProcessor.java:1436)
	at org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.runDdlStatement(DdlStatementsProcessor.java:212)
	... 7 more
Caused by: class org.apache.ignite.IgniteCheckedException: Only cache created with CREATE TABLE may be removed with DROP TABLE [cacheName=SQL_PUBLIC_CITY]
	at org.apache.ignite.internal.processors.cache.ClusterCachesInfo.processCacheChangeRequests(ClusterCachesInfo.java:628)
	at org.apache.ignite.internal.processors.cache.ClusterCachesInfo.onCacheChangeRequested(ClusterCachesInfo.java:392)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.onCustomEvent(GridCacheProcessor.java:2927)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery0(GridDiscoveryManager.java:664)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery(GridDiscoveryManager.java:564)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.notifyDiscoveryListener(ServerImpl.java:5461)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processCustomMessage(ServerImpl.java:5280)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2654)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2445)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:6639)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2531)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{code}",,agoncharuk,al.psc,githubbot,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 06:45;vsisko;DropTableExample-project.tar.gz;https://issues.apache.org/jira/secure/attachment/12890662/DropTableExample-project.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 10 07:07:10 UTC 2017,,,,,,,,,,"0|i3ky7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Oct/17 12:20;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2815

    IGNITE-6568 cache descriptor SQL attribute store/restore fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6568

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2815.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2815
    
----
commit 150afd3e88ba2f9151121e35ec6829e3ec03df34
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-10-06T12:17:19Z

    IGNITE-6568 cache descriptor SQL attribute store/restore fix

----
;;;","09/Oct/17 12:12;al.psc;Tests are fine, [~agoncharuk] could you please have a look at the code?;;;","10/Oct/17 06:35;agoncharuk;Looks good!;;;","10/Oct/17 07:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2815
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect calculation size and keySize for cluster cache metrics,IGNITE-6564,13107208,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,macrergate,ilyak,ilyak,05/Oct/17 12:04,02/Aug/19 11:26,14/Jul/23 06:20,22/Jan/19 13:15,2.2,,,,,2.8,,general,,,,1,iep-6,,,"They are currently not passed by ring and therefore only taken from current node, which returns incorrect (local) value.

See CacheMetricsSnapshot class.",,a-polyakov,githubbot,ignitetcbot,ilyak,macrergate,,,,,,,,"alamar commented on pull request #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757#discussion_r248652536
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheMetricsImpl.java
 ##########
 @@ -1042,9 +1034,7 @@ public EntriesStatMetrics getEntriesStat() {
         stat.offHeapPrimaryEntriesCount(offHeapPrimaryEntriesCnt);
         stat.offHeapBackupEntriesCount(offHeapBackupEntriesCnt);
         stat.heapEntriesCount(heapEntriesCnt);
-        stat.size(size);
 
 Review comment:
   Why do we do that?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 12:40;githubbot;600","alamar commented on pull request #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757#discussion_r248653257
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheMetricsSnapshot.java
 ##########
 @@ -357,9 +353,7 @@ public CacheMetricsSnapshot(CacheMetricsImpl m) {
 
         offHeapAllocatedSize = m.getOffHeapAllocatedSize();
 
-        size = entriesStat.size();
 
 Review comment:
   Why are we changing this class at all if we introduce CacheMetricsSnapshotV2?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 12:40;githubbot;600","alamar commented on pull request #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757#discussion_r248652934
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/cache/CacheMetrics.java
 ##########
 @@ -315,6 +315,7 @@
 
     /**
      * Gets number of non-{@code null} values in the cache.
+     * Note this method will always return {@code 0}
 
 Review comment:
   Why? Is this an incompatible change?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 12:40;githubbot;600","alamar commented on pull request #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757#discussion_r248654156
 
 

 ##########
 File path: modules/core/src/test/java/org/apache/ignite/testframework/junits/common/GridCommonAbstractTest.java
 ##########
 @@ -2041,4 +2043,36 @@ protected void checkFutures() {
                 fail(""Some transaction are not finished"");
         }
     }
+
+    /**
+     * Wait for {@link EventType#EVT_NODE_METRICS_UPDATED} event will be receieved.
+     *
+     * @param countUpdate Number of events.
+     */
+    protected void awaitMetricsUpdate(int countUpdate) throws InterruptedException {
 
 Review comment:
   Can you please split awaitMetricsUpdate refactoring in a separate PR?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 12:40;githubbot;600","alamar commented on pull request #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757#discussion_r248653950
 
 

 ##########
 File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheMetricsSnapshot.java
 ##########
 @@ -27,7 +27,9 @@
 
 /**
  * Metrics snapshot.
+ * @deprecated Replaced by CacheMetricsSnapshotV2 with versioning support.
  */
+@Deprecated
 public class CacheMetricsSnapshot implements CacheMetrics, Externalizable {
 
 Review comment:
   Can we also rollback entryProcessor* externationalization from this class so that https://issues.apache.org/jira/browse/IGNITE-10925 will be fixed even for  CacheMetricsSnapshot (v1) users?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 12:40;githubbot;600","macrergate commented on pull request #5857: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5857
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 12:44;githubbot;600","asfgit commented on pull request #5857: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5857
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/19 13:16;githubbot;600","dspavlov commented on issue #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757#issuecomment-517666049
 
 
   The ticket is resolved, closing PR. 
    
   Please close PRs for your resolved tickets and other non-needed PRs. 
    
   Alternatively, ask a committer 
   - to use GitHub UI (committer can associate accounts here: https://gitbox.apache.org/setup/ )
   - or /scripts/apply_pull_request.sh from Apache Ignite source.
   - or mention in commit message 'Fixes #(a number of PR)'. 
    
   These methods will automatically close PR.
    
   Feel free to reopen this PR if it is actual.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:26;githubbot;600","dspavlov commented on pull request #5757: IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
URL: https://github.com/apache/ignite/pull/5757
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:26;githubbot;600",,,,,,,,,,,,,,,0,4800,,,0,4800,,,,IGNITE-6565,,,,,,,,,IGNITE-10925,,,,,,,,,,,IGNITE-6483,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 22 13:14:37 UTC 2019,,,,,,,,,,"0|i3kwun:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/17 12:09;ilyak;IGNITE-6565 should probably be done first in order to avoid passing ints by ring and then changing to long and breaking compatibility again.;;;","27/Dec/18 03:06;githubbot;GitHub user a-polyakov opened a pull request:

    https://github.com/apache/ignite/pull/5757

    IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics

    Signed-off-by: a-polyakov <polyakov.alexandr.alexandrovich@gmail.com>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/a-polyakov/ignite ignite-6564

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5757.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5757
    
----
commit ca9a9cd8dd1165c88a96b627704fc16f4c3951c4
Author: a-polyakov <polyakov.alexandr.alexandrovich@...>
Date:   2018-12-27T03:04:47Z

    IGNITE-6564 Incorrect calculation size and keySize for cluster cache metrics
    
    Signed-off-by: a-polyakov <polyakov.alexandr.alexandrovich@gmail.com>

----
;;;","27/Dec/18 03:32;a-polyakov;left three open questions
 * are the counters correctly evaluated in CacheMetricsEntitiesCountTest
||Cache||Size||offHeapEntriesCnt||offHeapPrimaryEntriesCnt||offHeapBackupEntriesCnt||heapEntriesCnt||
|CacheMode = REPLICATED|cacheSize|cacheSize * GRID_CNT|cacheSize|cacheSize * (GRID_CNT - 1)|0|
|CacheMode = PARTITIONED, Backups = 1|cacheSize|cacheSize * 2|cacheSize|cacheSize|0|
|CacheMode = PARTITIONED, Backups = 1, NearCache|cacheSize|cacheSize * 2|cacheSize|cacheSize|216|
|CacheMode = PARTITIONED, Backups = 1, OnheapCache|cacheSize|cacheSize * 2|cacheSize|cacheSize|cacheSize * 2|
|CacheMode = LOCAL|cacheSize|cacheSize|cacheSize|0|0|

 * how to calculate heapsize for NearCache, set the value obtained empirically 216;;;","12/Jan/19 23:41;a-polyakov;if you configure ""NearCache"" and ""OnheapCache"" then the metric ""heapEntriesCount"" is equal to 708, although 300 were loaded, you need help from the community;;;","15/Jan/19 20:54;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2805544&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","17/Jan/19 12:26;ilyak;[~a-polyakov] Is size() returning 0 a change of behavior or was it already the case?;;;","17/Jan/19 12:42;ilyak;I have left a change request in PR review.

Can you also split off the refactoring part as a separate PR? Best if under a dedicated ticket.;;;","18/Jan/19 12:33;macrergate;[~a-polyakov], don't you mind If I fix isssues mentioned by Ilya? ;;;","18/Jan/19 13:38;a-polyakov;[~macrergate] ok;;;","18/Jan/19 13:41;a-polyakov;@[~ilyak] size return incorrect metrics, in order not to create misconceptions, zeroed, since it is impossible to delete;;;","18/Jan/19 13:47;a-polyakov;Tests wiil be broken without adding of the awaiting metrics, so these changes were included here.;;;","18/Jan/19 14:34;macrergate;Returned old behavior 
https://github.com/apache/ignite/pull/5857
[~ilyak], review please.;;;","18/Jan/19 21:28;ignitetcbot;{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Platform .NET (Long Running){color} [[tests 1 TIMEOUT |https://ci.ignite.apache.org/viewLog.html?buildId=2835286]]
* exe: PersistentStoreTestObsolete.TestCacheDataSurvivesNodeRestart - 6,1% fails in last 594 master runs.

{color:#d04437}Cache (Restarts) 1{color} [[tests 5|https://ci.ignite.apache.org/viewLog.html?buildId=2835257]]
* IgniteCacheRestartTestSuite: GridCachePartitionedNodeRestartTest.testRestart - 0,0% fails in last 561 master runs.
* IgniteCacheRestartTestSuite: GridCachePartitionedNodeRestartTest.testRestartWithPutTwoNodesNoBackups - 0,0% fails in last 561 master runs.

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2835311&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","18/Jan/19 21:28;ilyak;LGTM now! Hope to merge it after a few more checks.;;;","21/Jan/19 11:50;macrergate;[~ilyak], I slightly changed test method awaitMetricsUpdate, because EVT_NODE_METRICS_UPDATED is invoked with every metrics update received from a node, so in common case we need N * N messages, where N is cluster size.;;;","22/Jan/19 12:08;ignitetcbot;{panel:title=--&gt; Run :: All: Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Cache (Restarts) 2{color} [[tests 6|https://ci.ignite.apache.org/viewLog.html?buildId=2868632]]
* IgniteCacheRestartTestSuite2: IgniteCacheAtomicReplicatedNodeRestartSelfTest.testRestartWithPutTenNodesTwoBackups - 0,0% fails in last 623 master runs.
* IgniteCacheRestartTestSuite2: IgniteCacheAtomicReplicatedNodeRestartSelfTest.testRestartWithPutFourNodesNoBackups - 0,0% fails in last 623 master runs.
* IgniteCacheRestartTestSuite2: IgniteCacheAtomicReplicatedNodeRestartSelfTest.testRestartWithTxPutAllTenNodesTwoBackups - 0,0% fails in last 623 master runs.

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2868685&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","22/Jan/19 12:55;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2868685&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","22/Jan/19 13:14;ilyak;Thank you for your contribution! I have merged it to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Dynamic service deployment should use projection if no NodeFilter is set.,IGNITE-6562,13107197,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,05/Oct/17 10:44,16/Oct/17 11:39,14/Jul/23 06:20,16/Oct/17 11:39,,,,,,2.4,,managed services,,,,0,,,,"We have two issues here when service starts dynamically with serviceConfiguration provided that not contains any NodeFilter.

1. Projection is ignored. 
So, if user use a projection for service deployment, we should use it as NodeFilter.

2. Service can be unexpectedly deployed on client nodes.
If projection is not specified then cluster.forServers() projection should be used.

",,amashenkov,githubbot,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 16 11:39:02 UTC 2017,,,,,,,,,,"0|i3kws7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/17 17:13;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2810

    IGNITE-6562: Dynamic service deployment should use projection if no NodeFilter is set.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6562

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2810.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2810
    
----
commit e18219906e164fc9b893d5220ae255a2836a2e83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-10-05T14:24:04Z

    IGNITE-6562: Dynamic service deployment should use projection if NodeFilter is not set.

commit a81530f284d183e02c8163400a8c2fc35abd5be8
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-10-05T17:12:00Z

    Test added.

----
;;;","06/Oct/17 15:11;amashenkov;TC test looks fine;;;","16/Oct/17 11:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2810
;;;","16/Oct/17 11:39;ntikhonov;[~amashenkov],
Thank you for your contribution! Changes look good to me. I've merged to master. Thank you for your contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test IgniteTxRemoveTimeoutObjectsTest has flaky fails,IGNITE-6557,13106986,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,VitaliyB,VitaliyB,04/Oct/17 16:28,27/Mar/18 12:02,14/Jul/23 06:20,27/Mar/18 12:00,2.2,,,,,2.5,,,,,,0,MakeTeamcityGreenAgain,,,"Build log:
{noformat}
[org.apache.ignite.internal.processors.cache.distributed.IgniteTxRemoveTimeoutObjectsTest.testTxRemoveTimeoutObjects] junit.framework.AssertionFailedError: Grids contain LockTimeoutObjects.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at org.apache.ignite.internal.processors.cache.distributed.IgniteTxRemoveTimeoutObjectsTest.assertDoesNotContainLockTimeoutObjects(IgniteTxRemoveTimeoutObjectsTest.java:135)
	at org.apache.ignite.internal.processors.cache.distributed.IgniteTxRemoveTimeoutObjectsTest.testTxRemoveTimeoutObjects(IgniteTxRemoveTimeoutObjectsTest.java:92)
{noformat}",,agoncharuk,dpavlov,githubbot,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 27 12:02:56 UTC 2018,,,,,,,,,,"0|i3kvhr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Oct/17 16:59;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2803

    IGNITE-6557: Fluky test fixed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-6557

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2803.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2803
    
----
commit bf9b21f898ffc847d3253669e463ef44e536156c
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-10-04T16:57:39Z

    IGNITE-6557: Fluky test fixed.

----
;;;","01/Mar/18 15:15;agoncharuk;Hi [~VitaliyB],

Can you please replace sleep() with GridTestUtils.waitForCondition(<check predicate>, getTestTimeout()) and then assert that wait returned true? The sleep() is quite unreliable and sensitive to timeout processor changes.;;;","01/Mar/18 19:37;VitaliyB;Hi, [~agoncharuk],

Done. I also ran test 10 times on TC.

[link to TC|https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=2548535635395432064&tab=testDetails&branch_IgniteTests24Java8=pull%2F2803%2Fhead];;;","26/Mar/18 14:54;dpavlov;Hi [~VitaliyB], unfortunately now link seems to be outdated. Could you trigger TC once more time?;;;","26/Mar/18 22:25;VitaliyB;Hi [~dpavlov], Done.

[link to TC|https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=2548535635395432064&tab=testDetails&branch_IgniteTests24Java8=pull%2F2803%2Fhead];;;","27/Mar/18 12:00;dpavlov;[~VitaliyB], thank you for your contribution and making tests more stable.

Merged your changes to master.;;;","27/Mar/18 12:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2803
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
setSchema() is case sensitive in the wrong way in Thin JDBC driver,IGNITE-6556,13106929,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,ilyak,ilyak,04/Oct/17 12:46,05/Oct/17 13:54,14/Jul/23 06:20,05/Oct/17 13:54,2.2,,,,,2.3,,sql,,,,0,,,,"Suppose we have a cache with 
{code}
cacheCfg.setSqlSchema(""emp"");
{code}

Then, both
{code}
conn.setSchema(""emp"");
conn.setSqlSchema(""\""emp\"""");
{code} fail with error ""Failed to set schema for DB connection for thread [schema=""emp""]""

And only
{code}
conn.setSchema(""EMP"");
{code}
works which is confusing.",,githubbot,ilyak,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 05 13:47:38 UTC 2017,,,,,,,,,,"0|i3kv53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Oct/17 12:59;vozerov;In addition, please pay attention that according to JDBC spec, setSchema() should not affect previously created statements. This is not the case for thin driver at the moment. Needs to be fixed.
;;;","04/Oct/17 15:34;tledkov-gridgain;What about the caches without specified sql schema. When {{cacheName}} is used to create SQL schema? In this case *cacheName* isn't modified.
e.g.:
{code}
cacheConfiguration.setName(""person"");
...
conn.setSqlSchema(""person"");
{code} fail with error ""Failed to set schema for DB connection for thread [schema=""PERSON""]""

Is it OK or incompatible behavior?
;;;","05/Oct/17 09:31;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2805

    IGNITE-6556 setSchema() is case sensitive in the wrong way in Thin JD…

    …BC driver

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6556

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2805.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2805
    
----
commit 84b3270e61c208b14cd3abcc8f3d5959c50f9308
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-04T15:35:45Z

    IGNITE-6556 setSchema() is case sensitive in the wrong way in Thin JDBC driver

----
;;;","05/Oct/17 09:48;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2805%2Fhead] are OK. Please review the patch.;;;","05/Oct/17 12:45;ilyak;[~tledkov-gridgain] seems to be working for me.;;;","05/Oct/17 13:47;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2805
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When a CacheStore with a @SpringResource annotated field is configured Ignite fails to start via igniteSpringBean,IGNITE-6555,13106908,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,asfedotov,asfedotov,asfedotov,04/Oct/17 10:36,07/Jun/18 14:36,14/Jul/23 06:20,25/Oct/17 11:44,2.2,,,,,2.4,,spring,,,,0,2.2,regresion,,"When a CacheStore with a @SpringResource annotated field is configured Ignite fails to start via igniteSpringBean.

Example configuration leading to the failure is as follows


{code:java}
public class SpringIgniteCacheStore<K, V> extends CacheStoreAdapter<K, V> implements Serializable {
    @SpringResource(resourceClass = SomeDao.class)
    public transient SomeDao someDao;

    ...
}

@Configuration
public class IgniteSpringConfig {
   @Bean
    public IgniteSpringBean igniteSpringBean() {
        IgniteSpringBean igniteSpringBean = new IgniteSpringBean();

        ...

        return igniteSpringBean;
    }

    ...
}
{code}
",,asfedotov,dmekhanikov,githubbot,ilyak,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8740,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 25 11:45:26 UTC 2017,,,,,,,,,,"0|i3kv0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Oct/17 12:58;dmekhanikov;This problem is reproduced not only for {{CacheStore}}-s, but for services as well.

When starting {{IgniteSpringBean}} with configured {{SpringAwareService}} from code snippet bellow, then initialization never finishes.
{code}
@Component(""springComponent"")
class SpringComponent {
    private final Ignite ignite;
    
    @Autowired
    public SpringComponent(Ignite ignite) {
        this.ignite = ignite;
    }
}

class SpringAwareService implements Service {
    @SpringResource(resourceName = ""springComponent"")
    private transient SpringComponent springComponent;

    ...
}
{code}

I believe that there is the same bug behind these two problems.;;;","20/Oct/17 10:47;githubbot;GitHub user symbicator opened a pull request:

    https://github.com/apache/ignite/pull/2893

    IGNITE-6555 When a CacheStore with a @SpringResource annotated field …

    …is configured Ignite fails to start via igniteSpringBean

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6555

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2893.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2893
    
----
commit 6d39c3cbab6b4c5a5eede7e0ba15aff3407d5805
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-10-20T10:21:09Z

    IGNITE-6555 When a CacheStore with a @SpringResource annotated field is configured Ignite fails to start via igniteSpringBean

----
;;;","24/Oct/17 17:38;asfedotov;No failures related to the changes.;;;","25/Oct/17 11:43;ntikhonov;[~asfedotov],
Thank for your contirbution! I've merged the changes to master.;;;","25/Oct/17 11:45;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2893
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Atomic cache remove operations are not logged into WAL,IGNITE-6554,13106745,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,agoncharuk,dpavlov,dpavlov,03/Oct/17 17:16,04/Oct/17 12:54,14/Jul/23 06:20,04/Oct/17 12:54,,,,,,2.3,,persistence,,,,0,,,,"Create cache with atomicity mode CacheAtomicityMode ATOMIC 
and perform put remove for one cache entry
{noformat}
 for (int i = 0; i < 10; i++) {

                cache.put(i, new Organization(i, ""Organization-"" + i));

                if (i % 2 == 0)
                    cache.put(i, new Organization(i, ""Organization-updated-"" + i));

                if (i % 5 == 0)
                    cache.remove(i);
            }
{noformat}
 
Actual WAL content loaded by standalone WAL iterator is as follows:
{noformat}
[2017-10-03 20:13:38,920][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 0; Value: Organization{key=0, name='Organization-0'}
[2017-10-03 20:13:38,920][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 0; Value: Organization{key=0, name='Organization-updated-0'}
[2017-10-03 20:13:38,920][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 1; Value: Organization{key=1, name='Organization-1'}
[2017-10-03 20:13:38,920][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 2; Value: Organization{key=2, name='Organization-2'}
[2017-10-03 20:13:38,920][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 2; Value: Organization{key=2, name='Organization-updated-2'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 3; Value: Organization{key=3, name='Organization-3'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 4; Value: Organization{key=4, name='Organization-4'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 4; Value: Organization{key=4, name='Organization-updated-4'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 5; Value: Organization{key=5, name='Organization-5'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 6; Value: Organization{key=6, name='Organization-6'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 6; Value: Organization{key=6, name='Organization-updated-6'}
[2017-10-03 20:13:38,921][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 7; Value: Organization{key=7, name='Organization-7'}
[2017-10-03 20:13:38,922][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 8; Value: Organization{key=8, name='Organization-8'}
[2017-10-03 20:13:38,922][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 8; Value: Organization{key=8, name='Organization-updated-8'}
[2017-10-03 20:13:38,922][INFO ][test-runner-#1%reader.IgniteWalReaderTest%][root] //Entry operation UPDATE; cache Id76454884; under transaction: null; Key: 9; Value: Organization{key=9, name='Organization-9'}

{noformat}


For TRANSACTIONAL AtomicityMode same test is passing.

Reproducing test can be found in IgniteWalReaderTest.java in PR 2797 (IGNITE-6553):
https://github.com/apache/ignite/pull/2797/files#diff-0f9e5c632b02b68d2e958ddc217d48a1

testRemoveOperationPresentedForDataEntryForAtomic fails, but testRemoveOperationPresentedForDataEntry is passing
",,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,9223372036854775807,,,Wed Oct 04 12:12:38 UTC 2017,,,,,,,,,,"0|i3ku0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 17:36;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2798

    IGNITE-6554: Atomic cache remove operations are logged in WAL as update records

    Probably fix for atomic cache remove operations

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6554

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2798.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2798
    
----
commit 73d3aefabcfac2075dda23563437a1018b3444c6
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T12:26:42Z

    IGNITE-6539: Human readable WAL parser fails if empty log files exists in directory

commit 98b2502e8a8d50aab4b1fc0031e30a279cd6c0cb
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T16:30:44Z

    IGNITE-6553: Standalone WAL iterator fails to handle delete WAL data records

commit 61a0859d570532c7c88d5e007c9bf5733f195898
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T17:13:10Z

    IGNITE-6553: Standalone WAL iterator fails to handle delete WAL data records

commit 73293276beef4619b027a2787638d473671c6bd2
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T17:34:16Z

    IGNITE-6554: Atomic cache remove operations are logged in WAL as update records

----
;;;","03/Oct/17 17:39;dpavlov;Hi [~agoncharuk], could you please review my idea how to fix this issue:
I've added logUpdate call to GridCacheMapEntry.AtomicCacheUpdateClosure#remove

PR
https://github.com/apache/ignite/pull/2798

fix iteslf is located in latest commit 
https://github.com/apache/ignite/pull/2798/commits/73293276beef4619b027a2787638d473671c6bd2;;;","04/Oct/17 09:31;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2800

    IGNITE-6554: Atomic cache remove operations are not logged into WAL

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6554-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2800.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2800
    
----
commit cbe8e0c4232455132ff426256d85a6105ce04283
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-04T09:26:25Z

    IGNITE-6554: Atomic cache remove operations are not logged into WAL

----
;;;","04/Oct/17 09:37;githubbot;Github user dspavlov closed the pull request at:

    https://github.com/apache/ignite/pull/2798
;;;","04/Oct/17 12:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2800
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Standalone WAL iterator fails to handle delete WAL data records,IGNITE-6553,13106731,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dpavlov,dpavlov,dpavlov,03/Oct/17 16:22,05/Oct/17 19:32,14/Jul/23 06:20,05/Oct/17 19:32,2.1,,,,,2.4,,persistence,,,,0,,,,"This failure occurds during unwrapping value, and this make impossible to unwrap value and handle any values
{noformat}
2017-10-03 19:21:29,629][ERROR][test-runner-#1%reader.IgniteWalReaderTest%][root] Unable to convert value [null]
java.lang.NullPointerException
	at org.apache.ignite.internal.pagemem.wal.record.UnwrapDataEntry.unwrappedValue(UnwrapDataEntry.java:110)
	at org.apache.ignite.internal.processors.cache.persistence.db.wal.reader.IgniteWalReaderTest.iterateAndCountDataRecord(IgniteWalReaderTest.java:970)
	at org.apache.ignite.internal.processors.cache.persistence.db.wal.reader.IgniteWalReaderTest.scanIterateAndCount(IgniteWalReaderTest.java:551)
	at org.apache.ignite.internal.processors.cache.persistence.db.wal.reader.IgniteWalReaderTest.testRemoveOperationPresentedForDataEntry(IgniteWalReaderTest.java:863)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:748)
{noformat}


WAL log content causes failure
{noformat}
{CREATE for 1, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{UPDATE for 2, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{CREATE for 3, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{UPDATE for 4, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{DELETE for 5, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{UPDATE for 6, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{CREATE for 7, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{UPDATE for 8, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{CREATE for 9, tx=GridCacheVersion [topVer=118527801, order=1507047798537, nodeOrder=1], }
{noformat}
",,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5558,,,,,IGNITE-6235,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 05 15:14:04 UTC 2017,,,,,,,,,,"0|i3ktxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 16:31;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2797

    IGNITE-6553: Standalone WAL iterator fails to handle delete WAL data records

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6553

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2797.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2797
    
----
commit 73d3aefabcfac2075dda23563437a1018b3444c6
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T12:26:42Z

    IGNITE-6539: Human readable WAL parser fails if empty log files exists in directory

commit 98b2502e8a8d50aab4b1fc0031e30a279cd6c0cb
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T16:30:44Z

    IGNITE-6553: Standalone WAL iterator fails to handle delete WAL data records

----
;;;","03/Oct/17 17:43;dpavlov;Hi [~agoncharuk], could you please review my changes?
https://github.com/apache/ignite/pull/2797

Handling absent val was added to unwrapping data entry. this allows to correctly unwrap key from DELETE DataEntry;;;","05/Oct/17 15:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2797
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure during Ignite Service.cancel() can break normal shutdown process.,IGNITE-6545,13106624,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,03/Oct/17 06:53,16/Oct/17 10:03,14/Jul/23 06:20,16/Oct/17 10:03,,,,,,2.4,,managed services,,,,0,newbie,,,"org.apache.ignite.services.Service is a public interface, but Ignite fully relies it's cacel method is implemented properly and throws no errors.
However, if one of services fails on cancel(), then other services may not be stopped properly as well as their executor pools.

We should wrap Service.cancel method in try-catch to avoid this.
",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 11 09:03:50 UTC 2017,,,,,,,,,,"0|i3kta7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/17 12:45;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2807

    IGNITE-6545: Failure during Ignite Service.cancel() can break normal shutdown process.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6545

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2807.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2807
    
----
commit eb0a73be56d450c12ed75090b726b5e89b586cae
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-10-05T12:18:21Z

    IGNITE-6545: Failure during Ignite Service.cancel() can break normal shutdown process.

----
;;;","06/Oct/17 15:11;amashenkov;TC test looks fine;;;","11/Oct/17 09:03;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2807
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SocketChannel may not be closed in createTcpClient(),IGNITE-6542,13106437,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,ilyak,ilyak,02/Oct/17 14:28,22/Feb/18 16:36,14/Jul/23 06:20,16/Oct/17 13:43,2.2,,,,,2.4,,,,,,0,,,,"There's no finally() on ch in TcpCommunicationSpi.createTcpClient()

So there's a long block of code where resource consistency is hanging on a hair. This can lead to file descriptor starvation as well.",,agoncharuk,githubbot,ilyak,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6071,,,IGNITE-6818,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 11 12:31:16 UTC 2017,,,,,,,,,,"0|i3ks53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 14:48;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2787

    IGNITE-6542 Reliably close SocketChannel in TcpCommunicationSpi.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6542

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2787.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2787
    
----
commit 8a30823815e082eb2a44667f6b8e3fc455187976
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-09-29T12:53:17Z

    IGNITE-6071

commit b63be488f1b85d3cae4f0f9678c1945626c1fb60
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-10-02T14:46:42Z

    IGNITE-6542 Reliably close SocketChannel in TcpCommunicationSpi.

----
;;;","04/Oct/17 09:28;ilyak;https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2787%2Fhead;;;","04/Oct/17 09:29;ilyak;[~agoncharuk] [~asfedotov] please review the proposed fix and refactoring;;;","05/Oct/17 12:20;ilyak;[~sboikov]
[~yzhdanov]
please review;;;","09/Oct/17 10:31;sboikov;Changes look ok for me.

Thanks;;;","10/Oct/17 13:45;agoncharuk;Looks good to me;;;","11/Oct/17 12:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2787
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Human readable WAL parser fails if empty log files exists in directory,IGNITE-6539,13106388,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,qvad,qvad,02/Oct/17 12:26,05/Oct/17 15:14,14/Jul/23 06:20,05/Oct/17 15:14,,,,,,2.4,,persistence,,,,0,,,,"While scanning WAL files script may detect empty files.
In this case script throws SegmentEofException ""Reached logical end of the segment""

This is happening if DEFAULT mode is used in WAL, for other modes iterator works correctly",,dpavlov,githubbot,qvad,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5558,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 05 15:08:31 UTC 2017,,,,,,,,,,"0|i3kruf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 13:36;dpavlov;What was the case? Was work directory used for scan? or archive? or both?;;;","02/Oct/17 18:14;dpavlov;[~qvad], could you provide more details?;;;","02/Oct/17 19:41;qvad;The simplest way to reproduce this issue is to run script on fresh cluster.
Next step is simple put a small amount of data to keep some WAL files empty.

The result will be the same on both cases. 

While debug I've change throwing exception in this line to simple ""break;"" (Just skip this and following files)
org/apache/ignite/internal/processors/cache/persistence/wal/reader/StandaloneWalRecordsIterator.java:215
After that I've got parsing result.;;;","02/Oct/17 20:03;dpavlov;[~qvad], thank you for carefull research. 
I've also created some test which generates 16 segments (1..5 in work and 11..14 in archive). This test fails too. But your solution is much simpler.;;;","03/Oct/17 12:29;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2794

    IGNITE-6539: Human readable WAL parser fails if empty log files exist…

    …s in directory

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6539

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2794.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2794
    
----
commit 73d3aefabcfac2075dda23563437a1018b3444c6
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-10-03T12:26:42Z

    IGNITE-6539: Human readable WAL parser fails if empty log files exists in directory

----
;;;","03/Oct/17 13:35;dpavlov;Thanks to [~DmitriyGovorukhin] to pointing me to root reason of this bug.

Hi [~agoncharuk], could you please review my changes?

https://github.com/apache/ignite/pull/2794
;;;","05/Oct/17 15:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2794
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on registerClassName() with MappedName,IGNITE-6536,13106354,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,ein,ein,02/Oct/17 08:38,12/Dec/18 07:22,14/Jul/23 06:20,11/Oct/17 12:34,2.1,,,,,2.4,,binary,,,,0,,,,"{{NullPointerException}} occurs in {{org.apache.ignite.internal.MarshallerContextImpl#registerClassName}} on trying to compare {{mappedName.className()}} of already existed {{typeId}} mapping with the new one {{clsName}} has come as a parameter.

Actually {{org.apache.ignite.internal.processors.marshaller.MappedName#className}} may not be null but it was. So we should check {{clsName}} comes in {{MappedName}} constructor, to prevent same NPEs in the future.",,agura,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 12 07:22:09 UTC 2018,,,,,,,,,,"0|i3krmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Oct/17 08:27;githubbot;GitHub user sergey-chugunov-1985 opened a pull request:

    https://github.com/apache/ignite/pull/2799

    IGNITE-6536 node must fail when detects mapping storage corruption

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6536

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2799.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2799
    
----
commit fa7b54bdc7c1c0290666bce2bff2d98fc9b5b972
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-10-03T16:17:50Z

    IGNITE-6536 node fails when detects mapping storage corruption

----
;;;","11/Oct/17 12:34;agura;LGTM! Merged to master branch.;;;","12/Dec/18 07:22;githubbot;Github user sergey-chugunov-1985 closed the pull request at:

    https://github.com/apache/ignite/pull/2799
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC drivers don't provide correct metadata about  columns' nullability,IGNITE-6529,13105804,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,al.psc,al.psc,28/Sep/17 17:18,19/Oct/17 19:22,14/Jul/23 06:20,19/Oct/17 19:22,,,,,,2.3,,jdbc,sql,,,0,,,,"For complete implementation of IGNITE-5648, we have to make JDBC drivers return correct nullability flag for {{NOT NULL}} columns - currently corresponding param of {{QueryField}} is ignored.",,al.psc,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 19 19:22:36 UTC 2017,,,,,,,,,,"0|i3ko9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 12:20;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2793

    IGNITE-6529: JDBC support 'nullable'  column property 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6529

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2793.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2793
    
----
commit c36fe7c8d5426a8c4728353b3999c3a7636e7417
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-02T14:42:05Z

    IGNITE-6529 JDBC thin: support column metadata 'nullable' property

commit 92331b02dcff03a276c722aee77b426012ca4cdb
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-03T08:57:56Z

    IGNITE-6529 JDBC thin: fix columns order

commit 67e75ef089843b25eb4d4a0419ce0291b0b5d284
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-03T12:19:26Z

    IGNITE-6529 JDBC v2: support column metadata 'nullable' property

----
;;;","03/Oct/17 12:25;tledkov-gridgain;[~vozerov], please review the patch.
The [tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2793%2Fhead] are OK.;;;","05/Oct/17 07:54;vozerov;[~tledkov-gridgain], LGTM. However, I moved inner classes to the top-level to avoid compatibility issues (inner anonymous classes might cause problems with class naming).
Waiting for test resutls: https://ci.ignite.apache.org/viewQueued.html?itemId=871992&tab=queuedBuildOverviewTab;;;","05/Oct/17 08:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2793
;;;","19/Oct/17 11:44;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2884

    IGNITE-6529: fix metadata result set 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6529

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2884.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2884
    
----
commit ef969d5721846e894ddebaf6b02916cdcdce9cf6
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-19T10:11:23Z

    IGNITE-6529: fix metadata result set

commit 1f0fb008d3f59114dcb7b7205caa51e5623293a7
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-10-19T11:43:17Z

    IGNITE-6529: fix metadata result set

----
;;;","19/Oct/17 11:47;tledkov-gridgain;Metadata result set is invalid.
Columns {{BUFFER_LENGTH, SQL_DATA_TYPE, SQL_DATETIME_SUB, IS_GENERATEDCOLUMN}} are absent in the result set.;;;","19/Oct/17 12:30;tledkov-gridgain;[~vozerov], please review the fix for metadata result set.
[JDBC test|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2884%2Fhead] are OK.;;;","19/Oct/17 19:22;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2884
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCacheGetRestartTest.testGetRestartReplicated fails sometimes (timeout),IGNITE-6520,13105680,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,andrey-kuznetsov,andrey-kuznetsov,andrey-kuznetsov,28/Sep/17 07:45,03/Oct/17 13:40,14/Jul/23 06:20,02/Oct/17 09:45,2.2,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,,,amashenkov,andrey-kuznetsov,dpavlov,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6006,,,,,,,,,,,,,,,"03/Oct/17 13:31;dpavlov;unmute.jpg.png;https://issues.apache.org/jira/secure/attachment/12890155/unmute.jpg.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 03 13:40:59 UTC 2017,,,,,,,,,,"0|i3knhr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/17 14:48;githubbot;GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/2781

    IGNITE-6520: Using actual AffinityReadyFuture result.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6520

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2781.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2781
    
----
commit 568b002006b8d5ddf4b72a7cbebc6d394b3ac240
Author: Andrey Kuznetsov <stkuzma@gmail.com>
Date:   2017-09-29T14:46:23Z

    IGNITE-6520: Using actual AffinityReadyFuture result.

----
;;;","29/Sep/17 15:13;andrey-kuznetsov;[~sboikov], please take a look at PR. It fixes this very issue, and if my logic is OK, then we are to revise other AffinityReadyFuture usages.;;;","02/Oct/17 08:30;sboikov;[~andrey-kuznetsov], changes related to affinity ready future look good, I merged this fix (also I fixed the same issue for GridNearGetFuture).

But could you please explain:
- what was the reason of hangs in IgniteCacheGetRestartTest
- you added try/catch in mapKeyToNode, what exception is thrown there?

Thanks;;;","02/Oct/17 09:15;andrey-kuznetsov;[~sboikov], thanks for your review.

Initially, flaky timeouts were caused by IllegalStateException in GridAffinityAssignmentCache::cachedAffinity which propagated up to GridPartitionedSingleGetFuture::mapKeyToNode and prevented the future from completion. First, I caught this possible exception, and test became to fail instead of hanging. Then I fixed the reason of IllegalStateException itself.;;;","02/Oct/17 09:45;sboikov;[~andrey-kuznetsov], as I understand after this fix added try/catch is not need. Fix is merged, closing this issue.

Thanks;;;","02/Oct/17 10:02;andrey-kuznetsov;[~sboikov], could you please tell why frozen-forever future is better than failed one (in case of RuntimeException)?;;;","02/Oct/17 11:59;sboikov;[~andrey-kuznetsov], such 'fix' with try/catch (Throwable e) is ugly. If we fix hangs in such way then we will end up with try/catch around every method call in Ignite. If there are problems with internal nodesByPartition API then this API should be fixed instead.;;;","02/Oct/17 12:11;githubbot;Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/2781
;;;","02/Oct/17 12:26;dpavlov;Is it possible to unmute IgniteCacheGetRestartTest.testGetRestartReplicated() ? Or should we wait for additional fixes?;;;","02/Oct/17 12:37;andrey-kuznetsov;[~dpavlov], we have another issue related to this test method -- IGNITE-6006. I coudn't reproduce failure described there, so I need some extra time to investigate it.;;;","02/Oct/17 13:42;dpavlov;Hi [~andrey-kuznetsov], could I ask you to unmute test(s) when it fixed? Alternatively you can notify me and I will unmute test.

As far as I see now test described in this ticket is passing: https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCacheRestarts2&branch_Ignite20Tests=%3Cdefault%3E&tab=buildTypeStatusDiv
may be we can unmute it now.
;;;","03/Oct/17 12:02;andrey-kuznetsov;[~dpavlov], I've marked this test as fixed on TC, but it's still visible in 'muted problems' tab for some reason. Please check its state.;;;","03/Oct/17 13:31;dpavlov;Hi [~andrey-kuznetsov], there is second option related to muted state. I've now unmuted test
!unmute.jpg.png!;;;","03/Oct/17 13:40;andrey-kuznetsov;Thanks, [~dpavlov]. Probably I have less permissions than you and I can't mute/unmute explicitly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLGetDiagRec doesn't follow specification when buffer size is too small,IGNITE-6511,13105406,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,skalashnikov,skalashnikov,27/Sep/17 12:12,31/Oct/17 12:12,14/Jul/23 06:20,25/Oct/17 12:42,,,,,,,,odbc,,,,0,usability,,,"When buffer size provided for error message is not big enough to hold the entire error message, the function {{SqlGetDiagRec()}} returns wrong resulting string length (-4) and wrong result code ({{SQL_SUCCESS}} instead of {{SQL_SUCCESS_WITH_INFO}}).",,githubbot,isapego,ptupitsyn,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 31 12:12:41 UTC 2017,,,,,,,,,,"0|i3kltr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/17 12:21;skalashnikov;Workaround: check resulting error message length (reallen > 0) before manipulation with the error message pointer.

Reproducer:

{quote}
BOOST_AUTO_TEST_CASE(TestLongErrorMessage)
{
    StartAdditionalNode(""Node1"");

    Connect(""DRIVER={Apache Ignite};ADDRESS=127.0.0.1:11110;SCHEMA=PUBLIC"");

    SQLCHAR req[] = ""DROP INDEX Nonexisting"";

    SQLRETURN ret;

    ret = SQLExecDirect(stmt, req, SQL_NTS);

    BOOST_REQUIRE_EQUAL(ret, SQL_ERROR);

    SQLCHAR sqlstate[7] = {};
    SQLINTEGER nativeCode;

    SQLCHAR message[10];
    SQLSMALLINT reallen = 0;

    SQLGetDiagRec(SQL_HANDLE_STMT, stmt, 1, sqlstate, &nativeCode, message, sizeof(message), &reallen);

    BOOST_CHECK_EQUAL(reallen, sizeof(message));
}
{quote};;;","25/Oct/17 09:36;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2925

    IGNITE-6511: Fixed SQLGetDiagRec behaviour in ODBC

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6511

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2925.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2925
    
----
commit 6743b3a8bd2b4761b05e800e5d104b686aa85ea3
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-10-25T08:46:15Z

    IGNITE-6511: Fixed behaviour

commit c015ee40f6ef3f9947ddc9ef77cf846d3f7c2a08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-10-25T09:24:08Z

    IGNITE-6511: Added test

----
;;;","25/Oct/17 10:53;isapego;Ready for review. [~skalashnikov], take a look please;;;","25/Oct/17 11:49;isapego;Or [~ptupitsyn]. Can you help?;;;","25/Oct/17 11:54;ptupitsyn;[~isapego] LGTM.;;;","25/Oct/17 12:42;isapego;Merged to master;;;","31/Oct/17 12:12;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2925
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
select distinct exception in simple sqlQuery request.,IGNITE-6501,13105003,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,zstan,zstan,26/Sep/17 06:58,15/Oct/18 18:07,14/Jul/23 06:20,15/Oct/18 18:06,2.0,2.1,,,,2.7,,documentation,sql,,,0,,,,"SqlQuery throws exception
{code}
Failed to parse query: SELECT distinct Value._KEY, distinct Value._VAL from Value
{code}
while SqlFieldsQuery works properly well.",,Artem Budnikov,daradurvs,pgarg,vozerov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 07:00;zstan;DistinctTest.java;https://issues.apache.org/jira/secure/attachment/12889014/DistinctTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 15 18:06:50 UTC 2018,,,,,,,,,,"0|i3kjcn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Oct/18 10:47;Artem Budnikov;[~vozerov] please provide more details of what should be documented here.;;;","09/Oct/18 09:17;vozerov;[~Artem Budnikov],

We should explain users that {{SqlQuery}} is a sugar on top {{SqlFieldsQuery}}. It is convenient in some cases, as it returns key-value pairs, but on the other hand in can be used only in two forms:

1) {{FROM ...}} - i.e. without SELECT at all
2) {{SELECT * FROM ...}} - i.e. only asterisk inside a select. If there are several tables, then an alias could be used with an asterisk as well: {{SELECT p.* FROM Person p INNER JOIN Department d ON p.deptId = d.id}}

All other forms, e.g. aforementioned {{DISTINCT}} are illegal. {{SqlFieldsQuery}} should be used in this case.;;;","12/Oct/18 09:23;Artem Budnikov;Added a callout explaining this limitations:

[https://apacheignite-sql.readme.io/v2.6/docs/java-sql-api]

 

[~pgarg] please review.;;;","15/Oct/18 18:06;pgarg;[~Artem Budnikov], looks good.

Closing the ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"POJO fields of java wrapper type are not retaining null values from Cassandra persistent store, while using ignite's CassandraCacheStoreFactory",IGNITE-6500,13104997,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kotamrajuyashasvi,kotamrajuyashasvi,kotamrajuyashasvi,26/Sep/17 06:25,24/Sep/18 16:23,14/Jul/23 06:20,24/Sep/18 15:32,2.1,,,,,2.7,,cassandra,,,,0,patch,,,"While using  ignite's CassandraCacheStoreFactory(part of ignite-cassandra-store.jar) as cacheStoreFactory for a cache, if a POJO field is of wrapper class type, and the column value mapped in Cassandra persistent store is null then the POJO field is getting set to default primitive type instead of null.

For Example: Assume a table 'person' in a Cassandra persistent store with the following structure and data.
*table person:*
*column*    person_no(int)    phno(text)         address(text)      age(int)      name(text)   
*data*         1                         12353               null                      null            yash 
person_no is the PRIMARY_KEY.

This table is mapped to person POJO  for ignite cache.
public class person{
	private int person_no;
	private String name;
	private Integer age=null;
	private String phno;
	private String address;
        .....getters and setters etc......
}

Now we load the row from Cassandra into ignite cache using cache.get(1) or cache.load(..) And we are using ignite's CassandraCacheStoreFactory for this cache.
Let person p1 = cache.get(1);
now p1.getName returns ""yash"", p1.getAddress returns null.
But  p1.getAge returns 0 instead of null. It is expected null value since the value is null in Cassandra persistent store.
Hence if the value is 0 for the age field there is no way differentiate if it was null or it was actually 0. The similar problem exists for other wrapper types -> Long, Float, Double, Boolean.

This problem cause is as follows. 
In org.apache.ignite.cache.store.cassandra.persistence.PojoField.setValueFromRow(..) method first the Cassandra field value is obtained by using the method PropertyMappingHelper.getCassandraColumnValue(..). This method calls DataStax Driver methods Row.getInt() or Row.getFloat() or Row.getDouble() etc.. depending upon the column. This value obtained from this method is then set to the respective POJO field. But According to Datastax documentation getInt returns 0 if column value is null and similarly getLong returns 0L , getDouble return 0.0 etc. Hence PropertyMappingHelper. getCassandraColumnValue returns 0 or 0L or 0.0 or false even if the value is null. And then this value is set to the wrapper type POJO fields. The problem only persists with the primitive data types in Cassandra mapped to wrapper type fields in POJO. For other types like String , Date etc.. the null values are retained in the POJO fields. 
",,dpavlov,githubbot,irudyak,kotamrajuyashasvi,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 24 15:34:47 UTC 2018,,,,,,,,,,"0|i3kjbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/17 10:15;kotamrajuyashasvi;To fix this problem we can simply make an initial check in org.apache.ignite.cache.store.cassandra.persistence.PojoField.setValueFromRow(..)  method to see if the column value is null using DataStax Driver method *Row.isNull(String Column)*. If this method returns true then setValueFromRow(..) is returned back without making further method calls to: 
*PropertyMappingHelper.getCassandraColumnValue(row, col, accessor.getFieldType(), serializer);* 
*accessor.setValue(obj, val);*

Hence the POJO fields will retain their respective java instance type default values. For wrapper types/Object types its null. For primitive types its same as return value of the respective Row.getxxx(..)  methods when column value is null.

Please let me know if there are any flaws with this approach or has any impacts on other modules.;;;","07/Nov/17 18:36;githubbot;GitHub user kotamrajuyashasvi opened a pull request:

    https://github.com/apache/ignite/pull/2992

    IGNITE-6500 Bug in ignite's CassandraCacheStoreFactory

    POJO fields of java wrapper type are not retaining null values from Cassandra persistent store, while using ignite's CassandraCacheStoreFactory.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kotamrajuyashasvi/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2992.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2992
    
----
commit 1c9c4abd03f3ff47dfdfbf651fcae87df9a0506b
Author: kotamrajuyashasvi <kotamrajuyashasvi@gmail.com>
Date:   2017-09-28T20:10:41Z

    IGNITE-6500

commit f452f1c3d83986a7ea72e36da36730ae3b7b73bf
Author: kotamrajuyashasvi <kotamrajuyashasvi@gmail.com>
Date:   2017-09-28T20:29:53Z

    IGNITE-6500

----
;;;","24/Apr/18 10:21;dpavlov;Hi [~kuaw26], could you please review this change? It is 2 LOC;;;","24/Apr/18 10:27;kuaw26;[~dpavlov] I'm not a maintainer, but I know that [~irudyak] is the original contributor of this module.

Igor, can you take a look?;;;","15/May/18 10:03;dpavlov;Hi [~irudyak],

can I hope you could take a look? 

It is 2 lines of code fix, so we need here to be sure it is safe to skip nulls.;;;","15/May/18 15:56;irudyak;[~dpavlov] I'll look at it;;;","15/May/18 19:56;irudyak;See my comments in the PR;;;","17/May/18 12:30;githubbot;Github user kotamrajuyashasvi closed the pull request at:

    https://github.com/apache/ignite/pull/2992
;;;","17/May/18 12:43;githubbot;GitHub user kotamrajuyashasvi opened a pull request:

    https://github.com/apache/ignite/pull/4014

    IGNITE-6500

    POJO fields of java wrapper type are not retaining null values from Cassandra persistent store, while using ignite's CassandraCacheStoreFactory.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kotamrajuyashasvi/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4014.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4014
    
----
commit b73a60cafe606d5802776e10e7c19204d0a02450
Author: Unknown <yashasvi.kotamraju@...>
Date:   2018-05-17T12:40:57Z

    IGNITE-6500

----
;;;","17/May/18 12:46;kotamrajuyashasvi;Hi Igor

created a new PR with the changes suggested by you. please review the PR

 ;;;","05/Jun/18 16:40;dpavlov;Hi [~irudyak], could you please take a look to new version of fix?;;;","16/Jul/18 16:58;dpavlov;Hi [~irudyak], it seems stuck in our review process. Could you advice somebody who can pick up and finalize review?;;;","12/Sep/18 20:37;irudyak;Sorry just found this ticket. Will look at it.;;;","16/Sep/18 20:07;irudyak;Looks good to me - approved;;;","24/Sep/18 15:32;dpavlov;[~kotamrajuyashasvi] thank you for contribution,

[~irudyak] thank you for review. 

Merged to master, cherry-picked to 2.7
;;;","24/Sep/18 15:34;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4014
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Client node does not reconnect to server node when the latter is restarted.,IGNITE-6496,13104866,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slava.koptilin,slava.koptilin,slava.koptilin,25/Sep/17 18:42,17/Nov/17 13:21,14/Jul/23 06:20,17/Nov/17 12:53,1.9,,,,,2.4,,data structures,,,,0,,,,"The following scenario may result in deadlock on the client node:
 - start server node and one client
 - client node invokes IgniteQueue#take() method, that requires acquiring both GridCacheGateway#readLock and GridCacheQueueAdapter#readSem.
 - client node disconnects from the cluster for some reason (for example, server node was stopped)
   in that case, GridCacheQueueAdapter does not release readSem and, therefore, GridCacheGateway#readLock is also not released.
 - 'tcp-client-disco-msg-worker' hangs due to unable acquiring GridCacheGateway.writeLock
""tcp-client-disco-msg-worker-#10%datastructures.GridCacheQueueClientReconnect1%"" #101 prio=5 os_prio=0 tid=0x0000000021634000 nid=0x49a8 waiting on condition [0x000000003a61e000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
            parking to wait for  <0x000000076fa988f8> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
        at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:943)
        at org.apache.ignite.internal.util.StripedCompositeReadWriteLock$WriteLock.lock0(StripedCompositeReadWriteLock.java:154)
        at org.apache.ignite.internal.util.StripedCompositeReadWriteLock$WriteLock.lock(StripedCompositeReadWriteLock.java:123)
        at org.apache.ignite.internal.processors.cache.GridCacheGateway.writeLock(GridCacheGateway.java:278)
        at org.apache.ignite.internal.IgniteKernal.onDisconnected(IgniteKernal.java:3873)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery0(GridDiscoveryManager.java:768)
        at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery(GridDiscoveryManager.java:573)
            locked <0x000000076f9f4048> (a java.lang.Object)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.notifyDiscovery(ClientImpl.java:2415)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.notifyDiscovery(ClientImpl.java:2394)
        at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.body(ClientImpl.java:1710)
        at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)

",,agoncharuk,slava.koptilin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/Sep/17 18:48;slava.koptilin;ExampleNodeStartup.java;https://issues.apache.org/jira/secure/attachment/12888925/ExampleNodeStartup.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 17 12:53:57 UTC 2017,,,,,,,,,,"0|i3kii7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/17 15:08;slava.koptilin;pull-request: https://github.com/apache/ignite/pull/2981;;;","14/Nov/17 08:54;slava.koptilin;TeamCity looks good enough https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2981%2Fmerge
I could not find test failures that are related to the changes.;;;","16/Nov/17 09:03;agoncharuk;I do not think that a silent semaphore release is a good option for client disconnect. If a client disconnects, the semaphores should  throw something like SemaphoreBrokenException and force a user to re-create the semaphore. ;;;","17/Nov/17 12:53;agoncharuk;Thanks, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: CacheConfiguration.WriteSynchronizationMode incorrect default value,IGNITE-6494,13104794,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,25/Sep/17 14:07,26/Sep/17 08:40,14/Jul/23 06:20,26/Sep/17 08:38,,,,,,2.3,,platforms,,,,0,.NET,,,"{{CacheConfiguration.WriteSynchronizationMode}} has no explicit default in .NET, which causes it to be {{FullSync}} (first enum value). Java-side default is {{PRIMARY_SYNC}}.

Write a test to make sure all defaults are the same (start a cache from Spring and get configuration).",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 26 08:40:05 UTC 2017,,,,,,,,,,"0|i3ki2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/17 15:00;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2741

    IGNITE-6494 .NET: Fix CacheConfiguration.WriteSynchronizationMode default value

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-6494

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2741.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2741
    
----
commit d6ea01c6e8a8878e7afa53b7a732eb4f30cc17c7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-25T14:59:19Z

    IGNITE-6494 .NET: Fix CacheConfiguration.WriteSynchronizationMode default value

----
;;;","25/Sep/17 15:02;ptupitsyn;Done, waiting for TC.;;;","26/Sep/17 08:37;ptupitsyn;Merged to master: {{357f6035a917ad7be9b7002aea5638d9d61b5330}}.;;;","26/Sep/17 08:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2741
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgnitePdsWalTlbTest.testWalDirectOutOfMemory() hangs,IGNITE-6493,13104706,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,25/Sep/17 09:45,17/May/19 11:16,14/Jul/23 06:20,25/Sep/17 10:34,2.2,,,,,2.3,,persistence,,,,0,MakeTeamcityGreenAgain,,,,,agura,DmitriyGovorukhin,githubbot,,,,,,,,,,"dspavlov commented on issue #2738: IGNITE-6493 incorrect usage dataStreamer, must be in try-with-resource
URL: https://github.com/apache/ignite/pull/2738#issuecomment-493417886
 
 
   https://issues.apache.org/jira/browse/IGNITE-6493 is resolved, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 11:16;githubbot;600","dspavlov commented on pull request #2738: IGNITE-6493 incorrect usage dataStreamer, must be in try-with-resource
URL: https://github.com/apache/ignite/pull/2738
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 11:16;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 25 10:29:47 UTC 2017,,,,,,,,,,"0|i3khiv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/17 09:48;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2738

    IGNITE-6493 incorrect usage dataStreamer, must be in try-with-resource

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6493

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2738.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2738
    
----
commit 79d036a2a0483b59d5e6ece13dd3bd8622d7df6b
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-09-25T09:47:31Z

    IGNITE-6493 fix IgnitePdsWalTlbTest.testWalDirectOutOfMemory() incorrect usage dataStreamer, must be in try-with-resource

----
;;;","25/Sep/17 10:18;DmitriyGovorukhin;[~agura] Please, review my changes.;;;","25/Sep/17 10:22;DmitriyGovorukhin;[TC build|https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgnitePdsOutOfMemory&branch_Ignite20Tests=pull%2F2738%2Fhead&tab=buildTypeStatusDiv];;;","25/Sep/17 10:29;agura;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race in TopologyValidator.validate() and EVT_NODE_LEFT listener calls (split-brain activator),IGNITE-6491,13104668,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ein,ein,ein,25/Sep/17 06:46,26/Sep/17 13:55,14/Jul/23 06:20,26/Sep/17 13:55,2.1,,,,,2.3,,cache,general,,,0,,,,"The following wrong cache {{validate}}/{{put}} sequence may occur

On node left {{GridDhtPartitionsExchangeFuture}} will be generated by the {{disco-event-worker}} thread.

Then the {{exchange-worker}} thread does

{noformat}
Split-brain detected [cacheName=test40, activatorTopVer=0, cacheTopVer=14]
	at org.apache.ignite.internal.util.IgniteUtils.dumpStack(IgniteUtils.java:1141)
	at org.apache.ignite.internal.processors.cache.IgniteTopologyValidatorGridSplitCacheTest$SplitAwareTopologyValidator.validate(IgniteTopologyValidatorGridSplitCacheTest.java:307)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTopologyFutureAdapter.validateCacheGroup(GridDhtTopologyFutureAdapter.java:64)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onDone(GridDhtPartitionsExchangeFuture.java:1456)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onDone(GridDhtPartitionsExchangeFuture.java:115)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(GridFutureAdapter.java:450)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:668)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:2278)
{noformat}

The result of validation is stored in {{grpValidRes}} with value of {{false}}.

After some delay the {{disco-event-worker}} thread will do

{noformat}
java.lang.Exception: Node is segment activator [cacheName=test40, activatorTopVer=14]
	at org.apache.ignite.internal.util.IgniteUtils.dumpStack(IgniteUtils.java:1141)
	at org.apache.ignite.internal.processors.cache.IgniteTopologyValidatorGridSplitCacheTest$SplitAwareTopologyValidator$2.apply(IgniteTopologyValidatorGridSplitCacheTest.java:360)
	at org.apache.ignite.internal.processors.cache.IgniteTopologyValidatorGridSplitCacheTest$SplitAwareTopologyValidator$2.apply(IgniteTopologyValidatorGridSplitCacheTest.java:349)
	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager$UserListenerWrapper.onEvent(GridEventStorageManager.java:1463)
	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:859)
	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:844)
	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record0(GridEventStorageManager.java:341)
	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record(GridEventStorageManager.java:307)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.recordEvent(GridDiscoveryManager.java:2478)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body0(GridDiscoveryManager.java:2684)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body(GridDiscoveryManager.java:2507)
{noformat}

After this invocation the result of {{SplitAwareTopologyValidator.validate}} should be changed to {{true}}, but it was already invoked and the result has been cached in {{grpValidRes}} with the value of {{false}}.

So any successive calls to {{cache.put}} causes to fail

{noformat}
Test failed.
java.lang.RuntimeException: tryPut() failed [gridName=cache.IgniteTopologyValidatorGridSplitCacheTest0]
	at org.apache.ignite.internal.processors.cache.IgniteTopologyValidatorGridSplitCacheTest.tryPut(IgniteTopologyValidatorGridSplitCacheTest.java:262)
	at org.apache.ignite.internal.processors.cache.IgniteTopologyValidatorGridSplitCacheTest.testTopologyValidator(IgniteTopologyValidatorGridSplitCacheTest.java:182)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:748)
Caused by: javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: Failed to perform cache operation (cache topology is not valid): test40
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1327)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.cacheException(IgniteCacheProxyImpl.java:1672)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.put(IgniteCacheProxyImpl.java:1032)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.put(GatewayProtectedCacheProxy.java:872)
	at org.apache.ignite.internal.processors.cache.IgniteTopologyValidatorGridSplitCacheTest.tryPut(IgniteTopologyValidatorGridSplitCacheTest.java:252)
	... 10 more
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to perform cache operation (cache topology is not valid): test40
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTopologyFutureAdapter.validateCache(GridDhtTopologyFutureAdapter.java:112)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapOnTopology(GridNearAtomicSingleUpdateFuture.java:415)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.map(GridNearAtomicAbstractUpdateFuture.java:248)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.update0(GridDhtAtomicCache.java:1170)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put0(GridDhtAtomicCache.java:659)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2334)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2311)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.put(IgniteCacheProxyImpl.java:1029)
	... 12 more
{noformat}

The updated test {{IgniteTopologyValidatorGridSplitCacheTest}} fails frequently on my laptop with 8 nodes and 100 caches.",,ein,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,9223372036854775807,,,2017-09-25 06:46:41.0,,,,,,,,,,"0|i3khaf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: ActiveOnStart does not work,IGNITE-6486,13104264,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,22/Sep/17 11:19,25/Sep/17 10:07,14/Jul/23 06:20,25/Sep/17 10:06,2.2,,,,,2.3,,platforms,,,,0,.NET,,,"{{IgniteConfiguration.IsActiveOnStart}} seems to have no effect. The following code causes an exception on {{GetOrCreateCache}}:

{code}
var cfg = new IgniteConfiguration
{
    PersistentStoreConfiguration = new PersistentStoreConfiguration(),
    IsActiveOnStart = true
};

using (var ignite = Ignition.Start(cfg))
{
    var cache = ignite.GetOrCreateCache<int, int>(""foo"");
}
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 25 10:07:30 UTC 2017,,,,,,,,,,"0|i3ketb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 12:07;ptupitsyn;Turns out this behavior is expected. Javadoc and xmldoc updated.;;;","22/Sep/17 12:08;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2729

    IGNITE-6486 .NET: Update IsActiveOnStart documentation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-6486

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2729.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2729
    
----
commit ffd2cbcff6c71010a762f5bc37619103ce445f15
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-22T11:54:37Z

    IGNITE-6486 .NET: ActiveOnStart does not work

----
;;;","22/Sep/17 12:11;ptupitsyn;IGNITE-5717 related {{TODO}} s has been removed, tests cleaned up: custom memory configuration is no longer necessary.

Waiting for TeamCity.;;;","25/Sep/17 10:05;ptupitsyn;Merged to master: {{6f1ca419fab840b920d408336ced69abaa4147cf}}.;;;","25/Sep/17 10:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2729
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary marshaller fails on deserialization of object with writeReplace(),IGNITE-6485,13104262,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agura,agura,agura,22/Sep/17 11:10,02/Oct/17 09:39,14/Jul/23 06:20,02/Oct/17 09:39,2.0,,,,,2.3,,binary,,,,0,,,,"The problem found during testing vertx-ignite project with new version of Vert.x framework.

Binary marshaller fails on deserialization of object with writeReplace() because deserialized object can't be assigned to field due to a type incompatibility. 

During setting field value the following checking will be failed in {{UnsafeObjectFieldAccessorImpl.set(Object var1, Object var2)}} method (see comment):

{code:java}
    public void set(Object var1, Object var2) throws IllegalArgumentException, IllegalAccessException {
        this.ensureObj(var1);
        if (this.isFinal) {
            this.throwFinalFieldIllegalAccessException(var2);
        }

        // HERE: Field type isn't assignable from object type.
        if (var2 != null && !this.field.getType().isAssignableFrom(var2.getClass())) {
            this.throwSetIllegalArgumentException(var2);
        }

        unsafe.putObject(var1, this.fieldOffset, var2);
    }
{code}

The following error will be logged:

{noformat}
class org.apache.ignite.binary.BinaryObjectException: Failed to deserialize object [typeName=org.apache.ignite.internal.binary.BinaryMarshallerReplaceObjectTest$TestObject]

	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:874)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize0(BinaryReaderExImpl.java:1762)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1714)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:797)
	at org.apache.ignite.internal.binary.BinaryObjectImpl.deserialize(BinaryObjectImpl.java:639)
	at org.apache.ignite.internal.binary.BinaryMarshallerReplaceObjectTest.testUnmarshal(BinaryMarshallerReplaceObjectTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.binary.BinaryObjectException: Failed to read field [name=val]
	at org.apache.ignite.internal.binary.BinaryFieldAccessor.read(BinaryFieldAccessor.java:168)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.read(BinaryClassDescriptor.java:843)
	... 14 more
Caused by: java.lang.IllegalArgumentException: Can not set org.apache.ignite.internal.binary.BinaryMarshallerReplaceObjectTest$Intf field org.apache.ignite.internal.binary.BinaryMarshallerReplaceObjectTest$TestObject.val to org.apache.ignite.internal.binary.BinaryMarshallerReplaceObjectTest$Cls
	at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:164)
	at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:168)
	at sun.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)
	at java.lang.reflect.Field.set(Field.java:741)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.read0(BinaryFieldAccessor.java:683)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor.read(BinaryFieldAccessor.java:164)
	... 15 more
{noformat}

Minimal reproducer:

{code:java}
package org.apache.ignite.internal.binary;

import java.io.Serializable;
import java.util.Arrays;
import java.util.Collection;
import org.apache.ignite.IgniteCheckedException;
import org.apache.ignite.IgniteException;
import org.apache.ignite.binary.BinaryIdMapper;
import org.apache.ignite.binary.BinaryNameMapper;
import org.apache.ignite.binary.BinaryObject;
import org.apache.ignite.binary.BinarySerializer;
import org.apache.ignite.binary.BinaryTypeConfiguration;
import org.apache.ignite.configuration.BinaryConfiguration;
import org.apache.ignite.configuration.IgniteConfiguration;
import org.apache.ignite.internal.managers.discovery.GridDiscoveryManager;
import org.apache.ignite.internal.util.IgniteUtils;
import org.apache.ignite.internal.util.typedef.internal.U;
import org.apache.ignite.logger.NullLogger;
import org.apache.ignite.marshaller.MarshallerContextTestImpl;
import org.apache.ignite.spi.discovery.DiscoverySpiCustomMessage;
import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;
import org.apache.ignite.testframework.junits.GridTestKernalContext;
import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;

public class BinaryMarshallerReplaceObjectTest extends GridCommonAbstractTest {

    public void testUnmarshal() throws Exception {
        BinaryMarshaller marsh = binaryMarshaller(null, null, null, Arrays.asList(
            new BinaryTypeConfiguration(TestObject.class.getName())), null);

        TestObject obj = new TestObject();

        BinaryObject po = marshal(obj, marsh);

        po.deserialize();
    }

    interface Intf {
        long value();
    }

    static class TestObject {
        Intf val = new IntfImpl();
    }

    static class IntfImpl extends Cls implements Intf {
        @Override public long value() {
            return longValue();
        }
    }

    static class Cls {
        long val;

        public long longValue() {
            return val;
        }

        private Object writeReplace() {
            return new SerializationProxy(this);
        }

        private static class SerializationProxy implements Serializable {
            private final long val;

            SerializationProxy(Cls a) {
                val = a.longValue();
            }

            private Object readResolve() {
                Cls a = new Cls();

                a.val = val;

                return a;
            }
        }
    }

    protected BinaryMarshaller binaryMarshaller(
        BinaryNameMapper nameMapper,
        BinaryIdMapper mapper,
        BinarySerializer serializer,
        Collection<BinaryTypeConfiguration> cfgs,
        Collection<String> excludedClasses
    ) throws IgniteCheckedException {
        IgniteConfiguration iCfg = new IgniteConfiguration();

        BinaryConfiguration bCfg = new BinaryConfiguration();

        bCfg.setNameMapper(nameMapper);
        bCfg.setIdMapper(mapper);
        bCfg.setSerializer(serializer);
        bCfg.setCompactFooter(true);

        bCfg.setTypeConfigurations(cfgs);

        iCfg.setBinaryConfiguration(bCfg);
        iCfg.setClientMode(false);
        iCfg.setDiscoverySpi(new TcpDiscoverySpi() {
            @Override public void sendCustomEvent(DiscoverySpiCustomMessage msg) throws IgniteException {
                //No-op.
            }
        });

        BinaryContext ctx = new BinaryContext(BinaryCachingMetadataHandler.create(), iCfg, new NullLogger());

        BinaryMarshaller marsh = new BinaryMarshaller();

        MarshallerContextTestImpl marshCtx = new MarshallerContextTestImpl(null, excludedClasses);

        GridTestKernalContext kernCtx = new GridTestKernalContext(log, iCfg);
        kernCtx.add(new GridDiscoveryManager(kernCtx));

        marshCtx.onMarshallerProcessorStarted(kernCtx, null);

        marsh.setContext(marshCtx);

        IgniteUtils.invoke(BinaryMarshaller.class, marsh, ""setBinaryContext"", ctx, iCfg);

        return marsh;
    }

    /**
     * @param obj Object.
     * @param marsh Marshaller.
     * @return Binary object.
     */
    private <T> BinaryObjectImpl marshal(T obj, BinaryMarshaller marsh) throws IgniteCheckedException {
        byte[] bytes = marsh.marshal(obj);

        return new BinaryObjectImpl(U.<GridBinaryMarshaller>field(marsh, ""impl"").context(),
            bytes, 0);
    }
}
{code}",,agura,dmagda,tonysze,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 02 09:09:46 UTC 2017,,,,,,,,,,"0|i3kesv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 09:09;agura;Fixed. See PR: https://github.com/apache/ignite/pull/2778

TC looks good: https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2778%2Fhead;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix IgnitePdsThreadInterruptionTest failure with larger number of threads.,IGNITE-6484,13104259,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,ascherbakov,ascherbakov,22/Sep/17 10:56,22/Sep/17 16:18,14/Jul/23 06:20,22/Sep/17 13:38,2.1,,,,,2.3,,persistence,,,,0,,,,"Test fails on interruptions of conditional wait.

Related ticket IGNITE-6228",,agoncharuk,ascherbakov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 13:38:17 UTC 2017,,,,,,,,,,"0|i3kes7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 11:54;ascherbakov;writeComplete conditional wait is made uninterruptable.;;;","22/Sep/17 13:38;agoncharuk;Thanks, Alexey, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect server node filter in GridDiscoveryManager,IGNITE-6480,13104228,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,22/Sep/17 09:12,22/Sep/17 10:27,14/Jul/23 06:20,22/Sep/17 10:27,,,,,,2.3,,,,,,0,,,,GridDiscoveryManager.serverTopologyNodes return collection nodes with daemon node inside.,,agoncharuk,DmitriyGovorukhin,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 10:27:14 UTC 2017,,,,,,,,,,"0|i3kelb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 09:30;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2726

    IGNITE-6480 fix serverTopologyNodes method

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6480

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2726.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2726
    
----
commit 2d77153465b098805954d825610e8afae413511d
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-09-22T09:28:53Z

    IGNITE-6480 fix serverTopologyNodes method

----
;;;","22/Sep/17 10:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2726
;;;","22/Sep/17 10:27;agoncharuk;Thanks, Dmitriy, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole demo fails to import metadata,IGNITE-6476,13104159,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,Klaster_1,Klaster_1,22/Sep/17 04:08,22/Sep/17 04:34,14/Jul/23 06:20,22/Sep/17 04:34,2.1,,,,,2.3,,wizards,,,,0,,,,"*What happens:*
When I try to import domain models in demo mode, web throws an error:

{code}

[2017-09-22 10:58:41,251][ERROR][pool-4-thread-1][AgentMetadataDemo] DEMO: Failed to start test drive for metadata!
java.sql.SQLException: No suitable driver found for jdbc:h2:mem:demo-db;DB_CLOSE_DELAY=-1
        at java.sql.DriverManager.getConnection(DriverManager.java:689)
        at java.sql.DriverManager.getConnection(DriverManager.java:247)
        at org.apache.ignite.console.demo.AgentMetadataDemo.testDrive(AgentMetadataDemo.java:61)
        at org.apache.ignite.console.agent.handlers.DatabaseListener.connect(DatabaseListener.java:199)
        at org.apache.ignite.console.agent.handlers.DatabaseListener.schemas(DatabaseListener.java:221)
        at org.apache.ignite.console.agent.handlers.DatabaseListener$1.execute(DatabaseListener.java:83)
        at org.apache.ignite.console.agent.handlers.AbstractListener$1.run(AbstractListener.java:71)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:748)
{code}


*Expected behavior:*
Webagent should return requested metadata without throwing errors.",,Klaster_1,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 04:34:08 UTC 2017,,,,,,,,,,"0|i3ke5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 04:34;kuaw26;Found on solution on SO: https://stackoverflow.com/questions/30005446/no-suitable-driver-found-for-jdbch2tcp

Fixed. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong casting of long value to int leads to incorrect results,IGNITE-6470,13103987,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,21/Sep/17 15:34,21/Sep/17 15:48,14/Jul/23 06:20,21/Sep/17 15:48,2.2,,,,,2.3,,,,,,0,,,,"Wrong casting of {{long}} value to {{int}} leads to incorrect results:

{code:java}
    /** {@inheritDoc} */
    @Override public int pages() {
        if (!inited)
            return 0;
        
        // allocated.get() returns long value. We should cast it to int after division.
        return (int)((allocated.get() - headerSize()) / pageSize);
    }

{code}",,agura,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 15:48:26 UTC 2017,,,,,,,,,,"0|i3kd3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 15:48;agura;Fixed and merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite cache 6: new tests CacheExchangeMergeTest.testConcurrentStartServersAndClients() and testDelayExchangeMessages() have flaky junit assertion after cache get,IGNITE-6467,13103949,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,dpavlov,dpavlov,21/Sep/17 14:04,06/Aug/18 12:21,14/Jul/23 06:20,01/Aug/18 20:54,,,,,,2.7,,,,,,0,MakeTeamcityGreenAgain,Muted_test,,"Ignite cache 6: CacheExchangeMergeTest: 3 tests fails with probability >10% in master and in PRs
IgniteCacheTestSuite6: CacheExchangeMergeTest.testConcurrentStartServersAndClients() 
IgniteCacheTestSuite6: CacheExchangeMergeTest.testDelayExchangeMessages() 
IgniteCacheTestSuite6: CacheExchangeMergeTest.testMergeServersFail1_2 (fail rate 22,6%) 

https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=741151191800314619&tab=testDetails

https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=-8990224019412265556&tab=testDetails


latest failure from master
https://ci.ignite.apache.org/viewLog.html?buildId=843261&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache6#testNameId741151191800314619

{noformat}
Invalid value [node=distributed.CacheExchangeMergeTest0, client=false, order=1, cache=c1] expected:<0> but was:<null>
    at java.util.concurrent.FutureTask.report(FutureTask.java:122)
    at java.util.concurrent.FutureTask.get(FutureTask.java:188)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.checkNodeCaches(CacheExchangeMergeTest.java:1343)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.checkCaches0(CacheExchangeMergeTest.java:1213)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.checkCaches(CacheExchangeMergeTest.java:1195)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.concurrentStart(CacheExchangeMergeTest.java:446)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.testConcurrentStartServersAndClients(CacheExchangeMergeTest.java:414)
Caused by: junit.framework.AssertionFailedError: Invalid value [node=distributed.CacheExchangeMergeTest0, client=false, order=1, cache=c1] expected:<0> but was:<null>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.TestCase.assertEquals(TestCase.java:244)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest$16.run(CacheExchangeMergeTest.java:1312)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
{noformat}",,dpavlov,sboikov,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7882,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 01 20:54:41 UTC 2018,,,,,,,,,,"0|i3kcvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Oct/17 13:50;dpavlov;Seems there is second test failure related to this problem in CacheExchangeMergeTest.testDelayExchangeMessages(). 	
I've updated description. Or should we create separate issue for this failure?

Test history (88% success rate):
https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=6645727674637282605&tab=testDetails

{noformat}
java.util.concurrent.ExecutionException: junit.framework.AssertionFailedError: Invalid value [node=distributed.CacheExchangeMergeTest14, client=true, order=13, cache=c9] expected:<3> but was:<null>
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.failNotEquals(Assert.java:329)
    at junit.framework.Assert.assertEquals(Assert.java:78)
    at junit.framework.TestCase.assertEquals(TestCase.java:244)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.checkNodeCaches(CacheExchangeMergeTest.java:1385)
    at org.apache.ignite.internal.processors.cache.distributed.CacheExchangeMergeTest.access$2500(CacheExchangeMergeTest.java:89)
{noformat};;;","24/Jul/18 10:32;sboikov;Fixed simple bug in the test (it should not check data if tx failed, 81d04a5b61722bd62ee647ef46d3872bc71fbaaa). But locally got another failure: 

CacheException: class org.apache.ignite.IgniteCheckedException: Adding entry to partition that is concurrently evicted [grp=c6, part=554, shouldBeMoving=, belongs=true, topVer=AffinityTopologyVersion [topVer=11, minorTopVer=0], curTopVer=AffinityTopologyVersion [topVer=11, minorTopVer=1]]CacheException: class org.apache.ignite.IgniteCheckedException: Adding entry to partition that is concurrently evicted [grp=c6, part=554, shouldBeMoving=, belongs=true, topVer=AffinityTopologyVersion [topVer=11, minorTopVer=0], curTopVer=AffinityTopologyVersion [topVer=11, minorTopVer=1]]. 

 

Trying to add more simple test reproducing this.;;;","25/Jul/18 19:46;sboikov;For error with GridDhtInvalidPartitionException added more simple test (IgniteCacheClientNodeChangingTopologyTest.testPessimisticTx3), committed fix 7d4c46b9bfd502712143d6e05d40546a5c3420fb,;;;","26/Jul/18 08:48;sboikov;Again noticed failure on TeamCity with 'Invalid value ' error, need further investigate.;;;","30/Jul/18 07:10;sboikov;Debugged failure with ATOMIC cache (get after put returns null). Found out that problem caused by GridDhtPartitionTopologyImpl.updateRebalanceVersion, it is supposed that this method marks topology version as 'rebalanced' if all affinity nodes are owners and there are no others owners. But in this reproduce this scenario: servers A is owner, then affinity changes and another server B also becomes owner. Server A is still partition owner but GridDhtPartitionTopologyImpl.rebalanceFinished returns true, update in ATOMIC cache is not mapped to server A, but when server A tries to do get it still is owner and reads value locally.

It looks like sometimes  when GridDhtPartitionTopologyImpl.updateRebalanceVersion is called 'diffFromAffinity' is not correct (it does not match to current affinity version), and result of updateRebalanceVersion is not correct.;;;","01/Aug/18 20:54;sboikov;Fixed to skip GridDhtPartitionTopologyImpl.updateRebalanceVersion if is 'diffFromAffinityVersion' does not match to current affinity version.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite PDS1: Test testGetForInitialWrite failed in IgnitePdsCheckpointSimulationWithRealCpDisabledTest ,IGNITE-6466,13103932,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,dpavlov,dpavlov,21/Sep/17 13:21,22/Sep/17 10:50,14/Jul/23 06:20,22/Sep/17 10:50,2.3,,,,,2.3,,persistence,,,,0,MakeTeamcityGreenAgain,,,"Assertion in 
{noformat}
java.lang.AssertionError
    at org.apache.ignite.internal.pagemem.PageUtils.getShort(PageUtils.java:94)
    at org.apache.ignite.internal.processors.cache.persistence.tree.io.DataPageIO.getPageEntrySize(DataPageIO.java:138)
    at org.apache.ignite.internal.processors.cache.persistence.tree.io.DataPageIO.printPageLayout(DataPageIO.java:388)
    at org.apache.ignite.internal.processors.cache.persistence.tree.io.DataPageIO.printPage(DataPageIO.java:1448)
    at org.apache.ignite.internal.processors.cache.persistence.tree.io.PageIO.printPage(PageIO.java:571)
    at org.apache.ignite.internal.pagemem.wal.record.PageSnapshot.toString(PageSnapshot.java:90)
    at java.lang.String.valueOf(String.java:2849)
    at org.apache.ignite.internal.processors.cache.persistence.db.file.IgnitePdsCheckpointSimulationWithRealCpDisabledTest.testGetForInitialWrite(IgnitePdsCheckpointSimulationWithRealCpDisabledTest.java:275)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
    at java.lang.Thread.run(Thread.java:745)
{noformat}",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 10:50:37 UTC 2017,,,,,,,,,,"0|i3kcrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 14:34;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2721

    IGNITE-6466:Ignite PDS1: Test testGetForInitialWrite failed

    IgnitePdsCheckpointSimulationWithRealCpDisabledTest
    
    Data page IO print fixed

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6466

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2721.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2721
    
----
commit 8923eb2e7340faeff7e4a2c09e494a62bb0bf5ea
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-09-21T14:32:59Z

    IGNITE-6466:Ignite PDS1: Test testGetForInitialWrite failed in IgnitePdsCheckpointSimulationWithRealCpDisabledTest

----
;;;","21/Sep/17 14:37;dpavlov;[~agoncharuk], could you please review my changes?;;;","22/Sep/17 10:50;agoncharuk;Thanks, Dmitriy, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC thin: SQLSTATE is not set for BatchUpdateException,IGNITE-6465,13103931,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,21/Sep/17 13:14,21/Sep/17 14:53,14/Jul/23 06:20,21/Sep/17 14:52,2.1,,,,,2.3,,jdbc,,,,0,,,,"Vendor code is propagated to {{BatchUpdateException}}, but {{SQLSTATE}} is set to {{null}}.",,githubbot,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 14:53:15 UTC 2017,,,,,,,,,,"0|i3kcrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 13:30;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2719

    IGNITE-6465: JDBC thin: set SQLSTATE for BatchUpdateException

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6465

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2719.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2719
    
----
commit e91036d6cce0b53158ccee993e8491a1fffd466b
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-21T13:29:24Z

    IGNITE-6465: JDBC thin: set SQLSTATE for BatchUpdateException

----
;;;","21/Sep/17 13:46;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2719%2Fhead] are OK.
[~vozerov], please review the patch.;;;","21/Sep/17 14:53;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2719
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ignite.active() == true, but ignite.utilityCache() may return null",IGNITE-6464,13103889,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,kuaw26,kuaw26,21/Sep/17 10:49,17/Jun/20 04:46,14/Jul/23 06:20,13/Mar/18 10:19,,,,,,2.4,,cache,,,,0,,,,,,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-09-21 10:49:40.0,,,,,,,,,,"0|i3kchz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Invalid result on query result with big number,IGNITE-6463,13103869,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,21/Sep/17 09:46,10/Oct/17 08:16,14/Jul/23 06:20,06/Oct/17 17:19,2.1,,,,,2.4,,wizards,,,,0,,,,"Query result with big number values in cell cut that values.

Attached demo project to put in cache big integer values.

    Open project and run *startup.ServerNodeCodeStartup*.
    Execute query in Web console: *SELECT * FROM ""CountryCache"".Country*

Big integer value showed in *population*. It should not contain 000 in the end of the values.",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 10:36;vsisko;bigIntReproducer.tar.gz;https://issues.apache.org/jira/secure/attachment/12888252/bigIntReproducer.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 10 08:16:24 UTC 2017,,,,,,,,,,"0|i3kcdj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 10:42;vsisko;[~pkonstantinov]. Please test by scenario from description.;;;","03/Oct/17 03:56;pkonstantinov;Tested.;;;","06/Oct/17 17:19;kuaw26;Looks good. Merged to master.;;;","10/Oct/17 08:16;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: sanitize user on save,IGNITE-6461,13103794,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,21/Sep/17 02:14,21/Sep/17 07:39,14/Jul/23 06:20,21/Sep/17 07:38,,,,,,2.3,,wizards,,,,0,,,,,,Klaster_1,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 03:55:57 UTC 2017,,,,,,,,,,"0|i3kbx3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 03:06;kuaw26;Ilya, please review and test my changes.;;;","21/Sep/17 03:55;Klaster_1;[~kuaw26] looks good, I wasn't able to reproduce the issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong consistentId for lightweight ClusterNode instances,IGNITE-6460,13103717,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,20/Sep/17 20:26,21/Sep/17 16:04,14/Jul/23 06:20,21/Sep/17 16:04,2.1,,,,,2.3,,,,,,0,,,,"I have introduced new constructor for TcpDiscoveryNode to create lightweight instances to store them on disc or etc.
But to save consistentId we need not only keep it in field, but also add to node attributes.",,agoncharuk,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 16:04:07 UTC 2017,,,,,,,,,,"0|i3kbfz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 20:43;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/2707

    IGNITE-6460 Wrong consistentId for lightweight ClusterNode instances

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6460

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2707.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2707
    
----
commit 7ece513e55e089ebc00de2d5675066f7eaf8af51
Author: Eduard Shangareev <eshangareev@gridgain.com>
Date:   2017-09-20T20:36:55Z

    IGNITE-6460 Wrong consistentId for lightweight ClusterNode instances

----
;;;","20/Sep/17 20:43;EdShangGG;https://github.com/apache/ignite/pull/2707

Please, review.;;;","21/Sep/17 15:58;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2707
;;;","21/Sep/17 16:04;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect exception when used schema name in lower case ,IGNITE-6457,13103603,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,ustas,ustas,20/Sep/17 13:46,25/Sep/17 13:50,14/Jul/23 06:20,25/Sep/17 13:50,2.1,,,,,2.3,,sql,,,,0,usability,,,"Scenario:
1. Start 1 node
2. connect to node via sqlline (https://github.com/julianhyde/sqlline)
{noformat} ./sqlline -d org.apache.ignite.IgniteJdbcThinDriver --color=true --verbose=true --showWarnings=true --showNestedErrs=true -u jdbc:ignite:thin://127.0.0.1:10800/test{noformat}
3. Create table:
{noformat}CREATE TABLE city1 (id LONG PRIMARY KEY, name VARCHAR);{noformat}
Result:
{noformat}
[16:35:27,506][SEVERE][client-connector-#40%null%][JdbcRequestHandler] Failed to execute SQL query [reqId=0, req=JdbcQueryExecuteRequest [schemaName=test, pageSize=1024, maxRows=0, sqlQry=CREATE TABLE city1 (id LONG PRIMARY KEY, name VARCHAR), args=[], stmtType=ANY_STATEMENT_TYPE]]
class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to set schema for DB connection for thread [schema=test]
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.connectionForThread(IgniteH2Indexing.java:439)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.connectionForSchema(IgniteH2Indexing.java:356)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1287)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1918)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1914)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2396)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFieldsNoCache(GridQueryProcessor.java:1922)
	at org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler.executeQuery(JdbcRequestHandler.java:286)
	at org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler.handle(JdbcRequestHandler.java:149)
	at org.apache.ignite.internal.processors.odbc.ClientListenerNioListener.onMessage(ClientListenerNioListener.java:141)
	at org.apache.ignite.internal.processors.odbc.ClientListenerNioListener.onMessage(ClientListenerNioListener.java:40)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:279)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioAsyncNotifyFilter$3.body(GridNioAsyncNotifyFilter.java:97)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.util.worker.GridWorkerPool$1.run(GridWorkerPool.java:70)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Schema ""test"" not found; SQL statement:
SET SCHEMA ""test"" [90079-195]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.engine.Database.getSchema(Database.java:1755)
	at org.h2.command.dml.Set.update(Set.java:408)
	at org.h2.command.CommandContainer.update(CommandContainer.java:101)
	at org.h2.command.Command.executeUpdate(Command.java:260)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:137)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:122)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.connectionForThread(IgniteH2Indexing.java:431)
	... 19 more
{noformat}

So we have incorrect exception.

Correct one appears if used the following jdbc url: {{jdbc:ignite:thin://127.0.0.1:10800/TEST}}



","Cache configuration:
{noformat}
        <property name=""cacheConfiguration"">
            <list>
                <!-- Partitioned cache example configuration (Atomic mode). -->
                <bean class=""org.apache.ignite.configuration.CacheConfiguration"">
                    <property name=""name"" value=""cache1""/>
                    <property name=""atomicityMode"" value=""ATOMIC""/>
                    <property name=""sqlSchema"" value=""test""/>
                    <property name=""backups"" value=""1""/>
                </bean>
            </list>
        </property>
{noformat}",avolkov,githubbot,tledkov-gridgain,ustas,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 25 08:47:04 UTC 2017,,,,,,,,,,"0|i3kaqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 08:51;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2712

    IGNITE-6457: support schema case conversion at the JDBC thin driver c…

    …onnection URL.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6457

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2712.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2712
    
----
commit 6d2d901319d41bf03c38dbfa89443ed0c2ed117d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-21T08:51:11Z

    IGNITE-6457: support schema case conversion at the JDBC thin driver connection URL.

----
;;;","21/Sep/17 09:15;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2712%2Fhead] are OK.
[~vozerov], please review the patch.;;;","21/Sep/17 11:30;vozerov;[~tledkov-gridgain], I did minor adjustements. Please review my commit.;;;","21/Sep/17 11:32;vozerov;Test run: https://ci.ignite.apache.org/viewLog.html?buildId=843790&tab=queuedBuildOverviewTab;;;","21/Sep/17 11:42;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2712
;;;","22/Sep/17 14:12;ustas;Re-tested on 5ca969dd. Wasn't fix.;;;","22/Sep/17 15:03;vozerov;[~ustas], please provide details.;;;","22/Sep/17 15:14;vozerov;[~ustas], [~avolkov]
The problem is that you create a cache without a single query entity. Currently we treat such caches as SQL-disabled, and do not create relevant schema. Please add the following to config and it should work:
{code}
<property name=""indexedTypes"">
    <list>
        <value>java.lang.Integer</value>
        <value>java.lang.String</value>
    </list>
</property>
{code};;;","25/Sep/17 08:47;avolkov;Yes, that's work. Bug will be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data structure suite timeout: test is not able to fail after interruption,IGNITE-6454,13103565,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dpavlov,dpavlov,20/Sep/17 10:33,29/Apr/19 17:13,14/Jul/23 06:20,30/Oct/18 06:36,2.1,,,,,2.8,,,,,,0,MakeTeamcityGreenAgain,,,"https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteDataStrucutures&branch=%3Cdefault%3E&tab=buildTypeStatusDiv

Most often timeout is caused by following tests:
GridCacheReplicatedDataStructuresFailoverSelfTest
- testReentrantLockConstantMultipleTopologyChangeNonFailoverSafe()
- testFairReentrantLockConstantMultipleTopologyChangeNonFailoverSafe()

And most of thread dumps contains the following
{noformat}
] :	 [Step 4/5] Thread [name=""test-runner-#35143%replicated.GridCacheReplicatedDataStructuresFailoverSelfTest%"", id=38586, state=RUNNABLE, blockCnt=0, waitCnt=60]
[20:34:26] :	 [Step 4/5]         at java.lang.Throwable.fillInStackTrace(Native Method)
[20:34:26] :	 [Step 4/5]         at java.lang.Throwable.fillInStackTrace(Throwable.java:783)
[20:34:26] :	 [Step 4/5]         - locked o.a.i.IgniteException@754033e
[20:34:26] :	 [Step 4/5]         at java.lang.Throwable.<init>(Throwable.java:265)
[20:34:26] :	 [Step 4/5]         at java.lang.Exception.<init>(Exception.java:66)
[20:34:26] :	 [Step 4/5]         at java.lang.RuntimeException.<init>(RuntimeException.java:62)
[20:34:26] :	 [Step 4/5]         at o.a.i.IgniteException.<init>(IgniteException.java:44)
[20:34:26] :	 [Step 4/5]         at o.a.i.i.processors.datastructures.GridCacheLockImpl$Sync.validate(GridCacheLockImpl.java:275)
[20:34:26] :	 [Step 4/5]         at o.a.i.i.processors.datastructures.GridCacheLockImpl$Sync.access$1000(GridCacheLockImpl.java:122)
[20:34:26] :	 [Step 4/5]         at o.a.i.i.processors.datastructures.GridCacheLockImpl.lock(GridCacheLockImpl.java:1200)
[20:34:26] :	 [Step 4/5]         at o.a.i.i.processors.cache.datastructures.GridCacheAbstractDataStructuresFailoverSelfTest.doTestReentrantLock(GridCacheAbstractDataStructuresFailoverSelfTest.java:785)
[20:34:26] :	 [Step 4/5]         at o.a.i.i.processors.cache.datastructures.GridCacheAbstractDataStructuresFailoverSelfTest.testFairReentrantLockConstantMultipleTopologyChangeNonFailoverSafe(GridCacheAbstractDataStructuresFailoverSelfTest.java:739)
[20:34:26] :	 [Step 4/5]         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[20:34:26] :	 [Step 4/5]         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
[20:34:26] :	 [Step 4/5]         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[20:34:26] :	 [Step 4/5]         at java.lang.reflect.Method.invoke(Method.java:606)
[20:34:26] :	 [Step 4/5]         at junit.framework.TestCase.runTest(TestCase.java:176)
[20:34:26] :	 [Step 4/5]         at o.a.i.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
[20:34:26] :	 [Step 4/5]         at o.a.i.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
[20:34:26] :	 [Step 4/5]         at o.a.i.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
[20:34:26] :	 [Step 4/5]         at java.lang.Thread.run(Thread.java:745)
[20:34:26] :	 [Step 4/5] 
{noformat}

That can be indicator that threads are interrupted and flag org.apache.ignite.internal.processors.datastructures.GridCacheLockImpl#interruptAll is set,
than org.apache.ignite.IgniteException is thrown, but it is ignored by test and test continues to execute",,amashenkov,dpavlov,garus.d.g,githubbot,sboikov,xtern,zstan,,,,,,"dspavlov commented on pull request #2704: IGNITE-6454: suite timeout replace to failure
URL: https://github.com/apache/ignite/pull/2704
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 17:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 10:38;dpavlov;lastStartedTest_GridCacheReplicatedDataStructuresFailoverSelfTest.testFairReentrantLockConstantMultipleTopologyChangeNonFailoverSafe.log.zip;https://issues.apache.org/jira/secure/attachment/12888041/lastStartedTest_GridCacheReplicatedDataStructuresFailoverSelfTest.testFairReentrantLockConstantMultipleTopologyChangeNonFailoverSafe.log.zip","20/Sep/17 10:38;dpavlov;lastStartedTest_GridCacheReplicatedDataStructuresFailoverSelfTest.testReentrantLockConstantMultipleTopologyChangeNonFailoverSafe.log.zip;https://issues.apache.org/jira/secure/attachment/12888040/lastStartedTest_GridCacheReplicatedDataStructuresFailoverSelfTest.testReentrantLockConstantMultipleTopologyChangeNonFailoverSafe.log.zip",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 30 06:36:35 UTC 2018,,,,,,,,,,"0|i3kahz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 13:11;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2704

    IGNITE-6454: suite timeout replace to failure

    Interrupted flag check was added

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6454-interrupt-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2704.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2704
    
----
commit cfe3240a7933894dc3e048d954de524a9061128e
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-09-20T13:07:11Z

    IGNITE-6454: suite timeout replace to failure: interrupted flag check was added

----
;;;","21/Sep/17 12:36;dpavlov;Test runs with interrupted flag check still contains timeouts,
https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteDataStructures&branch_Ignite20Tests=pull%2F2704%2Fhead&tab=buildTypeStatusDiv

Still failed by same test
-
 GridCacheReplicatedDataStructuresFailoverSelfTest.testReentrantLockConstantMultipleTopologyChangeNonFailoverSafe (Last started) ;;;","01/Nov/17 10:42;zstan;I add fail assertion for this test https://github.com/apache/ignite/pull/2959 plz merge it?
Thanks.;;;","04/Sep/18 15:27;garus.d.g;I think we need add some tests to this ticket. They hang with the same log.

GridCachePartitionedDataStructuresFailoverSelfTest#testReentrantLockConstantTopologyChangeNonFailoverSafe
 GridCachePartitionedDataStructuresFailoverSelfTest#testFairReentrantLockConstantTopologyChangeNonFailoverSafe

GridCacheReplicatedDataStructuresFailoverSelfTest#testReentrantLockConstantTopologyChangeNonFailoverSafe
 GridCacheReplicatedDataStructuresFailoverSelfTest#testFairReentrantLockConstantTopologyChangeNonFailoverSafe

 

I've created PR for that 
https://github.com/apache/ignite/pull/4682;;;","04/Sep/18 15:35;githubbot;GitHub user dgarus opened a pull request:

    https://github.com/apache/ignite/pull/4682

    IGNITE-6454 muted flaky tests

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dgarus/ignite IGNITE-6454

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4682.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4682
    
----
commit 75646c063f93cb32dd4e85a4441ef431f44cf3dd
Author: dgarus <garus.d.g@...>
Date:   2018-09-04T15:32:12Z

    IGNITE-6454 muted flaky tests

----
;;;","05/Sep/18 08:32;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4682
;;;","13/Sep/18 12:11;githubbot;GitHub user dgarus opened a pull request:

    https://github.com/apache/ignite/pull/4744

    IGNITE-6454 reproducer fast finish

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dgarus/ignite IGNITE-6454_fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4744.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4744
    
----
commit 25b2834ec58283e42801acc0ec98a7e530cc9d86
Author: dgarus <garus.d.g@...>
Date:   2018-09-13T12:07:47Z

    IGNITE-6454 reproducer fast finish

----
;;;","14/Sep/18 10:33;garus.d.g;The cause of handing tests is a hanging transaction on the primary node for the intrinsic key of IgniteLock data structure.
The Near node is a node that attempts to aсquire a distributed lock, but the same time distributed has got state interruptAll == true and isBroken == true.
There are two messages for that transaction:
- GridDistributedLockRequest from near node to node with the primary partition.
- GridDistributedLockResponse from the node with the primary partition to near node.;;;","17/Sep/18 12:11;githubbot;Github user dgarus closed the pull request at:

    https://github.com/apache/ignite/pull/4744
;;;","25/Oct/18 06:02;sboikov;Debugged test, found out that it is possible that transactions started by lock implementation is not rolledback if thread executing transaction is interrupted (lock implementation does this in GridCacheLockImpl.Sync.interruptAll).

Possible scenario:
 * main test thread calls cache.get inside tx, this creates GridDhtColocatedLockFuture, it is not mapped right away because topology change is in progress, main thread creates future and calls fut.get
 * main test thread is interrupted, tx is not mapped yet, NearTxFinishFuture does not expect there is non-completed lock operation and tx is rolledback
 * GridDhtColocatedLockFuture is ready to map and sends locks requests creating txs on remote node

Added test reproducing this issue without IgniteLock usage (CacheOperationsInterruptTest).

I see that futures created by GridNearTxLocal for all operation except 'getAll' do not allow 'fut.get()' interruption (see usages of GridNearTxLocal.nonInterruptable), I think the same should be done for 'getAll'.;;;","30/Oct/18 06:36;sboikov;Implemented fix to ignore interruptions for cache.get in pessimistic tx (d8e46de2899b35fa498310a31705e6a9760a84f3).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor CMD: Show missed cache properties,IGNITE-6449,13103542,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,20/Sep/17 08:53,21/Sep/17 04:07,14/Jul/23 06:20,20/Sep/17 12:09,2.1,,,,,2.3,,wizards,,,,0,,,,,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 04:07:32 UTC 2017,,,,,,,,,,"0|i3kacv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 10:35;vsisko;Implemented showing of missed cache properties for cache -a command.;;;","20/Sep/17 12:09;kuaw26;Looks good. Merged to master. Please retest.;;;","21/Sep/17 04:07;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Select * doesn't return new field name after concurrent ALTER TABLE ,IGNITE-6448,13103536,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ustas,ustas,ustas,20/Sep/17 08:35,05/Oct/17 13:55,14/Jul/23 06:20,05/Oct/17 13:28,2.1,,,,,2.4,,sql,,,,0,,,,"Steps for reproduce:
1. Start 3 nodes
2. Execute 
{noformat}CREATE TABLE person (id LONG, name VARCHAR, city_id LONG, PRIMARY KEY (id, city_id)) {noformat}
to create table Person
3. Connect to grid via sqlline (https://github.com/julianhyde/sqlline)
{noformat}./sqlline -d org.apache.ignite.IgniteJdbcThinDriver --color=true --verbose=true --showWarnings=true --showNestedErrs=true -u jdbc:ignite:thin://127.0.0.1/{noformat}
4. Create one more connection {noformat}!connect jdbc:ignite:thin://127.0.0.1/ {noformat}
5. Execute ALTER TABLE for both connections {noformat} !all alter table person add field1 varchar;{noformat}
Result:
1. Got exception on coordinator:
{noformat}[10:59:15,805][SEVERE][client-connector-#55%null%][JdbcRequestHandler] Failed to execute SQL query [reqId=0, req=JdbcQueryExecuteRequest [schemaName=PUBLIC, pageSize=1024, maxRows=0, sqlQry=alter table person add field1 varchar, args=[], stmtType=ANY_STATEMENT_TYPE]]
class org.apache.ignite.internal.processors.query.IgniteSQLException: Column already exists: FIELD1
	at org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.convert(DdlStatementsProcessor.java:329)
	at org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.runDdlStatement(DdlStatementsProcessor.java:273)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1383)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1918)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1914)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2396)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFieldsNoCache(GridQueryProcessor.java:1922)
	at org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler.executeQuery(JdbcRequestHandler.java:286)
	at org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler.handle(JdbcRequestHandler.java:149)
	at org.apache.ignite.internal.processors.odbc.ClientListenerNioListener.onMessage(ClientListenerNioListener.java:141)
	at org.apache.ignite.internal.processors.odbc.ClientListenerNioListener.onMessage(ClientListenerNioListener.java:40)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:279)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioAsyncNotifyFilter$3.body(GridNioAsyncNotifyFilter.java:97)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.util.worker.GridWorkerPool$1.run(GridWorkerPool.java:70)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}
2. When I try to get all data from Person:
{noformat}select * from person;{noformat}
I get the table without new field but if try to get only this field from table it works.",,githubbot,tledkov-gridgain,ustas,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 05 13:55:25 UTC 2017,,,,,,,,,,"0|i3kabj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 08:48;ustas;I observed the same behavior also for non concurrent ALTER TABLE;;;","20/Sep/17 09:07;tledkov-gridgain;Root cause: use cached query at the {{IgniteH2Indexing#queryDistributedSqlFields}}.
Proposal: the query cache {{IgniteH2Indexing#twoStepCache}} must be reset or partially cleaned after add / remove columns.;;;","20/Sep/17 12:19;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2702

    IGNITE-6448: clear query cache on ALTER TABLE ADD <column>

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6448

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2702.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2702
    
----
commit 7720f091237acba3f43e456c25f4c73d52bb626e
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-20T10:07:46Z

    IGNITE-6448: add test

commit 652fa795095ca195a500b5aaef341eb9509c081f
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-09-20T11:49:47Z

    Metadata update fix

commit 26a1ecb98201263ce97f4c88535150938683129f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-20T12:17:21Z

    IGNITE-6448: clear cached queries on add columns to table

commit 47de93df1b7b4e9b7e1953a9ce3f1aa77abf909e
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-20T12:18:22Z

    IGNITE-6448: add test to suite

----
;;;","20/Sep/17 12:23;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2702%2Fhead] are OK with me.
[~vozerov], please review the patch.;;;","21/Sep/17 11:52;vozerov;[~tledkov-gridgain], we need a test for multi-node case, when there are two connections opened to different nodes.;;;","21/Sep/17 12:17;tledkov-gridgain;[~vozerov], the test for multi-node case is added. Tests are OK. Please review the changes.;;;","21/Sep/17 14:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2702
;;;","22/Sep/17 14:04;ustas;Re-tesred. Works only for 1 connect.;;;","05/Oct/17 13:27;tledkov-gridgain;Not reproduced.;;;","05/Oct/17 13:55;ustas;Re-tested. Fix confirmed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Stuck on ""Loading"" screen",IGNITE-6446,13103483,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,Klaster_1,Klaster_1,20/Sep/17 02:54,21/Sep/17 09:15,14/Jul/23 06:20,21/Sep/17 03:27,2.1,,,,,2.3,,wizards,,,,0,,,,"*What happens:*
Web console gets stuck in loading screen when user opens any URL without prior app navigation and any permission check or HTTP request fails due to missing/expired authorization cookie.

*How to reproduce:*
1. Log out of web console or open private browser tab.
2. Go to http://locahost:9000/configuration/basic

*What should happen:*
User should be redirected to either 403 or signin screen.
",,Klaster_1,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 09:15:49 UTC 2017,,,,,,,,,,"0|i3k9zr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 03:16;Klaster_1;[~kuaw26] please review.

Looks like there were several issues:
1. Permissions hook did not run at all. I've updated it so it hooks into onBefore instead of onStart phase.
2. Permission hook returned `undefined`, but uiRouter hooks API [states|https://ui-router.github.io/ng1/docs/latest/modules/transition.html#hookresult] that one of particular values should be returned in order to perform redirect. I've fixed that.
3. Basic configuration screen lacked ""configuration"" permission. Even with fixes above it still stuck on loading screen. Fixed too.;;;","21/Sep/17 01:38;kuaw26;Please test several URLs in incognito mode.;;;","21/Sep/17 02:36;pkonstantinov;Successfully tested with several URLs in incognito mode. All times I was redirected to 403 page.;;;","21/Sep/17 03:27;kuaw26;Looks good. Merged to master. Please retest.;;;","21/Sep/17 09:15;pkonstantinov;Re-tested. Closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock detection doesn't execute.,IGNITE-6442,13103270,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,VitaliyB,VitaliyB,19/Sep/17 15:37,19/Dec/18 14:08,14/Jul/23 06:20,28/Sep/17 13:29,2.2,,,,,2.3,,,,,,0,,,,"In case of a configuration with near cache and if all entities of one of the transactions involved in the deadlock are on the node being the initiator of this transaction, then immediately after the timeout, the transaction rolls back (without calling DD).",,agura,githubbot,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6445,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 19 14:08:29 UTC 2018,,,,,,,,,,"0|i3k8ov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 15:42;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2699

    IGNITE-6442

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-6442

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2699.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2699
    
----
commit b2ee52f335c02211b3c26aab3eae708b6fe09cd9
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-09-19T15:39:40Z

    IGNITE-6442: Bug fixed.

----
;;;","20/Sep/17 11:44;VitaliyB;Hi, [~agura].  Please, review this issue. [Upsourse|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-346]

I've reproduced the case in which DD is not called and fixed bug. My test method checks only that DD was called, but does not verify that it worked correctly. Because in this case DD works flaky. I'll fix it at [IGNITE-6445|https://issues.apache.org/jira/browse/IGNITE-6445] and add correctness check to my test method.

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=840419&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll];;;","20/Sep/17 15:56;agura;[~VitaliyB]

It's bad idea to check that deadlock detection procedure was initiated using log messages. In all tests we have expectation about deadlock detection: at least one transaction should detect deadlock. It's enough for tests purposes and more reliable because can't be affected by log message changes. Please, fix it.;;;","21/Sep/17 11:27;agura;And one more comment. It would be better if future will return {{GridNearTxPrepareResponse}} instead of chaining.;;;","25/Sep/17 07:34;VitaliyB;[~agura], Done.
I've simplified test and fixed bug in another way that future would return GridNearTxPrepareRespons.

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=850753&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll];;;","25/Sep/17 17:02;VitaliyB;[~agura], after merging this PR, I will remove ""TODO"" from the test in this ticket [IGNITE-6445|https://issues.apache.org/jira/browse/IGNITE-6445]. 
Fixes of this 2 tickets are here: [PR_IGNITE-6445|https://github.com/apache/ignite/pull/2743] 
;;;","26/Sep/17 11:07;agura;[~VitaliyB] Please, don't mix fixes of different tickets. Could you please just update PR for this ticket that will contain fix only this issue? The same should be done for IGNITE-6445.;;;","26/Sep/17 11:32;VitaliyB;[~agura], Current  [PR|https://github.com/apache/ignite/pull/2699] and [Upsouse|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-346] from issue links.

I've added this PR [PR_IGNITE-6445|https://github.com/apache/ignite/pull/2743] to show why I added TODO.
;;;","28/Sep/17 13:29;agura;Thanks! Merged to master branch.;;;","28/Sep/17 13:31;agura;JFI: Commit message contains invalid issue number: 6445 instead of 6442.;;;","19/Dec/18 14:08;githubbot;Github user BiryukovVA closed the pull request at:

    https://github.com/apache/ignite/pull/2699
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataStructure can not be obtained on client if it is created on server node.,IGNITE-6437,13103215,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,mcherkasov,mcherkasov,19/Sep/17 11:06,10/Dec/18 16:40,14/Jul/23 06:20,21/Nov/17 10:14,2.1,2.3,,,,2.4,,data structures,,,,0,,,,DataStructure can not be obtained on client if it is created on server node.,,githubbot,ilantukh,mcherkasov,sboikov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6889,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 11:08;mcherkasov;NoQueueOnClientNodeTest.java;https://issues.apache.org/jira/secure/attachment/12887874/NoQueueOnClientNodeTest.java","02/Oct/17 09:36;zstan;tc_111.png;https://issues.apache.org/jira/secure/attachment/12889935/tc_111.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:40:02 UTC 2018,,,,,,,,,,"0|i3k8cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Sep/17 13:07;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/2779

    IGNITE-6437: DataStructure can not be obtained on client if it is cre…

    …ated on server node

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6437

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2779.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2779
    
----
commit b67d1350f99208a009cf043732f1b5b01c990538
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-09-29T13:05:51Z

    IGNITE-6437: DataStructure can not be obtained on client if it is created on server node

----
;;;","02/Oct/17 09:37;zstan;TC, https://ci.ignite.apache.org/viewLog.html?buildId=864903, seem ok.

;;;","07/Nov/17 15:04;ilantukh;Looks good.;;;","20/Nov/17 13:30;sboikov;[~zstan],

I looked at changes and don't understand how this is related to the attached NoQueueOnClientNodeTest.

Please explain what problem was and how it was fixed.

Also: did you add test which failed before the fix and started to pass after fix?

Thanks;;;","21/Nov/17 06:39;zstan;[~sboikov],
Test appended by me: testSrvReconnect is just little refactored NoQueueOnClientNodeTest.
Problem: if we create IgniteQueue on server node and after creation tries to access it by {code:java} queue = client.queue(queueName, 0, null) {code} we will fail. Appended test failed before fix and ok after.;;;","21/Nov/17 10:14;sboikov;[~zstan],

Thank you, merged into master.;;;","10/Dec/18 16:40;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/2779
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in checkpointer during topology change,IGNITE-6434,13103196,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,EdShangGG,EdShangGG,EdShangGG,19/Sep/17 09:17,22/Sep/17 13:20,14/Jul/23 06:20,22/Sep/17 13:19,2.1,,,,,2.3,,persistence,,,,0,,,,"{code}
2017-09-11 21:35:22.195 [ERROR][db-checkpoint-thread-#101%node1%][o.a.i.i.p.c.p.GridCacheDatabaseSharedManager] Runtime error caught during grid runnable execution: GridWorker [name=db-checkpoint-thread, igniteInstanceName=node1, finished=false, hashCode=1326137503, interrupted=false, runner=db-checkpoint-thread-#101%node1%]
java.lang.IllegalStateException: Failed to add new partition to the partitions state (no enough space reserved) [partId=459, reserved=459]
	at org.apache.ignite.internal.pagemem.wal.record.CacheState.addPartitionState(CacheState.java:50) ~[ignite-core-2.1.4.jar:2.1.4]
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager$Checkpointer.markCheckpointBegin(GridCacheDatabaseSharedManager.java:2189) ~[ignite-core-2.1.4.jar:2.1.4]
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager$Checkpointer.doCheckpoint(GridCacheDatabaseSharedManager.java:1954) ~[ignite-core-2.1.4.jar:2.1.4]
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager$Checkpointer.body(GridCacheDatabaseSharedManager.java:1879) ~[ignite-core-2.1.4.jar:2.1.4]
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110) ~[ignite-core-2.1.4.jar:2.1.4]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_121]
{code}

After checkpoint thread died.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 13:19:52 UTC 2017,,,,,,,,,,"0|i3k88f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 12:59;EdShangGG;PR
https://github.com/apache/ignite/pull/2718

Test
https://ci.ignite.apache.org/viewQueued.html?itemId=844316;;;","22/Sep/17 13:19;agoncharuk;Thanks, Eduard, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Web Console: ""Partition loss policy"" field is duplicated",IGNITE-6431,13103153,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,dkarachentsev,dkarachentsev,19/Sep/17 06:56,21/Sep/17 08:40,14/Jul/23 06:20,19/Sep/17 17:13,2.1,,,,,2.3,,wizards,,,,0,,,,"See attached screenshot. 
!web_console_part_loss.png|thumbnail!",,dkarachentsev,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 06:58;dkarachentsev;web_console_part_loss.png;https://issues.apache.org/jira/secure/attachment/12887839/web_console_part_loss.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 20 04:16:46 UTC 2017,,,,,,,,,,"0|i3k7z3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 09:40;vsisko;Removed duplicate field.
Fixed tooltip of stay field.;;;","19/Sep/17 17:13;kuaw26;Looks good. Merged to master. Please retest.;;;","20/Sep/17 04:16;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheGroupsMetricsRebalanceTest.testRebalanceEstimateFinishTime test fails periodically.,IGNITE-6430,13103024,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sharpler,agura,agura,18/Sep/17 18:28,26/Jun/18 17:50,14/Jul/23 06:20,15/May/18 11:56,,,,,,2.7,,,,,,0,MakeTeamcityGreenAgain,,,"{{CacheGroupsMetricsRebalanceTest.testRebalanceEstimateFinishTime}} test fails periodically.

{noformat}
[2017-09-18 15:18:20,073][ERROR][main][root] Test failed.
junit.framework.AssertionFailedError: Expected less 5000, Actual:-100969
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.TestCase.assertTrue(TestCase.java:192)
    at org.apache.ignite.internal.processors.cache.CacheGroupsMetricsRebalanceTest.testRebalanceEstimateFinishTime(CacheGroupsMetricsRebalanceTest.java:261)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
    at java.lang.Thread.run(Thread.java:745)
{noformat}

After fix test should be unmuted on TC.",,agura,alex_pl,DmitriyGovorukhin,dpavlov,githubbot,sharpler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 15 11:56:42 UTC 2018,,,,,,,,,,"0|i3k76n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/18 17:00;sharpler;[~agura]
I have tried to reproduce the bug locally.
The test fails for me on another line:
{code:java}
assertTrue(finishTime > 0);
{code}
It can fix a code similar to the code a bit above in the same test with a *waitForCondition* method.

After that I got an assertion on this line:
{code:java}
assertTrue((U.currentTimeMillis() - startTime) > 0);
{code}
It happens when *U.currentTimeMillis() == startTime*. So the fix is trivial.

After fixing both of this troubles the test works fine for me (70 times passed).

I will leave it for the night running in a loop and will inform about the result.

*UPD 1:*

Should be used *MILLISECONDS* at the line

{code:java}
assertTrue(finishRebalanceLatch.await(timeLeft + 2_000, TimeUnit.SECONDS));
{code};;;","26/Apr/18 08:33;sharpler;[~agura]

After fixes described in last comment the test works fine: passed without any problem over than 600 times locally and 120 times on TC.
See [TC result|https://ci.ignite.apache.org/viewLog.html?buildId=1246058&buildTypeId=IgniteTests24Java8_Cache3&tab=testsInfo].

Also, I took a look at the calculation of *getEstimatedRebalancingFinishTime*.
And in brief *finishTime* always not less than *U.currentTimeMillis()* at some point in time when it was set if it's not a *-1L*. So after fixes, the test can fail with the assertion from a task description only when rebalancing truly took a lot of time.

I will clean PR and will update status when it becomes ready for merge.;;;","10/May/18 11:58;alex_pl;[~sharpler], I've looked at your patch, changes looks good to me.;;;","10/May/18 12:56;sharpler;[~agura] [~dpavlov]
I have finished the task. Please review and merge if okay.
[~alex_pl]
Thanks for the review.
;;;","11/May/18 16:45;dpavlov;[~DmitriyGovorukhin], could you please take a look? I think you are more experienced than me in context of this test.;;;","15/May/18 10:30;DmitriyGovorukhin;[~dpavlov] Looks good for me, please merge.;;;","15/May/18 11:56;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3914
;;;","15/May/18 11:56;dpavlov;[~sharpler] thank you for your efforts, this will help Ignite community to make reliable automated test process.

[~DmitriyGovorukhin], thank you for review.

I've merged changed to master (probably will go to 2.6) ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timed out test IgnitePdsAtomicCacheRebalancingTest.testTopologyChangesWithConstantLoad,IGNITE-6428,13103005,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,dpavlov,dpavlov,18/Sep/17 17:09,19/Sep/17 12:32,14/Jul/23 06:20,19/Sep/17 12:32,2.1,,,,,2.3,,persistence,,,,0,MakeTeamcityGreenAgain,,,"IgnitePdsAtomicCacheRebalancingTest.testTopologyChangesWithConstantLoad
https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=7598445566789774358&tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E
Test was early fixed under following issues
https://issues.apache.org/jira/browse/IGNITE-5514
https://issues.apache.org/jira/browse/IGNITE-5692
 
But now it is still failed with:
{noformat}
[2017-09-18 00:19:02,892][ERROR][sys-stripe-22-#10154%persistence.IgnitePdsAtomicCacheRebalancingTest4%][GridCacheIoManager] Failed processing message [senderId=df3bec22-ebfb-4222-86d9-ab6117b00001, msg=GridDhtAtomicSingleUpdateRequest [key=KeyCacheObjectImpl [part=166, val=8358, hasValBytes=true], val=o.a.i.i.processors.cache.persistence.IgnitePdsCacheRebalancingAbstractTest$TestValue [idHash=595564816, hash=-2080068327, v1=866013082, v2=381254132], prevVal=null, super=GridDhtAtomicAbstractUpdateRequest [onRes=false, nearNodeId=52c634c0-6675-44eb-bf52-d2d0f0100000, nearFutId=588085, flags=hasRes]]]
class org.apache.ignite.internal.mem.IgniteOutOfMemoryException: Failed to find a page for eviction [segmentCapacity=2545, loaded=458, maxDirtyPages=640, dirtyPages=458, cpPages=0, pinnedInSegment=0, failedToPrepare=459]
	at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl$Segment.tryToFindSequentially(PageMemoryImpl.java:1893)
	at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl$Segment.evictPage(PageMemoryImpl.java:1817)
	at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl$Segment.access$600(PageMemoryImpl.java:1550)
	at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl.allocatePage(PageMemoryImpl.java:414)
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheOffheapManager$GridCacheDataStore$1.allocatePageNoReuse(GridCacheOffheapManager.java:925)
	at org.apache.ignite.internal.processors.cache.persistence.DataStructure.allocatePage(DataStructure.java:105)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.PagesList.addStripe(PagesList.java:416)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.PagesList.getPageForPut(PagesList.java:518)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.PagesList.put(PagesList.java:618)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.FreeListImpl$RemoveRowHandler.run(FreeListImpl.java:297)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.FreeListImpl$RemoveRowHandler.run(FreeListImpl.java:264)
	at org.apache.ignite.internal.processors.cache.persistence.tree.util.PageHandler.writePage(PageHandler.java:277)
	at org.apache.ignite.internal.processors.cache.persistence.DataStructure.write(DataStructure.java:223)
	at org.apache.ignite.internal.processors.cache.persistence.freelist.FreeListImpl.removeDataRowByLink(FreeListImpl.java:526)
	at org.apache.ignite.internal.processors.cache.persistence.RowStore.removeRow(RowStore.java:69)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.finishUpdate(IgniteCacheOffheapManagerImpl.java:1371)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:1209)
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheOffheapManager$GridCacheDataStore.invoke(GridCacheOffheapManager.java:1263)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:343)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:1693)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processDhtAtomicUpdateRequest(GridDhtAtomicCache.java:3220)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$600(GridDhtAtomicCache.java:130)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$7.apply(GridDhtAtomicCache.java:304)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$7.apply(GridDhtAtomicCache.java:299)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1060)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:579)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1555)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1183)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1090)
	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:505)
	at java.lang.Thread.run(Thread.java:745)
{noformat}
Most of runs locally test passes, but on TC it is stable failing, see test history.

Run after which test began to fail includes 16 changes: https://ci.ignite.apache.org/viewLog.html?buildId=772702&tab=buildChangesDiv&buildTypeId=Ignite20Tests_IgnitePdsIndexing

Default memory policy in this test is set to 100Mbytes, but in this test persistence is enabled.",,agoncharuk,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 19 12:32:40 UTC 2017,,,,,,,,,,"0|i3k72f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/17 09:24;dpavlov;Hi, [~agoncharuk], 

I have run experimental branch ignite-6428-max-size with enabled 150 MBytes default memory policy size (instead of 100). Test now not hanging, but still have flaky failures: please see 30 run results in https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgnitePdsIndexing&branch_Ignite20Tests=pull%2F2690%2Fhead&tab=buildTypeStatusDiv

I suggest to merge change from PR https://github.com/apache/ignite/pull/2690 and fix flaky failures coming next to this change.;;;","19/Sep/17 12:32;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Cache 5 suite has timed out with CacheLateAffinityAssignmentTest.testRandomOperations(),IGNITE-6427,13102984,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,dpavlov,dpavlov,18/Sep/17 15:40,19/Sep/17 12:33,14/Jul/23 06:20,19/Sep/17 12:33,,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"Ignite Cache 5 build has timed out with CacheLateAffinityAssignmentTest.testRandomOperations():
 
https://ci.ignite.apache.org/viewLog.html?buildId=834721&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache5
 
{noformat}
 [Step 4/5] [2017-09-17 22:41:23,619][INFO ][sys-#49767%client-9%][GridDhtPartitionsExchangeFuture] Finish exchange future [startVer=AffinityTopologyVersion [topVer=31, minorTopVer=0], resVer=AffinityTopologyVersion [topVer=31, minorTopVer=0], err=null]
[01:41:23]W:		 [org.apache.ignite:ignite-core] [2017-09-17 22:41:23,624][ERROR][sys-#49655%server-8%][GridDhtPartitionsExchangeFuture] Failed to notify listener: o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$5@56f46b92
[01:41:23]W:		 [org.apache.ignite:ignite-core] class org.apache.ignite.internal.mem.IgniteOutOfMemoryException: Not enough memory allocated (consider increasing memory policy size or enabling evictions) [policyName=default, size=104.9 MB]
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.pagemem.impl.PageMemoryNoStoreImpl.allocatePage(PageMemoryNoStoreImpl.java:292)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.allocateForTree(IgniteCacheOffheapManagerImpl.java:806)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.createCacheDataStore0(IgniteCacheOffheapManagerImpl.java:903)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.createCacheDataStore(IgniteCacheOffheapManagerImpl.java:885)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.<init>(GridDhtLocalPartition.java:205)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.createPartition(GridDhtPartitionTopologyImpl.java:724)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.createPartitions(GridDhtPartitionTopologyImpl.java:423)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.initPartitions0(GridDhtPartitionTopologyImpl.java:366)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.beforeExchange(GridDhtPartitionTopologyImpl.java:535)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.processFullMessage(GridDhtPartitionsExchangeFuture.java:2776)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.access$1400(GridDhtPartitionsExchangeFuture.java:116)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$5.apply(GridDhtPartitionsExchangeFuture.java:2524)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$5.apply(GridDhtPartitionsExchangeFuture.java:2512)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:352)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onReceiveFullMessage(GridDhtPartitionsExchangeFuture.java:2512)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1433)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1100(GridCachePartitionExchangeManager.java:131)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:334)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:332)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2626)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2605)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1060)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:579)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
[01:41:23]W:		 [org.apache.ignite:ignite-core] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
 
 
{noformat}
Issue is reproducible locally
",,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 16:45;dpavlov;lastStartedTest_CacheLateAffinityAssignmentTest.testRandomOperations.log.zip;https://issues.apache.org/jira/secure/attachment/12887695/lastStartedTest_CacheLateAffinityAssignmentTest.testRandomOperations.log.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 19 12:28:21 UTC 2017,,,,,,,,,,"0|i3k6xr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 15:51;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2686

    IGNITE-6427: IgniteOOME in Cache5 test: Increase memory policy size

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6427

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2686.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2686
    
----
commit 241a4dfd67a734f86a431d2071c6a3c1a36119a2
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-09-18T15:47:26Z

    IGNITE-6427: IgniteOOME in Cache5 test: Increase memory policy size

----
;;;","19/Sep/17 12:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2686
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PDS could be corrupted if partition have been evicted and owned again,IGNITE-6423,13102972,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,amashenkov,EdShangGG,EdShangGG,18/Sep/17 14:28,26/Dec/17 11:59,14/Jul/23 06:20,13/Dec/17 12:00,,,,,,2.4,,persistence,,,,0,,,,"So, what is going on? 
Partition had been changed, its pages had been put to checkpoint pages.
After it partition was evicted, checkpoint started.
We are allocating a page and because it's already in checkpoint we copy the empty page to copy it on disk.
If we restart right now we will read the empty page from disk. Therefore assertion error would be thrown etc.",,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6580,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 13 11:24:56 UTC 2017,,,,,,,,,,"0|i3k6v3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Nov/17 09:03;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/3115

    IGNITE-6423: PDS could be corrupted if partition have been evicted and owned again

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6423-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3115.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3115
    
----
commit 7cdcd2aa884aa4d0645bfb16004b3443b849d476
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-09-18T14:36:13Z

    ignite-6423 : Fixed outdated page handling.

commit a0b167c21acc1ddff228da9477c2c4e6043703fc
Author: Eduard Shangareev <eshangareev@gridgain.com>
Date:   2017-11-29T08:36:22Z

    IGNITE-6423 PDS could be corrupted if partition have been evicted and returned to node.

----
;;;","13/Dec/17 11:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3115
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In visorcmd ""cache on nodes"" statistics mixes together primary and backup entries",IGNITE-6422,13102963,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,ilyak,ilyak,18/Sep/17 14:02,10/Oct/17 10:42,14/Jul/23 06:20,02/Oct/17 16:09,2.3,,,,,2.3,,visor,,,,0,,,,"Suppose we have a cache, with 1000 entries, one backup and eviction after 500 entries. Then, off-heap entries are doubled in visorcmd, while on-heap entries are not:

{code}
+-----------------------------------------------------+
| Name(@)                     | EmployeesCache(@c0)   |
| Nodes                       | 2                     |
| Total size Min/Avg/Max      | 1500 / 1500.00 / 1500 |
|   Heap size Min/Avg/Max     | 500 / 500.00 / 500    |
|   Off-heap size Min/Avg/Max | 1000 / 1000.00 / 1000 |
+-----------------------------------------------------+

Nodes for: EmployeesCache(@c0)
+=============================================================================================================+
|      Node ID8(@), IP      | CPUs | Heap Used | CPU Load |   Up Time    |         Size         | Hi/Mi/Rd/Wr |
+=============================================================================================================+
| 37333BC6(@n0), 172.16.9.1 | 8    | 4.47 %    | 0.40 %   | 00:00:47:154 | Total: 1500          | Hi: 0       |
|                           |      |           |          |              |   Heap: 500          | Mi: 0       |
|                           |      |           |          |              |   Off-Heap: 1000     | Rd: 0       |
|                           |      |           |          |              |   Off-Heap Memory: 0 | Wr: 0       |
+---------------------------+------+-----------+----------+--------------+----------------------+-------------+
| 26FD4343(@n1), 172.16.9.1 | 8    | 3.09 %    | 0.23 %   | 00:00:41:602 | Total: 1500          | Hi: 0       |
|                           |      |           |          |              |   Heap: 500          | Mi: 0       |
|                           |      |           |          |              |   Off-Heap: 1000     | Rd: 0       |
|                           |      |           |          |              |   Off-Heap Memory: 0 | Wr: 0       |
+-------------------------------------------------------------------------------------------------------------+
'Hi' - Number of cache hits.
{code}

By contrast, on 1.9 it looks like this:
{code}
Cache 'EmployeesCache(@c0)':
+-----------------------------------------------------+
| Name(@)                     | EmployeesCache(@c0)   |
| Nodes                       | 2                     |
| Total size Min/Avg/Max      | 1000 / 1000.00 / 1000 |
|   Heap size Min/Avg/Max     | 500 / 500.00 / 500    |
|   Off-heap size Min/Avg/Max | 500 / 500.00 / 500    |
+-----------------------------------------------------+

Nodes for: EmployeesCache(@c0)
+================================================================================================================+
|      Node ID8(@), IP      | CPUs | Heap Used | CPU Load |   Up Time    |          Size           | Hi/Mi/Rd/Wr |
+================================================================================================================+
| 3229FABE(@n0), 172.16.9.1 | 8    | 1.25 %    | 0.23 %   | 00:00:43:111 | Total: 1000             | Hi: 0       |
|                           |      |           |          |              |   Heap: 500             | Mi: 0       |
|                           |      |           |          |              |   Off-Heap: 500         | Rd: 0       |
|                           |      |           |          |              |   Off-Heap Memory: 88kb | Wr: 0       |
+---------------------------+------+-----------+----------+--------------+-------------------------+-------------+
| 58FA742B(@n1), 172.16.9.1 | 8    | 1.15 %    | 0.47 %   | 00:00:38:828 | Total: 1000             | Hi: 0       |
|                           |      |           |          |              |   Heap: 500             | Mi: 0       |
|                           |      |           |          |              |   Off-Heap: 500         | Rd: 0       |
|                           |      |           |          |              |   Off-Heap Memory: 88kb | Wr: 0       |
+----------------------------------------------------------------------------------------------------------------+
{code}

NB: It might be feasible to keep number of backup entries displayed in visorcmd, but without adding them up with primary entries. Another dedicated line perhaps? Should also probably be consistent with other memory kinds.",,ilyak,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6131,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 10 10:42:29 UTC 2017,,,,,,,,,,"0|i3k6t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/17 08:16;vsisko;Fixed showing of key count to show primary key.

To test: 
# Cache selection for clear, scan, stop, reset.
# Result table for all caches.
# Reslut table for cache by nodes.;;;","27/Sep/17 16:16;ilyak;Looks OK to me!;;;","02/Oct/17 16:09;kuaw26;Looks good for me. Merged to master.;;;","02/Oct/17 16:09;kuaw26;[~pkonstantinov] Please retest;;;","10/Oct/17 10:42;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missed binary type configuration in VisorGridConfiguration.,IGNITE-6417,13102883,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,vsisko,vsisko,18/Sep/17 07:04,18/Sep/17 07:11,14/Jul/23 06:20,18/Sep/17 07:11,2.1,,,,,2.3,,wizards,,,,0,,,,,,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 07:11:12 UTC 2017,,,,,,,,,,"0|i3k6bb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 07:11;kuaw26;Fix looks good for me.
Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failures in .NET test suite,IGNITE-6404,13102610,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,vozerov,vozerov,15/Sep/17 16:07,18/Sep/17 10:10,14/Jul/23 06:20,18/Sep/17 10:10,,,,,,2.3,,platforms,,,,0,.NET,,,"A kind of NPE. Affected tests:
{code}
ConsoleRedirectTest.TestStartupJavaError 	
ExceptionsTest.TestExceptions 	
ExceptionsTest.TestInvalidSpringUrl 	
LifecycleTest.TestError 	
MarshallerTest.TestInvalidMarshaller 
CustomLoggerTest.TestStartupDotNetError 	
CustomLoggerTest.TestStartupJavaError 
{code}",,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 10:07:53 UTC 2017,,,,,,,,,,"0|i3k4nz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Sep/17 14:21;vozerov;We need to unmute the tests when fixed.;;;","18/Sep/17 10:07;ptupitsyn;Merged to master: {{22002141a1d594556f1b72fa0dd139ab0a1414aa}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteSqlNotNullConstraintTest.testTransactionalAddColumnNotNullCheckDmlInsertValues fails periodically,IGNITE-6403,13102608,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,15/Sep/17 15:57,18/Sep/17 20:12,14/Jul/23 06:20,18/Sep/17 20:12,,,,,,2.3,,sql,,,,0,,,,"Looks like we have a bug in {{ALTER TABLE}} - column is not visible after command is completed:
{code}
Caused by: org.h2.jdbc.JdbcSQLException: Column ""NAME"" not found; SQL statement:
INSERT INTO test(id, name, age) VALUES (1, 'ok', 1), (2, NULLIF('a', 'a'), 2), (3, 'ok', 3) [42122-195]
{code}",,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 20:12:42 UTC 2017,,,,,,,,,,"0|i3k4nj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Sep/17 07:59;vozerov;[~al.psc], [~skalashnikov], I debugged the problem.

{{IgniteSqlNotNullConstraintTest}} performs all SQL operations against client node. And our DDL engine doesn't wait for clients to respond before completing client future. For this reason, by the time client is notified about successfull completion, it might not have applied changes yet. {{CREATE TABLE}} is not affected by this problem because we have special re-try logic for this. But {{ALTER TABLE}} is affected. I think {{CREATE INDEX}} is also broken.

When I changed the test so that SQL is executed on server nodes, everything works fine.;;;","17/Sep/17 08:08;vozerov;May be we can just wait for local client futures. Need to investigate this further.;;;","18/Sep/17 18:31;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2688

    IGNITE-6403 SchemaOperationManager fix

    …tiated operation.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6403

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2688.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2688
    
----
commit 6a95a845056e7d509ad3fcf78738f1d59f7cc892
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-09-18T18:04:57Z

    IGNITE-6403 SchemaOperationManager always waits for node that has initiated operation.

----
;;;","18/Sep/17 18:44;vozerov;[~al.psc], the fix is incorrect, unfortunately. Please change target test as follows to see that it still fails:
{code}
    public void testTransactionalAddColumnNotNullCheckDmlInsertValues() throws Exception {
        while (true) {
            checkAddColumnNotNullCheckDmlInsertValues(CacheAtomicityMode.TRANSACTIONAL);

            afterTest();
            beforeTest();
        }
    }
{code};;;","18/Sep/17 18:47;vozerov;[~al.psc], root cause of the problem is that client nodes receive custom discovery messages asynchronously. For this reason server node may complete operations and notify the client before changes are appled to client schema. As a result, we complete operations before local H2 is ready. To fix the problem we should do the following:
1) Client future must consist of two parts - server part and local part.
2) Server part is completed in the same way it is implemented now.
3) Client part is completed when changes are applied on the client.;;;","18/Sep/17 18:58;vozerov;[~al.psc], please disregard my previous message, it is wrong. As far as I see we complete client future when {{SchemaFinishDiscoveryMessage}} is received. At this point all necessary changes should alread by applied to the client as message ordering is guaranteed, and se should have received relevant {{SchemaProposeDiscoveryMessage}} at this point.;;;","18/Sep/17 19:08;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2691

    IGNITE-6403

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6403-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2691.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2691
    
----
commit 9520f465c534cbd95d72ec0a3ae45b914efd047d
Author: devozerov <ppozerov@gmail.com>
Date:   2017-09-18T19:07:53Z

    Attempt to fix.

----
;;;","18/Sep/17 20:11;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/2691
;;;","18/Sep/17 20:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2688
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Thin client: basic cache operations,IGNITE-6397,13102557,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,vozerov,vozerov,15/Sep/17 12:39,09/Oct/17 14:36,14/Jul/23 06:20,09/Oct/17 14:36,,,,,,2.3,,clients,platforms,,,0,.NET,,,"We need to implement base cache operations, such as ""remove"", ""replace"", ""putIfAbsent"". ",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6337,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 09 14:36:09 UTC 2017,,,,,,,,,,"0|i3k4c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 13:22;ptupitsyn;Proposed method set:
{code}
        bool ContainsKey(TK key);
        bool ContainsKeys(IEnumerable<TK> keys);
        bool TryGet(TK key, out TV value);
        ICollection<ICacheEntry<TK, TV>> GetAll(IEnumerable<TK> keys);
        CacheResult<TV> GetAndPut(TK key, TV val);
        CacheResult<TV> GetAndReplace(TK key, TV val);
        CacheResult<TV> GetAndRemove(TK key);
        bool PutIfAbsent(TK key, TV val);
        CacheResult<TV> GetAndPutIfAbsent(TK key, TV val);
        bool Replace(TK key, TV val);
        bool Replace(TK key, TV oldVal, TV newVal);
        void PutAll(IEnumerable<KeyValuePair<TK, TV>> vals);
        void Clear();
        void Clear(TK key);
        void ClearAll(IEnumerable<TK> keys);
        bool Remove(TK key);
        bool Remove(TK key, TV val);
        void RemoveAll(IEnumerable<TK> keys);
        void RemoveAll();
        int GetSize(params CachePeekMode[] modes);

{code};;;","21/Sep/17 16:27;ptupitsyn;All done except {{RemoveAll}}.;;;","22/Sep/17 08:53;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2725

    IGNITE-6397 .NET: Thin client: basic cache operations

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6397

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2725.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2725
    
----
commit 198f844473b6a54927b8aacaefe3181e8059e0bf
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-22T08:50:54Z

    IGNITE-6397 .NET: Thin client: basic cache operations

----
;;;","22/Sep/17 10:23;ptupitsyn;All done, [~vozerov] please have a look.;;;","09/Oct/17 10:45;vozerov;[~ptupitsyn], my comments:
1) Shouldn't {{ClientCacheKeyRequest}} be declared abstract?
2) {{ClientCacheKeySetRequest}} should be renamed to {{ClientCacheKeysRequest}}
3) {{ClientCacheKeySetRequest}} cannot use set as key order might be important. It should use list.
4) {{ClientCacheKeyValRequest}} should be renamed to {{ClientCacheKeyValueRequest}}
5) {{ClientCacheGetSizeRequest}} - I would not encode peek modes into single value for the sake of simplicity. Let's just send them one by one
6) {{ClientCachePutAllRequest}} - {{LinkedHashMap}} should be used
7) {{ClientCacheRemoveRequest}} should be renamed to {{ClientCacheRemoveKeyRequest}} to be consistent with other class names
8) Lets rename {{2}} to {{IfEquals}}: {{ClientCacheRemoveIfEqualsRequest}}, {{ClientCacheReplaceIfEqualsRequest}}
9) {{ClientCacheGetSizeRequest}} should return {{long}}, not {{int}};;;","09/Oct/17 12:17;ptupitsyn;[~vozerov]

3) Changed to {{LinkedHashSet}}. {{List}} is not an option, all the related APIs (e.g. {{GetAll}}) require {{Set}}.
Everything else fixed.;;;","09/Oct/17 14:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2725
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SQL: Support SQLSTATE error code for ""NOT NULL"" constraint",IGNITE-6396,13102541,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,vozerov,vozerov,15/Sep/17 11:26,18/Sep/17 11:57,14/Jul/23 06:20,18/Sep/17 11:57,2.3,,,,,2.3,,sql,,,,0,,,,Respective SQLSTATE: 20004.,,githubbot,skalashnikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5620,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 11:56:29 UTC 2017,,,,,,,,,,"0|i3k48n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 09:25;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/2681

    IGNITE-6396: Added test for SQL state error code for NOT NULL violation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6396

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2681.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2681
    
----
commit 01a39a396574678c4199f7711757c7cea9220b07
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-09-18T09:23:36Z

    IGNITE-6396: Added test for error code for NOT NULL violation

----
;;;","18/Sep/17 09:29;skalashnikov;Correct code is 22004 and it is already provided in the error for NOT NULL case. Thus, I only added a test {{JdbcErrorsSelfTest.testNotNullViolation}}.;;;","18/Sep/17 11:56;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2681
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Uncomment JdbcThinStatementSelfTest.testCloseOnCompletion,IGNITE-6395,13102540,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,15/Sep/17 11:25,15/Sep/17 14:27,14/Jul/23 06:20,15/Sep/17 14:27,2.3,,,,,2.3,,jdbc,,,,0,,,,,,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 14:27:36 UTC 2017,,,,,,,,,,"0|i3k48f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 14:04;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2673

    IGNITE-6395: remove old test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6395

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2673.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2673
    
----
commit 0d466f4ff8c5af18b6bb6fde9c0b3b148523bf5d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-15T14:03:50Z

    IGNITE-6395: remove old test

----
;;;","15/Sep/17 14:07;tledkov-gridgain;I propose to remove the old test {{testCloseOnCompletion}} because there are two new tests {{testCloseOnCompletionAfterQuery, testCloseOnCompletionBeforeQuery}} that cover {{CloseOnCompletion}} functionality and separately duplicated the logic of the old test.

[~vozerov], please review the patch;;;","15/Sep/17 14:27;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2673
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't create off-heap matrix with size over 2 Gb (int overflow in DenseOffHeapMatrixStorage.allocateMemory),IGNITE-6394,13102539,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,oignatenko,oignatenko,15/Sep/17 11:24,15/Sep/17 14:24,14/Jul/23 06:20,15/Sep/17 14:24,,,,,,2.3,,ml,,,,0,,,,"In order to reproduce, try to create off-heap matrix with size larger than 2Gb, eg like this:

{code}new DenseLocalOffHeapMatrix(17_000, 17_000){code}

Above fails:
{noformat}
java.lang.IllegalArgumentException: null
        at sun.misc.Unsafe.allocateMemory(Native Method)
        at org.apache.ignite.internal.util.GridUnsafe.allocateMemory(GridUnsafe.java:1068)
        at org.apache.ignite.ml.math.impls.storage.matrix.DenseOffHeapMatrixStorage.allocateMemory(DenseOffHeapMatrixStorage.java:219)
        ...
{noformat}

(you may need to allow Java get more than 2Gb off-heap memory for that with VM argument like {{-XX:MaxDirectMemorySize=1000g}})

The reason for failure is that int arguments aren't converted to long prior to multiplying in {{DenseOffHeapMatrixStorage.allocateMemory}}:

{code}ptr = GridUnsafe.allocateMemory(rows * cols * Double.BYTES);{code}",,chief,githubbot,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 14:24:54 UTC 2017,,,,,,,,,,"0|i3k487:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Sep/17 12:10;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/2671

    IGNITE-6394: Can't create off-heap matrix with size over 2 Gb

    Fixed int overflow.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6394

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2671.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2671
    
----
commit c0b5f9f7a83f110cf2036a3e654690929797d199
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-09-15T11:40:54Z

    IGNITE-6394: Can't create off-heap matrix with size over 2 Gb (int overflow in DenseOffHeapMatrixStorage.allocateMemory)
    Fixed.

----
;;;","15/Sep/17 14:23;githubbot;Github user ybabak closed the pull request at:

    https://github.com/apache/ignite/pull/2671
;;;","15/Sep/17 14:24;chief;merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC thin driver: JdbcThinTcpIo.srvProtocolVer is not used,IGNITE-6391,13102536,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,15/Sep/17 11:23,18/Sep/17 18:39,14/Jul/23 06:20,18/Sep/17 18:39,2.3,,,,,2.3,,jdbc,,,,0,,,,Need to understand why it is so.,,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 18:39:32 UTC 2017,,,,,,,,,,"0|i3k47j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 14:24;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2684

    IGNITE-6391 JDBC thin driver: remove unused JdbcThinTcpIo.srvProtocolVer

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6391

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2684.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2684
    
----
commit 654b456957acde951a910450f5c8eb8ccefecad0
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-18T14:24:10Z

    IGNITE-6391 JDBC thin driver: remove unused JdbcThinTcpIo.srvProtocolVer

----
;;;","18/Sep/17 14:40;tledkov-gridgain;The unused member {{srvProtocolVer}} is removed.
[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2684%2Fhead] are OK.
[~vozerov], please review the patch.;;;","18/Sep/17 18:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2684
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Offheap page eviction doesn't work if data is loaded without data streamer,IGNITE-6385,13102278,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ivan.glukos,ivan.glukos,ivan.glukos,14/Sep/17 15:00,18/Sep/17 09:40,14/Jul/23 06:20,18/Sep/17 09:40,2.3,,,,,2.3,,,,,,0,,,,Page eviction was broken by recent optimizations from IGNITE-5658. We can allocate data pages if there are empty pages in separate stripe of free list bucket.,,agoncharuk,githubbot,gvvinblade,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 09:40:32 UTC 2017,,,,,,,,,,"0|i3k2lz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/17 15:04;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/2666

    IGNITE-6385 Offheap page eviction doesn't work if data is loaded without data streamer

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6385

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2666.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2666
    
----
commit be389f378bc12a1aa9264799eebaa2551741448d
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-09-14T15:02:12Z

    IGNITE-6385 Offheap page eviction doesn't work if data is loaded without data streamer

----
;;;","14/Sep/17 15:08;ivan.glukos;Please, review.
TC run: https://ci.ignite.apache.org/viewQueued.html?itemId=829651;;;","14/Sep/17 15:14;gvvinblade;[~ivan.glukos], looks fine to me.;;;","18/Sep/17 08:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2666
;;;","18/Sep/17 09:40;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CREATE TABLE affinityKey parameter doesn't work as expected,IGNITE-6375,13102083,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,dmagda,dmagda,13/Sep/17 22:21,28/Sep/17 08:03,14/Jul/23 06:20,28/Sep/17 08:01,2.1,,,,,2.3,,sql,,,,0,,,,"Start a couple of cluster nodes and preload the data using SQLLine tool and an SQL script as described here:
https://github.com/dmagda/ignite_world_demo

The SQL tables are couple by affinity principle, check the script. However, when I try to execute this query with a JOIN
{code}
SELECT country.name, city.name, MAX(city.population) as max_pop FROM country
    JOIN city ON city.countrycode = country.code
    WHERE country.code IN ('USA','RUS','CHN')
    GROUP BY country.name, city.name ORDER BY max_pop DESC LIMIT 3
{code}

then get a wrong result
{noformat}
United States New York 8008278
United States Los Angeles 3694820
United States Chicago 2896016
{noformat}

The correct result is the following:
{noformat}
China Shanghai 9696300
Russian Federation Moscow 8389200
United States New York 8008278
{noformat}

But you have to force {{non-collocated}} joins to get it. 

All this means that {{affinityKey}} parameter of CREATE TABLE doesn't work properly or there is an issue with DML.",,dmagda,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 28 08:03:05 UTC 2017,,,,,,,,,,"0|i3k1f3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/17 06:57;vozerov;[~dmagda], confirming. DDL part is fine - affinity key field name is passed to cache configuration. However, for some reason it is not interpreted by cache correctly. ;;;","14/Sep/17 08:34;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2660

    IGNITE-6375

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6375

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2660.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2660
    
----
commit 77b7c98202c1ab9e476610b262b2bd999a2186b5
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-14T08:32:02Z

    Better affinity collocation for CREATE TABLE.

----
;;;","28/Sep/17 06:41;vozerov;New test run: https://ci.ignite.apache.org/viewQueued.html?itemId=858531&tab=queuedBuildOverviewTab;;;","28/Sep/17 07:34;vozerov;To runs to go: 
https://ci.ignite.apache.org/viewLog.html?buildId=858527&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteQueries2
https://ci.ignite.apache.org/viewLog.html?buildId=858532&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgnitePlatformNet;;;","28/Sep/17 08:03;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2660
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console SQL doesn't work with 2.2.0 RC1,IGNITE-6374,13102078,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,pkonstantinov,dmagda,dmagda,13/Sep/17 21:49,02/Nov/17 20:17,14/Jul/23 06:20,02/Oct/17 09:22,2.2,,,,,2.3,,wizards,,,,0,important,,,"Start a couple of nodes using 2.2.0-rc1 binary bundle:

{code}
./ignite.sh ../examples/config/example-ignite.xml
{code}

Preload data using SQLLine tool and the SQL script as described here:
https://github.com/dmagda/ignite_world_demo

Go to Web Console SQL tab and send the simplest query possible:
{code}
select * from city
{code}

To get the exception like that:
{code}
[14:42:33,440][SEVERE][rest-#54%null%][GridTaskCommandHandler] Failed to execute task [name=o.a.i.i.v.compute.VisorGatewayTask, clientId=null]
class org.apache.ignite.IgniteCheckedException: Failed to find constructor for task argument [taskName=org.apache.ignite.internal.visor.query.VisorQueryTask, argsCnt=8, args=[SQL_PUBLIC_CITY, select * from city, false, false, false, false, 100, false]]
	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7229)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.resolve(GridFutureAdapter.java:258)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:170)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:139)
	at org.apache.ignite.internal.processors.rest.handlers.task.GridTaskCommandHandler$2.apply(GridTaskCommandHandler.java:263)
	at org.apache.ignite.internal.processors.rest.handlers.task.GridTaskCommandHandler$2.apply(GridTaskCommandHandler.java:257)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:352)
	at org.apache.ignite.internal.processors.rest.handlers.task.GridTaskCommandHandler.handleAsyncUnsafe(GridTaskCommandHandler.java:257)
	at org.apache.ignite.internal.processors.rest.handlers.task.GridTaskCommandHandler.handleAsync(GridTaskCommandHandler.java:163)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor.handleRequest(GridRestProcessor.java:268)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor.access$100(GridRestProcessor.java:91)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor$2.body(GridRestProcessor.java:157)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Failed to find constructor for task argument [taskName=org.apache.ignite.internal.visor.query.VisorQueryTask, argsCnt=8, args=[SQL_PUBLIC_CITY, select * from city, false, false, false, false, 100, false]]
	at org.apache.ignite.internal.visor.compute.VisorGatewayTask$VisorGatewayJob.execute(VisorGatewayTask.java:400)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6608)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1115)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.sendRequest(GridTaskWorker.java:1385)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.processMappedJobs(GridTaskWorker.java:640)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.body(GridTaskWorker.java:532)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:749)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:505)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:485)
	at org.apache.ignite.internal.processors.rest.handlers.task.GridTaskCommandHandler.handleAsyncUnsafe(GridTaskCommandHandler.java:227)
	... 8 more
{code}",,dmagda,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 02 09:22:41 UTC 2017,,,,,,,,,,"0|i3k1dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 07:46;kuaw26;Please test ignite-2.2.0 + Web Console ""Queries"" screen.;;;","02/Oct/17 09:22;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Restrict log search by IGNITE_HOME,IGNITE-6367,13101939,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,kuaw26,kuaw26,13/Sep/17 12:10,20/Sep/17 02:15,14/Jul/23 06:20,15/Sep/17 04:53,,,,,,2.3,,,,,,0,,,,,,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 08:21:27 UTC 2017,,,,,,,,,,"0|i3k0l3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/17 04:21;kuaw26;Please test in branch ignite-6367.

Following scenarios:
1) Search with relative paths.
2) Search with absolute paths.
3) Search with relative paths + folders that located outside of IGNITE_HOME but configured as symlinks.
4) Test 1-3 under Win/Linux/Mac.
;;;","15/Sep/17 04:53;kuaw26;Pushed to master. Please retest.;;;","18/Sep/17 08:21;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Add refresh SVG icon to icon set,IGNITE-6363,13101850,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,vsisko,vsisko,13/Sep/17 03:44,13/Sep/17 06:47,14/Jul/23 06:20,13/Sep/17 06:47,2.1,,,,,2.3,,wizards,,,,0,,,,,,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 13 06:47:31 UTC 2017,,,,,,,,,,"0|i3k01j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 03:49;vsisko;Added refresh icon.;;;","13/Sep/17 06:47;kuaw26;Looks good. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in Log4J2Logger,IGNITE-6362,13101821,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,alexey.tank2,vkulichenko,vkulichenko,13/Sep/17 00:17,16/Oct/17 12:58,14/Jul/23 06:20,16/Oct/17 12:57,2.1,,,,,2.4,,general,,,,0,,,,"When I start a node with {{Log4J2Logger}} configured and verbose mode ({{-DIGNITE_QUIET=false}}, it fails with NPE:
{noformat}
Caused by: java.lang.NullPointerException
	at org.apache.logging.log4j.core.config.LoggerConfig.<init>(LoggerConfig.java:145)
	at org.apache.logging.log4j.core.config.LoggerConfig.createLogger(LoggerConfig.java:523)
	at org.apache.ignite.logger.log4j2.Log4J2Logger.createConsoleLogger(Log4J2Logger.java:380)
	at org.apache.ignite.logger.log4j2.Log4J2Logger.addConsoleAppenderIfNeeded(Log4J2Logger.java:338)
	at org.apache.ignite.logger.log4j2.Log4J2Logger.<init>(Log4J2Logger.java:145)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:142)
	... 34 more
{noformat}

This is caused by the fact that {{Log4J2Logger#createConsoleLogger}} method invokes {{LoggerConfig.createLogger}} providing {{null}} as {{Configuration}} object, which unconditionally causes NPE. Need to provide some default configuration instead.",,alexey.tank2,githubbot,ntikhonov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 16 12:58:46 UTC 2017,,,,,,,,,,"0|i3jzv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/17 07:35;githubbot;GitHub user apopovgg opened a pull request:

    https://github.com/apache/ignite/pull/2804

    IGNITE-6362: NPE in Log4J2Logger

    1. There was an issue inside Log4J2Logger.createConsoleLogger(). null was passed instead of LoggerContext during ad-hoc logger creation via LoggerConfig.createLogger()
    2. There were issues with unit tests:
    Log4J2Logger holds context (static) for all logger instances and it is not expected to re-configure it on the fly. That was the issue to run tests one-by-one with different log configuration. A new method Log4J2Logger.cleanup() was implemented to terminate the Log4J logger context.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6362

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2804.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2804
    
----
commit 7f3fed9f83b252a6d723f9e76ea4d9a9221629ed
Author: apopov <tank2.alex@gmail.com>
Date:   2017-10-05T07:19:46Z

    IGNITE-6362: NPE in Log4J2Logger

----
;;;","05/Oct/17 09:12;alexey.tank2;[~ntikhonov@apache.org] Please review my changes;;;","05/Oct/17 10:15;ntikhonov;[~alexey.tank2],
Thank you for your contribution! I've looked at your changes and have the following minor comments:
* Why did you add Depricated annotation on tests?
* It looks that we missed suite for log4j2 on TC. Let's to recovery it.;;;","05/Oct/17 12:21;alexey.tank2;[~ntikhonov@apache.org]
I've looked through the all test classes and found that 3 of them are already included in Log4j2LoggerSelfTest() as test methods.
I added Depricated annotation for these classes to avoid extra test execution in future. Probably I should delete them at all.

Ok. I'll add log4j2 to TC suite.
;;;","05/Oct/17 12:34;ntikhonov;[~alexey.tank2],
If we already tested this cases then this tests should be removed. I don't see any profit, only waste CPU.;;;","10/Oct/17 09:06;alexey.tank2;[~ntikhonov@apache.org] Please review commits;
https://github.com/apache/ignite/pull/2804/commits/8366bd3435057fa9b2afbf060f73471d22df56c9
where all depricated test cases are removed
and 
https://github.com/apache/ignite/pull/2804/commits/3d54a862fc9816d638dcb3dd52e5f08ce71ba444
where test case was adopted for TeamCity. TeamCity does not allow test to work with System.out stream (it intercepts out), so only System.err output is verified now.;;;","11/Oct/17 15:11;githubbot;Github user apopovgg closed the pull request at:

    https://github.com/apache/ignite/pull/2804
;;;","11/Oct/17 15:22;githubbot;GitHub user apopovgg opened a pull request:

    https://github.com/apache/ignite/pull/2833

    IGNITE-6362 NPE in Log4J2Logger

    Please review it

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6362

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2833.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2833
    
----
commit 0559a4c128b51cf6c05b2c166a7b67bace51e166
Author: apopov <tank2.alex@gmail.com>
Date:   2017-10-11T15:17:04Z

    IGNITE-6362 NPE in Log4J2Logger

----
;;;","11/Oct/17 15:31;alexey.tank2;More changes were done:
1. FIxed issue with incorrect logger reconfiguration that leads to race conditions (at {{setNodeId()}}, {{getLogger()}}) for console appender and results in the wrong logger configuration.
2. Removed a hack=workaround of race conditions {{private Logger consoleLog}} and its usage
3. fixed console appender creation as it provided at samples from http://logging.apache.org/log4j/2.x/manual/customconfig.html
4. Removed old test cases;;;","11/Oct/17 15:32;alexey.tank2;[~ntikhonov@apache.org] please review;;;","16/Oct/17 12:57;ntikhonov;[~alexey.tank2],
Thank for you contribution! Looks good to me. I've merged to master.;;;","16/Oct/17 12:58;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2833
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE occurs if object with null indexed field is added,IGNITE-6360,13101690,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,mcherkasov,mcherkasov,12/Sep/17 15:46,27/Sep/17 10:43,14/Jul/23 06:20,27/Sep/17 10:43,2.3,,,,,2.3,,general,,,,0,,,,,NPE occurs if object with null indexed field is added,githubbot,gvvinblade,mcherkasov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5918,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 27 10:43:56 UTC 2017,,,,,,,,,,"0|i3jz2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Sep/17 10:59;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/2739

    IGNITE-6360: NPE occurs if object with null indexed field is added

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6360

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2739.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2739
    
----
commit 905312c6e40504cba58328849cbfaa1277b8378d
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-09-25T10:58:26Z

    IGNITE-6360: NPE occurs if object with null indexed field is added

----
;;;","26/Sep/17 11:22;mcherkasov;IGNITE-5918 introduced a bug that is fixed by this one.;;;","26/Sep/17 14:43;mcherkasov;https://github.com/apache/ignite/pull/2739/files;;;","27/Sep/17 08:28;gvvinblade;[~mcherkasov], looks OK to me.;;;","27/Sep/17 10:41;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2739
;;;","27/Sep/17 10:43;mcherkasov;https://github.com/apache/ignite/commit/2929acef591a6309438cd46e11751bf86a11bf8b;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Signed overflow when reading partition greater than Short.MAX_VALUE,IGNITE-6356,13101656,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,12/Sep/17 13:47,13/Sep/17 10:47,14/Jul/23 06:20,13/Sep/17 10:43,2.0,,,,,2.3,,cache,,,,0,,,,"When starting a cache with the number of partitions greater than 32768, the following error is observed:

{code}
Caused by: java.lang.IndexOutOfBoundsException: bitIndex < 0: -98295
	at java.util.BitSet.get(BitSet.java:623)
	at org.apache.ignite.internal.util.GridPartitionStateMap.state(GridPartitionStateMap.java:200)
	at org.apache.ignite.internal.util.GridPartitionStateMap.setState(GridPartitionStateMap.java:173)
	at org.apache.ignite.internal.util.GridPartitionStateMap.put(GridPartitionStateMap.java:148)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap.put(GridDhtPartitionMap.java:137)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap.readExternal(GridDhtPartitionMap.java:301)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectInputStream.readExternalizable(OptimizedObjectInputStream.java:523)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.read(OptimizedClassDescriptor.java:917)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:324)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:367)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedMarshaller.unmarshal0(OptimizedMarshaller.java:227)
{code}",,agoncharuk,ainozemtsev,krybakova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6347,,IGNITE-6347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 13 10:43:54 UTC 2017,,,,,,,,,,"0|i3jyvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 13:50;agoncharuk;The reason is the following code in GridDhtPartitionMap.java:
{code}
        for (int i = 0; i < size; i++) {
            int ordinal = in.readByte();
            int part = in.readShort();
{code}
which leads to a negative parititon ID.;;;","13/Sep/17 07:15;ainozemtsev;[~agoncharuk] - this ticket duplicates https://issues.apache.org/jira/browse/IGNITE-6347;;;","13/Sep/17 10:42;agoncharuk;[~ainozemtsev] The fix in IGNITE-6347 is incomplete - there is no test added and the max partition number is not corrected. I will close it when my fix is merged.;;;","13/Sep/17 10:43;agoncharuk;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Calculating cache size during cache stop sporadically fails with ClusterGroupEmptyCheckedException,IGNITE-6355,13101650,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ivan.glukos,ivan.glukos,ivan.glukos,12/Sep/17 13:30,20/Sep/17 09:49,14/Jul/23 06:20,20/Sep/17 09:49,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"Example stacktrace:
{noformat}
[16:21:06,343][ERROR][main][root] Test failed.
javax.cache.CacheException: class org.apache.ignite.cluster.ClusterGroupEmptyException: Topology projection is empty.
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1327)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.cacheException(IgniteCacheProxyImpl.java:1672)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.size(IgniteCacheProxyImpl.java:762)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.size(GatewayProtectedCacheProxy.java:508)
	at org.gridgain.grid.internal.processors.cache.database.IgniteDbSnapshotSelfTest.testReuseCacheProxyAfterRestore(IgniteDbSnapshotSelfTest.java:1793)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.cluster.ClusterGroupEmptyException: Topology projection is empty.
	at org.apache.ignite.internal.util.IgniteUtils$6.apply(IgniteUtils.java:823)
	at org.apache.ignite.internal.util.IgniteUtils$6.apply(IgniteUtils.java:821)
	... 14 more
Caused by: class org.apache.ignite.internal.cluster.ClusterGroupEmptyCheckedException: Topology projection is empty.
	at org.apache.ignite.internal.processors.task.GridTaskWorker.getTaskTopology(GridTaskWorker.java:665)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.body(GridTaskWorker.java:500)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:758)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:454)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:410)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.sizeAsync(GridCacheAdapter.java:3747)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.size(GridCacheAdapter.java:3704)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.size(IgniteCacheProxyImpl.java:759)
	... 11 more
{noformat}
Data race stems from here (GridCacheAdapter#sizeAsync):
{noformat}
        Group grp = modes.near ? cluster.forCacheNodes(name(), true, true, false) : cluster.forDataNodes(name());

        Collection<ClusterNode> nodes = grp.nodes();

        if (nodes.isEmpty())
            return new GridFinishedFuture<>(0);

        ctx.kernalContext().task().setThreadContext(TC_SUBGRID, nodes);

        return ctx.kernalContext().task().execute(
            new SizeTask(ctx.name(), ctx.affinity().affinityTopologyVersion(), peekModes), null);
{noformat}
Method grp.nodes() returns PredicateCollectionView, which size depends on Ignite state. It can pass nodes.isEmpty() check and become empty later.",,githubbot,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6452,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 20 09:49:15 UTC 2017,,,,,,,,,,"0|i3jytz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 15:42;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/2647

    IGNITE-6355 Calculating cache size during cache stop sporadically fails with ClusterGroupEmptyCheckedException

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6355

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2647.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2647
    
----
commit 0ca879173e9c7b58f313bddc85b0684faf8b6307
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-09-12T15:40:15Z

    IGNITE-6355 Calculating cache size during cache stop sporadically fails with ClusterGroupEmptyCheckedException

----
;;;","12/Sep/17 15:47;ivan.glukos;Please, review.;;;","18/Sep/17 12:30;EdShangGG;Looks good for me.;;;","18/Sep/17 14:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2647
;;;","18/Sep/17 14:59;ivan.glukos;Returning ticket back to development as per another data race is found.;;;","20/Sep/17 09:49;ivan.glukos;Previous fix is already merged to master. Development will be continued under IGNITE-6452.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: DataStreamer does not work with complex object graphs,IGNITE-6354,13101634,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,12/Sep/17 12:51,12/Sep/17 14:43,14/Jul/23 06:20,12/Sep/17 14:42,,,,,,2.3,,platforms,,,,0,.NET,,,"Same issue as IGNITE-6081 with {{PutAll}}: {{DataStreamer}} does not detach objects.

Reproducer:

{code}
var obj1 = new Container();
var obj2 = new Container();
var obj3 = new Container();
var obj4 = new Container();

obj1.Inner = obj2;
obj2.Inner = obj1;
obj3.Inner = obj1;
obj4.Inner = obj3;

using (var ldr = _grid.GetDataStreamer<int, Container>(CacheName))
{
    ldr.AllowOverwrite = true;

    ldr.AddData(1, obj1);
    ldr.AddData(2, obj2);
    ldr.AddData(3, obj3);
    ldr.AddData(4, obj4);
}

var cache = _grid.GetCache<int, Container>(CacheName);

var res = cache[1];
Assert.AreEqual(res, res.Inner.Inner);

Assert.IsNotNull(cache[2].Inner);
Assert.IsNotNull(cache[2].Inner.Inner);
Assert.IsNotNull(cache[3].Inner);
Assert.IsNotNull(cache[3].Inner.Inner);
            
Assert.IsNotNull(cache[4].Inner);
Assert.IsNull(cache[4].Inner.Inner);
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 12 14:43:54 UTC 2017,,,,,,,,,,"0|i3jyqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 14:42;ptupitsyn;Fixed in master: {{67d716f00806c8d69f8339b090e0ddd877b225e3}}.;;;","12/Sep/17 14:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2645
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong message about cluster activation,IGNITE-6345,13101379,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,shroman,ezhuravl,ezhuravl,11/Sep/17 18:40,13/Sep/17 08:48,14/Jul/23 06:20,13/Sep/17 08:47,2.1,,,,,2.3,,,,,,0,,,,"Message of an exception that threw while performing an operation on inactive cluster relates to method Ignite.activate(true), which doesn't exist. 

Method in message should be changed to Ignite.active(true)",,ezhuravl,githubbot,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 13 08:48:44 UTC 2017,,,,,,,,,,"0|i3jx6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 02:34;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/2640

    IGNITE-6345: Wrong message about cluster activation.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-6345

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2640.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2640
    
----
commit 824d95a8e00f3918d09fe7ff7da5718536378461
Author: shroman <rshtykh@yahoo.com>
Date:   2017-09-12T02:34:15Z

    IGNITE-6345: Wrong message about cluster activation.

----
;;;","12/Sep/17 02:37;shroman;[~ezhuravl] Please check this fix.;;;","13/Sep/17 08:37;ezhuravl;[~roman_s], looks good to me, thanks!;;;","13/Sep/17 08:47;shroman;Merged. Thanks!;;;","13/Sep/17 08:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2640
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exchange is hanging on eviction,IGNITE-6342,13101292,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,11/Sep/17 14:56,21/Sep/17 13:55,14/Jul/23 06:20,21/Sep/17 13:55,,,,,,2.3,,,,,,0,,,,"I wrote test which stop/start random node, the test hangs time to time on exchange.
As I see, exchange-thread waiting for partition eviction.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6433,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 13:55:57 UTC 2017,,,,,,,,,,"0|i3jwn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Sep/17 07:28;EdShangGG;I fixed 2 issue with evictions:
1. We didn't write size of renting partitions on checkpoint what could break this counter on restart (what could cause issue with exchange because we couldn't evict partition).
2. We could not own partition which we should do after its loss (and PartititionLossPolicy was IGNORE). And because of it, transactions would fail.

Tests:
https://ci.ignite.apache.org/viewLog.html?buildId=839724&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll

PR:
https://github.com/apache/ignite/pull/2694;;;","21/Sep/17 13:55;agoncharuk;Thanks, Eduard, merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Attempt to create the same cache from multiple threads leads to creation of client cache on server node,IGNITE-6340,13101270,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ilantukh,ilantukh,11/Sep/17 14:02,14/Sep/17 08:01,14/Jul/23 06:20,14/Sep/17 07:59,2.1,,,,,2.3,,general,,,,0,,,,"Implementation of GridCacheProcessor.prepareCacheChangeRequest(...) is based on assumption that if CacheDescriptor exists on affinity node, than server cache also exists. However, this invariant is invalid in general case. For example, request to create cache for given descriptor might be already in queue but still unprocessed.",,agoncharuk,ein,githubbot,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 08:01:50 UTC 2017,,,,,,,,,,"0|i3jwi7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 14:15;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2635

    IGNITE-6340 : Fixed creation of client cache on server node.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6340

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2635.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2635
    
----
commit 8b6f7dfe5b87154c77cd782be2597df2248700df
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-09-11T14:07:43Z

    ignite-6340 : Fixed creation of client cache on server node.

commit 4852c80d095767d94326ce8f894541ea8ecb85ee
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-09-11T14:14:50Z

    ignite-6340 : fixed code style.

----
;;;","14/Sep/17 07:59;agoncharuk;Merged to master.;;;","14/Sep/17 08:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2635
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WAL: Avoid closed by interruption exception when user thread is interrupted,IGNITE-6339,13101263,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,agura,agura,agura,11/Sep/17 13:49,15/Jan/18 09:49,14/Jul/23 06:20,25/Dec/17 15:31,,,,,,2.4,,persistence,,,,0,important,,,We should have a separate writer thread for WAL that will write completed serialized chunks of data. This will allow us avoid closed by interruption exception when user thread is interrupted.,,agura,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7408,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 25 15:31:53 UTC 2017,,,,,,,,,,"0|i3jwgn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Dec/17 12:49;agura;As solution the following are implemented:

- Ring buffer (see {{SegmentedRingByteBuffer}}) that reserve segment (buffer slice) for thread that want write WAL records. Thread serializes WAL records to the segment and calculate CRC if enabled. As result all threads serialize record in parallel manner to the ring buffer.
- Dedicated single thread that handles fsync requests and flushes data from the ring buffer to the file channel. This thread can't be interrupted via public API in distinction of current implementation. Threads that initiate fsync will be parked until data will be flushed to disk. 

This solution solves problem with interrupts and improve WAL write performance for most cases in {{LOG_ONLY}} WAL mode. But this change leads to performance drop for cases when 
local thread writes data to the local node. It is valid for cases with 1-4 threads. For larger amount of thread we have better performance.

In order to improve performance for case mentioned above we tried mapped file. This solution works very well and has better performance for any amount of threads. But {{MappedByteBuffer}} don't have method for partial fsync of data and for naive fsync ({{#force}} method) has performance drop for {{DEFAULT}} WAL mode.

So we have three implementations: master, single writer and mmap. 

See rough benchmarks results below (throughput of cache.put, ops/sec):

*BACKGROUND WAL mode*

| Threads | master | single writer | mmap |
| 1 | 70-80 K | 64-65 K | 70-80 K |
| 2 | 127-128 K | 100-110 K | 127-128 K |
| 4 | 190-200 K | 170-180 K | 190-200 K |
| 8 | 220-230K | 220-230 K | 220-230 K |

For {{BACKGROUND}} mode throughput values are comparable for all implementations.

*LOG_ONLY WAL mode*

| Threads | master | single writer | mmap |
| 1 | 60-65 K | 36-37 K | 70-80 K |
| 2 | 100-105 K | 60-70 K | 124-125 K |
| 4 | 130-140 K | 100-110 K | 190-200 K |
| 8 | 50-60 K | 150-160 K | 210-220 K |

For {{LOG_ONLY}} mode single writer performs better than master for larger amount of threads. But mmap is the best.

*DEFAULT WAL mode*

| Threads | master | single writer | mmap |
| 1 | 1 K | 1 K | 1 K |
| 2 | 1-2 K | 1-2 K | 1 K |
| 4 | 3-4 K | 3-4 K | 1 K |
| 8 | 5-6 K | 5-6 K | 1 K |

For {{DEFAULT}} mode we have performance drop with mmap. But it seems that partial fsync should solve it. Any way changes related with this issue allow switch between mmap and signle writer solution using system property.

*Note*: single writer and mmap still use {{fileIO.close()}} call that is interruptible. So {{ClosedByInterruption}} exception still has a chance to be thrown. This problem is still in TODO's that should be fixed.;;;","08/Dec/17 00:58;agura;Using mmap with {{DEFAULT}} WAL mode and partial fsync improves perfromance ~10-20% vs master or single writer.;;;","21/Dec/17 12:17;agura;Implementation is completed. {{MappedByteBuffer}} implementation is default now and it can be switched to single writer thread using JVM argument: {{-DIGNITE_WAL_MMAP=false}}.

All file operations are noninterruptible for {{MappedByteBuffer}} or performs special thread in case of single writer thread.

TC looks good. Please review.

https://github.com/apache/ignite/pull/3127;;;","25/Dec/17 15:31;agura;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Thin clients: close query cursors on disconnect,IGNITE-6330,13101218,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,ptupitsyn,ptupitsyn,11/Sep/17 10:25,15/Sep/17 11:34,14/Jul/23 06:20,13/Sep/17 13:24,2.1,,,,,2.3,,jdbc,odbc,,,0,,,,"{{JdbcRequestHandler}} and {{OdbcRequestHandler}} store active cursors in {{qryCursors}} map. If client connection abruptly ends, these cursors are not closed properly.

{{SqlListenerNioListener.onDisconnected}} should call {{SqlListenerConnectionContext.onDisconnected}}, and connection context should clean up all resources there.",,githubbot,isapego,ptupitsyn,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6392,IGNITE-6393,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 13:12:42 UTC 2017,,,,,,,,,,"0|i3jw6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 14:49;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2646

    IGNITE-6330: Implemented closing of ODBC and JDBC cursors on client disconnect

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6330

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2646.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2646
    
----
commit 2b8b19b9fdfb6809014195d2f3ce21e8a359f1a0
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-12T14:08:19Z

    IGNITE-6330: Implemented closing of ODBC and JDBC cursors on disconnect

----
;;;","12/Sep/17 16:15;isapego;[~ptupitsyn], [~tledkov-gridgain], can you guys take a look?;;;","13/Sep/17 09:22;ptupitsyn;[~isapego] Looks good to me.;;;","13/Sep/17 13:20;tledkov-gridgain;[~isapego] the patch is OK with me.;;;","13/Sep/17 13:24;isapego;Merged to master.;;;","14/Sep/17 13:12;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2646
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"in ML examples, class ExampleMatrixStorage doesn't compile",IGNITE-6328,13101201,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,oignatenko,oignatenko,11/Sep/17 08:59,11/Sep/17 13:04,14/Jul/23 06:20,11/Sep/17 13:04,,,,,,2.3,,examples,ml,,,0,ml,,,"As of now compilation fails with message:
{noformat}Error:(33, 1) java: org.apache.ignite.examples.ml.math.matrix.ExampleMatrixStorage
 is not abstract and does not override abstract method
 accessMode() in org.apache.ignite.ml.math.MatrixStorage{noformat}

Per preliminary discussion it was likely broken by [commit 518238473c0a12380cb9ed96c67597d1fe42652c|https://github.com/apache/ignite/commit/518238473c0a12380cb9ed96c67597d1fe42652c].",,chief,isapego,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6315,,,,,,,,,,IGNITE-6329,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 13:04:46 UTC 2017,,,,,,,,,,"0|i3jw2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 09:05;chief;[~oignatenko], I double checked the mentioned commit and this is not the reason for this bug. Anyway I will fix the bug ASAP.;;;","11/Sep/17 12:55;chief;https://github.com/apache/ignite/pull/2632;;;","11/Sep/17 12:55;chief;[~isapego] please take a look.;;;","11/Sep/17 13:04;isapego;Good job. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC thin: statement type mismatch error is handled incorrect,IGNITE-6326,13101173,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,11/Sep/17 07:06,12/Sep/17 07:55,14/Jul/23 06:20,12/Sep/17 07:53,2.2,,,,,2.3,,,,,,0,,,,"e.g.: if the update query is executed with {{executeQuery}} method the {{SQLException}} will be  thrown AFTER the data has been updates.

{{JdbcSqlFieldsQuery}} must be used for {{executeQuery}} and {{executeUpdate}} methods.

Expected exceptions:
- {{SQLException}}: executeQuery method can not be used for update.
- {{SQLException}}: executeUpdate method can not be used for select.",,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 12 07:55:01 UTC 2017,,,,,,,,,,"0|i3jvwn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 09:26;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2631

    IGNITE-6326  JDBC thin: statement type mismatch error is handled incorrect

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6326

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2631.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2631
    
----
commit 643e6a90f2a778a0071dba6d2c2602de32ee9fc1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-07T12:38:48Z

    IGNITE-6291: add compatibility handshake

commit 2711400412f369ff65ef6169d206bf28e1908ef1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T06:57:41Z

    Merge branch '_master' into ignite-6291

commit bbb35edd2aa2682bc0a5cf39035e4f6c3617da9f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T07:34:12Z

    IGNITE-6291: cosmetic

commit 3eaeafb8af44a6a1b00a19636427247c01acfd06
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T08:44:54Z

    IGNITE-6326 JDBC thin: statement type mismatch error is handled incorrect

commit e9fda5c73a66ebc4a24addf968707b9f0322913d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T09:11:19Z

    IGNITE-6326: remove unused

----
;;;","11/Sep/17 09:53;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2631%2Fhead] are OK.;;;","11/Sep/17 10:14;tledkov-gridgain;Correct error message depends on IGNITE-6317.;;;","11/Sep/17 12:18;vozerov;[~tledkov-gridgain], can we just append {{stmtType}} to the end of {{JdbcQueryExecuteRequest}} and thus avoid introduction of {{JdbcQueryExecuteRequestV2}}?;;;","11/Sep/17 14:27;tledkov-gridgain;[~vozerov], good point. The patch is simplified. Tests are OK. Please take a look.;;;","12/Sep/17 07:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2631
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transactional cache data partially available after crash and further recovery.,IGNITE-6324,13101039,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,zstan,zstan,zstan,09/Sep/17 14:46,19/May/21 06:55,14/Jul/23 06:20,29/Apr/21 07:22,2.10,,,,,2.11,,persistence,,,,0,,,,If InterruptedException raise in client code during pds store operations we can obtain inconsistent cache after restart. ,,agoncharuk,alex_pl,DmitriyGovorukhin,dpavlov,githubbot,ignitetcbot,mmuzaf,sergeychugunov,zstan,,,,"dgovorukhin commented on pull request #2961: IGNITE-6324 Transactional cache data partially available after crash.
URL: https://github.com/apache/ignite/pull/2961
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 10:48;githubbot;600","zstan opened a new pull request #8987:
URL: https://github.com/apache/ignite/pull/8987


   Thank you for submitting the pull request to the Apache Ignite.
   
   In order to streamline the review of the contribution 
   we ask you to ensure the following steps have been taken:
   
   ### The Contribution Checklist
   - [ ] There is a single JIRA ticket related to the pull request. 
   - [ ] The web-link to the pull request is attached to the JIRA ticket.
   - [ ] The JIRA ticket has the _Patch Available_ state.
   - [ ] The pull request body describes changes that have been made. 
   The description explains _WHAT_ and _WHY_ was made instead of _HOW_.
   - [ ] The pull request title is treated as the final commit message. 
   The following pattern must be used: `IGNITE-XXXX Change summary` where `XXXX` - number of JIRA issue.
   - [ ] A reviewer has been mentioned through the JIRA comments 
   (see [the Maintainers list](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-ReviewProcessandMaintainers)) 
   - [ ] The pull request has been checked by the Teamcity Bot and 
   the `green visa` attached to the JIRA ticket (see [TC.Bot: Check PR](https://mtcga.gridgain.com/prs.html))
   
   ### Notes
   - [How to Contribute](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute)
   - [Coding abbreviation rules](https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules)
   - [Coding Guidelines](https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines)
   - [Apache Ignite Teamcity Bot](https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+Teamcity+Bot)
   
   If you need any help, please email dev@ignite.apache.org or ask anу advice on http://asf.slack.com _#ignite_ channel.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 12:23;githubbot;600","sergey-chugunov-1985 commented on a change in pull request #8987:
URL: https://github.com/apache/ignite/pull/8987#discussion_r618179647



##########
File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxLocalAdapter.java
##########
@@ -937,7 +938,15 @@ assert ownsLock(txEntry.cached()) :
                     U.warn(log, ""Failed to commit transaction, node is stopping [tx="" + CU.txString(this) +
                         "", err="" + ex + ']');
 
-                    return;
+                    boolean persistenceEnabled = CU.isPersistenceEnabled(cctx.kernalContext().config());
+
+                    if (persistenceEnabled) {
+                        GridCacheDatabaseSharedManager dbManager = (GridCacheDatabaseSharedManager)cctx.database();
+
+                        dbManager.skipCheckPointOnNodeStop(true);

Review comment:
       Why not to replace this call with something like `dbManager.getCheckpointer().skipCheckpointOnNodeStop(true)`?
   
   By this we'll eliminate two unnecessary methods on dbManager and checkpointManager.
   
   What do you think?

##########
File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheDatabaseSharedManager.java
##########
@@ -190,6 +193,10 @@
 import static org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.CORRUPTED_DATA_FILES_MNTC_TASK_NAME;
 import static org.apache.ignite.internal.util.IgniteUtils.GB;
 import static org.apache.ignite.internal.util.IgniteUtils.checkpointBufferSize;
+import static org.apache.ignite.transactions.TransactionState.COMMITTED;

Review comment:
       I don't like the fact the we add a lot of details about transactions into DatabaseSharedManager which be aware of this stuff as little as possible.
   
   Why not to introduce a filter (e.g. we may call it `NonFinishedTxFilter`) and put it into IgniteTxManager. All the structures like `uncommitedTx` set and logic will go there, database manager will just notify the filter about TX records and ask whether next transaction should be skipped.
   
   What do you think about that?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Apr/21 08:18;githubbot;600","zstan commented on a change in pull request #8987:
URL: https://github.com/apache/ignite/pull/8987#discussion_r618266868



##########
File path: modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheDatabaseSharedManager.java
##########
@@ -190,6 +193,10 @@
 import static org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.CORRUPTED_DATA_FILES_MNTC_TASK_NAME;
 import static org.apache.ignite.internal.util.IgniteUtils.GB;
 import static org.apache.ignite.internal.util.IgniteUtils.checkpointBufferSize;
+import static org.apache.ignite.transactions.TransactionState.COMMITTED;

Review comment:
       huge +1 ! thanks for pointing this ! 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Apr/21 10:10;githubbot;600","asfgit closed pull request #8987:
URL: https://github.com/apache/ignite/pull/8987


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/21 07:03;githubbot;600",,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,IGNITE-9185,IGNITE-9086,IGNITE-7723,IGNITE-14739,,,,IGNITE-9538,,,,,,,,,,,,,,,"09/Sep/17 14:48;zstan;InterruptCommitedThreadTest.java;https://issues.apache.org/jira/secure/attachment/12886257/InterruptCommitedThreadTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 29 07:22:02 UTC 2021,,,,,,,,,,"0|i3jv33:",9223372036854775807,"Before this fix it was possible to obtain persistent data in inconsistent state. For example: 2 nodes with persistence  and 0 backups, transaction (tx) update data cross nodes (all nodes are involved into tx update) and in the middle of commiting phase something happens with bare metal or possibly jvm crash raises on one of existing nodes, second one will detect it and rollback process will be triggered, some time later crashed node will be fixed and returned into cluster after recovery from wal it would be possible to observe data from rolled back tx.  Now this situation is still possible if there is no -DIGNITE_WAL_LOG_TX_RECORDS=true appropriate flag, i plan to trigger one more ticket for changing this flag defaults.",,,,,,,,,,,,,,,,,,,,"01/Nov/17 10:45;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2961

    IGNITE-6324 Transactional cache data partially available after crash.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6324

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2961.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2961
    
----
commit e751a8c70cc49c138aed004f1b216b9b02b3b6e1
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-10-26T13:37:44Z

    IGNITE-6324 add transaction recovery functionality + tests

commit 1d804fe47626d36afc6b70613180ded637451248
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-10-26T14:13:46Z

    IGNITE-6324 small test rework

commit bb6d41d683caeb3a393798c671d194199fdf3625
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-11-01T10:41:13Z

    IGNITE-6324 minor improvements, more debug on recovery, move wal log dataRec in txs

----
;;;","02/Nov/17 09:23;DmitriyGovorukhin;[~agoncharuk] Please review my changes, [TC result|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2961%2Fhead];;;","12/Apr/18 14:47;agoncharuk;The change still needs some improvements and refactoring, moving to 2.6.;;;","08/Oct/19 13:24;mmuzaf;[~zstan]

Can we move this issue to the next release? Should we?;;;","08/Oct/19 17:33;zstan;[~mmuzaf] i don`t know, it was dangerous ticket some time ago, but i have no time now, maybe later if can`t find someone to fix it.;;;","17/Dec/19 05:13;zstan;this is still actual problem.;;;","26/Jun/20 14:52;alex_pl;[~zstan], [~DmitriyGovorukhin],

Do we have a chance to resolve this issue in 2.9 release? Can we move it to the next release?;;;","22/Jul/20 06:03;alex_pl;Moved to the next release due to inactivity.;;;","12/Apr/21 14:03;ignitetcbot;{panel:title=Branch: [pull/8987/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/8987/head] Base: [master] : New Tests (16)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}PDS (Indexing){color} [[tests 16|https://ci.ignite.apache.org/viewLog.html?buildId=5963348]]
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=2, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=2, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=false, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=2, singleNodeTx=false, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=1, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=1, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=1, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=1, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=true, backups=0] - PASSED{color}
... and 5 new tests

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5963381&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","14/Apr/21 06:24;zstan;[~sergey-chugunov] can you take a look plz ?;;;","22/Apr/21 12:08;zstan;[~sergey-chugunov] thanks for review, i fix all your comments.;;;","22/Apr/21 15:01;ignitetcbot;{panel:title=Branch: [pull/8987/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/8987/head] Base: [master] : No new tests found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}{panel}
[TeamCity *--&gt; Run :: Basic Tests* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5977660&amp;buildTypeId=IgniteTests24Java8_RunBasicTests];;;","27/Apr/21 05:52;zstan;[~sergey-chugunov] i complete with your comments.;;;","27/Apr/21 07:12;ignitetcbot;{panel:title=Branch: [pull/8987/head] Base: [master] : Possible Blockers (2)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Missing Tests]{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5983464]]

{color:#d04437}[Javadoc]{color} [[tests 0 BuildFailureOnMessage |https://ci.ignite.apache.org/viewLog.html?buildId=5983454]]

{panel}
{panel:title=Branch: [pull/8987/head] Base: [master] : No new tests found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}{panel}
[TeamCity *--&gt; Run :: Basic Tests* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5983465&amp;buildTypeId=IgniteTests24Java8_RunBasicTests];;;","27/Apr/21 08:41;ignitetcbot;{panel:title=Branch: [pull/8987/head] Base: [master] : Possible Blockers (1)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Missing Tests]{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5983498]]

{panel}
{panel:title=Branch: [pull/8987/head] Base: [master] : No new tests found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}{panel}
[TeamCity *--&gt; Run :: Basic Tests* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5983499&amp;buildTypeId=IgniteTests24Java8_RunBasicTests];;;","27/Apr/21 10:46;ignitetcbot;{panel:title=Branch: [pull/8987/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
{panel:title=Branch: [pull/8987/head] Base: [master] : New Tests (196)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}
{color:#00008b}Cache 9{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=5963343]]
* {color:#013220}IgniteCacheTestSuite9: CacheReadBeforeActivationTest.readUtilityCacheBeforeActivationFinished - PASSED{color}

{color:#00008b}Queries 2{color} [[tests 144|https://ci.ignite.apache.org/viewLog.html?buildId=5963305]]
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutFromThinClientTx[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=field,idxFldType=class java.lang.String,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutFromThinClient[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=field,idxFldType=class java.lang.String,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPut[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=field,idxFldType=class java.lang.Long,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutTx[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=field,idxFldType=class java.lang.Long,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutFromThinClientTx[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=field,idxFldType=class java.lang.Long,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutFromThinClient[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=field,idxFldType=class java.lang.Long,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPut[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=head,idxFldType=class java.lang.String,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutTx[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=1,idxFld=head,idxFldType=class java.lang.String,gridCnt=1] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutFromThinClientTx[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=0,idxFld=field,idxFldType=class java.lang.Long,gridCnt=3] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPutFromThinClient[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=0,idxFld=field,idxFldType=class java.lang.Long,gridCnt=3] - PASSED{color}
* {color:#013220}IgniteBinaryCacheQueryTestSuite2: WrongQueryEntityFieldTypeTest.testPut[cacheMode=TRANSACTIONAL_SNAPSHOT,backups=0,idxFld=head,idxFldType=class java.lang.String,gridCnt=3] - PASSED{color}
... and 133 new tests

{color:#00008b}Cache 5{color} [[tests 21|https://ci.ignite.apache.org/viewLog.html?buildId=5963339]]
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = OPTIMISTIC, Concurrency = REPEATABLE_READ, Started from = PRIMARY] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = OPTIMISTIC, Concurrency = READ_COMMITTED, Started from = BACKUP] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = OPTIMISTIC, Concurrency = READ_COMMITTED, Started from = NEAR] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = OPTIMISTIC, Concurrency = READ_COMMITTED, Started from = PRIMARY] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchIsolationTest.testOnlyAffectedNodesWaitForRecovery[Started from = BACKUP] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchIsolationTest.testOnlyAffectedNodesWaitForRecovery[Started from = NEAR] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchIsolationTest.testOnlyAffectedNodesWaitForRecovery[Started from = PRIMARY] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = PESSIMISTIC, Concurrency = SERIALIZABLE, Started from = BACKUP] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = PESSIMISTIC, Concurrency = SERIALIZABLE, Started from = NEAR] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = PESSIMISTIC, Concurrency = READ_COMMITTED, Started from = PRIMARY] - PASSED{color}
* {color:#013220}IgniteCacheTestSuite5: GridExchangeFreeCellularSwitchComplexOperationsTest.testComplexOperationsRecoveryOnCellularSwitch[Isolation = OPTIMISTIC, Concurrency = SERIALIZABLE, Started from = BACKUP] - PASSED{color}
... and 10 new tests

{color:#00008b}PDS (Indexing){color} [[tests 16|https://ci.ignite.apache.org/viewLog.html?buildId=5963348]]
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=2, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=2, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=false, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=2, singleNodeTx=false, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=1, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=1, singleNodeTx=false, backups=0] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=1, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithCpOnNodeStop_MultiNodeTx_OneBackup[nodesCnt=1, singleNodeTx=true, backups=1] - PASSED{color}
* {color:#013220}IgnitePdsWithIndexingCoreTestSuite: IgniteLogicalRecoveryWithParamsTest.testPartiallyCommitedTx_TwoNode_WithoutCpOnNodeStop_SingleNodeTx[nodesCnt=2, singleNodeTx=true, backups=0] - PASSED{color}
... and 5 new tests

{color:#00008b}PDS (Compatibility)*{color} [[tests 14|https://ci.ignite.apache.org/viewLog.html?buildId=5963347]]
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.9.1, cfgInlineSize=false] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.9.1, cfgInlineSize=true] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.9.0, cfgInlineSize=false] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.9.0, cfgInlineSize=true] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.7.6, cfgInlineSize=false] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.7.6, cfgInlineSize=true] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.7.0, cfgInlineSize=false] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.7.0, cfgInlineSize=true] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.8.1, cfgInlineSize=false] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.8.1, cfgInlineSize=true] - PASSED{color}
* {color:#013220}IgniteCompatibilityBasicTestSuite: InlineIndexCompatibilityTest.testQueryOldInlinedIndex[ver=2.8.0, cfgInlineSize=false] - PASSED{color}
... and 3 new tests

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5963381&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","29/Apr/21 07:22;sergeychugunov;[~zstan],

Patch looks good to me now, I merged it to master branch in commit *d0da231c7e8891d9fd45be3a245612e41b464e60*.

Thank you for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Fix ALTER TABLE tests failures,IGNITE-6314,13100802,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,skalashnikov,skalashnikov,08/Sep/17 13:04,16/Aug/18 15:42,14/Jul/23 06:20,14/Sep/17 09:42,,,,,,2.3,,sql,,,,0,MakeTeamcityGreenAgain,,,"The following tests need to be fixed as they are failed when run on TeamCity.
The tests pass when run locally.

H2DynamicColumnsClientBasicSelfTest.testAddColumnToNonDynamicCacheWithRealValueType 	
H2DynamicColumnsClientBasicSelfTest.testComplexOperations 	
H2DynamicColumnsServerBasicSelfTest.testAddColumnToNonDynamicCacheWithRealValueType 	
H2DynamicColumnsServerBasicSelfTest.testComplexOperations 	
H2DynamicColumnsServerCoordinatorBasicSelfTest.testAddColumnToNonDynamicCacheWithRealValueType 	
H2DynamicColumnsServerCoordinatorBasicSelfTest.testComplexOperations 	
DynamicColumnsConcurrentAtomicReplicatedSelfTest.testConcurrentRebalance 	
DynamicColumnsConcurrentTransactionalReplicatedSelfTest.testConcurrentOperationsAndNodeStartStopMultithreaded 	
DynamicColumnsConcurrentTransactionalReplicatedSelfTest.testCoordinatorChange 
",,al.psc,githubbot,skalashnikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 09:41:40 UTC 2017,,,,,,,,,,"0|i3jtkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 13:10;vozerov;Affected suite - ""Ignite Binary Objects Simple Mapper Queries"".;;;","11/Sep/17 17:20;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2639

    IGNITE-6314 Tests fix.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6314

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2639.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2639
    
----
commit 18db626e5c8032084205a70b4542a0fd6c55df30
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-09-11T16:53:29Z

    IGNITE-6314 Tests fix.

----
;;;","12/Sep/17 07:43;vozerov;[~al.psc], could you please explain the change? To me it looks more like hiding a bug rather than a fix. Why simple name mapper affects the behavior?;;;","13/Sep/17 16:47;al.psc;[~vozerov]
Mapper affects {{IgniteCache.get}} behavior by design: when we change mapper, we change class name in {{BinaryClassDescriptor}} (it ends up lacking package part) and thus {{IgniteCache.get}} without {{withKeepBinary}} justly fails (Ignite tries to deserialize object with non-existent class {{City}}).

What can be done: I suggest that upon starting a cache we proactively register real value type with {{BinaryContext#registerUserClassName}} - if we do so, then by the time first user operation occurs, cluster will already have class descriptor with correct (non-trimmed) type name, and id of that descriptor will match that of descriptor for trimmed type.

However, I believe this should be done in scope of a separate ticket, and for the current state of things the proposed fix looks like just lesser of evils.;;;","14/Sep/17 09:41;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2639
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Link to unexisted URL on ExecutorService page,IGNITE-6312,13100781,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,nizhikov,nizhikov,nizhikov,08/Sep/17 12:00,11/Sep/17 08:03,14/Jul/23 06:20,11/Sep/17 08:03,,,,,,,,documentation,,,,0,,,,"Link ""IgniteCompute""  forward from [ExecutorService|https://apacheignite.readme.io/docs/executor-service] to 404 page.

https://apacheignite.readme.io/docs/executor-service",,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-09-08 12:00:47.0,,,,,,,,,,"0|i3jtg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If getAll() fails with NPE, onHeap entry is not removed, for local cache",IGNITE-6307,13100710,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,nizhikov,DmitriyGovorukhin,DmitriyGovorukhin,08/Sep/17 08:09,05/Oct/17 03:42,14/Jul/23 06:20,04/Oct/17 16:32,2.0,,,,,2.4,,cache,,,,0,MakeTeamcityGreenAgain,,,"GridCacheLocalFullApiSelfTest.testGetAllWithNulls

{code}
    final Set<String> c = new HashSet<>();

        c.add(""key1"");
        c.add(null);

        GridTestUtils.assertThrows(log, new Callable<Void>() {
            @Override public Void call() throws Exception {
                cache.getAll(c);

                return null;
            }
        }, NullPointerException.class, null);
{code}

After getAll, entry with ""key1"" will be in heap map, it is dependent of order in collection for getAll();",,avinogradov,DmitriyGovorukhin,githubbot,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 05 03:42:24 UTC 2017,,,,,,,,,,"0|i3jt0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Sep/17 20:37;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/2629

    IGNITE-6307: Remove new local entries from onHeap map

    Remove new local entries from onHeap map in case of Exception inside getAll

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-6307

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2629.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2629
    
----
commit 2c3dbfa95d25ca837624cc5f69c612134a65e39f
Author: Nikolay Izhikov <nizhikov.dev@gmail.com>
Date:   2017-09-10T20:36:02Z

    IGNITE-6307: Remove new local entries from onHeap map in case of Exception inside getAll

----
;;;","11/Sep/17 05:29;nizhikov;PullRequest - https://github.com/apache/ignite/pull/2629
TeamCity - https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2629%2Fhead;;;","12/Sep/17 11:10;nizhikov;Hello, [~DmitriyGovorukhin].

Can you review my fix?;;;","13/Sep/17 09:45;DmitriyGovorukhin;Hi [~NIzhikov]

Your changes looks good for me, but i doubt the performance. I think we must check performance benchmark before merge into master.;;;","13/Sep/17 09:56;DmitriyGovorukhin;One more thing, could you please add new cases in test, with 'null' in first element collection, middle and last.;;;","14/Sep/17 09:33;nizhikov;Dmitriy, thank you.

New test case added.
I run benchmarks and will return with the numbers.;;;","14/Sep/17 10:56;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/2661

    IGNITE-6307: Bug fix and new tests

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-6307-ignite-2.1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2661.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2661
    
----

----
;;;","18/Sep/17 12:58;nizhikov;[~avinogradov] I got the numbers and it seems OK.
Can you review and merge my fix?;;;","04/Oct/17 16:32;avinogradov;Merged to master branch.
Thanks for contribution.;;;","05/Oct/17 03:41;githubbot;Github user nizhikov closed the pull request at:

    https://github.com/apache/ignite/pull/2629
;;;","05/Oct/17 03:42;githubbot;Github user nizhikov closed the pull request at:

    https://github.com/apache/ignite/pull/2661
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor CMD: Failed script execution after throttling interval,IGNITE-6304,13100673,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,08/Sep/17 03:50,21/Sep/17 11:40,14/Jul/23 06:20,20/Sep/17 10:31,2.1,,,,,2.3,,wizards,,,,0,,,,"To reproduce:
1) create alert
2) after alert triggered script is executed
3) after alert is gone and throttling interval is expire and alert was triggered again the script doesn't execute",,anovikov,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 11:40:35 UTC 2017,,,,,,,,,,"0|i3jss7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 04:11;vsisko;Fixed script execution after throttle interval. ;;;","08/Sep/17 07:37;anovikov;Reviewed. Fixed default value for throttling set 0.
[~pkonstantinov], can you please test?;;;","12/Sep/17 08:40;pkonstantinov;Successfully tested
Now script will be executed each time when alert is triggered and throttling interval was expire.;;;","20/Sep/17 10:31;kuaw26;Looks good. Merged to master. Please retest.;;;","21/Sep/17 11:40;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC thin protocol compatibility is broken,IGNITE-6291,13100445,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,07/Sep/17 12:35,11/Sep/17 10:08,14/Jul/23 06:20,11/Sep/17 10:08,2.2,,,,,2.3,,jdbc,,,,0,,,,"After merge IGNITE-6118 and IGNITE-5233. The JDBC thin protocol compatibility is broken.
The new client's handshake cannot be parsed by old servers because the server fails handshake by protocol's version.

So, we have to implement compatibility handshake to support this case.",,githubbot,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 10:08:05 UTC 2017,,,,,,,,,,"0|i3jrdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Sep/17 07:41;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2630

    IGNITE-6291 JDBC thin protocol compatibility is broken

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6291

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2630.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2630
    
----
commit 643e6a90f2a778a0071dba6d2c2602de32ee9fc1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-07T12:38:48Z

    IGNITE-6291: add compatibility handshake

commit 2711400412f369ff65ef6169d206bf28e1908ef1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T06:57:41Z

    Merge branch '_master' into ignite-6291

commit bbb35edd2aa2682bc0a5cf39035e4f6c3617da9f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-11T07:34:12Z

    IGNITE-6291: cosmetic

----
;;;","11/Sep/17 10:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2630
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on SQL query with parameters on custom schema name,IGNITE-6288,13100404,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,07/Sep/17 08:47,11/Sep/17 07:16,14/Jul/23 06:20,11/Sep/17 07:15,2.1,,,,,2.3,,sql,,,,0,,,,"*Root cause*: cache name is used instead of schema name at the {{CacheQueryPartitionInfo}}

*Reproducer*: please add the short test to the tests class {{SqlSchemaSelfTest}}
{code}
    public void testCustomSchemaName() throws Exception {
        QueryEntity qe = new QueryEntity()
            .setValueType(Person.class.getName())
            .setKeyType(Long.class.getName())
            .setValueFieldName(""_value"")
            .setKeyFieldName(""id"")
            .addQueryField(""id"", Long.class.getName(), null)
            .addQueryField(""_value"", Person.class.getName(), null)
            .addQueryField(""name"", String.class.getName(), null)
            .addQueryField(""orgId"", Long.class.getName(), null);

        qe.setTableName(""Person"");

        IgniteCache<Long, Person> cache = node.createCache(new CacheConfiguration<Long, Person>()
            .setName(CACHE_PERSON)
            .setQueryEntities(Collections.singletonList(qe))
            .setSqlSchema(""TEST""));

        cache.put(1L, new Person(""Vasya"", 2));

        assertEquals(1, node.context().query().querySqlFieldsNoCache(
            new SqlFieldsQuery(""SELECT id, name, orgId FROM TEST.Person where (id = ?)"").setArgs(1L), false
        ).getAll().size());
    }
{code}",,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 07:16:24 UTC 2017,,,,,,,,,,"0|i3jr4n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/17 16:32;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2617

    IGNITE-6288  NPE on SQL query with parameters on custom schema name

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6288

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2617.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2617
    
----
commit 3dc820a3512fec65058a4a179b9f3756a2a88b38
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-07T08:55:24Z

    IGNITE-6288: add test to reproduce

commit 6271e557f4fb352ccc05b7de67e1c1a540d471e9
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-09-07T16:30:09Z

    IGNITE-6288: use schema name instead on cache name on table search

----
;;;","07/Sep/17 16:34;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2617%2Fhead] are OK with me.

[~vozerov], please take a look at the patch.;;;","08/Sep/17 13:48;vozerov;[~tledkov-gridgain], wouldn't it be enough to just call {{schema(partInfo.cacheName())}} inside {{IgniteH2Indexing#bindPartitionInfoParameter}}? Cache always has only one schema.;;;","08/Sep/17 14:26;tledkov-gridgain;[~vozerov], you are right. The patch is simplified.;;;","11/Sep/17 07:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2617
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.h2.jdbc.JdbcSQLException: Hexadecimal string with odd number of characters,IGNITE-6286,13100203,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,schernolyas,schernolyas,schernolyas,06/Sep/17 16:15,02/Oct/17 15:36,14/Jul/23 06:20,02/Oct/17 07:52,2.1,,,,,2.3,,sql,,,,0,usability,,,"Binding values  of some types to parameterized queries leads to the exception  (see fill stacktrace in comments).
Also, the exception *blocks* using parameterized queries for Hibernate OGM.
I proceed the exception for String type. For control it, I developed test ( see org.apache.ignite.internal.processors.query.IgniteSqlParameterizedQueryTest)  .  
The exception reproduced for BigDecimal type in 2.3-snapshot.",,al.psc,dmagda,githubbot,schernolyas,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5250,,,,,,,,,,,,"28/Sep/17 10:09;al.psc;6286.patch;https://issues.apache.org/jira/secure/attachment/12889475/6286.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,9223372036854775807,,,Mon Oct 02 15:36:21 UTC 2017,,,,,,,,,,"0|i3jpvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/17 13:10;schernolyas;reproduced for BigDecimal type.

[2017-09-22 16:02:53,609][ERROR][query-#644%query.IgniteSqlParameterizedQueryTest0%][GridMapQueryExecutor] Failed to execute local query.
class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:972)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:1031)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:1010)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest0(GridMapQueryExecutor.java:660)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest(GridMapQueryExecutor.java:506)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onMessage(GridMapQueryExecutor.java:206)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor$2.onMessage(GridMapQueryExecutor.java:166)
	at org.apache.ignite.internal.managers.communication.GridIoManager$ArrayListener.onMessage(GridIoManager.java:2332)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1555)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1183)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1090)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.h2.jdbc.JdbcSQLException: Шестнадцатиричная строка содержит нешестнадцатиричные символы: ""1000000000000000.001""
Hexadecimal string contains non-hex character: ""1000000000000000.001""; SQL statement:
SELECT
__Z0._VAL __C0_0
FROM ""Bookmark"".BOOKMARK __Z0
WHERE __Z0.SITEWEIGHT = ?1 [90004-195]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.util.StringUtils.convertHexToBytes(StringUtils.java:946)
	at org.h2.value.Value.convertTo(Value.java:957)
	at org.h2.expression.Comparison.getValue(Comparison.java:264)
	at org.h2.expression.Expression.getBooleanValue(Expression.java:178)
	at org.h2.command.dml.Select.isConditionMet(Select.java:299)
	at org.h2.command.dml.Select.access$600(Select.java:64)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1455)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:79)
	at org.h2.result.LazyResult.next(LazyResult.java:59)
	at org.h2.command.dml.Select.queryFlat(Select.java:519)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:625)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:114)
	at org.h2.command.dml.Query.query(Query.java:352)
	at org.h2.command.dml.Query.query(Query.java:333)
	at org.h2.command.CommandContainer.query(CommandContainer.java:113)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:111)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:965);;;","25/Sep/17 07:50;githubbot;GitHub user schernolyas opened a pull request:

    https://github.com/apache/ignite/pull/2737

    IGNITE-6286: fix org.h2.jdbc.JdbcSQLException

    changes:
    1) develop test for check all supported types for parameterized queries
    2) add support BigDecimal type as type of paraameter's value

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/schernolyas/ignite IGNITE-6286-DEV1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2737.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2737
    
----
commit f4e882e6dc4d829e1e143ee050108c21e55afac4
Author: Sergey Chernolyas <sergey.chernolyas@gmail.com>
Date:   2017-09-25T07:47:03Z

    IGNITE-6286: fix org.h2.jdbc.JdbcSQLException
    
    changes:
    1) develop test for check all supported types for parameterized queries
    2) add support BigDecimal type as type of paraameter's value

----
;;;","26/Sep/17 12:07;al.psc;[~schernolyas]
Hello, my comments:

1. Please remove {{log.info}} statement from {{bindObject}} and from test class - looks like these are leftovers from debugging stage.
2. Please add javadocs to all test class members.
3. Instead of constructing a {{QueryEntity}} via reflection in test class, please do following:
    3.1. Mark data fields of {{Bookmark}} class with Ignite's {{@QuerySqlField}} annotation.
    3.2. Use method {{CacheConfiguration#setIndexedTypes}} to register indexed type in Ignite.
4. Please get rid of massive code duplication in test methods. You could simply move all checks to a single method that would check all fields, that's fine.;;;","26/Sep/17 12:43;githubbot;Github user schernolyas closed the pull request at:

    https://github.com/apache/ignite/pull/2737
;;;","26/Sep/17 12:57;githubbot;GitHub user schernolyas opened a pull request:

    https://github.com/apache/ignite/pull/2750

    IGNITE-6286: fix org.h2.jdbc.JdbcSQLException

    changes:
    
    1. develop test for check all supported types for parameterized queries
    2. add support BigDecimal type as type of paraameter's value
    3. refactoring (remove unused 'log.info')

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/schernolyas/ignite IGNITE-6286-DEV2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2750.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2750
    
----
commit 10938b6ec77bd00037d96881c42174525fe0aa58
Author: Sergey Chernolyas <sergey.chernolyas@gmail.com>
Date:   2017-09-26T12:56:44Z

    IGNITE-6286: fix org.h2.jdbc.JdbcSQLException
    
    changes:
    
    1. develop test for check all supported types for parameterized queries
    2. add support BigDecimal type as type of paraameter's value
    3. refactoring (remove unused 'log.info')

----
;;;","26/Sep/17 13:04;schernolyas;Hi [~al.psc]

I recreated my PR. Please see https://github.com/apache/ignite/pull/2750 .
I fixed your comments N 1, 2 and 4 (If I understood you correctly).

About comment N3.
The test do same that do Hibernate OGM for Ignite. I mean that JPA Entity not uses annotation '@QuerySqlField' . Can I remain as is?

;;;","26/Sep/17 16:25;dmagda;[~schernolyas], [~al.psc], please look at the ticket below too. Both tickets seem related:
https://issues.apache.org/jira/browse/IGNITE-5250;;;","26/Sep/17 16:44;schernolyas;Hi [~dmagda] !
It is same exception. I can test example from your issue.;;;","26/Sep/17 18:29;al.psc;[~schernolyas]
Thanks for fixing p.1.

However, I don't see any changes regarding pts. 2-4.

Pt. 2 - most members of *test* class you added don't have javadocs.
Pt. 3 - this test doesn't have anything to do with Hibernate, JPA, etc. Please use convenient public Ignite API, this will make test better readable and understandable, and it's important as we have lot of people working on the project.
Pt. 4 - I don't see any code deduplication you've made. Please look at your methods {{testStringSupport}}, {{testIntegerSupport}}, etc - they all are almost identical, copy-pasted. It would be much simpler if you just made one test method that would check all fields inside of it.

Also, please don't create any more PRs, Ignite policy is one PR per issue. Just push your commits with fixes to the same branch.

Thanks!;;;","27/Sep/17 08:21;schernolyas;Hi [~al.psc]

I sent new commits that fix points 2-4.

Please, review it.

A lot of thanks!
 ;;;","28/Sep/17 07:09;vozerov;Hi [~schernolyas], please make sure to change ticket status to {{Patch Available}}, to indicate that review is needed. Without this transition community members will think that you still working on it.;;;","28/Sep/17 08:06;schernolyas;Hi [~al.psc]

Your points 2-4 are fixed. Could you please review https://github.com/apache/ignite/pull/2750.

;;;","28/Sep/17 10:16;al.psc;Hi [~schernolyas],

Here are my comments that I have fixed myself:

1. Adding a new dependency is almost absolutely always a bad idea, especially if just for a test. At least in case of Ignite, that is.
2. You haven't added javadocs to all members of all classes, including inner ones like I asked - please have a look at my patch to see that all members of all classes now have javadocs: though they are empty, their presence is a must per Ignite's coding conventions.
3. Reflection usage is clearly an overkill, although overall you've got my point of code deduplication correctly, thanks. I've removed reflection uses - please have a look at the patch.
4. There were some double empty lines, I removed them too.

Please apply my patch {{6286.patch}} (attached to this issue above) to your branch and commit it, thanks! Then please change issue status to ""patch available"" for us to know that it's good to be merged.;;;","28/Sep/17 11:09;schernolyas;Hi [~al.psc] !

I have applied your patch.;;;","28/Sep/17 11:34;al.psc;[~schernolyas] thanks, we'll merge it once TeamCity test run shows us that everything is fine.;;;","02/Oct/17 07:54;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2750
;;;","02/Oct/17 15:36;schernolyas;Hi [~al.psc]!

The fix  is not exists in branch 'ignite-2.3'. Could you move the fix to 'ignite-2.3'?
Or ... Have I misunderstanding?

A lot of thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,
C++: impossible to start node with persistent store,IGNITE-6282,13100169,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,isapego,izaporozhtseva,izaporozhtseva,06/Sep/17 14:55,28/Sep/17 06:52,14/Jul/23 06:20,07/Sep/17 16:30,2.2,,,,,2.3,,platforms,,,,0,C++,important,,"C++: impossible to start node with persistent store. 

Add to config:

{code}
   <property name=""persistentStoreConfiguration"">
      <bean class=""org.apache.ignite.configuration.PersistentStoreConfiguration""/>
    </property>
{code}


After node started, error message appears:


{code}
[17:42:39] Topology snapshot [ver=1, servers=1, clients=0, CPUs=8, heap=0.89GB]
ERROR: Can not perform the operation because the cluster is inactive. Note, that the cluster is considered inactive by default if Ignite Persistent Store is used to let all the nodes join the cluster. To activate the cluster call Ignite.activate(true).
{code}


and after that node is stopped",,githubbot,isapego,izaporozhtseva,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 16:27:00 UTC 2017,,,,,,,,,,"0|i3jpof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Sep/17 12:55;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2612

    IGNITE-6282: Implemented lazy initialization of IgniteImpl members.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6282

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2612.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2612
    
----
commit a2f6c685d982179c406eb14937ea35e3df7a4699
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-06T16:42:26Z

    IGNITE-6282: Minor fixes for standalone node.

commit 32449b7b77b363809d0438fadd1bf606fb9b7899
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-06T16:58:21Z

    IGNITE-6282: Added test.

commit fd4abb7856c420d1b2a304799dbf154a58b7ff6e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-06T17:35:41Z

    IGNITE-6282: Added Lazy template

commit 8859db85a29aee5fd3c7d3545f6e9dd7aaf03f06
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-07T12:17:37Z

    IGNITE-6282: Implemented lazy initialization of IgniteImpl members

----
;;;","07/Sep/17 15:29;isapego;Ready for review. [~ptupitsyn], could you please take a look?;;;","07/Sep/17 15:48;ptupitsyn;[~isapego] please see my comments in Upsource, looks like there is a passible race in {{Lazy}} initialization.;;;","07/Sep/17 15:49;isapego;[~ptupitsyn] good catch. Fixed.;;;","07/Sep/17 16:05;ptupitsyn;There is a typo in config file names: ""persistAnce"" instead of ""persistEnce"".
Other than that looks good to me.;;;","07/Sep/17 16:23;isapego;[~ptupitsyn], fixed. Thanks for your review.;;;","07/Sep/17 16:30;isapego;Merged to {{master}} and {{ignite-2.2}}.;;;","08/Sep/17 14:08;izaporozhtseva;tested on 2.2;;;","08/Sep/17 14:17;isapego;[~izaporozhtseva], so what is the result?;;;","08/Sep/17 15:03;izaporozhtseva; fix confirmed;;;","11/Sep/17 16:27;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2612
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Convert WAL to human readable form,IGNITE-6277,13100095,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,06/Sep/17 10:22,10/Jan/18 14:24,14/Jul/23 06:20,15/Sep/17 10:51,2.1,,,,,2.3,,persistence,,,,0,,,,"Now there is no way to make wal visible or understandable without coding.

I propose to write utility which would convert any given compatible WAL to textual form.

Something like this:
{code}
[W] InsertRecord [idx=19, io=H2ExtrasLeafIO[ver=1], rightId=0000000000000000, super=PageDeltaRecord [grpId=2141373875, pageId=0002ffff00000011, super=WALRecord [size=61, chainSize=0, pos=FileWALPointer [idx=0, fileOffset=2504497, len=61, forceFlush=false], type=BTREE_PAGE_INSERT]]]
[W] DataRecord [writeEntries=[DataEntry [op=CREATE, writeVer=GridCacheVersion [topVer=116006687, order=0, nodeOrder=1], partId=29, partCnt=33]], super=WALRecord [size=171, chainSize=0, pos=FileWALPointer [idx=0, fileOffset=2504558, len=171, forceFlush=false], type=DATA_RECORD]]
[W] PagesListRemovePageRecord [rmvdPageId=0001000c0000002f, pageId=0001000c0000000a, grpId=-1368047377, super=PageDeltaRecord [grpId=-1368047377, pageId=0001000c0000000a, super=WALRecord [size=37, chainSize=0, pos=FileWALPointer [idx=0, fileOffset=2504729, len=37, forceFlush=false], type=PAGES_LIST_REMOVE_PAGE]]]
[W] DataPageInsertRecord [super=PageDeltaRecord [grpId=-1368047377, pageId=0001000c0000002f, super=WALRecord [size=76, chainSize=0, pos=FileWALPointer [idx=0, fileOffset=2504766, len=76, forceFlush=false], type=DATA_PAGE_INSERT_RECORD]]]
[W] PagesListAddPageRecord [dataPageId=0001000c0000002f, super=PageDeltaRecord [grpId=-1368047377, pageId=0001000c0000000b, super=WALRecord [size=37, chainSize=0, pos=FileWALPointer [idx=0, fileOffset=2504842, len=37, forceFlush=false], type=PAGES_LIST_ADD_PAGE]]]
[W] DataPageSetFreeListPageRecord [freeListPage=281526516318219, super=PageDeltaRecord [grpId=-1368047377, pageId=0001000c0000002f, super=WALRecord [size=37, chainSize=0, pos=FileWALPointer [idx=0, fileOffset=2504879, len=37, forceFlush=false], type=DATA_PAGE_SET_FREE_LIST_PAGE]]]

{code}",,agoncharuk,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5558,IGNITE-6421,IGNITE-7378,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 12:08:14 UTC 2017,,,,,,,,,,"0|i3jp7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/17 13:33;EdShangGG;So, I think, the first version of the converter is ready to review.

Please, review!;;;","15/Sep/17 10:51;agoncharuk;Thanks, Eduard, merged your changes to master.;;;","15/Sep/17 12:08;EdShangGG;Some tips how to use {{converter}}:
Example of command line:
{code}
java -cp ""lib/ignite-dev-utils-2.3.0-SNAPSHOT.jar:lib/ignite-indexing-2.3.0-SNAPSHOT.jar:lib/ignite-core-2.3.0-SNAPSHOT.jar:~/.m2/repository/com/h2database/h2/1.4.195/h2-1.4.195.jar"" org.apache.ignite.development.utils.IgniteWalConverter 4096 ~/IdeaProjects/incubator-ignite/work/db/wal/127_0_0_1_47503 ~/IdeaProjects/incubator-ignite/work/db/wal/archive/127_0_0_1_47503 
{code}

You need to pass as argument:
1. Page size.
2. Path to WAL dir.
3. (Optional) Path to Archive WAL dir.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TxPessimisticDeadlockDetectionTest.testDeadlocksPartitionedNear and TxPessimisticDeadlockDetectionTest.testDeadlocksReplicated  is failing flaky.,IGNITE-6262,13099732,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,VitaliyB,VitaliyB,05/Sep/17 07:04,19/Dec/18 14:06,14/Jul/23 06:20,19/Sep/17 10:29,,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"The problem and the solution are the same with IGNITE-5865.

After changes in the BinaryMarshaler, hashes of original objects and binary became different. And this led to an incorrect partition of entities in the test.
",,agura,dpavlov,githubbot,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5865,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 19 14:06:45 UTC 2018,,,,,,,,,,"0|i3jmzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Sep/17 07:12;VitaliyB;Fixed.;;;","07/Sep/17 08:00;VitaliyB;Implement primaryKeys method for custom objects.;;;","19/Sep/17 09:39;VitaliyB;Hi, [~agura].  Please, review this issue. [Upsourse|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-333]

The problem and the solution are the same with [IGNITE-5865|https://issues.apache.org/jira/browse/IGNITE-5865].

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=836788&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll];;;","19/Sep/17 10:29;agura;LGTM! Merged to master branch. Thanks for your contribution.;;;","19/Dec/18 14:06;githubbot;Github user BiryukovVA closed the pull request at:

    https://github.com/apache/ignite/pull/2592
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
When a node becomes segmented an AssertionError is thrown during GridDhtPartitionTopologyImpl.removeNode,IGNITE-6256,13099587,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,asfedotov,asfedotov,04/Sep/17 11:21,15/Sep/17 14:59,14/Jul/23 06:20,15/Sep/17 14:17,1.8,,,,,2.3,,general,,,,0,,,,"The assert is as follows:

exception=""java.lang.AssertionError: null
 at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.removeNode(GridDhtPartitionTopologyImpl.java:1422)
 at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.beforeExchange(GridDhtPartitionTopologyImpl.java:490)
 at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.distributedExchange(GridDhtPartitionsExchangeFuture.java:769)
 at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:504)
 at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1689)
 at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
 at java.lang.Thread.run(Thread.java:745)

Below is the sequence of steps that leads to the assertion error:

1) A node becomes SEGMENTED when it's determined by SegmentCheckWorker, after an EVT_NODE_FAILED has been received.
2) It gets visibleRemoteNodes from it's TcpDiscoveryNodesRing
3) Clears the TcpDiscoveryNodesRing leaving only self on the list. The node ring is used to determine if a node is alive
during DiscoCache creation
4) After that, the node initiates removal of all the nodes read in step 2
5) For each node, it sends an EVT_NODE_FAILED to the corresponding DiscoverySpiListener
providing a topology containing all the nodes except already processed
6) This event gets into GridDiscoveryManager 
7) The node gets removed from alive nodes for every DiscoCache in discoCacheHist
8) Topology change is detected
9) Creation of a new DiscoCache is attempted. At this moment every remote node is not available due to the
TcpDiscoveryNodesRing has been cleared, thus resulting in a DiscoCache with empty alives
10) The event with the created DiscoCache and the new topology version is passed to DiscoveryWorker
11) The event is eventually handled by DiscoveryWorker and is recorded by DiscoveryWorker#recordEvent
12) The recording is handled by GridEventStorageManager which notifies every listener for this event type (EVT_NODE_FAILED)
13) One of the listeners is GridCachePartitionExchangeManager#discoLsnr
It creates a new GridDhtPartitionsExchangeFuture with the empty DiscoCache received with the event and enqueues it
14) The future gets eventually handled by GridDhtPartitionsExchangeFuture and initialized
15) updateTopologies is called, which for each GridCacheContext gets its topology (GridDhtPartitionTopology)
and calls GridDhtPartitionTopology#updateTopologyVersion
16) DiscoCache for GridDhtPartitionTopology is assigned from the one of the GridDhtPartitionsExchangeFuture.
The assigned DiscoCache has empty alives at the moment
15) A distributed exchange is handled (GridDhtPartitionsExchangeFuture#distributedExchange)
16) For each cache context GridCacheContext, for its topology (GridDhtPartitionTopologyImpl) GridDhtPartitionTopologyImpl#beforeExchange is called
17) The fact that the node has left is determined and GridDhtPartitionTopologyImpl#removeNode is called to handle it
18) An attempt is made to get the alive coordinator node by calling DiscoCache#oldestAliveServerNode
19) null is returned which results in an AssertionError

The fix should probably prevent initiating exchange futures if a node has segmented.",,agura,amashenkov,asfedotov,githubbot,gvvinblade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 14:59:16 UTC 2017,,,,,,,,,,"0|i3jm3b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/17 09:45;amashenkov;Seems, this bug was introduced by IGNITE-4779.;;;","06/Sep/17 15:58;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2603

    IGNITE-6256: DiscoCache should always contains local node.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6256

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2603.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2603
    
----
commit 46ca1c6dcc7163a8a997cde7360d48a29c1e482d
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-09-06T15:33:31Z

    IGNITE-6256: DiscoCache always contains local node.

----
;;;","07/Sep/17 11:25;amashenkov;TC tests look fine.;;;","07/Sep/17 16:41;gvvinblade;The changes look fine to me;;;","15/Sep/17 14:17;agura;LGTM, merged to master branch.;;;","15/Sep/17 14:59;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/2603
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion error in IgniteTxHandler.processDhtTxFinishRequest(...),IGNITE-6254,13099578,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,ilantukh,ilantukh,04/Sep/17 10:00,02/Aug/19 11:02,14/Jul/23 06:20,06/Sep/17 13:50,2.1,,,,,2.3,,,,,,0,,,,"AssertionError is thrown in the end of this method:
{noformat}
assert req.txState() != null || (ctx.tm().tx(req.version()) == null && ctx.tm().nearTx(req.version()) == null);
{noformat}
This could happen only if results of calls to IgniteTxManager changed after method execution started. We should re-use already aquired values:
- replace ctx.tm().tx(...) call with dhtTx;
- replace ctx.tml().nearTx(...) call with nearTx.",,agura,githubbot,ignitetcbot,ilantukh,Vincent Fang,,,,,,,,"dspavlov commented on issue #2584: IGNITE-6254 : Fixed assertions for req.txState().
URL: https://github.com/apache/ignite/pull/2584#issuecomment-517660009
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2584: IGNITE-6254 : Fixed assertions for req.txState().
URL: https://github.com/apache/ignite/pull/2584
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,IGNITE-6257,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 12 19:09:15 UTC 2018,,,,,,,,,,"0|i3jm1b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 10:21;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2584

    IGNITE-6254 : Fixed assertions for req.txState().

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6254

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2584.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2584
    
----
commit 79fc1a871710e2aa081852b7a9dfd8e05e0bc8c7
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-09-04T10:21:06Z

    ignite-6254 : Fixed assertions for req.txState().

----
;;;","05/Sep/17 13:09;ilantukh;[~agura],
Please review.;;;","06/Sep/17 13:50;agura;LGTM! Merged to master branch.;;;","23/Sep/17 19:29;Vincent Fang;Thumbs up;;;","12/Oct/18 19:09;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Activate | Deactivate Cluster{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2069721]]
* IgniteStandByClusterSuite: IgniteStandByClusterTest.testStaticCacheStartAfterActivationWithCacheFilter - 0,0% fails in last 100 master runs.

{color:#d04437}SPI{color} [[tests 46|https://ci.ignite.apache.org/viewLog.html?buildId=2069754]]
* IgniteSpiTestSuite: GridTcpCommunicationSpiRecoverySelfTest.testBlockRead1 - 0,0% fails in last 100 master runs.
* IgniteSpiTestSuite: GridTcpCommunicationSpiRecoverySelfTest.testBlockRead3 - 0,0% fails in last 100 master runs.

{color:#d04437}Platform .NET (Long Running){color} [[tests 5|https://ci.ignite.apache.org/viewLog.html?buildId=2069769]]
* exe: config.test&quot;) - 0,0% fails in last 100 master runs.
* exe: config.test2&quot;) - 0,0% fails in last 100 master runs.
* exe: ExecutableTest.TestJvmMemoryOptsCmdCombined - 0,0% fails in last 100 master runs.
* exe: ExecutableTest.TestJvmMemoryOptsCmdCustom - 0,0% fails in last 100 master runs.

{color:#d04437}Client Nodes{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2069723]]
* IgniteClientNodesTestSuite: IgniteClientReconnectApiExceptionTest.testErrorOnDisconnect - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 5{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2069801]]
* IgniteCacheTestSuite5: IgniteCacheAtomicProtocolTest.testFullAsyncPutRemap - 1,0% fails in last 100 master runs.

{color:#d04437}Cache 2{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2069798]]
* IgniteCacheTestSuite2: CacheExchangeMessageDuplicatedStateTest.testExchangeMessages - 0,0% fails in last 100 master runs.

{color:#d04437}Binary Objects (Simple Mapper Basic){color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=2069719]]
* IgniteBinarySimpleNameMapperBasicTestSuite: GridServiceProcessorMultiNodeSelfTest.testDeployOnEachNodeUpdateTopology - 0,0% fails in last 100 master runs.

{color:#d04437}Cache (Restarts) 2{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2069795]]
* IgniteCacheRestartTestSuite2: GridCachePutAllFailoverSelfTest.testPutAllFailoverNearDisabledTwoBackups - 0,0% fails in last 100 master runs.

{color:#d04437}Platform .NET{color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2069766]]
* exe: ComputeApiTest.TestAffinityCall - 0,0% fails in last 100 master runs.
* exe: ComputeApiTest.TestAffinityCall - 0,0% fails in last 100 master runs.
* exe: DataStreamerTest.TestPropertyPropagation - 0,0% fails in last 100 master runs.

{color:#d04437}Basic 1{color} [[tests 3|https://ci.ignite.apache.org/viewLog.html?buildId=2069814]]
* IgniteBasicTestSuite: OptimizedMarshallerNodeFailoverTest.testRestartAllNodes - 0,0% fails in last 100 master runs.

{color:#d04437}Queries 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2069803]]
* IgniteBinaryCacheQueryTestSuite: SchemaExchangeSelfTest.testClientCacheStartDynamic - 0,0% fails in last 100 master runs.

{color:#d04437}Platform C++ (Linux){color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2069763]]
* IgniteCoreTest: CacheQueryTestSuite: TestSqlFieldsQueryDistributedJoins - 1,0% fails in last 100 master runs.
* IgniteCoreTest: CacheQueryTestSuite: TestSqlQueryDistributedJoins - 1,0% fails in last 100 master runs.

{color:#d04437}Cache 4{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2069800]]
* IgniteCacheTestSuite4: IgniteCacheInvokeReadThroughTest.testInvokeReadThroughTxNearCache - 0,0% fails in last 100 master runs.

{color:#d04437}Cache (Full API){color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2069793]]
* IgniteCacheFullApiSelfTestSuite: GridCacheLocalFullApiSelfTest.testTransformReturnValuePutInTx - 0,0% fails in last 100 master runs.
* IgniteCacheFullApiSelfTestSuite: GridCacheLocalWithGroupFullApiSelfTest.testTransformReturnValuePutInTx - 0,0% fails in last 100 master runs.

{color:#d04437}Binary Objects (Simple Mapper Cache Full API){color} [[tests 4|https://ci.ignite.apache.org/viewLog.html?buildId=2069720]]
* IgniteBinarySimpleNameMapperCacheFullApiTestSuite: GridCacheLocalFullApiSelfTest.testTransformReturnValuePutInTx - 0,0% fails in last 100 master runs.
* IgniteBinarySimpleNameMapperCacheFullApiTestSuite: GridCacheLocalWithGroupFullApiSelfTest.testTransformReturnValuePutInTx - 0,0% fails in last 100 master runs.

{color:#d04437}AOP{color} [[tests 41|https://ci.ignite.apache.org/viewLog.html?buildId=2069715]]
* IgniteAopSelfTestSuite: BasicAopSelfTest.testAop - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassPrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassResourceContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassResourceIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassResourcePrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassResourceShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultClassShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNamePrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameResourceContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameResourceIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameResourcePrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameResourceShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testNonDefaultNameShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testSingleDeploymentWithUserClassLoaderContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testSingleDeploymentWithUserClassLoaderIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testSingleDeploymentWithUserClassLoaderPrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: NonSpringAopSelfTest.testSingleDeploymentWithUserClassLoaderShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultClassIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultClassPrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultClassResourceContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultClassResourceIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultClassResourcePrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultClassResourceShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNamePrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameResourceContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameResourceIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameResourcePrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameResourceShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultNameShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testNonDefaultShared - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testTaskNameAndTaskClassContinuous - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testTaskNameAndTaskClassIsolated - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testTaskNameAndTaskClassPrivate - 0,0% fails in last 100 master runs.
* IgniteAopSelfTestSuite: ExternalNonSpringAopSelfTest.testTaskNameAndTaskClassShared - 0,0% fails in last 100 master runs.

{color:#d04437}PDS (Indexing){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069778]]

{color:#d04437}PDS (Direct IO) 1{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069772]]

{color:#d04437}Platform .NET (Core Linux){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069768]]

{color:#d04437}PDS (Direct IO) 2{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069773]]

{color:#d04437}Data Structures{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069802]]
* GridCacheReplicatedDataStructuresFailoverSelfTest.testReentrantLockConstantMultipleTopologyChangeNonFailoverSafe (last started)

{color:#d04437}Cache (Deadlock Detection){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069807]]

{color:#d04437}_Javadoc_{color} [[tests 0 Exit Code , BuildFailureOnMessage |https://ci.ignite.apache.org/viewLog.html?buildId=2069786]]

{color:#d04437}Compute (Affinity Run){color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069725]]
* IgniteCacheLockPartitionOnAffinityRunAtomicCacheOpTest.testNotReservedAtomicCacheOp (last started)

{color:#d04437}Thin client: Node.js{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069783]]

{color:#d04437}Platform C++ (Linux Clang){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069816]]

{color:#d04437}PDS (Compatibility)*{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069775]]

{color:#d04437}_Licenses Headers_{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069787]]

{color:#d04437}JCache TCK 1.1{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069811]]

{color:#d04437}ML{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069743]]

{color:#d04437}Spring (Data){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2069751]]

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2069820&amp;buildTypeId=IgniteTests24Java8_RunAll];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cassandra Cache Store Session does not retry if prepare statement failed,IGNITE-6252,13099570,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,irudyak,sunnychanclsa,sunnychanclsa,04/Sep/17 09:18,26/Jun/18 17:50,14/Jul/23 06:20,19/Apr/18 18:42,2.0,2.1,,,,2.7,,cassandra,,,,2,,,,"During our testing, we have found that certain warning about prepared statement:

2017-08-31 11:27:19.479 org.apache.ignite.cache.store.cassandra.CassandraCacheStore flusher-0-#265%xxxx% WARN CassandraCacheStore - Prepared statement cluster error detected, refreshing Cassandra session
com.datastax.driver.core.exceptions.InvalidQueryException: Tried to execute unknown prepared query : 0xc7647611fd755386ef63478ee7de577b. You may have used a PreparedStatement that was created with another Cluster instance.

We notice that after this warning occurs some of the data didn't persist properly in cassandra cache. After further examining the Ignite's CassandraSessionImpl code in method execute(BatchExecutionAssistance,Iterable), we found that at around [line 283|https://github.com/apache/ignite/blob/86bd544a557663bce497134f7826be6b24d53330/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L283], if the prepare statement fails in the asnyc call, it will not retry the operation as the error is stored in [line 269|https://github.com/apache/ignite/blob/86bd544a557663bce497134f7826be6b24d53330/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L269] and cleared in [line 277|https://github.com/apache/ignite/blob/86bd544a557663bce497134f7826be6b24d53330/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L277] but it was not checked again after going through the [ResultSetFuture |https://github.com/apache/ignite/blob/86bd544a557663bce497134f7826be6b24d53330/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L307].

I believe in line 307 you should check for error != null such that any failure will be retry.


",,dmagda,dopsun,githubbot,irudyak,jason.man@gmail.com,kotamrajuyashasvi,ntikhonov,sunnychanclsa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6853,IGNITE-1371,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 08 16:18:33 UTC 2018,,,,,,,,,,"0|i3jlzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 09:50;githubbot;GitHub user sunnychanwork opened a pull request:

    https://github.com/apache/ignite/pull/2583

    IGNITE-6252 Cassandra Cache Store Session does not retry if statement…

    … failed
    
    This patch will check to ensure that we retry any prepare statement failure when we submit the async request to Cassandra

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sunnychanwork/ignite patch-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2583.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2583
    
----
commit 37620be67fc9d882892964516c983efef1c34415
Author: sunnychanwork <sunnychanwork@users.noreply.github.com>
Date:   2017-09-04T09:43:28Z

    IGNITE-6252 Cassandra Cache Store Session does not retry if statement failed
    
    This patch will check to ensure that we retry any prepare statement failure when we submit the async request to Cassandra

----
;;;","31/Oct/17 15:43;ntikhonov;Hi [~sunnychanclsa],
Thank you for your contribution! I looked your code and did some minor changes. I've pushed the changes to ignite-6252 branch. Could you look at it and provide your feedback?
;;;","01/Nov/17 01:25;sunnychanclsa;It's good thank you.;;;","04/Jan/18 20:29;dmagda;[~irudyak], could make a final review and merge the changes?;;;","21/Jan/18 21:55;irudyak;The *retry* flag in [216|https://github.com/sunnychanwork/ignite/blob/patch-1/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L216] doesn't make sense cause in case of any failure the same operation will be retried on the next iteration of the [cycle|

[https://github.com/sunnychanwork/ignite/blob/9c9b375a317755e1d063a59b16ec696fc9116070/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L204]]

The bug is actually already fixed by [~jason.man@gmail.com] [PR|https://github.com/apache/ignite/pull/3088];;;","22/Jan/18 01:44;sunnychanclsa;[~irudyak] Jason's patch only address the fact the prepare statement needs to be re-initialized but it did not address the fact that the batch will need to retry as well. In fact, the unit test provided by Jason Man there is an mistake in there:

{{for (int i = 0; i < 10; i++) {}}
 {{    data.add(String.valueOf( i ));}}
 {{}}}
 {{cassandraSession.execute(batchExecutionAssistant, data);}}
 {{........}}
 {{assertEquals(9, batchExecutionAssistant.processedCount());}}

Notice that there are 10 items of data, but the test only asserts that there are 9 items being processed. The test should verify for 10 items. With my patch this should account for all the items.;;;","22/Jan/18 02:41;irudyak;[~sunnychanclsa] the fact that some of the failed statements from the batch require retry is already addressed by this [cycle|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L204]. It will do *CQL_EXECUTION_ATTEMPTS_COUNT* attempts if there are any errors. Otherwise it will be successfully [terminated|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L309];;;","22/Jan/18 04:05;sunnychanclsa;[~irudyak] Let me walk you through this:
 # block around [231|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L231] throws InvalidQueryException. data item is not processed and not added to the list of future
 # prepStatEx record the exception in [251|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L251]
 # error set to keep the exception throw (line [276|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L276])
 # line [282|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L282] resets the prepStatEx to null
 # line [309|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L309] didn't check the cached ""error"", so the error in 231 is ignored and it will not retry and return [310|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L310]

[~ntikhonov] has previously updated my patch - I have merged his changes along with updated unit test provided in [PR 3088|https://github.com/apache/ignite/pull/3088] into my PR branch;;;","22/Jan/18 04:39;irudyak;[~sunnychanclsa] The fact that line [282|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L282] resets the *prepStatEx* to null is absolutely fine - once we did *executeAsync [line 231|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L231]* for all prepared statements in the batch and handled _prepared statements error_ in [line 252|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L252] we don't care about value of *prepStatEx* anymore - cause all exceptions related to _prepared statement_ were already handled in [line 252|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L252]*.*

Then starting from [line 284|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L284] till [line 302|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L302] we are waiting for each *_future_* to complete and processing it in [line 290|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L290]. Such way, each processed (not failed) _*future*_ will be tracked inside *BatchExecutionAssistant* and at the next [attempt|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L204] it will be [skipped|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L228]. However if we'll again run into _prepared statement error_ during _*futures*_ processing cycle, *prepStatEx* will be initialized again in [line 298|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L298] and finally in [line 326|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L326] it will be properly handled again.;;;","22/Jan/18 05:07;sunnychanclsa;[~irudyak]
 # The ""Prepare Statement exception"" is thrown during executeAsync call, so the future for the specific item is never added to the futResults.
 # The handlePreparedStatmenetClusterError(e) does not cause the retry of the specific item - only re init the prepared statement

As a result, if we do not check for retry in [309|https://github.com/apache/ignite/blob/6330f0bb74d6b986d040a8017f3dfbde361d5457/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L309] for any error occurs in the for block, the item failed in 1 is never retried.

 ;;;","22/Jan/18 06:02;irudyak;[~sunnychanclsa] thanks a lot, now I see your point! This problem could however be handled a bit easier (without introducing additional *retry* flag) by modifying [line 309|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L309] to:

 
{quote}*if (tblAbsenceEx == null && hostsAvailEx == null && prepStatEx == null && assistant.processedCount() == dataSize)*
{quote}
 

Such way we'll skip next attempts only if:
 # There were no errors in the last attempt
 # We successfully processed all the batch statements during previous attempts

 ;;;","22/Jan/18 06:14;sunnychanclsa;[~irudyak] I think that could work too but my knowledge of this component is limited so I can't tell whether processedCount == dataSize is too strong a statement (e.g. I don't know whether there is a case such that datasize might be less due to error processing in other places).

[~ntikhonov] has already reviewed my previous patch and he seems to be okay with this - so I wonder whether we can merge it as it is and then consider the processedCount() == dataSize check as a future enhancement? ;;;","22/Jan/18 06:51;irudyak;[~sunnychanclsa] *dataSize* is always equals to the number of objects in the batch (it's assigned in [line 264|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L264]). It allows to skip these extra 8 lines of code introduced by *retry* flag. 

You can make this changes in the same PR (cause they actually related to the addressed issue) and I'll do the review.;;;","22/Jan/18 07:08;sunnychanclsa;Okay branch for PR updated: https://github.com/apache/ignite/pull/2583;;;","22/Jan/18 07:43;irudyak;Merged into Apache master branch.;;;","22/Jan/18 07:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2583
;;;","05/Apr/18 07:25;kotamrajuyashasvi;*In CassandraSessionImpl.java*  

*In method* 

*@Override public <R, V> R execute(BatchExecutionAssistant<R, V> assistant, Iterable<? extends V> data)*

*.................*

*ResultSet resSet = futureResult.getValue().getUninterruptibly();*
 *Row row = resSet != null && resSet.iterator().hasNext() ? resSet.iterator().next() : null;*

*if (row != null)*
 *assistant.process(row, futureResult.getKey());*

*...................*

If prepared statements are Insert/Update/Delete then no result will be returned according to Cassandra docs. Hence{color:#FF0000} {color}*resSet.iterator().hasNext()* will always return false and so *row* will always be null. Hence its not added to *assistant.process* so *assistant.processedCount()* will always be 0. and never be equal to *datasize*. We end up retrying eventhough it was inserted/deleted/updated and there were no Exceptions, and try CQL_EXECUTION_ATTEMPTS_COUNT attempts trying again and again and finally throw Exception :

*""Failed to process "" + (dataSize - assistant.processedCount()) +*
 *"" of "" + dataSize + "" elements, during "" + assistant.operationName() +*
 *"" operation with Cassandra""*  

Hence the code fix using the condition : assistant.processedCount() == dataSize will not work if prepared statement is not a select statement.

We can put a boolean flag *retry* which is set to false initially in every attempt. If at any point the execution flow enters Exception code block then we can set *retry* as true. Then instead of condition :

*if (tblAbsenceEx == null && hostsAvailEx == null && prepStatEx == null)*

we can use:

 *if(!retry)*

as a condition on whether to return the processed data or retry.

In addition to this we need to maintain separate HashSet of  keyvalues of ResultSetFuture where 

*resSet !=null  && (* *resSet.iterator().hasNext()* == *false)*  Which is the case for Insert/Upadate/Delete preparedstatements.

Then while re attempting in addition to !assistant.alreadyProcessed(seqNum) check we also check if the HashSet does not contains the seqNum.  

 ;;;","05/Apr/18 07:46;kotamrajuyashasvi;The code fix using the condition : *assistant.processedCount() == dataSize* will not work if prepared statement is not a select statement.;;;","05/Apr/18 15:31;kotamrajuyashasvi;Also whenever session refresh() is called to handle Exception, new session is created. But there might be many preparedstatements created with old session(since a session object can be shared between different batches). So when we execute the preparedstatements created with old session on a new session created , we get the the Exception ""com.datastax.driver.core.exceptions.InvalidQueryException  Tried to execute unknown prepared query  You may have used a PreparedStatement that was created with another Cluster instance"" which would again refresh and create new cassandra session and so on ...refresh() will be called continuosly and also the same Exception. 

A solution would be to get the Exception message while async executing prepared statement, and check if the exception message contains the String ""You may have used a PreparedStatement that was created with another Cluster instance"". If so get the new prepared statement with new session created, and restart the Batch Method again.;;;","10/Apr/18 16:28;irudyak;[~kotamrajuyashasvi] it looks like in your previous comment you are sharing source code not from *master,* but from some developer branch. That's how masters source code looks [like|[https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L289]]
{code:java}
ResultSet resSet = futureResult.getValue().getUninterruptibly();
Row row = resSet != null && resSet.iterator().hasNext() ? resSet.iterator().next() : null;

assistant.process(row, futureResult.getKey());
{code}
As you may see there is no if condition there. Thus all the futures will be counted correctly.

 ;;;","11/Apr/18 08:55;kotamrajuyashasvi;Hi Igor

I was looking at the final commit changes mentioned here in the ticket. [https://github.com/apache/ignite/pull/2583].

The if(row!=null) code change was done as a part of another Issue fix.          https://issues.apache.org/jira/browse/IGNITE-5779

But I see there is another issue here. 

*In CassandraSessionImpl.java* 

When handlePreparedStatementClusterError method is called during Exception, the session is refreshed.There might be many preparedstatements created with old session(since a session object can be shared between different batches). So when we execute the preparedstatements created with old session on a new session created , we get the the Exception ""com.datastax.driver.core.exceptions.InvalidQueryException You may have used a PreparedStatement that was created with another Cluster instance"". Which would again call handlePreparedStatementClusterError  and refresh session again and this happens continuously. We have observed continuous cassandra session refresh warnings when this scenario occurred. 

 ;;;","19/Apr/18 18:14;irudyak;[~kotamrajuyashasvi] right after [handlePreparedStatementClusterError|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L252] method call, there is a call to [refresh|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L253]  prepared statement using new Cassandra session. Thus subsequent statements running by the *same thread* should be good.

However there could be other threads trying to refresh session because they are also failed to execute prepared statement. Here we have two cases:

1) All threads trying to refresh Cassandra session at the same time. This case should be handled properly by this [logic|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L879], preventing threads to refresh session multiple times. Also because of this you may see [such warnings|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L880], which is fine.

2) It's possible that some threads will try to refresh Cassandra session sequentially, because scheduling among threads is unpredictable and while refreshing session other threads which are trying to [execute|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L231] prepared statement will be locked, cause [session()|https://github.com/apache/ignite/blob/master/modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/session/CassandraSessionImpl.java#L538] call is synchronized. Thus we are running into number of extra (and unnecessary) refreshments of Cassandra session which is a problem. 

[~kotamrajuyashasvi] Could you please create a separate ticket for this issue (case 2)?  Current ticket is about another problem which is fixed now.

 ;;;","08/May/18 16:18;kotamrajuyashasvi;Ticket addressing the Issue in the above comment, regarding continuous cassandra refresh issue :

https://issues.apache.org/jira/browse/IGNITE-8354

 ;;;",,,,,,,,,,,,,,,,,,,
Web console: Selection stay on removed user.,IGNITE-6251,13099569,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,04/Sep/17 09:02,18/Sep/17 07:29,14/Jul/23 06:20,15/Sep/17 18:19,2.1,,,,,2.3,,wizards,,,,0,,,,"# Open admin panel.
# Select and remove user.
No user selected. Action key stay active. Exception occurs on some actions.",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 07:29:02 UTC 2017,,,,,,,,,,"0|i3jlzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 09:22;vsisko;Fixed selection on user remove.;;;","15/Sep/17 08:42;kuaw26;Looks good for me.
Please test in branch.;;;","15/Sep/17 10:39;pkonstantinov;Tested.;;;","15/Sep/17 18:19;kuaw26;Merged to master. Please retest.;;;","18/Sep/17 07:29;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Check Java 7 builds for compatibility with Ignite and update documentation,IGNITE-6248,13099461,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,ezhuravl,ezhuravl,03/Sep/17 15:44,24/Jul/19 16:37,14/Jul/23 06:20,27/Oct/17 08:56,2.1,,,,,2.4,,,,,,0,usability,,,"According to these threads on SO and user list, some old Java 7 versions doesn't compatible with Ignite since version 2.1 anymore:
http://apache-ignite-users.70518.x6.nabble.com/Caused-by-org-h2-jdbc-JdbcSQLException-General-error-quot-java-lang-IllegalMonitorStateException-Attt-td15684.html
https://stackoverflow.com/questions/45911616/datastreamer-does-not-work-well/45972341#45972341
",,dkarachentsev,dsetrakyan,ezhuravl,githubbot,sboikov,,,,,,,,"dspavlov commented on issue #2931: IGNITE-6248 - Throw exception on unsupported Java 1.7 releases.
URL: https://github.com/apache/ignite/pull/2931#issuecomment-514707726
 
 
   
   IGNITE-6248 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:37;githubbot;600","dspavlov commented on pull request #2931: IGNITE-6248 - Throw exception on unsupported Java 1.7 releases.
URL: https://github.com/apache/ignite/pull/2931
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 27 08:56:39 UTC 2017,,,,,,,,,,"0|i3jlbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Sep/17 16:44;dsetrakyan;We must check the Java version on startup and throw an exception with proper error message is the Java version is incompatible.;;;","08/Sep/17 08:49;dkarachentsev;This issue is fixed in JDK 1.7.0_71. For previous releases helps disabling JIT for OffheapReadWriteLock, f.e. for Oracle JDK: -XX:CompileCommand=exclude,org/apache/ignite/internal/util/OffheapReadWriteLock,*;;;","26/Oct/17 13:18;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/2931

    IGNITE-6248 - Throw exception on unsupported Java 1.7 releases.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6248

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2931.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2931
    
----
commit 0608fc55a03c3cd72b6a7b616703976f5d2f34f7
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-10-26T13:17:30Z

    IGNITE-6248 - Throw exception on unsupported Java 1.7 releases.

----
;;;","26/Oct/17 13:18;dkarachentsev;[PR 2931|https://github.com/apache/ignite/pull/2931];;;","27/Oct/17 08:56;sboikov;Reviewed, merged into master.

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Driver should return affected rows number for non-batch DML queries as well.,IGNITE-6245,13099267,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,amashenkov,amashenkov,01/Sep/17 16:41,11/Sep/17 16:27,14/Jul/23 06:20,07/Sep/17 15:01,2.1,,,,,2.3,,odbc,,,,0,,,,Looks like {{OdbcQueryExecuteResult}} class doesn't have {{rowAffected}} field that {{OdbcQueryExecuteBatchResult}} has.,,amashenkov,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 16:27:19 UTC 2017,,,,,,,,,,"0|i3jk47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Sep/17 14:32;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2601

    IGNITE-6245: Implemented returning of the number of affected rows for ODBC driver.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6245

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2601.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2601
    
----

----
;;;","06/Sep/17 16:24;isapego;Ready. [~ptupitsyn], take a look please.;;;","06/Sep/17 16:32;ptupitsyn;[~isapego] Looks good to me.;;;","07/Sep/17 15:01;isapego;Merged to master.;;;","11/Sep/17 16:27;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2601
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test failure] GridCacheClientModesTcpClientDiscoveryAbstractTest$CaseNearReplicatedTransactional.testGetFromClientNode,IGNITE-6234,13098879,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,31/Aug/17 14:19,02/Aug/19 11:02,14/Jul/23 06:20,10/Oct/17 14:56,2.1,,,,,2.4,,,,,,0,MakeTeamcityGreenAgain,,,"Test reproducible locally although with a very low probability. 
I wasn't able to reproduce it starting test in isolation but managed to do it starting *GridCacheClientModesTcpClientDiscoveryAbstractTest* 50 times in a row observing from 1 to 3 failures.

Test run with failed test is available [here|https://ci.ignite.apache.org/viewLog.html?buildId=798538&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache].

It seems that when client requests value of custom class from near cache it may see BinaryMetadata for this class with no schema.

Test fails with the following exception:
{noformat}
java.lang.NullPointerException: null
    at org.apache.ignite.internal.binary.BinaryMetadata.hasSchema(BinaryMetadata.java:189)
    at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.metadata(CacheObjectBinaryProcessorImpl.java:517)
    at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl$2.metadata(CacheObjectBinaryProcessorImpl.java:185)
    at org.apache.ignite.internal.binary.BinaryContext.metadata(BinaryContext.java:1237)
    at org.apache.ignite.internal.binary.BinaryReaderExImpl.getOrCreateSchema(BinaryReaderExImpl.java:2005)
    at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:284)
    at org.apache.ignite.internal.binary.BinaryReaderExImpl.<init>(BinaryReaderExImpl.java:183)
    at org.apache.ignite.internal.binary.BinaryObjectImpl.reader(BinaryObjectImpl.java:830)
    at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:794)
    at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:143)
    at org.apache.ignite.internal.processors.cache.CacheObjectUtils.unwrapBinary(CacheObjectUtils.java:161)
    at org.apache.ignite.internal.processors.cache.CacheObjectUtils.unwrapBinaryIfNeeded(CacheObjectUtils.java:41)
    at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:125)
    at org.apache.ignite.internal.processors.cache.GridCacheContext.unwrapBinaryIfNeeded(GridCacheContext.java:1734)
    at org.apache.ignite.internal.processors.cache.GridCacheContext.addResult(GridCacheContext.java:1889)
    at org.apache.ignite.internal.processors.cache.GridCacheContext.addResult(GridCacheContext.java:1828)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearGetFuture.loadEntries(GridNearGetFuture.java:752)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearGetFuture.access$000(GridNearGetFuture.java:68)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearGetFuture$MiniFuture.onResult(GridNearGetFuture.java:1012)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearGetFuture.onResult(GridNearGetFuture.java:215)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearCacheAdapter.processGetResponse(GridNearCacheAdapter.java:294)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTransactionalCache$1.apply(GridNearTransactionalCache.java:92)
    at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTransactionalCache$1.apply(GridNearTransactionalCache.java:90)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1060)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:579)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
    at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
    at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
    at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
    at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
    at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:485)
    at java.lang.Thread.run(Thread.java:745)
{noformat}

Quick fix: add null check for schemaIds.",,githubbot,KristoffSC,ntikhonov,sergey-chugunov,,,,,,,,,"dspavlov commented on issue #2811: IGNITE-6234 Initialize schemaIds as empty set if schemas field is null
URL: https://github.com/apache/ignite/pull/2811#issuecomment-517660069
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2811: IGNITE-6234 Initialize schemaIds as empty set if schemas field is null
URL: https://github.com/apache/ignite/pull/2811
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 12 07:22:18 UTC 2018,,,,,,,,,,"0|i3ji8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 14:43;githubbot;GitHub user sergey-chugunov-1985 opened a pull request:

    https://github.com/apache/ignite/pull/2566

    IGNITE-6234 null check for schemaIds

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6234

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2566.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2566
    
----
commit 32da9b85a25074a3b7d3e0072cbda3abb75f3f60
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-08-31T14:41:18Z

    IGNITE-6234 null check for schemaIds

----
;;;","31/Aug/17 15:11;sergey-chugunov;[pull request|https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_RunAll&branch_Ignite20Tests=pull%2F2566%2Fhead&tab=buildTypeStatusDiv];;;","04/Oct/17 09:29;KristoffSC;Hi,
I'm facing this issue to, but in a slightly different scenario. 

However I wonder how *schemaIds* can be null since *BinaryMetadata* constructor sets this field to *Collections.emptySet();* in a ""worst"" case.

Unless the *BinaryMetadata* is also deserialized and its parameterized constructor is not called. ;;;","05/Oct/17 22:04;githubbot;GitHub user kristoffSC opened a pull request:

    https://github.com/apache/ignite/pull/2811

    IGNITE-6234 Initialize schemaIds as empty set if schemas field is null

    Initialize schemaIds as an empty set if schemas field is null and BinaryMetada is deserialized. 
    This behavior is concise with BinaryMetadata constructor. 
    
    This should prevent NPE for some situations when BinarryMetadata object is created from deserialization and we call hasSchema(int i) on it. - https://issues.apache.org/jira/browse/IGNITE-6234

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kristoffSC/ignite IGNITE-6234

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2811.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2811
    
----
commit b515c499031691bd76800a7db26478f41b2218e8
Author: Krzysztof Chmielewski <krzysiek.chmielewski@gmail.com>
Date:   2017-10-05T21:59:45Z

    IGNITE-6234 Initialize schemaIds to empty set if schemas field is null during the deserialization

----
;;;","05/Oct/17 22:11;KristoffSC;Hi Team,
my previous post got me thinking and I believe I've found the root cause of this issue. Problem is during the deserialization and it is in *readFrom(Datainput in)* method.

Please see my pull request for a details.
https://github.com/apache/ignite/pull/2811

Comparing *readFrom(Datainput in)* method to BinaryMetadata constructor I've noticed that *schemaId* field is not initialized as an empty Set if *schemas* field is *null* as it is in line 118 for example. 

So *readFrom(Datainput in)* is missing this part. ;;;","09/Oct/17 10:55;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/2820

    IGNITE-6234 Initialize schemaIds to empty set if schemas field is null during the deserialization

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6234-v2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2820.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2820
    
----
commit 55fe403e9d2fb73cbbf0c89f5cedbe2eb5b8839b
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-10-09T10:44:06Z

    IGNITE-6234 Initialize schemaIds to empty set if schemas field is null during the deserialization

----
;;;","10/Oct/17 14:38;sergey-chugunov;[~mcherkas], your PR looks good to me, thanks for contribution!;;;","10/Oct/17 14:56;ntikhonov;[~KristoffSC] and [~mcherkas],
Thank guys for your contribution! I've merged your changes to master (4385f12 commit).
Thanks!;;;","12/Oct/17 14:26;githubbot;Github user mcherkasov closed the pull request at:

    https://github.com/apache/ignite/pull/2820
;;;","12/Dec/18 07:22;githubbot;Github user sergey-chugunov-1985 closed the pull request at:

    https://github.com/apache/ignite/pull/2566
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Flusher.RunThread starts a new thread,IGNITE-6231,13098844,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,31/Aug/17 11:05,02/Oct/17 13:10,14/Jul/23 06:20,02/Oct/17 13:09,,,,,,2.3,,platforms,,,,0,.NET,,,"1) ThreadPool thread should be used instead
2) Exceptions are not handled, so entire process will crash",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 02 13:09:35 UTC 2017,,,,,,,,,,"0|i3ji13:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/17 13:09;ptupitsyn;Fixed in master: {{7aaacd8f92645558430b5343a1cb8bf7e908529a}}.

Exception in {{Task}} does not crash the process.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Errors in project code generation,IGNITE-6229,13098741,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,31/Aug/17 06:20,14/Sep/17 02:58,14/Jul/23 06:20,13/Sep/17 13:28,2.1,,,,,2.3,,wizards,,,,0,,,,"1) In MemoryPolicyConfiguration: subIntervals and rateTimeInterval fields available from 2.1 version.
2) Unused import of common type for vararg function arguments and in some startup classes.
3) Number format exception for long properties in XML configuration.
",,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 02:46:40 UTC 2017,,,,,,,,,,"0|i3jhe7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 06:41;vsisko;1-3 fixed.;;;","13/Sep/17 13:28;kuaw26;Looks good for me. Merged to master.
Please retest.;;;","14/Sep/17 02:46;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid closing page store file with ClosedByInterruptException when user thread is interrupted,IGNITE-6228,13098587,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ascherbakov,ivan.glukos,ivan.glukos,30/Aug/17 15:18,21/Sep/17 15:25,14/Jul/23 06:20,21/Sep/17 15:25,2.1,,,,,2.3,,persistence,,,,0,,,,"If cache proxy is in synchronous mode, user thread may be interrupted during read from file page store file. This will cause closing of partition file with ClosedByInterruptException.
Example stacktrace:
{noformat}
class org.apache.ignite.IgniteCheckedException: Runtime failure on lookup row: org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$SearchRow@717729d
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.findOne(BPlusTree.java:1070)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.find(IgniteCacheOffheapManagerImpl.java:1476)
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheOffheapManager$GridCacheDataStore.find(GridCacheOffheapManager.java:1276)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.read(IgniteCacheOffheapManagerImpl.java:394)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.unswap(GridCacheMapEntry.java:371)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.onTtlExpired(GridCacheMapEntry.java:2952)
	at org.apache.ignite.internal.processors.cache.GridCacheTtlManager$1.applyx(GridCacheTtlManager.java:61)
	at org.apache.ignite.internal.processors.cache.GridCacheTtlManager$1.applyx(GridCacheTtlManager.java:52)
	at org.apache.ignite.internal.util.lang.IgniteInClosure2X.apply(IgniteInClosure2X.java:38)
	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.expire(IgniteCacheOffheapManagerImpl.java:1012)
	at org.apache.ignite.internal.processors.cache.GridCacheTtlManager.expire(GridCacheTtlManager.java:198)
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.unwindEvicts(GridCacheUtils.java:868)
	at org.apache.ignite.internal.processors.cache.GridCacheGateway.leaveNoLock(GridCacheGateway.java:240)
	at org.apache.ignite.internal.processors.cache.GridCacheGateway.leave(GridCacheGateway.java:225)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.onLeave(GatewayProtectedCacheProxy.java:1680)
	at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.put(GatewayProtectedCacheProxy.java:875)
	at org.apache.ignite.internal.processors.cache.persistence.db.RestartGridTest$TestService.execute(RestartGridTest.java:160)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor$2.run(GridServiceProcessor.java:1160)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Read error
	at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStore.read(FilePageStore.java:356)
	at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.read(FilePageStoreManager.java:287)
	at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStoreManager.read(FilePageStoreManager.java:272)
	at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl.acquirePage(PageMemoryImpl.java:570)
	at org.apache.ignite.internal.processors.cache.persistence.pagemem.PageMemoryImpl.acquirePage(PageMemoryImpl.java:488)
	at org.apache.ignite.internal.processors.cache.persistence.DataStructure.acquirePage(DataStructure.java:129)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.treeMeta(BPlusTree.java:822)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.access$7700(BPlusTree.java:81)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Get.init(BPlusTree.java:2392)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.doFind(BPlusTree.java:1099)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.findOne(BPlusTree.java:1065)
	... 20 more
Caused by: java.nio.channels.ClosedByInterruptException
	at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)
	at sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:746)
	at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:724)
	at org.apache.ignite.internal.processors.cache.persistence.file.RandomAccessFileIO.read(RandomAccessFileIO.java:67)
	at org.apache.ignite.internal.processors.cache.persistence.file.FilePageStore.read(FilePageStore.java:319)
	... 30 more
{noformat}
Any subsequent file operation will throw exception. Furthermore, this potentially may break LFS crash recovery.
We should either handle ClosedByInterruptException or delegate file I/O operations to internal thread.

Reproducer test is attached.
S2R:
1) Comment all lines in GridAbstractTest#beforeTestsStarted
2) Run test until failure (usually, 10-20 runs are enough).
",,agoncharuk,dpavlov,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 15:21;ivan.glukos;RestartGridTest.java;https://issues.apache.org/jira/secure/attachment/12884496/RestartGridTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 21 15:25:24 UTC 2017,,,,,,,,,,"0|i3jggf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 15:25;agoncharuk;Thanks, Alexei, merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Review docs for integration with Apache Zeppelin,IGNITE-6226,13098574,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ustas,ustas,ustas,30/Aug/17 14:45,26/Sep/17 14:45,14/Jul/23 06:20,20/Sep/17 11:05,2.1,,,,,2.3,,documentation,,,,0,,,,Now we have non actual documentation for Apache Zeppelin integration: https://apacheignite.readme.io/v1.1/docs/data-analysis-with-apache-zeppelin?edits=true,,dmagda,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 20 11:05:00 UTC 2017,,,,,,,,,,"0|i3jgdj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 19:09;dmagda;[~ustas], what's wrong with the current documentation? Please elaborate.

[~agura], please chime in.;;;","20/Sep/17 11:05;ustas;[~dmagda] I correct some inaccuracies (submit editions form) so now this [page|https://apacheignite.readme.io/v1.1/docs/data-analysis-with-apache-zeppelin?edits=true] up to date;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Agent fail to send task result on job fail.,IGNITE-6223,13098519,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,30/Aug/17 09:38,14/Sep/17 03:19,14/Jul/23 06:20,05/Sep/17 03:07,2.1,,,,,2.3,,wizards,,,,0,,,,On job fail Web agent return NPE instead of reason exception.,,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 14 03:19:24 UTC 2017,,,,,,,,,,"0|i3jg1b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 09:48;vsisko;Fixed send of task result when job execution is failed.;;;","04/Sep/17 06:25;anovikov;Reviewed. Looks good. [~pkonstantinov], please test.;;;","05/Sep/17 03:07;pkonstantinov;Tested.;;;","14/Sep/17 03:19;pkonstantinov;Re-tested in 2.1.5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Values of types int and long[] are not delivered via JDBC,IGNITE-6220,13098477,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,pranas,pranas,30/Aug/17 06:23,04/Sep/17 10:49,14/Jul/23 06:20,04/Sep/17 10:48,2.1,,,,,2.3,,jdbc,,,,0,arrays,,,"I've tried Low GC prototype to populate collocated server node without replication and access it via JDBC.

Issues detected:
* The JDBC column ""TIME"" with type long[] is not delivered;
* Duplicate entries in the result set;
* Key column of type int is used for filtering, but not delivered to the JDBC Record set.

To reproduce:
[Git:https://github.com/pranasblk/ignite-not-flushing/tree/MIssingJDBCTypes]

* Run IgniteNode main
* Run JDBC main / or connect via favourite JDBC supporting client",,githubbot,pranas,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 06:24;pranas;Screen Shot 2017-08-30 at 16.19.25.png;https://issues.apache.org/jira/secure/attachment/12884411/Screen+Shot+2017-08-30+at+16.19.25.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 04 10:49:20 UTC 2017,,,,,,,,,,"0|i3jfrz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 12:55;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2563

    IGNITE-6220 Values of types int and long[] are not delivered via JDBC

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6220

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2563.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2563
    
----
commit e49234cda6445786d325ea3f8ae8ad6d52936790
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-08-31T12:50:52Z

    IGNITE-6220 Values of types int and long[] are not delivered via JDBC

----
;;;","31/Aug/17 12:58;tledkov-gridgain;[~pranas], thanks for reproducer.
;;;","31/Aug/17 13:13;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2563%2Fhead] are OK.

[~vozerov], please review the patch.;;;","04/Sep/17 10:49;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2563
;;;","04/Sep/17 10:49;vozerov;Hi [~pranas], 
An issue with {{long[]}} is fixed in master. Everything should work fine now. Please let us know if you still experiencing any problems.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCache#loadCache executes local load in caller thread,IGNITE-6219,13098460,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dkarachentsev,vkulichenko,vkulichenko,30/Aug/17 04:56,24/Jul/19 16:38,14/Jul/23 06:20,06/Sep/17 09:02,2.1,,,,,2.3,,cache,,,,0,,,,"{{IgniteCache#loadCache}} method broadcasts an internal task under the hood. If one of the jobs are local (i.e. if {{loadCache}} is invoked on server node), this job is executed in a caller thread, potentially *before all or some remote requests are sent*. Since data loading is generally long running process, its duration doubles in this scenario.

Possible solution is to check the list of nodes before task execution, and if local node is there, execute on remote nodes first, and only then submit to local node. This way we make sure that remote nodes never wait for the local node.",,githubbot,ntikhonov,vkulichenko,,,,,,,,,,"dspavlov commented on issue #2548: IGNITE-6219 - IgniteCache#loadCache executes local load in caller thread
URL: https://github.com/apache/ignite/pull/2548#issuecomment-514707960
 
 
   
   IGNITE-6219 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:38;githubbot;600","dspavlov commented on pull request #2548: IGNITE-6219 - IgniteCache#loadCache executes local load in caller thread
URL: https://github.com/apache/ignite/pull/2548
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 06 08:55:13 UTC 2017,,,,,,,,,,"0|i3jfo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 12:18;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/2548

    IGNITE-6219 - IgniteCache#loadCache executes local load in caller thread

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6219

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2548.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2548
    
----
commit fcda4f1af212883f2b12f3185a5f897157f82a8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-08-30T10:39:05Z

    IGNITE-6219 - IgniteCache#loadCache executes local load in caller thread

----
;;;","06/Sep/17 08:55;ntikhonov;Looks good for me. Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Avoid inheritdoc on public APIs,IGNITE-6215,13098275,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,29/Aug/17 13:46,29/Aug/17 13:57,14/Jul/23 06:20,29/Aug/17 13:57,,,,,,2.3,,platforms,,,,0,.NET,,,"{{<inheritdoc />}} indicates inherited XMLDoc, which is used by documentation generators.

However, it is not recognized by .NET XML documentation generator (which produces Apache.Ignite.Core.xml file), so public APIs should never use that.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 29 13:56:53 UTC 2017,,,,,,,,,,"0|i3jejb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 13:56;ptupitsyn;Fixed in master: {{9c7853164d990d5e93acfb5d09158a6545ac6820}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary metadata update may hang,IGNITE-6214,13098272,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmekhanikov,dmekhanikov,dmekhanikov,29/Aug/17 13:45,05/Sep/17 15:32,14/Jul/23 06:20,04/Sep/17 16:25,,,,,,2.3,,,,,,0,,,,"Sometimes client may hang when performing concurrent SQL updates.

Reproducing code is in the attachment.

The reason is that insert triggers metadata update, which may leave some of the nodes infinitely waiting when performed concurrently.",,agura,dmekhanikov,dpavlov,githubbot,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 13:49;dmekhanikov;SqlInserter.java;https://issues.apache.org/jira/secure/attachment/12884252/SqlInserter.java","29/Aug/17 13:47;dmekhanikov;sql-test-client.xml;https://issues.apache.org/jira/secure/attachment/12884250/sql-test-client.xml","29/Aug/17 13:47;dmekhanikov;sql-test-default.xml;https://issues.apache.org/jira/secure/attachment/12884249/sql-test-default.xml","29/Aug/17 13:47;dmekhanikov;sql-test.xml;https://issues.apache.org/jira/secure/attachment/12884251/sql-test.xml",,,,,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 05 15:32:14 UTC 2017,,,,,,,,,,"0|i3jein:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 15:19;dmekhanikov;[PR #2561|https://github.com/apache/ignite/pull/2561] please review.;;;","31/Aug/17 15:27;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/2571

    IGNITE-6214 resolve problem with concurrent metadata updates

    Created for testing

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2.1.4-p1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2571.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2571
    
----
commit 84c7427a53a8e1712b1d0b763d7539c9cb844cb6
Author: Sergey Stronchinskiy <gurustronpublic@gmail.com>
Date:   2017-07-04T11:51:25Z

    IGNITE-5532 .NET: Split CacheLinqTest into partial classes
    
    This closes #2226

commit 64c156e9252395504af00f09d934f36b6bc21913
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-04T16:42:33Z

    IGNITE-5663: ODBC: Closing cursor do not reset prepared statement anymore

commit 80c95ff79f344daf1fca3f094733a24bac2a218d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-05T15:41:28Z

    IGNITE-5576: Added Compute::Run() for C++

commit 836906c89dfb880ac602046c37b3a2dba3ebdc46
Author: samaitra <saikat.maitra@gmail.com>
Date:   2017-07-06T04:28:15Z

    IGNITE-5695 FlinkIgniteSinkSelfTest is failing due to conflicting default test timeout and default flush frequency - Fixes #2241.
    
    Signed-off-by: samaitra <saikat.maitra@gmail.com>

commit 651ffc544bbc32cded55626adcd3ed4cc74f11ce
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-06T05:00:08Z

    Removed unnecessary line from the comments.

commit d1d6802378d874b039f775fe787f78c507661bb2
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-07T09:36:13Z

    Merge branch 'ignite-2.1'

commit 45cd87fe73db117f5148ed2006f8de8d2517bbfe
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-30T17:23:55Z

    IGNITE-5554 ServiceProcessor may process failed reassignments in timeout thread

commit fa974286e8f066a8d6aa57519edf5ec7761be095
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-07T13:49:15Z

    IGNITE-5582: Implemented Compute::Broadcast for C++

commit 01f504ff83cc77f80d37981b5c5a15b653861bbd
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-07-10T12:03:01Z

    IGNITE-5087 Enum comparison fails after marshal-unmarshal with BinaryMarshaller.

commit ecfbc2c97464ad7da3f24afaaf1868a2d2fdb87e
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-11T09:17:41Z

    Merge branch 'ignite-2.1'
    
    # Conflicts:
    #	modules/platforms/dotnet/Apache.Ignite.Core.Tests/Apache.Ignite.Core.Tests.csproj

commit 1be9b40c37efcbf332ebeeefc865c2fe864339e7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-11T09:42:54Z

    Exchange future cleanup, added special tasks for reassign/force rebalance.

commit 8d4a0c2ca2abc17a1d54fa0d33b161531fa59b12
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-11T09:49:16Z

    Merge branch 'ignite-2.1'

commit bf25b5c52be044f07076c0800447230c75174db3
Author: Slava Koptilin <slava.koptilin@gmail.com>
Date:   2017-07-07T12:35:33Z

    ignite-5562: assert statements were changed to the 'if' blocks

commit e93b28488693381fcd232de93087ab8ec1d0f5bb
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-11T11:18:52Z

    ignite-5446 Only lateAffinity logic in CacheAffinitySharedManager.

commit 5c363184c80f2fd8b79f1075d1eacbf9af5369a1
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-07-11T19:20:16Z

    Simplified Memory Policies Example

commit b95f76f8a0a3a7e920f78f20b3d814112fc6d522
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-12T05:47:04Z

    ignite-5727 Call TcpCommunicationSpi's discovery listener first

commit 120384fca2b5f6f141207697f776d7859afa857f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T06:48:51Z

    Merge branch 'ignite-2.1'

commit 5394bbdeff4e9fb97d3b413bf30001ede580bdd7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-13T10:30:59Z

    Unnecessary synchronous rollback in GridDhtTxLocal.prepareAsync

commit 00c6b6c4ba00fa6577f74fc95b378737fb5a789c
Author: Alexander Menshikov <sharplermc@gmail.com>
Date:   2017-07-13T12:24:59Z

    IGNITE-5567 Make benchmark Ignite.reentrantLock vs IgniteCache.lock

commit 18bdfe96a1e579371108c661e3374183c58a296d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T12:42:30Z

    Fixed NPE in tests

commit 7338445ac9c1a2343fd41cdd20785de07b727796
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-07-13T13:00:08Z

    IGNITE-5597 - Fix javadoc in Affinity and AffinityFunction for REPLICATED cache. This closes #2268.

commit d9ed07c67e4a4ff3a9de543cbe039ac2a48f03a0
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T14:32:06Z

    Functionality of muted test is debated now

commit 871d9260f3b32bed5273852dbdb74c758f73d383
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T15:34:01Z

    Functionality of GridVersionSelfTest is debated now

commit 2788a740c9aec88d14808d5927a346d121ad42b1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:23:42Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-2.1.3

commit 1e7e692bd4ce0fe2e092117190b59382840317a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:25:08Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit abe8e67e63018305cf0c2065282380b0cf9b762c
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T10:22:54Z

    Merge branch 'ignite-2.1'

commit 9fa78849c1ecc45fa56f518ad229e76725c27790
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-14T11:12:29Z

    IGNITE-4831: Add an option to disable MBeans. This closes #2265.
    
    (cherry picked from commit 7283edb)

commit d5cc82cb09cf37da783c9bcfbf6743b8910ceb30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:09Z

    GridCacheAbstractNodeRestartSelfTest stopping all grids after each test to prevent subsequent test failures when one test fails or hangs

commit 8f1d732fc8065e59a29bb538456194d7f4edd3e9
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:17Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 1d75560f9f418628da7d212207267482a1ea16aa
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T13:07:49Z

    Merge branch 'master' into ignite-2.1.3

----
;;;","01/Sep/17 15:27;sergey-chugunov;reviewed the change, looks good to me;;;","04/Sep/17 16:25;agura;Merged to master branch.;;;","05/Sep/17 15:32;githubbot;Github user dmekhanikov closed the pull request at:

    https://github.com/apache/ignite/pull/2571
;;;","05/Sep/17 15:32;githubbot;GitHub user dmekhanikov reopened a pull request:

    https://github.com/apache/ignite/pull/2571

    IGNITE-6214 resolve problem with concurrent metadata updates

    Created for testing

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-2.1.4-p1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2571.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2571
    
----
commit 84c7427a53a8e1712b1d0b763d7539c9cb844cb6
Author: Sergey Stronchinskiy <gurustronpublic@gmail.com>
Date:   2017-07-04T11:51:25Z

    IGNITE-5532 .NET: Split CacheLinqTest into partial classes
    
    This closes #2226

commit 64c156e9252395504af00f09d934f36b6bc21913
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-04T16:42:33Z

    IGNITE-5663: ODBC: Closing cursor do not reset prepared statement anymore

commit 80c95ff79f344daf1fca3f094733a24bac2a218d
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-05T15:41:28Z

    IGNITE-5576: Added Compute::Run() for C++

commit 836906c89dfb880ac602046c37b3a2dba3ebdc46
Author: samaitra <saikat.maitra@gmail.com>
Date:   2017-07-06T04:28:15Z

    IGNITE-5695 FlinkIgniteSinkSelfTest is failing due to conflicting default test timeout and default flush frequency - Fixes #2241.
    
    Signed-off-by: samaitra <saikat.maitra@gmail.com>

commit 651ffc544bbc32cded55626adcd3ed4cc74f11ce
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-06T05:00:08Z

    Removed unnecessary line from the comments.

commit d1d6802378d874b039f775fe787f78c507661bb2
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-07T09:36:13Z

    Merge branch 'ignite-2.1'

commit 45cd87fe73db117f5148ed2006f8de8d2517bbfe
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-30T17:23:55Z

    IGNITE-5554 ServiceProcessor may process failed reassignments in timeout thread

commit fa974286e8f066a8d6aa57519edf5ec7761be095
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-07T13:49:15Z

    IGNITE-5582: Implemented Compute::Broadcast for C++

commit 01f504ff83cc77f80d37981b5c5a15b653861bbd
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-07-10T12:03:01Z

    IGNITE-5087 Enum comparison fails after marshal-unmarshal with BinaryMarshaller.

commit ecfbc2c97464ad7da3f24afaaf1868a2d2fdb87e
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-11T09:17:41Z

    Merge branch 'ignite-2.1'
    
    # Conflicts:
    #	modules/platforms/dotnet/Apache.Ignite.Core.Tests/Apache.Ignite.Core.Tests.csproj

commit 1be9b40c37efcbf332ebeeefc865c2fe864339e7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-11T09:42:54Z

    Exchange future cleanup, added special tasks for reassign/force rebalance.

commit 8d4a0c2ca2abc17a1d54fa0d33b161531fa59b12
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-11T09:49:16Z

    Merge branch 'ignite-2.1'

commit bf25b5c52be044f07076c0800447230c75174db3
Author: Slava Koptilin <slava.koptilin@gmail.com>
Date:   2017-07-07T12:35:33Z

    ignite-5562: assert statements were changed to the 'if' blocks

commit e93b28488693381fcd232de93087ab8ec1d0f5bb
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-11T11:18:52Z

    ignite-5446 Only lateAffinity logic in CacheAffinitySharedManager.

commit 5c363184c80f2fd8b79f1075d1eacbf9af5369a1
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-07-11T19:20:16Z

    Simplified Memory Policies Example

commit b95f76f8a0a3a7e920f78f20b3d814112fc6d522
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-12T05:47:04Z

    ignite-5727 Call TcpCommunicationSpi's discovery listener first

commit 120384fca2b5f6f141207697f776d7859afa857f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T06:48:51Z

    Merge branch 'ignite-2.1'

commit 5394bbdeff4e9fb97d3b413bf30001ede580bdd7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-13T10:30:59Z

    Unnecessary synchronous rollback in GridDhtTxLocal.prepareAsync

commit 00c6b6c4ba00fa6577f74fc95b378737fb5a789c
Author: Alexander Menshikov <sharplermc@gmail.com>
Date:   2017-07-13T12:24:59Z

    IGNITE-5567 Make benchmark Ignite.reentrantLock vs IgniteCache.lock

commit 18bdfe96a1e579371108c661e3374183c58a296d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T12:42:30Z

    Fixed NPE in tests

commit 7338445ac9c1a2343fd41cdd20785de07b727796
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-07-13T13:00:08Z

    IGNITE-5597 - Fix javadoc in Affinity and AffinityFunction for REPLICATED cache. This closes #2268.

commit d9ed07c67e4a4ff3a9de543cbe039ac2a48f03a0
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T14:32:06Z

    Functionality of muted test is debated now

commit 871d9260f3b32bed5273852dbdb74c758f73d383
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T15:34:01Z

    Functionality of GridVersionSelfTest is debated now

commit 2788a740c9aec88d14808d5927a346d121ad42b1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:23:42Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-2.1.3

commit 1e7e692bd4ce0fe2e092117190b59382840317a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:25:08Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit abe8e67e63018305cf0c2065282380b0cf9b762c
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T10:22:54Z

    Merge branch 'ignite-2.1'

commit 9fa78849c1ecc45fa56f518ad229e76725c27790
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-14T11:12:29Z

    IGNITE-4831: Add an option to disable MBeans. This closes #2265.
    
    (cherry picked from commit 7283edb)

commit d5cc82cb09cf37da783c9bcfbf6743b8910ceb30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:09Z

    GridCacheAbstractNodeRestartSelfTest stopping all grids after each test to prevent subsequent test failures when one test fails or hangs

commit 8f1d732fc8065e59a29bb538456194d7f4edd3e9
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:17Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 1d75560f9f418628da7d212207267482a1ea16aa
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T13:07:49Z

    Merge branch 'master' into ignite-2.1.3

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected setting local deployment owner anyone node,IGNITE-6213,13098267,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,v.pyatkov,v.pyatkov,29/Aug/17 13:16,02/Aug/19 11:01,14/Jul/23 06:20,22/Sep/17 09:33,,,,,,2.3,,,,,,0,,,,"In my test I have seen, when one node tune up {{locDepOwner}} flag suddenly.
{noformat}
16:55:47.868 
[ DEBUG] 
[ o.a.i.i.p.c.GridCacheDeploymentManager] 
[ T:] - Prepared grid cache deployable 
[ dep=GridDeploymentInfoBean 
[ clsLdrId=aefa3c4fd51-12bb727e-4815-4ab2-8f8c-cc6fd52c8553, depMode=SHARED, userVer=0, locDepOwner=true, participants=null], deployable=GridNearAtomicSingleUpdateRequest 
[ key=UserKeyCacheObjectImpl 
[ part=111, val=4翿翿, hasValBytes=true], super=GridNearAtomicSingleUpdateRequest 
[ key=UserKeyCacheObjectImpl 
[ part=111, val=4翿翿, hasValBytes=true], parent=GridNearAtomicAbstractSingleUpdateRequest 
[ nodeId=45acc827-8a2d-47d3-aa04-94936ad25ac2, futId=81921, topVer=AffinityTopologyVersion 
[ topVer=4, minorTopVer=0], parent=GridNearAtomicAbstractUpdateRequest 
[ res=null, flags=]]]]]
{noformat}

By the reason global participant was been registered:

{noformat}
16:55:47.871 
[  DEBUG] 
[  o.a.i.i.m.d.GridDeploymentPerVersionStore] 
[  T:] - Explicitly added participant 
[  dep=SharedDeployment 
[  rmv=false, super=GridDeployment 
[  ts=1503050146264, depMode=SHARED, clsLdr=GridDeploymentClassLoader 
[  id=acaa3c4fd51-45acc827-8a2d-47d3-aa04-94936ad25ac2, singleNode=false, nodeLdrMap={12bb727e-4815-4ab2-8f8c-cc6fd52c8553=aefa3c4fd51-12bb727e-4815-4ab2-8f8c-cc6fd52c8553, 101abc71-83b4-4a87-bb07-14e4cbc7226e=2c044c4fd51-101abc71-83b4-4a87-bb07-14e4cbc7226e, 9d30737f-44d2-4414-b84d-25f032484290=e70b3c4fd51-9d30737f-44d2-4414-b84d-25f032484290}, p2pTimeout=5000, usrVer=0, depMode=SHARED, quiet=false], clsLdrId=acaa3c4fd51-45acc827-8a2d-47d3-aa04-94936ad25ac2, userVer=0, loc=false, sampleClsName=com.sbt.dpl.gridgain.index.InvokeIndexAdder, pendingUndeploy=false, undeployed=false, usage=0]], nodeId=12bb727e-4815-4ab2-8f8c-cc6fd52c8553, ldrId=aefa3c4fd51-12bb727e-4815-4ab2-8f8c-cc6fd52c8553]
{noformat}

And after that I am geting the Exception when try to get class from node where the class was not located:

{noformat}
16:55:50.684 [ERROR] [o.a.i.i.p.job.GridJobProcessor] [T:] - Task was not deployed or was redeployed since task execution [taskName=com.sbt.azimuth_psi.publisher.forms.computing.parallelBatchCollectForm$TestMapFunction, taskClsName=com.sbt.azimuth_psi.publisher.forms.computing.parallelBatchCollectForm$TestMapFunction, codeVer=0, clsLdrId=2c044c4fd51-101abc71-83b4-4a87-bb07-14e4cbc7226e, seqNum=1503050088642, depMode=SHARED, dep=null]
org.apache.ignite.IgniteDeploymentException: Task was not deployed or was redeployed since task execution [taskName=com.sbt.azimuth_psi.publisher.forms.computing.parallelBatchCollectForm$TestMapFunction, taskClsName=com.sbt.azimuth_psi.publisher.forms.computing.parallelBatchCollectForm$TestMapFunction, codeVer=0, clsLdrId=2c044c4fd51-101abc71-83b4-4a87-bb07-14e4cbc7226e, seqNum=1503050088642, depMode=SHARED, dep=null]
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1160) ~[ignite-core-2.1.3.jar:2.1.3]
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1908) [ignite-core-2.1.3.jar:2.1.3]
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556) [ignite-core-2.1.3.jar:2.1.3]
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184) [ignite-core-2.1.3.jar:2.1.3]
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126) [ignite-core-2.1.3.jar:2.1.3]
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097) [ignite-core-2.1.3.jar:2.1.3]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_80]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_80]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_80]
{noformat}
",,dpavlov,githubbot,v.pyatkov,,,,,,,,,,"dspavlov commented on issue #2546: IGNITE-6213
URL: https://github.com/apache/ignite/pull/2546#issuecomment-517659887
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:01;githubbot;600","dspavlov commented on pull request #2546: IGNITE-6213
URL: https://github.com/apache/ignite/pull/2546
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 09:14:38 UTC 2017,,,,,,,,,,"0|i3jehj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Aug/17 09:07;githubbot;GitHub user vldpyatkov opened a pull request:

    https://github.com/apache/ignite/pull/2546

    IGNITE-6213

    Unexpected setting local deployment owner anyone node

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6213

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2546.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2546
    
----
commit 9c4754ad7935e4696df841629c728b993f59c95d
Author: vd-pyatkov <vpyatkov@gridgain.com>
Date:   2017-08-30T09:04:55Z

    IGNITE-6213
    Unexpected setting local deployment owner anyone node

----
;;;","30/Aug/17 09:21;v.pyatkov;I have prepared a solution with will be allow to workarounded the issue.
All server nodes should add a JVM flag:
{code}
-DIGNITE_DISABLE_P2P_DEPLOYMENT_OWNERSHIP=true
{code}
by default value is _false_ (standard behavior).
It will not allow any server assign {{locDepOwner}} flag as _true_.
Look at upper PR.;;;","21/Sep/17 17:19;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2723

    IGNITE-6213 remove locDepOwner flag, and mark as deprecated

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-6213

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2723.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2723
    
----
commit 6349c172547e0280e020aa3b02440b2975d7f328
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-09-21T17:16:58Z

    IGNITE-6213 remove locDepOwner flag, and mark as deprecated

----
;;;","22/Sep/17 09:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2723
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion error: Invalid node2part,IGNITE-6212,13098261,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ilantukh,ilantukh,ilantukh,29/Aug/17 13:01,01/Aug/19 21:47,14/Jul/23 06:20,27/Sep/17 18:41,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,Reproduced by IgniteServiceDynamicCachesSelfTest with ~10% probability. Leads to hang-up.,,agura,githubbot,ilantukh,sboikov,,,,,,,,,"dspavlov commented on issue #2538: IGNITE-6212 : Fixed assertion error for invalid node2part.
URL: https://github.com/apache/ignite/pull/2538#issuecomment-517470194
 
 
   
   IGNITE-6212 | Closed
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 21:47;githubbot;600","dspavlov commented on pull request #2538: IGNITE-6212 : Fixed assertion error for invalid node2part.
URL: https://github.com/apache/ignite/pull/2538
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 21:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 30 15:04:42 UTC 2017,,,,,,,,,,"0|i3jeg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 13:45;ilantukh;[~sboikov],
Please review.;;;","29/Aug/17 13:53;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2538

    IGNITE-6212 : Fixed assertion error for invalid node2part.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6212

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2538.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2538
    
----
commit bd04c328ea547064b2bdbcae8abe358d79e85b81
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-29T13:45:02Z

    ignite-6212 : Fixed assertion error for invalid node2part.

----
;;;","30/Aug/17 11:07;sboikov;Looks ok.

Thanks;;;","30/Aug/17 15:04;agura;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLBindParameter should not unbind parameter if the ParameterValuePtr is NULL,IGNITE-6211,13098224,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,29/Aug/17 10:25,11/Sep/17 16:27,14/Jul/23 06:20,01/Sep/17 14:21,2.1,,,,,2.3,,odbc,,,,0,important,,,"Currently, {{SQLBindParameter}} unbinds parameter if the {{ParameterValuePtr}} is {{NULL}} in analogy with {{SQLBindCol}}. Howeverm according to https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/sqlbindparameter-function there should not be such a behaviour. {{ParameterValuePtr}} can be set to {{NULL}} for example if user wants to bind {{SQL_NULL_DATA}} parameter.",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 16:27:46 UTC 2017,,,,,,,,,,"0|i3je7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 17:09;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2573

    IGNITE-6211: ODBC: SQLBindParameter now does not unbind parameter if the ParameterValuePtr is NULL

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6211

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2573.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2573
    
----
commit 0b0bc5084cee188c56ce9549bb54cbc68d1c41f0
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-31T15:28:23Z

    IGNITE-6211: Added test

commit 4e00582abf4ff530ae13cf0eb6870e382098e63a
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-31T16:46:03Z

    IGNITE-6211: Issue fixed

----
;;;","01/Sep/17 09:24;isapego;Ready. [~ptupitsyn], can you take a look?;;;","01/Sep/17 11:20;ptupitsyn;[~isapego] looks good to me.;;;","01/Sep/17 14:21;isapego;Merged to master.;;;","11/Sep/17 16:27;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2573
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inefficient memory consumption for checkpoint buffer,IGNITE-6210,13098218,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,29/Aug/17 10:08,21/Sep/17 11:28,14/Jul/23 06:20,19/Sep/17 14:58,2.1,,,,,2.3,,persistence,,,,0,,,,"Current implementation allows configure checkpoint buffer size in PersistentStoreConfiguration, but checkpoint buffer will be created for each memory configuration with size equals the one indicated in PersistentStoreConfiguration.

For example:
{code}
        PersistentStoreConfiguration prCfg = new PersistentStoreConfiguration();
        prCfg.setCheckpointingFrequency(5L * 1024L * 1024L * 1024L); // 5GB.

        MemoryConfiguration memCfg = new MemoryConfiguration();

        MemoryPolicyConfiguration pl1 = new MemoryPolicyConfiguration();

        pl1.setMaxSize(100L * 1024L * 1024L); // 100 Mb.

        MemoryPolicyConfiguration pl2 = new MemoryPolicyConfiguration();

        pl2.setMaxSize(10L * 1024L * 1024L * 1024L); // 10GB.

        memCfg.setMemoryPolicies(pl1, pl2);
{code}

pl1(max size 10Gb) will be have checkpoint buffer = 5GB and pl2(max size 100Mb) buffer= 5GB
",,DmitriyGovorukhin,githubbot,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 18 14:04:33 UTC 2017,,,,,,,,,,"0|i3je6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 10:47;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2536

    IGNITE-6210 Size of the checkpoint buffer is limited 

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-6210

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2536.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2536
    
----
commit e0956a4db319113219b46f0fc033b1564423f831
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-08-29T10:46:20Z

    IGNITE-6210 Size of the checkpoint buffer is limited by the size of the memory policy

----
;;;","15/Sep/17 18:31;ivan.glukos;Looks good.;;;","18/Sep/17 14:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2536
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.dom4j.QName can't be serialized,IGNITE-6200,13097956,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ein,ascherbakov,ascherbakov,28/Aug/17 12:43,29/Oct/17 09:42,14/Jul/23 06:20,18/Sep/17 12:53,2.1,,,,,2.3,,,,,,0,,,,"Exception:

{noformat}
class org.apache.ignite.binary.BinaryObjectException: Failed to marshal object with optimized marshaller: org.dom4j.QName@364492 [name: test namespace: ""org.dom4j.Namespace@e20 [Namespace: prefix qq mapped to URI """"]""]
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:186)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.marshal(GridBinaryMarshaller.java:248)
	at org.apache.ignite.internal.binary.BinaryMarshaller.marshal0(BinaryMarshaller.java:82)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.processors.cache.MarshallerTest.test(MarshallerTest.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to serialize object: org.dom4j.QName@364492 [name: test namespace: ""org.dom4j.Namespace@e20 [Namespace: prefix qq mapped to URI """"]""]
	at org.apache.ignite.internal.marshaller.optimized.OptimizedMarshaller.marshal0(OptimizedMarshaller.java:206)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9836)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:179)
	... 15 more
Caused by: java.io.IOException: java.io.NotActiveException: Not in writeObject() call.
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:324)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedClassDescriptor.write(OptimizedClassDescriptor.java:827)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObject0(OptimizedObjectOutputStream.java:224)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeObjectOverride(OptimizedObjectOutputStream.java:152)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:344)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedMarshaller.marshal0(OptimizedMarshaller.java:201)
	... 18 more
Caused by: java.io.NotActiveException: Not in writeObject() call.
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.defaultWriteObject(OptimizedObjectOutputStream.java:684)
	at org.dom4j.QName.writeObject(QName.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.apache.ignite.internal.marshaller.optimized.OptimizedObjectOutputStream.writeSerializable(OptimizedObjectOutputStream.java:318)
	... 23 more
{noformat}

Reproducer:

{noformat}
public void test() throws Exception {
        try {
            IgniteEx ex = startGrid(0);

            QName qName = new QName(""test"", new Namespace(""qq"", null), ""q"");

            byte[] marshal = ex.configuration().getMarshaller().marshal(qName);
        } finally {
            stopAllGrids();
        }
    }
{noformat}",,agura,ascherbakov,ein,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Oct 29 09:42:47 UTC 2017,,,,,,,,,,"0|i3jclr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/17 09:32;ein;When writing a serializable object by the {{OptimizedObjectOutputStream}} the following logic occurs:

1. Initial call to {{OptimizedObjectOutputStream.writeObject0}} will find {{OptimizedClassDescriptor}} and it's {{write}} consequently invokes {{OptimizedObjectOutputStream.writeSerializable}}

2. The {{writeSerializable}} initialize {{curObj}} to the serializable object instance and invokes its {{writeObject}} method.

3. If the implementations will call {{OptimizedObjectOutputStream.defaultWriteObject}} right away then no error occurs.

4. But if the implementation first call {{OptimizedObjectOutputStream.writeObject}} then {{curObj}} will be reset and consequent call causes the error.

{{org.dom4j.QName}} has the such implementation of {{writeObject}} method.

The fix is simple: store {{curObj}} reference at the start of {{OptimizedObjectOutputStream.writeObject0}}, and restore at the end.;;;","13/Sep/17 10:49;githubbot;GitHub user akuramshingg opened a pull request:

    https://github.com/apache/ignite/pull/2654

    IGNITE-6200 org.dom4j.QName can't be serialized

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6200

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2654.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2654
    
----
commit c4a0459bf1dfa4dd9e45ebed1b233608f5fa73d6
Author: Alexandr Kuramshin <ein.nsk.ru@gmail.com>
Date:   2017-09-13T10:47:46Z

    IGNITE-6200 org.dom4j.QName can't be serialized

----
;;;","13/Sep/17 10:58;ein;Has been tested locally by running modified test:

{{org.apache.ignite.internal.marshaller.optimized.OptimizedObjectStreamSelfTest}}.

Found the same bug in OptimizedObjectInputStream, fixed at once:

https://github.com/apache/ignite/pull/2654

https://github.com/gridgain/apache-ignite/tree/ignite-6200;;;","15/Sep/17 11:28;ein;TC looks good, please review;;;","18/Sep/17 12:52;agura;LGTM. Merged to master branch.;;;","29/Oct/17 09:42;githubbot;Github user akuramshingg closed the pull request at:

    https://github.com/apache/ignite/pull/2654
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ML profile is missing in 2.1 binary release,IGNITE-6193,13097860,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,oignatenko,dmagda,dmagda,28/Aug/17 01:58,22/Jan/18 15:26,14/Jul/23 06:20,07/Sep/17 09:30,,,,,,2.3,,examples,ml,,,0,important,ml,,"In Apache Ignite 2.0 we added the ML profile to the binary release that allowed activating this functionality and running the examples easily. The getting started is written based on the profile presence:
https://apacheignite.readme.io/docs/machine-learning#section-getting-started

The profile is missing for 2.1 release. To reproduce the issue just download 2.1 binary release and follow the getting started section, you'll stumble on step 4:
https://apacheignite.readme.io/docs/machine-learning#section-getting-started

This has to be fixed as soon as possible and the fix should be merged both in the master and in a branch of the urgent Ignite release that is discussed here:
http://apache-ignite-developers.2346864.n4.nabble.com/DISCUSSION-Urgent-Ignite-bug-fix-release-td21292.html",,avinogradov,dmagda,githubbot,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6329,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 22 15:26:49 UTC 2018,,,,,,,,,,"0|i3jc0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Aug/17 11:57;githubbot;GitHub user oignatenko opened a pull request:

    https://github.com/apache/ignite/pull/2537

    IGNITE-6193 ML profile is missing in 2.1 binary release

    - verified with diffs overview and trial local build

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6193

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2537.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2537
    
----
commit 8bdda9ba9146c8e12713a74eb1d1a5612655c370
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-08-29T11:55:15Z

    IGNITE-6193 ML profile is missing in 2.1 binary release
    - verified with diffs overview and trial local build

----
;;;","29/Aug/17 12:10;oignatenko;I checked contents of older bundles apache-ignite-2.0.0-src.zip and apache-ignite-fabric-2.0.0-bin.zip and these bundles indeed allow activation of ML profile.

Compared to these, respective newer bundles apache-ignite-2.1.0-src.zip has it but apache-ignite-fabric-2.1.0-bin.zip miss that, meaning reported issue is a regression.;;;","29/Aug/17 13:56;oignatenko;(/) TC: https://ci.ignite.apache.org/viewLog.html?buildId=799856&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteExamples

(/) I managed to reproduce reported issue in branch ignite-6193 prior to the changes (missing ML in examples) and verify that it was resolved after the changes (ML appeared in examples and respective examples run as expected).

(/) Verified that Ignite builds properly with the changes (build per DEVNOTES and per [readme.io|https://apacheignite.readme.io/docs/machine-learning]).;;;","30/Aug/17 11:18;avinogradov;[~oignatenko], 
Merged to 2.2 and master.
Thanks for contribution.;;;","30/Aug/17 12:33;githubbot;Github user oignatenko closed the pull request at:

    https://github.com/apache/ignite/pull/2537
;;;","06/Sep/17 13:54;oignatenko;need to port ml-profile related changes from plain examples pom into pom-standalone and pom-standalone-lgpl in order to complete this task;;;","06/Sep/17 14:16;githubbot;GitHub user oignatenko opened a pull request:

    https://github.com/apache/ignite/pull/2600

    IGNITE-6193 ML profile is missing in 2.1 binary release

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-9163-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2600.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2600
    
----
commit 737874f65d2aa143a79dd5f6b0d223e07a4eceee
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-08-29T10:24:20Z

    IGNITE-6204 Backport optimizations of checkpointing algorithm into 2.2

commit abb675f3355494b1f1ab502718aa0ad2249cb78b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T15:35:49Z

    IGNITE-6204 Backport optimizations of checkpointing algorithm into 2.2 (hotfix)

commit c06ceba8d014ded7519a37583cb8914f2ef064d9
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-08-30T11:15:32Z

    IGNITE-6193 ML profile is missing in 2.1 binary release

commit d51171f11a566d0019b7482d990afc23eccc9f05
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-09-01T09:48:38Z

    IGNITE-6182 Change default max memory size from 80% to 20%

commit 1fb2fe04fd5e08bac16e79f572893f2fa7a3ad38
Author: devozerov <vozerov@gridgain.com>
Date:   2017-09-04T14:41:30Z

    IGNITE-6182: Improved message.

commit 94641a9313342bdb7782690f0df6f076bc400df8
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-09-05T10:50:55Z

    IGNITE-5817 deleted deploy-ignite sources profile

commit e469ab6861202e88fc066608870e4a6ae2c3424e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-27T16:39:51Z

    IGNITE-5771: Added Ignite::SetActive() for C++
    
    (cherry picked from commit 47fea40)

commit be126e1eee4a2d6d997213d8d705733933bb0d01
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-09-06T13:57:02Z

    IGNITE-6193 ML profile is missing in 2.1 binary release
    - porting changes to standalone and lgpl pom files from regular one
    -- verified with diffs overview

----
;;;","06/Sep/17 15:59;githubbot;GitHub user oignatenko opened a pull request:

    https://github.com/apache/ignite/pull/2604

    IGNITE-6193 ML profile is missing in 2.1 binary release

    - porting changes to standalone and lgpl pom files from regular one
    -- verified with diffs overview

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6193-3

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2604.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2604
    
----
commit 1501011b5fff5e1ef136081a73488c870177a76a
Author: Oleg Ignatenko <oignatenko@gridgain.com>
Date:   2017-09-06T15:56:23Z

    IGNITE-6193 ML profile is missing in 2.1 binary release
    - porting changes to standalone and lgpl pom files from regular one
    -- verified with diffs overview

----
;;;","06/Sep/17 16:32;oignatenko;[Generated examples pom at TC|https://ci.ignite.apache.org/repository/download/IgniteRelease_ZzzMlIgniteRelease3PrepareVote/813695:id/vote/apache-ignite-fabric-2.2.0-bin.zip%21/apache-ignite-fabric-2.2.0-bin/examples/pom.xml] looks as expected: ml.folder property and ml profile are present at the right places.

[Anton Vinogradov|https://issues.apache.org/jira/secure/ViewProfile.jspa?name=avinogradov], per my testing the fix is ready for merge, could you please take a look? [Pull request #2604|https://github.com/apache/ignite/pull/2604];;;","07/Sep/17 09:30;avinogradov;Merged to ignite-2.2 and master.
Thanks for contribution.;;;","07/Sep/17 09:52;githubbot;Github user oignatenko closed the pull request at:

    https://github.com/apache/ignite/pull/2604
;;;","22/Jan/18 15:26;githubbot;Github user oignatenko closed the pull request at:

    https://github.com/apache/ignite/pull/2600
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite-ML does not compile,IGNITE-6192,13097830,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,27/Aug/17 14:27,28/Sep/17 06:54,14/Jul/23 06:20,27/Aug/17 14:35,,,,,,2.3,,,,,,0,important,ml,,"Ignite ML module does not compile with this error:

[19:06:28]W:	 [Step 10/12] [ERROR] /data/teamcity/work/6256635eb5425b7f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/Blas.java:[21,32] package com.github.fommil.netlib does not exist
[19:06:28]W:	 [Step 10/12] [ERROR] /data/teamcity/work/6256635eb5425b7f/incubator-ignite/modules/ml/src/main/java/org/apache/ignite/ml/math/Blas.java:[44,30] cannot find symbol
[19:06:28] :	 [Step 10/12]   symbol:   class BLAS

I've checked modules/ml/pom.xml file and I think the reason is line:

            <type>pom</type>

in this dependency:

        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>core</artifactId>
            <version>${netlibjava.version}</version>
            <type>pom</type>
        </dependency>

I've double-checked three times on two different machines, after removing the line module does compile. ",,oignatenko,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 28 10:22:28 UTC 2017,,,,,,,,,,"0|i3jbtz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Aug/17 14:35;oleg-ostanin;Already fixed.;;;","28/Aug/17 10:22;oignatenko;(i) root cause for this issue (pom type for netlib dependency) was introduced in master in IGNITE-5777 with [commit ece7cf9|https://github.com/apache/ignite/commit/ece7cf9242c36e2a9fdf043a6d847d70ba924fbc#diff-d8a438a14111285f399c81fb836d2465] and fixed in IGNITE-5280 in [commit 46ec148|https://github.com/apache/ignite/commit/46ec148ca9ae7ecc668c2c0bb9547140d05d68e2#diff-d8a438a14111285f399c81fb836d2465];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLFreeStmt failing if called before all the rows from the result set were fetched.,IGNITE-6188,13097614,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,25/Aug/17 13:41,11/Sep/17 16:27,14/Jul/23 06:20,04/Sep/17 12:49,2.1,,,,,2.3,,odbc,,,,0,important,,,"Steps to reproduce: 
1. Execute select query with more then 1 row in result set.
2. Fetch results and close the cursor before detecting end of result set.
3. Check for statement error.

Error message:
{noformat}
HY000: Failed to find query with ID: 10
{noformat}",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 11 16:27:34 UTC 2017,,,,,,,,,,"0|i3jahz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 16:46;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2581

    IGNITE-6188: ODBC: Fix for SQLFreeStmt(SQL_CLOSE).

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6188

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2581.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2581
    
----
commit 54f1c71c6a743406bba4f82ce1bb0810912dece2
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-01T16:29:08Z

    IGNITE-6188: Added test.

commit 7e30295db6cdb2571a0e996998cd0b6dc6785c1b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-09-01T16:41:10Z

    IGNITE-6188: Fix

----
;;;","01/Sep/17 17:32;isapego;Ready for review. [~ptupitsyn], can you take a look?;;;","04/Sep/17 06:40;ptupitsyn;[~isapego] looks good to me.;;;","04/Sep/17 12:49;isapego;Merged to master.;;;","11/Sep/17 16:27;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2581
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No checkClusterState() in IgniteKernal.getOrCreateCaches(),IGNITE-6184,13097540,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,ilyak,ilyak,25/Aug/17 09:51,27/Sep/17 10:48,14/Jul/23 06:20,27/Sep/17 10:48,2.1,,,,,2.3,,,,,,0,,,,"Check if anything else is off, too.",,githubbot,ilyak,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 27 10:48:34 UTC 2017,,,,,,,,,,"0|i3ja1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Aug/17 10:36;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2526

    IGNITE-6184 Add checkClusterState() call to destroyCachesAsync() and …

    …getOrCreateCaches()
    


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6184

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2526.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2526
    
----
commit bd8c6e8cd43810ff51f4ffd70ec21240b488131d
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-08-28T10:33:21Z

    IGNITE-6184 Add checkClusterState() call to destroyCachesAsync() and getOrCreateCaches()

----
;;;","28/Aug/17 10:37;ilyak;https://github.com/apache/ignite/pull/2526;;;","08/Sep/17 11:43;ilyak;[~kdudkov] please review the change now since it looks complete after discussion. I've re-queued tests at https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2526%2Fhead;;;","19/Sep/17 11:43;ilyak;[~dsetrakyan] please merge if possible.;;;","27/Sep/17 10:48;ntikhonov;[~ilyak],
Thank you for your contribution! Looks good for me. I've merged changes to master.;;;","27/Sep/17 10:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2526
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Marshaller mappings are not restored from disk on node start,IGNITE-6180,13097352,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,24/Aug/17 16:42,28/Aug/17 16:40,14/Jul/23 06:20,25/Aug/17 13:36,2.1,,,,,2.3,,,,,,0,,,,"h2. Steps to reproduce
# Start node1 with persistence enabled.
# Put instance of custom class to cache so marshaller mapping for the class is created.
# Restart node1.
# Start node2 and ensure it joins the cluster with node1.
# Get instance from cache on node2 added on step #2.

h2. Expected behavior
Instance is retrieved and deserialized successfully.

h2. Actual behavior
Exception is thrown, no instance is retrieved from cache.
{noformat}
Caused by: java.lang.ClassNotFoundException: Unknown pair [platformId=0, typeId=-347776464]
	at org.apache.ignite.internal.MarshallerContextImpl.getClassName(MarshallerContextImpl.java:392)
	at org.apache.ignite.internal.MarshallerContextImpl.getClass(MarshallerContextImpl.java:342)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:686)
	... 15 more
{noformat}

JUnit test is attached to the ticket.",,agura,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Aug/17 16:43;sergey-chugunov;BinaryOnJoinedNodeTest.java;https://issues.apache.org/jira/secure/attachment/12883553/BinaryOnJoinedNodeTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 25 13:40:24 UTC 2017,,,,,,,,,,"0|i3j8wf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Aug/17 13:36;sergey-chugunov;Restoring marshaller mappings from file system to memory on node startup was implemented.;;;","25/Aug/17 13:40;agura;LGTM! Thanks for contribution! Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test fail DynamicIndexReplicatedAtomicConcurrentSelfTest.testClientReconnectWithCacheRestart,IGNITE-6179,13097340,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vk,DmitriyGovorukhin,DmitriyGovorukhin,24/Aug/17 15:35,23/Aug/18 11:54,14/Jul/23 06:20,06/Sep/17 07:44,,,,,,2.3,,sql,,,,0,MakeTeamcityGreenAgain,,,"Test fail with assertion 
{code}
[2017-08-24 18:34:06,207][ERROR][tcp-client-disco-msg-worker-#61%index.DynamicIndexReplicatedAtomicConcurrentSelfTest4%][IgniteClientReconnectAbstractTest$TestTcpDiscoverySpi] Failed to unmarshal discovery custom message.
java.lang.AssertionError
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.onSchemaFinishDiscovery(GridQueryProcessor.java:498)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.onDiscovery(GridQueryProcessor.java:894)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.onCustomEvent(GridCacheProcessor.java:2906)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery0(GridDiscoveryManager.java:660)
	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$4.onDiscovery(GridDiscoveryManager.java:560)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.notifyDiscovery(ClientImpl.java:2391)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.processCustomMessage(ClientImpl.java:2297)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.processDiscoveryMessage(ClientImpl.java:1874)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl$MessageWorker.body(ClientImpl.java:1758)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{code}",,DmitriyGovorukhin,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-9358,,,,,,,,,,,,"24/Aug/17 15:35;DmitriyGovorukhin;log;https://issues.apache.org/jira/secure/attachment/12883546/log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 06 07:43:41 UTC 2017,,,,,,,,,,"0|i3j8tr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Sep/17 20:19;githubbot;GitHub user vk23 opened a pull request:

    https://github.com/apache/ignite/pull/2596

    IGNITE-6179: fixed tests with client reconnect

    Affects:
    DynamicIndexPartitionedAtomicConcurrentSelfTest.testClientReconnectWithCacheRestart()
    DynamicIndexPartitionedTransactionalConcurrentSelfTest.testClientReconnectWithCacheRestart()
    DynamicIndexReplicatedTransactionalConcurrentSelfTest.testClientReconnectWithCacheRestart()
    DynamicIndexReplicatedAtomicConcurrentSelfTest.testClientReconnectWithCacheRestart()

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vk23/ignite ignite-6179

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2596.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2596
    
----
commit d11b0ecd125133bffcc603ecff83f5fbbe0ff385
Author: vk <kaligularnd@gmail.com>
Date:   2017-09-05T20:15:25Z

    IGNITE-6179: fixed tests with client reconnect

----
;;;","06/Sep/17 07:43;vozerov;The fix improves reliability of the test. However, it cannot fix original {{AssertionError}} which happenned inside real code, not inside tests. 

On the other hand, I do not see any failures with this assertion any more, so let's close the ticket for now and re-open if problem would appear again.

Thank you for contribution!;;;","06/Sep/17 07:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2596
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"JVM Crash in ""Ignite Binary Objects Simple Mapper Basic"" suite ",IGNITE-6175,13097084,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,EdShangGG,EdShangGG,23/Aug/17 17:17,01/Aug/19 22:05,14/Jul/23 06:20,24/Aug/17 16:30,,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"JVM crash dump and logs you could find here
https://ci.ignite.apache.org/viewLog.html?buildTypeId=Ignite20Tests_IgniteBinarySImpleMapperBasic&buildId=785893&branch_Ignite20Tests_IgniteBinarySImpleMapperBasic=pull/2380/head

{code}

# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f6a0274a13f, pid=3507, tid=140092082124544
#
# JRE version: Java(TM) SE Runtime Environment (7.0_80-b15) (build 1.7.0_80-b15)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (24.80-b11 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# J 10572 C2 org.apache.ignite.internal.processors.cache.persistence.tree.util.PageHandler.readLock(Lorg/apache/ignite/internal/pagemem/PageMemory;IJJLorg/apache/ignite/internal/processors/cache/persistence/tree/util/PageLockListener;)J (39 bytes) @ 0x00007f6a0274a13f [0x00007f6a02749ba0+0x59f]
#
# Core dump written. Default location: /data/teamcity/work/820be461cd64b574/core or core.3507
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# {code}",,agura,dpavlov,githubbot,ivan.glukos,,,,,,,,,"dspavlov commented on issue #2507: IGNITE-6175 JVM Crash in ""Ignite Binary Objects Simple Mapper Basic"" …
URL: https://github.com/apache/ignite/pull/2507#issuecomment-517475022
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:05;githubbot;600","dspavlov commented on pull request #2507: IGNITE-6175 JVM Crash in ""Ignite Binary Objects Simple Mapper Basic"" …
URL: https://github.com/apache/ignite/pull/2507
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5555,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 24 16:30:42 UTC 2017,,,,,,,,,,"0|i3j79b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/17 17:39;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/2507

    IGNITE-6175 JVM Crash in ""Ignite Binary Objects Simple Mapper Basic"" …

    …suite

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2507.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2507
    
----
commit a0186af956072eb382427bf3c0432f5f1c5a01aa
Author: Eduard Shangareev <eshangareev@gridgain.com>
Date:   2017-08-23T17:19:21Z

    IGNITE-6175 JVM Crash in ""Ignite Binary Objects Simple Mapper Basic"" suite

----
;;;","23/Aug/17 17:45;EdShangGG;The issue was in not waiting before threads stop and closing page memory (it happens when a test fails by timeout in BPlusTreeSelfTest and its descendants).;;;","23/Aug/17 17:47;EdShangGG;Please, take a look.;;;","24/Aug/17 11:22;ivan.glukos;[~EdShangGG], looks good.;;;","24/Aug/17 15:21;agura;[~EdShangGG] Why your cycle tests {{stop}} variable for {{true}} value while it is initialized to {{false}} value before test is started? It seems that cycle doesn't execute any iteration.;;;","24/Aug/17 15:45;EdShangGG;Fixed.;;;","24/Aug/17 16:30;agura;LGTM. Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC: consistent product name across all drivers,IGNITE-6170,13097017,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,vozerov,vozerov,23/Aug/17 13:18,04/Sep/17 10:37,14/Jul/23 06:20,04/Sep/17 10:36,2.0,,,,,2.3,,jdbc,,,,0,usability,,,"We have 3 JDBC drivers. Some of them report {{DatabaseMetaData#getDatabaseProductName}} as *Ignite*, others as *Ignite Cache*. Neither are correct. 

It should be *Apache Ignite*.",,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 04 10:37:17 UTC 2017,,,,,,,,,,"0|i3j6un:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Aug/17 07:50;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/2514

    IGNITE-6170: JDBC: make consistent product name across all drivers

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-6170

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2514.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2514
    
----
commit 3dddb61aaaf99d0721e6451c469aeef5b07598b9
Author: shroman <rshtykh@yahoo.com>
Date:   2017-08-25T07:34:23Z

    IGNITE-6170: JDBC: consistent product name across all drivers

----
;;;","04/Sep/17 10:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2514
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC compatibility is broken,IGNITE-6169,13097010,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,tledkov-gridgain,tledkov-gridgain,23/Aug/17 12:36,28/Aug/17 16:39,14/Jul/23 06:20,23/Aug/17 12:49,2.2,,,,,2.3,,jdbc,,,,0,,,,"JDBC compatibility between 2.1 - 2.2 is broken in case the new JDBC driver connects to an old Ignite node.

Old server doesn't sent extended handshake response but JDBC client await it without any conditions.
",,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-08-23 12:36:15.0,,,,,,,,,,"0|i3j6t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect check checkpoint pages collection,IGNITE-6154,13096749,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,22/Aug/17 13:28,22/Sep/17 12:59,14/Jul/23 06:20,22/Aug/17 17:59,,,,,,2.3,,general,,,,0,,,,"There is incorrect check !F.empty(collection) in checkpoint thread.
There should be a full check all elements, because collection is collection of GridMultiCollectionWrapper, and we must check all mutlicollections.",,agura,DmitriyGovorukhin,githubbot,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6204,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 22 12:59:58 UTC 2017,,,,,,,,,,"0|i3j57r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Aug/17 13:35;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2497

    IGNITE-6154 Incorrect check checkpoint pages collection

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-6154

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2497.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2497
    
----
commit ec357391b7bba564168802ae390bdf827e0aac20
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-08-22T13:34:31Z

    IGNITE-6154 fix incorrect check checkpoint pages

----
;;;","22/Aug/17 14:04;ivan.glukos;Also fixed similar check for WAL record.
Code review: ok.;;;","22/Aug/17 17:59;agura;Thanks for contribution! Merged to master branch.;;;","22/Sep/17 12:59;githubbot;Github user DmitriyGovorukhin closed the pull request at:

    https://github.com/apache/ignite/pull/2497
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ignite-osgi-karaf-licenses.txt is absent in a build,IGNITE-6150,13096701,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,asfedotov,krybakova,krybakova,22/Aug/17 11:12,22/Aug/17 15:12,14/Jul/23 06:20,22/Aug/17 15:12,1.9,,,,,,,,,,,0,,,,"optional/ignite-osgi-karaf/licenses/ignite-osgi-karaf-licenses.txt file is absent in a build.
While building there is a warning:
{noformat}
[23:57:23][Step 30/31] [INFO] An Ant BuildException has occured: Warning: Could not find file /var/lib/teamcity/data/work/374178e7af8a6b6/incubator-ignite/modules/osgi-karaf/target/classes/META-INF/licenses.txt to copy.
[23:57:23][Step 30/31] around Ant part ...<move file=""/var/lib/teamcity/data/work/374178e7af8a6b6/incubator-ignite/modules/osgi-karaf/target/classes/META-INF/licenses.txt"" tofile=""/var/lib/teamcity/data/work/374178e7af8a6b6/incubator-ignite/modules/osgi-karaf/target/licenses/ignite-osgi-karaf-licenses.txt""/>... @ 4:270 in /var/lib/teamcity/data/work/374178e7af8a6b6/incubator-ignite/modules/osgi-karaf/target/antrun/build-main.xml
[23:57:23][Step 30/31] /var/lib/teamcity/data/work/374178e7af8a6b6/incubator-ignite/modules/osgi-karaf/target/antrun/build-main.xml:4: Warning: Could not find file /var/lib/teamcity/data/work/374178e7af8a6b6/incubator-ignite/modules/osgi-karaf/target/classes/META-INF/licenses.txt to copy.
[23:57:23][Step 30/31] 	at org.apache.tools.ant.taskdefs.Copy.copySingleFile(Copy.java:619)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.taskdefs.Copy.execute(Copy.java:444)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
[23:57:23][Step 30/31] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[23:57:23][Step 30/31] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
[23:57:23][Step 30/31] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[23:57:23][Step 30/31] 	at java.lang.reflect.Method.invoke(Method.java:606)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.Task.perform(Task.java:348)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.Target.execute(Target.java:390)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.Target.performTasks(Target.java:411)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
[23:57:23][Step 30/31] 	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
[23:57:23][Step 30/31] 	at org.apache.maven.plugin.antrun.AntRunMojo.execute(AntRunMojo.java:327)
[23:57:23][Step 30/31] 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
[23:57:23][Step 30/31] 	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
[23:57:23][Step 30/31] 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
[23:57:23][Step 30/31] 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
[23:57:23][Step 30/31] 	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
[23:57:23][Step 30/31] 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
[23:57:23][Step 30/31] 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
[23:57:23][Step 30/31] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[23:57:23][Step 30/31] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
[23:57:23][Step 30/31] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[23:57:23][Step 30/31] 	at java.lang.reflect.Method.invoke(Method.java:606)
[23:57:23][Step 30/31] 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
[23:57:23][Step 30/31] 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
[23:57:23][Step 30/31] 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
[23:57:23][Step 30/31] 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
{noformat}",,asfedotov,krybakova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 22 14:43:43 UTC 2017,,,,,,,,,,"0|i3j4x3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Aug/17 14:43;asfedotov;[root cause]
*ignite-osgi-karaf* module declares the following order of plugins
1. *maven-resources-plugin* (*generate-resources* phase)
2. *build-helper-maven-plugin* 

*parent* module declares 
1. *build-helper-maven-plugin*
2. *maven-remote-resources-plugin* (*generate-resources* phase) from the *release* profile

According to the Maven composition rules the effective POM results in the following order of plugins
1. *maven-resources-plugin* (*generate-resources* phase)
2. *build-helper-maven-plugin* 
3. *maven-remote-resources-plugin* (*generate-resources* phase) from the *release* profile

That breaks the logic where 3. should be executed before 1.

The fix is to change the order of plugins in *ignite-osgi-karaf* module to ensure the proper ordering.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inaccurate CAS handling in GridNearTxLocal async commit,IGNITE-6137,13096653,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,andrey-kuznetsov,andrey-kuznetsov,andrey-kuznetsov,22/Aug/17 06:44,15/Sep/17 10:52,14/Jul/23 06:20,15/Sep/17 10:51,2.1,,,,,2.3,,cache,,,,0,,,,"CAS for commitFuture is handled inaccurate in commitNearTxLocalAsync method. Can fail on muliple calls, either concurrent or sequential.",,andrey-kuznetsov,DmitriyGovorukhin,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 15 10:52:18 UTC 2017,,,,,,,,,,"0|i3j4mn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Aug/17 06:57;githubbot;GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/2496

    IGNITE-6137: CAS logic fix in async commit.

    Reproducing test + fix

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6137

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2496.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2496
    
----
commit 4411cc2e08661c52f399f354ba4837580628a54a
Author: Andrey Kuznetsov <stkuzma@gmail.com>
Date:   2017-08-22T06:55:15Z

    IGNITE-6137: CAS logic fix in async commit.

----
;;;","22/Aug/17 07:01;andrey-kuznetsov;[~DmitriyGovorukhin], please review my changes.;;;","13/Sep/17 10:04;DmitriyGovorukhin;Hi [~andrey-kuznetsov]

What about TC? I don't see link for you PR run on TC.;;;","14/Sep/17 07:15;andrey-kuznetsov;[~DmitriyGovorukhin], TC link has been added.;;;","15/Sep/17 10:47;andrey-kuznetsov;[~sboikov], please review my changes.;;;","15/Sep/17 10:51;sboikov;Reviewed, merged into master.

Thanks!;;;","15/Sep/17 10:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2496
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In visorcmd ""cache on nodes"" statistics doubles off-heap entries",IGNITE-6131,13096436,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,ilyak,ilyak,21/Aug/17 14:33,18/Sep/17 14:03,14/Jul/23 06:20,22/Aug/17 04:11,2.1,,,,,2.3,,visor,,,,0,,,,"Cache contains 300024 entries actually, but ""Nodes for:"" shows double that number under Total field and repeats it in Heap and Off-Heap fields.

{code}
visor> cache -a -c=EmployeesCache
Time of the snapshot: 08/21/17, 17:20:45
+===============================================================================================================================+
|       Name(@)       |    Mode     | Nodes |     Entries (Heap / Off-heap)     |   Hits    |  Misses   |   Reads   |  Writes   |
+===============================================================================================================================+
| EmployeesCache(@c0) | PARTITIONED | 1     | min: 300024 (0 / 300024)          | min: 0    | min: 0    | min: 0    | min: 0    |
|                     |             |       | avg: 300024.00 (0.00 / 300024.00) | avg: 0.00 | avg: 0.00 | avg: 0.00 | avg: 0.00 |
|                     |             |       | max: 300024 (0 / 300024)          | max: 0    | max: 0    | max: 0    | max: 0    |
+-------------------------------------------------------------------------------------------------------------------------------+

Cache 'EmployeesCache(@c0)':
+-----------------------------------------------------------+
| Name(@)                     | EmployeesCache(@c0)         |
| Nodes                       | 1                           |
| Total size Min/Avg/Max      | 300024 / 300024.00 / 300024 |
|   Heap size Min/Avg/Max     | 0 / 0.00 / 0                |
|   Off-heap size Min/Avg/Max | 300024 / 300024.00 / 300024 |
+-----------------------------------------------------------+

Nodes for: EmployeesCache(@c0)
+=============================================================================================================+
|      Node ID8(@), IP      | CPUs | Heap Used | CPU Load |   Up Time    |         Size         | Hi/Mi/Rd/Wr |
+=============================================================================================================+
| C1AB91DD(@n0), 172.16.9.1 | 8    | 25.84 %   | 0.17 %   | 00:01:09:138 | Total: 600048        | Hi: 0       |
|                           |      |           |          |              |   Heap: 300024       | Mi: 0       |
|                           |      |           |          |              |   Off-Heap: 300024   | Rd: 0       |
|                           |      |           |          |              |   Off-Heap Memory: 0 | Wr: 0       |
+-------------------------------------------------------------------------------------------------------------+
{code}

I'm attaching a simple project (by Ignite console) where this reproduces with data from https://github.com/datacharmer/test_db",,ilyak,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6422,,,,,,,,,,,,"21/Aug/17 14:37;ilyak;Employees-project.zip;https://issues.apache.org/jira/secure/attachment/12882882/Employees-project.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 22 07:56:09 UTC 2017,,,,,,,,,,"0|i3j3b3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Aug/17 15:22;kuaw26;[~vsisko] Please, take a look.;;;","22/Aug/17 03:41;vsisko;Fixed cache size showing.;;;","22/Aug/17 04:11;kuaw26;Looks good. Merged to master.
[~ilyak] Please retest.;;;","22/Aug/17 07:56;ilyak;{code}
+===============================================================================================================================+
|       Name(@)       |    Mode     | Nodes |     Entries (Heap / Off-heap)     |   Hits    |  Misses   |   Reads   |  Writes   |
+===============================================================================================================================+
| EmployeesCache(@c0) | PARTITIONED | 1     | min: 300024 (0 / 300024)          | min: 0    | min: 0    | min: 0    | min: 0    |
|                     |             |       | avg: 300024.00 (0.00 / 300024.00) | avg: 0.00 | avg: 0.00 | avg: 0.00 | avg: 0.00 |
|                     |             |       | max: 300024 (0 / 300024)          | max: 0    | max: 0    | max: 0    | max: 0    |
+-------------------------------------------------------------------------------------------------------------------------------+

Cache 'EmployeesCache(@c0)':
+-----------------------------------------------------------+
| Name(@)                     | EmployeesCache(@c0)         |
| Nodes                       | 1                           |
| Total size Min/Avg/Max      | 300024 / 300024.00 / 300024 |
|   Heap size Min/Avg/Max     | 0 / 0.00 / 0                |
|   Off-heap size Min/Avg/Max | 300024 / 300024.00 / 300024 |
+-----------------------------------------------------------+

Nodes for: EmployeesCache(@c0)
+=============================================================================================================+
|      Node ID8(@), IP      | CPUs | Heap Used | CPU Load |   Up Time    |         Size         | Hi/Mi/Rd/Wr |
+=============================================================================================================+
| 59CFC377(@n0), 172.16.9.1 | 8    | 31.20 %   | 0.17 %   | 00:01:39:288 | Total: 300024        | Hi: 0       |
|                           |      |           |          |              |   Heap: 0            | Mi: 0       |
|                           |      |           |          |              |   Off-Heap: 300024   | Rd: 0       |
|                           |      |           |          |              |   Off-Heap Memory: 0 | Wr: 0       |
+-------------------------------------------------------------------------------------------------------------+
{code}

After fix looks OK;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partition eviction prevents exchange from completion,IGNITE-6113,13096050,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,v.pyatkov,v.pyatkov,18/Aug/17 15:25,18/May/18 17:03,14/Jul/23 06:20,06/Mar/18 13:39,2.1,,,,,2.5,,cache,persistence,,,0,,,,"I has waited for 3 hours for completion without any success.

exchange-worker is blocked.

{noformat}
""exchange-worker-#92%DPL_GRID%grid554.ca.sbrf.ru%"" #173 prio=5 os_prio=0 tid=0x00007f0835c2e000 nid=0xb907 runnable [0x00007e74ab1d0000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00007efee630a7c0> (a org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition$1)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1037)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:189)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:139)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.assign(GridDhtPreloader.java:340)
        at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1801)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:748)

   Locked ownable synchronizers:
        - None
{noformat}

{noformat}
""sys-#124%DPL_GRID%grid554.ca.sbrf.ru%"" #278 prio=5 os_prio=0 tid=0x00007e731c02d000 nid=0xbf4d runnable [0x00007e734e7f7000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
        at sun.nio.ch.FileDispatcherImpl.write(FileDispatcherImpl.java:60)
        at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
        at sun.nio.ch.IOUtil.write(IOUtil.java:51)
        at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)
        - locked <0x00007f056161bf88> (a java.lang.Object)
        at org.gridgain.grid.cache.db.wal.FileWriteAheadLogManager$FileWriteHandle.writeBuffer(FileWriteAheadLogManager.java:1829)
        at org.gridgain.grid.cache.db.wal.FileWriteAheadLogManager$FileWriteHandle.flush(FileWriteAheadLogManager.java:1572)
        at org.gridgain.grid.cache.db.wal.FileWriteAheadLogManager$FileWriteHandle.addRecord(FileWriteAheadLogManager.java:1421)
        at org.gridgain.grid.cache.db.wal.FileWriteAheadLogManager$FileWriteHandle.access$800(FileWriteAheadLogManager.java:1331)
        at org.gridgain.grid.cache.db.wal.FileWriteAheadLogManager.log(FileWriteAheadLogManager.java:339)
        at org.gridgain.grid.internal.processors.cache.database.pagemem.PageMemoryImpl.beforeReleaseWrite(PageMemoryImpl.java:1287)
        at org.gridgain.grid.internal.processors.cache.database.pagemem.PageMemoryImpl.writeUnlockPage(PageMemoryImpl.java:1142)
        at org.gridgain.grid.internal.processors.cache.database.pagemem.PageImpl.releaseWrite(PageImpl.java:167)
        at org.apache.ignite.internal.processors.cache.database.tree.util.PageHandler.writeUnlock(PageHandler.java:193)
        at org.apache.ignite.internal.processors.cache.database.tree.util.PageHandler.writePage(PageHandler.java:242)
        at org.apache.ignite.internal.processors.cache.database.tree.util.PageHandler.writePage(PageHandler.java:119)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Remove.doRemoveFromLeaf(BPlusTree.java:2886)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Remove.removeFromLeaf(BPlusTree.java:2865)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Remove.access$6900(BPlusTree.java:2515)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.removeDown(BPlusTree.java:1607)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.removeDown(BPlusTree.java:1574)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.removeDown(BPlusTree.java:1574)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.removeDown(BPlusTree.java:1574)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.removeDown(BPlusTree.java:1574)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.doRemove(BPlusTree.java:1481)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.remove(BPlusTree.java:1451)
        at org.apache.ignite.internal.processors.query.h2.database.H2TreeIndex.remove(H2TreeIndex.java:307)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:637)
        at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:517)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.remove(IgniteH2Indexing.java:664)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java:1186)
        at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.remove(GridCacheQueryManager.java:467)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.remove(IgniteCacheOffheapManagerImpl.java:1090)
        at org.gridgain.grid.cache.db.GridCacheOffheapManager$GridCacheDataStore.remove(GridCacheOffheapManager.java:993)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.remove(IgniteCacheOffheapManagerImpl.java:357)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.removeValue(GridCacheMapEntry.java:3621)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheEntry.clearInternal(GridDhtCacheEntry.java:599)
        - locked <0x00007f054d45bad8> (a org.apache.ignite.internal.processors.cache.distributed.dht.colocated.GridDhtColocatedCacheEntry)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.clearAll(GridDhtLocalPartition.java:956)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.tryEvict(GridDhtLocalPartition.java:793)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader$9.call(GridDhtPreloader.java:856)
        at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader$9.call(GridDhtPreloader.java:843)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6660)
        at org.apache.ignite.internal.processors.closure.GridClosureProcessor$2.body(GridClosureProcessor.java:925)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:748)

{noformat}",,agoncharuk,githubbot,jokser,langj,v.pyatkov,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7773,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 18 17:03:14 UTC 2018,,,,,,,,,,"0|i3j0zr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Nov/17 10:55;agoncharuk;The issue with the code is that we wait for partition rent in the assign() method. This blocks exchange thread from progress until the partition is evicted.

In my understanding, we already have all the machinery to fix this issue:
1) Move partition to MOVING state, but mark it as required to be evicted
2) In demander, do not send first demand message until we iterated over the full partition and attempted to clean it. After the iteration is done, even if the partition is not empty, we can safely start rebalancing. Also, during the clear, we can skip versions that arrived after the rebalancing has started (need to figure out if this can be implemented)
3) After iteration is finished, start rebalancing for this particular partition.

Also, note the suspicious code in the GridDhtPreloader#assing() method:
{code}
                if (histSupplier != null) {
                    if (part.state() != MOVING) {
                        if (log.isDebugEnabled())
                            log.debug(""Skipping partition assignment (state is not MOVING): "" + part);

                        continue; // For.
                    }
{code}
Most likely, we need the same logic here, even if we have a history supplier.;;;","22/Jan/18 09:48;jokser;Partition recreation after eviction finish breaks his `updateCounter` which can not be safely restored on Rebalance phase due to possible races. We should not destroy partition after eviction.;;;","29/Jan/18 09:18;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/3445

    IGNITE-6113 Async eviction

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6113

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3445.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3445
    
----
commit 2890c096f072b1f3a6a81e653bf1b4742f34b34c
Author: ilantukh <ilantukh@...>
Date:   2018-01-24T14:09:32Z

    gg-12001 : Rebalance mechanics redesign.

commit 7063a41c18749a4a206e84eda8c1a775dee055f4
Author: Pavel Kovalenko <jokserfn@...>
Date:   2018-01-29T09:17:25Z

    WIP

----
;;;","07/Feb/18 09:37;jokser;Ready to review (coupled with [~ilantukh] rebalance changes):

TC: https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F3445%2Fhead
PR: https://github.com/apache/ignite/pull/3445;;;","12/Feb/18 13:15;agoncharuk;Pavel,

1) The code around clearFuture looks suspicious to me: some of the clearFuture.onDone() are sync-ed, some are not. Also, note that there is a clearFuture.listen(), and the listener may be called either inside the sync block, or outside (if the listener is invoked from another thread). In this case, the reset() call is likely unsynchronized with the listener chain invocation.
2) Partitions clear await is synchronous in system pool, we must avoid this. In best case this will lead to a significant performance drop, in worst case - to a deadlock. The wait should be asynchronous. We should probably also report some sort of partition clear progress (or at least have a metric/mbean indicating that rebalancing wont start because we are waiting for these partitions).
3) There is a suspicious getter remaining() in GridDhtPartitionDemander - the method is synchronized, but it returns a reference to a map. What if the map changes afterwards?
4) Please add a specific test which will reproduce the absence of PME when async eviction is happening. Also, we should add tests for the following partition state transitions:
MOVING->RENTING->MOVING->OWNING (add an optional node crash for each transition)
RENTING->MOVING->RENTING->EVICTED (add an optional node crash for each transition);;;","22/Feb/18 16:44;jokser;[~agoncharuk] 
All PR concerns are resolved. Task is ready to merge. 
Last TC Run: https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F3445%2Fhead

;;;","06/Mar/18 13:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3445
;;;","06/Mar/18 13:39;agoncharuk;Thanks, Pavel, merged your changes to master.;;;","06/Mar/18 16:09;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/3609

    IGNITE-6113 Return back old implementation instead of 'removeIf'

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6113-micro-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3609.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3609
    
----
commit 7aba97e0ecaa631c3951a45c43af91a08a89097a
Author: Pavel Kovalenko <jokserfn@...>
Date:   2018-03-06T16:06:04Z

    IGNITE-6113 Return back old implementation instead of 'removeIf'

----
;;;","06/Mar/18 18:48;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3609
;;;","20/Mar/18 11:06;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/3662

    IGNITE-6113 Backport to 2.4.3.b1

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-13616

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3662.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3662
    
----
commit e7ca9b65a68de7752195c8f4d2b5180f3c77d19f
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-11-13T18:52:47Z

    ignite-blt-merge -> ignite-2.4.1

commit cc8168fc184bb7f5e3cc3bbb0743397097f78bfb
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-11-13T19:13:01Z

    merge ignite-pitr-rc1 -> ignite-2.4.1

commit 87e6d74cf6a251c7984f9e68c391f790feccc281
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-11-14T12:49:33Z

    ignite-gg-12877 Compact consistent ID in WAL

commit 9f5a22711baea05bd37ab07c8f928a4837dd83a4
Author: Ilya Lantukh <ilantukh@...>
Date:   2017-11-14T14:12:28Z

    Fixed javadoc.

commit d5af2d78dd8eef8eca8ac5391d31d8c779649bb0
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-11-15T08:09:00Z

    IGNITE-6913 Baseline: Added new options to controls.sh for baseline manipulations.

commit 713924ce865752b6e99b03bd624136541cea5f9f
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-15T09:03:12Z

    IGNITE-5850 failover tests for cache operations during BaselineTopology changes

commit b65fd134e748d496f732ec2aa0953a0531f544b8
Author: Ilya Lantukh <ilantukh@...>
Date:   2017-11-15T12:54:35Z

    TX read logging if PITR is enabled.

commit 9b2a567c0e04dc33116b51f88bee75f76e9107d1
Author: Ilya Lantukh <ilantukh@...>
Date:   2017-11-15T13:45:16Z

    TX read logging if PITR is enabled.

commit 993058ccf0b2b8d9e80750c3e45a9ffa31d85dfa
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-11-15T13:51:54Z

    ignite-2.4.1 optimization for store full set node more compacted

commit 1eba521f608d39967aec376b397b7fc800234e54
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-11-15T13:52:22Z

    Merge remote-tracking branch 'professional/ignite-2.4.1' into ignite-2.4.1

commit 564b3fd51f8a7d1d81cb6874df66d0270623049c
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-15T14:00:51Z

    IGNITE-5850 fixed issue with initialization of data regions on node activation, fixed issue with auto-activation when random node joins inactive cluster with existing BLT

commit c6d1fa4da7adfadc80abdc7eaf6452b86a4f6aa4
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-15T16:23:08Z

    IGNITE-5850 transitionResult is set earlier when request for changing BaselineTopology is sent

commit d65674363163e38a4c5fdd73d1c8d8e1c7610797
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-16T11:59:07Z

    IGNITE-5850 new failover tests for changing BaselineTopology up (new node added to topology)

commit 20552f3851fe8825191b144179be032965e0b5c6
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-16T12:53:43Z

    IGNITE-5850 improved error message when online node is removed from baseline

commit 108bbcae4505ac904a6db774643ad600bfb42c21
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-16T13:45:52Z

    IGNITE-5850 BaselineTopology should not change on cluster deactivation

commit deb641ad3bdbf260fa60ad6bf607629652e324bd
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2017-11-17T09:45:44Z

    ignite-2.4.1 truncate wal and checkpoint history on move/delete snapshot

commit 3c8b06f3659af30d1fd148ccc0f40e216a56c998
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2017-11-17T12:48:12Z

    IGNITE-6947 Abandon remap after single map if future is done (fixes NPE)

commit ba2047e5ae7d271a677e0c418375d82d78c4023e
Author: devozerov <vozerov@...>
Date:   2017-11-14T12:26:31Z

    IGNITE-6901: Fixed assertion during IgniteH2Indexing.rebuildIndexesFromHash. This closes #3027.

commit abfc0466d6d61d87255d0fe38cbdf11ad46d4f89
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-17T13:40:57Z

    IGNITE-5850 tests for queries in presence of BaselineTopology

commit f4eabaf2a905abacc4c60c01d3ca04f6ca9ec188
Author: Sergey Chugunov <sergey.chugunov@...>
Date:   2017-11-17T17:23:02Z

    IGNITE-5850 implementation for setBaselineTopology(long topVer) migrated from wc-251

commit 4edeccd3e0b671aa277f58995df9ff9935baa95a
Author: EdShangGG <eshangareev@...>
Date:   2017-11-17T18:21:17Z

    GG-13074 Multiple snapshot test failures after baseline topology is introduced
    -adding baseline test to suite
    -fixing issues with baseline

commit edae228c8f55990c15ef3044be987dcb00d6c81a
Author: EdShangGG <eshangareev@...>
Date:   2017-11-18T10:36:41Z

    hack with sleep

commit b5bffc7580a4a8ffbcc06f60c282e73979179578
Author: Ilya Lantukh <ilantukh@...>
Date:   2017-11-18T12:39:19Z

    Fixed Ignite.active(true) returning control too early.

commit 1bcdd76aae78665e2bbd49034fb46a1b91ef8389
Author: Ilya Lantukh <ilantukh@...>
Date:   2017-11-18T13:33:01Z

    Fixed baseline topology changes from client/daemon nodes.

commit e3bbecd9f133251818a4b43afa44f46e66dd0325
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2017-11-18T14:16:39Z

    Fixed licenses

commit b0d73fe45a8bb89ef82fce561f702095241c0405
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2017-11-18T14:33:49Z

    Do not dump entries to log

commit a822e78e2ab7b4dc2b9477f3b6a966b1fd46df54
Author: EdShangGG <eshangareev@...>
Date:   2017-11-18T16:31:32Z

    GG-13074 Multiple snapshot test failures after baseline topology is introduced
    -commenting index restore
    -fixing bug with searching in map by consistentId

commit a4c7b693e17378da9980a9049d00bdeeefdc569d
Author: EdShangGG <eshangareev@...>
Date:   2017-11-18T17:49:57Z

    GG-13074 Multiple snapshot test failures after baseline topology is introduced

commit f6ac26baadd160384a7364ce309d6b7102e4119c
Author: Ilya Lantukh <ilantukh@...>
Date:   2017-11-18T17:59:41Z

    Fixed Ignite.active(true) returning control too early.

commit 267ed20e7ef572e02b840e6c37f7fba5c659cc6c
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2017-11-20T10:23:26Z

    IGNITE-6913 Baseline: Improved controls.sh error handling and added more tests.

----
;;;","21/Mar/18 14:33;githubbot;Github user Jokser closed the pull request at:

    https://github.com/apache/ignite/pull/3662
;;;","21/Mar/18 14:34;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/3672

    IGNITE-6113 Backport to 2.4.4

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-13616-2.4.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3672.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3672
    
----
commit 4925ffc10ce8e8287980eaec38b587512568a302
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2018-01-17T12:26:03Z

    IGNITE-7453 Use GridUnsafe.cleanDirectBuffer in PageSnapshot

commit bcd68a058683b2f17b7ac60471b6e7aab3e4f6de
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-17T12:38:20Z

    IGNITE-7301 .NET: Baseline topology
    
    This closes #3352

commit 66b96316a7775ce8a6e2ff4475185d5929e4998b
Author: devozerov <vozerov@...>
Date:   2018-01-17T12:54:17Z

    Merge branch 'master' into ignite-2.4

commit 268481c1cf7fe57df24be130eb67c3e3a13afe01
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2018-01-17T13:50:34Z

    IGNITE-7453 Use GridUnsafe.cleanDirectBuffer in WalStat

commit db0cd105719c8ae713b13b34d9dca0a8cd45d377
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-17T14:05:25Z

    IGNITE-6776 .NET: Thin client: Add SQL & LINQ example
    
    This closes #3390

commit c214db879101aa5660e2a50b11cd20964c0bc114
Author: Andrey Gura <agura@...>
Date:   2018-01-17T12:42:41Z

    ignite-7450 FileWriteAheadLogManager always uses RandomAccessFileIOFactory now

commit 75c27d5e49d7458e46eb46e6f87a445c3f1320ea
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2018-01-18T02:25:19Z

    IGNITE-7274 Web Console: Support multiple statements on Queries screen.
    (cherry picked from commit 1926783)

commit 36cc822935387b2150e690c29bc6992dca0563f7
Author: Dmitriy Shabalin <dmitriyff@...>
Date:   2018-01-18T04:49:08Z

    IGNITE-7306 Web Console: Fixed export data from tables.
    (cherry picked from commit 1bb60ec)

commit d753298b4012894b56f5c9218325211cd84a21d5
Author: Peter Ivanov <mr.weider@...>
Date:   2018-01-18T06:18:53Z

    IGNITE-7107 Apache Ignite RPM packages
    
    * added changelog to package specification
    
    This closes #3396

commit 63445893f1bc75dc9777184499f7eabc1d4e51b1
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-01-18T08:36:18Z

    IGNITE-3935 Use PeerDeployAware for streamer transformer - Fixes #3378.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit f3f9f2a24b23027cf0c835140322e41a788932ae
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-18T09:05:12Z

    IGNITE-7413 Fix SqlDmlExample
    
    This closes #3389

commit 1daa7c41bf1460a4d9a2b0c26a7a317f2fca3fb7
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2018-01-18T10:14:53Z

    IGNITE-7461 UI tools: Actualized data storage configuration.
    (cherry picked from commit 577e632)

commit cf0080210d24d9dd8b057f959446fac5f8a4ca01
Author: dpavlov <dpavlov@...>
Date:   2018-01-18T10:53:29Z

    IGNITE-7380 Implemented pluggable Direct IO - Fixes #3226.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit dd06d0bd7ef266bfbe156e858b312d1ac86e8982
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-18T12:55:49Z

    IGNITE-7465 .NET: Fix SqlDdlExample failure with standalone node

commit 57479ec564e1761716da3d5f9feb7a64c396a9f9
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-18T13:45:54Z

    .NET: Fix CacheLocalTest.TestTxDeadlockDetection

commit bd6be8a4653322905a3b63850c7e033ce3801ce5
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-18T18:25:05Z

    .NET: Thin client: Fix OP_BINARY_TYPE_GET schema passing format

commit 97564d160586d6d57d300937e6b8877994e35fc7
Author: rkondakov <rkondakov@...>
Date:   2018-01-19T08:24:51Z

    IGNITE-6456: Ability to separately enable or disable JDBC, ODBC and thin client endpoints. This closes #3309.

commit d50274ca8875c9680c12e8786ac355a787ba95e0
Author: Yakov Zhdanov <yzhdanov@...>
Date:   2018-01-18T17:57:17Z

    Javadoc enhancements - added @see

commit cb2d3cf22388ab19fb2d34ae5bdfc8f1b608db75
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2018-01-18T14:14:26Z

    IGNITE-7471 Use soft reference for checkpoint entry contents to avoid excessive memory usage

commit 3965923369870bb4e8e57e3332c1a1eb1e5f5ed3
Author: rkondakov <rkondakov@...>
Date:   2018-01-19T09:00:55Z

    IGNITE-6772: SQL exception messages became more informative. This closes #3342.

commit ba68cb0fa87f776fcd0499d030c333f182611f41
Author: devozerov <vozerov@...>
Date:   2018-01-19T09:03:52Z

    Merge remote-tracking branch 'origin/ignite-2.4' into ignite-2.4

commit b54c0c8786bd74aa0abb208f537c29f0c4be4b1e
Author: tledkov-gridgain <tledkov@...>
Date:   2018-01-19T09:09:34Z

    IGNITE-7248: JDBC: fixed schema resolution for streaming mode. This closes #3384.

commit 2f5997788ccff265a088921210f561985f640517
Author: Dmitriy Govorukhin <dmitriy.govorukhin@...>
Date:   2018-01-19T11:46:38Z

    IGNITE-7471 fix npe

commit 7adce10750704cc50cbf54fa7020aa3b20da87cb
Author: Oleg Ignatenko <oignatenko@...>
Date:   2018-01-19T11:59:01Z

    IGNITE-7454 Wrong package in IgniteExamplesMLTestSuite
    
    this closes #3393
    
    (cherry picked from commit cb1233a)

commit 25e91b60694c589d8bf50c63a0d898ca4180b428
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-19T13:19:52Z

    IGNITE-7117 .NET: Improve IgniteHome resolver
    
    This closes #3402

commit bc6a08d94c26fd7ab12959aa27ca79fd818b65c7
Author: Alexey Kuznetsov <akuznetsov@...>
Date:   2018-01-19T13:14:50Z

    IGNITE-3143 Fixed execution of VisorCoordinatorNodeTask via VisorGatewayTask.
    
    (cherry picked from commit 1ae1350)

commit 022ffe3efa931e10ed01d57138bf262853582134
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2018-01-19T13:56:52Z

    master Using specific version of dependency plugin for compatibility tests

commit 52efb3d0e4249629e3039067a7472172489a0c99
Author: Alexey Goncharuk <alexey.goncharuk@...>
Date:   2018-01-19T16:23:13Z

    master Fixed hanging test (missed notify)

commit ce2a30efa4216ab2efc28384a7bc72633f7a4e09
Author: Pavel Tupitsyn <ptupitsyn@...>
Date:   2018-01-22T13:04:18Z

    IGNITE-7477 .NET: Java 9 support
    
    This closes #3415

commit 167ef1022d7f92843c06695c97020d32959df19e
Author: Anton Vinogradov <av@...>
Date:   2018-01-22T15:55:22Z

    IGNITE-6711 DataRegionMetrics#totalAllocatedPages is not valid after node restart
    
    Signed-off-by: Anton Vinogradov <av@apache.org>
    
    (cherry picked from commit 326c19b)
    Signed-off-by: Anton Vinogradov <av@apache.org>

----
;;;","05/Apr/18 14:47;langj;Is there a workaround for this issue?;;;","06/Apr/18 09:04;agoncharuk;[~langj] Unfortunately, the only workaround is to clear local persistence storage altogether and join an empty node to the cluster. In many cases this works because the node will likely rebalance all the local partitions.;;;","18/May/18 17:03;githubbot;Github user Jokser closed the pull request at:

    https://github.com/apache/ignite/pull/3672
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
"GridFunc.first(list) throws NPE for null arg, but GridFunc.first(iterable) returns null",IGNITE-6107,13095590,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,18/Aug/17 09:15,28/Aug/17 16:40,14/Jul/23 06:20,18/Aug/17 12:01,2.1,,,,,2.3,,general,,,,0,,,,GridFunc.first(list) should return null in case of null argument.,,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 18 12:01:36 UTC 2017,,,,,,,,,,"0|i3iy5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 12:01;kuaw26;TC passed.;;;","18/Aug/17 12:01;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Cache name is missed in preview for cache checkpoint SPI,IGNITE-6105,13095529,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,18/Aug/17 03:09,28/Aug/17 16:38,14/Jul/23 06:20,18/Aug/17 04:34,2.1,,,,,2.3,,wizards,,,,0,,,,,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 03:12;vsisko;IGNITE_6105_Fixed_generation_of_cache_checkpoint_SPI_.patch;https://issues.apache.org/jira/secure/attachment/12882494/IGNITE_6105_Fixed_generation_of_cache_checkpoint_SPI_.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 24 07:13:46 UTC 2017,,,,,,,,,,"0|i3ixrz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 03:12;vsisko;Generation fixed.;;;","18/Aug/17 04:34;kuaw26;Looks good. Merged to master.
Pavel, please retest that cache name are showing in XML and Java previews now.;;;","24/Aug/17 07:13;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race between partition eviction and re-creation,IGNITE-6096,13095281,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ilantukh,ilantukh,17/Aug/17 09:28,28/Aug/17 16:40,14/Jul/23 06:20,17/Aug/17 15:30,2.1,,,,,2.3,,,,,,0,,,,"There are a number of cases that aren't handled correctly, leading to assertion errors, grid hang-ups and data loss:
- PageMemoryImpl.refreshOutdatedPage(...) - if refreshed page is currently scheduled for checkpoint, it will be stored if FileStore filled with zeroes. Reading this page later will fail.
- GridCacheDatabaseSharedManager.restorePartitionState(...) - grp.offheap().onPartitionInitialCounterUpdated(...) is called under meta page write lock. If DataStore requires initialization, it will try to aquire write lock for meta page again and hang up.
- GridDhtPartitionTopologyImpl.createPartition(...) and .localPartition0(...) - if partition is present but has EVICTED state, we will try to create new partition instance. However, DataStore for old partition might still be present, and we will get AssertionError when we attempt to create new DataStore.",,agoncharuk,githubbot,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 17 15:30:57 UTC 2017,,,,,,,,,,"0|i3iw93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Aug/17 10:03;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2463

    IGNITE-6096 : Fixed races on partition evict.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6096

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2463.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2463
    
----
commit 42877048314332ce1691a2f47ef967e129e9ad75
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-17T09:58:23Z

    ignite-6096 : Fixed races on partition evict.

----
;;;","17/Aug/17 10:04;ilantukh;https://github.com/apache/ignite/pull/2463;;;","17/Aug/17 15:30;agoncharuk;Thanks, Ilya, merged to master;;;","17/Aug/17 15:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2463
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Implement persistent store in demo mode.,IGNITE-6094,13095256,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,pkonstantinov,vsisko,vsisko,17/Aug/17 07:50,06/Mar/18 10:22,14/Jul/23 06:20,13/Feb/18 04:21,2.1,,,,,2.5,,wizards,,,,0,,,,,,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 06 10:22:03 UTC 2018,,,,,,,,,,"0|i3iw3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Dec/17 09:01;vsisko;Enabled persistent storage in demo mode.;;;","15/Dec/17 06:43;pkonstantinov;Please turn on the metrics in data region configurations;;;","19/Dec/17 06:53;vsisko;Metrics enabled.;;;","09/Jan/18 03:09;pkonstantinov;Tested;;;","02/Feb/18 03:17;kuaw26;Please test from binary distributive.;;;","02/Feb/18 07:44;vsisko;Work folder moved into folder where agent is run. Folder renamed to demo-work.;;;","02/Feb/18 09:16;pkonstantinov;Please tune WAL configuration  to decrease disk consumption (currently it takes 2.5 GB);;;","09/Feb/18 10:09;vsisko;Limited WAL size;;;","13/Feb/18 04:20;pkonstantinov;Tested;;;","14/Feb/18 08:09;kuaw26;I reworked demo node configs in order to avoid messages in log: ""Failed to acquire file lock (local nodeId:...."".

 

Please retest + also do a night run test.;;;","15/Feb/18 04:16;pkonstantinov;Night test is successful.;;;","21/Feb/18 04:21;kuaw26;Merged to master.;;;","06/Mar/18 10:22;pkonstantinov;re-tested on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Socket#shutdownOutput in ServerImpl leads to UnsupportedOperationException on SSLSocket,IGNITE-6088,13095040,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ezhuravl,ezhuravl,ezhuravl,16/Aug/17 14:50,01/Aug/19 22:05,14/Jul/23 06:20,18/Aug/17 11:11,2.1,,,,,2.3,,,,,,0,,,,UnsupportedOperationException: The method shutdownOutput() is not supported in SSLSocket ,,ezhuravl,githubbot,ntikhonov,,,,,,,,,,"dspavlov commented on issue #2457: IGNITE-6088 Socket#shutdownOutput in ServerImpl leads to UnsupportedO…
URL: https://github.com/apache/ignite/pull/2457#issuecomment-517475097
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:05;githubbot;600","dspavlov commented on pull request #2457: IGNITE-6088 Socket#shutdownOutput in ServerImpl leads to UnsupportedO…
URL: https://github.com/apache/ignite/pull/2457
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 18 11:11:50 UTC 2017,,,,,,,,,,"0|i3iurz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 15:00;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/2457

    IGNITE-6088 Socket#shutdownOutput in ServerImpl leads to UnsupportedO…

    …perationException on SSLSocket

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6088

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2457.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2457
    
----
commit 5658aa9d0c79e216613f94bdc5d459ec949851c8
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-08-16T14:56:08Z

    IGNITE-6088 Socket#shutdownOutput in ServerImpl leads to UnsupportedOperationException on SSLSocket

----
;;;","18/Aug/17 11:11;ntikhonov;[~ezhuravl],
Thank you for your contribution! It looks good for me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Null value have appear in the entry processor, but the entry is existing",IGNITE-6083,13095017,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Alexey Kuznetsov,v.pyatkov,v.pyatkov,16/Aug/17 13:22,23/Apr/18 16:41,14/Jul/23 06:20,23/Apr/18 16:41,2.1,,,,,2.5,,cache,,,,2,,,,"In one thread load some data in a cache, after that I have execute OPTIMISTIC, SERIALIZABLE transaction with two {{IgniteCache.invoke()}} methods.
The value had been corrected at first {{EntryProcessor}}, but it is NULL at second.",,agoncharuk,Alexey Kuznetsov,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 13:46;v.pyatkov;EntryProcessorInOptimisticTxTest.java;https://issues.apache.org/jira/secure/attachment/12882134/EntryProcessorInOptimisticTxTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 23 16:41:35 UTC 2018,,,,,,,,,,"0|i3iumv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 13:48;v.pyatkov;I have prepare the test ([^EntryProcessorInOptimisticTxTest.java]).;;;","14/Nov/17 09:05;Alexey Kuznetsov;[~v.pyatkov] the issue is ready to be reviewed;;;","20/Feb/18 09:41;agoncharuk;[~Alexey Kuznetsov] I am not sure the fix is correct. Can you please explain how exactly the value becomes null and why only second entry processor observes the null value? ;;;","20/Feb/18 15:38;Alexey Kuznetsov;[~agoncharuk] when first entry processor is called in tx#enlistWriteEntry(), cache entry is pulled from cache by entry.innerGet(). 
 So first entry processor observes non-null value [see source|https://github.com/voipp/ignite/blob/49cd833eed456917b4435fc12ffcce6a689dcccc/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxLocal.java#L1319]. This value _*would not be saved*_ in IgniteTxEntry.

When entry processor is called a second time, it gets value from IgniteTxEntry#value , which is null, because we didn't set any value at first call [see source|https://github.com/apache/ignite/blob/master/modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/near/GridNearTxLocal.java#L1401]

 

PS. It seems odd, that entry processor is called multiple times : before transaction commit and during prepare phase(after locks are aquired).

And the value is set on finish phase in innerSet. I think, we can call only once : before commit, and save the value in Tx entry.;;;","20/Feb/18 16:10;githubbot;GitHub user voipp opened a pull request:

    https://github.com/apache/ignite/pull/3546

    IGNITE-6083 alternate fix version

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/voipp/ignite ignite-6083-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3546.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3546
    
----
commit 236b63bb7f3ebd214a690b168edf14c6c1832c95
Author: voipp <alkuznetsov.sb@...>
Date:   2018-02-20T16:09:12Z

    IGNITE-6083 alternate fix version

----
;;;","26/Feb/18 07:54;agoncharuk;[~Alexey Kuznetsov], I like the second version of the test better. Note however, that we must make sure that the EntryProcessor will never change the entry value to a value based on some outdated cached entry. 
Consider the following scenario:
T1:
Start tx, run cache.invoke(), the value is stored in TxEntry
T2:
run cache.put(), which overwrites the original value
T1:
run cache.invoke(), it received an old cached value
commit()

Can you please add a multi-threaded test verifying that in such a scenario the second thread will get a proper optimistic conflict exception?

Also, please attach a link to a TC run.

Thanks!;;;","27/Feb/18 14:40;Alexey Kuznetsov;[~agoncharuk] Hi!

In current master branch I came across odd behavior, consider the following scenario:

T1:
Start optimistic READ_COMMITTED tx, run cache.invoke(); // This cache invoke fetches the key from primary node and stores into tx entry. This Invoke doesn't change the value.
T2:
run cache.put();// which overwrites the original value;
T1:
run cache.read();// Here and futher old value will be returned, because of invoke() called above.
commit();

In this scenario we have no Non-Repeatable Reads, which seems incorrect for READ_COMMITTED isolation mode. 
Do you agree ? If yes, I will file another new ticket, fixing it.

Also, I run the test in PESSIMISTIC mode, it fails. Need more fixes;;;","28/Feb/18 08:54;githubbot;Github user voipp closed the pull request at:

    https://github.com/apache/ignite/pull/3546
;;;","28/Feb/18 09:06;Alexey Kuznetsov;[~agoncharuk] Hi!

I added multi-threaded test you described above. 
 Also new tests for pessimitic mode were added, and they revealed bug in pessimitic scenarios.
 The bug is fixed, and you can review the whole ticket once more.

To sum up, the following tests I included in PR :
 testTxInvokeSequentialOptimisticConflict - Tests that optimistic conflict occures when value is changed outside the serizlizable transaction.
 testTxInvokeSequentialCallOnNearNode - Tests that sequential invoke call works correct. In this test the value is fetched from remote node. In pessimitic mode, the bug occured in this test.
 testTxInvokeSequentialCallOnPrimaryNode - Tests that sequential invoke call works correct. In this test the value is located on local node, original test.

Also, run tests on teamcity. You can review it :

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=1113310&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]
 [Upsource review|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-395?filePath=/modules/core/src/test/java/org/apache/ignite/testsuites/IgniteCacheTestSuite.java]
 [PR|https://github.com/apache/ignite/pull/2975];;;","28/Feb/18 13:11;agoncharuk;[~Alexey Kuznetsov] Please note that 
IgnitePutAllLargeBatchSelfTest (Ignite Cache suite) and AtomicLongTest.TestMultithreaded (two .net suites) are consistently failing in your PR. Please take a look.
https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_IgniteCache&branch_IgniteTests24Java8=pull%2F3546%2Fhead&tab=buildTypeStatusDiv;;;","29/Mar/18 14:17;Alexey Kuznetsov;[~agoncharuk] Hi!

I've fixed tests, here actual [TC run|https://ci.ignite.apache.org/viewLog.html?buildId=1162921&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]

There were some failed tests there, so i rerun them separately:

CachePartitionStateTest#testPartitionState2_2_NoCacheOnCoordinator -> [succesfull after rerun|https://ci.ignite.apache.org/viewLog.html?buildId=1166077&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Cache6]
 TcpDiscoverySslSelfTest.testNodeShutdownOnRingMessageWorkerStartNotFinished -> [succesfull after rerun|https://ci.ignite.apache.org/viewLog.html?buildId=1166078&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteSpi]
 ClientTcpSslMultiThreadedSelfTest.testMultithreadedTaskRun -> [succesfull after rerun|https://ci.ignite.apache.org/viewLog.html?buildId=1166079&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteJavaClient]
 IgniteClientReconnectFailoverTest.testReconnectStreamerApi -> [succesfull after rerun|https://ci.ignite.apache.org/viewLog.html?buildId=1166080&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteClientNodes]

Other tests are flacky, even 'Ignite PDS Indexing'

 

So, please, review the ticket

 

[Github review|https://github.com/apache/ignite/pull/2975] or [Upsource review|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-395];;;","23/Apr/18 16:41;agoncharuk;Merged to master and ignite-2.5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Cannot get from cache values which were stored in cache with PutAll,IGNITE-6081,13095010,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,isapego,isapego,16/Aug/17 12:56,31/Aug/17 08:40,14/Jul/23 06:20,31/Aug/17 08:40,2.1,,,,,2.3,,platforms,,,,0,,,,"If you try to put multiple non-primitive values with dictionary property to cache using {{PutAll}}, you'd get an exception on attempt to read those values. Code example below:
{code}
var entries = new Dictionary<long, SomeType>();
for (int i = 0; i < 100; i++)
    entries.Add(i, new SomeType { Id = i });

var cache = Ignition.GetIgnite().GetCache<long, SomeType>(""CacheName"");
cache.PutAll(entries);

cache.Get(42);
{code}

Pay attention, that {{SomeType}} should have dictionary property.",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 31 08:40:17 UTC 2017,,,,,,,,,,"0|i3iulb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 14:44;isapego;It seems that root cause is usage of the {{Write}} method instead of {{WriteDetached}} in {{PutAll}}.;;;","30/Aug/17 15:31;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2555

    IGNITE-6081 .NET: Fix PutAll for dependent objects

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-6081

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2555.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2555
    
----
commit 91f70797d9cfd98c680e02c383127ec0a645a595
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T14:52:40Z

    IGNITE-6081 .NET: Cannot get from cache values which were stored in cache with PutAll

commit 9b701c00e9418f4b42043148b3cc34e9714a09f7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T14:58:54Z

    Improve tests

commit ceab4ae086264adc148e18f6a587d9217904864f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T15:04:34Z

    Fix WriteObjectDetached

commit da46dbd3d0990e473c018faaef251b31403546a2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T15:23:59Z

    Fix tests

commit 7196bc8d2ade90468c301a8113ac473419edbd56
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T15:24:29Z

    Fix WriteDictionary

commit 82e10797e4a3fb91ec787bd22f839fcc6042fded
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T15:30:04Z

    Fix test

----
;;;","30/Aug/17 15:32;ptupitsyn;Missing detachment is, indeed, the root cause.
Reproducer: use PutAll with multiple objects that reference each other.;;;","31/Aug/17 08:39;ptupitsyn;{{PutAll}} fixed, {{WithDetach}} refactored to {{WriteObjectDetached}} (we don't need to pass an action there, since we always simply write a single object in detached mode).;;;","31/Aug/17 08:40;ptupitsyn;Merged to master: {{f104976fe197d592c8265b3fd30bb0324f624e38}}.;;;","31/Aug/17 08:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2555
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheLoadingConcurrentGridStartSelfTest sometimes fails,IGNITE-6075,13094988,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ivanan.fed,gvvinblade,gvvinblade,16/Aug/17 11:09,26/Jun/18 17:50,14/Jul/23 06:20,22/May/18 15:06,2.1,,,,,2.7,,cache,,,,0,MakeTeamcityGreenAgain,,,"Seems that not all keys are in a cache after loading via DataStreamer

{{CacheLoadingConcurrentGridStartSelfTest.testLoadCacheWithDataStreamerSequential}}

{noformat}
[2017-08-15 13:25:38,435][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 300000'th entry.
[2017-08-15 13:25:39,277][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 400000'th entry.
[2017-08-15 13:25:40,100][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 500000'th entry.
[2017-08-15 13:25:40,866][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 600000'th entry.
[2017-08-15 13:25:41,666][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 700000'th entry.
[2017-08-15 13:25:42,453][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 800000'th entry.
[2017-08-15 13:25:43,211][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Streaming 900000'th entry.
[2017-08-15 13:25:43,944][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Data loaded.
[2017-08-15 13:26:06,518][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Actual cache size: 999998
[2017-08-15 13:26:06,519][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Missed key info:8fe76132-b563-4b7e-b611-386f5de00004 primary=true backup=false local peek=null
[2017-08-15 13:26:06,519][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Missed key info:b774fe8f-849a-4b1f-abf6-26acd5f00002 primary=false backup=false local peek=null
[2017-08-15 13:26:06,519][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Missed key info:d4f4a4ae-a1e3-4c6b-90b8-823898c00003 primary=false backup=false local peek=null
[2017-08-15 13:26:06,519][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Missed key info:17a2d999-045e-4e58-8be6-55930a300000 primary=false backup=false local peek=null
[2017-08-15 13:26:06,519][INFO ][test-runner-#54053%distributed.CacheLoadingConcurrentGridStartSelfTest%][root] Missed key info:e18c8fb1-c972-4a75-901c-818bbf900001 primary=false backup=true local peek=null
{noformat}
",,alex_pl,dpavlov,githubbot,gvvinblade,ivanan.fed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 22 15:07:35 UTC 2018,,,,,,,,,,"0|i3iugf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Apr/18 14:07;githubbot;GitHub user 1vanan opened a pull request:

    https://github.com/apache/ignite/pull/3829

    IGNITE-6075 'CacheLoadingConcurrentGridStartSelfTest sometimes fails'

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/1vanan/ignite IGNITE-6075

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3829.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3829
    
----
commit 658f27c3c536729dc132067cbd299319bf7d4f67
Author: Fedotov <vanen31@...>
Date:   2018-04-11T14:41:51Z

    change iterations

commit 70c6b763ee394c5ff8854fb9cfe39daec139755d
Author: Fedotov <vanen31@...>
Date:   2018-04-16T14:03:59Z

    add remap count

----
;;;","25/Apr/18 09:44;alex_pl;[~ivanan.fed] I've looked at your patch, changes looks good to me.;;;","25/Apr/18 10:08;ivanan.fed;[~alex_pl], thank you for review!

[~NIzhikov], this ticket seems ready, can you merge it, please?;;;","21/May/18 14:34;dpavlov;[~ivanan.fed] I'll take a look;;;","21/May/18 18:17;ivanan.fed;[~dpavlov], thanks!;;;","22/May/18 15:06;dpavlov;[~ivanan.fed] thank you for your contribution, this will help community to implement more stable tests and, as result, better dev.process.

Commit cc5484a998b696dceb6817263212f8a1da791ba3
;;;","22/May/18 15:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3829
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client may detect necessity for reconnect for too long,IGNITE-6071,13094805,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,yzhdanov,yzhdanov,15/Aug/17 16:39,10/Jan/19 13:36,14/Jul/23 06:20,27/Oct/17 11:01,2.1,,,,,2.4,,,,,,0,,,,"There was a GC pause on client that caused servers to drop client due to inability to establish TCP communication connection. Then it took some time for client to detect that it has been dropped. During that time client many times attempted to connect to server which can be seen in the logs. After client detected its drop and reconnected servers fired node added event and no log flood can be found any more.

We need to find out why client was reconnecting via communication and did not detect the drop for such a long time.

I hope this can be reproduced in test:
* start 2 servers
* start client
* suspend all client threads with Thread.suspend() - just filter threads of current JVM by name and suspend ones belonging to the client.

{noformat}
[10:12:24,785][WARNING][disco-event-worker-#71%null%][GridDiscoveryManager] Node FAILED: TcpDiscoveryNode [id=dd71479c-41ba-443e-b25c-3803a2a94f4f, addrs=[10.44.3.14, 127.0.0.1], sockAddrs=[/127.0.0.1:0, XXX.com/10.44.3.14:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1502269008673, loc=false, ver=2.1.1#20170618-sha1:09ce29e0, isClient=true]
[10:12:24,785][INFO][disco-event-worker-#71%null%][GridDiscoveryManager] Topology snapshot [ver=5, servers=2, clients=1, CPUs=144, heap=76.0GB]
[10:12:24,794][INFO][exchange-worker-#72%null%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=5, minorTopVer=0], crd=false, evt=12, node=TcpDiscoveryNode [id=98c1fdf7-09db-4fa0-bb01-8ca7f046643d, addrs=[10.44.3.11, 127.0.0.1], sockAddrs=[/127.0.0.1:47500, XXX.com/10.44.3.11:47500], discPort=47500, order=3, intOrder=3, lastExchangeTime=1502269944782, loc=true, ver=2.1.1#20170618-sha1:09ce29e0, isClient=false], evtNode=TcpDiscoveryNode [id=98c1fdf7-09db-4fa0-bb01-8ca7f046643d, addrs=[10.44.3.11, 127.0.0.1], sockAddrs=[/127.0.0.1:47500, XXX.com/10.44.3.11:47500], discPort=47500, order=3, intOrder=3, lastExchangeTime=1502269944782, loc=true, ver=2.1.1#20170618-sha1:09ce29e0, isClient=false], customEvt=null]
[10:12:24,813][INFO][exchange-worker-#72%null%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=5, minorTopVer=0], crd=false]
[10:12:24,819][INFO][exchange-worker-#72%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=5, minorTopVer=0], evt=NODE_FAILED, node=dd71479c-41ba-443e-b25c-3803a2a94f4f]
[10:12:28,344][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52474]
[10:12:28,348][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52482]
[10:12:28,356][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52506]
[10:12:28,362][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52522]
[10:12:28,368][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52538]
[10:12:28,374][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52554]
[10:12:28,380][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52570]
[10:12:28,386][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52586]
[10:12:28,392][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52602]
[10:12:28,397][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52618]
[10:12:28,402][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52634]
[10:12:28,407][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52650]
[10:12:28,412][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:52666]

...

[10:18:32,684][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:43604]
[10:18:32,690][INFO][grid-nio-worker-tcp-comm-1-#58%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:43620]
[10:18:32,695][INFO][grid-nio-worker-tcp-comm-0-#57%null%][TcpCommunicationSpi] Accepted incoming communication connection [locAddr=/10.44.3.11:47100, rmtAddr=/10.44.3.14:43636]
[10:18:42,831][INFO][disco-event-worker-#71%null%][GridDiscoveryManager] Added new node to topology: TcpDiscoveryNode [id=2e80b0f0-21db-451d-a264-34ba16e00ffa, addrs=[10.44.3.14, 127.0.0.1], sockAddrs=[/127.0.0.1:0, gbrdsr000002837.intranet.barcapint.com/10.44.3.14:0], discPort=0, order=6, intOrder=5, lastExchangeTime=1502270322805, loc=false, ver=2.1.1#20170618-sha1:09ce29e0, isClient=true]
[10:18:42,832][INFO][disco-event-worker-#71%null%][GridDiscoveryManager] Topology snapshot [ver=6, servers=2, clients=2, CPUs=144, heap=90.0GB]
[10:18:42,833][INFO][exchange-worker-#72%null%][time] Started exchange init [topVer=AffinityTopologyVersion [topVer=6, minorTopVer=0], crd=false, evt=10, node=TcpDiscoveryNode [id=98c1fdf7-09db-4fa0-bb01-8ca7f046643d, addrs=[10.44.3.11, 127.0.0.1], sockAddrs=[/127.0.0.1:47500, XXX.com/10.44.3.11:47500], discPort=47500, order=3, intOrder=3, lastExchangeTime=1502270322815, loc=true, ver=2.1.1#20170618-sha1:09ce29e0, isClient=false], evtNode=TcpDiscoveryNode [id=98c1fdf7-09db-4fa0-bb01-8ca7f046643d, addrs=[10.44.3.11, 127.0.0.1], sockAddrs=[/127.0.0.1:47500, XXX.com/10.44.3.11:47500], discPort=47500, order=3, intOrder=3, lastExchangeTime=1502270322815, loc=true, ver=2.1.1#20170618-sha1:09ce29e0, isClient=false], customEvt=null]
[10:18:42,851][INFO][exchange-worker-#72%null%][time] Finished exchange init [topVer=AffinityTopologyVersion [topVer=6, minorTopVer=0], crd=false]
[10:18:42,855][INFO][exchange-worker-#72%null%][GridCachePartitionExchangeManager] Skipping rebalancing (nothing scheduled) [top=AffinityTopologyVersion [topVer=6, minorTopVer=0], evt=NODE_JOINED, node=2e80b0f0-21db-451d-a264-34ba16e00ffa]
{noformat}",,apundir,dopsun,githubbot,ilyak,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4003,IGNITE-6542,IGNITE-6818,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 14 12:26:08 UTC 2017,,,,,,,,,,"0|i3itbr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Aug/17 16:10;ilyak;I don't understand what were the circumstances that led to the problem, however I have reproduced it as a wider issue.

I've wrote a letter to dev@ titled ""Hopeless looping in TcpCommunicationSpi"";;;","01/Sep/17 10:27;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2575

    IGNITE-6071 Finite number of attempts in reserveClient()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6071

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2575.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2575
    
----
commit 1e8e082ced9fc99b20867d05ede08e881a0c503b
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-09-01T10:24:52Z

    IGNITE-6071 Finite number of attempts in reserveClient()

----
;;;","04/Sep/17 11:07;ilyak;https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2575%2Fhead;;;","05/Sep/17 13:32;ilyak;[~yzhdanov] please review the proposed fix.;;;","23/Oct/17 13:43;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2903

    IGNITE-6071 White list of exceptions to suppress in createTcpClient.

    Also add wait in discovery infinite loop to avoid grind

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6071m7

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2903.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2903
    
----
commit f8aa957327312d76f90231b9bfe6d386d1d4ec37
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-11-11T08:56:42Z

    Reverted wrong commit.

commit c6921a311f437504a45a4667ddde85b14269ba57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-11-11T09:01:33Z

    Fixed classnames.properties generation for ignite-hadoop module.

commit d69e26dd8d4fd9383a149c93c251911a8dd67528
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-11T09:22:55Z

    IGNITE-4126 .NET: Add IgniteConfiguration.SwapSpaceSpi

commit a70f0bac3ac2487b8ab58598ad921daa952b485f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-11-11T10:03:40Z

    IGNITE-4145: Fixes ""No query result found for request"" exception when running multiple queries concurrently. This closes #1218.

commit 8bb8bdda2e846dcc92a2fd449e64d7594b2700ed
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-11T12:01:14Z

    IGNITE-4053: Moved task error output from console to logger. This closes #1160.

commit 7128a395085b60e86436f807b4bdbca83627d41a
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-11T12:29:38Z

    ignite-4154 Optimize amount of data stored in discovery history
    Discovery history optimizations:
    - remove discarded message for discovery pending messages
    - remove duplicated data from TcpDiscoveryNodeAddedMessage.oldNodesDiscoData
    - do not store unnecessary data in discovery EnsuredMessageHistory
    - use special property for EnsuredMessageHistory size instead of IGNITE_DISCOVERY_HISTORY_SIZE
    Affinity history optimizations:
    - do not store calculated primary/backup maps in history
    - try save the same assignments instance for caches with similar affinity
    Exchange messages optimizations:
    - do not send duplicated partition state maps for caches with similar affinity
    - use zip compression for data sent in exchange messages

commit c3e8a832098887a0fd09b6e8f63d6a8cbaa20eb9
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-11T15:00:36Z

    .NET: Fix DataStreamerTestTopologyChange tests

commit a2a3bedce1a232c0c1db6f5e2b737ab47be250b0
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-14T06:44:48Z

    Fixed IgniteStartFromStreamConfigurationTest to stop started node.

commit 85a4b966fdfb7018d1c91b73df1659082128f786
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-14T10:38:33Z

    IGNITE-4216 .NET: Fix PlatformAffinityFunction to inject resource into baseFunc

commit 6e36a7950db84913ddfd0d98f5a0b50923d2a29c
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-15T09:42:29Z

    IGNITE-3191: Fields are now sorted for binary objects which don't implement Binarylizable interface. This closes #1197.

commit e39888a08da313bec4d30f96488eccb36b4abacc
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2016-11-17T04:41:05Z

    IGNITE-4163 Fixed load range queries.

commit 3eacc0b59c27be6b4b3aaa09f84b867ba42b449f
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-11-21T10:28:56Z

    Merged ignite-1.7.3 into ignite-1.7.4.

commit 0234f67390c88dceefd6e62de98adb922b4ba9ac
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-11-21T10:40:50Z

    IGNITE-3443 Implemented metrics for queries monitoring.

commit a24a394bb66ba0237a9e9ef940707d422b2980f0
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2016-11-21T10:53:58Z

    IGNITE-2523 ""single put"" NEAR update request

commit 88f38ac6305578946f2881b12d2d557bd561f67d
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2016-11-21T12:11:09Z

    IGNITE-3074 Optimize DHT atomic update future

commit 51ca24f2db32dff9c0034603ea3abfe5ef5cd846
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2016-11-21T13:48:44Z

    IGNITE-3075 Implement single key-value pair DHT request/response for ATOMIC cache.

commit 6e4a279e34584881469a7d841432e6c38db2f06f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-21T14:15:17Z

    IGNITE-2355: fix test - clear client connections before and after a test.

commit 551f90dbeebcad35a0e3aac07229fb67578f2ab7
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-21T14:16:49Z

    Merge remote-tracking branch 'community/ignite-1.7.4' into ignite-1.7.4

commit f2dc1d71705b86428a04a69c4f2d4ee3a82ed1bd
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-21T15:12:27Z

    Merged ignite-1.6.11 into ignite-1.7.4.

commit d32fa21b673814b060d2362f06ff44838e9c2cdc
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-22T08:33:55Z

    IGNITE-3075 Fixed condition for 'single' request creation

commit d15eba4becf7515b512c1032b193ce75e1589177
Author: Anton Vinogradov <av@apache.org>
Date:   2016-11-22T08:56:20Z

    IGNITE-4225 DataStreamer can hang on changing topology

commit f80bfbd19e7870554bf3abd13bde89b0f39aaee1
Author: Anton Vinogradov <av@apache.org>
Date:   2016-11-22T09:02:57Z

    IGNITE-3748 Data rebalancing of large cache can hang out.

commit bc695f8e3306c6d74d4fe53d9a98adedd43ad8f0
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-22T09:05:15Z

    IGNITE-4227: ODBC: Implemented SQLError. This closes #1237.

commit fc9ee6a74fe0bf413ab0643d2776a1a43e6dd5d2
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-22T09:05:32Z

    Merge remote-tracking branch 'upstream/ignite-1.7.4' into ignite-1.7.4

commit 861fab9d0598ca2f06c4a6f293bf2866af31967c
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-22T09:52:03Z

    IGNITE-4239: add GridInternal annotaion for tasks instead of jobs. This closes #1250.

commit ba99df1554fbd1de2b2367b6ce011a024cd199bd
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-22T10:07:20Z

    IGNITE-4239: test cleanup

commit c34d27423a0c45c61341c1fcb3f56727fb91498f
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-22T11:13:28Z

    IGNITE-4100: Fix for DEVNOTES paths.

commit 9d82f2ca06fa6069c1976cc75814874256b24f8c
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-22T12:05:29Z

    IGNITE-4259: Fixed a problem with geospatial indexes and BinaryMarshaller.

commit b038730ee56a662f73e02bbec83eb1712180fa82
Author: isapego <igorsapg@gmail.com>
Date:   2016-11-23T09:05:54Z

    IGNITE-4249: ODBC: Fixed performance issue caused by ineddicient IO handling on CPP side. This closes #1254.

commit 7a47a0185d308cd3a58c7bfcb4d1cd548bff5b87
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-24T08:14:08Z

    IGNITE-4270: Allow GridUnsafe.UNALIGNED flag override.

----
;;;","23/Oct/17 13:44;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2904

    IGNITE-6071 White list of exceptions to suppress in createTcpClient.

    Also add wait in discovery infinite loop to avoid grind

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6071m8

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2904.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2904
    
----
commit 014161427fb603b6df7c8ecc3c0904f5df47a21d
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-02-14T01:33:32Z

    IGNITE-4159: Kubernetes IP finder.
    (cherry picked from commit 37c0a22)

commit 1db238402f11c67d2b28bfb7ff47955415f00c25
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-02-16T04:37:26Z

    IGNITE-4159: fixing logging
    (cherry picked from commit 06908d2)
    (cherry picked from commit fa27ee3)

commit 5dfe16f7e91374008b9f6dfbb899364f5b2e1164
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-02-14T06:03:30Z

    IGNITE-4159: using logger instead of system.out.println
    (cherry picked from commit b9bf77c)

commit 6e596d1ef426b66abd866d011a8f5cf5c5c25124
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4832: Prevent service deployment on client by default when configuration is provided on startup. This closes #1748.
    
    (cherry picked from commit b7ab273)

commit 443ac9a7aa82af1359a03bcfc8f9212b108300e4
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.

commit 05f3c747921aed6838804d2f5f2c8d2bd7985337
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.
    
    (cherry picked from commit 443ac9a)

commit 3be4e00373ec5a2b49788d70eb0aebccc3cb6ccf
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T11:59:00Z

    Merge branch ignite-1.6.5 into ignite-1.8.5-p1

commit d81548d3a4e384e1a9b4adacf1fb487444bbfd33
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T12:33:08Z

    Merge branch ignite-1.6.6-p1 into ignite-1.8.5-p1

commit 6954ff0c85f2f75507ee0bd306c879f490b4201a
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T12:44:48Z

    Merge branch ignite-1.6.12 into ignite-1.8.5-p1

commit 62dbba81c009170ff6243a28d3ef12fa75b96225
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T12:46:11Z

    Merge branch ignite-1.7.4-p1 into ignite-1.8.5-p1

commit 4fce28054bc325741f65035ae384f9b4b9c3fee8
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-07T13:06:34Z

    Merge branch ignite-1.8.4-p1 into ignite-1.8.5-p1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/managers/discovery/GridDiscoveryManager.java

commit 3d616799efb472227b3b313516e6b40729654631
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:36:11Z

    IGNITE-2466 - Use current NIO back pressure mechanism to limit received messages. Mark them process only when backups acknowledged.
    
    (backport from 1.9.2)
    
    (cherry picked from commit 220db882b466c03eadd148b3a19a0bf70d82d4a6)

commit 2a88a7a7581465ff0a6f8733550e6d42d7f71a6c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:54:37Z

    IGNITE-4667 - Throw exception on starting client cache when indexed types cannot be loaded

commit ba6227be49c8a395a5632e9841a6acb65ae340b6
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.

commit 315ff38eeef96f12954d6ff39c84d58b2b959667
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4879: Fixed System pool starvation while partition evicting.

commit 89e9dbe484312c251f02c9fbe9698c3ac2e03df8
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-10T13:36:33Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 02b194268071b179d291b28472cef5d587e7558a
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T09:00:59Z

    Fix missing test resource directory for
    org.apache.ignite.spi.discovery.tcp
        .TcpDiscoveryNodeAttributesUpdateOnReconnectTest.testReconnect

commit 20016a20f780eb3c21f249d3cb74d08018c4eea5
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T11:54:06Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 465084da5b00dcfc056d338f5d0a24875ca2af08
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit a20c307df1dd000309a273ef93231fdc41a2a81c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-13T06:31:17Z

    IGNITE-4891 - Fix. Key is deserialized during transactional get() even if withKeepBinary is set
    
    (Backport from master)

commit 630558dfeb373f237057e394e8f2f63230d59dab
Author: vladisav <vladisavj@gmail.com>
Date:   2017-04-13T10:24:42Z

    ignite-4173 IgniteSemaphore with failoverSafe enabled doesn't release permits in case permits owner node left topology
    
    Backport from master.
    
    (cherry picked from commit 76485fc)

commit 870b752c095ed3776e91a65b99763142b9f2ebc0
Author: Vladisav Jelisavcic <vladisavj@gmail.com>
Date:   2017-04-11T11:09:12Z

    ignite-1977 - fixed IgniteSemaphore fault tolerance.
    
    Backport from master.
    
    (cherry picked from commit 902bf42)

commit cd0b92950c6691c6fc1a26cb4f7e55f5ee459298
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2017-04-13T12:52:20Z

    ignite-4946 GridCacheP2PUndeploySelfTest became failed
    
    (cherry picked from commit d298e75)

commit 405ce563fb7c35627c6e1bb0b68f423ba089c6f2
Author: Dmitriy Shabalin <dmitriyff@gmail.com>
Date:   2017-04-14T10:55:38Z

    IGNITE-4068 Added common primitive for buttons group. Refactored existing button groups.
    (cherry picked from commit e5200c2)

commit 60cf48dc175fa288cd74d1189f0e992c9a16dc99
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-04-14T11:00:47Z

    IGNITE-4886 Catch all errors.
    (cherry picked from commit 7e8d9e8)

commit 81c3ed4c0511841f7056677db6063b4eb8d2def0
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-04-14T11:18:23Z

    IGNITE-4896 Rewored GridClientNodeBean serialization.
    (cherry picked from commit a025268)

commit 4a1415ad01ff9fde30d5c7c02e6d938f1515178d
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit e206b9f1fd3dbf927f940d558144a4796479ed5d
Author: vsisko <vsisko@gridgain.com>
Date:   2017-04-14T11:32:30Z

    IGNITE-4871 Added Kubernetes IP finder to Cluster configuration screen.
    (cherry picked from commit f978ff2)

commit b22738080101536a8af1ed60e70d693897e9bc7c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:54:02Z

    ignite-4173 Fix test. Permits must be released on node fail.
    
    (cherry picked from commit 1f867c6)

commit 41c5288606710b9c42983780ac7464a746d09eb0
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:56:25Z

    Merge remote-tracking branch 'origin/ignite-1.8.6' into ignite-1.8.6

----
;;;","23/Oct/17 13:45;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2905

    IGNITE-6071 White list of exceptions to suppress in createTcpClient.

    Also add wait in discovery infinite loop to avoid grind

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6071m9

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2905.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2905
    
----
commit 0c5bf92a56eb4df089291bafe4a2cf76bf14982c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-05T09:48:44Z

    Merge branch 'ignite-1.8.7' into ignite-1.9.4
    
    # Conflicts:
    #	modules/cassandra/store/src/main/java/org/apache/ignite/cache/store/cassandra/datasource/DataSource.java
    #	modules/cassandra/store/src/test/java/org/apache/ignite/tests/IgnitePersistentStoreTest.java
    #	modules/clients/src/test/java/org/apache/ignite/internal/jdbc2/JdbcAbstractDmlStatementSelfTest.java
    #	modules/clients/src/test/java/org/apache/ignite/jdbc/suite/IgniteJdbcDriverTestSuite.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePreloaderAdapter.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheRebalancingSelfTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorMultiNodeConfigSelfTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/service/GridServiceProcessorMultiNodeSelfTest.java

commit 374cba8a2b0d4438b46258a4ea89e43ab1e7989c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T13:17:01Z

    IGNITE-5259 Minor serialization fix

commit 5cb580ad7043f27e4a0396aea1f877c21d49078e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T13:17:01Z

    IGNITE-5259 Minor serialization fix
    
    (cherry picked from commit 374cba8)

commit f03252f9b2c6f0e777f307fd85cc8bd20ab21423
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T13:17:01Z

    IGNITE-5259 Minor serialization fix
    
    (cherry picked from commit 374cba8)

commit d2bf9619aaf867f251bc193d913dd4cc174a33a3
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2017-06-06T13:56:09Z

    IGNITE-5410: Fixed assertion in HadoopDataOutStream. This closes #2084.

commit 77ff30cc08dae653c0b914167088e9e90cdadd32
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T14:12:27Z

    IGNITE-5259 Minor serialization fix

commit be2bf6509816d2dc25fe9798b746a0f5c9014124
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T14:12:42Z

    Merge remote-tracking branch 'origin/ignite-1.9.3' into ignite-1.9.3

commit 3a1d560cd8741de9e7a6dd1110b42814d0ccff6b
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T14:13:52Z

    IGNITE-5259 Minor serialization fix

commit 56d4ce8a042238654ab96235d1a2969107b8881c
Author: devozerov <vozerov@gridgain.com>
Date:   2017-06-06T14:39:33Z

    GG-12244: Fixed a bug in GridH2IndexRangeRequest serialization mechanics.

commit f1b8a7d8407fbc990e7027b17e366d30f05c1ab6
Author: devozerov <vozerov@gridgain.com>
Date:   2017-06-06T14:40:01Z

    Merge remote-tracking branch 'upstream/ignite-1.9.3' into ignite-1.9.3

commit cfbe8da934741e76c8964af87671a38ec7b6c9a3
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-06T16:15:59Z

    IGNITE-5103 Rolled back due to test failings.

commit 83307da08289c873c5c2eb02d5eb314018bc5c13
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2017-06-06T13:56:09Z

    IGNITE-5410: Fixed assertion in HadoopDataOutStream. This closes #2084.
    
    (cherry picked from commit d2bf961)

commit e95626d609ee225918b49653b7981b180e5d4e49
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-06-01T16:56:34Z

    SSL fix
    
    (cherry picked from commit 95d5595)

commit 340204637a03e5533685f1b11ca65c9121f6e193
Author: Alexei Kaigorodov <alexei.kaigorodov@gmail.com>
Date:   2017-06-08T16:37:40Z

    IGNITE-5103 Rolled back due to test failings. (#69)

commit f3f726e9059e492573dc5125fd5edb5d2f71e9d3
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-13T11:11:17Z

    IGNITE-4196: Added means to specify port for H2 debug console. This closes #1486.
    
    (cherry picked from commit b246260)

commit c2c237d1222557d3e6b35d9a51a61a4c78e56782
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-02-03T08:41:14Z

    IGNITE-4196: Added means to specify port for H2 debug console. This closes #1486.
    
    (cherry picked from commit b246260)

commit 4a8f295f2f2f34e8472b1d1320f03744135b2504
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-13T16:47:00Z

    IGNITE-5478: ODBC: SQLNumParams now returns number of required parameters.
    
    (cherry picked from commit b1c56a1)

commit a2a4ec1ee9794cb542f146a07c6c67002cad444e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-14T09:16:43Z

    IGNITE-5478: Fix for cherry pick

commit d268b32cb252a5f06887d2b803d27ddc20ded95f
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-16T09:27:35Z

    IGNITE-4370: Implemented writing of batch of parameters for ODBC.
    
    (cherry picked from commit c10be5780589cc84e7929e234e4411d515166e0b)

commit 7fbaecc67f1b204162bda4595d6c118ddd45f963
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-16T17:01:49Z

    IGNITE-5527: Prevent starvation in stripe pool on unstable topology.

commit f81964f59b0ea5b8dfdc8eb2acc34d2a5b8fee07
Author: sboikov <sboikov@gridgain.com>
Date:   2017-01-10T13:59:17Z

    Do not evict removed entries, otherwise removes can be lost.
    
    (cherry picked from commit 55ac6e7)

commit 38f0ea80f3d95be16b38b621b3bcc2910c463997
Author: sboikov <sboikov@gridgain.com>
Date:   2017-01-10T13:59:17Z

    Do not evict removed entries, otherwise removes can be lost.
    
    (cherry picked from commit 55ac6e7)

commit 5dd74ff635de50ff9561ccdb51bdeb620f60c3db
Author: sboikov <sboikov@gridgain.com>
Date:   2017-01-10T13:59:17Z

    Do not evict removed entries, otherwise removes can be lost.
    
    (cherry picked from commit 55ac6e7)

commit 799ef99b512fffb90b97d926532bc6b9404efbff
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-06-21T08:56:53Z

    Merge remote-tracking branch 'remotes/origin/ignite-1.9.3' into ignite-1.9.4

commit c802b478ef47271f5b8864e0b0ae29925107e75f
Author: agura <agura@apache.org>
Date:   2017-06-21T15:52:17Z

    Compilation is fixed

commit 5fb5c7e3b54ae4efb7a6a1832ba647677d93e0cd
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-06-22T06:43:03Z

    IGNITE-5399 Manual cache rebalancing feature is broken

commit 01d41b72ecc3e81dfc8966cc0e395c247037241c
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-06-21T10:48:15Z

    GG-12256 H2Indexes are not deleted if key class implements Externalizable

commit 5ac9afc719138e37a7d97d9d9db05243eee9a942
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-06-22T09:36:14Z

    IGNITE-5399 add test to testsuite

commit a935d40a80e2f928a84a145aba540a45b156687f
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-06-22T12:10:32Z

    GG-12256 Minor fixes

commit 7e2468770a4eb47a4f61204d8c2000b6ab67c967
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2017-06-22T13:13:01Z

    IGNITE-GG-12197 Fixed ""Ignore events for discarded update in CLOCK mode"".
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

----
;;;","23/Oct/17 13:46;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2906

    IGNITE-6071 White list of exceptions to suppress in createTcpClient.

    Also add wait in discovery infinite loop to avoid grind

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6071m1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2906.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2906
    
----
commit db64729fc9ebb0217f06b0cf9d5e53ab8d657510
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-22T08:29:32Z

    ignite-6124 Fixed NPE in GridDhtPartitionsExchangeFuture.topologyVersion after future cleanup.
    
    (cherry picked from commit 2c9057a)

commit 5b7724714264c14cc10f4b25abc9234387224e4b
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-22T08:50:35Z

    Fixed javadoc format.

commit 785a85eb0155444b3eef48cf373a990dc4c8c6dd
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-22T09:24:03Z

    ignite-5872 GridDhtPartitionsSingleMessage.partitionUpdateCounters should not return null.

commit 6b506e774c59b64fc6254ea151699c852620a408
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-22T09:24:21Z

    Merge remote-tracking branch 'community/ignite-2.1.4' into ignite-2.1.4

commit 160d9b7c707efc359b4014aa1a481dc0fbbf596f
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-22T11:10:10Z

    Fixed flaky test.

commit 9ed4b72044ba1b2c105761b431625736166af7e7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-08-01T09:25:25Z

    master - Fixed visor compilation after merge

commit 16b819a6131c95a30d8dfaefbac6f6593826258b
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-22T13:40:02Z

    Increased test timeout.

commit 9ab49d4a743c42b4a2f645b8af7611922629c9a3
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-08-22T13:39:31Z

    IGNITE-6155 added new jvm flag for printing gc date stamps
    
    (cherry picked from commit 03211d2)

commit e780c6b98b5a09cff44ec5d2fa1fd30275ffc35f
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-22T14:10:07Z

    Fixed test to work with new update counter maps.

commit db6add1d2ee17381b810cff3ff978eef4cef51b0
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-22T14:20:07Z

    Removed explicit fail().

commit bc1cc99eab9641753925ef2552ba29831640e9e1
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-08-22T13:34:31Z

    IGNITE-6154 fix incorrect check checkpoint pages

commit 8dbdd03143362bb39d96242b23975efb22412709
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-08-22T14:03:42Z

    IGNITE-6154 also fixed check for WAL record

commit afad8e0fc58160f7876925dc6c3051be7a168155
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-23T09:18:44Z

    Muted hanging test.

commit ad38f7b4b5e6845b2ccccd7eb888f805484504f5
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-23T11:12:42Z

    gg-12662 : Fixed JDBC backward compatibility.

commit 28c906e3e0c51e6f1a4a95b2027d248f9b5035c2
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-08-02T15:14:46Z

    IGNITE-5542 CacheGroup configuration from cluster is merged with local settings
    
    (cherry picked from commit 88818ec)

commit caeb11936fa3534b9468d443c11744362044cae5
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-23T12:19:52Z

    ignite-6124 Guard logging with isInfoEnabled
    
    (cherry picked from commit bebe4d8)

commit 6f407ebabb9dc27459fdbee6423640132b995b1d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-08-23T12:46:23Z

    IGNITE-6169: Fixed thin JDBC driver compatibility problem.

commit 9dac636c4eef494fe612389c19218eec92057fc0
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-08-23T13:26:58Z

    IGNITE-4643: Fixed NPE in  JdbcDatabaseMetadata.getIndexInfo(). This closes #2481.

commit 77241cdc45c90ee9bab4a7a0f3d5a1a7664e3426
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-23T13:45:34Z

    Merge remote-tracking branch 'community/ignite-2.1.4' into ignite-2.1.4

commit a5e376f63886696331e5be0c457dc0624c49e3d4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-23T13:44:04Z

    ignite-6124 Added missed initialization of merged join exchanges in GridDhtPartitionsExchangeFuture.onBecomeCoordinator
    
    (cherry picked from commit 0c5dca9)

commit be5589db9e0600b295b745ddab5e7aae390ac7ae
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-23T14:25:33Z

    ignite-5986 : Fixed failing .NET test.

commit 43e4ff2c0ecd1ef30d18cf1fbc9052f5ba703d05
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-18T14:52:51Z

    Fixed test IgniteClusterActivateDeactivateTestWithPersistence.
    
    (cherry picked from commit 54585ab)

commit d596b7806db3f002f83da5a02bc882d03dae3dfd
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-23T15:23:06Z

    Updated classnames.properties.

commit 3e08cd401d598a34832e72afc5e6c94a3a9ab081
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-23T15:29:52Z

    ignite-6174 Temporary changed test until issue not fixed
    
    (cherry picked from commit 4fe8f76)

commit 44e0b4cd62142dce8cf39f826449b9a04e22e1cf
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-08-24T07:57:36Z

    IGNITE-6136 Fixed version for demo.
    (cherry picked from commit e1bf8d7)

commit 8d1838b03d6c1e5f86dfbb7f41c59895775e20c1
Author: Dmitry Pavlov <dpavlov.spb@gmail.com>
Date:   2017-07-27T11:51:25Z

    Adjusted memory policy to prevent OOM.

commit a3ec54b16bce1a569fbefba17188ccb4702b82a4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-24T11:09:12Z

    ignite-6124 DataStreamerImpl: do not wait for exchange future inside cache gateway.
    
    (cherry picked from commit 3ab523c)

commit 30e6d019a21f4a045a50d7d95a04507e3b646e69
Author: sboikov <sboikov@gridgain.com>
Date:   2017-08-24T11:10:34Z

    Merge remote-tracking branch 'community/ignite-2.1.4' into ignite-2.1.4

commit 41f574a7372ffc04b69809298798f24fb34c161f
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2017-08-24T12:58:27Z

    Fixed test.

commit 943736b36d67381157fc2807cd7af4b03d44fef3
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2017-08-24T15:58:16Z

    Revert ""IGNITE-5947 Fixed ""ClassCastException when two-dimensional array is fetched from cache"".
    * Due to this changes break compatibility with .NET;
    * This fix doesn't cover all cases.
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

----
;;;","26/Oct/17 11:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2575
;;;","14/Nov/17 12:26;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2903
;;;","14/Nov/17 12:26;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2904
;;;","14/Nov/17 12:26;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2905
;;;","14/Nov/17 12:26;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2906
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Infinite redirects at Spring Security Web Session Clustering with Tomcat,IGNITE-6070,13094801,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ilyak,ilyak,ilyak,15/Aug/17 16:08,10/Jul/18 15:12,14/Jul/23 06:20,17/Apr/18 13:14,2.1,,,,,2.3,,websession,,,,0,easyfix,newbie,,"See https://stackoverflow.com/questions/45648884/apache-ignite-spring-secutiry-error description.

When Session comes from Ignite but its Authentication is anonymous, Spring Security does the following check:

{code}
                } else if (request.getRequestedSessionId() != null && !request.isRequestedSessionIdValid()) {
                        this.logger.debug(""Requested session ID "" + request.getRequestedSessionId() + "" is invalid."");
                        this.invalidSessionStrategy.onInvalidSessionDetected(request, response);
                }
{code}

The problem is, in Ignite we never override isRequestedSessionIdValid() in our request wrappers, so it falls back to Tomcat's own (session) Manager, which will then find that it has never seen this Session and it is therefore invalid. Thus failover is triggered, and if there's ""invalid-session-url"" clause in Spring Security config, redirect will be issued, possibly circular.

I've attaching a sample Maven WAR project. It should be deployed to two different Tomcat instances operating on two different ports of same machine, e.g. 8080 and 8180, and then http://localhost:PORT/webtest-1.0-SNAPSHOT/index.jsp should be opened in the same Web Browser one after another for two ports. The second one should cause infinite 302 Redirect to same URL.

There's also a minor bug in the same code: see session.jsp in the example. It will needlessly throw NPE in WebSessionFilter:1001 and confuse web server. Should output ""OK"" when fixed.

Discussion:

By the way, letting the web server to get hold on Sessions that it creates for us causes additional problems: it's going to store these sessions in parallel with Ignite, consuming memory in the process that first saw a given session. We should probably have (possibly a third party) an Ignite-using Manager implementation for Tomcat specifically. It will be much simpler than filter-based approach while performing better.

Or maybe we should create our own Sessions that we never allow the web server to see.","Spring Security, Apache Tomcat",githubbot,ilyak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5048,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 16:12;ilyak;IGNITE-6070.patch;https://issues.apache.org/jira/secure/attachment/12881962/IGNITE-6070.patch","15/Aug/17 16:11;ilyak;webtest.zip;https://issues.apache.org/jira/secure/attachment/12881961/webtest.zip",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,Tue Jul 10 15:12:39 UTC 2018,,,,,,,,,,"0|i3itav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 16:12;ilyak;Maven project to reproduce the issue;;;","15/Aug/17 16:12;ilyak;Suggested fix;;;","08/Sep/17 09:26;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2621

    IGNITE-6070 Ensure that Web Session RequestWrapper considers its sess…

    …ions valid.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6070

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2621.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2621
    
----
commit 3339796e9a7b98e5c666f902d06589a0fb636703
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-09-08T09:25:10Z

    IGNITE-6070 Ensure that Web Session RequestWrapper considers its sessions valid.

----
;;;","08/Sep/17 09:30;ilyak;https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2621%2Fhead;;;","08/Sep/17 12:44;ilyak;[~ntikhonov] please review.;;;","10/Jul/18 15:12;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2621
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
We try to add entry to partition which was concurrently evicted,IGNITE-6068,13094747,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,15/Aug/17 12:31,28/Aug/17 16:37,14/Jul/23 06:20,16/Aug/17 15:02,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"https://ci.ignite.apache.org/viewLog.html?buildId=768819&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteQueries2

{code}
rg.apache.ignite.internal.processors.query.schema.SchemaOperationException: Schema change operation failed: Adding entry to partition that is concurrently evicted [part=817, shouldBeMoving=false, belongs=false, topVer=AffinityTopologyVersion [topVer=4, minorTopVer=0], curTopVer=AffinityTopologyVersion [topVer=4, minorTopVer=0]]
    at org.apache.ignite.internal.processors.query.GridQueryProcessor.processIndexOperationLocal(GridQueryProcessor.java:1290)
    at org.apache.ignite.internal.processors.query.schema.SchemaOperationWorker.body(SchemaOperationWorker.java:108)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
    at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtInvalidPartitionException: Adding entry to partition that is concurrently evicted [part=817, shouldBeMoving=false, belongs=false, topVer=AffinityTopologyVersion [topVer=4, minorTopVer=0], curTopVer=AffinityTopologyVersion [topVer=4, minorTopVer=0]]
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.localPartition0(GridDhtPartitionTopologyImpl.java:752)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.localPartition(GridDhtPartitionTopologyImpl.java:644)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridCachePartitionedConcurrentMap.localPartition(GridCachePartitionedConcurrentMap.java:69)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridCachePartitionedConcurrentMap.putEntryIfObsoleteOrAbsent(GridCachePartitionedConcurrentMap.java:88)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.entryEx(GridCacheAdapter.java:933)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter.entryEx(GridDhtCacheAdapter.java:524)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.entryEx(GridCacheAdapter.java:924)
    at org.apache.ignite.internal.processors.query.schema.SchemaIndexCacheVisitorImpl.processKey(SchemaIndexCacheVisitorImpl.java:141)
    at org.apache.ignite.internal.processors.query.schema.SchemaIndexCacheVisitorImpl.processPartition(SchemaIndexCacheVisitorImpl.java:120)
    at org.apache.ignite.internal.processors.query.schema.SchemaIndexCacheVisitorImpl.visit(SchemaIndexCacheVisitorImpl.java:90)
    at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.dynamicIndexCreate(IgniteH2Indexing.java:684)
    at org.apache.ignite.internal.processors.cache.index.DynamicIndexAbstractConcurrentSelfTest$BlockingIndexing.dynamicIndexCreate(DynamicIndexAbstractConcurrentSelfTest.java:1065)
    at org.apache.ignite.internal.processors.query.GridQueryProcessor.processIndexOperationLocal(GridQueryProcessor.java:1276)
    at org.apache.ignite.internal.processors.query.schema.SchemaOperationWorker.body(SchemaOperationWorker.java:108)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
    at java.lang.Thread.run(Thread.java:745)
{code}
",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 16 15:02:13 UTC 2017,,,,,,,,,,"0|i3isyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 15:02;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCache.clear clears local caches with same names on all server nodes,IGNITE-6053,13094482,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,ezhuravl,ezhuravl,14/Aug/17 14:06,25/Sep/17 04:02,14/Jul/23 06:20,25/Sep/17 04:01,1.7,,,,,2.3,,,,,,0,,,,"Clear on LOCAL cache should clear cache on the current node only, not on all nodes, that have local caches with same names.",,ezhuravl,githubbot,ntikhonov,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 25 04:02:52 UTC 2017,,,,,,,,,,"0|i3ircv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 06:34;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/2443

    IGNITE-6053: IgniteCache.clear clears local caches with same names on…

    … all server nodes.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-6053

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2443.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2443
    
----
commit 2253881dc46e150ecc0d4277fdb5d653bea70c44
Author: shroman <rshtykh@yahoo.com>
Date:   2017-08-15T06:32:35Z

    IGNITE-6053: IgniteCache.clear clears local caches with same names on all server nodes.

----
;;;","16/Aug/17 04:46;shroman;TC looks ok (no related failures found).;;;","16/Aug/17 10:27;ntikhonov;[~roman_s],
Thank you for your contribution! I think for local cache might be more effective just call to {{cache.clearLocally}} method and avoid to create jobs and tasks.;;;","16/Aug/17 13:08;shroman;[~ntikhonov] You are right. Please see the changes.
Is it correct that all parameters of {{clearLocally}} have to be _true_?;;;","29/Aug/17 12:11;ntikhonov;[~roman_s],
Seems that only server parameter should be {{true}} for local cache. AFAIK, user can't to create near cache for local cache (and it looks very strange for me :) ). Let's change it and rerun TC.;;;","29/Aug/17 13:13;shroman;[~ntikhonov] Yes, near cache for a local cache would be strange. I'll modify and rerun TC.;;;","30/Aug/17 00:41;shroman;[~ntikhonov] TC doesn't seem to have related failures. Do you think it's good to merge?;;;","31/Aug/17 14:15;ntikhonov;[~roman_s],
Yes, this changes looks good, but I've forgotten about async method IgniteCache #clearAsync. Could you fix the method as well?;;;","01/Sep/17 05:16;shroman;[~ntikhonov] I also missed that, sorry. Now I have implemented _clearAsync_ and other _clear_ methods.
Please have a look.;;;","01/Sep/17 11:43;ntikhonov;[~roman_s],
I've looked at code and have only one comment, let's will execute clear closure in public pool instead of system pool. For it need to pass false to localSafe method. {{ctx.closures().callLocalSafe(..., false)}}
Also I don't see a runs on TC. Are you sure that you triggered this suites [link TC|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2443%2Fhead]?
BTW Thank you for your contribution!;;;","02/Sep/17 03:13;shroman;[~ntikhonov] Thanks for checking it again! Btw, why would it be better to use the public pool for this method? I am just curious -- other methods in `GridCacheAdapter` use the system pool.
Anyway, I changed it to the public pool for tests.

I ran TC tests now. Looks good to me.
If you are ok with it, I will merge.;;;","05/Sep/17 14:25;ntikhonov;[~roman_s],
Most of cache operations are processed in sys-pool and long clearAll operation can to lead to threads starvation. I saw that last commit wasn't processed by [TC|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2443%2Fhead]. I've triggered it and if it's OK, I'm agree with this changes.;;;","07/Sep/17 04:07;shroman;[~ntikhonov] Thank you for the explanation!
TC on the link you provided seems not to be triggered again. It produces *Snapshot dependencies failed* error, I don't know why.
However, I ran it from https://ci.ignite.apache.org/overview.html, and it seems to be ok.;;;","07/Sep/17 14:39;ntikhonov;[~roman_s],
I saw that Ignite {{Platform .NET}} suite is failed constantly, but passed in master. Let's to merge last change from master to your branch and check the suite.;;;","11/Sep/17 01:26;shroman;[~ntikhonov] I ran https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2443%2Fmerge, and seems there are no related failures. What do you think?;;;","25/Sep/17 04:01;shroman;Merged to the master.;;;","25/Sep/17 04:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2443
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Check cluster state from daemon node return incorrect cluster state,IGNITE-6052,13094442,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,14/Aug/17 11:48,28/Aug/17 16:38,14/Jul/23 06:20,14/Aug/17 14:50,2.0,,,,,2.3,,,,,,0,,,,Daemon node must requested cluster state via compute grid from server node.,,agoncharuk,DmitriyGovorukhin,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 14 14:50:19 UTC 2017,,,,,,,,,,"0|i3ir3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Aug/17 11:55;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2439

    IGNITE-6052 request cluster state from daemon node via compute grid

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-6052

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2439.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2439
    
----
commit 2e5b0bdcfb7ab26d288f11b6986f188f665283c3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-08-14T11:53:04Z

    IGNITE-6052 request cluster state from daemon node via compute grid

----
;;;","14/Aug/17 14:49;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2439
;;;","14/Aug/17 14:50;agoncharuk;Thanks, Dmitriy, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SQL insert waits for transaction commit, but it must be executed right away",IGNITE-6044,13094148,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,jooger,mcherkasov,mcherkasov,11/Aug/17 17:01,13/Nov/18 12:02,14/Jul/23 06:20,13/Nov/18 12:01,2.1,,,,,2.8,,sql,,,,2,sql-stability,usability,,"Doc says:

""""Presently, DML supports the atomic mode only meaning that if there is a DML query that is executed as a part of an Ignite transaction then it will not be enlisted in the transaction's writing queue and will be executed right away.""""

https://apacheignite.readme.io/docs/dml#section-transactional-support

However the data will be added to cache only after transaction commit.",,ignitetcbot,jooger,khaerul.rizal,mcherkasov,nizhikov,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-9547,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Nov 13 10:42:57 UTC 2018,,,,,,,,,,"0|i3ipbb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/17 13:49;vozerov;I think we should not allow DML inside ongoing TX and vice versa. This can be controlled with help of thread-locals. Otherwise user is at high risk of getting deadlocks. We will allow this stuff once MVCC and transactional SQL are ready.;;;","24/Aug/18 14:21;jooger;[Test results|https://ci.ignite.apache.org/viewLog.html?buildId=1725151&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_ContinuousQuery2];;;","27/Aug/18 12:15;jooger;[Latest test results|https://ci.ignite.apache.org/viewLog.html?buildId=1744216&buildTypeId=IgniteTests24Java8_BuildApacheIgnite&tab=buildResultsDiv];;;","03/Sep/18 08:21;jooger;[Test results after merge with MVCC|https://ci.ignite.apache.org/viewLog.html?buildId=1831806&];;;","11/Sep/18 12:21;tledkov-gridgain;[~jooger], the review status:
| Codestyle | Please review my minor changes |
| Documentation | Please link documentation issue |
| Binary compatibility | -- |
| Tests | Please run all SQL suites | 
| Comments | # I guess {{DmlInsideTransactionTest.SystemProperty}} must keep the original property value because property may be setup externally for suite etc.
# {{SystemProperty}} looks usable. Does make sense move it to {{org.apache.ignite.testframework}} or {{GridTestUtils}}?|;;;","11/Sep/18 14:57;jooger;[~tledkov-gridgain], thanks for review.

Link to documentation issue has been added.
Test results for all SQL suites: [https://ci.ignite.apache.org/viewQueued.html?itemId=1842855]
Comments related to SystemProperty classes accepted and implemented.;;;","12/Sep/18 08:42;tledkov-gridgain;[~jooger], the patch is OK with me.;;;","12/Sep/18 10:23;jooger;[~vozerov], is it possible to merge it to master?;;;","18/Sep/18 19:57;vozerov;Hi [~jooger],
Unfortunately with recent changes to MVCC things are not that easy anymore and there is not global ""mvcc enabled"" flag. Instead, this flag is governed on per-cache basis. So we need to check whether SQL is allowed to participated in transaction on per-cache basis. I think [~rkondakov] could show you relevant pieces of code where it should be done.;;;","19/Sep/18 15:14;jooger;Hi [~vozerov],

Thanks for the review and good point to fix. Fix has been done and tet result looks good.

test results: [https://ci.ignite.apache.org/viewLog.html?buildId=1906467&tab=queuedBuildOverviewTab] ;;;","27/Sep/18 14:31;vozerov;[~jooger], patch looks good, but lets do the following:
# Improve error message a bit. It should explain what kind of caches are not allowed to have DML inside ongoing transaction, and second - we need to explain users how to override this.
# Let's merge with master again and re-run tests to make sure that SQL tests are OK.

Proposed error message: 
{code}
DML statements are not allowed inside a transaction over cache(s) with TRANSACTIONAL atomicity mode (change atomicity mode to TRANSACTIONAL_SNAPSHOT or disable this error message with system property ""-DIGNITE_ALLOW_DML_INSIDE_TRANSACTION=true"") [cacheName=...])
{code};;;","28/Sep/18 06:32;nizhikov;Hello, [~jooger] [~vozerov], [~mcherkasov]

Can we move this ticket to 2.8?;;;","28/Sep/18 15:02;vozerov;Let's move to AI 2.8. We have a slight chance to finalize it by Monday (including tests, another review, etc), but not sure.;;;","12/Nov/18 08:12;vozerov;[~jooger], my comments:
1) We do not need collection of cache names. It is enough to check for active transaction only once when the very first non-MVCC cache is found 
2) Incorrect test suite was picked (Queries 4 is for failover continuous queries tests)

I fixed both problems. Please review my change. If agree, we need to re-run tests on TC and get TCBot's visa.;;;","12/Nov/18 11:35;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}MVCC Queries{color} [[tests 2|https://ci.ignite.apache.org/viewLog.html?buildId=2298201]]
* IgniteCacheMvccSqlTestSuite: CacheMvccContinuousWithTransformerClientSelfTest.testContinuousWithTransformerAndRegularListenerAsync - 0,0% fails in last 100 master runs.

{color:#d04437}Cache 1{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2298218]]
* IgniteBinaryCacheTestSuite: IgniteCacheEntryListenerAtomicTest.testEventsObjectKeyValue - 0,0% fails in last 100 master runs.

{color:#d04437}Data Structures{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2298230]]
* IgniteCacheDataStructuresSelfTestSuite: GridCachePartitionedDataStructuresFailoverSelfTest.testFairReentrantLockFailsWhenServersLeft - 0,0% fails in last 100 master runs.

{color:#d04437}Streamers{color} [[tests 1|https://ci.ignite.apache.org/viewLog.html?buildId=2298180]]
* IgniteMqttStreamerTestSuite: IgniteMqttStreamerTest.testSingleTopic_NoQoS_RetryOnce - 0,0% fails in last 100 master runs.

{color:#d04437}SPI{color} [[tests 0 TIMEOUT , Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=2298182]]

{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2298257&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","13/Nov/18 10:39;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2306698&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","13/Nov/18 10:42;jooger;[~vozerov]

Thanks for the review and fixes.

We have TC Bot's visa and the patch can be merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Ignite 2.1 features changes on the website,IGNITE-6037,13093961,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,dsetrakyan,dsetrakyan,11/Aug/17 00:54,07/May/18 11:53,14/Jul/23 06:20,17/Aug/17 00:43,,,,,,,,site,,,,0,site,,,"Make the following changes to Features:
# add What is Memory Centric
# change Persistence to either ""Native Persistence"" or ""Persistent Store""
# change More to black font and rename to ""More...""
# add Beta symbol to Machine Learning",,dmagda,dsetrakyan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 15 22:09:13 UTC 2017,,,,,,,,,,"0|i3io6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 02:24;dmagda;All the points are accepted and rolled out in production except for the Memory-Centric page which is still in progress.;;;","15/Aug/17 22:09;dmagda;The content for the memory-centric page is ready:
https://docs.google.com/document/d/1AgQL9iL40o0PE_mrhQehY55qUMfKbBxJTgJQCF6Sp4A/edit

[~pgarg], please create a new page and put a link to it naming ""What is Memory-Centric?"" under ""What is Ignite?"" in the ""Features"" menu. Fill the page out with the content from the Google Doc.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indexes aren't cleaned on cache clear/destroy,IGNITE-6035,13093889,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,DmitriyGovorukhin,gvvinblade,gvvinblade,10/Aug/17 19:02,01/Aug/19 22:05,14/Jul/23 06:20,21/Aug/17 17:40,2.1,,,,,2.3,,sql,,,,0,MakeTeamcityGreenAgain,,,"Curently on cache clear or destroy cache in a group, where other caches exist (this operation executes cache clear internally) the query indexes (if present) aren't cleaned/destroyed. 

{{IgniteCacheOffheapManagerImpl.CacheDataStoreImpl#clear}} has to call finishUpdate(...)


This leads issues on next insertions or updates (on attempt to teplace an alreadyu deleted item)

{{org/apache/ignite/internal/processors/cache/persistence/tree/BPlusTree.java:370}}:

{noformat}Caused by: java.lang.AssertionError: itemId=0, directCnt=0, page=0001000100000005 [][][free=970]
	at org.apache.ignite.internal.processors.cache.persistence.tree.io.DataPageIO.getDataOffset(DataPageIO.java:437)
	at org.apache.ignite.internal.processors.cache.persistence.tree.io.DataPageIO.readPayload(DataPageIO.java:488)
	at org.apache.ignite.internal.processors.cache.persistence.CacheDataRowAdapter.initFromLink(CacheDataRowAdapter.java:149)
	at org.apache.ignite.internal.processors.cache.persistence.CacheDataRowAdapter.initFromLink(CacheDataRowAdapter.java:101)
	at org.apache.ignite.internal.processors.query.h2.database.H2RowFactory.getRow(H2RowFactory.java:62)
	at org.apache.ignite.internal.processors.query.h2.database.io.H2ExtrasLeafIO.getLookupRow(H2ExtrasLeafIO.java:124)
	at org.apache.ignite.internal.processors.query.h2.database.io.H2ExtrasLeafIO.getLookupRow(H2ExtrasLeafIO.java:36)
	at org.apache.ignite.internal.processors.query.h2.database.H2Tree.getRow(H2Tree.java:123)
	at org.apache.ignite.internal.processors.query.h2.database.H2Tree.getRow(H2Tree.java:40)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.getRow(BPlusTree.java:4372)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Replace.run0(BPlusTree.java:370)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Replace.run0(BPlusTree.java:330)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$GetPageHandler.run(BPlusTree.java:4697)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$GetPageHandler.run(BPlusTree.java:4682)
	at org.apache.ignite.internal.processors.cache.persistence.tree.util.PageHandler.writePage(PageHandler.java:342)
	at org.apache.ignite.internal.processors.cache.persistence.DataStructure.write(DataStructure.java:261)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.access$11200(BPlusTree.java:81)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Put.tryReplace(BPlusTree.java:2875)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.putDown(BPlusTree.java:2279)
	at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.doPut(BPlusTree.java:2006)
	... 28 more{noformat}",,agura,DmitriyGovorukhin,githubbot,gvvinblade,vozerov,,,,,,,,"dspavlov commented on issue #2487: IGNITE-6035 clean index on cache destroy
URL: https://github.com/apache/ignite/pull/2487#issuecomment-517475076
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:05;githubbot;600","dspavlov commented on pull request #2487: IGNITE-6035 clean index on cache destroy
URL: https://github.com/apache/ignite/pull/2487
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 21 17:09:51 UTC 2017,,,,,,,,,,"0|i3inqf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 16:52;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2487

    IGNITE-6035 clean index on cache destroy

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-6035

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2487.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2487
    
----
commit c3e91201623d6bdcfaa460a0c81bddb112eaa3eb
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-08-18T16:48:28Z

    IGNITE-6035 WIP. Dirty fix.

----
;;;","21/Aug/17 09:05;vozerov;[~DmitriyGovorukhin], my comments:
1) {{GridH2IndexBase.destroy}} - missing JavaDocs.
2) {{GridH2Table.rmIndex}} - why istance field is public? Can't we just use {{volatile boolean}} field?
3) {{GridQueryProcessor.registerCache0}} - TODO?;;;","21/Aug/17 09:25;DmitriyGovorukhin;[~vozerov] I corrected my changes, please review again.;;;","21/Aug/17 11:42;vozerov;[~DmitriyGovorukhin], looks good to me.;;;","21/Aug/17 17:09;agura;Merged to master branch.
Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZookeeperIpFinderTest.testFourNodesKillRestartZookeeper fails sometimes,IGNITE-6010,13093457,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,NSAmelchev,ilantukh,ilantukh,09/Aug/17 12:20,26/Jun/18 17:50,14/Jul/23 06:20,14/Jun/18 13:56,2.1,,,,,2.7,,zookeeper,,,,0,MakeTeamcityGreenAgain,,,"{noformat}
junit.framework.AssertionFailedError: null
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.ignite.spi.discovery.tcp.ipfinder.zk.ZookeeperIpFinderTest.testFourNodesKillRestartZookeeper(ZookeeperIpFinderTest.java:365)
{noformat}",,amashenkov,avinogradov,daradurvs,githubbot,ilantukh,NSAmelchev,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 15 12:11:00 UTC 2018,,,,,,,,,,"0|i3il8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/May/18 08:42;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/4021

    IGNITE-6010

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-6010

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4021.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4021
    
----
commit 2944e81ebe8199737a77ec233b71b30a66eb0219
Author: NSAmelchev <nsamelchev@...>
Date:   2018-05-17T14:14:34Z

    Fix test

----
;;;","06/Jun/18 14:53;VitaliyB;[~NSAmelchev], LGTM.;;;","07/Jun/18 12:02;NSAmelchev;The test became flaky after commit e05c012 where the timeout was decreased to 20s. Sometimes curators closed on session timeout (60 sec) and fail the test.

I prepared PR to fix the test:
- I added the additional block to ensure that clients were connected.
- Now session closes expected without timeouts and ""wait for condition"" block is excess.;;;","14/Jun/18 13:56;avinogradov;Thanks for contribution.

Merged to master.;;;","15/Jun/18 12:11;githubbot;Github user NSAmelchev closed the pull request at:

    https://github.com/apache/ignite/pull/4021
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheExamplesSelfTest.testCacheSemaphoreExample fails sometimes due to timeout,IGNITE-6009,13093454,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,andrey-kuznetsov,ilantukh,ilantukh,09/Aug/17 12:16,11/Dec/17 09:37,14/Jul/23 06:20,21/Aug/17 13:21,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,,,agura,andrey-kuznetsov,DmitriyGovorukhin,githubbot,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 11 09:37:59 UTC 2017,,,,,,,,,,"0|i3il87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Aug/17 12:52;githubbot;GitHub user andrey-kuznetsov opened a pull request:

    https://github.com/apache/ignite/pull/2434

    IGNITE-6009: Fixed IgniteSemaphore test.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andrey-kuznetsov/ignite ignite-6009

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2434.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2434
    
----
commit eeee0aa7cc63a58ae2699c225d99b5b147ee50c7
Author: Andrey Kuznetsov <stkuzma@gmail.com>
Date:   2017-08-11T12:51:31Z

    IGNITE-6009: Fixed IgniteSemaphore test.

----
;;;","11/Aug/17 13:10;andrey-kuznetsov;Blocking compute jobs leaded to compute threads exhausting, and to deadlock, consequently. Fixed by limiting blocking (""consumer"") job count by value less than total compute thread count.

[~DmitriyGovorukhin], please review my changes.;;;","16/Aug/17 10:04;DmitriyGovorukhin;[~andrey-kuznetsov] I reviewed your change, looks good for me, thank for contribution. Somebody, please merge in master.;;;","21/Aug/17 13:20;agura;[~andrey-kuznetsov] Thanks for contribution! Merged to master branch.;;;","11/Dec/17 09:37;githubbot;Github user andrey-kuznetsov closed the pull request at:

    https://github.com/apache/ignite/pull/2434
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCacheBinaryObjectMetadataExchangeMultinodeTest.testSequentialUpdatesNoConflicts fails sometimes,IGNITE-6007,13093451,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sharpler,ilantukh,ilantukh,09/Aug/17 12:09,26/Jun/18 17:50,14/Jul/23 06:20,07/May/18 09:31,2.1,,,,,2.7,,,,,,0,MakeTeamcityGreenAgain,,,"{noformat}
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.binary.GridCacheBinaryObjectMetadataExchangeMultinodeTest.testSequentialUpdatesNoConflicts(GridCacheBinaryObjectMetadataExchangeMultinodeTest.java:289)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,githubbot,ilantukh,nizhikov,NSAmelchev,sharpler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 07 09:35:10 UTC 2018,,,,,,,,,,"0|i3il7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Apr/18 10:15;sharpler;[~ilantukh] The problem in the test. Cache config allows reading from backups but doesn't set CacheWriteSynchronizationMode.FULL_SYNC. One line change can fix it. I will prepare PR and update status of the task.;;;","28/Apr/18 10:24;githubbot;GitHub user SharplEr opened a pull request:

    https://github.com/apache/ignite/pull/3935

    ignite-6007 GridCacheBinaryObjectMetadataExchangeMultinodeTest.testSequentialUpdatesNoConflicts fails sometimes

    For https://issues.apache.org/jira/browse/IGNITE-6007

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/SharplEr/ignite ignite-6007

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3935.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3935
    
----
commit 3f5f7a6751f3a3e7f52042f598567edc1ab74856
Author: Alexander Menshikov <sharplermc@...>
Date:   2018-04-28T10:22:40Z

    ignite-6007 fix

----
;;;","04/May/18 09:09;sharpler;[~ilantukh] I have started TeamCity run with 1000 reruns of the test. For checking my solution.

*UPD:*

1000 reruns passed in [TC|https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_BuildApacheIgnite&branch_IgniteTests24Java8=pull%2F3935%2Fhead&tab=buildTypeStatusDiv] and locally.;;;","07/May/18 09:04;NSAmelchev;[~sharpler] I looked at your patch. Looks good to me.;;;","07/May/18 09:31;nizhikov;[~sharpler] Merged to master. Thanks for contribution.;;;","07/May/18 09:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3935
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test failed] GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreNonFailoverSafe,IGNITE-6005,13093435,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,nizhikov,EdShangGG,EdShangGG,09/Aug/17 11:14,08/Jun/18 10:10,14/Jul/23 06:20,26/Feb/18 12:51,2.1,,,,,2.5,,,,,,3,MakeTeamcityGreenAgain,,,"Example of fail
https://ci.ignite.apache.org/viewLog.html?buildId=762788&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteDataStrucutures

Typical problem is 
{code}
org.apache.ignite.IgniteInterruptedException: Failed to wait for asynchronous operation permit (thread got interrupted).
    at org.apache.ignite.internal.util.IgniteUtils$3.apply(IgniteUtils.java:805)
    at org.apache.ignite.internal.util.IgniteUtils$3.apply(IgniteUtils.java:803)
    at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:961)
    at org.apache.ignite.internal.processors.datastructures.GridCacheSemaphoreImpl.close(GridCacheSemaphoreImpl.java:1026)
    at org.apache.ignite.internal.processors.cache.datastructures.GridCacheAbstractDataStructuresFailoverSelfTest.testSemaphoreNonFailoverSafe(GridCacheAbstractDataStructuresFailoverSelfTest.java:458)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
    at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.InterruptedException: null
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1301)
    at java.util.concurrent.Semaphore.acquire(Semaphore.java:317)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.asyncOpAcquire(GridCacheAdapter.java:4314)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.asyncOp(GridCacheAdapter.java:4177)
    at org.apache.ignite.internal.processors.cache.distributed.dht.colocated.GridDhtColocatedCache.getAsync(GridDhtColocatedCache.java:196)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get0(GridCacheAdapter.java:4509)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:4490)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.get(GridCacheAdapter.java:1324)
    at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.get(GridCacheProxyImpl.java:329)
    at org.apache.ignite.internal.processors.datastructures.DataStructuresProcessor$5.applyx(DataStructuresProcessor.java:635)
    at org.apache.ignite.internal.processors.datastructures.DataStructuresProcessor.retryTopologySafe(DataStructuresProcessor.java:1519)
    at org.apache.ignite.internal.processors.datastructures.DataStructuresProcessor.removeDataStructure(DataStructuresProcessor.java:629)
    at org.apache.ignite.internal.processors.datastructures.DataStructuresProcessor.removeSemaphore(DataStructuresProcessor.java:1188)
    at org.apache.ignite.internal.processors.datastructures.GridCacheSemaphoreImpl.close(GridCacheSemaphoreImpl.java:1023)
    at org.apache.ignite.internal.processors.cache.datastructures.GridCacheAbstractDataStructuresFailoverSelfTest.testSemaphoreNonFailoverSafe(GridCacheAbstractDataStructuresFailoverSelfTest.java:458)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
    at java.lang.Thread.run(Thread.java:745)
{code}",,agura,amashenkov,avinogradov,daradurvs,dpavlov,ezhuravl,githubbot,ilantukh,nizhikov,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5973,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 26 15:49:02 UTC 2018,,,,,,,,,,"0|i3il3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/17 12:11;xtern;Hello.

Here in this case, it is obvious, that sometimes the thread that invokes GridCacheSemaphoreImpl#close may be interrupted and therefore he can’t release the resources (fails in GridCacheAdapter#asyncOpAcquire on java.util.Semaphore#acquire).

Should GridCacheSemaphoreImpl#close succeed if executed by interrupted thread?
;;;","28/Sep/17 16:51;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/2773

    IGNITE-6005: Add ability to close datastructure in interrupted thread.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-6005

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2773.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2773
    
----
commit cee2914a07e84740ba8502f26b5d3bb266b9fc2f
Author: Nikolay Izhikov <nizhikov.dev@gmail.com>
Date:   2017-09-28T16:50:36Z

    IGNITE-6005: Add ability to close datastructure in interrupted thread.

----
;;;","29/Sep/17 13:02;nizhikov;TC run - https://ci.ignite.apache.org/viewLog.html?buildId=863779;;;","29/Sep/17 13:03;nizhikov;[~EdShangGG], can you review my fix?;;;","02/Oct/17 20:08;dpavlov;Hi [~avinogradov], could you please look to this fix? 
Change is located in DataStructuresProcessor.;;;","03/Oct/17 10:05;EdShangGG;I am not expert in distributed semaphore at all. [~avinogradov] is a definitely better reviewer for the ticket.;;;","05/Oct/17 10:59;avinogradov;[~NIzhikov]
I'll try to review this month.;;;","12/Oct/17 15:05;agura;[~NIzhikov] The change doesn't fix the problem. Thread can be interrupted after {{Thread.interrupted()}} call and the problem will be the same.;;;","12/Oct/17 19:20;nizhikov;[~agura], Thank you for review.

> Thread can be interrupted after Thread.interrupted() call and the problem will be the same

Internally {{get}} and {{remove}} operation uses {{java.util.Semaphore}}
So I think we have to keep trying to remove data structure if we get InterruptedException to fix a described issue.

Do you have another solution without {{while(wasInterrupted)...}} loop ?

Please, see my updated PR.;;;","13/Oct/17 11:22;agura;I think better way is using special code flow for operations with non-interruptible semantic.;;;","14/Oct/17 09:32;nizhikov;[~agura], [~avinogradov] - guys, I need some advice.

1. We have complex `after remove` callbacks in {{removeSet}} and {{removeQueue}}.
2. I can't see any clear way to make these callbacks can run on an interrupted thread,
because internally all {{get}} and {{remove}} methods leads to usage of {{asyncOp}} and Semaphore synchronization.

Can you suggest any recipe to make `after remove` callback from {{removeSet}} and {{removeQueue}} runs success on interrupted thread.?
What have I missed? ;;;","14/Oct/17 09:32;nizhikov;[~avinogradov], [~agura]

Below wider explanation why I have stucked:

> I think better way is using special code flow for operations with non-interruptible semantic.

1. As far as I can see - *all* {{get*}} operations within tx requires synchronization on internal {{Semaphore}} therefore can't be executed on interrupted thread.

2. I suggest usage explicit lock on data structure key. It helps a bit, but I don't get any logic in call results:

Interrupted thread:

GridDhtColocatedCache:

cache.get(key) - fails.
cache.getAsync(key).getUninterruptibly() - succeed
cache.remove(key) - succeed.
cache.removeAsync(key).getUninterruptibly() - fails.

GridDhtAtomicCache: 

All calls of get* or getAsync* fails.

Any suggestion why this happening?

This code runs OK on interrupted thread. Cache is GridDhtColocatedCache.
{code:java}
    boolean lock = cache.lock(key, 0);
    AtomicDataStructureValue val = cache.getAsync(key).getUninterruptibly();
    cache.remove(key);
{code}

This code fails on interrupted thread. Cache is GridDhtAtomicCache
{code:java}
                hdr = (GridCacheSetHeader) cctx.cache().getAsync(new GridCacheSetHeaderKey(name)).getUninterruptibly();
{code};;;","23/Oct/17 17:58;nizhikov;[~agura], Hello. Please, help.

> I think better way is using special code flow for operations with non-interruptible semantic.

Is there any non-interruptible semantic for now?
Or I should implement my own to resolve this issue?;;;","03/Nov/17 09:28;ezhuravl;Why don't just use while loop with catch block for an interrupted exception? ;;;","03/Nov/17 09:46;nizhikov;[~ezhuravl] Hello!

Thank you for an answer.

> Why don't just use while loop with catch block for an interrupted exception?

That is exactly what I have done in my PR.
Please, see changes:
https://reviews.ignite.apache.org/ignite/review/IGNT-CR-356?filePath=/modules/core/src/main/java/org/apache/ignite/internal/processors/datastructures/DataStructuresProcessor.java

Do you think the fix is correct?;;;","07/Nov/17 13:51;ezhuravl;[~NIzhikov], I've added my thoughts to the review for this PR.;;;","08/Nov/17 07:21;nizhikov;[~ezhuravl] Thank you!

Please, see my answers and fixes in review.;;;","10/Nov/17 15:58;agura;[~NIzhikov] It should work. But I don't understand purpose of {{isInterrupted}} flag. It will be initialized only once when closure will be invoked and probably it's value will be always {{false}}. It seems that it should be get new value in catck block which handles {{InterruptedException}}.;;;","11/Nov/17 12:40;nizhikov;[~agura]

{quote}it should be get new value in catck block which handles `InterruptedException`{quote}

My bad, of course, it should :)
Fixed.
Please, take a look.;;;","05/Dec/17 13:43;nizhikov;Hello, [~agura], [~ezhuravl].

Did you have a chance to review my fix?
Does it look good for you guys?;;;","12/Feb/18 15:46;agura;As I told early, I don't like the solution (https://issues.apache.org/jira/browse/IGNITE-6005?focusedCommentId=16203400&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16203400). It will work but it seems that solution isn't good for all cases.;;;","12/Feb/18 15:48;nizhikov;Hello [~agura].

What is your suggestion?
Just keep this issue as is?
Please, tell me, how it should be fixed?;;;","14/Feb/18 12:36;ilantukh;Hi [~NIzhikov],

Thanks for contribution!

Changes look acceptable to me, and I can't see how we can make solution more generic. [~agura], could you please explain your concern in more detail?;;;","14/Feb/18 14:59;dpavlov;It is quite old ticket related to Make TC green activity, If current solution can work, but has potential for improvement, I suggest the following
1. to merge fix and 
2. create separate issue for improve solution. 

WDYT?;;;","16/Feb/18 14:39;dpavlov;Hi [~agura],

Kind reminder, please reply. Can we merge with improvement issue?;;;","20/Feb/18 10:18;dpavlov;[~agoncharuk], can we merge current changes since there is no response from [~agura]?

[~NIzhikov], would this change help to solve continious timeouts in https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_IgniteDataStructures&branch=%3Cdefault%3E&tab=buildTypeStatusDiv 

     GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreSingleNodeFailure (last started) 
?;;;","20/Feb/18 11:03;nizhikov;[~dpavlov]

> would this change help to solve continious timeouts in ... GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreSingleNodeFailure (last started)

I have no experience in Team City log analysis, but {{GridCachePartitionedDataStructuresFailoverSelfTest extends GridCacheAbstractDataStructuresFailoverSelfTest}} so merge of this PR *may* help with suite timeouts.
;;;","22/Feb/18 07:05;nizhikov;[~agura], [~dpavlov]

TC run - https://ci.ignite.apache.org/viewLog.html?buildId=1105744;;;","22/Feb/18 09:27;nizhikov;[~agura], [~dpavlov]

TC run. Hanging test muted

https://ci.ignite.apache.org/viewQueued.html?itemId=1106624&tab=queuedBuildOverviewTab;;;","26/Feb/18 11:33;dpavlov;Hi [~NIzhikov], I've checked your run and din't find any suspicious test (except that I mentioned on dev-list, RDD*). 

So TC looks acceptable.

[~agura], can we proceed and merge?;;;","26/Feb/18 12:50;agura;[~NIzhikov] Merged to master branch. Thanks for your contribution!;;;","26/Feb/18 15:42;githubbot;Github user nizhikov closed the pull request at:

    https://github.com/apache/ignite/pull/2773
;;;","26/Feb/18 15:49;nizhikov;[~agura] Thank you, for paying attention to my PR!;;;",,,,,,,,,
"SQL: add ""inlineSize"" to QuerySqlField annotation",IGNITE-6004,13093424,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,09/Aug/17 10:11,28/Aug/17 16:37,14/Jul/23 06:20,15/Aug/17 08:21,2.1,,,,,2.3,,sql,,,,0,usability,,,"""inlineSize"" is very important optimization allowing to avoid excessive data page reads when using index. However, it can only be set through {{QueryEntity}} -> {{QueryIndex}} chain, and cannot be set through {{\@QuerySqlField}} annotation.

Let's fix that and add {{int indexInlineSize}} parameter to that annotation.",,githubbot,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 15 08:21:43 UTC 2017,,,,,,,,,,"0|i3il1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 12:49;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2420

    IGNITE-6004 SQL: add ""inlineSize"" to QuerySqlField annotation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-6004

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2420.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2420
    
----
commit d70f69bc8afe0b96421fca4e2004cc70c66a8434
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-08-09T12:49:18Z

    IGNITE-6004 SQL: add ""inlineSize"" to QuerySqlField annotation

----
;;;","09/Aug/17 13:14;tledkov-gridgain;[Tests results|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2420%2Fhead] are OK with me.

[~vozerov], [~skalashnikov], please review the patch.;;;","14/Aug/17 13:56;vozerov;[~tledkov-gridgain], my comments:
1) Why {{GridCacheQuerySqlFieldInlineSizeSelfTest}} is in cache suite instead of query suite?
2) Poor description of new public methods and exceptions which user could face.
;;;","14/Aug/17 14:56;tledkov-gridgain;[~vozerov],
1) The test is moved
2) The javadocs of the {{QuerySqlField.inlineSize}} & {{QueryGroupIndex.inlineSize}}  are enhanced.;;;","15/Aug/17 08:21;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2420
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Make log message more pretty when instance name is null,IGNITE-6002,13093378,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,sarutak,sarutak,sarutak,09/Aug/17 06:27,01/Aug/19 22:06,14/Jul/23 06:20,13/Sep/17 12:57,2.2,,,,,2.3,,general,,,,0,,,,"When instance name is null, log message containing ""null"" is shown like as follows.

{code}
[09-08-2017 14:49:38][INFO ][grid-timeout-worker-#15%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=de0743ec, name=null, uptime=00:01:00:007]
{code}",,avinogradov,githubbot,sarutak,,,,,,,,,,"dspavlov commented on issue #2418: [IGNITE-6002] Make log message more pretty when instance name is null
URL: https://github.com/apache/ignite/pull/2418#issuecomment-517475160
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2418: [IGNITE-6002] Make log message more pretty when instance name is null
URL: https://github.com/apache/ignite/pull/2418
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 13 12:57:12 UTC 2017,,,,,,,,,,"0|i3ikrr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 06:31;githubbot;GitHub user sarutak opened a pull request:

    https://github.com/apache/ignite/pull/2418

    [IGNITE-6002] Make log message more pretty when instance name is null

    When instance name is null, log message containing ""null"" is shown like as follows.
    
    ```
    [09-08-2017 14:49:38][INFO ][grid-timeout-worker-#15%null%][IgniteKernal]
    Metrics for local node (to disable set 'metricsLogFrequency' to 0)
        ^-- Node [id=de0743ec, name=null, uptime=00:01:00:007]
    ```

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sarutak/ignite IGNITE-6002

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2418.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2418
    
----
commit cb1d8bafb343d4365f3b47552ecdac9a3b0aea21
Author: Kousuke Saruta <sarutak@oss.nttdata.co.jp>
Date:   2017-08-09T06:28:35Z

    Fix log message to make it more pretty

----
;;;","25/Aug/17 10:12;sarutak;[~yzhdanov] If you have time, please review this? Thanks!;;;","12/Sep/17 18:43;sarutak;[~avinogradov] If you have time, could you review this?;;;","13/Sep/17 09:06;avinogradov;[~sarutak],
It looks like you changed {{name=null}} with empty space.
Could you please explain reason to hide param in case it's value is null?

Also, next time, please, assign issue to yourself before asking review.;;;","13/Sep/17 11:36;sarutak;[~avinogradov] Thanks for your reply!

{quote}
It looks like you changed name=null with empty space.
Could you please explain reason to hide param in case it's value is null?
{quote}
I think, it's not useful information and little bit ugly.
There are already lots of code like this change in IgniteKernel.java. Following example is one of them.

{code}
log = (GridLoggerProxy)cfg.getGridLogger().getLogger(
    getClass().getName() + (igniteInstanceName != null ? '%' + igniteInstanceName : """"));
{code}

{quote}
Also, next time, please, assign issue to yourself before asking review.
{quote}

I'd like to do that but I didn't edit Assignee field.
;;;","13/Sep/17 12:57;avinogradov;Thanks for explanation. 
Patch accepted and merged to master.
Thanks for contribution.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion fails: Moving partition is below zero,IGNITE-5999,13093242,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agura,EdShangGG,EdShangGG,08/Aug/17 17:27,02/Aug/19 11:02,14/Jul/23 06:20,04/Sep/17 15:21,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,Muted_test,,"It was found during org.apache.ignite.internal.processors.cache.distributed.near.IgniteCacheQueryNodeRestartSelfTest2#testRestarts execution

{code}
java.lang.AssertionError: -10

	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap.hasMovingPartitions(GridDhtPartitionMap.java:135)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.hasMovingPartitions(GridDhtPartitionTopologyImpl.java:2116)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.hasMovingPartitions(GridReduceQueryExecutor.java:366)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.isPreloadingActive(GridReduceQueryExecutor.java:354)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridReduceQueryExecutor.query(GridReduceQueryExecutor.java:577)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$8.iterator(IgniteH2Indexing.java:1160)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:95)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.getAll(QueryCursorImpl.java:114)
	at org.apache.ignite.internal.processors.cache.distributed.near.IgniteCacheQueryNodeRestartSelfTest2$1.applyx(IgniteCacheQueryNodeRestartSelfTest2.java:247)
	at org.apache.ignite.internal.util.lang.GridAbsClosureX.apply(GridAbsClosureX.java:35)
	at org.apache.ignite.internal.util.lang.GridAbsClosure.run(GridAbsClosure.java:50)
	at org.apache.ignite.testframework.GridTestUtils$9.call(GridTestUtils.java:1236)
	at org.apache.ignite.testframework.GridTestThread.run(GridTestThread.java:86)
{code}",,agura,githubbot,ilantukh,,,,,,,,,,"dspavlov commented on issue #2577: IGNITE-5999 : Fixed calculation of moving partitions count.
URL: https://github.com/apache/ignite/pull/2577#issuecomment-517659997
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2577: IGNITE-5999 : Fixed calculation of moving partitions count.
URL: https://github.com/apache/ignite/pull/2577
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 04 15:21:38 UTC 2017,,,,,,,,,,"0|i3ijxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/17 11:23;ilantukh;""Moving"" field value was calculated incorrectly if map values were copied from another map. I fixed it. However, the test still fails sometimes due to other reasons.;;;","01/Sep/17 11:27;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2577

    IGNITE-5999 : Fixed calculation of moving partitions count.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5999

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2577.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2577
    
----
commit bd23da34b1a77e4c9742b7021e6917ca91fadf8f
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-09-01T11:25:34Z

    ignite-5999 : Fixed calculation of moving partitions count.

----
;;;","04/Sep/17 11:48;ilantukh;[~agura],
Please review.;;;","04/Sep/17 15:21;agura;LGTM! Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLGetData gets data for the next row instead of current,IGNITE-5995,13093194,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,08/Aug/17 14:57,28/Aug/17 16:36,14/Jul/23 06:20,10/Aug/17 12:47,2.1,,,,,2.3,,odbc,,,,0,,,,"{{SQLGetData}} when called after {{SQLFetch}} should retrieve data from the same row as {{SQLFetch}}. But currently, {{SQLGetData}} retrieves data from the next row.",,githubbot,isapego,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5842,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 10 12:47:45 UTC 2017,,,,,,,,,,"0|i3ijmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 14:14;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2421

    IGNITE-5995: ODBC: Fix for SQLGetData

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5995

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2421.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2421
    
----
commit af8c1a82977504378adabf35a8d58d444f81dfe9
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-08T16:55:46Z

    IGNITE-5995: Added tests.

commit 89064118f2e070de7785ce3cec251273d171ab0f
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-08T17:50:44Z

    IGNITE-5995: Fix for tests

commit f2ce7cee88bac5796c705fab297de1fb900a1bb0
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-08T17:51:19Z

    IGNITE-5995: Meta queries fixed

----
;;;","09/Aug/17 14:45;isapego;Ready. [~skalashnikov] can you take a look?;;;","09/Aug/17 19:41;skalashnikov;[~isapego],
Looks good to me.;;;","10/Aug/17 12:33;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2421
;;;","10/Aug/17 12:47;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteInternalCache.invokeAsync().get() can return null,IGNITE-5994,13093185,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,sharpler,sharpler,sharpler,08/Aug/17 14:33,10/Oct/19 13:11,14/Jul/23 06:20,24/Apr/18 12:03,2.1,,,,,2.8,,cache,,,,0,newbie,,,"The IgniteInternalCache.invoke() always return an EntryProcessorResult, but the IgniteInternalCache.invokeAsync().get() can return the null in case when an EntryProcessor has returned the null.

Code from reproducer:

{noformat}
final EntryProcessor<Object, Object, Object> ep = new EntryProcessor<Object, Object, Object>() {
            @Override
            public Object process(MutableEntry<Object, Object> entry,
                Object... objects) throws EntryProcessorException {
                return null;
            }
        };

        EntryProcessorResult<Object> result = utilCache.invoke(""test"", ep);

        assertNotNull(result);
        assertNull(result.get());


        result = utilCache.invokeAsync(""test"", ep).get();

        // Assert here!!!
        assertNotNull(result);
        assertNull(result.get());

{noformat}
It can be optimization. Nevertheless results of invoke() must be equals with results of invokeAsync().get(). So there are two options:

1) To do so would be the invokeAsync(key, ep).get() returned the null too for the optimization.
2) Or to do so would be the invoke(key, ep) returned an EntryProcessorResult for a logical consistency.

NOTE: Don't confuse with IgniteCache.invoke.",,avinogradov,githubbot,sharpler,shia,yzhdanov,,,,,,,,"dspavlov commented on issue #2569: IGNITE-5994 Implemented.
URL: https://github.com/apache/ignite/pull/2569#issuecomment-517659983
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2569: IGNITE-5994 Implemented.
URL: https://github.com/apache/ignite/pull/2569
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 14:37;sharpler;IgniteCacheSelfTest.java;https://issues.apache.org/jira/secure/attachment/12880839/IgniteCacheSelfTest.java","31/Aug/17 13:55;shia;master_8629b50d6f_ignite-5994.patch;https://issues.apache.org/jira/secure/attachment/12884681/master_8629b50d6f_ignite-5994.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 04 12:16:29 UTC 2018,,,,,,,,,,"0|i3ijkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 10:18;yzhdanov;Currently {{invokeAsync()}} is defined as {{public <T> IgniteFuture<T> invokeAsync(.....)}}.

If we need EntryProcessorResult to be returned from Future then it should be {{public <T> IgniteFuture<EntryProcessorResult<T>> invokeAsync(.....)}}. I am not sure why we have this difference in sync/async counterpart. Probably, [~vozerov] or [~tledkov-gridgain] can provide some info.

I also think that we will not changing the public API in 2.0. Let's leave it as is and then fix in next major version.
;;;","09/Aug/17 11:47;avinogradov;[~yzhdanov],

Currently,
{{IgniteCache.invokeAsync()}} is defined as {{<T> IgniteFuture<T> invokeAsync(...)}},
but {{IgniteInternalCache.invokeAsync()}} is defined as {{<T> IgniteInternalFuture<EntryProcessorResult<T>> invokeAsync(...)}}
and question about second one.

When {{EntryProcessor}} returns {{null}} we will gain {{null}} at {{invokeAsync(...).get()}},
But when it returns {{not null}} we will gain {{EntryProcessorResult}} instance at {{invokeAsync(...).get()}}

So, the question is, is it optimization or bug?;;;","09/Aug/17 13:24;yzhdanov;[~avinogradov] [~sharpler], now I see. That's definitely a bug. If return type is Future<T> then it should return object of type returned by an entry processor.;;;","15/Aug/17 10:06;shia;[~sharpler] I would like to be work on this issue. Please assigned it to me.;;;","15/Aug/17 13:52;sharpler;[~shia] I can't. You need to ask for account permission in dev-list first.;;;","17/Aug/17 03:05;shia;[~sharpler] I have asked for permission in dev-list and got reply that I have been add to the list.;;;","28/Aug/17 11:22;avinogradov;[~shia],
now you should be able to assign issue to yourself.;;;","31/Aug/17 14:59;githubbot;GitHub user shia86 opened a pull request:

    https://github.com/apache/ignite/pull/2569

    IGNITE-5994 Implemented.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shia86/ignite ignite-5994

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2569.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2569
    
----
commit 1472304fe29e4dabab43bccf849bc3832811638d
Author: Zhang Yuan <shia.zhang@dianping.com>
Date:   2017-08-14T03:38:25Z

    IGNITE-5994 Implemented.

----
;;;","17/Nov/17 06:37;sharpler;[~shia] You has formed the patch in wrong way. You need to create a PR on GitHub and create a upsource review. Please see HowToContribute page: https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-Workflow

Sorry for a slow answering. Also, I have to say I haven't merge permission so you will have to ask about merge on dev-list.;;;","03/Apr/18 14:54;sharpler;Resume progress because [~shia] didn't make upsouce review and all other things.;;;","05/Apr/18 14:53;sharpler;I gonna take Zhang Yuan's PR and bring it to merged state.;;;","24/Apr/18 12:03;avinogradov;Merged to master.
Thanks for contribution.;;;","04/May/18 12:16;githubbot;Github user SharplEr closed the pull request at:

    https://github.com/apache/ignite/pull/3851
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
visorcmd: add possibility do not close visorcmd in batch mode,IGNITE-5987,13093141,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,08/Aug/17 11:54,13/Sep/17 03:26,14/Jul/23 06:20,09/Aug/17 12:02,,,,,,2.3,,wizards,,,,0,,,,That possibility will be useful for alert command which works only while visorcmd is active,,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 13 03:26:20 UTC 2017,,,,,,,,,,"0|i3ijb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 03:07;kuaw26;Please test in batch mode with alerts configured via batch mode and ""-nq"" option.;;;","09/Aug/17 07:17;pkonstantinov;Successfully tested.
My test is:
run visorcmd as daemon to register alert and monitoring it
{code}
screen -dmS visorcmd-register-alert ./ignitevisorcmd.sh -nq -b=register-alert.batch
{code}
register-alert.batch is
{code}
open -cpath=config/my-config.xml
alert -r -n=ALERT_NODE_DOWN -t=60 -nc=lt2 -s=./alert-node-down.sh
{code}
alert-node-down.sh has the following content
{code}
#!/bin/bash
#


TIMESTAMP=`date`
ALERT_OUTPUT_FILE=./node_down_alert.txt
VISOR_BATCH_COMMAND_FILE=./visor-cmds-node-status.batch
NODE_STATUS=`./ignitevisorcmd.sh -np -b=${VISOR_BATCH_COMMAND_FILE}`
NODE_COUNT_TRIGGER=2

echo ""ALERT: node count dropped below ${NODE_COUNT_TRIGGER} at ${TIMESTAMP}"" > ${ALERT_OUTPUT_FILE}
echo ""CURRENT NODE STATUS:""
echo ""${NODE_STATUS}"" >> ${ALERT_OUTPUT_FILE}
{code}
for testing purpose visor-cmds-node-status.batch contains  
{code}
open -cpath=config/tester/tester-gg-node.xml
top
{code};;;","09/Aug/17 07:40;pkonstantinov;Successfully verified via ssh connection from another host.;;;","09/Aug/17 12:02;kuaw26;Merged to master. Please retest.;;;","13/Sep/17 03:26;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCacheReplicatedLocalStoreSelfTest.testBackupRestorePrimary flaky-fails in master,IGNITE-5984,13093129,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,08/Aug/17 11:20,28/Aug/17 16:39,14/Jul/23 06:20,08/Aug/17 11:54,2.1,,,,,2.3,,cache,,,,0,MakeTeamcityGreenAgain,,,,,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 08 11:54:16 UTC 2017,,,,,,,,,,"0|i3ij8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 11:48;agoncharuk;The test fails because we iterate over the given key range before late affinity assignment kicks in.;;;","08/Aug/17 11:54;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Split GridMapQueryExecutor into multiple classes,IGNITE-5982,13093088,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,08/Aug/17 08:12,01/Aug/19 22:06,14/Jul/23 06:20,08/Aug/17 12:18,2.1,,,,,2.3,,sql,,,,0,,,,Let's do that to make further class maintenance simpler.,,githubbot,vozerov,,,,,,,,,,,"dspavlov commented on issue #2411: IGNITE-5982
URL: https://github.com/apache/ignite/pull/2411#issuecomment-517475190
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2411: IGNITE-5982
URL: https://github.com/apache/ignite/pull/2411
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 08 08:46:38 UTC 2017,,,,,,,,,,"0|i3iizb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 08:46;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2411

    IGNITE-5982

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5982

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2411.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2411
    
----
commit a9a4f344da8e0ea85743208ab99966d9e6d59f3e
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:20:28Z

    WIP.

commit e1e5fbb5f9faf521bbd9f6b014569e9cc3afb3dc
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:22:59Z

    WIP (2).

commit 8b58a0fcf287fff8828ce3a817dc89f568fd7dd3
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:26:16Z

    WIP (3).

commit 7d5a00d8be124bf4e8ec6fec0c6ed6510b486f8b
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:29:17Z

    WIP (4).

commit e9d7f093eb227032a6474195181741161e5fd139
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:30:08Z

    WIP (5).

commit 11938f7baf525de453dcb8fa20a47ebfe8ab1050
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:32:00Z

    Minors.

commit 203000251184196d498f890feae8020659e95e36
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:41:57Z

    WIP.

commit 93d9fd6090a0f8e51af4e1064bb59ed930b5e055
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-08T08:44:02Z

    Finalization.

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteContext starts server nodes on executors,IGNITE-5981,13093011,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,07/Aug/17 20:47,30/Nov/17 22:59,14/Jul/23 06:20,30/Nov/17 22:59,2.1,,,,,2.4,,spark,,,,0,,,,"Currently {{IgniteContext#ignite()}} method creates client node only if it is invoked on driver. However, in case standalone mode is used, this should happen also executors (or basically anywhere within Spark).

Most likely, it would be enough to replace this line:
{code}
if (sparkContext != null) igniteCfg.setClientMode(true)
{code}
with this:
{code}
if (standalone || sparkContext != null) igniteCfg.setClientMode(true)
{code}",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-08-07 20:47:38.0,,,,,,,,,,"0|i3iii7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test Failed] IgnitePartitionedCountDownLatchSelfTest.testLatchMultinode1,IGNITE-5978,13092962,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,EdShangGG,EdShangGG,07/Aug/17 18:08,05/Apr/18 12:55,14/Jul/23 06:20,05/Apr/18 12:55,2.1,,,,,2.5,,,,,,0,MakeTeamcityGreenAgain,,,"Fails locally.
Example of failing - http://ci.ignite.apache.org/viewLog.html?buildId=759891&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteDataStrucutures#testNameId677264269171099154.",,amashenkov,dpavlov,githubbot,ivan.glukos,SomeFire,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 05 12:55:25 UTC 2018,,,,,,,,,,"0|i3ii7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/18 10:51;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/3747

    IGNITE-5978

    Test fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-5978

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3747.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3747
    
----
commit 7ad83373fe097d97fdfc1d6abc1948d1f263d97a
Author: Vitaliy Biryukov <biryukovvitaliy92@...>
Date:   2018-04-04T10:50:08Z

    IGNITE-5978: Test fixed.

----
;;;","04/Apr/18 14:20;SomeFire;Looks good.;;;","04/Apr/18 16:09;VitaliyB;[~NIzhikov] please take a look.

Latch creates with ""autoDel=true"", and there was a race between last 

""latch.countDown()"" and resiving latch in threads.;;;","05/Apr/18 10:09;dpavlov;[~ivan.glukos], could you please take a look?;;;","05/Apr/18 11:59;ivan.glukos;Looks good to me.;;;","05/Apr/18 12:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3747
;;;","05/Apr/18 12:55;dpavlov;[~VitaliyB], thank you for contribution. [~ivan.glukos], thank you for review.

merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test Failed]  IgniteClientDiscoveryDataStructuresTest.testSequence,IGNITE-5977,13092958,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,alex_pl,EdShangGG,EdShangGG,07/Aug/17 18:02,10/Dec/18 19:10,14/Jul/23 06:20,06/Jun/18 11:01,2.1,,,,,2.7,,,,,,0,MakeTeamcityGreenAgain,,,"Fails locally.
Example of failing http://ci.ignite.apache.org/viewLog.html?buildId=760759&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteDataStrucutures#testNameId2829619862655631000",,agura,alex_pl,amashenkov,andmed,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5976,,,,,,,,,,,,,,,IGNITE-7845,,,IGNITE-5974,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 19:10:00 UTC 2018,,,,,,,,,,"0|i3ii6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/May/18 07:47;alex_pl;The same failure now in tests {{IgniteClientDataStructuresTest.testSequence}} and  {{IgniteClientDataStructuresTest.testReentrantLock}}:

{noformat}
junit.framework.AssertionFailedError: Expected: <null> but was: GridCacheAtomicSequenceImpl [locVal=1001, upBound=2000, batchSize=1000, incAndGetCall=org.apache.ignite.internal.processors.datastructures.GridCacheAtomicSequenceImpl$2@25a74425, getAndIncCall=org.apache.ignite.internal.processors.datastructures.GridCacheAtomicSequenceImpl$2@366f4fb5]
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertNull(Assert.java:277)
    at junit.framework.Assert.assertNull(Assert.java:268)
    at junit.framework.TestCase.assertNull(TestCase.java:438)
    at org.apache.ignite.internal.processors.cache.datastructures.IgniteClientDataStructuresAbstractTest.testSequence(IgniteClientDataStructuresAbstractTest.java:123)
    at org.apache.ignite.internal.processors.cache.datastructures.IgniteClientDataStructuresAbstractTest.testSequence(IgniteClientDataStructuresAbstractTest.java:96)
{noformat}

When we trying to get data structure after closing, in some cases we get not removed value from dsMap. This can happen because data structure removed from cache synchronously and removed from dsMap asynchronously. 

I think we should change test to check two cases: 
# Data structure is invalid after closing (can't perform any operation with DS)
# After some time {{atomicSequence}} and {{reentrantLock}} methods return null (replace {{assertNull}} with {{waitForCondition}});;;","11/May/18 14:11;githubbot;GitHub user alex-plekhanov opened a pull request:

    https://github.com/apache/ignite/pull/3980

    IGNITE-5977 Flaky failure of IgniteClientDataStructuresTest

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alex-plekhanov/ignite ignite-5977

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3980.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3980
    
----
commit 085458aad03955f9766b1df8a3cc3524f5071dbe
Author: Aleksey Plekhanov <plehanov.alex@...>
Date:   2018-05-11T14:07:27Z

    IGNITE-5977 Flaky failure of IgniteClientDataStructuresTest

----
;;;","11/May/18 14:13;githubbot;GitHub user alex-plekhanov opened a pull request:

    https://github.com/apache/ignite/pull/3981

    IGNITE-5977 Flaky failure of IgniteClientDataStructuresTest (looped TC run)

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alex-plekhanov/ignite ignite-5977-debug

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3981.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3981
    
----
commit 085458aad03955f9766b1df8a3cc3524f5071dbe
Author: Aleksey Plekhanov <plehanov.alex@...>
Date:   2018-05-11T14:07:27Z

    IGNITE-5977 Flaky failure of IgniteClientDataStructuresTest

commit 69acbf1250e0d94e29943aedb36d194e6f79fbaf
Author: Aleksey Plekhanov <plehanov.alex@...>
Date:   2018-05-11T14:11:12Z

    IGNITE-5977 Flaky failure of IgniteClientDataStructuresTest (looped TC run)

----
;;;","11/May/18 15:24;alex_pl;I made changes for {{IgniteAtomicSequence}}, {{IgniteCountDownLatch}}, {{IgniteSemaphore}} and {{IgniteLock}}. This data structures are vulnerable to a race condition. {{IgniteAtomicLong}} was fixed before by ticket IGNITE-7845. {{IgniteSet}} and {{IgniteQueue}} makes requests to distributed cache when we try to get these data structures, so it's not necessary to fix tests for these structures.;;;","06/Jun/18 11:01;agura;[~alex_pl] LGTM. Merged to master branch. Thanks for contribution!;;;","10/Dec/18 19:09;githubbot;Github user alex-plekhanov closed the pull request at:

    https://github.com/apache/ignite/pull/3980
;;;","10/Dec/18 19:10;githubbot;Github user alex-plekhanov closed the pull request at:

    https://github.com/apache/ignite/pull/3981
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test Failed] GridCachePartitionedDataStructuresFailoverSelfTest.testSemaphoreSingleNodeFailure,IGNITE-5975,13092955,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,07/Aug/17 17:55,18/May/18 08:59,14/Jul/23 06:20,05/Apr/18 08:28,2.1,,,,,2.5,,,,,,0,MakeTeamcityGreenAgain,Muted_test,,"Fails locally.
Example of failing - http://ci.ignite.apache.org/viewLog.html?buildId=758964&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteDataStrucutures#testNameId-2988875689386264427.",,agoncharuk,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8521,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 03 16:06:13 UTC 2018,,,,,,,,,,"0|i3ii5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/18 16:42;dpavlov;GridCacheReplicatedDataStructuresFailoverSelfTest is also failed. This test was cause of constant suite timeouts, muted in master;;;","03/Apr/18 16:06;agoncharuk;The reason for this hang is that we stop processing query responses from remote nodes when context is stopping, but keep holding a read lock when still waiting for response.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Test Failed] GridCacheAbstractDataStructuresFailoverSelfTest.testSemaphoreNonFailoverSafe,IGNITE-5973,13092952,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,xtern,EdShangGG,EdShangGG,07/Aug/17 17:45,14/Jun/18 12:43,14/Jul/23 06:20,14/Jun/18 12:40,2.1,,,,,,,,,,,0,MakeTeamcityGreenAgain,,,"Success right is 93.3%. Fails locally.
Example of failing - http://ci.ignite.apache.org/viewLog.html?buildId=757906&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteDataStrucutures#testNameId-979977708202725050",,amashenkov,githubbot,nizhikov,SomeFire,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6005,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 14 12:43:46 UTC 2018,,,,,,,,,,"0|i3ii53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jun/18 10:04;xtern;Log output from TeamCity:
{noformat}
class org.apache.ignite.IgniteInterruptedException: Got interrupted while waiting for future to complete.
    at org.apache.ignite.internal.util.IgniteUtils$3.apply(IgniteUtils.java:829)
    at org.apache.ignite.internal.util.IgniteUtils$3.apply(IgniteUtils.java:827)
    at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:985)
    at org.apache.ignite.internal.processors.datastructures.GridCacheSemaphoreImpl.close(GridCacheSemaphoreImpl.java:969)
    at org.apache.ignite.internal.processors.cache.datastructures.GridCacheAbstractDataStructuresFailoverSelfTest.testSemaphoreNonFailoverSafe(GridCacheAbstractDataStructuresFailoverSelfTest.java:481)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2086)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:140)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:2001)
    at java.lang.Thread.run(Thread.java:748)
{noformat}

In IGNITE-6005 was added ability to close datastructure on interrupted thread.
Retry of ""close"" operation was added in case of InterruptedException, but in some cases InterruptedException does not thrown.
For example GridFutureAdapter#get0 checks interruption flag and throws IgniteInterruptedCheckedException.;;;","08/Jun/18 10:05;githubbot;GitHub user xtern opened a pull request:

    https://github.com/apache/ignite/pull/4156

    IGNITE-5973 Flaky failures.

    …(fix).

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/xtern/ignite IGNITE-5973

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4156.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4156
    
----
commit 48044b147d11992cefddf74502207dca355d9f62
Author: pereslegin-pa <xxtern@...>
Date:   2018-06-08T09:46:13Z

    IGNITE-5973 Add ability to close datastructure in interrupted thread (fix).

----
;;;","14/Jun/18 09:39;SomeFire;Looks good.;;;","14/Jun/18 12:19;xtern;100 runs on TC: https://ci.ignite.apache.org/viewLog.html?buildId=1387410;;;","14/Jun/18 12:40;nizhikov;Merged to master

[~xtern] Thanks, for the contribution!;;;","14/Jun/18 12:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4156
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IgniteCache#get() fails with ""Requesting mapping from grid failed"" when deserialising binary object loaded from CacheJdbcPojoStoreFactory",IGNITE-5966,13092915,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kukushal,kukushal,kukushal,07/Aug/17 16:01,02/Aug/19 11:02,14/Jul/23 06:20,02/Oct/17 15:34,,,,,,2.3,,,,,,0,,,,"STEPS TO REPRODUCE
1. A running MySQL database with at least one table with an Integer key and some data
2. Use WebConsole to automatically generate an Ignite project from the RDBMS. In the WebConsole add a cache for the table containing data
3. Build the project
4. Start the cluster (run ServerNodeSpringStartup)
5. Load the data (run LoadCaches)
6. Run simple ""get data"" code against the running cluster with the data loaded. Make sure you do NOT keep binary and do NOT put anything to the cache except loading data on step #5. For example, if the cache is ""AircraftCache"", the type is ""Aircraft"" and a row with ID 1 exists in the DB, then:
IgniteCache<Integer, Aircraft> aircraftCache = ignite.getOrCreateCache(""AircraftCache"");
System.out.format(""1->%s\n"", aircraftCache.get(1));
EXPECTED:
1...5: Project is generated, cluster runs, data is loaded
6: The entry with ID 1 is output to the console
ACTUAL:""
1..5: As expected
6: javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: Requesting mapping from grid failed for [platformId=0, typeId=-1267085398]
ANALYSIS
The “typeId -> MappedName” mappings are stored in the MarshallerContextImpl$allCaches[platformId] map.
My understanding is according to the existing implementations it is expected the mapping will always be registered when BinaryContext#descriptorForClass() -> MarshallerContextImpl#registerClassName(typeId) is called either from BinaryWriterExImpl or BinaryReaderExImpl.
However, that mechanism is never called when CacheJdbcPojoStore@buildBinaryObject builds the object, calling BinaryObjectBuilderImpl#build(). The latter method still requests BinaryContext#updateMetadata, which updates CacheObjectBinaryProcessorImpl#metadataFileStore on all server nodes. But the metadataFileStore is not the place where MarshallerContextImpl get mappings from.",Ignite 2.1.4,agura,githubbot,kukushal,pkonstantinov,,,,,,,,,"dspavlov commented on issue #2412: IGNITE-5966 IgniteCache#get() fails with ""Requesting mapping from grid failed"" when deserialising binary object loaded from CacheJdbcPojoStoreFactory
URL: https://github.com/apache/ignite/pull/2412#issuecomment-517659915
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2412: IGNITE-5966 IgniteCache#get() fails with ""Requesting mapping from grid failed"" when deserialising binary object loaded from CacheJdbcPojoStoreFactory
URL: https://github.com/apache/ignite/pull/2412
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on issue #2568: Fix for IGNITE-5966
URL: https://github.com/apache/ignite/pull/2568#issuecomment-517659948
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2568: Fix for IGNITE-5966
URL: https://github.com/apache/ignite/pull/2568
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600",,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Oct 02 15:34:20 UTC 2017,,,,,,,,,,"0|i3ihwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 10:57;githubbot;GitHub user kukushal opened a pull request:

    https://github.com/apache/ignite/pull/2412

    IGNITE-5966 IgniteCache#get() fails with ""Requesting mapping from grid failed"" when deserialising binary object loaded from CacheJdbcPojoStoreFactory

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5966

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2412.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2412
    
----
commit 1e08c3fb5c02ec8acafd71b50b6ad3b749259f1a
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-31T11:14:56Z

    IGNITE-4800: Lucene query may fails with NPE. This closes #2315.

commit 3fdf453e89a7bd76dff6b6d0646e3821ea3921d5
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-31T14:32:12Z

    IGNITE-4800: Lucene query may fails with NPE.
    Test fixed.

commit e255a564985a12113984ec02f15a4443495b8ffc
Author: Nikolay Izhikov <nizhikov.dev@gmail.com>
Date:   2017-08-02T08:52:44Z

    ignite-5712 Context switching for optimistic transactions

commit 772d462b68c7de8517d1f61e2e05ec8eefb18eac
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-08-03T04:55:15Z

    Merge branch ignite-2.1.3 into ignite-2.1.4

commit 0f22223b7ca25313083e4dc35e7842931a655abd
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-08-04T08:46:14Z

    IGNITE-5126: Batch support for this JDBC driver. This closes #2162.

commit d1a74a4be8744528e6ed23706174041ddb0f2618
Author: devozerov <vozerov@gridgain.com>
Date:   2017-08-04T09:04:38Z

    Merge remote-tracking branch 'upstream/ignite-2.1.4' into ignite-2.1.4

commit 0b3a9a7176f5ae44a96ecf700c8147193dfbf064
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-04T10:18:00Z

    IGNITE-5923: ODBC: SQLGetTypeInfo now works with SQL_ALL_TYPES
    
    (cherry picked from commit 48c914d)

commit 4e0385fbc0f50548f2da3407fdfdfe939b463c67
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-04T15:34:27Z

    IGNITE-5939: ODBC: SQLColAttributes now works with legacy attribute codes.
    
    (cherry picked from commit 70ffa2c)

commit 4f02504475fd1e5cc3b9f4754856e44d20fdc1cb
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-08-07T02:41:22Z

    Merge branch ignite-2.1.3 into ignite-2.1.4.

commit 11d7f437455451efe69ac1a757a103454edb6342
Author: Alexey Kukushkin <alexeykukushkin@yahoo.com>
Date:   2017-08-08T10:50:39Z

    fixed

----
;;;","08/Aug/17 14:20;kukushal;A patch sent for code review: http://reviews.ignite.apache.org/ignite/review/IGNT-CR-269
ROOT CAUSE
There two separate type information stores: metadata store backed by the file system and binary marshaller's ""type ID -> type name"" store. Binary marshaller use the latter one when deserialising objects. BinaryObjectBuilderImpl used by the CacheJdbcPojoStore updates only metadata store but not the marshaller mappings cache. Thus we get this issue described in the ticket.
SOLUTION
Update BinaryObjectBuilderImpl to add type mapping to the marshaller cache.
;;;","31/Aug/17 14:49;githubbot;GitHub user kukushal opened a pull request:

    https://github.com/apache/ignite/pull/2568

    Fix for IGNITE-5966

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite master-ignite-5966

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2568.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2568
    
----
commit 337622723977ddb74f92a310b69658cac158bb77
Author: Alexey Kukushkin <alexeykukushkin@yahoo.com>
Date:   2017-08-31T14:44:11Z

    Fix for IGNITE-5966

----
;;;","04/Sep/17 13:25;agura;Merged to master branch.;;;","20/Sep/17 09:25;pkonstantinov;Tried to execute
{code}
    public static void main(String[] args) throws Exception {
        try (Ignite ignite = Ignition.start(""sample-client.xml"")) {
            System.out.println("">>> Loading caches..."");

            System.out.println("">>> Loading cache: ActCache"");
            ignite.cache(""ActCache"").loadCache(null);

            System.out.println("">>> All caches loaded!"");
            System.out.format(""1->%s\n"", ignite.cache(""ActCache"").get(10));
        }
    }
{code}

 and got the following exception
{code}
Exception in thread ""main"" javax.cache.integration.CacheLoaderException: javax.cache.CacheException: Failed to find mapping description [cache=ActCache, typeId=class java.lang.Integer]. Please configure JdbcType to associate cache 'ActCache' with JdbcPojoStore.
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadFromStore(GridCacheStoreManagerAdapter.java:327)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.load(GridCacheStoreManagerAdapter.java:282)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadAllFromStore(GridCacheStoreManagerAdapter.java:418)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadAll(GridCacheStoreManagerAdapter.java:384)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$15.call(GridCacheAdapter.java:2024)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$15.call(GridCacheAdapter.java:2022)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6629)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$2.body(GridClosureProcessor.java:967)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.cache.CacheException: Failed to find mapping description [cache=ActCache, typeId=class java.lang.Integer]. Please configure JdbcType to associate cache 'ActCache' with JdbcPojoStore.
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore.entryMapping(CacheAbstractJdbcStore.java:654)
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore.load(CacheAbstractJdbcStore.java:830)
	at org.apache.ignite.internal.processors.cache.CacheStoreBalancingWrapper.load(CacheStoreBalancingWrapper.java:98)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadFromStore(GridCacheStoreManagerAdapter.java:316)
	... 11 more
{code};;;","02/Oct/17 15:34;kukushal;The issues is actually fixed. The problem found by QA was due to the configuration and code types mismatch. In the configuration the ""actno"" key field is configured as ""short"" but in the code it is accessed as ""int"" - thus the exception ""could not find mapping"". Please change

ignite.cache(""ActCache"").get(10)

to

ignite.cache(""ActCache"").get((short)10)

For me it worked.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Continuous Query (Queries 3): CacheContinuousQueryConcurrentPartitionUpdateTest::testConcurrentUpdatesAndQueryStartAtomic is flaky,IGNITE-5960,13092885,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,sergey-chugunov,sergey-chugunov,07/Aug/17 14:06,01/Aug/19 22:14,14/Jul/23 06:20,10/Sep/18 09:54,2.1,,,,,2.7,,,,,,4,MakeTeamcityGreenAgain,test-failure,,"According to [TC history|http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=6546112007182082024&tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E] test is flaky.

It is possible to reproduce it locally, sample run shows 9 failed tests out of 30 overall executed.

Test fails with jUnit assertion check: 
{noformat}
junit.framework.AssertionFailedError: 
Expected :10000
Actual   :0
 <Click to see difference>


	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at junit.framework.TestCase.assertEquals(TestCase.java:409)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryConcurrentPartitionUpdateTest.concurrentUpdatesAndQueryStart(CacheContinuousQueryConcurrentPartitionUpdateTest.java:385)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryConcurrentPartitionUpdateTest.testConcurrentUpdatesAndQueryStartTx(CacheContinuousQueryConcurrentPartitionUpdateTest.java:245)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,agoncharuk,Alexey Kuznetsov,dpavlov,sergey-chugunov,sunnychanclsa,,,,,,,,"dspavlov commented on issue #3100: IGNITE-5960 Ignite Continuous Query might not send update request
URL: https://github.com/apache/ignite/pull/3100#issuecomment-517477379
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:14;githubbot;600","dspavlov commented on pull request #3100: IGNITE-5960 Ignite Continuous Query might not send update request
URL: https://github.com/apache/ignite/pull/3100
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:14;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Sep 10 09:54:14 UTC 2018,,,,,,,,,,"0|i3ihq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/17 15:50;Alexey Kuznetsov;failure scenario pseudo-code: 
Suppose we have 3 instances of GridCacheMapEntry: E1, E2, E3.
Which got updated in threads T1, T2, T3 respectively.
User hasn't set any continuous query listeners yet.
Threads update entries by CacheMapEntry#innerUpdate()

1)T1 invokes cctx.continuousQueries().updateListeners() and got null.
2)User set continuous query listener
3)T2 invokes cctx.continuousQueries().updateListeners() and got listeners
4)T2 evaluates updateCounter to 1 for E2(c.updateRes.updateCounter())
5)T1 evaluates updateCounter to 2 for E1(c.updateRes.updateCounter())
6)T2 evaluates cctx.continuousQueries().onEntryUpdated() and processes continuous entry
7)T1 doesn't evaluate cctx.continuousQueries().onEntryUpdated()(because listeners are null)

All entries are placed in CacheContinuousQueryEventBuffer.Batch#_entries_ before being processed.
So, now there is only E2 in _entries_ array.
8)T3 evaluates update counter 3 and put it into _entries_ array.
Now, E3 would not been sent to users's listener due to E2 abscense in _entries_. Next entries would not been sent to user because CacheContinuousQueryEventBuffer.Batch#processEntry0 doesn’t return resulting entities(they just accumulate in _entries_).
;;;","28/Sep/17 08:14;Alexey Kuznetsov;[~sergey-chugunov] Have fixed the issue. It can be reviewed.;;;","03/Oct/17 11:20;sergey-chugunov;[~Alexey Kuznetsov] I reviewed your fix, it seems that the initial problem is still here, your change just reduces probability to spot it.

As you correctly identified, bug is caused by the fact that entities of some updates (and corresponding update counters) may be skipped.

Even with your fix lets consider the following sequence of events:
1) T1 updates E1 (updateCounter gets incremented to 1);
2) T2 updates E2 (updateCounter gets incremented to 2);
3) T2 finishes update and exits GridCacheMapEntry::innerUpdate method;
4) user adds continuous query listener;
5) T1 proceeds, picks up listener (not null thanks to the fix) and notifies listener;
6) T3 updates E3 (updateCounter gets incremented to 3) and notifies listener;

After steps 5 and 6 we'll face the same issue as without fix (although its probability is much less).

Proposed fix masks the problem not fixes it, so we need to come up with another approach.;;;","04/Oct/17 16:28;Alexey Kuznetsov;[~sergey-chugunov] Bug is the following, when we update entries, there is an empty cell in array CacheContinuousQueryEventBuffer#Batch#entries which prevents from sending events to user's listener.Empty cell appears due to certain entry wasn't updated in 
 CacheContinuousQueryEventBuffer#processEntry(because lsnrs in CacheMapEntry#innerUpdate() is null)

Actualy, the sequence of events you provided doesn't lead to an issue.

Let's consider your sequence again:

1) T1 updates E1 (updateCounter gets incremented to 1);
2) T2 updates E2 (updateCounter gets incremented to 2);
3) T2 finishes update and exits GridCacheMapEntry::innerUpdate method;{color:red} In this point we have CacheContinuousQueryEventBuffer#currentPartitionCounter equals 2{color}
4) user adds continuous query listener;
5) T1 proceeds, picks up listener (not null thanks to the fix) and notifies listener; {color:red}Batch#startCntr equals 2 (currentPartitionCounter() returns 2) so 
 entry E1 would be filtered out of Batch (E1 update counter would be smaller than Batch#startCntr)
PS E1 also can be sent to remote node(if we have remote listener installed) and processed in CacheContinuousQueryPartitionRecovery#collectEntries but it would be filtered out there.{color}
6) T3 updates E3 (updateCounter gets incremented to 3) and notifies listener;

After 6) user's listener would be notified only once by key 3.
;;;","27/Nov/17 06:49;sunnychanclsa;This issue has affected our application preventing live restart for our node. I have further investigated the issue and tired the propose fix but it didn't completely resolved the issue.

Using my own extra debugging statements, I have determine that the missing events is down to the fact that if you have lots of concurrent threads updating the cache entries, the listener updates could potentially be out of sequence as there is no lock, like this:

1) T1 test lsnrs!=null, assume no listener and obtain update counter 1
2) T2 test lsnrs==null, assume no listener and obtain update counter 2
3) T3 test lsnrs!=null, so there is a listener and obtain update counter 3

So we end up with T1, T3 will send update event but T2 won't and this caused a gap in the update sequence.

I will propose a fix which introduces a ReadWriteLock in the CCQM, and when we update the listener list we will obtain the write lock. Then in GridCacheMapEntry before we enter the synchronized block for the GridEntry, we obtain the Read lock. This way we ensure that the before the listener is updated all update/set cache entry will be completed. I have ran the unit test repeatedly using this fix and it seems to pass 100% of the time.;;;","27/Nov/17 17:01;Alexey Kuznetsov;[~sunnychanclsa] I have already created [Pull request|https://github.com/apache/ignite/pull/2728]
This PR must fix your issue.;;;","28/Nov/17 06:01;sunnychanclsa;[~akuznetsov] I have tried your patch but I can still reproduce the issue on my machine, using the unit test above and our own application.

;;;","28/Nov/17 06:04;sunnychanclsa;Pull request: https://github.com/apache/ignite/pull/3100;;;","28/Nov/17 11:15;Alexey Kuznetsov;[~sunnychanclsa] Can you provide reproducer of your problem, so that i can see the steps you described above?;;;","29/Nov/17 01:23;sunnychanclsa;[~akuznetsov] The CacheContinuousQueryConcurrentPartitionUpdateTest is a redux of our problem. From our application prospective we did this:

# Setup a cache with a pair of node
# Setup continuous query, and update entries in the cache that would trigger the CQ
# Remove one node forcefully (e.g. kill -9). The thread that update entries should continue in the background
# Now restart the killed node and you will find the continuous query no longer gets any event even the update continuous.;;;","30/Mar/18 08:31;Alexey Kuznetsov;[~dpavlov] Hi!

Could please review the ticket or suggest somebody to review it?
Seems, [~sergey-chugunov] don't want to review it any longer
The maintener of affected code was [~sboikov].

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=1162426&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll]

I rerun failed tests :
[1 rerun |https://ci.ignite.apache.org/viewLog.html?buildId=1166871&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Cache5]
[2 rerun|https://ci.ignite.apache.org/viewLog.html?buildId=1166877&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteQueries2]
[3 rerun|https://ci.ignite.apache.org/viewLog.html?buildId=1166878&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteQueries]

As you can see all failed tests are flacky.;;;","30/Mar/18 10:18;dpavlov;Hi [~Alexey Kuznetsov],

I see suspicious failure here:
IgniteCacheTestSuite5: CacheLateAffinityAssignmentTest.testCreateCloseClientCacheOnCoordinator1 (master fail rate 0,0%) 

Probably rebase (merge) of master into branch will solve this failure.;;;","02/Apr/18 10:45;Alexey Kuznetsov;[~dpavlov] Hi!

I rerun the suspicious test, it passed after merge : [passed suite|https://ci.ignite.apache.org/viewLog.html?buildId=1168517&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_Cache5]

I think this tikcet is ready for review;;;","03/May/18 13:48;agoncharuk;[~Alexey Kuznetsov] I do not think that the fix is complete:
Note that it would be cleaner to acquire the listeners map after the partition update counter is incremented, however, the listeners map is used in the {{needVal}}  flag evaluation. Currently it is possible that {{evtOldVal}} will be {{null}} if we read {{null}} from {{updateListeners}} in the first place.;;;","11/May/18 15:28;Alexey Kuznetsov;[~agoncharuk] 
 > Note that it would be cleaner to acquire the listeners map after the partition update counter is incremented, however, the listeners map is used in the needVal flag evaluation.

Yeah, I tried to acquire the listeners map *after* the partition update counter is incremented:
 To do so, we firstly need to move _needVal_ and _readFromStore_ flags evaluation after update counter is incremented.
 But _readFromStore_ flag must be evaluated strongly *before* partition counter is incremented, see _GridCacheMapEntry.AtomicCacheUpdateClosure#call_ where we load data from store.

So, we cannot acquire the listeners map *after* the partition update counter is incremented.

 

> Currently it is possible that {{evtOldVal}} will be {{null}} if we read {{null}} from {{updateListeners}} in the first place.

In my fix, query entry must be filtered out  if we read {{null}} from {{updateListeners}} in the first place(this fixes the essential bug).

To filter out entry, _newVal_ and _oldVal_ must be passed as nulls to _cctx.continuousQueries().onEntryUpdated_ ,
 see _CacheContinuousQueryManager#onEntryUpdated_ , _CacheContinuousQueryManager#skipUpdateEvent_ .

Let's consider again the scenario:

1) T1 updates E1 (updateCounter gets incremented to 1);
 2) T2 updates E2 (updateCounter gets incremented to 2);
 3) T2 finishes update and exits GridCacheMapEntry::innerUpdate method; In this point we have CacheContinuousQueryEventBuffer#currentPartitionCounter equals 2
 4) user adds continuous query listener;
 5) T1 proceeds, picks up listener (not null thanks to the fix) and notifies listener; Batch#startCntr equals 2 (currentPartitionCounter() returns 2) so 
 entry E1 would be filtered out of Batch (E1 update counter would be smaller than Batch#startCntr)
 PS E1 also can be sent to remote node(if we have remote listener installed) and processed in CacheContinuousQueryPartitionRecovery#collectEntries,
 but it would be filtered out there.
 6) T3 updates E3 (updateCounter gets incremented to 3) and notifies listener;

After 6) user's listener would be notified only once by key 3.

After listener is set by user, entry E1 must be filtered out.

 

Are you agree with such changes ?;;;","08/Jun/18 10:01;agoncharuk;[~Alexey Kuznetsov] If I understand correctly, in your last case the user will be notified with entry E2, but since the listeners map is re-acquired after the {{needVal}} flag evaluation, the event notification may see incorrect previous value. Also note that other methods such as {{innerSet}} and {{innerRemove}} also suffer from this race.

I like the solution suggested by [~sunnychanclsa] better, because it linearizes entry update and CQ registration. 

[~sunnychanclsa], would you mind pulling master to your PR (there are some conflicts due to changes related to Java 9 compatibility) and replacing the {{ReentrantReadWriteLock}} with {{StripedCompositeReadWriteLock}} to reduce contention because these updates are on a hot path? After this, we will need to run a benchmark to verify there are no performance regression.;;;","08/Jun/18 10:13;sunnychanclsa;[~agoncharuk] Sure I will get the patch updated and get back to you shortly.;;;","11/Jun/18 07:43;sunnychanclsa;I have updated the patch:
 # Merge with master to refresh the code
 # The patch now use StripedCompositeReadWriteLock
 # Refactor and put docs around the new code

Please review and let me know if there is anything else I need to change.;;;","26/Jun/18 09:30;agoncharuk;[~sunnychanclsa] Thanks, we will check the benchmarks and merge the PR if all is ok shortly.;;;","10/Sep/18 09:54;agoncharuk;Thanks, [~sunnychanclsa], merged your changes to master.;;;",,,,,,,,,,,,,,,,,,,,,,
Ignite Continuous Query (Queries 3): IgniteCacheContinuousQueryClientReconnectTest fails,IGNITE-5955,13092853,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,zstan,sergey-chugunov,sergey-chugunov,07/Aug/17 11:13,10/Dec/18 16:48,14/Jul/23 06:20,25/Dec/17 10:33,2.1,,,,,2.4,2.5,,,,,0,MakeTeamcityGreenAgain,test-failure,,"Reproducible locally with the same exception as on TC.

In test log there is the following exception:
{noformat}
[2017-08-07 03:24:05,694][ERROR][test-runner-#10587%continuous.IgniteCacheContinuousQueryClientReconnectTest%][root] Failed to stop grid [igniteInstanceName=continuous.IgniteCacheContinuousQueryClientReconnectTest0, cancel=true]
class org.apache.ignite.IgniteClientDisconnectedException: Client node disconnected: continuous.IgniteCacheContinuousQueryClientReconnectTest4
    at org.apache.ignite.internal.GridKernalGatewayImpl.readLock(GridKernalGatewayImpl.java:92)
    at org.apache.ignite.internal.IgniteKernal.guard(IgniteKernal.java:3707)
    at org.apache.ignite.internal.IgniteKernal.active(IgniteKernal.java:3423)
    at org.apache.ignite.testframework.junits.GridAbstractTest.awaitTopologyChange(GridAbstractTest.java:2105)
    at org.apache.ignite.testframework.junits.GridAbstractTest.stopGrid(GridAbstractTest.java:1030)
    at org.apache.ignite.testframework.junits.GridAbstractTest.stopGrid(GridAbstractTest.java:1006)
    at org.apache.ignite.testframework.junits.GridAbstractTest.stopGrid(GridAbstractTest.java:997)
    at org.apache.ignite.internal.processors.cache.query.continuous.IgniteCacheContinuousQueryClientReconnectTest.access$200(IgniteCacheContinuousQueryClientReconnectTest.java:42)
    at org.apache.ignite.internal.processors.cache.query.continuous.IgniteCacheContinuousQueryClientReconnectTest$1.run(IgniteCacheContinuousQueryClientReconnectTest.java:151)
    at org.apache.ignite.internal.IgniteClientReconnectAbstractTest.reconnectClientNodes(IgniteClientReconnectAbstractTest.java:290)
    at org.apache.ignite.internal.IgniteClientReconnectAbstractTest.reconnectClientNode(IgniteClientReconnectAbstractTest.java:221)
    at org.apache.ignite.internal.processors.cache.query.continuous.IgniteCacheContinuousQueryClientReconnectTest.testReconnectClientAndLeftRouter(IgniteCacheContinuousQueryClientReconnectTest.java:149)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
    at java.lang.Thread.run(Thread.java:745)
{noformat}

According to [TC history|https://ci.ignite.apache.org/project.html?tab=testDetails&branch_Ignite20Tests=%3Cdefault%3E&projectId=Ignite20Tests&testNameId=9004507841514895830&page=5] is failing since mid of April.

Last commit where test has been passing is *b6b3d3754849*.

",,amashenkov,githubbot,sboikov,sergey-chugunov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:48:37 UTC 2018,,,,,,,,,,"0|i3ihj3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Nov/17 12:18;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/2986

    IGNITE-5955: IgniteCacheContinuousQueryClientReconnectTest fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5955

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2986.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2986
    
----
commit 4fc98a238ce3d7f1b42dec1911a8ad73f39cba47
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-11-07T12:10:16Z

    IGNITE-5955: IgniteCacheContinuousQueryClientReconnectTest fix

----
;;;","08/Nov/17 07:18;zstan;[TC seems ok|https://ci.ignite.apache.org/viewLog.html?buildId=932284&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll]
;;;","08/Nov/17 08:51;sergey-chugunov;[~zstan], proposed change looks reasonable to me. 

It seems that corner case with disconnected client wasn't addressed in test framework when cluster activation functionality was refactored.;;;","25/Dec/17 10:33;sboikov;Merged into master.

Thanks;;;","10/Dec/18 16:48;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/2986
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Cache Failover: GridCacheAtomicNearRemoveFailureTest.testPutAndRemove fails,IGNITE-5954,13092847,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Alexey Kuznetsov,EdShangGG,EdShangGG,07/Aug/17 10:53,26/Jun/18 17:50,14/Jul/23 06:20,08/Jun/18 14:00,2.1,,,,,2.7,,,,,,0,MakeTeamcityGreenAgain,,,"Probably, it's broken after IGNITE-5272.",,akalashnikov,Alexey Kuznetsov,amashenkov,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 08 14:02:55 UTC 2018,,,,,,,,,,"0|i3ihhr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/May/18 09:14;Alexey Kuznetsov;Consider the following cluster:
Node0, Node1, Node2. 
key1 is primary key on Node1, backup on Node2.

Bug scenario:
0) key1 is inserted on Node1.
1) Node0 requests key, and save it in near cache.
2) After Node2 crashes Node0 became new backup node for key1
3) key1 is updated on Node1. On this step new value is transferred to Node0 and set into DHT cache, but not into Near cache.
4) Node2 raises and became backup for key1
5) After rebalance we extract key1 value from Node0 and observe obsolete value. 

Fix is to remove value from near cache on 3 step. Removing should be performed in
processDhtAtomicUpdateRequest(), after new value is inserted in DHT cache.;;;","23/May/18 13:38;githubbot;GitHub user voipp opened a pull request:

    https://github.com/apache/ignite/pull/4052

    IGNITE-5954 Remove obsolete near cache value from primary\backup node.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/voipp/ignite IGNITE-5954

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4052.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4052
    
----
commit 4e6cd513856d460b65d91f5eee05ad3bd6269277
Author: voipp <alkuznetsov.sb@...>
Date:   2018-05-23T13:14:51Z

    IGNITE-5954 Remove obsolete near cache value from primary\backup node.

----
;;;","28/May/18 09:49;Alexey Kuznetsov;rerun failed tests, looks good to me : [test1|https://ci.ignite.apache.org/viewLog.html?buildId=1338793&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_ZooKeeperDiscovery2], [test2|https://ci.ignite.apache.org/viewLog.html?buildId=1338810&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAllNet], [test3|https://ci.ignite.apache.org/viewLog.html?buildId=1338802&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAllPds];;;","05/Jun/18 16:20;dpavlov;Hi [~akalashnikov], could you please take a look to this fix? It is MTCGA but affects production Ignite code.;;;","07/Jun/18 16:24;akalashnikov;Looks ok for me. [~dpavlov], could you please merge it.;;;","08/Jun/18 14:00;dpavlov;[~Alexey Kuznetsov] thank you for contribution. I personally appreciate fixes of TC failures.

Merged to master.

Suspicious tests were failed in master also (.NET, and others), so I hope no new failures were introduced.

[~akalashnikov] thank you for review.;;;","08/Jun/18 14:02;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4052
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect assertion for cache size,IGNITE-5950,13092812,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,07/Aug/17 08:27,28/Aug/17 16:38,14/Jul/23 06:20,07/Aug/17 10:14,2.1,,,,,2.3,,persistence,,,,0,,,,"*PagePartitionCountersIO::readCacheSizes* incorrectly asserts cache size:

{noformat}
public boolean readCacheSizes(long pageAddr, Map<Integer, Long> res) {
        int cnt = getCount(pageAddr);

        assert cnt >= 0 && cnt <= Short.MAX_VALUE : cnt;

        if (cnt == 0)
            return true;

        int off = ITEMS_OFF;

        for (int i = 0; i < cnt; i++) {
            int cacheId = PageUtils.getInt(pageAddr, off);
            off += 4;

            assert cacheId != 0;

            long cacheSize = PageUtils.getLong(pageAddr, off);
            off += 8;

            assert cacheSize > 0 : cacheSize; //WRONG assertion! cache of zero size if totally legal

            Long old = res.put(cacheId, cacheSize);

            assert old == null;
        }

        return getLastFlag(pageAddr);
    }
{noformat}

Correct assertion is {{cacheSize >= 0}}.",,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 07 10:14:14 UTC 2017,,,,,,,,,,"0|i3ih9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/17 10:14;sergey-chugunov;Incorrect assertion was fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky failure in IgniteCache 5: IgniteCacheAtomicProtocolTest.testPutReaderUpdate2,IGNITE-5945,13092527,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sharpler,dpavlov,dpavlov,04/Aug/17 16:46,26/Jun/18 17:50,14/Jul/23 06:20,09/Jun/18 10:30,2.1,,,,,2.7,,,,,,0,MakeTeamcityGreenAgain,,,"org.apache.ignite.internal.processors.cache.distributed.dht.atomic.IgniteCacheAtomicProtocolTest#testPutReaderUpdate2


{noformat}
junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertFalse(Assert.java:39)
	at junit.framework.Assert.assertFalse(Assert.java:47)
	at junit.framework.TestCase.assertFalse(TestCase.java:219)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.IgniteCacheAtomicProtocolTest.readerUpdateDhtFails(IgniteCacheAtomicProtocolTest.java:865)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.IgniteCacheAtomicProtocolTest.testPutReaderUpdate2(IgniteCacheAtomicProtocolTest.java:765)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:2000)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1915)
	at java.lang.Thread.run(Thread.java:748)
{noformat}


Fail is reproducable locally 2 times per 20 runs
On TeamCity test success rate is 88,2%",,alex_pl,dpavlov,githubbot,ivanan.fed,sharpler,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 09 10:31:36 UTC 2018,,,,,,,,,,"0|i3ifk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/May/18 14:28;sharpler;[~dpavlov]

I have fixed the issue.

The test was failing because of not finished rebalancing. So the following situation could have happened: we have got primary keys for a *srv0*, but after rebalancing primary keys move to *srv1*. And a blocking of *GridDhtAtomicNearResponse* message on *srv1* don't take effect.

So I just have added waitForRebalancing() *exactly in the same way* as it works in GridCacheRebalancingSyncSelfTest#testSimpleRebalancing().

You can see on TC 120 runs of this test with 3 other which is affected by my change, one of them was flaky too.
The last run on TC shows suite passing with final changes.;;;","31/May/18 08:11;ivanan.fed;This fix looks good to me.;;;","05/Jun/18 16:24;alex_pl;Looks good to me too.;;;","05/Jun/18 16:32;dpavlov;Hi, JFYI, ticket status is In Progress now.;;;","07/Jun/18 08:55;sharpler;[~dpavlov] Now it's PA.;;;","09/Jun/18 10:30;dpavlov;[~sharpler] thank you for contribution. Each step like this make us closer to green TC day.

Merged to master.;;;","09/Jun/18 10:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3979
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Communication. Server node may reject client connection during massive clients join,IGNITE-5943,13092498,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,yzhdanov,EdShangGG,EdShangGG,04/Aug/17 14:56,28/Aug/17 16:38,14/Jul/23 06:20,18/Aug/17 16:34,2.0,,,,,2.3,,general,,,,0,,,,"There is a race between a client join discovery event on server nodes and the moment when a client starts to establish outgoing communication connections. It would cause to rejecting communication connections on server nodes (for example. on requesting data from caches).
The issue happens on really big topologies (> 300 nodes) or when many clients join simultaneously.",,agoncharuk,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 18 16:23:44 UTC 2017,,,,,,,,,,"0|i3ifef:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Aug/17 15:59;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/2423

    IGNITE-5943

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-5943

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2423.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2423
    
----
commit 2d93a7c11871a2b23cfb2e6f9854dccb48eac4f1
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-08-03T03:42:08Z

    IGNITE-5888 Web Console: Fixed maven project generation.

commit 36787e149693103fa22ba4093259d2fd8425689a
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-08-03T03:45:59Z

    IGNITE-5906 Fixed race on activities merge.

commit 9e9f1d1e4cdcb3ade018f3eabcf2b2d10a7c003b
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-08-04T08:16:52Z

    IGNITE-5920: Fixed CacheClientBinaryQueryExample"": set CacheKeyConfiguration explicitly to enable affinity co-location. This closes #2389.

commit 944056e5431b6018bb653c563db1356f0148fb9a
Author: anovikov <anovikov@gridgain.com>
Date:   2017-08-04T11:10:36Z

    IGNITE-5908 Restore splash.

commit a1652b8f7748d3bf1e42437f9ad36f6f44e19bf5
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-08-07T08:34:01Z

    IGNITE-5950 incorrect assertion fixed

commit cfa5ac269c37718191be42d5554637b78c2a7466
Author: Eduard Shangareev <eshangareev@gridgain.com>
Date:   2017-08-09T15:57:24Z

    IGNITE-5943 Communication. Server node may reject client connection during massive clients join

----
;;;","10/Aug/17 13:43;EdShangGG;PR - https://github.com/apache/ignite/pull/2423
Test Run - https://ci.ignite.apache.org/viewQueued.html?itemId=764991&tab=queuedBuildOverviewTab;;;","14/Aug/17 12:48;EdShangGG;My approach is introducing new negative constant, which would mean for a client that connection would be closed and it should retry after some waiting (exponential waiting from 1 ms to 1 minute). The approach requires access to not visible nodes, it could look as abstraction violation.

But another one (with pausing reading from client connection while it wouldn't become visible) requires huge refactoring because we use {{Node}} instance from the beginning (deciding use or not paired connection, creating recovery object and so on). And it would require hacking (like creating new recovery objects to hide lack of {{Node}} instance and replacing it by normal one when client would become visible). I have questions how to deal with {{usePairedConnection}} while I don't have {{Node}} instance on hand.

[~yzhdanov] What is your opinion?
;;;","15/Aug/17 14:54;agoncharuk;A few comments:
1) Should not we close the channel on client side (for safety) when we receive NEED_WAIT?
2) The test is not added to any suite;;;","15/Aug/17 15:28;EdShangGG;Thank you for feedback.

Comments were implemented. Ready to review!

Please, take a look.;;;","18/Aug/17 16:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2423
;;;","18/Aug/17 16:23;agoncharuk;Thanks, Eduard, merged your changes to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Index with long name stores incorrect,IGNITE-5941,13092492,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,v.pyatkov,v.pyatkov,04/Aug/17 14:24,14/Aug/17 11:25,14/Jul/23 06:20,14/Aug/17 11:25,2.1,,,,,,,persistence,,,,0,,,,"SQL query by Index with long name return inconsistent result after cluster restart and recover from storage. At the same time a query by other index (with more shorter name) works correctly before and after recovery.

For example long index name:
{code}
QueryIndex index = new QueryIndex(""name"", true, ""COM.SBT.AZIMUTH_PSI.PUBLISHER.ENTITIES.PUB.PARTICLES.CARPORT#MODELCOM.SBT.AZIMUTH_PSI.PUBLISHER.ENTITIES.PUB.PARTICLES.CARPORT"");
{code}",,agoncharuk,githubbot,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 15:20;v.pyatkov;LongIndexNameTest.java;https://issues.apache.org/jira/secure/attachment/12880416/LongIndexNameTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 14 08:35:22 UTC 2017,,,,,,,,,,"0|i3ifd3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/17 14:35;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2408

    IGNITE-5941 : Fixed index name length restrictions.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5941

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2408.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2408
    
----
commit ef081b334f38e0a4d0fcb653009d9cdf2ba3d83c
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-08-07T14:33:09Z

    ignite-5941 : Fixed index name length restrictions.

----
;;;","14/Aug/17 08:34;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2408
;;;","14/Aug/17 08:35;agoncharuk;Thanks, Ilya, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLColAttributes should work with legacy attribute codes.,IGNITE-5939,13092474,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,04/Aug/17 13:05,28/Aug/17 16:37,14/Jul/23 06:20,04/Aug/17 15:36,2.1,,,,,2.3,,odbc,,,,0,,,,"According to https://docs.microsoft.com/en-us/sql/odbc/reference/syntax/sqlcolattribute-function 

{quote}
The #define values of the ODBC 2.x {{FieldIdentifiers}} {{SQL_COLUMN_LENGTH}}, {{SQL_COLUMN_PRECISION}}, and {{SQL_COLUMN_SCALE}} are different from the #define values of the ODBC 3.x {{FieldIdentifiers}} {{SQL_DESC_PRECISION}}, {{SQL_DESC_SCALE}}, and {{SQL_DESC_LENGTH}}. An ODBC 2.x driver need only support the ODBC 2.x values. An ODBC 3.x driver must support both ""{{SQL_COLUMN}}"" and ""{{SQL_DESC}}"" values for these three {{FieldIdentifiers}}. These values are different because precision, scale, and length are defined differently in ODBC 3.x than they were in ODBC 2.x.
{quote}

Currently, {{SQLColAttributes}} does not work with these three identifiers in our driver. Need to be fixed.",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5842,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 15:36:01 UTC 2017,,,,,,,,,,"0|i3if93:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 13:58;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2399

    IGNITE-5939: ODBC: SQLColAttributes now works with legacy attribute codes.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2399.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2399
    
----
commit 44496f38d6d55ab616e8a8cf4f7a8c986543ef66
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-04T13:55:05Z

    IGNITE-5939: Added tests.

commit 8a443ced2071a9fff471ebd3167032708a3a4f16
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-08-04T13:57:05Z

    IGNITE-5939: Fix

----
;;;","04/Aug/17 14:37;isapego;Ready. [~ptupitsyn], can you take a look?;;;","04/Aug/17 15:05;ptupitsyn;[~isapego] looks good to me.;;;","04/Aug/17 15:35;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2399
;;;","04/Aug/17 15:36;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Incorrect conflicting type error,IGNITE-5931,13092447,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,04/Aug/17 11:19,30/Aug/17 15:40,14/Jul/23 06:20,30/Aug/17 15:40,2.1,,,,,2.3,,platforms,,,,0,.NET,,,"Incorrect conflicting type error can occur when registering the same time from multiple threads simultaneously:

{code}
Conflicting type IDs [type1='Row', type2='Row', typeId=113114]
{code}

{{Marshaller.AddType}} should check if existing type is the same as new one (as we do it in {{AddUserType}}, see other usages of {{ThrowConflictingTypeError}}).",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 30 15:37:15 UTC 2017,,,,,,,,,,"0|i3if33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Aug/17 11:45;ptupitsyn;Another problem is that we return {{BinarySurrogateTypeDescriptor}} from {{GetDescriptor}} when the type has not been found. I think we should proceed with dynamic registration if typeName is known.;;;","04/Aug/17 14:08;ptupitsyn;Another related problem: {{AffinityKeyMappedAttribute}} does not work with dynamic type registration.

All of this stems from the fact that {{Marshaller}} code is a mess, we have two {{AddUserType}} methods which work in a different way and duplicate some logic.;;;","30/Aug/17 14:27;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2553

    IGNITE-5931 .NET: Fix type registration race condition

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5931

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2553.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2553
    
----
commit 0b4a79e282cc568fc9327eade112021763cabafe
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T12:52:06Z

    IGNITE-5931 .NET: Incorrect conflicting type error

commit 9791e5603e65ec9cd9b885a29764d6c1e6a38b02
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T13:13:21Z

    wip TODOs

commit c5f056d5830238c62cf0f5f5e7ac27bbee1047c2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T13:51:24Z

    wip

commit 09140819cae37e3b5476796c1881547cefcbb724
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T13:59:04Z

    Fix the bug

commit 3fd2b4e43e9001c287846f005a8bcceeea7b64a0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T14:07:01Z

    Update affkey test

commit 06518f402d3da1eb85d01a5fb6ce00e2ed89b519
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T14:30:43Z

    wip

commit 87052c9854d9d62262d7b77a35f0238029c4a7ac
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T14:32:12Z

    wip

commit 7bed61cedc1964c358431a5aee91f690786febb7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T14:59:01Z

    wip refactoring

commit 3553b42444f531617376864b3f3990ef5247557e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T15:13:29Z

    wip

commit 96e1118ea0cff1137a22afa12282f6d4ad351026
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-04T16:04:30Z

    wip

commit 91c58c3259373e2e1e170ce523b42d91b3257654
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T14:39:43Z

    Merge branch 'master' into ignite-5931

commit 1196082d45ca23c13e74e4c3701ff58d213fb71e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T15:40:59Z

    Merge branch 'master' into ignite-5931

commit ca93028a0400e7d0a3a780e4b7c13af216bcb20d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T16:45:37Z

    wip

commit ad9717fa263316a9e7a48cd4615c2abbdb7e3992
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T16:57:51Z

    wip

commit 2e952243bf343fdc1a32ef7c705817e758a27cf9
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T16:59:31Z

    wip

commit 1ffd89fb7bdca9f4958078d982fb96da3d89092b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T17:04:44Z

    wip

commit f4d265f7599c63d672f410553053046a6bfa1814
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T17:06:03Z

    wip

commit f284248f2b4c78d546028501dc7d8b33f67b1350
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-29T17:18:01Z

    wip

commit 77e66c6b41bcfe8f1bbabfd7e34bab00d6a098b4
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T06:25:49Z

    Add multithreaded registration test

commit 416def32a3cda5710dfe8a2603cb4424fdbc7889
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T06:40:11Z

    Fix multithreaded test

commit 54a6f52cf31944144269760aaa8ac437558366a8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T07:37:32Z

    Fix multithreaded test

commit 4b75c67702247f8109cd6c1baa5e682749b51860
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T13:59:21Z

    Remove unnecessary type name check

commit 1eff0ab4a71e7f490b4d1dc9cdfdbc6883266260
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T14:06:23Z

    Revert some changes

commit 7035023be9d83286d52c825eb68b6973c169c91f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T14:15:47Z

    Improve tests

commit 5e11cbeee10db9caa5ea72cd11e41efb4027deec
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T14:21:32Z

    Fix affinity key field name

commit d0135e02115be57e70bb02e6a040d7976d18bc6d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-08-30T14:26:17Z

    Remove incorrect registration test

----
;;;","30/Aug/17 14:31;ptupitsyn;Fixed race condition and affinity attribute issues. Ideally entire {{Marshaller}} class should be refactored later.;;;","30/Aug/17 15:35;ptupitsyn;Merged to master: {{eae6e3b9fd43b42fc9d74e61118800dc0f3f6f0c}}.;;;","30/Aug/17 15:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2553
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: DataTable can't be serialized,IGNITE-5927,13092270,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,03/Aug/17 18:29,28/Aug/17 16:38,14/Jul/23 06:20,04/Aug/17 09:35,2.0,,,,,2.3,,platforms,,,,0,.NET,,,"{{System.Data.DataTable}} can't be serialized:

{code}
cache.Put(1, new DataTable());
{code}

results in exception:

{code}
System.InvalidCastException: Unable to cast object of type 'Apache.Ignite.Core.Impl.Binary.BinaryWriter' to type 'System.IConvertible'.
   at System.Convert.ToBoolean(Object value, IFormatProvider provider)
   at System.Data.DataTable.GetObjectData(SerializationInfo info, StreamingContext context)
   at Apache.Ignite.Core.Impl.Binary.SerializableSerializer.WriteBinary[T](T obj, BinaryWriter writer) in S:\W\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\SerializableSerializer.cs:line 64
   at Apache.Ignite.Core.Impl.Binary.BinaryWriter.Write[T](T obj) in S:\W\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\BinaryWriter.cs:line 1224
   at Apache.Ignite.Core.Impl.Binary.Marshaller.Marshal[T](T val, IBinaryStream stream) in S:\W\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\Marshaller.cs:line 159
   at Apache.Ignite.Core.Impl.Binary.Marshaller.Marshal[T](T val) in S:\W\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Binary\Marshaller.cs:line 144
{code}

StackOverflow question: https://stackoverflow.com/questions/45490249/how-to-store-datatable-in-apache-ignite",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 09:35:39 UTC 2017,,,,,,,,,,"0|i3idzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 18:36;ptupitsyn;I've reproduced the issue, and I would say that this is a bug in {{System.Data.DataTable}}. Here is the code:

{code}
public virtual void GetObjectData(SerializationInfo info, StreamingContext context) {
    SerializationFormat remotingFormat = RemotingFormat;
    bool isSingleTable = context.Context != null ? Convert.ToBoolean(context.Context, CultureInfo.InvariantCulture) : true;
    SerializeDataTable(info, context, isSingleTable, remotingFormat);
}
{code}

Exception comes from {{Convert.ToBoolean(context.Context, CultureInfo.InvariantCulture)}}

The assumption that {{Context}} can be converted to bool does not look correct, see MSDN https://msdn.microsoft.com/en-us/library/h58hxyt6(v=vs.110).aspx:

{code}additional: Any additional information to be associated with the StreamingContext.{code}

Anyway, .NET framework is not going to be fixed, so we have to get rid of {{BinaryWriter}} in that context. ;;;","03/Aug/17 18:56;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2395

    IGNITE-5927 .NET: Fix DataTable serialization

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite IGNITE-5927

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2395.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2395
    
----

----
;;;","04/Aug/17 09:35;ptupitsyn;Removed reader/writer from {{Context}} field, since there is no necessity.

Merged to master: {{ec115dcfa702aa7cc7db5b87c330755b7f37ea0b}}.;;;","04/Aug/17 09:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2395
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLGetTypeInfo does not work with SQL_ALL_TYPES,IGNITE-5923,13092213,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,03/Aug/17 15:02,28/Aug/17 16:40,14/Jul/23 06:20,04/Aug/17 10:22,2.1,,,,,2.3,,odbc,,,,0,,,,ODBC function {{SQLGetTypeInfo}} does not work if given an {{SQL_ALL_TYPES}} as the {{DataType}} argument value.,,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5842,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 10:22:06 UTC 2017,,,,,,,,,,"0|i3idnj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 16:39;isapego;Ready for review. [~ptupitsyn], can you please take a look?;;;","04/Aug/17 09:20;ptupitsyn;[~isapego] looks good to me.;;;","04/Aug/17 10:21;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2392
;;;","04/Aug/17 10:22;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheClientBinaryQueryExample return different results if we add nodes to grid,IGNITE-5920,13092174,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,lexa,lexa,03/Aug/17 12:11,28/Aug/17 16:40,14/Jul/23 06:20,04/Aug/17 08:18,,,,,,2.3,,sql,,,,0,,,,"1. Start CacheClientBinaryQueryExample without external nodes. Section "">>> Employees working for GridGain"" isn't empty.
2. Start 3 node and after that start example. section "">>> Employees working for GridGain"" is empty.",,githubbot,lexa,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 08:18:59 UTC 2017,,,,,,,,,,"0|i3idev:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 12:26;vozerov;Possible causes:
1) Missing co-location (if applicable)
2) Missing ""distributedJoins=true""
3) PRIMARY_SYNC mode;;;","03/Aug/17 15:21;tledkov-gridgain;Root cause: {{CacheTypeMetadata}} was replaced with {{QueryEntity}} but QueryEntity doesn't contain information about affinity keys collocation.
Fix: set {{CacheKeyConfiguration}} explicitly.;;;","03/Aug/17 15:24;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2389

    IGNITE-5920: Fix the example. Set CacheKeyConfiguration explicitly to…

    … enable affinity co-location.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5920

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2389.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2389
    
----
commit 46f493aeb7beb9923d18b6ef1da3ba3009164d8b
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-08-03T15:23:07Z

    IGNITE-5920: Fix the example. Set CacheKeyConfiguration explicitly to enable affinity co-location.

----
;;;","04/Aug/17 08:18;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2389
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: incorrect default value for Cache-Queries & Indexing-SQL index max inline size = -1,IGNITE-5916,13092153,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,03/Aug/17 10:20,16/Mar/18 03:01,14/Jul/23 06:20,07/Mar/18 17:35,,,,,,2.5,,,,,,0,,,,If I set -1 as real value then field become incorrect (red border),,Klaster_1,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5466,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 16 03:01:20 UTC 2018,,,,,,,,,,"0|i3ida7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 07:44;Klaster_1;Will be fixed during configuration redesign.;;;","06/Mar/18 08:23;Klaster_1;[~kuaw26] please review and merge.;;;","07/Mar/18 17:35;kuaw26;Merged to master.;;;","16/Mar/18 03:01;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Method stopGrid(name) doesn't work in multiJvm mode,IGNITE-5910,13092107,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,daradurvs,daradurvs,03/Aug/17 07:43,22/Mar/18 14:21,14/Jul/23 06:20,22/Mar/18 14:19,2.1,,,,,2.5,,,,,,0,MakeTeamcityGreenAgain,tests,,"{code:title=Exception at call}
java.lang.ClassCastException: org.apache.ignite.testframework.junits.multijvm.IgniteProcessProxy cannot be cast to org.apache.ignite.internal.IgniteKernal
{code}

{code:title=Reproducer snippet}
    /** {@inheritDoc} */
    @Override protected boolean isMultiJvm() {
        return true;
    }

    /**
     * @throws Exception If failed.
     */
    public void testGrid() throws Exception {
        try {
            startGrid(0);

            startGrid(1);
        }
        finally {
            stopGrid(1);

            stopGrid(0);
        }
    }
{code}

*UPD:* It is necessary to fix possibility of hangup of a system thread of separate JVM at Ignite's node shutdown.",,daradurvs,dpavlov,githubbot,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 22 14:21:02 UTC 2018,,,,,,,,,,"0|i3id07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 07:50;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/2382

    IGNITE-5910 Method stopGrid(name) doesn't work in multiJvm mode

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-5910

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2382.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2382
    
----
commit fe0534f41ef994b644ec628435583bc79f0181fd
Author: daradurvs <daradurvs@gmail.com>
Date:   2017-08-03T07:46:14Z

    ignite-5910: fixed ClassCastException

----
;;;","04/Aug/17 08:31;daradurvs;{{ClassCastException}} was fixed by [1'st commit|https://github.com/apache/ignite/pull/2382/commits/fe0534f41ef994b644ec628435583bc79f0181fd], and I found one more bug after:
Nodes wich started in separate JVM sometimes couldn't stop properly and were staying freezed up in OS after test finished.
It relates to the methods: {{#stopAllGrid()}} and {{#stopGrid(name)}} in case of MultiJVM tests. It was fixed by [2'nd commit|https://github.com/apache/ignite/pull/2382/commits/4982dba06d5dc7d3c13e74536159164794b857d1].

[Ci.tests|http://ci.ignite.apache.org/viewLog.html?buildId=755961];;;","05/Aug/17 10:53;dpavlov;Hi, [~daradurvs], did this issue reflected on test fails?;;;","07/Aug/17 08:58;daradurvs;[~dpavlov], 
I tested the PR-branch and the master-branch all weekends.
I found fails in the {{Ignite Basic}} build-plan which are absent in the master-branch.
At the same time {{Ignite Cache 2}} and {{Ignite Cache 3}} build-plans look better than in the master-branch.
I will investigate found issue more deeply. Moved the ticket to In-Progress.
Thanks!;;;","22/Feb/18 08:54;daradurvs;I have investigated the issue and found that stopping node in separate JVM may stuck thread or leave system process alive after test finished.


 The main reason is {{StopGridTask}} that we send from node in local JVM to node in separate JVM via remote computing. We send job synchronously to be sure that node will be stopped, but job calls synchronously {{G.stop(igniteInstanceName, cancel))}} with {{cancel = false}}, that means node must wait to compute jobs before it goes down what leads to some kind of deadlock. Using of {{cancel = true}} would solve the issue but may break some tests’ logic, for this reason, I've reworked the method’s synchronization logic.


 We have not noticed that before because we use only {{stopAllGrids()}} in out tests which stop local JVM without waiting for nodes in other JVMs.


 I believe this fix should reduce the number of flaky tests on TeamCity, especially which fails because of a cluster from the previous test has not been stopped properly.

[Ci.tests|https://ci.ignite.apache.org/viewLog.html?buildId=1105939] look a bit better than in master.

[~dpavlov], could you please review [the prepared PR|https://github.com/apache/ignite/pull/2382]?;;;","15/Mar/18 15:02;dpavlov;Please use JUnit assertion for tests,
and remove side-effect construction like assert latch.await();;;","15/Mar/18 16:00;dpavlov;PR looks good to me.;;;","15/Mar/18 16:02;daradurvs;[~dpavlov], thank you for the notes, it's fixed now.;;;","16/Mar/18 15:26;nizhikov;[~daradurvs] Looks good to me.
Please, do Run All and attach a link to it.;;;","17/Mar/18 20:01;daradurvs;[~NIzhikov], here is [latest PR ci.build|https://ci.ignite.apache.org/viewLog.html?buildId=1141592] look good in comparison with [master branch's latest ci.tests|https://ci.ignite.apache.org/viewLog.html?buildId=1141111].;;;","17/Mar/18 20:35;dpavlov;[~daradurvs] could you please check

https://ci.ignite.apache.org/viewLog.html?buildId=1141521&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_IgniteBinaryObjectsSimpleMapperBasic

https://ci.ignite.apache.org/viewLog.html?buildId=1141519&buildTypeId=IgniteTests24Java8_IgniteBasic&tab=buildResultsDiv

These 2 builds were not failing in master, as far as I remember;;;","17/Mar/18 20:36;dpavlov;[~NIzhikov] thank you for paying attention to tests!;;;","17/Mar/18 22:06;daradurvs;[~dpavlov], you are right, there was a problem with long-running tests since I've set synchronization timeout which hasn't existed before.

I've changed logic a bit, sent for testing once again.;;;","22/Mar/18 14:19;nizhikov;[~daradurvs] Thank you for contribution.

Looking forward for your next patches!;;;","22/Mar/18 14:19;nizhikov;Merged to master

 

https://github.com/apache/ignite/commit/5ccb5482e2acc9dff502a0df7390e320760fed8d;;;","22/Mar/18 14:21;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2382
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: may failed to open non-root if user is not authorized,IGNITE-5908,13092101,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,03/Aug/17 07:27,13/Oct/17 08:25,14/Jul/23 06:20,11/Oct/17 04:20,,,,,,,,,,,,0,,,,"For example try to open http://localhost/configuration/basic
Expected: should redirect to home page",,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 11 04:20:22 UTC 2017,,,,,,,,,,"0|i3icyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/17 04:20;pkonstantinov;Already was fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console backend failed with error 11000,IGNITE-5906,13091854,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,02/Aug/17 10:42,28/Aug/17 16:38,14/Jul/23 06:20,03/Aug/17 07:10,2.2,,,,,2.3,,wizards,,,,0,,,,,,anovikov,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 07:10:23 UTC 2017,,,,,,,,,,"0|i3ibg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/17 03:25;anovikov;Fixed race in activities merge operation.
[~kuaw26], please confirm fix.;;;","03/Aug/17 07:10;kuaw26;Looks good for me. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite PDS Indexing Suite: IgniteWalRecoveryTest.testWalRolloverMultithreadedLogOnly is now flaky on TC with AsynchronousCloseException,IGNITE-5901,13091617,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,dpavlov,dpavlov,01/Aug/17 17:19,28/Aug/17 16:39,14/Jul/23 06:20,18/Aug/17 09:52,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,," http://ci.ignite.apache.org/viewLog.html?buildId=746981&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgnitePdsIndexing#testNameId2317518850927682700

{noformat}
class org.apache.ignite.internal.pagemem.wal.StorageException: null
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$FileWriteHandle.fsync(FileWriteAheadLogManager.java:2037)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$FileWriteHandle.access$1700(FileWriteAheadLogManager.java:1636)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager.fsync(FileWriteAheadLogManager.java:538)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1922)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1686)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.sendSingleRequest(GridNearAtomicAbstractUpdateFuture.java:299)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.map(GridNearAtomicSingleUpdateFuture.java:481)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapOnTopology(GridNearAtomicSingleUpdateFuture.java:441)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.map(GridNearAtomicAbstractUpdateFuture.java:248)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.update0(GridDhtAtomicCache.java:1167)
    at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.put0(GridDhtAtomicCache.java:656)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2334)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2311)
    at org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl.put(IgniteCacheProxyImpl.java:1029)
    at org.apache.ignite.internal.processors.cache.GatewayProtectedCacheProxy.put(GatewayProtectedCacheProxy.java:872)
    at org.apache.ignite.internal.processors.cache.persistence.db.wal.IgniteWalRecoveryTest$2.call(IgniteWalRecoveryTest.java:536)
    at org.apache.ignite.internal.processors.cache.persistence.db.wal.IgniteWalRecoveryTest$2.call(IgniteWalRecoveryTest.java:531)
    at org.apache.ignite.testframework.GridTestThread.run(GridTestThread.java:86)
Caused by: java.nio.channels.AsynchronousCloseException
    at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:205)
    at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:380)
    at org.apache.ignite.internal.processors.cache.persistence.file.RandomAccessFileIO.force(RandomAccessFileIO.java:92)
    at org.apache.ignite.internal.processors.cache.persistence.wal.FileWriteAheadLogManager$FileWriteHandle.fsync(FileWriteAheadLogManager.java:2034)
    ... 17 more
{noformat}

Locally test is passing",,agoncharuk,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 18 09:52:35 UTC 2017,,,,,,,,,,"0|i3i9zz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Aug/17 09:52;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Datagrid.QueryDmlExample: Incorrect result if run example  with standalone Apache Ignite.NET node,IGNITE-5898,13091551,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ptupitsyn,izaporozhtseva,izaporozhtseva,01/Aug/17 13:55,26/Sep/17 16:26,14/Jul/23 06:20,26/Sep/17 16:26,1.9,2.1,,,,2.3,,platforms,,,,0,.NET,,,"{{Datagrid.QueryDmlExample}}: Incorrect result if run example with standalone Apache Ignite.NET node

without standalone node:
{code}
>>> Inserted data
>>> 1: John Doe, ASF, 4000
>>> 2: Jane Roe, ASF, 5000
>>> 3: Mary Major, Eclipse, 2000
>>> 4: Richard Miles, Eclipse, 3000

>>> Update salary for ASF employees
>>> 1: John Doe, ASF, 4400
>>> 2: Jane Roe, ASF, 5500
>>> 3: Mary Major, Eclipse, 2000
>>> 4: Richard Miles, Eclipse, 3000

>>> Delete non-ASF employees
>>> 1: John Doe, ASF, 4400
>>> 2: Jane Roe, ASF, 5500
{code}

with standalone node:
{code}
>>> Inserted data
>>> 1: John Doe, ASF, 4000
>>> 3: Mary Major, Eclipse, 2000

>>> Update salary for ASF employees
>>> 1: John Doe, ASF, 4400
>>> 3: Mary Major, Eclipse, 2000

>>> Delete non-ASF employees
>>> 1: John Doe, ASF, 4400
{code}
",,izaporozhtseva,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 26 16:26:19 UTC 2017,,,,,,,,,,"0|i3i9lb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 13:59;ptupitsyn;{{Select}} method does not use distributed joins, and data is not colocated, so cache contents are displayed incorrectly.;;;","03/Aug/17 12:04;izaporozhtseva;the same problem for BinaryModeExample :

without or with one standalone node:
Persons working for Apache:
>>>     Person [idHash=4684212, Name=James Wilson Jr., CompanyId=-1]
>>>     Person [idHash=9462952, Name=Daniel Adams, CompanyId=-1]
>>>     Person [idHash=23179698, Name=Cristian Moss, CompanyId=-1]

with three standalone nodes:
>> Persons working for Apache:
>>>     Person [idHash=4684212, Name=James Wilson Jr., CompanyId=-1]
>>>     Person [idHash=23179698, Name=Cristian Moss, CompanyId=-1]

the same for QueryDmlExample;;;","26/Sep/17 16:26;ptupitsyn;Fixed in master: {{b4b3fea0de3c8280dece2e59bb1a8c30832c31dd}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Cache Full API Multi JVM: 7 test failed in master,IGNITE-5897,13091539,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,nizhikov,dpavlov,dpavlov,01/Aug/17 13:35,28/Aug/17 16:39,14/Jul/23 06:20,09/Aug/17 11:37,2.2,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"Failure on TC: http://ci.ignite.apache.org/viewLog.html?buildId=749671&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCacheFullApiMultiJvm#testNameId-6305397409161667157

org.apache.ignite.internal.processors.cache.multijvm (7)
- GridCachePartitionedNearDisabledMultiJvmFullApiSelfTest.testTransformResourceInjection 	
- GridCachePartitionedNearDisabledMultiJvmP2PDisabledFullApiSelfTest.testTransformResourceInjection 	
- GridCachePartitionedNearDisabledOnheapMultiJvmFullApiSelfTest.testTransformResourceInjection 	
- GridCacheReplicatedMultiJvmFullApiSelfTest.testTransformResourceInjection 	
- GridCacheReplicatedMultiJvmP2PDisabledFullApiSelfTest.testTransformResourceInjection 	
- GridCacheReplicatedNearOnlyMultiJvmFullApiSelfTest.testTransformResourceInjection 	
- GridCacheReplicatedOnheapMultiJvmFullApiSelfTest.testTransformResourceInjection 

Stable reproducible locally
First failure changes:
http://ci.ignite.apache.org/viewLog.html?buildId=727280&tab=buildChangesDiv&buildTypeId=Ignite20Tests_IgniteCacheFullApiMultiJvm

{noformat}

IGNITE-5753: CPP Memory leak fixed.	Igor Sapego 
IGNITE-5444: Collections.singletonList is not properly serialized by binary marshaller. This closes #2217.	andrey.mashenkov 
ignite-5722 Cache entries stay in onheap after scan query execution for OFFHEAP_TIRED cache with expiry policy	Andrey Gura 
ignite-5489 Fixed possible connection leaks when loadPreviousValue set to true	tikhonovnicolay 
IGNITE-4831: Add an option to disable MBeans. This closes #2265.	andrey.mashenkov   
{noformat}
Stacktrace: 
{noformat}
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] class org.apache.ignite.IgniteCheckedException: java.lang.NullPointerException
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadFromStore(GridCacheStoreManagerAdapter.java:327)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.load(GridCacheStoreManagerAdapter.java:282)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.readThrough(GridCacheMapEntry.java:445)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerGet0(GridCacheMapEntry.java:699)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerGet(GridCacheMapEntry.java:461)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.onEntriesLocked(GridDhtTxPrepareFuture.java:389)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare0(GridDhtTxPrepareFuture.java:1213)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.mapIfLocked(GridDhtTxPrepareFuture.java:668)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare(GridDhtTxPrepareFuture.java:1034)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:410)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareNearTx(IgniteTxHandler.java:459)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxPrepareRequest(IgniteTxHandler.java:121)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$000(IgniteTxHandler.java:95)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:141)
[2017-08-01 16:27:28,330][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:139)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1042)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:561)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at java.lang.Thread.run(Thread.java:748)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] Caused by: javax.cache.integration.CacheLoaderException: java.lang.NullPointerException
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	... 27 more
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] Caused by: java.lang.NullPointerException
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.H2CacheStoreStrategy$H2CacheStore.getFromDb(H2CacheStoreStrategy.java:382)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.H2CacheStoreStrategy$H2CacheStore.load(H2CacheStoreStrategy.java:336)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.CacheStoreBalancingWrapper.load(CacheStoreBalancingWrapper.java:98)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadFromStore(GridCacheStoreManagerAdapter.java:316)
[2017-08-01 16:27:28,346][INFO ][Thread-4][jvm-fe4cadea] 	... 26 more
{noformat}",,dpavlov,githubbot,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5489,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 09 14:42:52 UTC 2017,,,,,,,,,,"0|i3i9in:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 13:50;dpavlov;Disabling fix from [IGNITE-5489] makes test pass;;;","03/Aug/17 08:09;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/2384

    IGNITE-5897: Fix session init/end logic. This fixes tests

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-5897

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2384.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2384
    
----
commit af07ec59d9d9f16adc34c6ce092ab836d0f3a92e
Author: Nikolay <nizhikov.dev@gmail.com>
Date:   2017-08-03T08:07:01Z

    IGNITE-5897: Fix session init/end logic. This fixes tests

----
;;;","03/Aug/17 08:42;nizhikov;[~dpavlov] I fix this bug. Who can review my changes?
TC run in progress.;;;","03/Aug/17 10:42;dpavlov;[~NIzhikov], could you notify when TC is completed and share link to run-all?;;;","03/Aug/17 20:13;dpavlov;https://ci.ignite.apache.org/viewLog.html?buildId=755007&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll;;;","04/Aug/17 06:19;nizhikov;[~dpavlov] Thank you. Here is link to latest builds for this PR. I rerun some test suites because of timeouts. 

http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2384%2Fhead;;;","04/Aug/17 10:35;dpavlov;Taking into account restarted tests which are passing now, I think TC run is OK. 
Most of failed tests are flaky in master now or failed somewhere else.
I think we may proceed with review.

[~ntikhonov@apache.org], could you please review changes from 
https://github.com/apache/ignite/pull/2384
?;;;","07/Aug/17 13:02;nizhikov;[~ntikhonov]
[~ntikhonov@apache.org]

Did you have a chance to look at my pull request?

PR - https://github.com/apache/ignite/pull/2384
TC - http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2384%2Fhead
US - http://reviews.ignite.apache.org/ignite/review/IGNT-CR-265;;;","09/Aug/17 11:35;githubbot;Github user nizhikov closed the pull request at:

    https://github.com/apache/ignite/pull/2384
;;;","09/Aug/17 11:37;nizhikov;Fixed by commit - https://github.com/apache/ignite/commit/5a559dfa167db3ff90f35ac06624afc2688dacb9;;;","09/Aug/17 12:17;dpavlov;I have unmuted these tests (https://ci.ignite.apache.org/viewLog.html?buildId=762913&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCacheFullApiMultiJvm). Please consider run with number > # 903;;;","09/Aug/17 14:42;dpavlov;Passed in #904&#905 builds https://ci.ignite.apache.org/viewLog.html?buildId=763326&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCacheFullApiMultiJvm;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Incorrect dependency 'undefined' with value 'null',IGNITE-5888,13091469,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,01/Aug/17 08:05,28/Aug/17 16:40,14/Jul/23 06:20,03/Aug/17 07:18,2.1,,,,,2.3,,UI,wizards,,,0,,,,"Changed store dialect from Generic to IBM DB2
{code}
<dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>undefined</artifactId>
            <version>null</version>
</dependency>
{code}",,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 03 07:18:31 UTC 2017,,,,,,,,,,"0|i3i933:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Aug/17 09:43;anovikov;Fixed maven project generation.
[~pkonstantinov], please confirm fix;;;","03/Aug/17 07:18;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicated dependency in pom.xml of core module,IGNITE-5882,13091185,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,daradurvs,daradurvs,31/Jul/17 13:18,28/Aug/17 16:39,14/Jul/23 06:20,01/Aug/17 12:53,2.1,,,,,2.3,,build,,,,0,,,,"{code}
[INFO] Scanning for projects...
[WARNING]
[WARNING] Some problems were encountered while building the effective model for org.apache.ignite:ignite-core:jar:2.2.0-SNAPSHOT
[WARNING] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: com.google.guava:guava:jar -> version 14.0.1 vs ${guava.version} @ line 215, column 21
[WARNING]
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING]
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING]
{code}",,avinogradov,daradurvs,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 09 20:16:58 UTC 2017,,,,,,,,,,"0|i3i7c7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 13:21;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/2366

    IGNITE-5882 Duplicated dependency in pom.xml of core module

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-5882

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2366.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2366
    
----
commit e53e26aa5e0ce0fb2bcea6b7963ac1e1907635d7
Author: daradurvs <daradurvs@gmail.com>
Date:   2017-07-31T13:19:50Z

    ignite-5882: duplicated property was removed

----
;;;","31/Jul/17 13:25;daradurvs;Sent to [ci.tests|http://ci.ignite.apache.org/viewQueued.html?itemId=748600].;;;","01/Aug/17 08:45;daradurvs;There were two dependincies in: ignite\modules\core\pom.xml
{code}
...
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>14.0.1</version>
            <scope>test</scope>
        </dependency>
...
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>test</scope>
        </dependency>
...
{code}
I removed the dependency with version 14.0.1, because it looked outdated. ({{guava.version}} = 18.0 in ignite\parent\pom.xml)

I think such change may affect on compilation only, it passed fine according to tests above.
Sent to [ci.test|http://ci.ignite.apache.org/viewQueued.html?itemId=749544] once again, just to be sure.;;;","01/Aug/17 12:53;avinogradov;[~daradurvs],

Thanks for contribution! Merged to the master branch.;;;","09/Aug/17 20:16;githubbot;Github user daradurvs closed the pull request at:

    https://github.com/apache/ignite/pull/2366
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: 'Execute query' doesn't work,IGNITE-5877,13091088,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,31/Jul/17 04:46,28/Aug/17 16:40,14/Jul/23 06:20,31/Jul/17 07:56,,,,,,2.3,,,,,,0,,,,"For example just start Demo and try to execute its query.
Query result panel doesn't appear after clicking Execute or Explain button.
Query history is empty as well.",,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 01 07:14:50 UTC 2017,,,,,,,,,,"0|i3i6qn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 07:56;kuaw26;Fixed, please retest. You will need to rebuild ignite binaries.;;;","01/Aug/17 07:14;pkonstantinov;Re-tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: error on opening Hadoop Configuration,IGNITE-5876,13091080,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,31/Jul/17 03:14,28/Aug/17 16:39,14/Jul/23 06:20,31/Jul/17 07:56,,,,,,2.3,,,,,,0,,,,"Just open Configuration - Cluster - Hadoop Configuration
{code}
""Error: [$parse:syntax] Syntax Error: Token 'Object' is unexpected, expecting []] at column 9 of the expression [[object Object]] starting at [Object]].
http://errors.angularjs.org/1.5.11/$parse/syntax?p0=Object&p1=is%20unexpected%2C%20expecting%20%5B%5D%5D&p2=9&p3=%5Bobject%20Object%5D&p4=Object%5D
minErr/<@https://staging-console.my.com/vendor.ba700f32d508b24fa354.js:1:761642
throwError@https://staging-console.my.com
{code}",,Dmitriyff,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 03:26;Dmitriyff;hadoop.patch;https://issues.apache.org/jira/secure/attachment/12879558/hadoop.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 01 08:03:10 UTC 2017,,,,,,,,,,"0|i3i6ov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 03:26;Dmitriyff;Attach patch, pls apply it;;;","31/Jul/17 07:56;kuaw26;Fixed, please retest.;;;","01/Aug/17 08:03;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCacheP2pUnmarshallingRebalanceErrorTest.testResponseMessageOnUnmarshallingFailed fails,IGNITE-5871,13090786,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,EdShangGG,EdShangGG,28/Jul/17 14:02,28/Aug/17 16:38,14/Jul/23 06:20,02/Aug/17 15:24,,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"Success rate is 20%.

http://ci.ignite.apache.org/project.html?tab=testDetails&projectId=Ignite20Tests&testNameId=-7204444637123828878&page=10

Seems that it was broken in build #179, where [~sboikov] had merged cache groupd (ignite-5075)",,dpavlov,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 02 15:24:55 UTC 2017,,,,,,,,,,"0|i3i4w7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Aug/17 15:24;sergey-chugunov;resolving this as a duplicate of IGNITE-5542;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected timeout exception while client connecting with different BinaryConfiguration compactFooter param.,IGNITE-5869,13090777,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,zstan,zstan,zstan,28/Jul/17 13:26,10/Dec/18 16:45,14/Jul/23 06:20,01/Sep/17 14:38,2.0,,,,,2.3,,clients,,,,0,,,,"While client connecting with different from cluster BinaryConfiguration::setCompactFooter param, instead of expecting: ""configuration is not equal"" exception catch: Join process timed out exception.",,agura,dsetrakyan,githubbot,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Jul/17 13:32;zstan;TcpClientDiscoveryMarshallerCheckSelfTest.java;https://issues.apache.org/jira/secure/attachment/12879348/TcpClientDiscoveryMarshallerCheckSelfTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:45:44 UTC 2018,,,,,,,,,,"0|i3i4u7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 07:33;dsetrakyan;Is Ignite supposed to work with different compactFooter configurations in the cluster? If not, why do we even allow for such clients to connect?;;;","31/Jul/17 11:10;zstan;Dmitry, no, different config must lead into: ""configuration is not equal to remote node's binary configuration"" Exception, but sometimes we got timeout exception.;;;","18/Aug/17 12:28;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/2482

    IGNITE-5869 client hangs infinitely while binary configuration differs from server

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5869

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2482.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2482
    
----
commit 4de9de484dc595e816f8024b18c2988d5bd03983
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-08-18T12:23:42Z

    IGNITE-5869 client hangs infinitely while binary configuration differs from server

----
;;;","21/Aug/17 08:26;zstan;https://ci.ignite.apache.org/viewLog.html?buildId=776749;;;","01/Sep/17 14:38;agura;Merged to master branch.;;;","10/Dec/18 16:45;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/2482
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JettyRestProcessorUnsignedSelfTest and JettyRestProcessorSignedSelfTest fails on master,IGNITE-5866,13090753,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,nizhikov,nizhikov,nizhikov,28/Jul/17 11:51,28/Aug/17 16:40,14/Jul/23 06:20,01/Aug/17 11:37,2.1,,,,,2.3,,clients,,,,0,MakeTeamcityGreenAgain,,,"JettyRestProcessorSignedSelfTest and JettyRestProcessorUnsignedSelfTest fails on master
when run whole test class.
If run single method both tests succeed.

testMetadataLocal:

{noformat}
junit.framework.AssertionFailedError: expected:<5> but was:<6>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at junit.framework.TestCase.assertEquals(TestCase.java:409)
	at org.apache.ignite.internal.processors.rest.JettyRestProcessorAbstractSelfTest.testMetadataLocal(JettyRestProcessorAbstractSelfTest.java:1127)
{noformat}

testMetadataRemote
{noformat}
junit.framework.AssertionFailedError: expected:<6> but was:<7>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at junit.framework.TestCase.assertEquals(TestCase.java:409)
	at org.apache.ignite.internal.processors.rest.JettyRestProcessorAbstractSelfTest.testMetadataRemote(JettyRestProcessorAbstractSelfTest.java:1174)
{noformat}

",,agoncharuk,dpavlov,githubbot,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 01 11:38:29 UTC 2017,,,,,,,,,,"0|i3i4ov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/17 12:33;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/2359

    IGNITE-5866: Fix tests

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-5866

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2359.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2359
    
----
commit 87ffac598b89c95fc87e546ae1b535232fd91bcd
Author: Nikolay Izhikov <nvizhikov.sbt@sberbank.ru>
Date:   2017-07-28T12:31:06Z

    IGNITE-5866: Fix tests

----
;;;","31/Jul/17 11:37;githubbot;Github user nizhikov closed the pull request at:

    https://github.com/apache/ignite/pull/2359
;;;","31/Jul/17 12:15;nizhikov;Results of investigation of this issue.

Problem for both test-cases the same.
{{cache.context().queries().sqlMetadata()}} returns information about cache for storing atomic data structures - ""ignite-sys-atomic-cache@default-ds-group"". Cache for atomic created in {{testIncrement}} or {{testDecrement}} test-case.

ignite-sys-atomic-cache@default-ds-group created in

{code:java}
//DataStructuresProcessor.java:494

        if (type.isVolatile())
            grpName = DEFAULT_VOLATILE_DS_GROUP_NAME;
        else if (cfg.getGroupName() != null)
            grpName = cfg.getGroupName();
        else
            grpName = DEFAULT_DS_GROUP_NAME;

        String cacheName = ATOMICS_CACHE_NAME + ""@"" + grpName;

        IgniteInternalCache<GridCacheInternalKey, AtomicDataStructureValue> cache0 = ctx.cache().cache(cacheName);
{code}

List of cache collected by sqlMetadata method is filtered in GridCacheQueryManager$MetadataJob#call

{code:java}
// GridCacheQueryManager.java:2068
                new P1<IgniteInternalCache<?, ?>>() {
                    @Override public boolean apply(IgniteInternalCache<?, ?> c) {
                        return !CU.UTILITY_CACHE_NAME.equals(c.name());
                    }
                }

    /** System cache name. */
    public static final String UTILITY_CACHE_NAME = ""ignite-sys-cache"";
{code}

As far as I can see MetadataJob filter was modified by commit 804ce8243a8d19c3d5b4ca96b905ec18ee0139cf by Ilya Lantukh.

Should I fix MetadataJob filter? Or I just need to fix asserts in test-cases?;;;","31/Jul/17 13:03;dpavlov;Hi [~ilantukh], [~agoncharuk],

Could you please advice us about next steps to fix?;;;","31/Jul/17 13:11;agoncharuk;[~NIzhikov],

If I understand correctly, the result contains information about Ignite system cache. In this case, I think you should fix the MetadataJobFilter to exclude any system caches. ;;;","31/Jul/17 13:29;githubbot;GitHub user nizhikov opened a pull request:

    https://github.com/apache/ignite/pull/2367

    IGNITE-5866: Fix MetadataJob filter to exclude any of system caches

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/nizhikov/ignite IGNITE-5866

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2367.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2367
    
----
commit 46683787e6cb913c981a42041380adeb077ff5f7
Author: Nikolay Izhikov <nvizhikov.sbt@sberbank.ru>
Date:   2017-07-31T13:28:32Z

    IGNITE-5866: Fix MetadataJob filter to exclude any of system caches

----
;;;","01/Aug/17 07:54;nizhikov;[~dpavlov], [~agoncharuk] can you review my changes?

TC run:

http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2367%2Fhead

PR: https://github.com/apache/ignite/pull/2367
US: http://reviews.ignite.apache.org/ignite/review/IGNT-CR-253;;;","01/Aug/17 11:37;agoncharuk;Thanks, Nikolay, merged your changes to master.;;;","01/Aug/17 11:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2367
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TxOptimisticDeadlockDetectionTest.testDeadlocksPartitioned is failing,IGNITE-5865,13090741,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,jokser,jokser,28/Jul/17 10:29,19/Dec/18 14:08,14/Jul/23 06:20,18/Sep/17 14:25,2.1,,,,,2.3,,cache,,,,0,MakeTeamcityGreenAgain,Muted_test,test-failure,"Test is flaky.

Also there is always failing test in suite: TxOptimisticDeadlockDetectionTest.testDeadlocksPartitionedNear

TC build result: http://ci.ignite.apache.org/viewLog.html?buildId=744109&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCacheDeadlockDetection

Stacktrace: 

{noformat}
[2017-07-28 03:31:52,827][ERROR][grid-timeout-worker-#31%transactions.TxOptimisticDeadlockDetectionTest0%][IgniteTxHandler] Failed to prepare DHT transaction: GridDhtTxLocal [nearNodeId=d005de76-4378-4cd5-ad7e-f00593a00002, nearFutId=aab9f378d51-37ca90c9-03f5-417c-9731-2c29810e3cc0, nearMiniId=1, nearFinFutId=null, nearFinMiniId=0, nearXidVer=GridCacheVersion [topVer=112692678, order=1501212673293, nodeOrder=3], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridIntList [idx=1, arr=[94416770]], recovery=false, txMap=[IgniteTxEntry [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=424974513, hash=-1228408719, id=1, name=KeyObject1], cacheId=94416770, txKey=IgniteTxKey [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=424974513, hash=-1228408719, id=1, name=KeyObject1], cacheId=94416770], val=[op=CREATE, val=CacheObjectImpl [val=null, hasValBytes=true]], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=false, entry=GridDhtCacheEntry [rdrs=[], part=694, super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=16030069, hash=-1228408719, id=1, name=KeyObject1], val=null, startVer=1501212673290, ver=GridCacheVersion [topVer=112692678, order=1501212673290, nodeOrder=1], hash=-1228408719, extras=GridCacheMvccEntryExtras [mvcc=GridCacheMvcc [locs=[GridCacheMvccCandidate [nodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, ver=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], threadId=846, id=520, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], reentry=null, otherNodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, otherVer=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=null, serOrder=null, key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=16030069, hash=-1228408719, id=1, name=KeyObject1], masks=local=1|owner=1|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0|read=0, prevVer=null, nextVer=null], GridCacheMvccCandidate [nodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, ver=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], threadId=847, id=521, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], reentry=null, otherNodeId=d005de76-4378-4cd5-ad7e-f00593a00002, otherVer=GridCacheVersion [topVer=112692678, order=1501212673293, nodeOrder=3], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], serOrder=null, key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=16030069, hash=-1228408719, id=1, name=KeyObject1], masks=local=1|owner=0|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0|read=0, prevVer=null, nextVer=null]], rmts=null]], flags=2]]], prepared=1, locked=false, nodeId=null, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=null]]], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], writeVer=null, implicit=false, loc=true, threadId=847, startTime=1501212712015, nodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, startVer=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], endVer=null, isolation=REPEATABLE_READ, concurrency=OPTIMISTIC, timeout=800, sysInvalidate=false, sys=false, plc=2, commitVer=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], finalizing=NONE, invalidParts=null, state=MARKED_ROLLBACK, timedOut=false, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], duration=808ms, onePhaseCommit=false], size=1]]]
class org.apache.ignite.internal.transactions.IgniteTxTimeoutCheckedException: Failed to acquire lock within provided timeout for transaction [timeout=800, tx=GridDhtTxLocal [nearNodeId=d005de76-4378-4cd5-ad7e-f00593a00002, nearFutId=aab9f378d51-37ca90c9-03f5-417c-9731-2c29810e3cc0, nearMiniId=1, nearFinFutId=null, nearFinMiniId=0, nearXidVer=GridCacheVersion [topVer=112692678, order=1501212673293, nodeOrder=3], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridIntList [idx=1, arr=[94416770]], recovery=false, txMap=[IgniteTxEntry [key=org.apache.ignite.internal.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=424974513, hash=-1228408719, id=1, name=KeyObject1], cacheId=94416770, txKey=IgniteTxKey [key=org.apache.ignite.internal.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=424974513, hash=-1228408719, id=1, name=KeyObject1], cacheId=94416770], val=[op=CREATE, val=CacheObjectImpl [val=null, hasValBytes=true]], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=false, entry=GridDhtCacheEntry [rdrs=[], part=694, super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=org.apache.ignite.internal.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=16030069, hash=-1228408719, id=1, name=KeyObject1], val=null, startVer=1501212673290, ver=GridCacheVersion [topVer=112692678, order=1501212673290, nodeOrder=1], hash=-1228408719, extras=GridCacheMvccEntryExtras [mvcc=GridCacheMvcc [locs=[GridCacheMvccCandidate [nodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, ver=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], threadId=846, id=520, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], reentry=null, otherNodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, otherVer=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=null, serOrder=null, key=org.apache.ignite.internal.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=16030069, hash=-1228408719, id=1, name=KeyObject1], masks=local=1|owner=1|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0|read=0, prevVer=null, nextVer=null], GridCacheMvccCandidate [nodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, ver=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], threadId=847, id=521, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], reentry=null, otherNodeId=d005de76-4378-4cd5-ad7e-f00593a00002, otherVer=GridCacheVersion [topVer=112692678, order=1501212673293, nodeOrder=3], mappedDhtNodes=null, mappedNearNodes=null, ownerVer=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], serOrder=null, key=org.apache.ignite.internal.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=16030069, hash=-1228408719, id=1, name=KeyObject1], masks=local=1|owner=0|ready=1|reentry=0|used=0|tx=1|single_implicit=0|dht_local=1|near_local=0|removed=0|read=0, prevVer=null, nextVer=null]], rmts=null]], flags=2]]], prepared=1, locked=false, nodeId=null, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=null]]], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], writeVer=null, implicit=false, loc=true, threadId=847, startTime=1501212712015, nodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, startVer=GridCacheVersion [topVer=112692678, order=1501212673314, nodeOrder=1], endVer=null, isolation=REPEATABLE_READ, concurrency=OPTIMISTIC, timeout=800, sysInvalidate=false, sys=false, plc=2, commitVer=null, finalizing=NONE, invalidParts=null, state=PREPARING, timedOut=false, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], duration=808ms, onePhaseCommit=false], size=1]]]]
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture$PrepareTimeoutObject.onTimeout(GridDhtTxPrepareFuture.java:1871)
    at org.apache.ignite.internal.processors.timeout.GridTimeoutProcessor$TimeoutWorker.body(GridTimeoutProcessor.java:159)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
    at java.lang.Thread.run(Thread.java:745)
[2017-07-28 03:31:52,829][ERROR][sys-stripe-11-#193%transactions.TxOptimisticDeadlockDetectionTest3%][IgniteTxHandler] Failed to prepare DHT transaction: GridDhtTxLocal [nearNodeId=5d1c593f-e7b8-4672-9a3f-ff75dfe00000, nearFutId=dab9f378d51-37ca90c9-03f5-417c-9731-2c29810e3cc0, nearMiniId=2, nearFinFutId=null, nearFinMiniId=0, nearXidVer=GridCacheVersion [topVer=112692678, order=1501212673287, nodeOrder=1], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[62f7789c-6ef8-44c1-8e05-c509bcf00001], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxStateImpl [activeCacheIds=GridIntList [idx=1, arr=[94416770]], recovery=false, txMap=[IgniteTxEntry [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=629269478, hash=-2081639035, id=115, name=KeyObject115], cacheId=94416770, txKey=IgniteTxKey [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=629269478, hash=-2081639035, id=115, name=KeyObject115], cacheId=94416770], val=[op=CREATE, val=CacheObjectImpl [val=null, hasValBytes=true]], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=false, entry=GridDhtCacheEntry [rdrs=[], part=617, super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=629269478, hash=-2081639035, id=115, name=KeyObject115], val=null, startVer=1501212673302, ver=GridCacheVersion [topVer=112692678, order=1501212673302, nodeOrder=4], hash=-2081639035, extras=GridCacheObsoleteEntryExtras [obsoleteVer=GridCacheVersion [topVer=2147483647, order=0, nodeOrder=0]], flags=0]]], prepared=0, locked=false, nodeId=null, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=null], IgniteTxEntry [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=1922638918, hash=-534233642, id=102, name=KeyObject102], cacheId=94416770, txKey=IgniteTxKey [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=1922638918, hash=-534233642, id=102, name=KeyObject102], cacheId=94416770], val=[op=CREATE, val=CacheObjectImpl [val=null, hasValBytes=true]], prevVal=[op=NOOP, val=null], oldVal=[op=NOOP, val=null], entryProcessorsCol=null, ttl=-1, conflictExpireTime=-1, conflictVer=null, explicitVer=null, dhtVer=null, filters=[], filtersPassed=false, filtersSet=false, entry=GridDhtCacheEntry [rdrs=[], part=510, super=GridDistributedCacheEntry [super=GridCacheMapEntry [key=o.a.i.i.processors.cache.transactions.TxOptimisticDeadlockDetectionTest$KeyObject [idHash=1922638918, hash=-534233642, id=102, name=KeyObject102], val=null, startVer=1501212673300, ver=GridCacheVersion [topVer=112692678, order=1501212673300, nodeOrder=4], hash=-534233642, extras=GridCacheObsoleteEntryExtras [obsoleteVer=GridCacheVersion [topVer=2147483647, order=0, nodeOrder=0]], flags=2]]], prepared=1, locked=false, nodeId=null, locMapped=false, expiryPlc=null, transferExpiryPlc=false, flags=0, partUpdateCntr=0, serReadVer=null, xidVer=null]]], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=112692678, order=1501212673299, nodeOrder=4], writeVer=GridCacheVersion [topVer=112692678, order=1501212673301, nodeOrder=4], implicit=false, loc=true, threadId=846, startTime=1501212712015, nodeId=0fe34947-e728-4a41-84c0-3da5d5600003, startVer=GridCacheVersion [topVer=112692678, order=1501212673299, nodeOrder=4], endVer=null, isolation=REPEATABLE_READ, concurrency=OPTIMISTIC, timeout=790, sysInvalidate=false, sys=false, plc=2, commitVer=GridCacheVersion [topVer=112692678, order=1501212673299, nodeOrder=4], finalizing=NONE, invalidParts=null, state=ROLLED_BACK, timedOut=false, topVer=AffinityTopologyVersion [topVer=8, minorTopVer=8], duration=808ms, onePhaseCommit=false], size=2]]]
class org.apache.ignite.internal.transactions.IgniteTxTimeoutCheckedException: Transaction timed out: GridCacheSharedManagerAdapter [starting=true, stop=false]
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.prepareTx(IgniteTxManager.java:824)
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userPrepare(IgniteTxLocalAdapter.java:425)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:402)
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareNearTx(IgniteTxHandler.java:459)
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxPrepareRequest(IgniteTxHandler.java:121)
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$000(IgniteTxHandler.java:95)
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:141)
    at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:139)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1042)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:561)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
    at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
    at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
    at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
    at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
    at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
    at java.lang.Thread.run(Thread.java:745)
{noformat}
",,agura,dpavlov,githubbot,jokser,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6262,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 19 14:08:15 UTC 2018,,,,,,,,,,"0|i3i4m7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Aug/17 17:29;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2415

    IGNITE-5865: Test fixed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-5865

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2415.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2415
    
----
commit af94f2708c93e9a904f3dac65638f297c93e5543
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-08-08T17:29:21Z

    IGNITE-5865: Test fixed.

----
;;;","09/Aug/17 13:49;VitaliyB;Fixed.

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=762413&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll];;;","09/Aug/17 14:34;dpavlov;Hi, currently tests are muted on TC, see https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=mutedProblems&branch_Ignite20Tests=__all_branches__ for example

I suggest to re-run TC with umuted tests to find out if it is failing now TxDeadlockDetectionTestSuite;;;","09/Aug/17 15:00;VitaliyB;[~dpavlov],
Hi, muted tests are run too.
Please, take a look at these links:
[testDeadlocksPartitionedNear|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=8803221386026271009&tab=testDetails]
[testDeadlocksPartitioned|https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-6871793332841198308&tab=testDetails];;;","09/Aug/17 15:44;dpavlov;Hi [~VitaliyB], 

thank you for your reply. It is OK if test results were checked manually
I can see in PR test is passing https://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&tab=testDetails&testNameId=-6871793332841198308&branch_Ignite20Tests=pull%2F2415%2Fhead;;;","10/Aug/17 08:55;VitaliyB;I've run some TC builds and realized that not all bugs are fixed.;;;","04/Sep/17 15:27;githubbot;Github user BiryukovVA closed the pull request at:

    https://github.com/apache/ignite/pull/2415
;;;","04/Sep/17 15:31;githubbot;GitHub user BiryukovVA reopened a pull request:

    https://github.com/apache/ignite/pull/2415

    IGNITE-5865: Test fixed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-5865

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2415.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2415
    
----
commit aedf1ca7dd9b71c923aba4254b93a9055c55bf22
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-09-04T15:29:19Z

    IGNITE-5865: Fixed wrong partitioning.

----
;;;","05/Sep/17 06:56;VitaliyB;[~dpavlov], Fixed.
I've run some builds:
https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCacheDeadlockDetection&tab=buildTypeHistoryList&branch_Ignite20Tests=pull%2F2415%2Fhead

The problem was that the test began to work incorrectly after changes in the BinaryMarshaler, hashes of original objects and binary became different. And this led to an incorrect partition of entities in the test. But in some cases, it had to work. I found bugs and fix them in another task. 
;;;","07/Sep/17 08:00;VitaliyB;Implement primaryKeys method for custom objects.;;;","07/Sep/17 12:06;VitaliyB;[~avinogradov], Done. Please, take a look.;;;","14/Sep/17 10:04;VitaliyB;Hi, [~agura].  Please, review this issue. [Upsourse|https://reviews.ignite.apache.org/ignite/review/IGNT-CR-331]
The first problem was that the test began to work incorrectly after changes in the BinaryMarshaler, hashes of original objects and binary became different. And this led to an incorrect partition of entities in the test.
The second problem was that transaction timeout was too little and sometimes one of the transactions did not have time to process all the keys.

I've implemented new methods ""primaryKeys"" and ""primaryKey"" for custom objects and refactored this test using new methods. As well I' ve increased transaction timeout.

Also, I found new bugs:
#  In case of a configuration with near cache and if all entities of one of the transactions involved in the deadlock are on the node being the initiator of this transaction, then immediately after the timeout, the transaction rolls back (without calling DD).
# In some cases ""IgniteTxManager.txLocksInfo"" method (searches for locks) misses locks.
For example:
In case of a configuration with near cache, entities are created for the near cache and for the ordinal cache. For each entity, their own MVCC candidates are created.
For non-custom objects of type (Integer, etc.), the entity stored in ""GridNearTxLocal"" is not associated with MVCC candidates with which the same entity is associated in another format stored in ""GridDhtTxLocal""

I will add tests for new cases and fix this bags after the merging of this issue.

Also during debugging, I noticed that the ""TxDeadlockDetection.findCycle"" method sometimes finds a non-existent cycle, but I have not yet reproduced this bug.

[TC run|https://ci.ignite.apache.org/viewLog.html?buildId=826480&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll];;;","18/Sep/17 10:58;agura;[~VitaliyB] LGTM, but I don't like changes in {{GridCommonAbstractTest}} because :

1. {{IncrementalTestObject}} interface actually is needed only for deadlock detection tests
2. Generalized {{findKeys}} method supports only {{Integer}} and implementations of {{IncrementalTestObject}} interface. It's very strange utility method from developer point of view and can confuse.

Could you please revert changes in {{GridCommonAbstractTest}} and implement this functionality in package that contains deadlock detection tests?

Thanks.;;;","18/Sep/17 13:43;VitaliyB;[~agura], Done. Please, take a look.

Thanks.;;;","18/Sep/17 14:24;agura;LGTM! Thanks for your contribution! Merged to master branch.;;;","18/Sep/17 15:20;dpavlov;Hi [~VitaliyB], were tests umuted on Teamcity? Or it is still required to unmute?;;;","18/Sep/17 16:12;dpavlov;Hi [~VitaliyB], I've found tests were still muted. I've enabled tests.;;;","19/Dec/18 14:08;githubbot;Github user BiryukovVA closed the pull request at:

    https://github.com/apache/ignite/pull/2415
;;;",,,,,,,,,,,,,,,,,,,,,,,,
.NET: LINQPad ComputeExample missing namespace import,IGNITE-5864,13090720,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,28/Jul/17 08:36,28/Aug/17 16:38,14/Jul/23 06:20,28/Jul/17 08:39,2.1,,,,,2.3,,platforms,,,,0,.NET,,,"{{Apache.Ignite.Core.Deployment}} namespace import is missing in {{ComputeExample.linq}}, it does not compile without manual changes.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 28 08:38:58 UTC 2017,,,,,,,,,,"0|i3i4hr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/17 08:38;ptupitsyn;Fixed in master: {{ab899cf2e383190b71cc8d7940f2880f8b6ee670}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client disconnects if server it is connected to goes unresponsive ,IGNITE-5860,13090569,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmekhanikov,ezhuravl,ezhuravl,27/Jul/17 17:12,27/Oct/17 11:25,14/Jul/23 06:20,27/Oct/17 11:14,1.7,,,,,2.4,,,,,,0,,,,"Scenario is the following:

#     Start at least two server nodes.
#     Start a client node.
#     Detect server node client is connected to in discovery SPI.
#     Suspend that server (^Z in terminal or 'kill -SIGSTOP <PID>').
#     It's expected that client will drop connection with this server and connect to another one.
#     However, a client gets dropped from topology and disconnects.

A client should reconnect cluster before the timeout and without EVT_CLIENT_NODE_RECONNECTED event.

In ClientImpl.Reconnector in joinTopology method it gets all addresses from discoverySpi and addresses of the server that was suspended on top of this list.

*Proposed solution:*
Move addresses of the suspended server to the end of the list for the join.


",,dmekhanikov,ezhuravl,githubbot,ilyak,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Sep/17 15:33;ilyak;testAlivesClient.patch;https://issues.apache.org/jira/secure/attachment/12887680/testAlivesClient.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Oct 27 11:25:41 UTC 2017,,,,,,,,,,"0|i3i3kf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Aug/17 17:01;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/2402

    [IGNITE-5860] Client disconnects if server it is connected to goes unresponsive

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5860

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2402.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2402
    
----
commit 3a9cbed4e692e76ad884e60a4f5edc670e6b3c8f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-08-08T14:00:04Z

    IGNITE-3630 .NET: Add pure binary mode example with put-get and queries.

commit d5e15af76044cf65385672f8528d48ecdeca3cb6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-02T09:02:00Z

    IGNITE-4121 .NET: add ScanQuery example

commit 74f8308d10fc011c00e52efcdb315b35cc79e60a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-02T12:59:15Z

    IGNITE-4123 .NET: Remove [Serializable] from Employee in examples

commit 92fff630fbf36c82f93bbd9ddd53d11bed44e772
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-02T14:50:51Z

    Restored services compatibility.

commit a62a0136d295486d95c6e2ab5bba88270d831753
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-02T16:07:45Z

    GG-11655 - Fix merge

commit 348593986b56ddfcec4a4455e49d9b279eae4dc8
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-05T10:28:03Z

    Merge branch 'ignite-1.7.3' into ignite-1.7.4

commit 175da6b7e394dd76c27d5155ff98a5b2ef03bb9d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-07T06:16:58Z

    IGNITE-3432:  check data/meta cache names are different for different IGFS instances. This closes #1201

commit ead15193899d08f41491166003cabed0560f0c59
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T07:49:03Z

    IGNITE-4028 Get rid of OP_META in PlatformAbstractTarget
    
    This closes #1192

commit 40ef2f5ae42826fe8fd077e3013e8f55c8512bdd
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-07T09:09:41Z

    ignite-4178 support permission builder

commit df670c7d64046d282c053f296c47a4743c58c8b1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:40:00Z

    IGNITE-4118 .NET: Optimistic transaction example
    
    This closes #1200

commit 474f22fda4c7cf4d7b2623c451cd7c10f0d8c636
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:55:20Z

    IGNITE-4119 .NET: add TransactionDeadlockException

commit fc7ce5a4d72145f2e8a86debeda264ef0a5b37e3
Author: isapego <isapego@gridgain.com>
Date:   2016-11-07T10:26:05Z

    IGNITE-4090: Added flags so stdint and limits can be used in C++.

commit a98804a249496ba9bafbc96daa7aaf25b3d36724
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-07T11:00:00Z

    IGNITE-4113: Added tests. Added Statement::Set/GetAttribute.

commit b1c7c9bb95c900083702d0ba0362edf3aea5a7b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-07T12:40:36Z

    GG-11360 - Implement SQL queries cancellation
    Fix for commit 80abd1b: for distributed joins need always send cancel request.

commit 319014de075c80fb15e58172cc24e35ce16b56cf
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T14:53:40Z

    IGNITE-4132 .NET: Improve BinaryConfiguration documentation

commit 950bad474ef29f9b808e74034c49a69d57eb2740
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:03:34Z

    GG-11655 - Restore service compatibility with releases before 1.5.30.

commit 3d19bfc2b66574e3945ce17c7a4dfe77d0070b8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:04:36Z

    Merge remote-tracking branch 'origin/ignite-1.6.11' into ignite-1.6.11

commit 1612b6d66fed032182a41e90da71e6b986ae087b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T11:07:54Z

    .NET: Fix minor analysis warnings

commit e821dc0083003bc81058b1cb223d8a8a2ee44daf
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:09:21Z

    IGNITE-2079 (revert commit) GridCacheIoManager eats exception trail if it falls into the directed case

commit c2c82ca44befe4570325dd6cf2ba885e0d90596c
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:10:10Z

    Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11

commit 865bbcf0f41a0c4944e0928f1758d43a0eae82c5
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:18:29Z

    Revert ""Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11""
    
    This reverts commit c2c82ca44befe4570325dd6cf2ba885e0d90596c, reversing
    changes made to e821dc0083003bc81058b1cb223d8a8a2ee44daf.

commit 9726421ff9efb2b19813b2fd6ad27a3728b5ab1a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:59:00Z

      Revert  Revert  Merge remote-tracking branch 'professional/ignite-1.6.11'

commit 5a3a1960fff1dcf32961c45c0ba5149d6748d2fc
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-08T14:36:35Z

    Added license header.

commit f697fb5786fb4ce15f581c465ff0dcb3d2bb7b14
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:13:48Z

    IGNITE-4185 .NET: Fix NullReferenceException in IgniteOutputCacheProvider when igniteConfiguration is missing

commit 69487f2c375010737311af65750a519b403fc17f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:38:28Z

    .NET: Fix error messages when IgniteConfigurationSection content is missing

commit d88f422aeb02738d676d86ce416551b805ad154e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-11-09T07:25:38Z

    GG-11028 Fixed resolving of host name.

commit ac660dcaa5bf8eb20e7dd4e442e97c1cf548a827
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T12:29:06Z

    IGNITE-4183: ODBC Fixed null-values fetching issue.

commit cdae2ab76d403aef9a0bd209fc7497dc6cfdfc08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T13:25:30Z

    IGNITE-3873: Added WiX script to generate ODBC installer.

commit 1093819ac0f3e7a0faacde59919117b8977e6d5b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:19:01Z

    IGNITE-4201: Fixed version fix maven step.

commit bac0cba7fddd412dfbff98163afbc15d81d5e0d4
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-10T06:02:41Z

    ignite-4044  always authenticate local node

----
;;;","18/Aug/17 11:47;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/2480

    IGNITE-5860 make client reconnect on router's suspend

    Created for testing

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5860-1.9.6

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2480.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2480
    
----
commit ba6227be49c8a395a5632e9841a6acb65ae340b6
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.

commit bb3ff120e6995431d10439243d8b163712de0e0e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.
    
    (cherry picked from commit ba6227b)

commit 960e454b4b68c76ed94ca58a3ee9a9d8e79c2039
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T07:28:15Z

    IGNITE-2466 - Use current NIO back pressure mechanism to limit received messages. Mark them process only when backups acknowledged.
    
    (cherry picked from commit 220db88)

commit 207ccaa1ff5a021a25dc779b5b2d7bfdb0f3b647
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-10T08:40:17Z

    IGNITE-2466 - Disable back-pressure for sender data nodes to avoid deadlock.
    
    (cherry picked from commit ba6227b)
    
    (cherry picked from commit bb3ff12)

commit 5fbbc37669bcf0557a98d8ab70c3dbb79ebcd340
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T12:01:02Z

    IGNITE-4917: Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller . This closes #1736.
    
    (cherry picked from commit b8e3d1b)

commit 315ff38eeef96f12954d6ff39c84d58b2b959667
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4879: Fixed System pool starvation while partition evicting.

commit 89e9dbe484312c251f02c9fbe9698c3ac2e03df8
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-10T13:36:33Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 01ceeb13420b68edf12b0262fe0991e84c085dd8
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-06T11:43:50Z

    IGNITE-4863: Disallow change RootLogger log-level if it can have negative effect on other loggers. This closes #1687.

commit 02b194268071b179d291b28472cef5d587e7558a
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T09:00:59Z

    Fix missing test resource directory for
    org.apache.ignite.spi.discovery.tcp
        .TcpDiscoveryNodeAttributesUpdateOnReconnectTest.testReconnect

commit 20016a20f780eb3c21f249d3cb74d08018c4eea5
Author: Alexander Fedotov <alexander.fedotoff@gmail.com>
Date:   2017-04-11T11:54:06Z

    Fix org.apache.ignite.internal.processors.cache.expiry
        .IgniteCacheExpiryPolicyAbstractTest#testNearExpiresWithCacheStore

commit 6d12bd4b9fbded5e5862b5c3d89b05a5ddd11755
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-03-21T14:54:51Z

    IGNITE-4200: Added copying of the C++ binaries.
    
    (cherry picked from commit 8b3860f)

commit 0f7ef74216fab64f5d1d2b6d432b552b7fe40d2f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.

commit 465084da5b00dcfc056d338f5d0a24875ca2af08
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit a20c307df1dd000309a273ef93231fdc41a2a81c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-13T06:31:17Z

    IGNITE-4891 - Fix. Key is deserialized during transactional get() even if withKeepBinary is set
    
    (Backport from master)

commit 630558dfeb373f237057e394e8f2f63230d59dab
Author: vladisav <vladisavj@gmail.com>
Date:   2017-04-13T10:24:42Z

    ignite-4173 IgniteSemaphore with failoverSafe enabled doesn't release permits in case permits owner node left topology
    
    Backport from master.
    
    (cherry picked from commit 76485fc)

commit 870b752c095ed3776e91a65b99763142b9f2ebc0
Author: Vladisav Jelisavcic <vladisavj@gmail.com>
Date:   2017-04-11T11:09:12Z

    ignite-1977 - fixed IgniteSemaphore fault tolerance.
    
    Backport from master.
    
    (cherry picked from commit 902bf42)

commit cd0b92950c6691c6fc1a26cb4f7e55f5ee459298
Author: Yakov Zhdanov <yzhdanov@gridgain.com>
Date:   2017-04-13T12:52:20Z

    ignite-4946 GridCacheP2PUndeploySelfTest became failed
    
    (cherry picked from commit d298e75)

commit 241e9291dbe43138be1c027a3d8d1b7e3ed9b4dd
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T06:36:10Z

    Merge branch 'ignite-1.9.1-p1' into ignite-1.9.2

commit 405ce563fb7c35627c6e1bb0b68f423ba089c6f2
Author: Dmitriy Shabalin <dmitriyff@gmail.com>
Date:   2017-04-14T10:55:38Z

    IGNITE-4068 Added common primitive for buttons group. Refactored existing button groups.
    (cherry picked from commit e5200c2)

commit 60cf48dc175fa288cd74d1189f0e992c9a16dc99
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-04-14T11:00:47Z

    IGNITE-4886 Catch all errors.
    (cherry picked from commit 7e8d9e8)

commit 81c3ed4c0511841f7056677db6063b4eb8d2def0
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-04-14T11:18:23Z

    IGNITE-4896 Rewored GridClientNodeBean serialization.
    (cherry picked from commit a025268)

commit 4a1415ad01ff9fde30d5c7c02e6d938f1515178d
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-12T10:01:25Z

    IGNITE-4907: Fixed excessive service instances can be started with dynamic deployment. This closes #1766.
    
    (cherry picked from commit 0f7ef74)

commit e206b9f1fd3dbf927f940d558144a4796479ed5d
Author: vsisko <vsisko@gridgain.com>
Date:   2017-04-14T11:32:30Z

    IGNITE-4871 Added Kubernetes IP finder to Cluster configuration screen.
    (cherry picked from commit f978ff2)

commit 4518f51f4c1c29517d518f5e44f5d70d17c51170
Author: sboikov <sboikov@gridgain.com>
Date:   2017-04-14T13:38:46Z

    Added IgniteGetFromComputeBenchmark.

commit b22738080101536a8af1ed60e70d693897e9bc7c
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:54:02Z

    ignite-4173 Fix test. Permits must be released on node fail.
    
    (cherry picked from commit 1f867c6)

commit 41c5288606710b9c42983780ac7464a746d09eb0
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-14T14:56:25Z

    Merge remote-tracking branch 'origin/ignite-1.8.6' into ignite-1.8.6

commit 1985496ea98f4d7112a0b99727297427f343e9b2
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-17T07:20:41Z

    Add missed license headers.

commit ae794ab45b22abe1e570d5d29661396ea7c0f951
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-17T10:40:28Z

    IGNITE-4159 Fix version.

commit bf1049741f7a64728bd433f78262ba273f969848
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-17T16:00:30Z

    IGNITE-4954 - Configurable expiration timeout for Cassandra session. This closes #1785.

commit 86c49514c64225059a31912fdccadc6dc68a8397
Author: sboikov <sboikov@gridgain.com>
Date:   2017-04-18T08:15:44Z

    ignite-4932 For offheap_tiered cache first try read value without cache entry creation

----
;;;","21/Aug/17 16:23;dmekhanikov;https://github.com/apache/ignite/pull/2402;;;","22/Aug/17 07:18;githubbot;Github user dmekhanikov closed the pull request at:

    https://github.com/apache/ignite/pull/2480
;;;","18/Sep/17 15:34;ilyak;GridDiscoveryManagerAliveCacheSelfTest.testAlivesClient fails after this commit.

It was failing even before, see how to fix it.;;;","27/Oct/17 11:14;sboikov;Reviewed, merged into master.

Thanks;;;","27/Oct/17 11:25;githubbot;Github user dmekhanikov closed the pull request at:

    https://github.com/apache/ignite/pull/2402
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IgniteUtils.ceilPow2 overflow for values greater than 2^30",IGNITE-5859,13090568,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,VitaliyB,VitaliyB,27/Jul/17 17:12,19/Dec/18 14:05,14/Jul/23 06:20,01/Aug/17 14:03,,,,,,,,,,,,0,,,,"Method ""IgniteUtils.ceilPow2"" can overflow for values greater than 2^30 and return Integer.MIN_VALUE for them.
Maybe this check was skipped for method speed. In this case, we need to add information about this into javaDoc.
",,avinogradov,chief,githubbot,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 17:13;VitaliyB;CeilPow2Test.java;https://issues.apache.org/jira/secure/attachment/12879195/CeilPow2Test.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 19 14:05:46 UTC 2018,,,,,,,,,,"0|i3i3k7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 17:38;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2355

    IGNITE-5859: Utils.ceilPow2 method fixed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-5859

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2355.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2355
    
----
commit b2c4c01d8bccc55532de276cdca24ab23680fcc6
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-07-27T17:38:08Z

    IGNITE-5859: Utils.ceilPow2 method fixed.

----
;;;","27/Jul/17 17:53;VitaliyB;[~avinogradov], please take a look.

Issue was created after:
http://apache-ignite-developers.2346864.n4.nabble.com/Bug-in-method-tt20122.html;;;","28/Jul/17 10:52;chief;[~avinogradov] looks fine for me.

[~VitaliyB] please run all related tests on TC and link the result, just for avoid of regression.;;;","29/Jul/17 21:46;VitaliyB;[~avinogradov], [~chief], Done.
http://ci.ignite.apache.org/viewLog.html?buildId=744804&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll;;;","01/Aug/17 14:03;avinogradov;[~VitaliyB],

Thanks for contribution! Merged to master.;;;","19/Dec/18 14:05;githubbot;Github user BiryukovVA closed the pull request at:

    https://github.com/apache/ignite/pull/2355
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Cache 5 Timeout: CacheLateAffinityAssignmentTests hangs after assertion error,IGNITE-5858,13090519,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,sboikov,dpavlov,dpavlov,27/Jul/17 14:15,28/Aug/17 16:37,14/Jul/23 06:20,28/Jul/17 07:26,2.2,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"Reproduced for master:
{noformat}
Invalid affinity version [last=AffinityTopologyVersion [topVer=-1, minorTopVer=0], 
{noformat}

Failed tests
CacheLateAffinityAssignmentTest.testRandomOperations
CacheLateAffinityAssignmentTest.testAffinitySimpleNoCacheOnCoordinator1


Failed builds
http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache5&tab=buildTypeHistoryList&branch_Ignite20Tests=%3Cdefault%3E

Following builds were failed
742325,742326,742327,742328,742329,742330,742331,742332,742333,742334,742335,742336,742337,742338,742339,742340,742341,742342,742343,742344",,dpavlov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 14:16;dpavlov;ThreadDump0.zip;https://issues.apache.org/jira/secure/attachment/12879174/ThreadDump0.zip","27/Jul/17 14:16;dpavlov;lastStartedTest_CacheLateAffinityAssignmentTest.testRandomOperations.log.zip;https://issues.apache.org/jira/secure/attachment/12879175/lastStartedTest_CacheLateAffinityAssignmentTest.testRandomOperations.log.zip",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 28 15:23:24 UTC 2017,,,,,,,,,,"0|i3i39b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/17 07:26;sboikov;Fixed hang in CacheLateAffinityAssignmentTest.;;;","28/Jul/17 15:23;dpavlov;Hi, [~sboikov], thank you for this fix. Ignite Cache 5 Suite started to passing. The only one known problem remained [IGNITE-5759];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: BigInteger support broken in SQL queries.,IGNITE-5855,13090470,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,amashenkov,amashenkov,27/Jul/17 09:20,07/Sep/17 11:27,14/Jul/23 06:20,07/Sep/17 11:27,2.0,2.1,,,,2.3,,sql,,,,0,,,,"Looks like BigInteger support in SQL was broken.
It works fine on ignite-1.9
PFA reproducer.

",,amashenkov,githubbot,ilyak,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 10:31;amashenkov;BigIntegerKeySqlTest.java;https://issues.apache.org/jira/secure/attachment/12879153/BigIntegerKeySqlTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 07 11:26:52 UTC 2017,,,,,,,,,,"0|i3i2yf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jul/17 10:24;amashenkov;Looks weird as BigDecimal test passes. See attached test to IGNITE-5818.;;;","24/Aug/17 16:04;ilyak;The offender here is H2's ValueDecimal class:

It doesn't override Value's covertTo(), so when it is asked to be converted to Java object, it returns
{code}
                return ValueJavaObject.getNoCopy(null,
                        StringUtils.convertHexToBytes(getString().trim()), getDataHandler());
{code}

Instead of sensible ""if (targetType == JAVA_OBJECT) return value;"" as one might imagine.

So we will have to do the check outside of H2 code.
;;;","24/Aug/17 16:20;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2512

    IGNITE-5855 Type-safe parameters setting fixes crash when querying BigInteger key

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5855

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2512.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2512
    
----
commit 643f2e58415525a75c3630f8d2f174065db9a0e0
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-08-24T16:17:04Z

    IGNITE-5855 Type-safe parameters setting fixes crash when querying BigInteger key

----
;;;","24/Aug/17 16:21;ilyak;[~vozerov] please take a look.;;;","24/Aug/17 16:22;ilyak;https://reviews.ignite.apache.org/ignite/branch/PR%202512;;;","25/Aug/17 12:05;ilyak;Unfortunately I'm retracting that patch, it doesn't work as expected.;;;","30/Aug/17 11:02;ilyak;I have updated my pull request. Now fixes the specific issue only without other changes.;;;","01/Sep/17 08:52;ilyak;[~tledkov-gridgain] please take a look at the amended fix;;;","05/Sep/17 13:33;tledkov-gridgain;Looks good to me. What about tests results?;;;","05/Sep/17 14:31;ilyak;https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteJdbcDriver&branch_Ignite20Tests=pull%2F2512%2Fhead&tab=buildTypeStatusDiv JDBC tests pass;;;","07/Sep/17 11:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2512
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite PDS: We don't save cache configuration if we get it on join,IGNITE-5843,13090182,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,EdShangGG,EdShangGG,26/Jul/17 11:49,28/Aug/17 16:40,14/Jul/23 06:20,14/Aug/17 14:32,2.1,,,,,2.3,,persistence,,,,0,,,,We don't save cache configuration when we get it on join (new node joins cluster with cache which is not presented on config or on disk).,,agoncharuk,githubbot,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Aug 14 14:32:49 UTC 2017,,,,,,,,,,"0|i3i16v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Jul/17 13:09;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/2347

    IGNITE-5843 Ignite PDS: We don't save cache configuration if we get i…

    …t on join

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5843

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2347.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2347
    
----
commit 3db78535fbb84dd37d2f178649edf6b9a4116513
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2017-07-26T12:54:30Z

    IGNITE-5843 Ignite PDS: We don't save cache configuration if we get it on join

----
;;;","26/Jul/17 13:10;EdShangGG;Pull request:
https://github.com/apache/ignite/pull/2347

Test run:
http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_RunAll&branch_Ignite20Tests=pull%2F2347%2Fhead&tab=buildTypeStatusDiv;;;","10/Aug/17 14:39;ilantukh;Looks good.;;;","14/Aug/17 14:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2347
;;;","14/Aug/17 14:14;agoncharuk;Thanks, Eduard, merged  your changes to master.;;;","14/Aug/17 14:32;agoncharuk;Thanks, Eduard, merged your changes to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unclear exception from BinaryObjectBuilder::build call when builder is reused,IGNITE-5839,13090139,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,sergey-chugunov,sergey-chugunov,26/Jul/17 08:52,17/Oct/17 10:23,14/Jul/23 06:20,18/Sep/17 17:55,2.1,,,,,2.3,,,,,,0,,,,"Simple test where {{BinaryObjectBuilder}} builder object is reused fails with exception {noformat}org.apache.ignite.binary.BinaryObjectException: Wrong value has been set [typeName=SimpleCls, fieldName=str, fieldType=String, assignedValueType=Object]{noformat}

{noformat}
        IgniteCache<Object, Object> cache = /* obtain a reference to withKeepBinary cache instance */;

        BinaryObjectBuilder bldr = grid(0).binary().builder(""SimpleCls"");

        bldr.setField(""str"", ""abc"");
        c.put(0, bldr.build());

        bldr.setField(""str"", null);
        c.put(1, bldr.build());

        bldr.setField(""str"", ""def"");
        c.put(2, bldr.build()); //exception will be thrown by call bldr.build()
{noformat}

It can be fixed by simply recreating BinaryObjectBuilder instead of reusing the same instance. 

However reusing builder object must be either explicitly prohibited or exception must be fixed.

Right now documentation on builder class says nothing about reusing this object.",,agura,amashenkov,githubbot,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 17 10:23:29 UTC 2017,,,,,,,,,,"0|i3i0xb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Aug/17 15:05;amashenkov;Seems, wrong overloaded method is used in  {{bldr.setField(""str"", null)}}.

_setField(String name, @Nullable BinaryObjectBuilder builder)_ should delegate call to _setField(String name, Object val)_ without having type passed explicitly.


;;;","28/Aug/17 15:23;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2532

    IGNITE-5839: Unclear exception from BinaryObjectBuilder::build call when builder is reused.

    Fix BinaryObjectBuilder reusage issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5839

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2532.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2532
    
----
commit 774028b0aba9dcb453ce487b9265603e84bb147f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-08-28T15:18:05Z

    Fix BinaryObject builder reuse issue.

----
;;;","04/Sep/17 10:28;amashenkov;[~sergey-chugunov]], would you please review a PR?;;;","15/Sep/17 09:54;agura;[~amashenkov]

It seems that {{BinaryObjectBuilderImpl.setField(String name, Object val0)}} is broken after changes. If passed {{val0}} value is {{null}} then {{new BinaryValueWithType(BinaryUtils.typeByClass(Object.class), null)}} should be set to the target value field.;;;","15/Sep/17 09:56;amashenkov;[~agura], thanks for pointing me.

Fixed.
;;;","18/Sep/17 17:54;agura;LGTM! Merged to master.;;;","17/Oct/17 10:23;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/2532
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race in WAL segment leading to ClosedChannelException,IGNITE-5816,13089544,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,24/Jul/17 14:24,28/Aug/17 16:41,14/Jul/23 06:20,28/Jul/17 14:26,2.1,,,,,2.3,,cache,,,,0,,,,"In current flushOrWait() code we acquire writtenBytes before we try to flush. If flush fails, we wait for written be equal to expWritten.
When a segment is being closed, this leads to one thread returning from flushOrWait early because written is updated, but expWritten does not match the last record position.",,agoncharuk,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 28 14:26:32 UTC 2017,,,,,,,,,,"0|i3hxmn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/17 14:26;agoncharuk;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IgniteCache5 suite timed out, assertions in sessions close logic",IGNITE-5806,13089047,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,dpavlov,dpavlov,dpavlov,21/Jul/17 13:48,28/Aug/17 16:40,14/Jul/23 06:20,26/Jul/17 14:23,2.1,,,,,2.3,,,,,,0,MakeTeamcityGreenAgain,,,"Ignite Cache 5 timeouts observed in master

http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache5&branch_Ignite20Tests=%3Cdefault%3E&tab=buildTypeStatusDiv
Reproduced for builds 725, 740 and 748 
Log contains assertion coming from 
{code}
!sesHolder.get().ended(store); 
{code}
at
{noformat} [2017-07-21 07:59:44,774][ERROR][sys-stripe-3-#117%cache.CacheSerializableTransactionsTest2%][G]
 Failed to execute runnable.
         
java.lang.AssertionError
at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.sessionEnd0(GridCacheStoreManagerAdapter.java:878)
at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadFromStore(GridCacheStoreManagerAdapter.java:335)
at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.load(GridCacheStoreManagerAdapter.java:282)
at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.readThrough(GridCacheMapEntry.java:445)
at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerGet0(GridCacheMapEntry.java:699)
at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerGet(GridCacheMapEntry.java:461)
{noformat}

First time assertion came from test org.apache.ignite.internal.processors.cache.CacheSerializableTransactionsTest#testRandomOperations
Assertion is reproducible locally. But test is considered passed
",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5803,,,,,,,,,,,,,,IGNITE-5808,IGNITE-5489,,,,,,,,,,,"21/Jul/17 13:50;dpavlov;Ignite_2.0_Tests_Ignite_Cache_5_748.log.zip;https://issues.apache.org/jira/secure/attachment/12878351/Ignite_2.0_Tests_Ignite_Cache_5_748.log.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 28 15:22:19 UTC 2017,,,,,,,,,,"0|i3hukv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jul/17 14:03;dpavlov;Under fix of [IGNITE-5489] within PR https://github.com/apache/ignite/pull/2288/files 
code was changed assigning null to tx, and assertion (having side effect) failed. Asertion was already removed in  [IGNITE-5489] for previous versions.

Assertion is to be removed under current issue PR;;;","21/Jul/17 14:53;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2335

    IGNITE-5806: removed assertion failing Ignite Cache 5 suite

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5806

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2335.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2335
    
----
commit 085adf75de2747987d562ce37fabdf462756fec5
Author: dspavlov <dpavlov@gridgain.com>
Date:   2017-07-21T14:51:50Z

    IGNITE-5806: removed assertion failing Ignite Cache 5 suite

----
;;;","22/Jul/17 14:44;dpavlov;http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache5&branch_Ignite20Tests=pull%2F2335%2Fhead&tab=buildTypeStatusDiv;;;","24/Jul/17 13:31;dpavlov;https://github.com/apache/ignite/pull/2335

All failures from 20 runs ( http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache5&branch_Ignite20Tests=pull%2F2335%2Fhead&tab=buildTypeStatusDiv ) came from [IGNITE-5759].
;;;","24/Jul/17 14:32;agoncharuk;Dmitriy,

I whink a more correct fix would be 
{code}
if (!sesHolder.get().ended(store))
   store.sessionEnd(commit);
{code}

Please re-run the TC with this change.;;;","25/Jul/17 13:23;dpavlov;[~agoncharuk], this fix is ok from the point of tests - 80 failed tests (79 is average for master)
http://ci.ignite.apache.org/viewLog.html?buildId=738855&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll

Cache 5 timed out because of [IGNITE-5759] and in once other test.

Could you please merge fix from https://github.com/apache/ignite/pull/2335 ?;;;","26/Jul/17 14:23;agoncharuk;Merged to master;;;","26/Jul/17 14:25;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2335
;;;","28/Jul/17 15:22;dpavlov;Passing after merge IGNITE-5858, The only one known problem remained IGNITE-5759;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ScanQuery transformer applies to first results page only.,IGNITE-5804,13089032,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slava.koptilin,amashenkov,amashenkov,21/Jul/17 12:33,15/Feb/18 16:47,14/Jul/23 06:20,15/Feb/18 16:09,1.9,,,,,2.5,,cache,,,,0,,,,"Issue is successfully reproduces on GridCacheQueryTransformerSelfTest if 
set ScanQuery.pageSize much lower then cache size.

We should rework GridCacheQueryTransformerSelfTest to run test on larger dataset 
to make pagination used as well.

http://apache-ignite-users.70518.x6.nabble.com/Transformer-not-called-on-every-ScanQuery-td15171.html",,agoncharuk,amashenkov,avk47,dpavlov,slava.koptilin,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7483,IGNITE-7649,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 15 12:02:01 UTC 2018,,,,,,,,,,"0|i3huhj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Feb/18 09:57;slava.koptilin;TC looks good to me.
https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&tab=projectOverview&branch_IgniteTests24Java8=pull%2F3470%2Fhead;;;","13/Feb/18 13:40;dpavlov;Hi [~slava.koptilin], I've found everal suspicious tests, which never failed in master but failed in PR:

Could you check if they are related to current PR changes
{noformat}
   Ignite Cache 4 [ tests 3 ] 
     org.apache.ignite.testsuites.IgniteCacheTestSuite4: org.apache.ignite.internal.processors.cache.CacheGetEntryPessimisticReadCommittedSeltTest.testReplicatedTransactional (fail rate 0%) 
     org.apache.ignite.testsuites.IgniteCacheTestSuite4: org.apache.ignite.internal.processors.cache.CacheGetEntryPessimisticRepeatableReadSeltTest.testNearTransactional (fail rate 0%) 
     org.apache.ignite.testsuites.IgniteCacheTestSuite4: org.apache.ignite.internal.processors.cache.CacheGetEntryPessimisticRepeatableReadSeltTest.testReplicatedTransactional (fail rate 0%)

   Ignite Cache 2 [ tests 2 ] 
     org.apache.ignite.testsuites.IgniteCacheTestSuite2: org.apache.ignite.internal.processors.cache.distributed.near.GridCachePartitionedTxSingleThreadedSelfTest.testOptimisticReadCommittedCommit (fail rate 0%) 
     org.apache.ignite.testsuites.IgniteCacheTestSuite2: org.apache.ignite.internal.processors.cache.distributed.near.GridCachePartitionedTxSingleThreadedSelfTest.testOptimisticRepeatableReadRollback (fail rate 0%) 

 
   Ignite Cache Tx Recovery [ tests 1 ]  
     org.apache.ignite.testsuites.IgniteCacheTxRecoverySelfTestSuite: org.apache.ignite.internal.processors.cache.distributed.dht.TxRecoveryStoreEnabledTest.testPessimistic (fail rate 0%) 
{noformat};;;","14/Feb/18 10:17;vozerov;[~slava.koptilin], [~dpavlov], fix looks good to me provided that questions around TC are taken off.;;;","14/Feb/18 13:34;dpavlov;[~vozerov], [~slava.koptilin], re-run of TC looks acceptable, chain results: tests 32 suites 5 - better than average TC runs on master.

Feel free to create investigations about remaining failures and assign it. 

We can merge this change.;;;","15/Feb/18 12:02;agoncharuk;Thanks, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix all wrong TODO comments in ML component,IGNITE-5802,13089024,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,chief,chief,21/Jul/17 11:32,28/Aug/17 16:40,14/Jul/23 06:20,25/Jul/17 12:23,,,,,,2.3,,ml,,,,0,ml,,,"(i) https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines#CodingGuidelines-TODOs
{quote}It's mandatory to use related JIRA ticket number.{quote} 

Not all TODOs in ML component comply with above rules, that must be fixed.",,chief,githubbot,oignatenko,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 25 12:24:22 UTC 2017,,,,,,,,,,"0|i3hufr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jul/17 11:21;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/2340

    IGNITE-5802: Fix all wrong TODO comments in ML component

    - Added related tickets to all TODOs.
    - Fixed some inspection problems.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5802

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2340.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2340
    
----
commit 7924881e14f62f1f0e49e8018338c4cedac17433
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-07-25T11:13:39Z

    IGNITE-5802: Fix all wrong TODO comments in ML component
    - Added related tickets to all TODOs.
    - Fixed some inspection problems.

----
;;;","25/Jul/17 11:47;chief;[~ptupitsyn] could you please review those changes?;;;","25/Jul/17 12:23;ptupitsyn;Looks good to me. Merged to master: {{131847203d55f4f3907a7ff62d53ff69345fa605}};;;","25/Jul/17 12:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2340
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Externalization for offheap vectors/matrices,IGNITE-5801,13089022,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,chief,chief,21/Jul/17 11:08,16/Aug/18 03:43,14/Jul/23 06:20,16/Aug/18 03:43,,,,,,,,ml,,,,0,,,,Add externalization support for off-heap structures.,,chief,zaleslaw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Aug 16 03:43:08 UTC 2018,,,,,,,,,,"0|i3hufb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Aug/18 03:43;zaleslaw;All offheap vectors will be removed in 2.7;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Binary metadata is not registered during start of cache,IGNITE-5795,13088804,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,akalashnikov,dkarachentsev,dkarachentsev,20/Jul/17 15:53,05/Aug/21 11:19,14/Jul/23 06:20,07/Oct/19 09:33,2.0,,,,,2.8,,binary,sql,,,0,usability,,,"When cache configured with QueryEntity and used key type with @AffinityKeyMapped field, it will be ignored and wrong partition calculated. This happens because QueryEntity processing precedes key type registering in binary meta cache. On that step CacheObjectBinaryProcessorImpl#affinityKeyField called and unable to resolve type, so null returned and null putted in affKeyFields.

On next put/get operation CacheObjectBinaryProcessorImpl#affinityKeyField will return null from affKeyFields, but should be affinity key field.

Test that reproduces problem in [PR 2330|https://github.com/apache/ignite/pull/2330]

To wrorkaround the issue, set IgniteConfiguration#setKeyConfiguration(), it will force registering key.

*Root cause of this behaviour* is that in during cache registration registration of metadata doesn't happen. It lead to exchange messages like (MappingProposedMessage, MetadataRequestMessage etc.) which are often redundant and also lead to behaviour described above(unhandled AffinityKeyMapped).
Main idea to fix this problem it is registration of metadata locally in during cache start  on each node without messages exchange.",,agoncharuk,amashenkov,ashapkin,dkarachentsev,dmekhanikov,githubbot,ignitetcbot,kukushal,mcherkasov,ptupitsyn,sergey-chugunov,vozerov,"akalash commented on pull request #6854: IGNITE-5795 Binary metadata is registering during start of cache
URL: https://github.com/apache/ignite/pull/6854
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Sep/19 11:49;githubbot;600","akalash commented on pull request #5634: IGNITE-5795 Binary metadata is registered during start of cache
URL: https://github.com/apache/ignite/pull/5634
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Sep/19 11:50;githubbot;600","akalash closed pull request #6854:
URL: https://github.com/apache/ignite/pull/6854


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/21 04:48;githubbot;600","dspavlov commented on pull request #2952:
URL: https://github.com/apache/ignite/pull/2952#issuecomment-891085729


   Related ticket is resolved, PR seems to be not relevant anymore. Feel free to reopen if it is needed.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 14:45;githubbot;600","dspavlov closed pull request #2952:
URL: https://github.com/apache/ignite/pull/2952


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 14:45;githubbot;600","dspavlov closed pull request #2330:
URL: https://github.com/apache/ignite/pull/2330


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Aug/21 12:33;githubbot;600","dspavlov commented on pull request #2330:
URL: https://github.com/apache/ignite/pull/2330#issuecomment-892619289


   PR is related to resolved JIRA issue. Feel free to reopen if PR is still useful.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Aug/21 12:33;githubbot;600","dspavlov commented on pull request #2330:
URL: https://github.com/apache/ignite/pull/2330#issuecomment-892619289


   PR is related to resolved JIRA issue. Feel free to reopen if PR is still useful.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 11:12;githubbot;600","dspavlov closed pull request #2330:
URL: https://github.com/apache/ignite/pull/2330


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@ignite.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 11:19;githubbot;600",,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,IGNITE-8006,,,,,,,,IGNITE-9964,,,,,,,,IGNITE-9962,IGNITE-13160,IGNITE-14683,IGNITE-5505,,,IGNITE-9964,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 20 18:42:25 UTC 2020,,,,,,,,,,"0|i3ht33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 15:56;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/2330

    IGNITE-5795     IgniteIGNITE-5795  @AffinityKeyMapped ignored if QueryEntity used

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5795

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2330.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2330
    
----
commit e867266b4cc2f177f39852665ff6c66ef8f59ffe
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-07-20T15:54:42Z

    IGNITE-5795 Test reproducer.

----
;;;","21/Jul/17 12:28;kukushal;This likely a duplicate for IGNITE-5505 that I am working on now. Assigned this one to myself to test the fix.;;;","04/Aug/17 15:03;kukushal;I discussed this with [~vozerov] and confirmed we do not want to fix this since any fix would violate Ignite design ideology. 
To work around the problem in addition to specifying affinity key field using @AffinityKeyMapped annotation also specify it in the cache key configuration like this:
<property name=""cacheConfiguration"">
<list>
<bean class=""org.apache.ignite.configuration.CacheConfiguration"">
...
<property name=""keyConfiguration"">
<bean class=""org.apache.ignite.cache.CacheKeyConfiguration"">
<property name=""typeName"" value=""TYPE_NAME""/>
<property name=""affinityKeyFieldName"" value=""AFFINITY_KEY_FIELD_NAME""/>
</bean>
</property>
</bean>
</list>
</property>
Resolving this issue with a fix.;;;","04/Sep/17 09:35;mcherkasov;it's still the issue for users, how should they get know this work around?

One of the users spent a plenty time trying to fix broken affinity, he asked us for help, I spent a plenty time too and found the solution only after consulting with Vova O.

We need to mention this in doc at least, like a big red warning or even warning in ignite output.



;;;","04/Sep/17 16:34;kukushal;Good point, will update Ignite public docs and close the ticket.;;;","05/Sep/17 11:05;mcherkasov;[~kukushal] please, discuss this again with Vova, he said that we should treat this as a bug and fix it.;;;","31/Oct/17 14:35;githubbot;GitHub user kukushal opened a pull request:

    https://github.com/apache/ignite/pull/2952

    fix for IGNITE-5795

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5795-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2952.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2952
    
----
commit 83b0fa59804442909a84e9419d6a3b195c3b642b
Author: Alexey Kukushkin <kukushal@kukushal-mac.gridgain.local>
Date:   2017-10-31T13:56:11Z

    fix for IGNITE-5795

----
;;;","31/Oct/17 14:59;kukushal;Fix was submitted for code review: https://reviews.ignite.apache.org/ignite/review/IGNT-CR-388

*ROOT CAUSE*
Configuring QueryEntities forces Ignite to register NULL affinity key field upon the cache startup and that NULL is later used in all data access, resulting in invalid affinity calculation.
That happens since QueryUtils#typeForQueryEntity() calls CacheDefaultBinaryAffinityKeyMapper#affinityKeyField() that calls CacheObjectBinaryProcessorImpl#affinityKeyField() that cllas BinaryContext#affinityKeyFieldName(). Normally the latter method would return the field name from the type metadata but the metadata registration happens on first data access. Thus, the metadata is not yet registered upon the cache startup and thus affinity key field is unknown.

*SOLUTION*
Register binary metadata in the beginning of the QueryEntity registration.;;;","03/Nov/17 09:17;vozerov;[~kukushal], I think the same trick should be applied to value class as well if it exists. Because this value class could potentially be used as a key class for some other table.;;;","26/Jul/18 08:56;dmekhanikov;[~kukushal], there haven't been any activity on this ticket lately.

I'd like to have this issue fixed. Do you plan to continue working on it? Or can I take it over?;;;","13/Aug/18 15:09;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/4530

    IGNITE-5795 Ensure binary metadata registration on start of cache with QueryEntity.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5795-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4530.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4530
    
----
commit ac87d103371b88728590f469c96ec45ab3fc0189
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-08-13T14:58:26Z

    IGNITE-5795 Ensure binary metadata registration on start of cache with QueryEntity.

commit 8b81882ef8e2912bc39a32a59e2966bb1f800fce
Author: Denis Mekhanikov <dmekhanikov@...>
Date:   2018-08-13T14:59:45Z

    IGNITE-5795 Add a test.

----
;;;","27/Sep/18 12:20;githubbot;GitHub user akalash opened a pull request:

    https://github.com/apache/ignite/pull/4852

    IGNITE-5795 Binary metadata is registered during start of cache

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5795-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4852.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4852
    
----
commit 1a54bc1bb721626441ff2d19c988660bf913ec67
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-09-27T12:19:33Z

    IGNITE-5795 Binary metadata is registered during start of cache

----
;;;","16/Oct/18 06:18;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Hadoop{color} [[tests 0 TIMEOUT , Out Of Memory Error , Exit Code , [Artifacts publishing failed] |https://ci.ignite.apache.org/viewLog.html?buildId=2094928]]

{color:#d04437}_Javadoc_{color} [[tests 0 Exit Code , BuildFailureOnMessage |https://ci.ignite.apache.org/viewLog.html?buildId=2094952]]

{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=2087699&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","17/Oct/18 08:03;sergey-chugunov;[~akalashnikov], I left some minor comments in UpSource review, but overall patch looks good to me. Tests are fine as well.

So please proceed with merging this when my comments are addressed.;;;","19/Oct/18 15:04;agoncharuk;Thanks, merged to master.;;;","19/Oct/18 15:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4852
;;;","23/Oct/18 15:04;agoncharuk;Reopening this since the change broke queries suite and no fix was found in reasonable time.;;;","24/Oct/18 08:04;githubbot;Github user dmekhanikov closed the pull request at:

    https://github.com/apache/ignite/pull/4530
;;;","11/Dec/18 10:01;githubbot;GitHub user akalash opened a pull request:

    https://github.com/apache/ignite/pull/5634

    IGNITE-5795 Binary metadata is registered during start of cache

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5795-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5634.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5634
    
----
commit 1a54bc1bb721626441ff2d19c988660bf913ec67
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-09-27T12:19:33Z

    IGNITE-5795 Binary metadata is registered during start of cache

commit aa3ec6954f642d128412d9c437fe391e8681fbfb
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-09-28T07:45:50Z

    IGNITE-5795 Set schema to null during registerUserClassDescriptor

commit 2f48ba31d24eaa8342f6064bf23811fdffb6f6f4
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-09-28T12:45:20Z

    IGNITE-5795 null check for keyClass

commit 510f3f0cb1274258cb3b176472e17194edb2ae60
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-01T08:46:09Z

    IGNITE-5795 Chage type of test ValueClass

commit a98072b97ac10bbf778bbbae720344974a5564de
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-01T12:39:09Z

    IGNITE-5795 QueryField migrated to Long

commit 9aaad2e46af305998d6c0c773fc4d5bd672256ac
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-01T12:39:43Z

    Merge branch 'master' into ignite-5795-2

commit f94174429cec93b7f96c7cd648c27a248662abdf
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-15T06:19:50Z

    Merge branch 'master' into ignite-5795-2

commit 03da3546ceecaac87dc2db3cd995a4b8f3fcd743
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-17T11:52:52Z

    IGNITE-5795 fixed minor code style

commit 27d5f7b3c73edd310163f601bdd61ff603b2996a
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-12-11T09:48:52Z

    Merge branch 'master' into ignite-5795-2
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java

commit 17f44d4b2f7a4e62d604cdc1a1233270013fdfc2
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-22T11:36:50Z

    IGNITE-5795 Complete cache start future with error if register metadata was failed

commit cc908db0afa780cd1f4efc0e177775698a666a3f
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-10-23T11:43:44Z

    IGNITE-5795 returned super.beforeTestsStarted

commit f4b1fec782c3f732ac95cea4ec835998503d5be1
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-12-11T09:59:21Z

    IGNITE-5795 added stopAllGrids where needed

----
;;;","10/Sep/19 08:51;ignitetcbot;{panel:title=Branch: [pull/6854/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4581437&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","07/Oct/19 09:33;amashenkov;[~akalashnikov],
Merged to master.
Thanks for contribution.;;;","17/Jun/20 22:33;ashapkin;[~akalashnikov] the fix doesn't work for other platforms like .NET, C++ and all thin clients except Java. 

That's because other platforms don't have the Java classes and they do operate on their own abstraction and the following check will not work as a meta registration:

 
{code:java}
private void registerBinaryMetadata(CacheConfiguration ccfg, QuerySchema schema) throws BinaryObjectException {
...
Class<?> keyCls = U.box(U.classForName(qryEntity.findKeyType(), null, true));
Class<?> valCls = U.box(U.classForName(qryEntity.findValueType(), null,
It seems that in practice we do have all required information and a binaryt
{code}
The platforms may not operate Java objects directly and it seems redundant building a meta on a Java side one more time, keeping in mind that we actually do have the required binaryMeta proper to cache startup (at least for the .NET thick node)

 

I've created a separate ticket - https://issues.apache.org/jira/browse/IGNITE-13160 with an explanation of a problem from .NET side;;;","20/Oct/20 18:42;ptupitsyn;[~ashapkin] [~akalashnikov] the fix assumes that key/val classes are present on all nodes, which is not true in a lot of cases, thin or thick, Java or not.

Especially with thin clients, even in Java, most of the time classes won't be available on the server side.;;;",,,,,,,,,,,,,,,,,,,
Cache with constant time TTL for entries and enabled persistence hangs for a long time when TTL expirations start,IGNITE-5793,13088762,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ivan.glukos,ivan.glukos,20/Jul/17 14:10,28/Aug/17 16:39,14/Jul/23 06:20,31/Jul/17 07:38,2.0,,,,,2.3,,cache,,,,0,,,,"Right after expiration time, all threads from sys-stripe pool are busy with removing expired entries, example stacktrace:
{noformat}
Thread [name=""sys-stripe-3-#35%database.IgniteDbSnapshotWithEvictionsSelfTest1%"", id=60, state=RUNNABLE, blockCnt=0, waitCnt=101794]
        at o.a.i.i.binary.BinaryObjectImpl.typeId(BinaryObjectImpl.java:278)
        at o.a.i.i.processors.cache.binary.CacheObjectBinaryProcessorImpl.typeId(CacheObjectBinaryProcessorImpl.java:672)
        at o.a.i.i.processors.query.GridQueryProcessor.typeByValue(GridQueryProcessor.java:1688)
        at o.a.i.i.processors.query.GridQueryProcessor.remove(GridQueryProcessor.java:2177)
        at o.a.i.i.processors.cache.query.GridCacheQueryManager.remove(GridCacheQueryManager.java:451)
        at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.finishRemove(IgniteCacheOffheapManagerImpl.java:1456)
        at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.remove(IgniteCacheOffheapManagerImpl.java:1419)
        at o.a.i.i.processors.cache.persistence.GridCacheOffheapManager$GridCacheDataStore.remove(GridCacheOffheapManager.java:1241)
        at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl.remove(IgniteCacheOffheapManagerImpl.java:383)
        at o.a.i.i.processors.cache.GridCacheMapEntry.removeValue(GridCacheMapEntry.java:3221)
        at o.a.i.i.processors.cache.GridCacheMapEntry.onExpired(GridCacheMapEntry.java:3028)
        at o.a.i.i.processors.cache.GridCacheMapEntry.onTtlExpired(GridCacheMapEntry.java:2961)
        at o.a.i.i.processors.cache.GridCacheTtlManager$1.applyx(GridCacheTtlManager.java:61)
        at o.a.i.i.processors.cache.GridCacheTtlManager$1.applyx(GridCacheTtlManager.java:52)
        at o.a.i.i.util.lang.IgniteInClosure2X.apply(IgniteInClosure2X.java:38)
        at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl.expire(IgniteCacheOffheapManagerImpl.java:1007)
        at o.a.i.i.processors.cache.GridCacheTtlManager.expire(GridCacheTtlManager.java:198)
        at o.a.i.i.processors.cache.GridCacheTtlManager.expire(GridCacheTtlManager.java:160)
        at o.a.i.i.processors.cache.GridCacheUtils.unwindEvicts(GridCacheUtils.java:854)
        at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1073)
        at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:561)
        at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
        at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
        at o.a.i.i.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
        at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
        at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
        at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
        at o.a.i.i.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
        at o.a.i.i.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
        at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
        at java.lang.Thread.run(Thread.java:745)
{noformat}
Patch with reproducer test and expire metrics attached. Put/Get/Expire metrics when expirations start looks like that:
{noformat}
[17:21:26,908][INFO ][db-checkpoint-thread-#62%database.TtlHangReproducerTest1%][GridCacheDatabaseSharedManager] Checkpoint started [checkpointId=9e564ba2-8c41-4cf9-bfa8-75e3d50c00dc, startPtr=FileWALPointer [idx=64, fileOffset=45383475, len=4459, forceFlush=true], checkpointLockWait=0ms, checkpointLockHoldTime=16ms, pages=259801, reason='timeout']
@@@ putsPerSec=5459  getsPerSec=3063 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=16846, pageReplaceRate=0.0, physicalMemoryPages=515034}
@@@ putsPerSec=15575  getsPerSec=5075 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=37868, pageReplaceRate=0.0, physicalMemoryPages=519291}
@@@ putsPerSec=19560  getsPerSec=9210 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=45664, pageReplaceRate=0.0, physicalMemoryPages=521435}
@@@ putsPerSec=24262  getsPerSec=12399 expiresPerSec=64 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=53016, pageReplaceRate=0.0, physicalMemoryPages=523663}
@@@ putsPerSec=25674  getsPerSec=12183 expiresPerSec=2962 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=63874, pageReplaceRate=0.0, physicalMemoryPages=525286}
@@@ putsPerSec=19178  getsPerSec=9408 expiresPerSec=7772 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=73770, pageReplaceRate=0.0, physicalMemoryPages=525803}
@@@ putsPerSec=19178  getsPerSec=7150 expiresPerSec=13738 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=80253, pageReplaceRate=0.0, physicalMemoryPages=525805}
@@@ putsPerSec=10848  getsPerSec=2903 expiresPerSec=22654 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=89288, pageReplaceRate=0.0, physicalMemoryPages=525807}
@@@ putsPerSec=14449  getsPerSec=255 expiresPerSec=33413 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=101825, pageReplaceRate=0.0, physicalMemoryPages=525837}
@@@ putsPerSec=3958  getsPerSec=92 expiresPerSec=41021 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=113817, pageReplaceRate=0.0, physicalMemoryPages=525868}
@@@ putsPerSec=3958  getsPerSec=92 expiresPerSec=43919 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=122591, pageReplaceRate=0.0, physicalMemoryPages=525932}
@@@ putsPerSec=3601  getsPerSec=92 expiresPerSec=49443 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=136329, pageReplaceRate=0.0, physicalMemoryPages=525932}
@@@ putsPerSec=0  getsPerSec=85 expiresPerSec=53362 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=150831, pageReplaceRate=0.0, physicalMemoryPages=525938}
@@@ putsPerSec=0  getsPerSec=8 expiresPerSec=59473 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=171073, pageReplaceRate=0.0, physicalMemoryPages=525941}
@@@ putsPerSec=0  getsPerSec=1 expiresPerSec=58999 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=182364, pageReplaceRate=0.0, physicalMemoryPages=525944}
@@@ putsPerSec=0  getsPerSec=1 expiresPerSec=67785 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=195052, pageReplaceRate=0.0, physicalMemoryPages=525945}
@@@ putsPerSec=0  getsPerSec=2 expiresPerSec=72120 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=209057, pageReplaceRate=0.0, physicalMemoryPages=525945}
@@@ putsPerSec=0  getsPerSec=1 expiresPerSec=72176 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=219386, pageReplaceRate=0.0, physicalMemoryPages=525947}
@@@ putsPerSec=0  getsPerSec=2 expiresPerSec=71341 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=233395, pageReplaceRate=0.0, physicalMemoryPages=525949}
@@@ putsPerSec=0  getsPerSec=2 expiresPerSec=77004 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=247592, pageReplaceRate=0.0, physicalMemoryPages=525949}
@@@ putsPerSec=0  getsPerSec=1 expiresPerSec=69599 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=248350, pageReplaceRate=0.0, physicalMemoryPages=525949}
@@@ putsPerSec=0  getsPerSec=1 expiresPerSec=66669 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=254189, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=58550 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259141, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=42356 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259141, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=26547 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259141, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=18241 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259141, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259141, pageReplaceRate=0.0, physicalMemoryPages=525950}
[17:21:54,587][INFO ][db-checkpoint-thread-#63%database.TtlHangReproducerTest0%][GridCacheDatabaseSharedManager] Checkpoint finished [cpId=4efda3bc-6041-49b9-bdf6-073d9d181550, pages=199312, markPos=FileWALPointer [idx=49, fileOffset=37208218, len=3847, forceFlush=true], walSegmentsCleared=10, markDuration=20ms, pagesWrite=30576ms, fsync=1008ms, total=31604ms]
[17:21:54,607][INFO ][db-checkpoint-thread-#63%database.TtlHangReproducerTest0%][GridCacheDatabaseSharedManager] Checkpoint started [checkpointId=1295c157-b086-4dad-9b72-0ab7658b1f97, startPtr=FileWALPointer [idx=60, fileOffset=62012992, len=3847, forceFlush=true], checkpointLockWait=0ms, checkpointLockHoldTime=16ms, pages=259364, reason='timeout']
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=1853 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=14497, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=6554 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=33138, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=10293 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=43258, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=16456 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=58137, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=22189 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=71228, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=29674 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=92946, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=36096 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=116665, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=42013 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=136855, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=44661 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=154219, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=43233 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=163588, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=40477 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=177747, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=34889 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=187927, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=34826 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=204958, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=34378 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=219286, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=38136 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=233723, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=38591 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=247524, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=40392 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=31211 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=23150 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=14941 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=0 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
[17:22:21,443][INFO ][db-checkpoint-thread-#62%database.TtlHangReproducerTest1%][GridCacheDatabaseSharedManager] Checkpoint finished [cpId=9e564ba2-8c41-4cf9-bfa8-75e3d50c00dc, pages=259801, markPos=FileWALPointer [idx=64, fileOffset=45383475, len=4459, forceFlush=true], walSegmentsCleared=17, markDuration=37ms, pagesWrite=50846ms, fsync=3689ms, total=54573ms]
[17:22:21,462][INFO ][db-checkpoint-thread-#62%database.TtlHangReproducerTest1%][GridCacheDatabaseSharedManager] Checkpoint started [checkpointId=e60ba84b-a022-45b3-a94b-ffa0d715e054, startPtr=FileWALPointer [idx=78, fileOffset=1627544, len=4459, forceFlush=true], checkpointLockWait=0ms, checkpointLockHoldTime=15ms, pages=305727, reason='timeout']
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=4574 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=13605 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=18070 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=27029 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=37173 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=259221, pageReplaceRate=0.0, physicalMemoryPages=525950}
[17:22:25,987][INFO ][db-checkpoint-thread-#63%database.TtlHangReproducerTest0%][GridCacheDatabaseSharedManager] Checkpoint finished [cpId=1295c157-b086-4dad-9b72-0ab7658b1f97, pages=259364, markPos=FileWALPointer [idx=60, fileOffset=62012992, len=3847, forceFlush=true], walSegmentsCleared=15, markDuration=20ms, pagesWrite=28284ms, fsync=3095ms, total=31399ms]
[17:22:26,029][INFO ][db-checkpoint-thread-#63%database.TtlHangReproducerTest0%][GridCacheDatabaseSharedManager] Checkpoint started [checkpointId=f5a2ead4-5516-4a94-a3f9-a680eefd2fa7, startPtr=FileWALPointer [idx=71, fileOffset=21152698, len=3847, forceFlush=true], checkpointLockWait=0ms, checkpointLockHoldTime=10ms, pages=259444, reason='timeout']
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=44164 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=42412, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=53544 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=54630, pageReplaceRate=0.0, physicalMemoryPages=525950}
@@@ putsPerSec=0  getsPerSec=0 expiresPerSec=57466 MemoryMetricsSnapshot{name='dfltMemPlc', totalAllocatedPages=0, allocationRate=0.0, evictionRate=0.0, largeEntriesPagesPercentage=0.0, pagesFillFactor=0.0, dirtyPages=65838, pageReplaceRate=0.0, physicalMemoryPages=525950}
{noformat}
Right after ""expiresPerSec"" becomes non-zero, ""putsPerSec"" and ""getsPerSec"" falls to zero level. System totally stops responding to user get/put/etc operations. The freeze can last for several checkpoints. Most likely, system fills cache with new entries faster than expiring old. As a result, old entries pile up.",,agoncharuk,ihorps,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 14:36;ivan.glukos;ttl_hang.patch;https://issues.apache.org/jira/secure/attachment/12878184/ttl_hang.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 31 07:38:16 UTC 2017,,,,,,,,,,"0|i3hstr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jul/17 07:38;agoncharuk;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Xml config can not be used in jdbs and user code simultaneously,IGNITE-5790,13088683,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,mcherkasov,mcherkasov,20/Jul/17 09:17,10/Oct/17 14:59,14/Jul/23 06:20,18/Aug/17 12:22,2.1,,,,,2.3,,jdbc,,,21/Jul/17 00:00,0,,,,"when user uses the same xml config for jdbc driver and for his own ignite instance there can be :
java.sql.SQLException: Failed to start Ignite node.
Caused by: class org.apache.ignite.IgniteCheckedException: Ignite instance with this name has already been started: CustomeIgniteName

because JDBC creates separate ignite instance, while user already has one with the same name.

Of course that can be easily workarounded, user can support two configs or 
create jdbc connect first and then use Ignition.getOrStart().

However it's inconvenient for user and should be treated as usability issue.
I see 2 solutions:
1) jdbc driver should use Ignition.getOrStart()
2) jdbc driver should connection string as ignite name.",,githubbot,ilyak,mcherkasov,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 10 14:59:00 UTC 2017,,,,,,,,,,"0|i3hsc7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Aug/17 17:01;ilyak;I'm afraid we can't use solution 1).

We can mind the lifecycle of Ignite we've got or started, but JDBC driver can't make sure Ignite that was already existing, and now shared, isn't closed while still being needed by JDBC.

2) should probably be implemented, with appended UUID as in loadConfiguration() method but in more generic way.;;;","16/Aug/17 16:11;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2460

    IGNITE-5790 SQL: Append UUID to names of Ignite instances opened by JDBC

    All Ignite instances created by Jdbc driver should now be either named or appended with ignite-jdbc-driver-UUID to avoid conflicting with instances created in other places.
    
    Had to inline parts of IgnitionEx.start() to apply changes to every decision branch.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alamar/ignite ignite-5790

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2460.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2460
    
----
commit 05c45747750e10fc094a09a2189f895ffd768520
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-08-16T15:26:43Z

    IGNITE-5790 SQL: Append UUID to names of Ignite instances opened by JDBC.

----
;;;","16/Aug/17 16:28;ilyak;https://reviews.ignite.apache.org/ignite/review/IGNT-CR-280;;;","18/Aug/17 12:22;ntikhonov;Thank you for your contribution! Looks good for me. Merged to master.;;;","10/Oct/17 14:59;githubbot;Github user alamar closed the pull request at:

    https://github.com/apache/ignite/pull/2460
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After client reconnects to server if server was restarted, client doesn't create caches defined in client's configuration",IGNITE-5789,13088665,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vk,ezhuravl,ezhuravl,20/Jul/17 07:53,26/Jun/18 17:50,14/Jul/23 06:20,23/May/18 14:00,2.0,,,,,2.7,,,,,,1,,,,"User with this problem on SO:

https://stackoverflow.com/questions/46053089/ignite-cache-reconnection-issue-cache-is-stopped",,dpavlov,ezhuravl,githubbot,ilyak,Sawfish,vk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8711,,,IGNITE-8604,,,,,,,,,,,,,,,"20/Jul/17 07:57;ezhuravl;ClientReconnectAfterClusterRestartTest.java;https://issues.apache.org/jira/secure/attachment/12878109/ClientReconnectAfterClusterRestartTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 24 16:19:13 UTC 2018,,,,,,,,,,"0|i3hs87:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Sep/17 19:12;githubbot;GitHub user vk23 opened a pull request:

    https://github.com/apache/ignite/pull/2627

    IGNITE-5789: if server was restarted, client doesn't create caches de…

    …fined in client's configuration
    
    1. Modified test so it fails when client doesn't find its own cache after reconnect.
    2. Fixed bug by recreating missing cache on local join.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vk23/ignite IGNITE-5789

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2627.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2627
    
----
commit caa274c094e3c842fe8808f0184d37ab022e9133
Author: vk <kaligularnd@gmail.com>
Date:   2017-09-08T19:09:58Z

    IGNITE-5789: if server was restarted, client doesn't create caches defined in client's configuration
    
    1. Modified test so it fails when client doesn't find its own cache after reconnect.
    2. Fixed bug by recreating missing cache on local join.

----
;;;","23/Apr/18 17:17;dpavlov;[~vk], could you please provide link to TC run-all?;;;","23/Apr/18 17:18;ilyak;[~vk], can you please fix your pull request so that it only contains your changes, and not other commits? I understand that you tried to update to master, but something obviously went wrong there. Please cherry-pick only the relevant bits.;;;","23/Apr/18 17:18;dpavlov;[~vk], one more thing, could you re-create PR with your changes isolated. It seems to much files changes, which are not related to change itself.;;;","23/Apr/18 18:00;githubbot;Github user vk23 closed the pull request at:

    https://github.com/apache/ignite/pull/2627
;;;","23/Apr/18 18:53;githubbot;GitHub user vk23 opened a pull request:

    https://github.com/apache/ignite/pull/3905

    IGNITE-5789: if server was restarted, client doesn't create caches de…

    …fined in client's configuration
    
    1. Modified test so it fails when client doesn't find its own cache after reconnect.
    2. Fixed bug by recreating missing cache on local join.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vk23/ignite IGNITE-5789

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3905.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3905
    
----
commit bfa7dc4f83307a58da475c87068f725e72a827b7
Author: vk <kaligularnd@...>
Date:   2018-04-23T18:06:23Z

    IGNITE-5789: if server was restarted, client doesn't create caches defined in client's configuration
    
    1. Modified test so it fails when client doesn't find its own cache after reconnect.
    2. Fixed bug by recreating missing cache on local join.

----
;;;","24/Apr/18 12:27;ilyak;[~vk] I've reviewed your commit, looks good, but there are a few issues. Can you please try and fix them?;;;","24/Apr/18 15:58;vk;[~ilyak] fixed, plz review;;;","24/Apr/18 16:40;dpavlov;I've triggered CI for new PR [https://ci.ignite.apache.org/viewQueued.html?itemId=1243025]

 ;;;","24/Apr/18 16:46;ilyak;Looks good to me now!;;;","10/May/18 17:30;dpavlov;[~vk] could you please merge master into your branch? There are a number of conflicts now.

Run-all shows too much test failures (~135), but I guess most of these failures were fixed already.;;;","10/May/18 17:37;dpavlov;I've queued one more TC run with actual master with this fix, [https://ci.ignite.apache.org/viewQueued.html?itemId=1281364&tab=queuedBuildOverviewTab]

 

But for PR merge it is still desired to rebase/merge current branch to avoid conflicts.;;;","14/May/18 11:54;dpavlov;Hi [~vk],

please merge conflicts in PR, 
Conflicting files
GridDhtPartitionsExchangeFuture.java
ClientReconnectAfterClusterRestartTest.java

Branch test was also not-successful because of compilation errors.;;;","21/May/18 11:59;dpavlov;Hi [~vk] could I assist in merging conflicts?;;;","21/May/18 19:15;vk;Hi [~dpavlov], I resolved conflicts. Please take a look;;;","23/May/18 12:03;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3905
;;;","23/May/18 14:00;dpavlov;Hi [~vk], thank you for your contribution. Merged to master.

Hi [~ilyak], thank you for review and your assistance in merging changes.;;;","24/May/18 14:38;dpavlov;Hi I've created ticket for suspicious test failures in .NET [IGNITE-8604]

[~ilyak] coyld you please take a look? If we can't find out solution probably we should revert commit.;;;","24/May/18 16:15;ilyak;[~dpavlov] [~vk] I think we have this immediate problem:

[02:39:02][Apache.Ignite.Core.Tests.exe] [23-05-2018 23:39:04][INFO ][exchange-worker-#7726][GridCacheProcessor] Started cache [name=template_store*, id=-1227147570, memoryPolicyName=default, mode=LOCAL, atomicity=TRANSACTIONAL, backups=0]

""template_store*"" cache should not be brought up, since it's a cache template. Nevertheless it is launched after your change.
;;;","24/May/18 16:19;ilyak;See also GridCacheProcessor:751 and GridCacheProcessor:2800

We should *definitely* have a common method here, apply it also to this fix.;;;",,,,,,,,,,,,,,,,,,,,,,
Web Console: Missed c3p0 dependencies in generated maven project,IGNITE-5788,13088660,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,anovikov,anovikov,20/Jul/17 07:21,28/Aug/17 16:40,14/Jul/23 06:20,20/Jul/17 08:48,2.1,,,,,2.3,,wizards,,,,0,,,,For cluster (JDBC POJO store -> Generic JDBC dialect) dependency: com.mchange.mchange-commons-java:0.2.11 is missed in generated maven project.,,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 20 08:48:52 UTC 2017,,,,,,,,,,"0|i3hs73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jul/17 07:45;anovikov;[~vsisko], Can you please take a look on my fix?;;;","20/Jul/17 08:29;vsisko;Look good. Tested.;;;","20/Jul/17 08:48;anovikov;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Transaction fails with multiple write-through caches,IGNITE-5786,13088463,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,19/Jul/17 16:48,28/Aug/17 16:40,14/Jul/23 06:20,21/Jul/17 14:07,1.6,,,,,2.3,,platforms,,,,0,.NET,,,"To reproduce: create two caches with {{WriteThrough=true}} and some {{CacheStore}} (implementation can be empty).

Attempt to update both caches within a transaction:

{code}
            using (var tx = ignite.GetTransactions().TxStart())
            {
                cache1.Put(1, 1);
                cache2.Put(1, 1);

                tx.Commit();
            }
{code}

Exception occurs:
{code}
(err) Failed to notify listener: o.a.i.i.processors.cache.distributed.near.GridNearTxLocal$16@17695df3javax.cache.integration.CacheWriterException: PlatformNativeException [cause=System.InvalidOperationException [idHash=1909546776, hash=1265661973, ClassName=System.InvalidOperationException, Data=null, ExceptionMethod=8
Get
Apache.Ignite.Core, Version=2.1.0.19388, Culture=neutral, PublicKeyToken=a487a7ff0b2aaa4a
Apache.Ignite.Core.Impl.Handle.HandleRegistry
T Get[T](Int64, Boolean), HelpURL=null, HResult=-2146233079, InnerException=null, Message=Resource handle has been released (is Ignite stopping?)., RemoteStackIndex=0, RemoteStackTraceString=null, Source=Apache.Ignite.Core, StackTraceString=   at Apache.Ignite.Core.Impl.Handle.HandleRegistry.Get[T](Int64 id, Boolean throwOnAbsent) in C:\w\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Handle\HandleRegistry.cs:line 262
   at Apache.Ignite.Core.Impl.Cache.Store.CacheStoreInternal`2.Invoke(IBinaryStream stream, Ignite grid) in C:\w\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Cache\Store\CacheStoreInternal.cs:line 112
   at Apache.Ignite.Core.Impl.Cache.Store.CacheStore.Invoke(PlatformMemoryStream stream, Ignite grid) in C:\w\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Cache\Store\CacheStore.cs:line 127
   at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedCallbacks.CacheStoreInvoke(Int64 memPtr) in C:\w\incubator-ignite\modules\platforms\dotnet\Apache.Ignite.Core\Impl\Unmanaged\UnmanagedCallbacks.cs:line 366
{code}

Explanation:
* Cache stores share same session within a transaction
* Session in Java is uses to store .NET session handle, so both stores have the same .NET session (which is good: consistent with Java)
* Each store calls sessionEnd, so session gets released multiple times - this causes HandleRegistry exception

Current unit test uses Spring XML with shared {{PlatformDotNetCacheStoreFactory}}, which caches created store instance for some reason, so the bug is hidden, since both caches use the same store instance.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 21 14:07:08 UTC 2017,,,,,,,,,,"0|i3hqzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 16:50;ptupitsyn;To fix this we could clear {{KEY_SES}} value in {{PlatformDotNetCacheStore.sessionEnd()}} call. But this would cause two sessions to be created and destroyed, which is not correct. So we should mark the session as destroyed somehow.;;;","20/Jul/17 19:58;ptupitsyn;The problem seems to be deeper: {{sessionEnd}} must be called once per cache store instance. So we need to include store pointer with the {{KEY_SES}} probably.;;;","21/Jul/17 11:50;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2331

    IGNITE-5786 .NET: Fix cache store session handling for cross-cache transactions

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5786

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2331.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2331
    
----
commit 70d0f9918c708cb117e69163cc7b7c119c9a693c
Author: Dmitriy Shabalin <dshabalin@gridgain.com>
Date:   2017-07-20T08:08:20Z

    IGNITE-4728 Web Console: Saved last succeeded state and redirect to it on reload.

commit 02a1bdca57ce6af7fe7636b0a9f99048c89b88b6
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-07-20T08:47:49Z

    IGNITE-5788 Web Console: Fixed dependencies for maven project with c3p0.

commit 162fd2258066543b95633daf81ca5f20e85e3562
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T13:32:44Z

    IGNITE-5786 .NET: Transaction fails with multiple write-through caches

commit fe3f524e1bf350266d19051c85991b7c39ded3ff
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T13:57:17Z

    wip

commit 611bb3eebeb5f9f256147e4beb1465687e63f900
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T14:01:41Z

    wip

commit e7d3b814bba56257a784c4ca488a64ad5063d355
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T14:02:12Z

    wip

commit 2e01158b9d3556e9e64eea02f1b07f0f28b41133
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T14:05:28Z

    tests done

commit 3217782591ae19e891e8b3edbfd0f3cc60aab710
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T14:06:47Z

    tests done

commit cc273a6e6e516d343b3157591f8cad72271abc60
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T14:09:44Z

    wip

commit b8663694cde0d0d2a7f39dca93bf3bc998655111
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T19:29:25Z

    wip

commit c69912dc315632a390bf9c31e1e7b65f631a1cd2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T19:29:50Z

    wip

commit e795ef51815bd3d18c4f605d22bde19f9f54d6f8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T19:52:09Z

    Fix tests according to ""once per store instance"" logic

commit cb0d75d525cbb9f90bd5ff52f917817d8611f4de
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-20T19:56:27Z

    wip TODO

commit 72000904844529401c9d80c50f59748b70e83219
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T09:43:57Z

    wip

commit 7b6a452615979caa9978cd23b7dabf6f74da9fa9
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T10:07:02Z

    wip

commit 3b2f0aa8f6eaa9273576809def8c5326067c32a4
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T10:54:52Z

    fix Java side

commit 98d7e65cf019a797ef5b0d2028615eaad5fa2ec2
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T10:56:05Z

    fix .NET

commit 38b4a3987e0e816ef514fc9f60a67c3be2c6f2b0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T11:32:41Z

    fix NPE

commit 4212d0c85578ce481a01973dd6c1bb6bf391171c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T11:37:41Z

    wip

commit ce5b2b410bab863d35cf9260ca15ea995e92180d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-21T11:47:52Z

    Tests adjusted, all done

----
;;;","21/Jul/17 12:07;ptupitsyn;Fixed by tracking all stores that use specified session on Java side. SessionEnd call will remove native session only for the last store.

Waiting for TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2331%2Fhead;;;","21/Jul/17 14:06;ptupitsyn;Merged to master: {{c1a3b3744f89e27906621e62e9d73281791fcf30}};;;","21/Jul/17 14:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2331
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor throws ClassCastException if cache store implementation is other than CacheJdbcPojoStore,IGNITE-5781,13088082,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ameterko,vkulichenko,vkulichenko,18/Jul/17 22:23,28/Aug/17 16:38,14/Jul/23 06:20,19/Jul/17 22:18,2.0,,,,,2.3,,visor,,,,0,,,,"Issue is reported on user list: http://apache-ignite-users.70518.x6.nabble.com/Problem-with-Visor-and-Cassandra-Cache-Store-td15076.html

There is an obvious bug in the code. {{VisorCacheJdbcType#list}} method checks the type of store factory like this:
{code}
if (factory != null || factory instanceof CacheJdbcPojoStoreFactory) {
    CacheJdbcPojoStoreFactory jdbcFactory = (CacheJdbcPojoStoreFactory) factory;
{code}
It should be {{&&}} instead of {{||}}, because otherwise condition will be {{true}} for any factory that is not {{null}}. Even better if {{factory != null}} is removed completely as {{instanceof}} returns {{false}} for {{null}} values anyway.

However, it's not clear to me why this scenario is reproduced only in certain conditions (see mailing list thread for details). It's possible that there is another hidden bug, this needs to be investigated.",,cos,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 21 05:52:29 UTC 2017,,,,,,,,,,"0|i3homn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 12:57;githubbot;GitHub user Desperus opened a pull request:

    https://github.com/apache/ignite/pull/2321

    IGNITE-5781 Visor throws ClassCastException if cache store implementa…

    …tion is other than CacheJdbcPojoStore

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Desperus/ignite IGNITE-5781

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2321.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2321
    
----
commit bc038be5540e5fd8148509e31ac1b51afe37eecf
Author: Aleksandr_Meterko <aleksandr_meterko@epam.com>
Date:   2017-07-19T12:55:15Z

    IGNITE-5781 Visor throws ClassCastException if cache store implementation is other than CacheJdbcPojoStore

----
;;;","19/Jul/17 22:18;cos;I have committed and pushed this to the master. Thank you for your contribution, [~ameterko]!;;;","21/Jul/17 05:52;githubbot;Github user Desperus closed the pull request at:

    https://github.com/apache/ignite/pull/2321
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect mapping of smallint cassandra type.,IGNITE-5779,13087976,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,irudyak,amashenkov,amashenkov,18/Jul/17 16:21,24/Apr/18 10:52,14/Jul/23 06:20,05/Feb/18 06:08,2.0,,,,,2.5,,cassandra,,,,0,,,,"Looks like we map Java SHORT types to Cassandra INT type.
This causes an exception if user uses Cassandra SMALLINT type:
CodecNotFoundException: [smallint <-> java.lang.Integer] with Cassandra

See discussion on userlist for details.
 
[1] http://apache-ignite-users.70518.x6.nabble.com/CodecNotFoundException-smallint-lt-gt-java-lang-Integer-with-Cassandra-td14938.html",,amashenkov,githubbot,irudyak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 05 06:10:08 UTC 2018,,,,,,,,,,"0|i3hnz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 16:25;amashenkov;[~irudyak],

Would you please take a look at this? Seems fix is trivial. 
Is there any reason to have a mapping Short<\->INT instead of Short<->SMALLINT ?;;;","30/Jan/18 18:04;irudyak;[~amashenkov] thanks for letting me know. I'll look at it.;;;","05/Feb/18 05:56;githubbot;GitHub user irudyak opened a pull request:

    https://github.com/apache/ignite/pull/3471

    IGNITE-5779 Incorrect mapping of smallint cassandra type.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/irudyak/ignite ignite-5779

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3471.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3471
    
----
commit fdbfb67b47659b17755b2e3c1086446d6f351ec9
Author: Igor Rudyak <igor.rudyak@...>
Date:   2018-02-05T05:55:12Z

    IGNITE-5779

----
;;;","05/Feb/18 06:10;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3471
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compute runs one job in MetricsUpdateFrequency per thread after all jobs was submitted(as onCollision is not called),IGNITE-5775,13087921,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ezhuravl,ezhuravl,ezhuravl,18/Jul/17 12:45,28/Aug/17 16:39,14/Jul/23 06:20,01/Aug/17 17:37,1.7,,,,,2.3,,,,,,0,,,,,,amashenkov,ezhuravl,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 12:48;ezhuravl;Compute.java;https://issues.apache.org/jira/secure/attachment/12877798/Compute.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 01 14:37:01 UTC 2017,,,,,,,,,,"0|i3hnmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 12:49;ezhuravl;After some time, when all jobs were submitted, compute starts to execute one job per time, set in setMetricsUpdateFrequency.;;;","18/Jul/17 16:52;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/2319

    IGNITE-5775 JobsProcessor: Remove job from activeJobs before invoke o…

    …nCollision

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5775

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2319.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2319
    
----
commit 23cb1312faa172d7dd1a0cee088b39a69568dec5
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-07-18T16:46:36Z

    IGNITE-5775 JobsProcessor: Remove job from activeJobs before invoke onCollision

----
;;;","19/Jul/17 14:10;ezhuravl;That happened because job was removed from the activeJobs list only after the handleCollision method.;;;","20/Jul/17 10:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2319
;;;","01/Aug/17 13:36;amashenkov;ClusterNodeMetricsSelfTest.testSingleTaskMetrics has been broken in master.;;;","01/Aug/17 14:37;ezhuravl;Fixed ClusterNodeMetricsSelfTest.testSingleTaskMetrics
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race between WAL segment rollover and concurrent log,IGNITE-5772,13087886,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,18/Jul/17 09:02,28/Aug/17 16:38,14/Jul/23 06:20,21/Jul/17 13:36,2.1,,,,,2.3,,cache,,,,0,,,,"The WAL log() and close() are synch-ed as follows:
log: read head, check stop flag, cas head
close: set stop flag, cas head to fake record.
This guarantees that after close() is called, there will be no other records appended to the closed segment.
Now consider three threads doing the following operations:
T1: flush(); T2: rollOver(); T3: log();
The sequence of events:
1) T1 does a CAS of head to FakeRecord
2) T3 reads head as FakeRecord, reads stop flag as false
3) T2 attempts to rollOver: CAS stop to true; call flushOrWait(null); call flush(null); Since the head is an instance of FakeRecord, the flush(null) immediately returns false. This thread waits for written bytes and proceeds
4) T3 successfully does a CAS of head to non-fake record
5) T2 proceeds with rollOver, signals next available and asserts on head.
The invariant above is broken when T2 does not CAS fake record during rollover, which allows T3 to append an entry to the closed segment. The solution is to change the code so the CAS is always attempted on close even if the current head is already a FakeRecord.
Alternatively, we can introduce another type of fake record that will seal the WAL segment queue.",,agoncharuk,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 21 14:07:08 UTC 2017,,,,,,,,,,"0|i3hnf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 12:44;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2313

    IGNITE-5772

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5772

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2313.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2313
    
----
commit b12ffd16a18150fadf85442b443d576edc205f10
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-18T12:16:29Z

    ignite-5772: WAL redesign - stop flag in FakeRecord.

commit 63451b67b4763ea93e650785d6fefa289d5571eb
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-18T12:43:41Z

    ignite-5772: WAL redesign - stop flag in FakeRecord.

----
;;;","21/Jul/17 14:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2313
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Retry resolving class name from marshaller cache and .classname file,IGNITE-5768,13087609,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,17/Jul/17 14:59,08/Dec/17 13:41,14/Jul/23 06:20,19/Jul/17 07:45,,,,,,,,cache,,,,0,,,,,,dkarachentsev,ilyak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Dec 08 13:41:50 UTC 2017,,,,,,,,,,"0|i3hlpj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Dec/17 13:41;ilyak;Relevant stack trace:

{code}
Caused by: org.apache.ignite.IgniteCheckedException: Failed to deserialize object with given class loader: sun.misc.Launcher$AppClassLoader@764c12b6
        at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.unmarshal0(OptimizedMarshaller.java:255)
        at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.unmarshal(AbstractNodeNameAwareMarshaller.java:82)
        at org.apache.ignite.internal.util.IgniteUtils.unmarshal(IgniteUtils.java:9825)
        at org.apache.ignite.internal.processors.job.GridJobWorker.initialize(GridJobWorker.java:432)
        at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1108)
        at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1894)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1224)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:852)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
        at org.apache.ignite.internal.managers.communication.GridIoManager$7.run(GridIoManager.java:792)
        ... 3 common frames omitted
Caused by: java.lang.NullPointerException: Ouch! Argument cannot be null: val
        at org.apache.ignite.internal.util.GridArgumentCheck.notNull(GridArgumentCheck.java:48)
        at org.apache.ignite.internal.util.GridArgumentCheck.notNull(GridArgumentCheck.java:61)
        at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.tryGetAndPut(GridDhtAtomicCache.java:721)
        at org.apache.ignite.internal.MarshallerContextImpl.registerClassName(MarshallerContextImpl.java:160)
        at org.apache.ignite.internal.MarshallerContextImpl.className(MarshallerContextImpl.java:228)
        at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:174)
        at org.apache.ignite.marshaller.optimized.OptimizedMarshallerUtils.classDescriptor(OptimizedMarshallerUtils.java:266)
        at org.apache.ignite.marshaller.optimized.OptimizedObjectInputStream.readObjectOverride(OptimizedObjectInputStream.java:318)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:416)
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: use byte array type instead of java.lang.Object for binary JDBC types,IGNITE-5767,13087564,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,dkholodov,sboikov,17/Jul/17 12:35,10/Oct/17 07:49,14/Jul/23 06:20,09/Oct/17 11:10,2.0,,,,,2.4,,wizards,,,,0,,,,"Schema importer should use {{[B}} query entity field type instead of {{java.lang.Object}} for the following SQL types: {{BINARY}}, {{VARBINARY}} and {{LONGVARBINARY}}.",,anovikov,dkarachentsev,kuaw26,pkonstantinov,sboikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 07:29;pkonstantinov;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12890114/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 10 07:49:10 UTC 2017,,,,,,,,,,"0|i3hlfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jul/17 08:52;anovikov;[~vsisko], can you please take a look on this ticket? As I understand you need change default type mapping {{modules/web-console/frontend/app/data/jdbc-types.json}};;;","20/Jul/17 07:21;vsisko;Fixed an associated type for BINARY JDBC type to byte[].;;;","20/Jul/17 08:20;anovikov;[~vsisko], please add test for mapping {{BINARY}} type.;;;","21/Jul/17 08:59;vsisko;Implemented test on type conversation.;;;","24/Jul/17 08:44;anovikov;[~vsisko], will be better to add test to CacheJdbcPojoStoreTest, which can confirm support of following mapping in CacheJdbcPojoStore.;;;","27/Jul/17 02:23;vsisko;Implemented test for loading of BINARY column into byte array field. ;;;","27/Jul/17 04:08;anovikov;Reviewed. Merged.;;;","21/Sep/17 21:30;dkarachentsev;Must be used `[B` type, not `byte[]`.;;;","26/Sep/17 03:27;vsisko;Implemented string presentation of field type for query entity configuration.
Implemented possibility manually configure query and store fields with type byte[].

To test: Try to import domain models with BINARY columns:
Try to create domain models with byte[] columns for SQL query and cache store.
Generate project and fill binary data. Try to load caches and execute queries with byte[] columns.;;;","03/Oct/17 07:29;pkonstantinov;I found the following issue:
!screenshot-1.png!;;;","03/Oct/17 07:38;pkonstantinov;Vasiliy, could you please help me with debugging the following error
{code}
[14:34:02] Ignite node started OK (id=74830b9b, instance name=1)
[14:34:02] Topology snapshot [ver=3, servers=2, clients=1, CPUs=8, heap=10.0GB]
>>> Loading caches...
>>> Loading cache: EmpPhotoCache
окт 03, 2017 2:34:04 PM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Failed to obtain remote job result policy for result from ComputeTask.result(..) method (will fail the whole task): GridJobResultImpl [job=C2 [c=LoadCacheJobV2 [keepBinary=false]], sib=GridJobSiblingImpl [sesId=c9fa721ee51-74830b9b-855e-4a5a-bcfa-e2b576fae03e, jobId=d9fa721ee51-74830b9b-855e-4a5a-bcfa-e2b576fae03e, nodeId=0edf28d8-3fe1-4f58-b04d-5be1e7e7b98f, isJobDone=false], jobCtx=GridJobContextImpl [jobId=d9fa721ee51-74830b9b-855e-4a5a-bcfa-e2b576fae03e, timeoutObj=null, attrs={}], node=TcpDiscoveryNode [id=0edf28d8-3fe1-4f58-b04d-5be1e7e7b98f, addrs=[0:0:0:0:0:0:0:1, 10.8.0.14, 127.0.0.1, 192.168.0.88, 192.168.56.1, fd01:0:0:0:245f:439d:fe21:8404, fd01:0:0:0:9584:5d6:9bc2:dbdd], sockAddrs=[kope-win10-notebook/10.8.0.14:47500, /192.168.56.1:47500, /fd01:0:0:0:9584:5d6:9bc2:dbdd:47500, /fd01:0:0:0:245f:439d:fe21:8404:47500, kope-win10-notebook.Dlink/192.168.0.88:47500, /0:0:0:0:0:0:0:1:47500, /127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1507016041811, loc=false, ver=2.1.5#20170919-sha1:6393d394, isClient=false], ex=class o.a.i.IgniteException: Failed to load cache: EmpPhotoCache, hasRes=true, isCancelled=false, isOccupied=true]
class org.apache.ignite.IgniteException: Remote job threw user exception (override or implement ComputeTask.result(..) method if you would like to have automatic failover for this exception).
	at org.apache.ignite.compute.ComputeTaskAdapter.result(ComputeTaskAdapter.java:101)
	at org.apache.ignite.internal.processors.task.GridTaskWorker$5.apply(GridTaskWorker.java:1027)
	at org.apache.ignite.internal.processors.task.GridTaskWorker$5.apply(GridTaskWorker.java:1020)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6661)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.result(GridTaskWorker.java:1020)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.onResponse(GridTaskWorker.java:838)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.processJobExecuteResponse(GridTaskProcessor.java:1066)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor$JobMessageListener.onMessage(GridTaskProcessor.java:1301)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Failed to load cache: EmpPhotoCache
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1858)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6629)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1115)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1908)
	... 7 more
Caused by: class org.apache.ignite.IgniteException: Failed to load cache: EmpPhotoCache
	at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:966)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJob.localExecute(GridCacheAdapter.java:5488)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJobV2.localExecute(GridCacheAdapter.java:5532)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$TopologyVersionAwareJob.execute(GridCacheAdapter.java:6147)
	at org.apache.ignite.compute.ComputeJobAdapter.call(ComputeJobAdapter.java:132)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1855)
	... 14 more
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to load cache: EmpPhotoCache
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadCache(GridCacheStoreManagerAdapter.java:527)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter.localLoadCache(GridDhtCacheAdapter.java:607)
	at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.localLoadCache(GridCacheProxyImpl.java:217)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJob.localExecute(GridCacheAdapter.java:5483)
	... 18 more
Caused by: javax.cache.integration.CacheLoaderException: Failed to load cache: EmpPhotoCache
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore.loadCache(CacheAbstractJdbcStore.java:819)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadCache(GridCacheStoreManagerAdapter.java:504)
	... 21 more
Caused by: class org.apache.ignite.binary.BinaryObjectException: Duplicate field ID: C
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.<init>(BinaryClassDescriptor.java:312)
	at org.apache.ignite.internal.binary.BinaryContext.registerUserClassDescriptor(BinaryContext.java:779)
	at org.apache.ignite.internal.binary.BinaryContext.registerClassDescriptor(BinaryContext.java:751)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForClass(BinaryContext.java:622)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:164)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.builder.BinaryBuilderSerializer.writeValue(BinaryBuilderSerializer.java:207)
	at org.apache.ignite.internal.binary.builder.BinaryValueWithType.writeTo(BinaryValueWithType.java:48)
	at org.apache.ignite.internal.binary.builder.BinaryBuilderSerializer.writeValue(BinaryBuilderSerializer.java:73)
	at org.apache.ignite.internal.binary.builder.BinaryBuilderSerializer.writeValue(BinaryBuilderSerializer.java:54)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.serializeTo(BinaryObjectBuilderImpl.java:313)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.build(BinaryObjectBuilderImpl.java:183)
	at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildBinaryObject(CacheJdbcPojoStore.java:252)
	at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildObject(CacheJdbcPojoStore.java:136)
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$1.call(CacheAbstractJdbcStore.java:467)
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$1.call(CacheAbstractJdbcStore.java:434)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	... 3 more

[14:34:04] Ignite node stopped OK [name=1, uptime=00:00:02:132]
Exception in thread ""main"" javax.cache.integration.CacheLoaderException: Failed to load cache: EmpPhotoCache
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore.loadCache(CacheAbstractJdbcStore.java:819)
	at org.apache.ignite.internal.processors.cache.store.GridCacheStoreManagerAdapter.loadCache(GridCacheStoreManagerAdapter.java:504)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtCacheAdapter.localLoadCache(GridDhtCacheAdapter.java:607)
	at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.localLoadCache(GridCacheProxyImpl.java:217)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJob.localExecute(GridCacheAdapter.java:5483)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$LoadCacheJobV2.localExecute(GridCacheAdapter.java:5532)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$TopologyVersionAwareJob.execute(GridCacheAdapter.java:6147)
	at org.apache.ignite.compute.ComputeJobAdapter.call(ComputeJobAdapter.java:132)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1855)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6629)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1115)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1908)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.binary.BinaryObjectException: Duplicate field ID: C
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.<init>(BinaryClassDescriptor.java:312)
	at org.apache.ignite.internal.binary.BinaryContext.registerUserClassDescriptor(BinaryContext.java:779)
	at org.apache.ignite.internal.binary.BinaryContext.registerClassDescriptor(BinaryContext.java:751)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForClass(BinaryContext.java:622)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:164)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1160)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:663)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:793)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:206)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:147)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:134)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:496)
	at org.apache.ignite.internal.binary.builder.BinaryBuilderSerializer.writeValue(BinaryBuilderSerializer.java:207)
	at org.apache.ignite.internal.binary.builder.BinaryValueWithType.writeTo(BinaryValueWithType.java:48)
	at org.apache.ignite.internal.binary.builder.BinaryBuilderSerializer.writeValue(BinaryBuilderSerializer.java:73)
	at org.apache.ignite.internal.binary.builder.BinaryBuilderSerializer.writeValue(BinaryBuilderSerializer.java:54)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.serializeTo(BinaryObjectBuilderImpl.java:313)
	at org.apache.ignite.internal.binary.builder.BinaryObjectBuilderImpl.build(BinaryObjectBuilderImpl.java:183)
	at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildBinaryObject(CacheJdbcPojoStore.java:252)
	at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStore.buildObject(CacheJdbcPojoStore.java:136)
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$1.call(CacheAbstractJdbcStore.java:467)
	at org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore$1.call(CacheAbstractJdbcStore.java:434)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	... 3 more

Process finished with exit code 1

{code};;;","04/Oct/17 08:13;vsisko;Fixed duplicate of type in dropdown menu.
To load blob values from DB2 create separate issue.;;;","09/Oct/17 03:55;pkonstantinov;I've tried to import models from TimsTen DB but failed to connect  (jdbc connection string was: jdbc:timesten:direct:my_ttdb (class=com.timesten.jdbc.TimesTenDriver))
{code}
[2017-10-09 10:50:08,294][ERROR][pool-4-thread-1][DatabaseListener] Failed to collect schemas
java.sql.SQLException: [TimesTen][TimesTen 11.2.2.8.0 ODBC Driver][TimesTen]TT0799: Unable to connect to daemon; check daemon status -- file ""db.c"", lineno 9634, procedure ""sbDbConnect""
        at com.timesten.jdbc.JdbcOdbc.createSQLException(JdbcOdbc.java:3246)
        at com.timesten.jdbc.JdbcOdbc.standardError(JdbcOdbc.java:3395)
        at com.timesten.jdbc.JdbcOdbc.standardError(JdbcOdbc.java:3360)
        at com.timesten.jdbc.JdbcOdbc.SQLDriverConnect(JdbcOdbc.java:809)
        at com.timesten.jdbc.JdbcOdbcConnection.connect(JdbcOdbcConnection.java:1866)
        at com.timesten.jdbc.TimesTenDriver.connect(TimesTenDriver.java:303)
        at com.timesten.jdbc.TimesTenDriver.connect(TimesTenDriver.java:159)
        at org.apache.ignite.console.agent.db.DbMetadataReader.connect(DbMetadataReader.java:135)
        at org.apache.ignite.console.agent.handlers.DatabaseListener.connect(DatabaseListener.java:204)
        at org.apache.ignite.console.agent.handlers.DatabaseListener.schemas(DatabaseListener.java:221)
        at org.apache.ignite.console.agent.handlers.DatabaseListener$1.execute(DatabaseListener.java:83)
        at org.apache.ignite.console.agent.handlers.AbstractListener$1.run(AbstractListener.java:71)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
{code};;;","09/Oct/17 09:04;vsisko;Not reproduced. 
Tested. Virbinary columns of TimesTen DB imported as byte[] columns.;;;","09/Oct/17 11:10;kuaw26;Looks good.
Merged to master.;;;","10/Oct/17 07:49;pkonstantinov;Re-tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Race in concurrent client cache start,IGNITE-5763,13087527,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,17/Jul/17 09:31,28/Aug/17 16:38,14/Jul/23 06:20,17/Jul/17 14:08,,,,,,2.3,,cache,,,,0,,,,"Issue was introduced as part of IGNITE-5272, this race is possible:
- two threads on client call getOrCreateCache(s)
- one of threads initiates cache start and sends custom event, this event is processed in discovery thread but is not passed yet to DiscoveryWorker
- second thread sees that cache descriptor already exists and adds 'client cache start' event in DiscoveryWorker before cache start event is added in DiscoveryWorker
- when 'client cache start' event processed, cache does not exists and getOrCreateCache(s) fails

Added test IgniteDynamicCacheMultinodeTest.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5272,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 17 14:08:51 UTC 2017,,,,,,,,,,"0|i3hl7b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jul/17 14:08;sboikov;Merged fix into master (644c9f39cd980e8087438519b34a79986c82d8b4).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skip deploy lgpl modules into repository,IGNITE-5762,13087503,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,17/Jul/17 08:24,30/Apr/19 08:13,14/Jul/23 06:20,17/Jul/17 12:11,,,,,,2.1,,build,,,,0,,,,Current build procedure is deploying lgpl-dependant modules into maven repository. This is Apache license violation and we need to skip deploying of these modules.,,githubbot,oleg-ostanin,,,,,,,,,,,"dspavlov commented on issue #2308: IGNITE-5762 skipping lgpl and examples deploy
URL: https://github.com/apache/ignite/pull/2308#issuecomment-487857342
 
 
   https://issues.apache.org/jira/browse/IGNITE-5762 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Apr/19 08:13;githubbot;600","dspavlov commented on pull request #2308: IGNITE-5762 skipping lgpl and examples deploy
URL: https://github.com/apache/ignite/pull/2308
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Apr/19 08:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 17 08:33:05 UTC 2017,,,,,,,,,,"0|i3hl1z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jul/17 08:33;githubbot;GitHub user oleg-ostanin opened a pull request:

    https://github.com/apache/ignite/pull/2308

    IGNITE-5762 skipping lgpl and examples deploy

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5762

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2308.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2308
    
----
commit 937944861e78f67f1967fb3ce1fd8f7002d7247d
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-07-17T08:31:49Z

    IGNITE-5762 skipping lgpl and examples deploy

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add correct message when entries does not mapped to even one node (and avoid hang on rollback any way).,IGNITE-5761,13087489,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,17/Jul/17 07:14,01/Aug/19 22:06,14/Jul/23 06:20,27/Jul/17 06:50,2.0,,,,,2.1,,cache,,,,0,,,,Transaction hangs on rollback in case the key is not mapped to any node (custom affinity function),,agoncharuk,dpavlov,githubbot,gvvinblade,,,,,,,,,"dspavlov commented on issue #2309: IGNITE-5761
URL: https://github.com/apache/ignite/pull/2309#issuecomment-517475268
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2309: IGNITE-5761
URL: https://github.com/apache/ignite/pull/2309
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 27 07:34:20 UTC 2017,,,,,,,,,,"0|i3hkyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jul/17 08:39;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2309

    IGNITE-5761

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5761

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2309.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2309
    
----
commit 18bdfe96a1e579371108c661e3374183c58a296d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T12:42:30Z

    Fixed NPE in tests

commit d9ed07c67e4a4ff3a9de543cbe039ac2a48f03a0
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T14:32:06Z

    Functionality of muted test is debated now

commit 871d9260f3b32bed5273852dbdb74c758f73d383
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T15:34:01Z

    Functionality of GridVersionSelfTest is debated now

commit 2788a740c9aec88d14808d5927a346d121ad42b1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:23:42Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-2.1.3

commit 1e7e692bd4ce0fe2e092117190b59382840317a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:25:08Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 9fa78849c1ecc45fa56f518ad229e76725c27790
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-14T11:12:29Z

    IGNITE-4831: Add an option to disable MBeans. This closes #2265.
    
    (cherry picked from commit 7283edb)

commit d5cc82cb09cf37da783c9bcfbf6743b8910ceb30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:09Z

    GridCacheAbstractNodeRestartSelfTest stopping all grids after each test to prevent subsequent test failures when one test fails or hangs

commit 8f1d732fc8065e59a29bb538456194d7f4edd3e9
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:17Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 1d75560f9f418628da7d212207267482a1ea16aa
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T13:07:49Z

    Merge branch 'master' into ignite-2.1.3

commit e7ed26b6d305485d3a48ffcca0b9f4069e1fad30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T14:04:51Z

    Test configuration fix to pass validation.

commit b32800a0ec573fb60b77bd00cb04578c5114233b
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T17:17:15Z

    Corrected benchmark output

commit 2b50486983fcda8d4b599d9af33e08673e87668e
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-07-14T18:10:06Z

    IGNITE-5515: Tests were enabled to get hangup on TC

commit fd9e289e7a5f4fea5b4da6f2de21bbd7e5d2f2bd
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-07-17T08:36:07Z

    IGNITE-5761 Add correct message when entries does not mapped to even one node (and avoid hang on rollback any way).

----
;;;","27/Jul/17 06:50;agoncharuk;Merged;;;","27/Jul/17 07:34;dpavlov;Hi, could you please fix license headers build?
http://ci.ignite.apache.org/viewLog.html?buildId=742125&tab=buildChangesDiv&buildTypeId=Ignite20Tests_RatJavadoc;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCache 6 suite timed out by GridCachePartitionEvictionDuringReadThroughSelfTest.testPartitionRent,IGNITE-5759,13087380,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,akalashnikov,dpavlov,dpavlov,15/Jul/17 13:06,03/Dec/18 15:26,14/Jul/23 06:20,03/Dec/18 15:25,,,,,,2.8,,,,,,0,MakeTeamcityGreenAgain,test-fail,,"Test history:
https://ci.ignite.apache.org/project.html?projectId=IgniteTests20&testNameId=-7061194995222816963&tab=testDetails

There is no 'Test has been timed out' message in logs.
Last 'Starting test:' message was GridCachePartitionEvictionDuringReadThroughSelfTest#testPartitionRent

Latest exception from working test was as follows;
{noformat}
[23:19:11]W:		 [org.apache.ignite:ignite-core] [2017-07-14 20:19:11,392][ERROR][tcp-comm-worker-#8980%distributed.GridCachePartitionEvictionDuringReadThroughSelfTest4%][TcpCommunicationSpi] TcpCommunicationSpi failed to establish connection to node, node will be dropped from cluster [rmtNode=TcpDiscoveryNode [id=a93fce57-6b2d-4947-8c23-8a677b900003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=4, intOrder=4, lastExchangeTime=1500063443391, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false]]
[23:19:11]W:		 [org.apache.ignite:ignite-core] class org.apache.ignite.IgniteCheckedException: Failed to connect to node (is node still alive?). Make sure that each ComputeTask and cache Transaction has a timeout set in order to prevent parties from waiting forever in case of network issues [nodeId=a93fce57-6b2d-4947-8c23-8a677b900003, addrs=[/127.0.0.1:45273]]
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:3173)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createNioClient(TcpCommunicationSpi.java:2757)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.reserveClient(TcpCommunicationSpi.java:2649)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.access$5900(TcpCommunicationSpi.java:245)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$CommunicationWorker.processDisconnect(TcpCommunicationSpi.java:4065)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$CommunicationWorker.body(TcpCommunicationSpi.java:3891)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	Suppressed: class org.apache.ignite.IgniteCheckedException: Failed to connect to address [addr=/127.0.0.1:45273, err=Connection refused]
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:3178)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		... 6 more
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	Caused by: java.net.ConnectException: Connection refused
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:744)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		at sun.nio.ch.SocketAdaptor.connect(SocketAdaptor.java:117)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:3024)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 		... 6 more
{noformat}

and then
{noformat}
[23:19:11]W:		 [org.apache.ignite:ignite-core] [2017-07-14 20:19:11,895][WARN ][main][root] Interrupting threads started so far: 5
[23:19:11] :	 [Step 4/5] [2017-07-14 20:19:11,895][INFO ][main][root] >>> Stopping test class: GridCachePartitionEvictionDuringReadThroughSelfTest <<<
[23:19:11]W:		 [org.apache.ignite:ignite-core] [20:19:11] (err) Failed to execute compound future reducer: GridCompoundFuture [rdc=LongSumReducer [sum=0], initFlag=1, lsnrCalls=1, done=false, cancelled=false, err=null, futs=[true, true]]class org.apache.ignite.IgniteCheckedException: null
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7246)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.resolve(GridFutureAdapter.java:258)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:170)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:139)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridCompoundFuture.apply(GridCompoundFuture.java:92)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridCompoundFuture.apply(GridCompoundFuture.java:45)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.unblock(GridFutureAdapter.java:346)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.unblockAll(GridFutureAdapter.java:334)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(GridFutureAdapter.java:494)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(GridFutureAdapter.java:473)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.future.GridFutureAdapter.onDone(GridFutureAdapter.java:461)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestUtils$7.run(GridTestUtils.java:919)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestUtils$9.call(GridTestUtils.java:1210)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestThread.run(GridTestThread.java:86)
[23:19:11]W:		 [org.apache.ignite:ignite-core] Caused by: java.lang.InterruptedException
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Object.wait(Native Method)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.join(Thread.java:1281)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.join(Thread.java:1355)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestUtils.runMultiThreaded(GridTestUtils.java:806)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestUtils$4.call(GridTestUtils.java:746)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestUtils$4.call(GridTestUtils.java:744)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.testframework.GridTestUtils$7.run(GridTestUtils.java:914)
[23:19:11]W:		 [org.apache.ignite:ignite-core] 	... 2 more
{noformat}

Then at 0200+ test was considered timed out",,akalashnikov,amashenkov,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5528,,,,,,,,,,,,"01/Aug/17 17:53;dpavlov;threadDumpFromLogs.log;https://issues.apache.org/jira/secure/attachment/12879880/threadDumpFromLogs.log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 03 15:26:01 UTC 2018,,,,,,,,,,"0|i3hkan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jul/17 16:31;dpavlov;Next run failed with almost the same behaviour
http://ci.ignite.apache.org/viewLog.html?buildId=728190&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache5;;;","24/Jul/17 13:22;dpavlov;Problems is still found for recent runs:  buildId737186; buildId737181;;;","24/Jul/17 13:32;dpavlov;See also http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache5&branch_Ignite20Tests=pull%2F2335%2Fhead&tab=buildTypeStatusDiv

10% probablity than test is failed (master);;;","01/Aug/17 15:43;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2373

    IGNITE-5759: cache 5 suite timed out by GridCachePartitionEvictionDuringReadThroughSelfTest.testPartitionRent

    More debug info, cancelling threads in case of timeout: cache 5 suite timed out by GridCachePartitionEvictionDuringReadThroughSelfTest.testPartitionRent

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5759

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2373.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2373
    
----
commit d242661bdb8c35891c7f1c300c77e01bfc423bde
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-08-01T15:41:23Z

    IGNITE-5759: more debug info, cancelling threads in case of timeout : cache 5 suite timed out by GridCachePartitionEvictionDuringReadThroughSelfTest.testPartitionRent

----
;;;","01/Aug/17 16:09;dpavlov;Started testing under PR and suite 6 (requires less time to execute)
http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgniteCache6&branch_Ignite20Tests=pull%2F2373%2Fhead&tab=buildTypeStatusDiv
;;;","01/Aug/17 17:58;dpavlov;[~agoncharuk], latest test failure from TC with 
- additional logging code
- and test stopping in case of failure 

was with failed to wait part map update, see  https://issues.apache.org/jira/secure/attachment/12879880/threadDumpFromLogs.log

{noformat}
Caused by: class org.apache.ignite.IgniteException: Timeout of waiting for topology map update [igniteInstanceName=distributed.GridCachePartitionEvictionDuringReadThroughSelfTest4, cache=config, cacheId=-1354792126, topVer=AffinityTopologyVersion [topVer=5, minorTopVer=1], p=16, readVer=AffinityTopologyVersion [topVer=5, minorTopVer=1], locNode=TcpDiscoveryNode [id=e790c9e4-49b3-4b78-8ab3-585d8ce00004, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47504], discPort=47504, order=5, intOrder=5, lastExchangeTime=1501604069038, loc=true, ver=2.2.0#19700101-sha1:00000000, isClient=false]]
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:700)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:537)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:521)
	at org.apache.ignite.internal.processors.cache.distributed.GridCachePartitionEvictionDuringReadThroughSelfTest.access$300(GridCachePartitionEvictionDuringReadThroughSelfTest.java:47)
	at org.apache.ignite.internal.processors.cache.distributed.GridCachePartitionEvictionDuringReadThroughSelfTest$2.call(GridCachePartitionEvictionDuringReadThroughSelfTest.java:122)
	at org.apache.ignite.internal.processors.cache.distributed.GridCachePartitionEvictionDuringReadThroughSelfTest$2.call(GridCachePartitionEvictionDuringReadThroughSelfTest.java:117)
	at org.apache.ignite.testframework.GridTestUtils$7.run(GridTestUtils.java:914)
	at org.apache.ignite.testframework.GridTestUtils$9.call(GridTestUtils.java:1210)
	at org.apache.ignite.testframework.GridTestThread.run(GridTestThread.java:86) 
{noformat}

All exchange workers were waiting for next exchange future in queue: LinkedBlockingDeque.poll() and it seems exchange was finished.;;;","02/Aug/17 17:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2373
;;;","29/Nov/18 15:26;githubbot;GitHub user akalash opened a pull request:

    https://github.com/apache/ignite/pull/5531

    IGNITE-5759 unmuted testPartitionRent test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5759-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5531.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5531
    
----
commit 5d4ae967cb537e284c601e05955a588049ab4f08
Author: Anton Kalashnikov <kaa.dev@...>
Date:   2018-11-29T15:26:19Z

    IGNITE-5759 unmuted testPartitionRent test

----
;;;","03/Dec/18 08:59;akalashnikov;[~dpavlov], looks like this test was already fixed. Could you please merge my changes(unmuted test), or unmute it by yourself?
https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_Cache6&tab=buildTypeStatusDiv&branch_IgniteTests24Java8=pull%2F5531%2Fhead;;;","03/Dec/18 15:25;dpavlov;Merged to master
https://git-wip-us.apache.org/repos/asf?p=ignite.git;a=commit;h=66d8ac64dc0cd6f83bbfc45560cd08f38d8a92ff

Umuted test https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&testNameId=-7061194995222816963&tab=testDetails 

[~akalashnikov] thank you for research and for finding that this failure is not actual anymore.;;;","03/Dec/18 15:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/5531
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RENT partition state is set before exchange is completed,IGNITE-5757,13087201,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,agoncharuk,agoncharuk,14/Jul/17 13:31,28/Aug/17 16:39,14/Jul/23 06:20,02/Aug/17 08:25,2.1,,,,,2.3,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,"I observe the following error on TC during GridCachePartitionedGetAndTransformStoreSelfTest run:
{code}
[2017-07-14 16:26:49,857][ERROR][sys-stripe-3-#4%near.GridCachePartitionedGetAndTransformStoreSelfTest%][IgniteTxHandler] Failed to prepare DHT transaction: GridDhtTxLocal [nearNodeId=8a4cdb3f-85be-4286-a63d-728a6c800001, nearFutId=a8ef7414d51-e91dff67-b46c-4762-b7b9-9bcf382a82a0, nearMiniId=1, nearFinFutId=null, nearFinMiniId=0, nearXidVer=GridCacheVersion [topVer=111518810, order=1500038810278, nodeOrder=3], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=true, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxImplicitSingleStateImpl [init=true, recovery=false], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=111518810, order=1500038810305, nodeOrder=1], writeVer=null, implicit=true, loc=true, threadId=239, startTime=1500038809744, nodeId=322e96c3-eb1c-4aea-b9fd-3a3dae368d31, startVer=GridCacheVersion [topVer=111518810, order=1500038810305, nodeOrder=1], endVer=null, isolation=READ_COMMITTED, concurrency=OPTIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=GridCacheVersion [topVer=111518810, order=1500038810305, nodeOrder=1], finalizing=NONE, invalidParts=null, state=ROLLED_BACK, timedOut=false, topVer=AffinityTopologyVersion [topVer=4, minorTopVer=0], duration=107ms, onePhaseCommit=false], size=0]]]
class org.apache.ignite.internal.transactions.IgniteTxRollbackCheckedException: Failed to prepare transaction: GridDhtTxLocal [nearNodeId=8a4cdb3f-85be-4286-a63d-728a6c800001, nearFutId=a8ef7414d51-e91dff67-b46c-4762-b7b9-9bcf382a82a0, nearMiniId=1, nearFinFutId=null, nearFinMiniId=0, nearXidVer=GridCacheVersion [topVer=111518810, order=1500038810278, nodeOrder=3], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=true, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxImplicitSingleStateImpl [init=true, recovery=false], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=111518810, order=1500038810305, nodeOrder=1], writeVer=null, implicit=true, loc=true, threadId=239, startTime=1500038809744, nodeId=322e96c3-eb1c-4aea-b9fd-3a3dae368d31, startVer=GridCacheVersion [topVer=111518810, order=1500038810305, nodeOrder=1], endVer=null, isolation=READ_COMMITTED, concurrency=OPTIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=null, finalizing=NONE, invalidParts=null, state=MARKED_ROLLBACK, timedOut=false, topVer=AffinityTopologyVersion [topVer=4, minorTopVer=0], duration=97ms, onePhaseCommit=false], size=0]]]
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:418)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareNearTx(IgniteTxHandler.java:459)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxPrepareRequest(IgniteTxHandler.java:121)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$000(IgniteTxHandler.java:95)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:141)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$1.apply(IgniteTxHandler.java:139)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1042)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:561)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Adding entry to partition that is concurrently evicted [part=58, shouldBeMoving=false]
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.addEntry(GridDhtTxLocalAdapter.java:523)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.prepareAsync(GridDhtTxLocal.java:399)
	... 17 more
{code}

The issue happens because GridDhtLocalTransaction is being prepared on topology version (4, 0), and the next topology version (4, 1) changes the primary node assignment. The topology is locked on the originating node, which is a server node, at the same time topology is not locked on primary node that is about to rent it's partitions.
When exchange runs on primary node, it does not see the GridDhtTxLocal transaction yet, completes the partition release future and rents all partitions.
After this, the GridDhtTxLocat starts prepare phase and gets the exception above.",,agoncharuk,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 02 08:25:58 UTC 2017,,,,,,,,,,"0|i3hj7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 13:42;agoncharuk;Initial idea is to rent all partition only after exchange is completed, i.e. in afterExchange method.;;;","02/Aug/17 08:25;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong msg: calculation of memory policy size,IGNITE-5755,13087153,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,sergvolkov,sbberkov,sbberkov,14/Jul/17 10:27,02/Aug/19 11:13,14/Jul/23 06:20,11/Dec/17 13:04,2.1,,,,,2.4,,general,,,,0,,,,"In PageMemoryNoStoreImpl:
{noformat}
            throw new IgniteOutOfMemoryException(""Not enough memory allocated "" +
                ""(consider increasing memory policy size or enabling evictions) "" +
                ""[policyName="" + memoryPolicyCfg.getName() +
                "", size="" + U.readableSize(memoryPolicyCfg.getMaxSize(), true) + ""]""
{noformat}
wrong usage of U.readableSize - we should use non ""Si"" (1024 instead of 1000) multiplier. Right code is:
{noformat}
            throw new IgniteOutOfMemoryException(""Not enough memory allocated "" +
                ""(consider increasing memory policy size or enabling evictions) "" +
                ""[policyName="" + memoryPolicyCfg.getName() +
                "", size="" + U.readableSize(memoryPolicyCfg.getMaxSize(), false) + ""]""
{noformat}",,agura,githubbot,sbberkov,sergvolkov,,,,,,,,,"dspavlov commented on issue #3044: IGNITE-5755 change calculation of memory policy size
URL: https://github.com/apache/ignite/pull/3044#issuecomment-517662731
 
 
   The ticket is resolved, closing PR. Feel free to reopen if needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:13;githubbot;600","dspavlov commented on pull request #3044: IGNITE-5755 change calculation of memory policy size
URL: https://github.com/apache/ignite/pull/3044
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,IGNITE-8407,,,,,,,,,,,IGNITE-8407,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 11 13:04:05 UTC 2017,,,,,,,,,,"0|i3hiwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 12:15;githubbot;GitHub user sergvolkov opened a pull request:

    https://github.com/apache/ignite/pull/3044

    IGNITE-5755 change calculation of memory policy size

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sergvolkov/ignite ignite-2.1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3044.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3044
    
----
commit e593c768aa7dcbfed30f2592e5ea1e1ad35ded77
Author: SA.Volkov <sa.volkov@jet.msk.su>
Date:   2017-11-16T12:10:22Z

    IGNITE-5755 change calculation of memory policy size

----
;;;","11/Dec/17 13:04;agura;Merged to master branch. Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Web agent should use POST instead of GET to get topology,IGNITE-5754,13087074,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,14/Jul/17 03:05,28/Aug/17 16:38,14/Jul/23 06:20,24/Jul/17 03:33,,,,,,2.3,,wizards,,,,0,,,,"On large topology Web Agent generate very long GET request and node that handle that request throw error: ""URI is too large > 8192""",,anovikov,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 24 03:54:49 UTC 2017,,,,,,,,,,"0|i3hifb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 08:32;anovikov;Used POST in Web Agent requests instead of GET.

[~kuaw26], please review my changes;;;","24/Jul/17 03:33;kuaw26;Looks good for me.;;;","24/Jul/17 03:54;anovikov;Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Memory leak on argument cleaning for SqlQuery and SqlFieldsQuery,IGNITE-5753,13086964,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,13/Jul/17 18:01,28/Aug/17 16:37,14/Jul/23 06:20,14/Jul/17 15:30,2.0,,,,,2.3,,platforms,,,,0,,,,There is a memory leak in {{SqlQuery::ClearArguments()}} and {{SqlFieldsQuery::ClearArguments()}}.,,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 28 16:24:50 UTC 2017,,,,,,,,,,"0|i3hhr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/17 18:10;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2299

    IGNITE-5753: Memory leak fixed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5753

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2299.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2299
    
----
commit d982a4534d825ba63f8cca8c3f48fb925dbc0c8c
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-13T18:09:34Z

    IGNITE-5753: Memory leak fixed

----
;;;","14/Jul/17 10:20;isapego;Ready. [~ptupitsyn], please, take a look.;;;","14/Jul/17 11:34;ptupitsyn;[~isapego] looks good.;;;","14/Jul/17 15:30;isapego;Merged to master
;;;","28/Jul/17 16:24;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2299
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix stale sequence updates for local partition map,IGNITE-5752,13086923,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,jokser,jokser,13/Jul/17 15:03,28/Aug/17 16:40,14/Jul/23 06:20,21/Jul/17 13:30,2.1,,,,,2.3,,,,,,0,,,,"Sometimes cache group start/stop operation leads to stale sequence updates for local partition maps during partitions map exchange.

{noformat}
Exception in thread ""sys-#17801%database.IgniteDbSnapshotSelfMultiNodeTest0%"" java.lang.AssertionError
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1230)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1334)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1000(GridCachePartitionExchangeManager.java:125)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:297)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:295)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2243)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2225)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1042)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:561)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:378)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:304)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:99)
    at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:293)
    at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1556)
    at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1184)
    at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:126)
    at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1097)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
[08:51:19,289][ERROR][exchange-worker-#17673%database.IgniteDbSnapshotSelfMultiNodeTest0%][GridDhtPartitionsExchangeFuture] Failed to reinitialize local partitions (preloading will be stopped): GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=4, minorTopVer=11], nodeId=4e129187, evt=DISCOVERY_CUSTOM_EVT]
java.lang.AssertionError: Invalid update sequence [cur=23, new=2]
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap.updateSequence(GridDhtPartitionMap.java:207)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.updateLocal(GridDhtPartitionTopologyImpl.java:1901)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.initPartitions0(GridDhtPartitionTopologyImpl.java:345)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.beforeExchange(GridDhtPartitionTopologyImpl.java:507)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.distributedExchange(GridDhtPartitionsExchangeFuture.java:991)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:632)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1901)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
    at java.lang.Thread.run(Thread.java:745){noformat}
",,dpavlov,githubbot,jokser,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 21 14:07:08 UTC 2017,,,,,,,,,,"0|i3hhhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/17 15:08;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/2297

    IGNITE-5752 Fixed GridDhtPartitionMap updateSequence modifying

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5752

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2297.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2297
    
----
commit 707c454ad9c3b4132e2d0a20d15dc1eb2ed295b0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-12T07:53:46Z

    Corrected fix for REST processor wrt authentication

commit f3828261b30c12d5aa181914033afe46c787f87e
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-07-12T07:57:50Z

    IGNITE-5639 Added duration for empty result set.

commit 5859b192ba28d53e1bccb01ce3005821e26b5347
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T09:46:42Z

    AI 2.1 release notes.

commit 8afdc7baae73ecba67e0735baa97d03f2c4fc715
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T10:51:43Z

    Removed CacheBinaryAutoStoreExample and relevant bean ""h2-example-db"" from example-default.xml because example duplicated existing CacheAutoStoreExample.

commit c6ee085b8a1321ce7fa15f8adf74fa7a01f7a445
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-12T11:22:03Z

    Fixed page acquire during checkpoint

commit 0cb6ac06adddd43ac72c707b29d7216bd4cb711a
Author: Oleg Ostanin <oostanin@gridgain.com>
Date:   2017-07-12T12:57:40Z

    IGNITE-5740 - Added transaction load timing benchmark

commit 3787181310597b7a6e633e745ba08209abd038a9
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-12T15:28:57Z

    More verbose logging

commit 21964fb5f6fb6fee891283332202cbc9ed5ac3f3
Author: Dmitry Pavlov <dpavlov.spb@gmail.com>
Date:   2017-07-12T15:59:10Z

    Optimized snapshot progress tracking

commit 689b1b6e9c3e723cf394c7ff2427097b21d96ce3
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T07:12:01Z

    IGNITE-5479 - Cleanup public API for PersistentStoreConfiguration

commit 3c1749da82e663500e45a34369eac48dbbc62bdc
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-13T08:25:55Z

    IGNITE-5744 Ignore non user caches when automatically choosing a queryable cache inside JDBC driver

commit 9d4e5fdf915109c3938226cfcf70b9b091449db2
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-13T15:08:37Z

    IGNITE-5752 Fixed updateSequence updating in GridDhtPartitionMap.

----
;;;","14/Jul/17 12:06;jokser;Fixed update sequence modifying in DhtPartitionMap.

Branch ignite-5752.

TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2297%2Fhead;;;","21/Jul/17 14:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2297
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Format of uptime for metrics,IGNITE-5750,13086911,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,eignatiev,ein,ein,13/Jul/17 14:22,01/Sep/17 17:40,14/Jul/23 06:20,01/Sep/17 17:39,2.0,,,,,2.3,,general,,,,0,newbie,,,"Metrics for local node shows uptime formatted as 00:00:00:000

But the last colon should be changed to the dot.

Right format is 00:00:00.000",,cos,eignatiev,ein,githubbot,kenmy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 01 17:40:09 UTC 2017,,,,,,,,,,"0|i3hhfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/17 15:40;githubbot;GitHub user YevIgn opened a pull request:

    https://github.com/apache/ignite/pull/2298

    IGNITE-5750 Change HMSM format to hh:mm:ss.mmm

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/YevIgn/ignite ignite-5750

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2298.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2298
    
----
commit fdd60ce0f799cf7fb4a78d49bf306fb6c086fc5b
Author: Evgeniy Ignatiev <evgeniy_ignatiev@epam.com>
Date:   2017-07-13T14:57:43Z

    IGNITE-5750 Change HMSM format to hh:mm:ss.mmm

----
;;;","17/Jul/17 10:48;eignatiev;[~ein] please review my changes.;;;","19/Jul/17 17:09;ein;LGFM. Have you made a test or check that uses of {{timeSpan2HMSM}} wouldn't be broken on the format change?;;;","20/Jul/17 14:33;eignatiev;Yes, I manually checked that uptime format has been changed while Ignite prints it to console, I personally do not know or see by searching through Ignite codebase what logic or tests can be broken by that change. Could you provide some guidance? May be running, e.g. ""Run All"" configuration on Ignite CI will be enough?;;;","20/Jul/17 15:40;cos;[~ein], do you think it is ready for commit? Please let me know if I can help!;;;","31/Jul/17 16:12;cos;I am going to commit this today - the patch has fallen through the cracks.;;;","01/Sep/17 17:39;cos;The fix is committed to the master branch. Thank you [~yevgeniy.ignatyev]!;;;","01/Sep/17 17:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2298
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCommonAbstractTest.startGridsMultiThreaded works very slowly if persistence is enabled,IGNITE-5747,13086881,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,EdShangGG,EdShangGG,13/Jul/17 11:21,25/Jul/17 13:51,14/Jul/23 06:20,25/Jul/17 13:51,,,,,,2.1,,general,,,,0,,,,"GridCommonAbstractTest.startGridsMultiThreaded takes 2 minutes for 4 nodes if persistence is enabled because we wait for topology update in affinity, but it's not working while cluster is not active.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 25 13:51:29 UTC 2017,,,,,,,,,,"0|i3hh8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/17 11:31;EdShangGG;Patch is trivial.
https://github.com/apache/ignite/pull/2294;;;","25/Jul/17 13:51;agoncharuk;Merged;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignore non user caches when automatically choosing a queryable cache inside JDBC driver,IGNITE-5744,13086799,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,al.psc,al.psc,al.psc,13/Jul/17 03:56,01/Aug/19 22:06,14/Jul/23 06:20,13/Jul/17 08:29,2.1,,,,,2.1,,jdbc,sql,,,0,,,,"This is related to IGNITE-5711.

When user supplies no cache name in JDBC connection params, we try to use all caches, including system ones, as candidate query caches, this must be explicitly forbidden.

Failing test: {{org.apache.ignite.jdbc.JdbcNoDefaultCacheTest#testNoCacheNameQuery}}, apparently did not fail on TC because of inconsistent map iteration order.",,al.psc,githubbot,sboikov,,,,,,,,,,"dspavlov commented on issue #2289: IGNITE-5744
URL: https://github.com/apache/ignite/pull/2289#issuecomment-517475285
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2289: IGNITE-5744
URL: https://github.com/apache/ignite/pull/2289
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5711,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 13 08:29:01 UTC 2017,,,,,,,,,,"0|i3hgqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/17 04:09;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2289

    IGNITE-5744

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5744

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2289.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2289
    
----
commit 707c454ad9c3b4132e2d0a20d15dc1eb2ed295b0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-12T07:53:46Z

    Corrected fix for REST processor wrt authentication

commit f3828261b30c12d5aa181914033afe46c787f87e
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-07-12T07:57:50Z

    IGNITE-5639 Added duration for empty result set.

commit 5859b192ba28d53e1bccb01ce3005821e26b5347
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T09:46:42Z

    AI 2.1 release notes.

commit 8afdc7baae73ecba67e0735baa97d03f2c4fc715
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T10:51:43Z

    Removed CacheBinaryAutoStoreExample and relevant bean ""h2-example-db"" from example-default.xml because example duplicated existing CacheAutoStoreExample.

commit c6ee085b8a1321ce7fa15f8adf74fa7a01f7a445
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-12T11:22:03Z

    Fixed page acquire during checkpoint

commit 0cb6ac06adddd43ac72c707b29d7216bd4cb711a
Author: Oleg Ostanin <oostanin@gridgain.com>
Date:   2017-07-12T12:57:40Z

    IGNITE-5740 - Added transaction load timing benchmark

commit 3787181310597b7a6e633e745ba08209abd038a9
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-12T15:28:57Z

    More verbose logging

commit 21964fb5f6fb6fee891283332202cbc9ed5ac3f3
Author: Dmitry Pavlov <dpavlov.spb@gmail.com>
Date:   2017-07-12T15:59:10Z

    Optimized snapshot progress tracking

commit 9496bf337d98559805c611b57140bea65c586602
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-13T04:04:28Z

    IGNITE-5744 Ignore non user caches when automatically choosing a queryable cache inside JDBC driver

----
;;;","13/Jul/17 08:29;sboikov;Reviewed, looks good, merged (3c1749da82e663500e45a34369eac48dbbc62bdc).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JVM crash on node deactivation,IGNITE-5739,13086546,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,kuaw26,kuaw26,12/Jul/17 10:21,22/Oct/17 19:17,14/Jul/23 06:20,05/Oct/17 14:39,2.1,,,,,2.3,,,,,,0,,,,"Start one node (with persistence).
Activate
Deactivate - node crashed.",,agoncharuk,avolkov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 10:21;kuaw26;hs_err_pid16076.log;https://issues.apache.org/jira/secure/attachment/12876805/hs_err_pid16076.log","12/Jul/17 10:24;kuaw26;ignite-c43368bb.log;https://issues.apache.org/jira/secure/attachment/12876809/ignite-c43368bb.log",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 10 06:53:49 UTC 2017,,,,,,,,,,"0|i3hf6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jul/17 10:19;avolkov;Retested for ver. 2.1.0#20170720-sha1:a6ca5c8a. Node deactivation works fine. 

This scenario was tested:
1. start node with enabled persistent store in config file.
2. activate cluster.
3. check that cluster is activated.
4. deactivate cluster.

From attached log I see that some caches were started. Please provide config file which was used and clarify the scenario.;;;","25/Aug/17 04:23;kuaw26;[~pkonstantinov] Can you prepare reproducer?;;;","05/Oct/17 14:39;agoncharuk;Merged to master (commit 3b1cad2156e6230760fface6c7cd00d3f3526255);;;","10/Oct/17 06:53;pkonstantinov;Tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE during populated data (CacheQueryDdlExample),IGNITE-5735,13086497,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,ustas,ustas,12/Jul/17 07:42,13/Jul/17 13:42,14/Jul/23 06:20,13/Jul/17 13:42,2.1,,,,,2.1,,cache,,,,0,,,,"Steps for reproduce:
1. Start 2 nodes with *examples/config/example-ignite.xml*
2. Start *CacheQueryDdlExample*
Result:
Om example node:
{noformat}
[10:19:17]    __________  ________________ 
[10:19:17]   /  _/ ___/ |/ /  _/_  __/ __/ 
[10:19:17]  _/ // (7 7    // /  / / / _/   
[10:19:17] /___/\___/_/|_/___/ /_/ /___/  
[10:19:17] 
[10:19:17] ver. 2.1.2#20170711-sha1:2a2c8030
[10:19:17] 2017 Copyright(C) Apache Software Foundation
[10:19:17] 
[10:19:17] Ignite documentation: http://ignite.apache.org
[10:19:17] 
[10:19:17] Quiet mode.
[10:19:17]   ^-- Logging to file '/Users/gridgain/Downloads/gridgain-enterprise-fabric-8.1.2/work/log/ignite-9ef688f8.log'
[10:19:17]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[10:19:17] 
[10:19:17] OS: Mac OS X 10.10.5 x86_64
[10:19:17] VM information: Java(TM) SE Runtime Environment 1.8.0_45-b14 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.45-b02
[10:19:17] Initial heap size is 256MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[10:19:17] Configured plugins:
[10:19:17]   ^-- GridGain 8.1.2#20170711-sha1:ff30520a
[10:19:17]   ^-- 2017 Copyright(C) GridGain Systems
[10:19:17] 
[10:19:17] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[10:19:17] Security status [authentication=off, tls/ssl=off]
[10:19:18] Rolling updates are disabled. GridGain version update will require full cluster restart. Consider changing 'GridGainConfiguration.rollingUpdatesEnabled' configuration property.
[2017-07-12 10:19:20,162][ERROR][main][GridEntLicenseProcessor] License violation detected:
  ^-- Maximum number of nodes (3/2) is exceeded.
[2017-07-12 10:19:20,162][ERROR][main][GridEntLicenseProcessor] Contact sales@gridgain.com for further assistance. Make sure to include your license ID: 9D50E008-472D-430F-8B2D-CFB8A3894C0D
[2017-07-12 10:19:20,163][ERROR][main][GridEntLicenseProcessor] License grace/burst period - left 1 hour.
[10:19:20] Performance suggestions for grid  (fix if possible)
[10:19:20] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[10:19:20]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[10:19:20]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[10:19:20]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[10:19:20]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[10:19:20]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[10:19:20] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[10:19:20] 
[10:19:20] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[10:19:20] 
[10:19:20] Ignite node started OK (id=9ef688f8)
[10:19:20] Topology snapshot [ver=3, servers=3, clients=0, CPUs=8, heap=5.6GB]

>>> Cache query DDL example started.

>>> Created database objects.

>>> Populated data.
{noformat}

On remote nodes;
{noformat}
SEVERE: Failed to read message [msg=GridIoMessage [plc=0, topic=null, topicOrd=-1, ordered=false, timeout=0, skipOnTimeout=false, msg=null], buf=java.nio.DirectByteBuffer[pos=4 lim=10001 cap=32768], reader=DirectMessageReader [state=DirectMessageState [pos=0, stack=[StateItem [stream=DirectByteBufferStreamImplV2 [baseOff=140343292566528, arrOff=-1, tmpArrOff=0, tmpArrBytes=0, msgTypeDone=false, msg=null, mapIt=null, it=null, arrPos=-1, keyDone=false, readSize=-1, readItems=0, prim=0, primShift=0, uuidState=0, uuidMost=0, uuidLeast=0, uuidLocId=0, lastFinished=true], state=0], null, null, null, null, null, null, null, null, null]], lastRead=false], ses=GridSelectorNioSessionImpl [worker=DirectNioClientWorker [super=AbstractNioClientWorker [idx=2, bytesRcvd=117764, bytesSent=5240, bytesRcvd0=20086, bytesSent0=56, select=true, super=GridWorker [name=grid-nio-worker-tcp-comm-2, igniteInstanceName=null, finished=false, hashCode=158461243, interrupted=false, runner=grid-nio-worker-tcp-comm-2-#19%null%]]], writeBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], readBuf=java.nio.DirectByteBuffer[pos=4 lim=10001 cap=32768], inRecovery=GridNioRecoveryDescriptor [acked=10, resendCnt=0, rcvCnt=10, sentCnt=10, reserved=true, lastAck=0, nodeLeft=false, node=TcpDiscoveryNode [id=9ef688f8-ba58-4b40-8d7c-01c2b8bb7f57, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.60], sockAddrs=[mpb.gridgain.local/172.25.4.60:47502, /0:0:0:0:0:0:0:1:47502, /127.0.0.1:47502], discPort=47502, order=3, intOrder=3, lastExchangeTime=1499843959324, loc=false, ver=2.1.2#20170711-sha1:2a2c8030, isClient=false], connected=true, connectCnt=2, queueLimit=4096, reserveCnt=53, pairedConnections=false], outRecovery=GridNioRecoveryDescriptor [acked=10, resendCnt=0, rcvCnt=10, sentCnt=10, reserved=true, lastAck=0, nodeLeft=false, node=TcpDiscoveryNode [id=9ef688f8-ba58-4b40-8d7c-01c2b8bb7f57, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.60], sockAddrs=[mpb.gridgain.local/172.25.4.60:47502, /0:0:0:0:0:0:0:1:47502, /127.0.0.1:47502], discPort=47502, order=3, intOrder=3, lastExchangeTime=1499843959324, loc=false, ver=2.1.2#20170711-sha1:2a2c8030, isClient=false], connected=true, connectCnt=2, queueLimit=4096, reserveCnt=53, pairedConnections=false], super=GridNioSessionImpl [locAddr=/0:0:0:0:0:0:0:1:47100, rmtAddr=/0:0:0:0:0:0:0:1:54239, createTime=1499844017164, closeTime=0, bytesSent=28, bytesRcvd=10043, bytesSent0=28, bytesRcvd0=10043, sndSchedTime=1499844017164, lastSndTime=1499844017164, lastRcvTime=1499844017164, readsPaused=false, filterChain=FilterChain[filters=[GridNioCodecFilter [parser=o.a.i.i.util.nio.GridDirectParser@11c4be7e, directMode=true], GridConnectionBytesVerifyFilter], accepted=true]]]
java.lang.NullPointerException
	at org.apache.ignite.internal.managers.communication.GridIoMessageFactory.create(GridIoMessageFactory.java:879)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$9.create(TcpCommunicationSpi.java:2140)
	at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMessage(DirectByteBufferStreamImplV2.java:1154)
	at org.apache.ignite.internal.direct.DirectMessageReader.readMessage(DirectMessageReader.java:311)
	at org.apache.ignite.internal.managers.communication.GridIoMessage.readFrom(GridIoMessage.java:261)
	at org.apache.ignite.internal.util.nio.GridDirectParser.decode(GridDirectParser.java:90)
	at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:114)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onMessageReceived(GridConnectionBytesVerifyFilter.java:133)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3222)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
	at org.apache.ignite.internal.util.nio.GridNioServer$DirectNioClientWorker.processRead(GridNioServer.java:1213)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2180)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1968)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1669)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)

Jul 12, 2017 10:20:18 AM org.apache.ignite.logger.java.JavaLogger warning
{noformat}",,avolkov,ustas,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 13 12:43:43 UTC 2017,,,,,,,,,,"0|i3hevr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 08:47;vozerov;[~ustas], please re-test it on the latest commit.;;;","12/Jul/17 10:13;ustas;[~vozerov], I've re-tested this issue on *478d3b5d* and got the following exception:
{noformat}
Exception in thread ""main"" javax.cache.CacheException: Indexing is disabled for cache: dummy_cache. Use setIndexedTypes or setTypeMetadata methods on CacheConfiguration to enable.
[13:10:20] Ignite node stopped OK [uptime=00:00:00:255]
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.validate(IgniteCacheProxy.java:891)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:780)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:765)
	at org.apache.ignite.examples.datagrid.CacheQueryDdlExample.main(CacheQueryDdlExample.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
{noformat}

Now it is problem of CacheQueryDdlExample.;;;","13/Jul/17 12:43;avolkov;Works fine on build 3c1749da. No any exceptions on the remote nodes.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong metrics calculation in ClusterMetricsSnapshot,IGNITE-5731,13086279,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,da.loginov,ezhuravl,ezhuravl,11/Jul/17 14:35,02/Aug/19 11:13,14/Jul/23 06:20,11/Dec/17 13:22,1.6,,,,,2.4,,,,,,0,,,," Error in ClusterMetricsSnapshot constructor:

 curWaitingJobs += m.getCurrentJobWaitTime();
 avgWaitingJobs += m.getCurrentWaitingJobs();",,agura,ezhuravl,githubbot,,,,,,,,,,"dspavlov commented on issue #3055: IGNITE-5731: curWaitingJobs and avgJobWaitTime calculation fixed
URL: https://github.com/apache/ignite/pull/3055#issuecomment-517662739
 
 
   The ticket is resolved, closing PR. Feel free to reopen if needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:13;githubbot;600","dspavlov commented on pull request #3055: IGNITE-5731: curWaitingJobs and avgJobWaitTime calculation fixed
URL: https://github.com/apache/ignite/pull/3055
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 11 13:22:41 UTC 2017,,,,,,,,,,"0|i3hdjz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Nov/17 08:29;githubbot;GitHub user Denis-Log opened a pull request:

    https://github.com/apache/ignite/pull/3055

    IGNITE-5731: curWaitingJobs and avgJobWaitTime calculation fixed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Denis-Log/ignite IGNITE-5731

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3055.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3055
    
----
commit 71b01e53ba0987027c82666080700839bd656671
Author: Denis Loginov <da.loginov@jet.msk.su>
Date:   2017-11-17T08:24:50Z

    IGNITE-5731: curWaitingJobs and avgJobWaitTime calculation fixed

----
;;;","11/Dec/17 13:22;agura;Merged to master branch. Thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Failed to load ignite.jni.dll when starting up multiple nodes,IGNITE-5730,13086252,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,11/Jul/17 13:23,27/Sep/17 11:59,14/Jul/23 06:20,27/Sep/17 09:21,2.0,,,,,2.3,,platforms,,,,0,.NET,,,"When starting multiple nodes at once (with a script of some kind), failure to load unmanaged dll can occur:

{code}
set IGNITE_NATIVE_TEST_CLASSPATH=true

FOR /L %%A IN (1,1,20) DO (
  start Apache.Ignite.exe
)
{code}

Exception:
{code}
ERROR: System.TypeInitializationException: The type initializer for 'Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils' threw an exception. ---> Apache.Ignite.Core.Common.IgniteException: Failed to load ignite.jni.dll: 126
   at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils..cctor()
   --- End of inner exception stack trace ---
   at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.Initialize()
   at Apache.Ignite.Core.Impl.IgniteUtils.LoadDlls(String configJvmDllPath, ILogger log)
   at Apache.Ignite.Core.Ignition.Start(IgniteConfiguration cfg)
   at Apache.Ignite.IgniteRunner.Main(String[] args)
{code}

Error codes may be 5 (ERROR_ACCESS_DENIED) or 126 (ERROR_MOD_NOT_FOUND).",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5343,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Sep 27 11:59:18 UTC 2017,,,,,,,,,,"0|i3hddz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 13:28;ptupitsyn;Adding a delay between node start fixes the problem. Looks like {{Path.GetRandomFileName()}} in {{GetTempDirectoryName()}} can return the same thing twice when run concurrently from two processes.;;;","12/Jul/17 09:06;ptupitsyn;Actully, the problem is not with {{GetTempDirectoryName()}}, but because we clean up old temporary directories on startup ({{TryCleanTempDirectories}}), which interferes with other nodes (one node creates a folder, another one tries to remove it).

{{TryCleanTempDirectories}} also runs syncronously and slows down startup when temp dir is huge.

This leaves us with a problem of cleaning up temp directories. Ideally, this should be done when Ignite node shuts down; however, we can't use {{DomainUnload}} event, since more than one domain can be there, and they use the same native dll.;;;","12/Jul/17 10:51;ptupitsyn;Turns out each AppDomain loads it's own {{ignite.jni.dll}}, so we should unload and remove it in {{AppDomain.CurrentDomain.DomainUnload}}.;;;","12/Jul/17 15:44;ptupitsyn;* {{DomainUnload}} is not called in default domain. {{ProcessExit}} should be used instead.
* When Ignite is started in a non-default AppDomain, we should use {{DomainUnload}}. But we rely on {{UnmanagedTarget}} and {{UnmanagedContext}} finalizers to clean up unmanaged objects, so we can't unload ignite.jni.dll before everything is finalized. And finalizer order is undefined. Seems like there is no reliable way to handle this.

Maybe we should not waste time on this and implement IGNITE-5343 instead, which gets rid of {{ignite.jni.dll}} altogether.;;;","26/Sep/17 14:06;ptupitsyn;Simple solution is to check directory creation time and do not remove recently created ones.;;;","26/Sep/17 14:59;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2755

    IGNITE-5730 .NET: Fix ignite.jni.dll temp dir race

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5730-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2755.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2755
    
----
commit f184776f8ee89fa365db08569714eb2e5b04ec63
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-09-26T14:49:19Z

    IGNITE-5730 .NET: Fix ignite.jni.dll temp dir race

----
;;;","26/Sep/17 15:35;ptupitsyn;Done, waiting for TeamCity.;;;","27/Sep/17 09:21;ptupitsyn;Fixed in master (directory creation time check added, moved cleanup to a separate thread): {{7f82340189bebac7bfd5f935eb3531035a6f9acb}}.;;;","27/Sep/17 09:22;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2755
;;;","27/Sep/17 11:59;ptupitsyn;Commit {{7f82340189bebac7bfd5f935eb3531035a6f9acb}} has been reverted (wrong branch merged): {{690694cad1f00c796631f6288b58248a0cb409b1}}

Proper branch merged to master: {{fca47345fae7adf80a1d40cc6c4c711924df2de2}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IgniteCacheProxy instances from ""with..."" methods are not reusable",IGNITE-5729,13086202,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,jokser,jokser,11/Jul/17 09:53,11/Dec/18 10:05,14/Jul/23 06:20,27/Jul/17 07:42,2.1,,,,,2.3,,cache,,,,0,,,,"On cache restart all IgniteCacheProxy instances must be reset in order to reuse them.
But bunch of methods in IgniteCache interface including withKeepBinary create new instances of proxy for each call and these instances are not reset on cache restart. 
E.g. it leads to CacheStoppedException when reusing them after restoring from snapshot.",,agoncharuk,dpavlov,githubbot,jokser,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 11 10:05:03 UTC 2018,,,,,,,,,,"0|i3hd2v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/17 11:20;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/2293

    IGNITE-5729 Reworked and cleaned up IgniteCacheProxy

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5729

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2293.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2293
    
----
commit 707c454ad9c3b4132e2d0a20d15dc1eb2ed295b0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-12T07:53:46Z

    Corrected fix for REST processor wrt authentication

commit f3828261b30c12d5aa181914033afe46c787f87e
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-07-12T07:57:50Z

    IGNITE-5639 Added duration for empty result set.

commit 5859b192ba28d53e1bccb01ce3005821e26b5347
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T09:46:42Z

    AI 2.1 release notes.

commit 8afdc7baae73ecba67e0735baa97d03f2c4fc715
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-12T10:51:43Z

    Removed CacheBinaryAutoStoreExample and relevant bean ""h2-example-db"" from example-default.xml because example duplicated existing CacheAutoStoreExample.

commit c6ee085b8a1321ce7fa15f8adf74fa7a01f7a445
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-12T11:22:03Z

    Fixed page acquire during checkpoint

commit 0cb6ac06adddd43ac72c707b29d7216bd4cb711a
Author: Oleg Ostanin <oostanin@gridgain.com>
Date:   2017-07-12T12:57:40Z

    IGNITE-5740 - Added transaction load timing benchmark

commit 3787181310597b7a6e633e745ba08209abd038a9
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-12T15:28:57Z

    More verbose logging

commit 21964fb5f6fb6fee891283332202cbc9ed5ac3f3
Author: Dmitry Pavlov <dpavlov.spb@gmail.com>
Date:   2017-07-12T15:59:10Z

    Optimized snapshot progress tracking

commit 689b1b6e9c3e723cf394c7ff2427097b21d96ce3
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T07:12:01Z

    IGNITE-5479 - Cleanup public API for PersistentStoreConfiguration

commit 3c1749da82e663500e45a34369eac48dbbc62bdc
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-13T08:25:55Z

    IGNITE-5744 Ignore non user caches when automatically choosing a queryable cache inside JDBC driver

commit f73a6eff4232c60e0eb16f0cbefdd57a3eed2386
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-13T11:14:58Z

    IGNITE-5729 Split IgniteCacheProxy. Fixed unhandled CacheStoppedException during exchange init.

commit d4f489b4a0d38c919ab0db28b255a904fa39d5cc
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-13T11:19:05Z

    Merge branch 'ignite-2.1.2' into ignite-5729
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheProxy.java

----
;;;","19/Jul/17 17:12;jokser;Refactoring is ready.

Branch is ignite-5729
Ignite TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2293%2Fhead#;;;","27/Jul/17 07:42;agoncharuk;Merged;;;","27/Jul/17 21:03;dpavlov;Hi, could you please check tests from .Net:
http://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_IgnitePlatformNet&branch_Ignite20Tests=pull%2F2296%2Fhead&tab=buildTypeStatusDiv
?;;;","28/Jul/17 10:20;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/2356

    IGNITE-5729 Memoize GatewayProtectedProxy

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5729-reference-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2356.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2356
    
----
commit 00babb4bcb0d432ae614a3cb98dfa7a61dfdbc1c
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-25T12:50:43Z

    IGNITE-5829 Linked TODO with ticket.

commit 243913ee24fbc09d0ae5469bb1d99926b1a8e8d5
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2017-07-25T13:50:35Z

    IGNITE-5747 GridCommonAbstractTest.startGridsMultiThreaded works very slowly if persistence is enabled - Fixes #2294.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 85f17027d0ca7cfa6dfaa3711ad8b4a7a6eb1e79
Author: Aleksandr_Meterko <aleksandr_meterko@epam.com>
Date:   2017-07-19T12:55:15Z

    IGNITE-5781 Visor throws ClassCastException if cache store implementation is other than CacheJdbcPojoStore
    Signed-off-by: Konstantin Boudnik <cos@apache.org>
    (cherry picked from commit 02e2507)

commit 7915fd88b1f3e399777bbc46f4e5625b68fb90c9
Author: Jokser <jokserfn@gmail.com>
Date:   2017-07-26T09:08:03Z

    IGNITE-5830 - Introduce cache start and stop order during cluster activation

commit a790dface730eae11f98c6b6f74232f0ec32cf6b
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-07-26T10:41:33Z

    Failing flaky test with link to ticket number

commit e001a063a9c2260c4732093e54c332cb8af33b0b
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2017-07-26T13:37:45Z

    new utility methods for working with files

commit 50c5b1dfc1cf182f42bd36dc5d5757f61180ff36
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2017-07-26T13:38:08Z

    small improvements in abstract tests
    -checking ""checkTopology"" flag in startGridsMultiThreaded
    -auto cluster activation in startGridsMultiThreaded

commit 586a96eaf4570f4f2020041cfef07550025421d8
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-07-26T15:49:41Z

    IGNITE-5174: list only server nodes for specified topology version
    
    Fixes #2312

commit b49469f469e3ad9f64d009a474b6e09686ec9203
Author: Dmitriy Shabalin <dshabalin@gridgain.com>
Date:   2017-07-27T03:39:54Z

    IGNITE-5835 Web Console: Highlight active element in select input.

commit 995258f9a326bb5a08b1e004d92e2760c25f20c0
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-07-27T04:06:52Z

    IGNITE-5767 Web Console: Changed mapping for BINARY SQL type to byte[].

commit bcbb10d4ed72c3ac2cd8149bb5cd148f63e95725
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-07-27T06:44:34Z

    IGNITE-5761 Add correct message when entries are not mapped to at least one node and avoid hang on rollback

commit 5172541f71e9878b4cc9df18580cdf1863a5820b
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-27T07:41:41Z

    IGNITE-5729 - IgniteCacheProxy instances from with() methods are not reusable after cache restart

commit 9825eaa35c5c95485f7d7c3b60de7d0ca47dad23
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-27T07:42:30Z

    IGNITE-5761 - Fixed header license

commit 004e5aa7df72a16efb02e7500b56475916515ba7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-27T08:42:09Z

    IGNITE-5729 - Removed RendezvousAffinityFunction with extra partitions in GridCacheAbstractSelfTest

commit be5a9eaf77877b02a46f30730cd6d8e1e3919f41
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-27T10:02:59Z

    GG-12485 added test to verify issue on 8.1.x version

commit a07d7b91d148df8dfd7c4bbad2a63f8dea97b036
Author: Alexandr Kuramshin <ein.nsk.ru@gmail.com>
Date:   2017-07-27T12:04:42Z

    IGNITE-4767: rollback exception hides the origin exception (e.g. commit): Suppressing or logging rollback exceptions instead of hiding the origin exception
    Fixes #1599

commit 98a524067b2d2349c558256ee38efdf81e0ba7ff
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-27T16:39:51Z

    IGNITE-5771: Added Ignite::SetActive() for C++
    
    (cherry picked from commit 47fea40)

commit 6031ed85aa0242e8a56dee43c14c73bcafa7fab7
Author: vsisko <vsisko@gridgain.com>
Date:   2017-07-28T02:54:07Z

    GG-12544 Removed limitation for stacktrace showing.

commit 9d9e472e679ac85e07767623bb314e8cea2ea7d8
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-28T10:21:04Z

    IGNITE-5729 Memoize GatewayProtectedProxy in CacheProxyImpl.

----
;;;","11/Dec/18 10:04;githubbot;Github user Jokser closed the pull request at:

    https://github.com/apache/ignite/pull/2356
;;;","11/Dec/18 10:05;githubbot;Github user Jokser closed the pull request at:

    https://github.com/apache/ignite/pull/2293
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node failed listener for TcpCommunicationSpi should be called first,IGNITE-5727,13086185,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,11/Jul/17 08:17,28/Aug/17 16:41,14/Jul/23 06:20,12/Jul/17 06:01,,,,,,2.3,,general,,,,0,,,,"Ignite components rely on assumption that if node failed then it is not possible to send message to this node (TcpCommunicationSpi.send should throw an exception). If it was possible to send event and after this node failed, then components' node_left listener will be called. But actually this will work only if component's node_left listener is called after TcpCommunicationSpi's listener. Need change node_left listener's order so that  TcpCommunicationSpi's listener is always called first.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 12 06:01:51 UTC 2017,,,,,,,,,,"0|i3hcz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Jul/17 06:01;sboikov;Fixed in master (b95f76f8a0a3a7e920f78f20b3d814112fc6d522).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Duplicate dependencies in POM,IGNITE-5726,13086143,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,11/Jul/17 03:57,13/Jul/17 09:26,14/Jul/23 06:20,12/Jul/17 04:35,2.1,,,,,2.1,,wizards,,,,0,,,,"Import models from database
Look at POM on Summary page
",,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 03:57;pkonstantinov;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/12876556/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 13 09:26:19 UTC 2017,,,,,,,,,,"0|i3hcpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 03:57;pkonstantinov;!screenshot-1.png!;;;","11/Jul/17 10:03;anovikov;Removed duplication.;;;","13/Jul/17 09:26;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Adapt TracerTest for TC builds.,IGNITE-5725,13085956,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oignatenko,chief,chief,10/Jul/17 14:11,16/Jan/18 10:37,14/Jul/23 06:20,16/Jan/18 10:36,,,,,,2.4,,build,ml,,,1,continuous_integration,ml,technical_debt,"Currently [TracerTest|https://github.com/apache/ignite/blob/master/modules/ml/src/test/java/org/apache/ignite/ml/math/TracerTest.java] runs browser when it invokes {{Tracer.showHtml}} but we don`t have even X11 on TeamCity. So we need to decide - run add possibility to run browser on TC, change tests and abstain of calling [Desktop.getDesktop().browse|https://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html#browse(java.net.URI)] during TC build or just ignore this test for TC build.",,chief,githubbot,oignatenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7332,,"09/Jan/18 19:11;oignatenko;TracerTest.java;https://issues.apache.org/jira/secure/attachment/12905323/TracerTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 16 10:37:59 UTC 2018,,,,,,,,,,"0|i3hbkf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 14:19;oignatenko;* One option to consider is to establish a dedicated Maven profile for execution at TeamCity (per my brief check there is no such profile yet) and after that configure surefire plugin to skip these tests when TC profile is activated as described eg here: [How to Split JUnit Tests in a Continuous Integration Environment|https://semaphoreci.com/community/tutorials/how-to-split-junit-tests-in-a-continuous-integration-environment]. It looks less desirable compared to making it just possible to normally run these tests at TC though, because skipping tests is less safe than letting them run.

* Another option (possibly preferable because it doesn't require tweaking Teamcity nor messing with maven profiles) is to modify involved Tracer methods to check [Desktop#isDesktopSupported|https://docs.oracle.com/javase/7/docs/api/java/awt/Desktop.html#isDesktopSupported()] and if it returns false delegate / fallback to respective {{showAscii}} methods to output to console.

-----
*Update* based on studying changes made to Tracer per IGNITE-7332 an option better than above two is to check desktop and browser support within test and adapt test expectation based on results of that check, that is: if there is no support then test should expect appropriate exception while if there is a support then test should expect successful execution of invoked Tracer methods.;;;","09/Jan/18 19:16;oignatenko;drafted fix in [branch ignite-5725|https://github.com/gridgain/apache-ignite/tree/ignite-5725] - this is expected to merge to master after IGNITE-7332 since it involves dependent code. Also, just in case if simpler merge is needed attached the only file that needs to change: [^TracerTest.java].;;;","12/Jan/18 10:06;githubbot;GitHub user oignatenko opened a pull request:

    https://github.com/apache/ignite/pull/3363

    IGNITE-5725 Adapt TracerTest for TC builds.

    - implemented adaptive testing approach
    -- verified with diffs overview, clean rebuild and execution of unit tests in both desktop and headless environments

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5725-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3363.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3363
    
----
commit 57ac99736f0748eab79bc408111dfb9e2d077e2e
Author: Oleg Ignatenko <oignatenko@...>
Date:   2018-01-12T10:02:20Z

    IGNITE-5725 Adapt TracerTest for TC builds.
    - implemented adaptive testing approach
    -- verified with diffs overview, clean rebuild and execution of unit tests in both desktop and headless environments

----
;;;","16/Jan/18 10:36;chief;reviewed and merged;;;","16/Jan/18 10:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3363
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache entries stay in onheap after scan query execution for OFFHEAP_TIRED cache with expiry policy,IGNITE-5722,13085918,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,10/Jul/17 12:10,28/Aug/17 16:37,14/Jul/23 06:20,14/Jul/17 13:13,1.0,,,,,2.3,,cache,,,,0,,,,"

Cache entries stay in onheap after scan query execution for OFFHEAP_TIRED cache with expiry policy.

In PeekValueExpiryAwareIterator.value() method the entry should be touched after unswap.

",,agura,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 14 13:13:57 UTC 2017,,,,,,,,,,"0|i3hbbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 13:56;agura;Fixed https://github.com/apache/ignite/pull/2281
Waiting for TC.;;;","14/Jul/17 13:13;agura;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Forcible node drop makes cluster instable in some cases.,IGNITE-5718,13085507,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,07/Jul/17 13:16,08/Feb/18 09:14,14/Jul/23 06:20,26/Jul/17 14:29,2.0,,,,,2.3,,general,,,,0,,,,"Communication SPI can drop nodes from topology due to short network issues regardless failureDetectionTimout.
Also, we throw IgniteCheckedExcpetion in safeHandshake method without any retry
if remote node close connection (possibly by timeout) due to short network issues. ",,amashenkov,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7648,,,,,,IGNITE-6700,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Sep 08 10:23:24 UTC 2017,,,,,,,,,,"0|i3h8t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 13:21;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2260

    IGNITE-5718: Forcible node drop makes cluster instable in some cases.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5718

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2260.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2260
    
----
commit 5574c14d166173b73f2892ca1228e3c2da194238
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-07T13:01:44Z

    Forcible node drop makes cluster unstable in some cases. Disable forcible node drop by default.

commit 0729eb909db9ea4d253e32f79aba95597f6e1016
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-07T13:02:21Z

    Fix tests.

----
;;;","08/Sep/17 10:23;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/2260
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Negative field offset values can be observed on 2-byte offsets,IGNITE-5716,13085450,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,07/Jul/17 08:50,07/Jul/17 16:30,14/Jul/23 06:20,07/Jul/17 16:30,1.9,,,,,2.1,,platforms,,,,0,.NET,,,"{{BinaryObjectSchemaSerializer.WriteSchema}} uses {{ushort.MaxValue}} as a boundary for 2-byte offsets. {{ReadSchema}} uses {{ReadShort}}, which returns negative offsets for anything above {{short.MaxValue}}.

* Ensure that all offsets are always non-negative (use uint in {{BinaryObjectSchemaField}} probably)
* Check how Java handles this
* Add tests for all edge cases",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 07 16:29:38 UTC 2017,,,,,,,,,,"0|i3h8gf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 16:29;ptupitsyn;Fixed in {{ignite-2.1}}: {{82e5f8a6553323e793c01c54e24dda6d47188ce6}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: It should be possible to execute SQL queries over cache with no indexed types,IGNITE-5711,13085434,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,vozerov,vozerov,07/Jul/17 07:31,13/Jul/17 03:58,14/Jul/23 06:20,11/Jul/17 12:24,,,,,,2.1,,sql,,,,0,,,,,,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5744,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 12 06:50:37 UTC 2017,,,,,,,,,,"0|i3h8cv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 15:32;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2264

    IGNITE-5711 Allowed to run queries on caches without query entities.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5711

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2264.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2264
    
----
commit 817c102d46abea236199a7f161a6f18403014f99
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-07T15:30:09Z

    IGNITE-5711 Allowed to run queries on caches without query entities.

----
;;;","10/Jul/17 10:43;vozerov;[~al.psc], fix looks good to me. But:
1) Please add new tests to JDBC suite.
2) Re-run SQL tests on TC after that.;;;","11/Jul/17 10:38;ptupitsyn;Fixed TestIndexingDisabledError in .NET, other failing tests are not related (will be fixed in 2.1.2);;;","12/Jul/17 06:50;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2264
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: H2 version in pom file depends from Ignite version,IGNITE-5710,13085404,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,vsisko,vsisko,07/Jul/17 04:35,11/Jul/17 03:59,14/Jul/23 06:20,11/Jul/17 03:59,2.0,,,,,2.1,,wizards,,,,0,,,,1.4.191 for 1.x version and 1.4.195 for 2.x version.,,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 03:59:08 UTC 2017,,,,,,,,,,"0|i3h867:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 08:20;vsisko;Implemented selection of h2 version depend to Ignite version.;;;","07/Jul/17 08:32;vsisko;Please test version of H2 in case when cache store configured, or JDBC discovery configured, or checkpoint SPI configured.;;;","11/Jul/17 03:59;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some nodes have partitionUpdateCounter == 0 after rebalancing,IGNITE-5701,13084857,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ilantukh,ilantukh,05/Jul/17 14:48,10/Jul/17 08:52,14/Jul/23 06:20,10/Jul/17 08:52,2.1,,,,,2.1,,general,,,,0,,,,,,agoncharuk,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 10 08:52:40 UTC 2017,,,,,,,,,,"0|i3h4tr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 14:50;ilantukh;Extended IgniteWalHistoryReservationsTest to reproduce this issue.;;;","07/Jul/17 13:58;ilantukh;https://github.com/apache/ignite/pull/2261;;;","10/Jul/17 08:52;agoncharuk;Merged to ignite-2.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console should be configurable for IPv4 connections,IGNITE-5697,13084700,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,anovikov,endian675,endian675,05/Jul/17 07:35,12/Jan/18 02:15,14/Jul/23 06:20,12/Jan/18 02:15,2.0,,,,,2.3,,wizards,,,,0,,,,"When an IPv6 network interface is available, NodeJS will always prefer that to an IPv4 interface.  This causes problems if IPv6 is not fully operational on the network.  

This fix will add the ability to specify that IPv4 should be used.",,anovikov,kuaw26,michael.griggs@gridgain.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 12 02:14:47 UTC 2018,,,,,,,,,,"0|i3h3uv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 07:39;michael.griggs@gridgain.com;For the implementation we can either

1.  Make an IPv4/IPv6 flag in configuration.
or
2.  Allow the host parameter to be configured, so that the server can be bound to any specific IP address on the machine.
;;;","05/Jul/17 07:43;michael.griggs@gridgain.com;There appears to be a bug in NodeJS such that when \[1\] is called, a Server object is returned by when \[2\] is called a null value is returned.

Therefore a workaround will be necessary when passing the server object to the ""onListening"" function.

\[1\]: {{server.listen(3000);}}

\[2\]: {{server.listen(3000,'0.0.0.0');}}

;;;","05/Jul/17 15:15;anovikov;According this [documentation|https://nodejs.org/api/net.html#net_server_listen_port_host_backlog_callback] <net.Server> should be returned when [2].
[~michael.griggs@gridgain.com], on which NodeJS version you see such behavior?;;;","05/Jul/17 15:19;michael.griggs@gridgain.com;[~anovikov]

mgriggs@ubuntu-16:~$ nodejs -v
v6.11.0
;;;","12/Jan/18 02:14;anovikov;This problem was fixed by adding host parameter in settings: {code}srv.listen(settings.server.port, settings.server.host){code}
By default settings.server.host = '127.0.0.1', settings.server.port = 3000;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FlinkIgniteSinkSelfTest is failing due to conflicting default test timeout and default flush frequency,IGNITE-5695,13084635,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,samaitra,samaitra,samaitra,04/Jul/17 22:52,06/Jul/17 04:39,14/Jul/23 06:20,06/Jul/17 04:39,2.0,,,,,2.1,,streaming,,,,0,,,,"FlinkIgniteSinkSelfTest is failing due to conflicting default test timeout and default flush frequency.

Caused by: class org.apache.ignite.spi.IgniteSpiException: Thread has been interrupted.
	at org.apache.ignite.spi.discovery.tcp.ClientImpl.spiStart(ClientImpl.java:275)
	at org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi.spiStart(TcpDiscoverySpi.java:1834)
	at org.apache.ignite.internal.managers.GridManagerAdapter.startSpi(GridManagerAdapter.java:297)
	... 26 more
Caused by: java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1302)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)
	at org.apache.ignite.spi.discovery.tcp.ClientImpl.spiStart(ClientImpl.java:267)
	... 28 more
[2017-07-04 16:49:24,883][WARN ][test-runner-#37%flink.FlinkIgniteSinkSelfTest%][IgniteKernal] Grid startup routine has been interrupted (will rollback).
[2017-07-04 16:49:24,947][INFO ][test-runner-#37%flink.FlinkIgniteSinkSelfTest%][IgniteKernal] ",,githubbot,samaitra,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 06 04:30:28 UTC 2017,,,,,,,,,,"0|i3h3gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 22:55;githubbot;GitHub user samaitra opened a pull request:

    https://github.com/apache/ignite/pull/2241

    IGNITE-5695 FlinkIgniteSinkSelfTest is failing due to conflicting def…

    …ault test timeout and default flush frequency

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/samaitra/ignite IGNITE-5695

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2241.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2241
    
----
commit 38f3e947f47ed0cdd876ec16e3bba3763400a8bc
Author: samaitra <saikat.maitra@gmail.com>
Date:   2017-07-04T22:55:06Z

    IGNITE-5695 FlinkIgniteSinkSelfTest is failing due to conflicting default test timeout and default flush frequency

----
;;;","06/Jul/17 03:58;shroman;Looks good.;;;","06/Jul/17 04:23;samaitra;Thank you [~roman_s];;;","06/Jul/17 04:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2241
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteAtomicLongChangingTopologySelfTest.testClientQueueCreateCloseFailover() fails sometimes,IGNITE-5694,13084606,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ilantukh,ilantukh,04/Jul/17 17:24,27/Jul/17 20:03,14/Jul/23 06:20,10/Jul/17 11:05,2.1,,,,,2.1,,data structures,,,,0,MakeTeamcityGreenAgain,test-fail,,,,agoncharuk,ilantukh,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5681,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 10 08:59:42 UTC 2017,,,,,,,,,,"0|i3h3a7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 18:00;ilantukh;https://github.com/apache/ignite/pull/2240;;;","05/Jul/17 12:07;sboikov;[~ilantukh],

did TeamCity tests pass? Please provide link to results.;;;","05/Jul/17 15:51;ilantukh;[~sboikov],
Here it is: http://172.25.1.150:8111/viewLog.html?buildId=706492&tab=queuedBuildOverviewTab
All failed tests also fail in ignite-2.1 branch.;;;","06/Jul/17 10:20;sboikov;Looks good to me.

Thansk;;;","10/Jul/17 08:59;agoncharuk;Merged to ignite-2.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgnitePartitionedSemaphoreSelfTest.testSemaphore() sometimes fails,IGNITE-5693,13084603,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ilantukh,ilantukh,04/Jul/17 17:02,27/Oct/17 07:20,14/Jul/23 06:20,05/Jul/17 11:58,2.1,,,,,2.1,,data structures,,,,0,MakeTeamcityGreenAgain,test-fail,,,,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 17:25:33 UTC 2017,,,,,,,,,,"0|i3h39j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 17:25;ilantukh;https://github.com/apache/ignite/pull/2239;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgnitePdsCacheRebalancingAbstractTest suite hangs on TC,IGNITE-5692,13084585,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,jokser,jokser,jokser,04/Jul/17 15:13,27/Jul/17 20:04,14/Jul/23 06:20,05/Jul/17 18:36,2.1,,,,,2.1,,cache,persistence,,,0,MakeTeamcityGreenAgain,test-fail,,"Exact tests are testTopologyChangesWithConstantLoad and testTopologyChangesWithConstantLoadExplicitTx in IgnitePdsTxCacheRebalancingTest

Cause of hanging is unfinished partition map exchange:

{noformat}
[2017-07-04 18:08:31,112][WARN ][test-runner-#1%persistence.IgnitePdsTxCacheRebalancingTest%][root] Waiting for topology map update [igniteInstanceName=persistence.IgnitePdsTxCacheRebalancingTest3, cache=indexed, cacheId=1943292145, topVer=AffinityTopologyVersion [topVer=13, minorTopVer=0], p=0, affNodesCnt=2, ownersCnt=1, affNodes=[c9c01bd9-e15d-4b62-86be-f1a183800003, de98b611-fc6d-4149-857c-9a3253100004], owners=[c9c01bd9-e15d-4b62-86be-f1a183800003], topFut=GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=b71b30b7-2df9-4f35-aeaf-cefd0e900005, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47505], discPort=47505, order=12, intOrder=9, lastExchangeTime=1499180827453, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], topVer=13, nodeId8=c9c01bd9, msg=Node left: TcpDiscoveryNode [id=b71b30b7-2df9-4f35-aeaf-cefd0e900005, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47505], discPort=47505, order=12, intOrder=9, lastExchangeTime=1499180827453, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], type=NODE_LEFT, tstamp=1499180845215], crd=TcpDiscoveryNode [id=1a513139-cfce-48c9-aab0-71b7ecb00000, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1499180791749, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=13, minorTopVer=0], nodeId=b71b30b7, evt=NODE_LEFT], added=true, initFut=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=true, hash=1444700749], init=true, lastVer=null, partReleaseFut=GridCompoundFuture [rdc=null, initFlag=1, lsnrCalls=4, done=true, cancelled=false, err=null, futs=[true, true, true, true]], exchActions=null, affChangeMsg=null, skipPreload=false, clientOnlyExchange=false, initTs=1499180845227, centralizedAff=true, changeGlobalStateE=null, exchangeOnChangeGlobalState=false, forcedRebFut=null, done=true, evtLatch=0, remaining=[89a60809-876d-4ea7-845d-a41ddea00002, de98b611-fc6d-4149-857c-9a3253100004, 1a513139-cfce-48c9-aab0-71b7ecb00000, b2e733e4-35e2-4860-ae90-d0a8b0a00001], super=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=AffinityTopologyVersion [topVer=13, minorTopVer=0], hash=1954469014]], locNode=TcpDiscoveryNode [id=c9c01bd9-e15d-4b62-86be-f1a183800003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=10, intOrder=7, lastExchangeTime=1499180911088, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false]]
{noformat}
",,dpavlov,jokser,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 15:17;jokser;Ignite_2.0_Tests_Ignite_PDS_Indexing_132.log;https://issues.apache.org/jira/secure/attachment/12875646/Ignite_2.0_Tests_Ignite_PDS_Indexing_132.log","04/Jul/17 15:17;jokser;Ignite_2.0_Tests_Ignite_PDS_Indexing_133.log;https://issues.apache.org/jira/secure/attachment/12875647/Ignite_2.0_Tests_Ignite_PDS_Indexing_133.log",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 15:20:15 UTC 2017,,,,,,,,,,"0|i3h35j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 15:20;dpavlov;[~Jokser], I suggest to use label test-fail for all issues created for tests stabilization.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix SparseDistributedMatrixTest::testCacheBehaviour crash,IGNITE-5688,13084563,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amalykh,amalykh,amalykh,04/Jul/17 14:09,27/Jul/17 20:04,14/Jul/23 06:20,11/Jul/17 04:31,2.0,,,,,2.1,,ml,,,,0,MakeTeamcityGreenAgain,test-fail,,SparseDistributedMatrixTest::testCacheBehaviour crashed because of wrong checks of cache behaviour.,,amalykh,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 09:28:56 UTC 2017,,,,,,,,,,"0|i3h30n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 12:57;githubbot;GitHub user artemmalykh opened a pull request:

    https://github.com/apache/ignite/pull/2272

    IGNITE-5688 Fix SparseDistributedMatrixTest::testCacheBehaviour crash

    Fixed tests of cache behaviour for sparse distributed matrix.
    Also code style fixes are done for various ml-module file.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5688

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2272.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2272
    
----
commit ce323a7550ee2b3e0b242abce0842ebcebb09b83
Author: artemmalykh <amalykh@gridgain.com>
Date:   2017-07-10T12:50:10Z

    IGNITE-5688 Fix SparseDistributedMatrixTest::testCacheBehaviour crash

----
;;;","10/Jul/17 13:02;amalykh;Fixed tests by changing test criterion from cache::containsKeys/!cache::containsKeys to cache::invoke(k, lambda calculating size of corresponding row) should give row size for all rows when matrix is expected to be present in cache and cache::invoke(k, lambda getting row) should return for all rows null when matrix is not expected to be in the cache.;;;","10/Jul/17 13:03;amalykh;[~chief] Please, look into the pull request.;;;","10/Jul/17 14:27;chief;[~amalykh] looks ok for me.;;;","11/Jul/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2272
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Endless partition eviction during node shutdown,IGNITE-5686,13084505,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,agoncharuk,agoncharuk,04/Jul/17 10:45,01/Aug/19 22:06,14/Jul/23 06:20,11/Jul/17 08:52,2.1,,,,,2.1,,cache,,,,0,,,,"Observed the following behavior on TC:
A node cannot stop because system threads are continuously trying to clean partitions.

http://ci.ignite.apache.org/viewLog.html?buildId=702633&buildTypeId=Ignite20Tests_IgniteRdd&tab=buildResultsDiv

Attached is a thread dump from the test",,agoncharuk,amashenkov,githubbot,gvvinblade,,,,,,,,,"dspavlov commented on issue #2267: IGNITE-5686
URL: https://github.com/apache/ignite/pull/2267#issuecomment-517475305
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2267: IGNITE-5686
URL: https://github.com/apache/ignite/pull/2267
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 10:46;agoncharuk;dump.txt;https://issues.apache.org/jira/secure/attachment/12875613/dump.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 10 15:51:11 UTC 2017,,,,,,,,,,"0|i3h2nr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 14:26;gvvinblade;{noformat}
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.reserve(GridDhtLocalPartition.java:542)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.scanIterator(GridCacheQueryManager.java:853)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.scanQueryLocal(GridCacheQueryManager.java:1452)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter$ScanQueryFallbackClosableIterator.init(GridCacheQueryAdapter.java:717)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter$ScanQueryFallbackClosableIterator.<init>(GridCacheQueryAdapter.java:680)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter$ScanQueryFallbackClosableIterator.<init>(GridCacheQueryAdapter.java:624)
	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryAdapter.executeScanQuery(GridCacheQueryAdapter.java:541)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy$1.applyx(IgniteCacheProxy.java:561)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy$1.applyx(IgniteCacheProxy.java:559)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2293)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:558)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:799)
	at org.apache.ignite.spark.IgniteRDD.compute(IgniteRDD.scala:65)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)
	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)
	at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)
	at org.apache.spark.scheduler.Task.run(Task.scala:99)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:282)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
{noformat};;;","07/Jul/17 14:30;gvvinblade;The stack trace shows that partition is reserved for scan query invocation, but seems that nobody closes the query;;;","10/Jul/17 09:45;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2267

    IGNITE-5686

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5686

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2267.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2267
    
----
commit 0761c41a04ccfc4cee1d055753adca3e60388d94
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-07-10T09:44:10Z

    IGNITE-5686 Endless partition eviction during node shutdown

----
;;;","10/Jul/17 11:55;gvvinblade;[~agoncharuk], could you look at the changes?;;;","10/Jul/17 13:51;amashenkov;[~gvvinblade],

I've looked at a code and have a question.
Why IgniteQueryIterator doesn't implements java.lang.AutoCloseable (or Closeable)?

AFAIK in SQL module we have a cursors that implement those interfaces and have no problems with iterators closing.
Would it be workable solution if we'll close cursor together with iterator instead of using a listeners?;;;","10/Jul/17 14:34;gvvinblade;{{IgniteQueryIterator}} implements {{scala.Iterator}} and is used inside Spark. Spark doesn't expect {{AutoClosable}} iterator and isn't responsible for closing it. Compute operation happens only on terminal action ant it's guaranteed that {{TaskContext}} will be available, so, we can register a callback to clean resources after operation finishes.;;;","10/Jul/17 14:37;gvvinblade;Internally {{Iterator}} is closed on {{QueryCursor}} close, so, it's enough to close cursor only.;;;","10/Jul/17 15:05;amashenkov;[~gvvinblade],
Got it. I'm ok with a fix.

What about IgniteSqlRDD.sql and IgniteSqlRDD.objectSql method?
Looks like they have same issues and return cursors that will never been closed. 
So, we have to create ticket for this, aren't we?;;;","10/Jul/17 15:51;gvvinblade;Actually both methods return another {{RDD}} with its own {{compute}} method. I've put this logic there as well.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC: Prepared statement shouldn't clear params after query execution,IGNITE-5685,13084486,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,04/Jul/17 10:02,04/Jul/17 14:51,14/Jul/23 06:20,04/Jul/17 14:51,1.0,,,,,2.1,,jdbc,,,,0,,,,"{{JdbcPreparedStatement}} implementations (Java client, Ignite client node based and thin JDBC) clears query parameters in {{executeXxx}} methods after query execution. It's wrong behavior because {{PreparedStatement}} allows repeatable use.",,agura,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 14:51:44 UTC 2017,,,,,,,,,,"0|i3h2jj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 14:51;agura;Merged into ignite-2.1 branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteClientCacheStartFailoverTest.testClientStartLastServerFails* fails,IGNITE-5684,13084466,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,vozerov,vozerov,04/Jul/17 08:53,11/Dec/18 10:05,14/Jul/23 06:20,11/Jul/17 08:28,,,,,,2.1,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,"This is a regression appeared during persistent store migration. Affected tests:
- testClientStartLastServerFailsTx
- testClientStartLastServerFailsAtomic

{code}
[2017-07-04 11:46:46,937][ERROR][test-runner-#566%cache.IgniteClientCacheStartFailoverTest%][GridDhtColocatedCache] <default> Failed to rollback transaction (cache may contain stale locks): GridNearTxLocal [mappings=IgniteTxMappingsSingleImpl [mapping=null], nearLocallyMapped=false, colocatedLocallyMapped=false, needCheckBackup=null, hasRemoteLocks=false, thread=test-runner-#566%cache.IgniteClientCacheStartFailoverTest%, mappings=IgniteTxMappingsSingleImpl [mapping=null], super=GridDhtTxLocalAdapter [nearOnOriginatingNode=false, nearNodes=[], dhtNodes=[], explicitLock=false, super=IgniteTxLocalAdapter [completedBase=null, sndTransformedVals=false, depEnabled=false, txState=IgniteTxImplicitSingleStateImpl [init=true, recovery=false], super=IgniteTxAdapter [xidVer=GridCacheVersion [topVer=110637994, order=1499158001738, nodeOrder=4], writeVer=null, implicit=true, loc=true, threadId=696, startTime=1499158006925, nodeId=3088492b-e01e-4bd0-b06b-52e088a00003, startVer=GridCacheVersion [topVer=110637994, order=1499158001738, nodeOrder=4], endVer=null, isolation=READ_COMMITTED, concurrency=OPTIMISTIC, timeout=0, sysInvalidate=false, sys=false, plc=2, commitVer=null, finalizing=NONE, invalidParts=null, state=ROLLED_BACK, timedOut=false, topVer=AffinityTopologyVersion [topVer=5, minorTopVer=0], duration=0ms, onePhaseCommit=false], size=1]]]
class org.apache.ignite.IgniteCheckedException: Failed to commit transaction: GridNearTxLocal[id=a48b7cc0d51-00000000-0698-33aa-0000-000000000004, concurrency=OPTIMISTIC, isolation=READ_COMMITTED, state=ROLLED_BACK, invalidate=false, rollbackOnly=true, nodeId=3088492b-e01e-4bd0-b06b-52e088a00003, duration=0]
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxFinishFuture.finish(GridNearTxFinishFuture.java:423)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.rollbackNearTxLocalAsync(GridNearTxLocal.java:3255)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal$10.applyx(GridNearTxLocal.java:2401)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal$10.applyx(GridNearTxLocal.java:2383)
	at org.apache.ignite.internal.util.lang.IgniteClosureX.apply(IgniteClosureX.java:38)
	at org.apache.ignite.internal.util.future.GridFutureChainListener.applyCallback(GridFutureChainListener.java:78)
	at org.apache.ignite.internal.util.future.GridFutureChainListener.apply(GridFutureChainListener.java:70)
	at org.apache.ignite.internal.util.future.GridFutureChainListener.apply(GridFutureChainListener.java:30)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:352)
	at org.apache.ignite.internal.util.future.GridFutureAdapter$ChainFuture.<init>(GridFutureAdapter.java:556)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.chain(GridFutureAdapter.java:357)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.optimisticPutFuture(GridNearTxLocal.java:2382)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.putAsync0(GridNearTxLocal.java:623)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.putAsync(GridNearTxLocal.java:386)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$21.op(GridCacheAdapter.java:2337)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$21.op(GridCacheAdapter.java:2335)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(GridCacheAdapter.java:4037)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put0(GridCacheAdapter.java:2335)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2316)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.put(GridCacheAdapter.java:2293)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.put(IgniteCacheProxy.java:1501)
	at org.apache.ignite.internal.processors.cache.IgniteClientCacheStartFailoverTest$4.call(IgniteClientCacheStartFailoverTest.java:220)
	at org.apache.ignite.internal.processors.cache.IgniteClientCacheStartFailoverTest$4.call(IgniteClientCacheStartFailoverTest.java:218)
	at org.apache.ignite.testframework.GridTestUtils.assertThrows(GridTestUtils.java:296)
	at org.apache.ignite.internal.processors.cache.IgniteClientCacheStartFailoverTest.clientStartLastServerFails(IgniteClientCacheStartFailoverTest.java:218)
	at org.apache.ignite.internal.processors.cache.IgniteClientCacheStartFailoverTest.testClientStartLastServerFailsTx(IgniteClientCacheStartFailoverTest.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1997)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1912)
	at java.lang.Thread.run(Thread.java:745)
{code}

{code}
class org.apache.ignite.IgniteException: Timeout of waiting for topology map update [igniteInstanceName=cache.IgniteClientCacheStartFailoverTest3, cache=default, cacheId=1544803905, topVer=AffinityTopologyVersion [topVer=6, minorTopVer=1], p=0, readVer=AffinityTopologyVersion [topVer=6, minorTopVer=1], locNode=TcpDiscoveryNode [id=3088492b-e01e-4bd0-b06b-52e088a00003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:0], discPort=0, order=4, intOrder=0, lastExchangeTime=1499158003550, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=true]]

	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:698)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:517)
	at org.apache.ignite.internal.processors.cache.IgniteClientCacheStartFailoverTest.clientStartLastServerFails(IgniteClientCacheStartFailoverTest.java:237)
	at org.apache.ignite.internal.processors.cache.IgniteClientCacheStartFailoverTest.testClientStartLastServerFailsTx(IgniteClientCacheStartFailoverTest.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1997)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1912)
	at java.lang.Thread.run(Thread.java:745)
{code}",,agoncharuk,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Dec 11 10:05:06 UTC 2018,,,,,,,,,,"0|i3h2f3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 11:02;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/2271

    IGNITE-5684 Remove FullMap stale updates check

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5684

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2271.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2271
    
----
commit ab5267134966b466a2d4bfba15d0c7e3ebe91139
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T10:14:18Z

    2.1 More simple tx cancel on node stop

commit 85d8c6572d78c7d6796906d92b566e2fa5b116be
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-07T10:13:55Z

    IGNITE-5520 - Fixed IgniteChangeGlobalStateFailoverTest

commit f589628f4846f14efc8e702b61856cc90a3d0dc7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T10:52:38Z

    Rename ActionData -> CacheActionData.

commit 30922ed8ac518749a2559aff51fe183a890041bb
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-07-07T11:03:18Z

    ignite-2.1 Added map with previous snapshots.

commit 99fd75dd7766318af88a38b5640a648bba3ccdf1
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-07T11:38:36Z

    IGNITE-5483: Added limited support for Java8 LocalDateTime. This closes #2248.

commit 4fc8124d9538625cb0a95c918634b43ec1319bee
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T11:43:28Z

    Fixed formatting.

commit 984ab5bd3c08b2af9222964451acc281b92814b8
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T11:43:50Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 7adb11109bab5d83ed4f376b0cad42b026dd0a71
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T11:49:13Z

    Fixed formatting.

commit 2a5390b1c083819f059e449b34a5979ec35b7755
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-07T12:01:43Z

    IGNITE-5159: DDL example. This closes #2227.

commit d232648711c882ed304eae89ae19f151067649fd
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-07T12:02:29Z

    Merge remote-tracking branch 'upstream/ignite-2.1.2' into ignite-2.1.2

commit a9387adef490086406b05fe961ff0f3151045caa
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T12:21:20Z

    IGNITE-5717 .NET: Reduce MemoryPolicyConfiguration.MaxSize for persistence tests as a workaround for OOM on default settings

commit 13399d530f3458c3bf59634857cb05f801e8cc34
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:24:09Z

    2.1 Fixed assert (cacheName can be null here).

commit ea4420e6aad509c4ae58d6d0880918c98fd1959a
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:24:26Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 0d6fb1ad73e8ed448dabe7c0cc631222835b52c4
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-07T12:54:52Z

    IGNITE-5204: Fixed NPE on certain data with index inlining. This closes #2115.

commit a1cac1b7cc1c3afdcc12afb08bf1ecdcb6f28828
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:55:18Z

    Removed unused method GridDhtPartitionTopology.checkEvictions().

commit 55a5ca019db7d06aab2fb567dbc0da1f133d0fb7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:55:38Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 99713feea764fc8c3e5b247a24698a2c04d3bcf4
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-07T13:30:37Z

    IGNITE-5204: SQL: fixed incorrect partition calculation in case of unicast optimization, when WHERE clause argument type was different from key or affinity key type. This close #2107.

commit 3c887378eb64d2d236073410070082e5699e8334
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-07T13:52:31Z

    IGNITE-5582: Implemented Compute::Broadcast for C++
    
    (cherry picked from commit fa974286e8f066a8d6aa57519edf5ec7761be095)

commit 3314a4513c816c027dad80258ded1fe5a4c2b700
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T14:28:47Z

    Fixed cache plugin validation.

commit 517a23d252078e62a8addca55ca78497e5226b5b
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-30T17:23:55Z

    IGNITE-5554 ServiceProcessor may process failed reassignments in timeout thread

commit 993f7fbe1d49a524e2dee626aef72e16fd5d3cda
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-07T15:55:27Z

    IGNITE-5701 - Some nodes have partitionUpdateCounter equal to 0 after rebalancing

commit e5c2ec5a62c0d5fc268275ea9277f6933a582966
Author: Alexey Kuznetsov <akuznetsov@gridgain.com>
Date:   2017-07-07T16:06:52Z

    ignite-2.1 Minor.

commit eb37f538f55a471258e49ee2fbf0e8f234829def
Author: vsisko <vsisko@gridgain.com>
Date:   2017-07-07T16:22:59Z

    IGNITE-5369 Added support for _key and _val names on QueryEntity XML and code generation.

commit 82e5f8a6553323e793c01c54e24dda6d47188ce6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T16:28:54Z

    IGNITE-5716 .NET: Fix 2-byte field offset handling

commit cb5ae9617af900e953e0f6f065adcd707d2b3830
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T17:15:47Z

    .NET: Remove unused import and redundant cast

commit 17904cb174a340ec928f4a7a4b12d294c2240d0f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T17:18:35Z

    .NET: Fix IgniteConfigurationTest

commit 36716fb1f4de5d1f5baab1e27afc95583dd4c7b4
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-10T08:09:43Z

    GG-12466 - Clean up public API for snapshots

commit a53544410dd15a3a5112d6de88648db21bd3fcf3
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-10T08:38:04Z

    ignite-5446 Alway use late affinity assignment mode

commit 17694c16d449dea4d4e39a271dd39e838c581858
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-10T08:59:19Z

    IGNITE-5694 - Added retries for getCollection in DataStructuresProcessor - Fixes #2240.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 0b9527e851fd7c1d63bfc427721ca8af80d54b0c
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-10T09:02:03Z

    Fixed NPE in setOwners.

----
;;;","11/Jul/17 08:28;agoncharuk;Thanks, Pavel! Merged to ignite-2.1;;;","11/Dec/18 10:05;githubbot;Github user Jokser closed the pull request at:

    https://github.com/apache/ignite/pull/2271
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: missing fully qualified name for generated indexed types on Models Screen,IGNITE-5683,13084459,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,kuaw26,kuaw26,04/Jul/17 08:40,13/Jul/17 09:35,14/Jul/23 06:20,04/Jul/17 08:48,,,,,,2.1,,wizards,,,,0,,,,https://stackoverflow.com/questions/44468342/automatic-persistence-unable-to-bring-up-cache-with-web-console-generated-mode,,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 13 09:35:26 UTC 2017,,,,,,,,,,"0|i3h2dj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 08:48;kuaw26;Please test.
Steps:
# Start some RDBMS.
# CREATE TABLE ZZZ(ID VARCHAR(50) NOT NULL PRIMARY KEY,  salary INTEGER)
# Import ZZZ table in Web Console
# Change on Models screen ""Query metadata:"" from ""Configuration"" to ""Annotations""
# In preview should be generated smth like:
{code}
<property name=""indexedTypes"">
    <list>
        <value>java.lang.String</value>
        <value>java.lang.Long</value>
    </list>
</property>
{code}

Also download and compile project and start nodes via code and XML;;;","13/Jul/17 09:35;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCacheRabalancingDelayedPartitionMapExchangeSelfTest fails,IGNITE-5682,13084458,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,vozerov,vozerov,04/Jul/17 08:32,04/Oct/17 14:55,14/Jul/23 06:20,27/Jul/17 11:53,,,,,,2.3,,cache,,,,0,MakeTeamcityGreenAgain,Muted_test,test-fail,"This appears to be a regression introduced during persistent store migration. 

{code}
class org.apache.ignite.IgniteException: Timeout of waiting for topology map update [igniteInstanceName=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest1, cache=default, cacheId=1544803905, topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], p=0, readVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], locNode=TcpDiscoveryNode [id=c53cc66c-05ea-4441-825c-23d99ef00001, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47501], discPort=47501, order=2, intOrder=2, lastExchangeTime=1499156862204, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false]]

	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:698)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
	at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:517)
	at org.apache.ignite.internal.processors.cache.distributed.rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest.test(GridCacheRabalancingDelayedPartitionMapExchangeSelfTest.java:154)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1997)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1912)
	at java.lang.Thread.run(Thread.java:745)
{code}",,dpavlov,githubbot,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 18:17;dpavlov;ignite-5682.dump.txt;https://issues.apache.org/jira/secure/attachment/12876464/ignite-5682.dump.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 04 14:55:54 UTC 2017,,,,,,,,,,"0|i3h2db:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 18:27;dpavlov;Test fails on Stopping grid 3: stopGrid(3);
4 nodes, 3 single messages were sent to crd. 

{noformat}
init() from crd: [rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest0] remaining: nodes [
B43d9218-07d8-4028-bc69-4b582af00002,
22687770-013b-4987-a4a5-803948900001, 
86667a24-ea4d-4b74-a375-f783f7a00004]

sendLocalPartitions(): from nodeid [ec705e77-fc89-4faa-a432-6aee56c00000]; instance=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest2 sent single map
MMM: GridDhtPartitionsSingleMessage [parts={1544803905=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=468, size=507], -2100569601=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=164, size=100]}, partCntrs={1544803905={}, -2100569601={}}, partHistCntrs=null, err=null, client=false, compress=true, super=GridDhtPartitionsAbstractMessage [exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], nodeId=4196a84b, evt=NODE_LEFT], lastVer=GridCacheVersion [topVer=0, order=1499710025573, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=237, depInfo=null, err=null, skipPrepare=false]]]


sendLocalPartitions(): from nodeid [ec705e77-fc89-4faa-a432-6aee56c00000]; instance=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest1 sent single map
MMM: GridDhtPartitionsSingleMessage [parts={1544803905=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=468, size=530], -2100569601=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=171, size=100]}, partCntrs={1544803905={}, -2100569601={}}, partHistCntrs=null, err=null, client=false, compress=true, super=GridDhtPartitionsAbstractMessage [exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], nodeId=4196a84b, evt=NODE_LEFT], lastVer=GridCacheVersion [topVer=0, order=1499710023815, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=238, depInfo=null, err=null, skipPrepare=false]]]

sendLocalPartitions(): from nodeid [ec705e77-fc89-4faa-a432-6aee56c00000]; instance=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest4 sent single map
MMM: GridDhtPartitionsSingleMessage [parts={1544803905=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=468, size=525], -2100569601=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=118, size=100]}, partCntrs={1544803905={}, -2100569601={}}, partHistCntrs=null, err=null, client=false, compress=true, super=GridDhtPartitionsAbstractMessage [exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], nodeId=4196a84b, evt=NODE_LEFT], lastVer=GridCacheVersion [topVer=0, order=1499710051946, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=239, depInfo=null, err=null, skipPrepare=false]]]


[2017-07-10 21:07:49,708][INFO ][test-runner-#1%rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest%][root] Topology version mismatch [node=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest1, exchVer=AffinityTopologyVersion [topVer=9, minorTopVer=3], topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0]]
 
MMM: GridDhtPartitionsFullMessage [parts={1544803905=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=117, size=4], -2100569601=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=108, size=4]}, partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], errs=null, compress=true, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=272, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsFullMessage [parts={1544803905=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=117, size=4], -2100569601=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=108, size=4]}, partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], errs=null, compress=true, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=272, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsFullMessage [parts={1544803905=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=117, size=4], -2100569601=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=108, size=4]}, partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], errs=null, compress=true, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=272, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsSingleMessage [parts={1544803905=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=571, size=507], -2100569601=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=168, size=100]}, partCntrs=null, partHistCntrs=null, err=null, client=false, compress=true, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=GridCacheVersion [topVer=0, order=1499710025573, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=273, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsSingleMessage [parts={1544803905=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=599, size=525], -2100569601=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=122, size=100]}, partCntrs=null, partHistCntrs=null, err=null, client=false, compress=true, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=GridCacheVersion [topVer=0, order=1499710051946, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=274, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsSingleMessage [parts={1544803905=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=566, size=530], -2100569601=GridDhtPartitionMap [moving=0, top=AffinityTopologyVersion [topVer=10, minorTopVer=0], updateSeq=175, size=100]}, partCntrs=null, partHistCntrs=null, err=null, client=false, compress=true, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=GridCacheVersion [topVer=0, order=1499710023815, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=275, depInfo=null, err=null, skipPrepare=false]]]
[2017-07-10 21:07:52,024][WARN ][test-runner-#1%rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest%][root] Waiting for topology map update [igniteInstanceName=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest1, cache=default, cacheId=1544803905, topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], p=0, affNodesCnt=2, ownersCnt=1, affNodes=[86667a24-ea4d-4b74-a375-f783f7a00004, ec705e77-fc89-4faa-a432-6aee56c00000], owners=[86667a24-ea4d-4b74-a375-f783f7a00004], topFut=GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=4196a84b-4084-4e11-ba6a-c56461000003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=8, intOrder=6, lastExchangeTime=1499710047200, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], topVer=10, nodeId8=22687770, msg=Node left: TcpDiscoveryNode [id=4196a84b-4084-4e11-ba6a-c56461000003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=8, intOrder=6, lastExchangeTime=1499710047200, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], type=NODE_LEFT, tstamp=1499710069668], crd=TcpDiscoveryNode [id=ec705e77-fc89-4faa-a432-6aee56c00000, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1499710025299, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], nodeId=4196a84b, evt=NODE_LEFT], added=true, initFut=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=true, hash=519525889], init=true, lastVer=null, partReleaseFut=GridCompoundFuture [rdc=null, initFlag=1, lsnrCalls=4, done=true, cancelled=false, err=null, futs=[true, true, true, true]], exchActions=null, affChangeMsg=null, skipPreload=false, clientOnlyExchange=false, initTs=1499710069683, centralizedAff=true, changeGlobalStateE=null, forcedRebFut=null, done=true, evtLatch=0, remaining=[b43d9218-07d8-4028-bc69-4b582af00002, ec705e77-fc89-4faa-a432-6aee56c00000, 86667a24-ea4d-4b74-a375-f783f7a00004], super=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=AffinityTopologyVersion [topVer=10, minorTopVer=0], hash=730658954]], locNode=TcpDiscoveryNode [id=22687770-013b-4987-a4a5-803948900001, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47501], discPort=47501, order=2, intOrder=2, lastExchangeTime=1499710072008, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false]]
[2017-07-10 21:07:52,337][WARN ][test-runner-#1%rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest%][root] Waiting for topology map update [igniteInstanceName=rebalancing.GridCacheRabalancingDelayedPartitionMapExchangeSelfTest1, cache=default, cacheId=1544803905, topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], p=0, affNodesCnt=2, ownersCnt=1, affNodes=[86667a24-ea4d-4b74-a375-f783f7a00004, ec705e77-fc89-4faa-a432-6aee56c00000], owners=[86667a24-ea4d-4b74-a375-f783f7a00004], topFut=GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=4196a84b-4084-4e11-ba6a-c56461000003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=8, intOrder=6, lastExchangeTime=1499710047200, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], topVer=10, nodeId8=22687770, msg=Node left: TcpDiscoveryNode [id=4196a84b-4084-4e11-ba6a-c56461000003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=8, intOrder=6, lastExchangeTime=1499710047200, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], type=NODE_LEFT, tstamp=1499710069668], crd=TcpDiscoveryNode [id=ec705e77-fc89-4faa-a432-6aee56c00000, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47500], discPort=47500, order=1, intOrder=1, lastExchangeTime=1499710025299, loc=false, ver=2.1.0#19700101-sha1:00000000, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], nodeId=4196a84b, evt=NODE_LEFT], added=true, initFut=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=true, hash=519525889], init=true, lastVer=null, partReleaseFut=GridCompoundFuture [rdc=null, initFlag=1, lsnrCalls=4, done=true, cancelled=false, err=null, futs=[true, true, true, true]], exchActions=null, affChangeMsg=null, skipPreload=false, clientOnlyExchange=false, initTs=1499710069683, centralizedAff=true, changeGlobalStateE=null, forcedRebFut=null, done=true, evtLatch=0, remaining=[b43d9218-07d8-4028-bc69-4b582af00002, ec705e77-fc89-4faa-a432-6aee56c00000, 86667a24-ea4d-4b74-a375-f783f7a00004], super=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=AffinityTopologyVersion [topVer=10, minorTopVer=0], hash=730658954]], locNode=TcpDiscoveryNode [id=22687770-013b-4987-a4a5-803948900001, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47501], discPort=47501, order=2, intOrder=2, lastExchangeTime=1499710072305, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false]]
MMM: GridDhtPartitionsFullMessage [parts={1544803905=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=120, size=4], -2100569601=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=112, size=4]}, partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], errs=null, compress=true, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=276, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsFullMessage [parts={1544803905=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=120, size=4], -2100569601=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=112, size=4]}, partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], errs=null, compress=true, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=276, depInfo=null, err=null, skipPrepare=false]]]
MMM: GridDhtPartitionsFullMessage [parts={1544803905=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=120, size=4], -2100569601=GridDhtPartitionFullMap [nodeId=ec705e77-fc89-4faa-a432-6aee56c00000, nodeOrder=1, updateSeq=112, size=4]}, partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], errs=null, compress=true, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=276, depInfo=null, err=null, skipPrepare=false]]]


{noformat}

In the same time
If full message permutation is disabled, test passes.
If start-stop of the grid 3 is disabled, test passes.
;;;","11/Jul/17 17:39;dpavlov; 
For this test delayed and then replayed messages contains top.version=-1 and partCntrs are null
For example for cache 1544803905 map is node 099b4... is owner according to this message
{noformat}
Replay: GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtPartitionsFullMessage [parts={
1544803905=GridDhtPartitionFullMap [nodeId=099b4d86-a9c4-44aa-998d-693a71e00000, nodeOrder=1, updateSeq=463, size=5], 
-2100569601=GridDhtPartitionFullMap [nodeId=099b4d86-a9c4-44aa-998d-693a71e00000, nodeOrder=1, updateSeq=87, size=5]}, 
partCntrs=null, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], 
errs=null, compress=true, partCnt=2, 
super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=222, depInfo=null, err=null, skipPrepare=false]]]]
{noformat}
 
Then code supposes affNodes should include this node 099b4... 
{noformat}
1, cache=default, 
cacheId=1544803905, 
topVer=AffinityTopologyVersion [topVer=10, minorTopVer=0], p=0, affNodesCnt=2, ownersCnt=1, 
affNodes=[b36088d1-22d2-4aff-aacc-c8ea02b00004, 099b4d86-a9c4-44aa-998d-693a71e00000], 
  owners=[b36088d1-22d2-4aff-aacc-c8ea02b00004], 
{noformat}

It seems for this test passing we require some mark that delayed message may be ignored: Either partition counter or toplogy version;;;","13/Jul/17 09:47;dpavlov;[~agoncharuk], could you please review my changes?

https://github.com/apache/ignite/pull/2274
http://ci.ignite.apache.org/viewLog.html?buildId=721846&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll
http://reviews.ignite.apache.org/ignite/review/IGNT-CR-237

Fix involves change for GridDhtPartFullMessage for case resendAllPartitions() is used.
- Such messages are still not marked as related to exchange, but contains topology version.
- Same change was done for DhtTopologyImpl. Now it compares topology version from GridDhtFullMessage is not less than latest observed from exchange. For exchange topology version check is still as follows : ""version is to be greater than latest observed"".;;;","24/Jul/17 21:44;sboikov;[~dpavlov], please merge from latest master, there are conflicts.

Thanks!;;;","26/Jul/17 18:08;dpavlov;[~sboikov], I've updated PR according latest changes in master.

Could you please review this change?;;;","27/Jul/17 11:53;sboikov;Thanks Dmitry, reviewed and merged fix int0 master.;;;","04/Oct/17 14:55;githubbot;Github user dspavlov closed the pull request at:

    https://github.com/apache/ignite/pull/2274
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: Few consecutive inserts lead to exception,IGNITE-5663,13084274,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,ezhuravl,ezhuravl,03/Jul/17 14:44,05/Jul/17 14:17,14/Jul/23 06:20,04/Jul/17 17:04,2.0,,,,,2.1,,odbc,,,,0,important,odbc,,"Exception: ('HY010', '[HY010] Query is not prepared. (0) (SQLExecDirectW)')

Reproducer in python:


{code:java}
import pyodbc
cnxn = pyodbc.connect(DRIVER='{Apache Ignite}', ADDRESS='localhost:10800',CACHE=""Person"", autocommit=True)
cursor = cnxn.cursor()
select_string= ""INSERT INTO Person(_key, id, firstName, lastName, salary) VALUES (?, ? , 'abcd', 'dhsagd', 1000)""
id_list = (1,1)
id_list2 = (2,2)
cursor.execute(select_string, id_list) 
cursor.execute(select_string, id_list2) 
{code}

Also, the same behavior with executemany.
",,ezhuravl,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 05 14:17:51 UTC 2017,,,,,,,,,,"0|i3h18n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 16:38;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2237

    IGNITE-5663: ODBC: Closing cursor do not reset prepared statement anymore

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5663

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2237.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2237
    
----
commit 0c6c7d98a887a13aca07a2adca2d1b13f9ad69c8
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-04T16:01:21Z

    IGNITE-5663: Fixed an issue.

commit a429648bcbae5b9faabc6d8ec7882763601486ea
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-04T16:33:41Z

    IGNITE-5663: Added test

----
;;;","04/Jul/17 16:38;isapego;Ready for review. [~ptupitsyn], can you take a look?;;;","04/Jul/17 16:40;ptupitsyn;Looks good to me.;;;","04/Jul/17 17:04;isapego;Merged to master.;;;","05/Jul/17 14:17;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2237
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Primary index name should contain type ID or name,IGNITE-5662,13084266,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,03/Jul/17 14:21,10/Jul/17 17:54,14/Jul/23 06:20,10/Jul/17 17:54,2.1,,,,,2.1,,persistence,,,,0,,,,"Currently, the primary index name contains neither type ID nor type name. Since metadata storage allocates tree root based on the index name, two different indexes will be using the same index tree.

Attached test reproduces this issue.

A correct fix would be to include type ID or type name (depends on the current SQL internals) to the index name.",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 14:29;tledkov-gridgain;IgnitePersistentStoreQueryTest.java;https://issues.apache.org/jira/secure/attachment/12875518/IgnitePersistentStoreQueryTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 10 17:54:56 UTC 2017,,,,,,,,,,"0|i3h16v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 16:44;EdShangGG;As I found, the issue was that we don't set typeId for description. After this was fixed reproducer passed.

http://ci.ignite.apache.org/viewQueued.html?itemId=716528 - CI.;;;","10/Jul/17 17:01;EdShangGG;https://github.com/apache/ignite/pull/2275 - patch.;;;","10/Jul/17 17:54;agoncharuk;Thanks, Eduard. Merged your changes to ignite-2.1;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: some checkbox are misaligned,IGNITE-5656,13084117,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,Klaster_1,Klaster_1,03/Jul/17 04:23,03/Jul/17 08:51,14/Jul/23 06:20,03/Jul/17 08:50,,,,,,2.1,,UI,wizards,,,0,,,,"Some checkboxes in advanced configuration have incorrect vertical position, see attachments.",,Dmitriyff,Klaster_1,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 04:24;Klaster_1;tooltip OK.PNG;https://issues.apache.org/jira/secure/attachment/12875442/tooltip+OK.PNG","03/Jul/17 04:24;Klaster_1;tooltip broken.PNG;https://issues.apache.org/jira/secure/attachment/12875443/tooltip+broken.PNG",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 03 08:50:54 UTC 2017,,,,,,,,,,"0|i3h09r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 04:29;Klaster_1;Please review.;;;","03/Jul/17 08:14;Dmitriyff;Pls finally review;;;","03/Jul/17 08:50;kuaw26;Looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"REST API, metadata command always returns list of cache",IGNITE-5649,13083908,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,amsokol,amsokol,30/Jun/17 19:47,15/Jul/17 01:33,14/Jul/23 06:20,15/Jul/17 01:33,2.0,,,,,,,,,,,0,,,,"How to reproduce:

1) start Ignite server with example config with Person and Organization.

2) run:
curl http://localhost:8080/ignite?cmd=metadata&cacheName=Person
curl http://localhost:8080/ignite?cmd=metadata&cacheName=Organization
curl http://localhost:8080/ignite?cmd=metadata&cacheName=blablabla

Ignite always returns list of cache instead of information about selected cache or error",,amsokol,anovikov,githubbot,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jul 15 01:33:31 UTC 2017,,,,,,,,,,"0|i3gyzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 09:41;shroman;[~anovikov] Andrey, can you comment on this?
Even in tests(_JettyRestProcessorAbstractSelfTest#testMetadataLocal/testMetadataRemote()_), it looks like {{cacheName}} is ignored.

Is the documentation wrong, and we have to remove {{cacheName}} from the documentation? -> show all cache metadata always.
Or shall we change it to the following?
1. if {{cacheName}} is specified, get its metadata
2. otherwise return error
(if so, I have a solution for that https://github.com/shroman/ignite/tree/IGNITE-5649)
;;;","11/Jul/17 07:48;anovikov;Hi [~roman_s],

As I remember in Ignite 1.x we can create cache with name = null (default) In this case we can't detect return metadata for all caches or for cache with default name. 
Metadata cache with {{cacheName}} should be returned first in list

In Ignite 2.x cache with name = null (default) was removed and we can return metadata for specified {{cacheName}} 

I reviewed changes in https://github.com/shroman/ignite/tree/IGNITE-5649 and I think it is not good idea to change {{GridCacheQueryManager#sqlMetadata}} will be better send job on node where cache with {{cacheName}} exists {{GridCacheCommandHandler.MetadataTask#map}} and return its metadata or error in {{GridCacheCommandHandler.MetadataTask#reduce}};;;","12/Jul/17 02:14;shroman;[~anovikov] Thanks for your suggestion!
Even if a job is sent to the nodes where {{cacheName}} exists, {{GridCacheQueryManager#sqlMetadata}} picks the metadata of all caches in {{GridCacheQueryManager.MetadataJob#call}}. Is my understanding correct?

I updated the solution without modifying {{GridCacheQueryManager#sqlMetadata}} -- it filters meta data and leaves only one for the cache with the specified name to return (tests are not updated yet). What do you think?
https://github.com/shroman/ignite/commits/IGNITE-5649;;;","13/Jul/17 07:52;anovikov;Hi [~roman_s],

Yes

My note about implementation:
If {{cacheName}} is not specified, metadata for all caches should be returned (now try to return metadata  for default cache)
{code}
final String cacheName = req0.cacheName() == null ? DFLT_CACHE_NAME : req0.cacheName();
...
case CACHE_METADATA: {
   fut = ctx.task().execute(MetadataTask.class, cacheName);
{code}

Need throw exception with correct message in case: cache with {{cacheName}} not exists, metadata for cache with {{cacheName}} not exists.
;;;","13/Jul/17 10:31;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/2292

    IGNITE-5649: Get meta for the specified cache.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-5649

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2292.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2292
    
----
commit e22e658c862baeaea733644c4dc027cf02c9f748
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-03T08:58:26Z

    IGNITE-5649: Get meta for the specified cache.

commit d7f1503a31ba77468a8e193d0a14e8af69db3683
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-03T09:40:16Z

    IGNITE-5649: Get meta for the specified cache. Tests.

commit d672623488f5e67f3bcb9e3bb559b2b79fe58a5f
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-12T04:03:57Z

    IGNITE-5649: Get meta for the specified cache.

commit c8315be9116e2339385337e7bd4bc84ea2e61be0
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-13T10:24:55Z

    IGNITE-5649: Get meta for the specified cache.

commit e86999969cfd842a271878ee8d620742ecc12e44
Author: shroman <rshtykh@yahoo.com>
Date:   2017-07-13T10:29:46Z

    IGNITE-5649: Get meta for the specified cache. Formatted.

----
;;;","13/Jul/17 10:32;shroman;[~anovikov] Thanks again for your comments!
I reworked as you proposed, please see the PR.;;;","14/Jul/17 10:45;anovikov;Hi [~roman_s],

Looks good for me, please merge. Thank you for your contribution!;;;","15/Jul/17 01:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2292
;;;","15/Jul/17 01:33;shroman;[~anovikov] Thank you, I updates the docs too. https://apacheignite.readme.io/v2.0/docs/rest-api#cache-metadata.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: CacheConfiguration copy constructor,IGNITE-5629,13083699,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,30/Jun/17 08:14,04/Jul/17 14:43,14/Jul/23 06:20,04/Jul/17 14:43,,,,,,2.1,,platforms,,,,0,.NET,,,Can be useful to start more caches with existing config. Currently read & write routines are not symmetrical in regards to cache plugins.,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 14:42:55 UTC 2017,,,,,,,,,,"0|i3gxp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 12:54;ptupitsyn;Actually, there is a related bug: {{IgniteConfiguration}} has a copy ctor, but it fails when cache plugins are present.;;;","04/Jul/17 14:42;ptupitsyn;Fixed in ignite-2.1: {{b69f53e0ccf9d3da42a99d4423fb3d8bdd60a7bb}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: incorrect jvm.dll lookup paths for JRE,IGNITE-5628,13083698,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,30/Jun/17 08:13,03/Jul/17 14:59,14/Jul/23 06:20,03/Jul/17 14:59,,,,,,2.1,,platforms,,,,0,.NET,,,"{{jvm.dll}} is located in different subfolders in JRE and JDK. Current code only accounts for JDK. So if we set {{JAVA_HOME}} to a custom xcopy-deployed JRE folder, jvm.dll can not be found.

With normal Windows installations it works because we use registry for that.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 03 14:59:02 UTC 2017,,,,,,,,,,"0|i3gxov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jun/17 12:46;ptupitsyn;Resulting lookup list:
{code}
        private static readonly string[] JvmDllLookupPaths =
        {
            // JRE paths
            @""bin\server"",
            @""bin\client"",

            // JDK paths
            @""jre\bin\server"",
            @""jre\bin\client"",
            @""jre\bin\default""
        };
{code};;;","03/Jul/17 14:59;ptupitsyn;Fixed in master: {{5093660d758ad4149d5cd135f3cad3dfee0ae6e4}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AtomicSequence usage inside transactions may cause deadlock,IGNITE-5613,13083380,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,29/Jun/17 07:40,03/Jul/17 09:16,14/Jul/23 06:20,03/Jul/17 09:16,1.5.0.final,,,,,2.1,,cache,,,,0,important,,,"Consider the following update scenario:
{code}
Thread 1:
Transaction tx = txStart() {
    get(key); // Acquires lock;
    seq.incrementAndGet();
}

Thread 2:
seq.incrementAndGet();
{code}

Let's now assume that:
 * Sequence is exhausted and needs a non-local update
 * Thread 1 acquired lock on topology version N
 * Topology version changes
 * Thread 2 now calls incrementAndGet(), acquires lock and starts transaction which waits for topology version N+1 to become available
 * Thread 1 attemts to incrementAndGet().

Since the lock is already held, thread 2 waits for the concurrent update to complete",,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 03 09:16:02 UTC 2017,,,,,,,,,,"0|i3gvqn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jul/17 09:16;agoncharuk;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Enums do not work as a messaging topic or message,IGNITE-5606,13083140,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,28/Jun/17 13:46,26/Sep/17 17:02,14/Jul/23 06:20,26/Sep/17 17:02,2.0,,,,,2.3,,platforms,,,,0,.NET,,,"Trying to use .NET enum in {{IMessaging}} causes ""unknown pair"" exception in Java. May be we are missing binary mode somewhere.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 26 17:01:43 UTC 2017,,,,,,,,,,"0|i3gu9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/17 17:01;ptupitsyn;Does not reproduce on current master.
Tests for various data types (including enums) as message and topic added.

Merged to master: {{641dd6707f1a20601ac9c00d824bfff2aa54b994}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Inject resources into event listeners and filters,IGNITE-5605,13083129,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,28/Jun/17 13:02,05/Jul/17 10:00,14/Jul/23 06:20,05/Jul/17 10:00,,,,,,2.1,,platforms,,,,0,.NET,,,{{IEventListener}} and {{IEventFilter}} must support {{[InstanceResource]}} attribute.,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 05 10:00:20 UTC 2017,,,,,,,,,,"0|i3gu73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 10:00;ptupitsyn;Listeners are local, no need for injection. Remote filter injection added. Merged to ignite-2.1: {{f9f13cf083b481f004531710ec3835afdf5b7cef}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activate fails in case node was stopped with cancel=true and big objects in cache,IGNITE-5604,13083126,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,tledkov-gridgain,tledkov-gridgain,28/Jun/17 12:53,13/Dec/18 15:06,14/Jul/23 06:20,10/Jul/17 08:13,2.1,,,,,2.1,,persistence,,,,0,,,,"Please take a look at the test {{IgniteWalRecoveryTest#testWalBigObjectNodeCancel}}.
The test is available at the [pull request|https://github.com/apache/ignite/pull/2211].

The error is:
{code}
[2017-06-28 15:50:46,020][ERROR][main][root] Test failed.
class org.apache.ignite.IgniteException: Fail activate
	at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:957)
	at org.apache.ignite.internal.IgniteKernal.active(IgniteKernal.java:3408)
	at org.apache.ignite.internal.processors.cache.persistence.db.wal.IgniteWalRecoveryTest.testWalBigObjectNodeCancel(IgniteWalRecoveryTest.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1995)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1910)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Fail activate
	Suppressed: class org.apache.ignite.IgniteCheckedException: Failed to restore memory state (checkpoint marker is present on disk, but checkpoint record is missed in WAL) [cpStatus=CheckpointStatus [cpStartTs=1498654243491, cpStartId=7f873e0b-b1ee-4bd6-8605-b139b82898c9, startPtr=FileWALPointer [idx=0, fileOffset=8657376, len=2425, forceFlush=false], cpEndId=00000000-0000-0000-0000-000000000000, endPtr=FileWALPointer [idx=0, fileOffset=0, len=0, forceFlush=false]], lastRead=FileWALPointer [idx=0, fileOffset=4340447, len=39, forceFlush=false]]
		at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.restoreMemory(GridCacheDatabaseSharedManager.java:1471)
		at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.readCheckpointAndRestoreMemory(GridCacheDatabaseSharedManager.java:578)
		at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.initCachesAndRestoreMemory(GridCacheDatabaseSharedManager.java:492)
		at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.onActivate(GridCacheDatabaseSharedManager.java:508)
		at org.apache.ignite.internal.processors.cluster.GridClusterStateProcessor.onActivate(GridClusterStateProcessor.java:747)
		at org.apache.ignite.internal.processors.cluster.GridClusterStateProcessor.onChangeGlobalState(GridClusterStateProcessor.java:655)
		at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onCacheChangeRequest(GridDhtPartitionsExchangeFuture.java:719)
		at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:563)
		at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1872)
		at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
		at java.lang.Thread.run(Thread.java:745)

{code}",,agoncharuk,dpavlov,githubbot,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Dec 13 15:06:05 UTC 2018,,,,,,,,,,"0|i3gu6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 12:56;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2211

    IGNITE-5604  Activate fails node was stopped with cancel=true and big objects in cache

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5604

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2211.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2211
    
----
commit b52a84e885b0f88971290200942e0bbe01252ff6
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:09:41Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-2.1.1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticAware.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheIoManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedSingleGetFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridDhtAtomicCache.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/colocated/GridDhtColocatedLockFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxImplicitSingleStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java
    #	modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java
    #	modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/handlers/ClusterListener.java

commit fb2e6d4ab00e3e443bdd896918e812d6fa6119ba
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:10:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-2.1.1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticAware.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheIoManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedSingleGetFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridDhtAtomicCache.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/colocated/GridDhtColocatedLockFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxImplicitSingleStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java
    #	modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java
    #	modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/handlers/ClusterListener.java

commit 2300ec47da979847c36a41e95bebbbd3af1758f1
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:10:52Z

    Merge remote-tracking branch 'community/ignite-2.1.1' into ignite-2.1.1

commit ff9e4559711c69c73210f5d91036fc829b7eef17
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T15:24:09Z

    ignite-5267 : Minors.

commit 34f8c244313ebf94b65c40d5f17dc507f2b54251
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T15:32:33Z

    ignite-5267 : Minors.

commit 2101132fb553c83a2936bbd8501dbdb696ddd054
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-13T15:36:54Z

    IGNITE-5364 Remove contention on DataStructure creation or removing

commit c49daaecc8db6c0d71927cc149274e9b51e37911
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T15:44:54Z

    ignite-2.1.1 Activate nodes after start

commit 6aecaa358c1f9365eb8b1d073634ac74cc65f4d6
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T16:08:24Z

    ignite-5267 : Minors.

commit 2b030c0dd40db0e0d400fd3652ffb609bcd9ac06
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-13T16:41:55Z

    ignite-2.1.1 Extract Ignite updates checker to separate class. Fixed GridUpdateNotifier test.

commit db07d5853e80e6e55bb54cae138d2908fd976f2b
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-13T16:42:14Z

    Merge branch 'ignite-2.1.1' of https://github.com/gridgain/apache-ignite into ignite-2.1.1

commit b3adc5127dd897dd035224e419b020e6f7a1357d
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-06-13T19:28:24Z

    IGNITE-GG-12267 skiped upload ignite-benchmarks and apache-ignite pom.xml to maven repo

commit 4d201dba5a66a3771d4a2d7076d6bc95a0def9fc
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-06-14T04:41:01Z

    IGNITE-4758 - Added missing fields and fixed typos.

commit 9ebdc1106555d9233d5d328fd6cc71f7a1402490
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-06-14T07:58:20Z

    IGNITE-5239 Web Console show full stack trace on Queries screen.

commit 87c6bf2b761f585dee095f9a56641b4741d0db3b
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-06-14T08:04:11Z

    IGNITE-5366 Web Console: Added user notifications.

commit b7a19ae7b54f05a0f2fe8223397e59f34b4f63cf
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-06-14T08:32:00Z

    IGNITE-5240 Fixed repository name.

commit 42c04ddb17f560f4120636431da20e6e0b1422a9
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-06-14T08:46:40Z

    IGNITE-5481 Reworked rebalance detection.

commit 29df01dd2196fda7ed927e67e5e8bad194ce6f34
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-06-14T08:55:03Z

    IGNITE-5402 Web Console: Fixed near cache generation for client mode.

commit 0cb8a0ea43fc9dc1902655c32ba03968a3c3b517
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-13T16:14:38Z

    GNITE-5478: ODBC: SQLNumParams now returns number of required parameters.

commit 3f8ef4f821908b1a910a36c07457553b17f763e4
Author: Alexey Kuznetsov <akuznetsov@gridgain.com>
Date:   2017-06-13T16:30:43Z

    master - Fixed typo.

commit 3bf8b0319fc50cb4a9294f90f4cf7b689bc48a77
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-14T10:57:40Z

    Fixing snapshot tests for 8.2.1 release: Activating grid in tests, NPE fix, class cast fix

commit 5f5c5f1ba07cccd1ee072f4b1f95d32459d9507b
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-14T10:58:21Z

    Merge remote-tracking branch 'apache-gridgain-fork/ignite-2.1.1' into ignite-2.1.1

commit 40db31ef76303215db1703166c94b795cd2eb2b2
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-14T11:16:08Z

    ignite-2.1.1 do not create database shared manger on client + cosmetic changes

commit 4e973551a4264395aa7fe167aba61736a0d259e6
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-14T11:49:13Z

    ignite-2.1.1 invoke activate/deactivate for snapshot manager.

commit 69aa299c9f9f864086266d618d28b78ca407b8ac
Author: devozerov <vozerov@gridgain.com>
Date:   2017-06-14T11:55:48Z

    Fixed missing Apache header in HttpIgniteUpdatesChecker.

commit 4eb8c5e4c687edb1c695d2d38ad93cca09cd024a
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-14T12:08:01Z

    ignite-2.1.1 validate operation change global state if snapshot operation in progress

commit 752dd65f82221fdc7570c50ae4c0d41652541422
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-14T12:08:29Z

    Merge remote-tracking branch 'professional/ignite-2.1.1' into ignite-2.1.1

commit 3d269d7d5094acb9b8ac86de16fc16c8c80ec5e6
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-14T12:20:20Z

    Minors.

commit 73df0354241bff62c854847c4c98abac8a5b4c24
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-14T12:39:17Z

    Minors.

commit 8b85477eabd6e9059d3849a277b9494845b67293
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-14T12:47:29Z

    Cache type validation.

commit 51e6aed7c82e4c7885b85c57a7235f0d5872b7e7
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-14T13:00:46Z

    GG-12283: disabled handing tests to run others

----
;;;","28/Jun/17 12:59;tledkov-gridgain;[~DmitriyGovorukhin], [~agoncharuk] please take a look.;;;","30/Jun/17 10:24;agoncharuk;I do not like the fix - since we expand the write buffer on per-record basis, we should be able to expand the WAL read buffer on-demand.;;;","05/Jul/17 12:29;githubbot;GitHub user DmitriyGovorukhin opened a pull request:

    https://github.com/apache/ignite/pull/2244

    IGNITE-5604 expand byteBuffer for wal iterator if record size more that current buffer size

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5604

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2244.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2244
    
----
commit acc49072e76588b5bc6c06e3fd329b82a86c87b0
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-05T12:19:10Z

    ignite-5604 expand byteBuffer for wal iterator if record size more that current buffer size

----
;;;","07/Jul/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2244
;;;","13/Dec/18 15:06;githubbot;Github user tledkov-gridgain closed the pull request at:

    https://github.com/apache/ignite/pull/2211
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Agent should check that node URL is valid,IGNITE-5599,13083013,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,28/Jun/17 03:38,28/Jun/17 06:59,14/Jul/23 06:20,28/Jun/17 06:59,2.1,,,,,2.1,,wizards,,,,0,,,,,,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-28 03:38:26.0,,,,,,,,,,"0|i3gthb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WAL Iteration stopped with exception after writting log with background mode,IGNITE-5598,13082897,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,dpavlov,dpavlov,27/Jun/17 17:42,07/Jul/17 09:45,14/Jul/23 06:20,07/Jul/17 09:45,,,,,,2.1,,persistence,,,,0,,,,"Need to research if it is problem of IGNITE-5558 implementation or standalone issue

Exception is logged into stderr:
{noformat}
java.lang.RuntimeException: java.io.EOFException

	at org.apache.ignite.internal.processors.cache.persistence.wal.reader.StandaloneWalRecordsIterator.handleRecordException(StandaloneWalRecordsIterator.java:168)
	at org.apache.ignite.internal.processors.cache.persistence.wal.AbstractWalRecordsIterator.advanceRecord(AbstractWalRecordsIterator.java:166)
	at org.apache.ignite.internal.processors.cache.persistence.wal.AbstractWalRecordsIterator.advance(AbstractWalRecordsIterator.java:121)
	at org.apache.ignite.internal.processors.cache.persistence.wal.AbstractWalRecordsIterator.onNext(AbstractWalRecordsIterator.java:106)
	at org.apache.ignite.internal.processors.cache.persistence.wal.AbstractWalRecordsIterator.onNext(AbstractWalRecordsIterator.java:42)
	at org.apache.ignite.internal.util.GridCloseableIteratorAdapter.nextX(GridCloseableIteratorAdapter.java:41)
	at org.apache.ignite.internal.processors.cache.persistence.db.wal.reader.IgniteWalReaderTest.testFillWalAndReadRecords(IgniteWalReaderTest.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1994)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:132)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1909)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.EOFException
	at org.apache.ignite.internal.processors.cache.persistence.wal.FileInput.ensure(FileInput.java:104)
	at org.apache.ignite.internal.processors.cache.persistence.wal.FileInput$Crc32CheckingFileInput.ensure(FileInput.java:288)
	at org.apache.ignite.internal.processors.cache.persistence.wal.FileInput$Crc32CheckingFileInput.readByte(FileInput.java:361)
	at org.apache.ignite.internal.processors.cache.persistence.wal.FileInput$Crc32CheckingFileInput.readUnsignedByte(FileInput.java:370)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.RecordV1Serializer.readRecord(RecordV1Serializer.java:677)
	at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.RecordV1Serializer.readRecord(RecordV1Serializer.java:657)
	at org.apache.ignite.internal.processors.cache.persistence.wal.AbstractWalRecordsIterator.advanceRecord(AbstractWalRecordsIterator.java:156)
	... 14 more
	Suppressed: class org.apache.ignite.internal.processors.cache.persistence.wal.crc.IgniteDataIntegrityViolationException: val: 771559538 writtenCrc: 0
		at org.apache.ignite.internal.processors.cache.persistence.wal.FileInput$Crc32CheckingFileInput.close(FileInput.java:305)
		at org.apache.ignite.internal.processors.cache.persistence.wal.serializer.RecordV1Serializer.readRecord(RecordV1Serializer.java:664)
		... 15 more
{noformat}",,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5322,IGNITE-5558,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 05 11:10:36 UTC 2017,,,,,,,,,,"0|i3gsrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 13:34;githubbot;GitHub user dspavlov opened a pull request:

    https://github.com/apache/ignite/pull/2212

    IGNITE-5598: Fixed switch segment record, WAL read and rollover are now OK for background mode

    https://issues.apache.org/jira/browse/IGNITE-5598

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5598

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2212.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2212
    
----
commit 468033cc060cff8bdb7c74054eb47500d25732af
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-21T14:10:04Z

    IGNITE-5558: mock based test iterator created: Add ability to read WAL outside of an Ignite node

commit 3c1e28e46c3d5095ce00638e225768a10163a307
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-21T15:00:25Z

    IGNITE-5558: change to run on TC

commit defda5b4003bf990e6ca10ffef20ea0d35ee546b
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T11:42:50Z

    IGNITE-5558: first non-mockito based iterator implementation

commit 55fdb9ba2ecd46c4f701c11deb0cc2fea7ab5ff4
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T12:10:46Z

    IGNITE-5558: update for running on teamcity

commit 8e61faeb1a4eaa541c7ae7257721c302b966fbf5
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T13:20:56Z

    IGNITE-5558: WAL iterator creation moved to standalone class

commit b7024715585735a7011defafade5d267fe3f86e3
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T14:24:41Z

    IGNITE-5558: Mock factory extracted as standalone class

commit fed81a079b82d3445793fef37c61ef16a40c9446
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T15:00:42Z

    IGNITE-5558: compile fix

commit 9a844a8e7b80d6cde2247780500878a5ab70128a
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T16:47:32Z

    IGNITE-5558: WAL reader was moved to core, main() method was created

commit c6cbb4b910a29135e73298a7f64a63dbb354dfa0
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T17:49:26Z

    IGNITE-5558: WAL reader: correct close, record exception printing, file headers, javadoc

commit 1be55120fd9d56f9ef28fd691a526a3482ceef48
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-22T18:35:03Z

    IGNITE-5558: WAL reader: 2 modes were created: directory and files

commit 9df9b12297fd103a8f5564f600a90814961d94c1
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-23T10:38:22Z

    IGNITE-5558: WAL reader NPE fix and javadocs

commit 79d934d36e768430376655c05517f83386028cae
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-23T12:36:52Z

    IGNITE-5558: cosmetic & javadocs

commit 7b00272edf9dbcd35c9f2a6697253c61bbb7f80c
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-26T14:16:46Z

    IGNITE-5587: Generate File WAL Segment Archive Completed Event

commit 13a3b1a52cfb561011df96dda32eb41c2551ce26
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-26T15:07:34Z

    IGNITE-5587: Javadoc and cosmetic: Generate File WAL Segment Archive Completed Event

commit dce18c0581f9e3caff39c13cf0b681daa43934fc
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-26T16:42:55Z

    IGNITE-5587: Generate File WAL Segment Archive Completed Event

commit 69bbd6e7eedb90382128023a0ed478dd9cc42492
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-26T16:57:56Z

    IGNITE-5591: WAL queue flusher for background mode was replaced with Timeout processor

commit 91eb1e926500c0eb9d4c87f0686372dfa4ad0cef
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-26T17:22:09Z

    IGNITE-5591: serial version ID added

commit 552e379b5238cdbedbb818f3d56ea04207deb984
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-27T13:54:00Z

    IGNITE-5589: Archive WAL segment after significant period of grid inactivity

commit c60bc89e89bdc538f44fe8877e3137cc3f4339cc
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-27T15:47:49Z

    IGNITE-5589: Archive WAL segment after significant period of grid inactivity

commit 1f9c2869d489b32908d5df2dd66be21151c5fbd6
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-28T10:23:48Z

    IGNITE-5589: Minimise visibility of fields, javadoc
    IGNITE-5598: exception propagation for reproducing

commit 16c28db3d6a289c9c0006406f283b37e14e86433
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-28T13:30:56Z

    IGNITE-5598: Fixed switch segment record, WAL read and rollover are now OK for background mode

----
;;;","28/Jun/17 17:18;dpavlov;https://github.com/apache/ignite/pull/2212;;;","05/Jul/17 11:10;githubbot;Github user dspavlov closed the pull request at:

    https://github.com/apache/ignite/pull/2212
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong javadoc in Affinity and AffinityFunction for REPLICATED cache,IGNITE-5597,13082835,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,Litanontaru,ezhuravl,ezhuravl,27/Jun/17 14:21,28/Aug/17 16:38,14/Jul/23 06:20,13/Jul/17 13:03,1.7,,,,,2.3,,,,,,0,javadoc,,,"RendezvousAffinityFunction.getPartitions() Javadoc says:

{code:java}
     * Note that for fully replicated caches this method should always
     * return {@code 1}.
{code}
but it's not true, it works the same as PARTITIONED cache.

Affinity.mapKeyToNode(K key) javadoc says:

{code:java}

     * <li>
     *      For fully replicated caches first node ID returned by {@link AffinityFunction}
     *      is returned.
     * </li>
     * <li>For partitioned caches, primary node for the given key is returned.</li>

{code}

it looks confusing, while REPLICATED cache has primary nodes for keys as PRATITIONED.

Also,  

{code:java}
* Provides affinity information to detect which node is primary and which nodes are
 * backups for a partitioned cache.
{code}

Affinity matter for REPLICATED cache too.
",,cos,dkarachentsev,dpavlov,ezhuravl,Litanontaru,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 24 18:54:14 UTC 2017,,,,,,,,,,"0|i3gsdr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 07:13;Litanontaru;Patch available
https://github.com/apache/ignite/pull/2268;;;","12/Jul/17 12:01;Litanontaru;[~avinogradov], [~sboikov], [~agoncharuk], Please review my changes.;;;","12/Jul/17 16:00;ezhuravl;>For fully replicated caches this method the same way as a partitioned cache.
I think you've forgot verb here.;;;","13/Jul/17 06:01;Litanontaru;fixed;;;","13/Jul/17 13:03;dkarachentsev;Merged to master.;;;","13/Jul/17 13:05;ezhuravl;Thanks for contribution!;;;","24/Jul/17 18:54;cos;Thanks for committing the patch, [~dkarachentsev]dkarachentsev!
Please note, that patches need to be applied with {{git am -s}} command to preserve the original author's name in the interest of giving the credit where is due.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Affinity change message leak on massive topology updates,IGNITE-5593,13082742,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,amashenkov,agoncharuk,agoncharuk,27/Jun/17 08:17,17/Oct/17 10:25,14/Jul/23 06:20,30/Jun/17 07:35,1.7,,,,,2.1,,cache,,,,0,,,,"When late affinity assignment is enabled, we complete the exchange future with custom discovery event. Since discovery topology events usually are much faster than exchange futures completion, it is possible that a newly joined node can 'see' the affinity change messages that are related to previous topology versions when this node even was not present in the topology.

When this message is received, an exchange future is created and this message is added to discoEvts list. However, this future never completes on this node because init() is never called. This means that this exchange future sits in the exchange set with the affinity change message.

Since the number of topology changes (and, thus, messages) can be quite large, this leads to excessive memory consumption on the starting node. I've observed ~3Gb of heap wasted on one of the nodes when > 200 nodes were restarted.",,agoncharuk,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Oct 17 10:25:13 UTC 2017,,,,,,,,,,"0|i3grt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jun/17 08:23;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2210

    IGNITE-5593: Affinity change message leak on massive topology updates

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5593

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2210.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2210
    
----
commit 52a5d4f7725609050fd64335369da7d123598d35
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-27T17:43:07Z

    Fixed.

commit a69488397cbd3d2209f17fc9778237cd7d8d6b79
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-28T08:02:48Z

    Minor.

----
;;;","30/Jun/17 07:35;sboikov;Reviewed, merged into master.;;;","17/Oct/17 10:25;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/2210
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: InstanceResourceAttribute does not work in scan queries,IGNITE-5588,13082485,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,26/Jun/17 12:02,26/Jun/17 14:41,14/Jul/23 06:20,26/Jun/17 14:41,,,,,,2.1,,platforms,,,,0,,,,Ignite is not injected in scan query filter,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 26 14:41:08 UTC 2017,,,,,,,,,,"0|i3gq8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Jun/17 14:41;ptupitsyn;Fixed in master: {{d2b47591319967264d8e0b7364494cc8208c016a}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Local caches aren't stored,IGNITE-5581,13082149,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,23/Jun/17 15:05,01/Aug/19 22:06,14/Jul/23 06:20,21/Aug/17 09:36,2.1,,,,,2.1,,persistence,,,,0,,,,,,githubbot,gvvinblade,,,,,,,,,,,"dspavlov commented on issue #2185: IGNITE-5581
URL: https://github.com/apache/ignite/pull/2185#issuecomment-517475409
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600","dspavlov commented on pull request #2185: IGNITE-5581
URL: https://github.com/apache/ignite/pull/2185
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 23 15:57:04 UTC 2017,,,,,,,,,,"0|i3go5j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 15:57;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2185

    IGNITE-5581

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-gg-12168

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2185.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2185
    
----
commit 2b0741039e7cc6e36871b97bab53780edfc84648
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T12:38:55Z

    ignite-5267 : Removed redundant test.

commit 4a86cae203ed9aed953cd6093884cf8cab4531e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T12:48:39Z

    ignite-2.1.1 fix state processor, skip if daemon

commit 5c567aeb5458159bc41dbd251dfa8a65701f4861
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T13:06:42Z

    ignite-2.1.1 moving pds tests that depend on indexing to separate suite

commit 5e9d9ebc1140f9647fc1b325ba81d0ad6c2c69f3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T13:21:20Z

    ignite-2.1.1 Added description to MX bean

commit 2c2a9e652b13cf60b7e878a4e20f4ab4ae014e9c
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T13:21:39Z

    Merge remote-tracking branch 'professional/ignite-2.1.1' into ignite-2.1.1

commit 9141b3698d0ec98e512efbc78864cc06781fd8c7
Author: devozerov <vozerov@gridgain.com>
Date:   2017-06-13T13:32:28Z

    IGNITE-5267: Fixed too early StoredCacheData initialization.

commit 0a00f03da78649320cb0bb3579f44d6fe037facc
Author: devozerov <vozerov@gridgain.com>
Date:   2017-06-13T13:32:58Z

    Merge remote-tracking branch 'upstream/ignite-2.1.1' into ignite-2.1.1

commit 2d8c6519d36e2d7890a45b258d3b7439942dca66
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T13:39:13Z

    ignite-2.1.1 Add joining node tests

commit c5cee32a510e5a3524ff88119acfd1963c74d8ad
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T13:39:30Z

    Merge remote-tracking branch 'professional/ignite-2.1.1' into ignite-2.1.1

commit d369dfc4973c179861d1d2ff37fbe8c6c0543d1a
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T13:47:22Z

    ignite-2.1.1 IgniteSpringDataTestSuite - added vm ip finder

commit ab62ce847cb73854f31f1232144f487786a6a3d1
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:30:41Z

    IGNITE-5267 Remove entry from on-heap locks map if it was removed from off-heap

commit 33a9cc4cf9b32d93e34c5855d52ce208a3fd8228
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:33:30Z

    IGNITE-5267 Deserialize binary object explicitly instead of calling cache. Small refactoring.

commit 95257a16aef0bc0bbacdee03503ee483ffc75bda
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:34:37Z

    IGNITE-5267 Small test refactoring and speeding up

commit e2354cb5ea8965276c3696895c86e51315765571
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:37:38Z

    IGNITE-5267 Fixed and simplified test

commit 41cea0bc2f887881a78436e54143313af27e7fa8
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:38:55Z

    IGNITE-5267 Make partitionMapExchange timeout configurable

commit 8e1439782b993c8ccb974bcdbd55d4f2b28a5489
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:40:53Z

    IGNITE-5267 Use owners instead of nodes to properly check finishing of partitionMapExchange

commit ef732dae02673c2ce79575b57454a573f0d1d591
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:42:00Z

    IGNITE-5267 Provide entry key explicitly in cache queries. Fixed test.

commit 5eb40528bd6e52b4c13a4c21ecca74407b081898
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:42:34Z

    IGNITE-5267 Explicitly fail test with known issue

commit e4f203b512cba1dc8ae82b506cadebfed3fd7f65
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T13:58:12Z

    review

commit fd7050c72c8125ed1dd213ef781bdb9971d00413
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T14:02:54Z

    ignite-2.1.1 Add joining node tests in suit

commit 3e509aa604ca342b3f42a73e771a5a4f678d7132
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T14:13:43Z

    ignite-2.1.1 Fixing compilation in tests

commit dea416fa65874d4e33b37b46368f9e476a3904f4
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-13T15:00:32Z

    Merge fix: 4.ea2 into 5267: remove node is loopback check

commit b52a84e885b0f88971290200942e0bbe01252ff6
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:09:41Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-2.1.1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticAware.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheIoManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedSingleGetFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridDhtAtomicCache.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/colocated/GridDhtColocatedLockFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxImplicitSingleStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java
    #	modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java
    #	modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/handlers/ClusterListener.java

commit fb2e6d4ab00e3e443bdd896918e812d6fa6119ba
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:10:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-2.1.1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticAware.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheIoManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedSingleGetFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridDhtAtomicCache.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/colocated/GridDhtColocatedLockFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxImplicitSingleStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java
    #	modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java
    #	modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/handlers/ClusterListener.java

commit 2300ec47da979847c36a41e95bebbbd3af1758f1
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:10:52Z

    Merge remote-tracking branch 'community/ignite-2.1.1' into ignite-2.1.1

commit ff9e4559711c69c73210f5d91036fc829b7eef17
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T15:24:09Z

    ignite-5267 : Minors.

commit 34f8c244313ebf94b65c40d5f17dc507f2b54251
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T15:32:33Z

    ignite-5267 : Minors.

commit 2101132fb553c83a2936bbd8501dbdb696ddd054
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-13T15:36:54Z

    IGNITE-5364 Remove contention on DataStructure creation or removing

commit c49daaecc8db6c0d71927cc149274e9b51e37911
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T15:44:54Z

    ignite-2.1.1 Activate nodes after start

commit 6aecaa358c1f9365eb8b1d073634ac74cc65f4d6
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T16:08:24Z

    ignite-5267 : Minors.

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Actualize VisorMemoryPolicyConfiguration, check fields.",IGNITE-5577,13081993,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,23/Jun/17 04:24,28/Jun/17 03:45,14/Jul/23 06:20,28/Jun/17 03:45,2.0,,,,,2.1,,wizards,,,,0,,,,,,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 28 03:45:17 UTC 2017,,,,,,,,,,"0|i3gn6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 11:01;vsisko;Added missed fields into memory policy transfer object.;;;","28/Jun/17 03:45;kuaw26;Looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Try to get rid of blocking synchronization on cache entry for cache.localPeek operation,IGNITE-5574,13081471,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,21/Jun/17 16:05,28/Jun/17 10:03,14/Jul/23 06:20,28/Jun/17 10:03,1.9,,,,,1.9,,cache,,,,0,,,,"Currently all read/write operations for cache entry value use 'synchronized(this)' on cache entry. This can cause very bad concurrency in scenarios when many threads try to read the same entry, or entry read operation suould wait for some long-running update (e.g. EntryProcessor in atomic cache is executed while entry lock is held).

See also https://issues.apache.org/jira/browse/IGNITE-4932",,agura,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4932,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 21 16:16:43 UTC 2017,,,,,,,,,,"0|i3gjzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jun/17 16:16;agura;Waiting for TC.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TCP Discovery SPI allows multiple NODE_JOINED / NODE_FAILED leading to a cluster DDoS,IGNITE-5569,13081408,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,agoncharuk,agoncharuk,21/Jun/17 12:31,14/Nov/22 14:32,14/Jul/23 06:20,14/Feb/19 21:47,1.7,,,,,2.8,,general,,,,0,ise,,,"A firewall configuration issue may effectively lead to a cluster DDoS. The scheme is as follows:

1) A node G joins the cluster, and a firewall rule forbids incoming connection from cluster to this node
2) Cluster successfully processes NodeAddedMesage and fires a discovery NODE_JOINED event (not sure why?)
4) The last node in the ring fails to connect to the newly joined node and generates NODE_FAILED event
5) Coordinator drops the connection, joining node attempts to connect again

The issues I see here:
1) Neither coordinator nor joining node print out the reason why the joining node failed / did not join. A slight hint (failed to send message to the next node) is printed on the node with the largest order (the one that attempted to close the ring), but the root cause (connection refused) is also not printed
2) The joining node attempts to connect to the cluster with the same node ID. This violates an invariant we heavily rely on that once a node ID leaves a cluster, this ID never comes back again
3) Each discovery event leads to a partition exchange which blocks all cache operations for a time interval equal at least to the full ring latency time. If several nodes are started on a malicious host, this may lead to almost full cluster degradation",,agoncharuk,dkarachentsev,DmitriyGovorukhin,dpavlov,ignitetcbot,nizhikov,sergey-chugunov,vozerov,,,,,"sergey-chugunov-1985 commented on pull request #6037: IGNITE-5569 history of node ids to prevent failed nodes to rejoin the…
URL: https://github.com/apache/ignite/pull/6037
 
 
   … cluster
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/19 06:42;githubbot;600","sergey-chugunov-1985 commented on pull request #6086: IGNITE-5569: prohibit join of node hidden behind firewall, prohibit join of node which ID is already presented in node IDs history
URL: https://github.com/apache/ignite/pull/6086
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/19 13:29;githubbot;600","sergey-chugunov-1985 commented on pull request #6108: IGNITE-5569 changes to prohibit join of nodes behind the firewall and nodes dropped from topology after network glitch
URL: https://github.com/apache/ignite/pull/6108
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 14:02;githubbot;600","asfgit commented on pull request #6108: IGNITE-5569 changes to prohibit join of nodes behind the firewall and nodes dropped from topology after network glitch
URL: https://github.com/apache/ignite/pull/6108
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/19 21:50;githubbot;600","dspavlov commented on issue #6086: IGNITE-5569: prohibit join of node hidden behind firewall, prohibit join of node which ID is already presented in node IDs history
URL: https://github.com/apache/ignite/pull/6086#issuecomment-517478436
 
 
   
   IGNITE-5569 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:19;githubbot;600","dspavlov commented on pull request #6086: IGNITE-5569: prohibit join of node hidden behind firewall, prohibit join of node which ID is already presented in node IDs history
URL: https://github.com/apache/ignite/pull/6086
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:19;githubbot;600","dspavlov commented on issue #6037: IGNITE-5569 history of node ids to prevent failed nodes to rejoin the…
URL: https://github.com/apache/ignite/pull/6037#issuecomment-517478489
 
 
   
   IGNITE-5569 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:19;githubbot;600","dspavlov commented on pull request #6037: IGNITE-5569 history of node ids to prevent failed nodes to rejoin the…
URL: https://github.com/apache/ignite/pull/6037
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:19;githubbot;600",,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 14 21:47:23 UTC 2019,,,,,,,,,,"0|i3gjlj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Sep/17 14:28;dkarachentsev;[PR 2554|https://github.com/apache/ignite/pull/2554];;;","28/Sep/17 13:11;vozerov;Moved to 2.4 due to inactivity.;;;","03/May/18 13:54;agoncharuk;[~yzhdanov] Can you please take a look at the fix? The changes look legit to me.;;;","17/Jul/18 14:40;sergey-chugunov;[~dkarachentsev],

Improvement looks good to me, lets wait for TC status, and proceed with merging if it's OK.;;;","18/Jul/18 12:22;dkarachentsev;[TC|https://ci.ignite.apache.org/project.html?projectId=IgniteTests24Java8&branch_IgniteTests24Java8=pull%2F2554%2Fhead] looks OK.;;;","17/Aug/18 10:48;dpavlov;[~dkarachentsev] tests seem to be more or less OK, but still, I've retriggered failed suites.

Could you please cover review checklist items and share it as JIRA comment.

https://lists.apache.org/thread.html/3196274d0be41ebd722536542914a0d86bab9d6764d14217681dedb3@%3Cdev.ignite.apache.org%3E

See  https://cwiki.apache.org/confluence/display/IGNITE/Review+Checklist

E.g. comment can be as follows:
1.a API compatibility MUST be maintained 
No API changes
1.b Default behavior SHOULD NOT be changed
Default behavior was not changed.
etc.

Then we can ask Yakov to review.;;;","17/Aug/18 11:16;dkarachentsev;[~dpavlov] thank you! Here is checklist status:
1.a API compatibility MUST be maintained between minor releases.
No API changes.
1.b Default behavior SHOULD NOT be changed between minor releases, unless absolutely needed.
Default behavior changed a bit, but it's a fix.
1.c New operation MUST be well-documented in code.
Javadoc presented.
1.d API parity between Java and .NET platforms
No changes needed.
1.e API parity between thin clients (Java, .NET)
No changes needed.
1.f All exceptions thrown to a user SHOULD have explanation how to resolve, workaround or debug an error.
Yes.
2. Compatibility.
Does not affect compatibility.
3. Tests
Done.
4. Codestyle.
Done.

[~yzhdanov] Please review.;;;","21/Sep/18 12:20;nizhikov;[~dkarachentsev] Do we have a chance to resolve this ticket until the code freeze of 2.7?;;;","27/Nov/18 16:17;agoncharuk;Cannot merge without conflicts, pull from master is needed.;;;","05/Feb/19 10:00;agoncharuk;I've recently stumbled upon another duplicate discovery notification case, when there were no firewall involved. Looks like a ring can ""forget"" about node fail event and process node join request again. I think we can introduce a limited history of ever joined nodes and forbid to join a node (send an error response for join request and drop node added message) if such a node is present in the history.;;;","14/Feb/19 21:42;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3085164&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","14/Feb/19 21:47;DmitriyGovorukhin;[~sergey-chugunov] LGTM, thanks for the contribution! Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertions in TCP discovery SPI when NTP is moving time backwards,IGNITE-5562,13081148,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slava.koptilin,agoncharuk,agoncharuk,20/Jun/17 14:31,28/Aug/17 16:40,14/Jul/23 06:20,11/Jul/17 10:58,1.7,,,,,2.3,,general,,,,0,,,,"In several places in TcpDiscoverySPI, when metrics are updated, we assert that time is not negative. However, in some cases, this invariant may fail because of time adjustments. 

Since a missed metric is not critical for us, we should remove these assertions and replace negative time with 0.",,agoncharuk,agura,sergey-chugunov,slava.koptilin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 10:58:26 UTC 2017,,,,,,,,,,"0|i3ghzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 14:37;sergey-chugunov;Thinking more generally I believe we must prohibit any assertions in metrics. We may print out warnings to logs at max.;;;","07/Jul/17 12:45;slava.koptilin;Hi [~agoncharuk],
Could you please take a look at the pull-request: https://github.com/apache/ignite/pull/2259 ?;;;","11/Jul/17 10:58;agura;Merged to master branch.

Thanks for contribution.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Integer to Long cast exception during load test when print cache size,IGNITE-5556,13081075,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,krybakova,krybakova,20/Jun/17 10:22,20/Jun/17 10:58,14/Jul/23 06:20,20/Jun/17 10:58,2.1,,,,,2.1,,,,,,0,,,,"""java.lang.Integer cannot be cast to java.lang.Long"" occurs during preloading phase of load test. 

{noformat}
<13:13:02><pool-4-thread-1><yardstick> Failed to print cache size [cache=orgCache, msg=class org.apache.ignite.IgniteCheckedException: java.lang.Integer cannot be cast to java.lang.Long]
[2017-06-20 13:13:02,845][ERROR][pool-4-thread-1][GridTaskWorker] Failed to reduce job results due to undeclared user exception [task=o.a.i.i.processors.cache.GridCacheAdapter$SizeLongTask@2d899933, err=java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long]
java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter$SizeLongTask.reduce(GridCacheAdapter.java:6266)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter$SizeLongTask.reduce(GridCacheAdapter.java:6210)
        at org.apache.ignite.internal.processors.task.GridTaskWorker$6.call(GridTaskWorker.java:1113)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6608)
        at org.apache.ignite.internal.processors.task.GridTaskWorker.reduce(GridTaskWorker.java:1111)
        at org.apache.ignite.internal.processors.task.GridTaskWorker.onResponse(GridTaskWorker.java:938)
        at org.apache.ignite.internal.processors.task.GridTaskWorker.processDelayedResponses(GridTaskWorker.java:687)
        at org.apache.ignite.internal.processors.task.GridTaskWorker.body(GridTaskWorker.java:538)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at org.apache.ignite.internal.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:744)
        at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:443)
        at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:399)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter.sizeLongAsync(GridCacheAdapter.java:3742)
        at org.apache.ignite.internal.processors.cache.GridCacheAdapter.sizeLong(GridCacheAdapter.java:3688)
        at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.sizeLong(IgniteCacheProxy.java:1054)
        at org.apache.ignite.yardstick.PreloadLogger.printCacheStatistics(PreloadLogger.java:89)
        at org.apache.ignite.yardstick.PreloadLogger.printCachesStatistics(PreloadLogger.java:72)
        at org.apache.ignite.yardstick.PreloadLogger.run(PreloadLogger.java:63)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
{noformat}",,krybakova,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 20 10:58:29 UTC 2017,,,,,,,,,,"0|i3ghjj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 10:58;sboikov;Found that SizeLongJob really could return int if job arrives before cache is started,
 fixed (f58b222907199ae51cf02dd48eac99ea3a2f1ae3).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceProcessor may process failed reassignments in timeout thread,IGNITE-5554,13081060,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,agoncharuk,agoncharuk,20/Jun/17 09:47,14/Jul/17 11:41,14/Jul/23 06:20,07/Jul/17 14:47,1.7,,,,,2.1,,managed services,,,,0,,,,"The following parts of GridServiceProcessor look wrong to me: 
In GridServiceProcessor.TopologyListener#onReassignmentFailed
{code}
@Override public void onTimeout() {
    onReassignmentFailed(topVer, retries);
}
{code}

And in GridServiceProcessor#onDeployment
{code}
@Override public void onTimeout() {
.....
    // Try again.
    onDeployment(dep, topVer);
}
{code}

The rest of ServiceProcessor relies on the deployments being processed in a single thread, while this code will be executed in the timeout processor thread. Not only can it take a lot of time to reassign, which will stall the timeout thread, but it may also break the service assignment logic.

The corresponding calls should be wrapped to runnables and submitted to the depExe.",,agoncharuk,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 14 11:41:46 UTC 2017,,,,,,,,,,"0|i3ghg7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Jul/17 09:05;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/2230

    IGNITE-5554 ServiceProcessor may process failed reassignments in timeout thread

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5554

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2230.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2230
    
----
commit 7734a7d0adbd5f43bcaa4d726231388fcd0d4784
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-30T17:23:55Z

    Deployment re-try operations are moved to deployment executor.

----
;;;","14/Jul/17 11:41;githubbot;Github user mcherkasov closed the pull request at:

    https://github.com/apache/ignite/pull/2230
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite PDS 2: IgnitePersistentStoreDataStructuresTest testSet assertion error,IGNITE-5553,13081058,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,xtern,dpavlov,dpavlov,20/Jun/17 09:39,20/Sep/18 09:24,14/Jul/23 06:20,17/Sep/18 15:11,2.1,,,,,2.7,,data structures,persistence,,,0,MakeTeamcityGreenAgain,Muted_test,test-fail,"h2. Notes-4435
When IgniteSet is restored from persistence, size of set is always 0, [link to test history|http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&testNameId=-7043871603266099589&tab=testDetails].

h2. Detailed description
Unlike *IgniteQueue* which uses separate cache key to store its size *IgniteSet* stores it in a field of some class.
Test from the link above shows very clearly that after restoring memory state from PDS all set values are restored correctly but size is lost.

h2. Proposed solution
One possible solution might be to do the same thing as *IgniteQueue* does: size of *IgniteSet* must be stored is cache instead of volatile in-memory fields of random classes.",,andrey-kuznetsov,avinogradov,dpavlov,githubbot,ilantukh,mmuzaf,riza,sergey-chugunov,SomeFire,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5370,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Sep 20 09:24:21 UTC 2018,,,,,,,,,,"0|i3ghfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Oct/17 13:16;andrey-kuznetsov;Indeed, we can put current set size into set header cache entry. This will fix size(), but we have broken iterator() implementation as well.

Currently, set implementation maintains plain Java sets on every node, see CacheDataStructuresManager.setDataMap. These sets duplicate backing-cache entries, both primary and backup. size() and iterator() calls issue distributed queries to collect/filter data from all setDataMap's. And setDataMaps remain empty after cluster is recovered from checkpoint.

Now I see the following options to fix the issue.

#1 - Naive. Iterate over all datastructure-backing caches entries during recover from checkpoint procedure, filter set-related entries and refill setDataMap's.
Pros: easy to implement
Cons: inpredictable time/memory overhead.

#2 - More realistic. Avoid node-local copies of cache data. Maintain linked list in datastructure-backing cache: key is set item, value is next set item. List head is stored in set header cache entry (this set item is youngest one). Iterators build on top of this structure are fail-fast.
Pros: less memory overhead, no need to maintain node-local mirrors of cache data
Cons: iterators are not fail-safe.

#3 - Option #2 modified. We can store reference counter and 'removed' flag along with next item reference. This allows to make iterators fail safe.
Pros: iterators are fail-safe
Cons: slightly more complicated implementation, may affect performance, also I see no way to handle active iterators on remote nodes failures.

[~sergey-chugunov], any thoughts? Or maybe we should discuss this on devlist?;;;","30/Oct/17 08:01;sergey-chugunov;[~andrey-kuznetsov],
Options you've proposed don't look like a simple fix and may impact other aspects of data structures like performance or memory consumption.
So it is better to discuss them on dev-list to keep community aware of the changes.;;;","14/Feb/18 13:43;xtern;Hello.

In addition to [discussion on devlist|http://apache-ignite-developers.2346864.n4.nabble.com/IgniteSet-implementation-changes-required-td23783.html], I want to describe in more detail another way to implement IgniteSet, which will not use JVM heap for duplicate values (this approach was not discussed yet).

Introduce GridCacheSetIndexKey as follows:
{code:java}
IgniteUuid id;
long idx;
{code}

For each IgniteSet element put two key-value pairs.
First:
{noformat}
   key - GridCacheSetItemKey
 value - GridCacheSetIndexKey
{noformat}
Second:
{noformat}
   key - GridCacheSetIndexKey
 value - GridCacheSetItemKey
{noformat}

Add HEAD and TAIL indexes to the GridCacheSetHeader.

The main purpose for indexes is to hold the data in such way that will allow iterate through items from head to tail (similarly to IgniteQueue).

For clarity, I'll give an example of *IgniteSet with elements A, B, C*.
Datastructures cache
||key||value||
|A|0|
|B|1|
|C|2|
|.|.|
|0|A|
|1|B|
|2|C|
|.|.|
{noformat}
head = 0, tail = 3
{noformat}

*Addition of the element ""D""*:
||key||value||
|A|0|
|B|1|
|C|2|
|D|3|
|.|.|
|0|A|
|1|B|
|2|C|
|3|D|
|.|.|
{noformat}
 head = 0, tail = 4
{noformat}
 
*To remove element ""B""* we can move the tail element (""D"") to the location of ""B"":
||key||value||
|A|0|
|C|2|
|D|1|
|.|.|
|0|A|
|1|D|
|2|C|
|-- tail --|
|3|D|
|.|.|
{noformat}
head = 0, tail = 3.
{noformat}

Operation ""contains"" will work as before, iterator will work as current IgniteQueue iterator.;;;","28/Feb/18 13:44;githubbot;GitHub user xtern opened a pull request:

    https://github.com/apache/ignite/pull/3587

    IGNITE-5553 Restore IgniteSet local data when PDS enabled.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/xtern/ignite IGNITE-5553

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3587.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3587
    
----
commit 8e01cf250d4f4cd06d2b3c44612b439410745219
Author: pereslegin-pa <xxtern@...>
Date:   2018-02-28T09:27:57Z

    IGNITE-5553 PDS restore local set data.

----
;;;","01/Mar/18 15:18;xtern;Hello [~dpavlov].
Please take a look at the patch provided.
This fix recovers local (on-heap) IgniteSet data from cache during cluster activation.;;;","01/Mar/18 15:25;dpavlov;Hi [~xtern], could you provide link to TC run all?;;;","01/Mar/18 15:40;xtern;[~dpavlov], I updated TC test results link.;;;","01/Mar/18 16:14;dpavlov;TC looks good, thank you. ;;;","19/Mar/18 13:07;xtern;Hello [~dpavlov],

could you suggest someone who can review this fix?;;;","19/Mar/18 16:52;dpavlov;Can I ask [~andrey-kuznetsov] to look to this change first?

TC seems ok, I left several comments in https://reviews.ignite.apache.org/ignite/review/IGNT-CR-508 , mostly confused by boolean init flags there.;;;","20/Mar/18 14:45;andrey-kuznetsov;[~dpavlov], we discussed the PR with [~xtern] and replaced two init flags with single state field (that is, single mean of synchronization). Now I like the changes. ;;;","21/Mar/18 15:42;xtern;Hello [~dpavlov],

thank you and Andrey K for the review.
TeamCity looks overloaded nowadays, so the tests have been run in several attempts, but cumulative results are good.;;;","23/Mar/18 14:08;dpavlov;Hi [~ilantukh], 

I've checked changes but stil need advice if it safe to initialize set this way
https://reviews.ignite.apache.org/ignite/review/IGNT-CR-508

Could you please take a look to CacheDataStructuresManager and its initialization stages.;;;","05/Apr/18 12:23;xtern;Hello [~ilantukh],
I updated this patch and test results, could you look again, please?;;;","19/Apr/18 13:25;ilantukh;[~xtern], sorry for late reply.
New solution also has problems (explained in Upsource). We need to think about other possible approaches. I'll think for a while and summarize my thoughts on dev list. Feel free to share your ideas as well.;;;","03/May/18 14:30;avinogradov;[~ilantukh], [~xtern]
1) It looks like main problem is that {{org.apache.ignite.internal.processors.cache.datastructures.CacheDataStructuresManager#onEntryUpdated}} is not called on memory restore, so {{org.apache.ignite.internal.processors.cache.datastructures.CacheDataStructuresManager#setDataMap}} is not filled on restart.

We have to call {{org.apache.ignite.internal.processors.cache.datastructures.CacheDataStructuresManager#onEntryUpdated}} on memory restore finished (somewhere at {{org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager#restoreMemory}}) like we call it on each cacheEntry update, I think.

2) Another approach is to have cache per set (see IGNITE-7823 for details). 
In that case we'll get rid of {{org.apache.ignite.internal.processors.cache.datastructures.CacheDataStructuresManager#setDataMap}}

Thoughts?;;;","04/Sep/18 13:04;xtern;As described above, collocated IgniteSet uses on-heap caching known as ""setDataMap"" to support iterator, and I didn't find the optimal way to recover heap data after node restart ([details here|http://apache-ignite-developers.2346864.n4.nabble.com/IgniteSet-implementation-changes-required-tp23783p31923.html]).
On devlist we decided to remove this optimization and the changes are ready according to this discussion.

[~Mmuzaf], take a look at this patch please.;;;","04/Sep/18 14:59;mmuzaf;[~xtern], [~avinogradov]

I've read the whole discussion on dev.list according to this change and removing {{setDataMap}} seems to be a bit less risky and easier to implement without huge {{IgniteSet}} slowdown impact.

I think prepared PR is ready for final review, whole its changes looks good to me.

Anton, can you look at this PR as an expert in data structures an provide your thoughts? 
If everything is OK, I think we can start checking TC carefully.;;;","13/Sep/18 15:57;avinogradov;[~Mmuzaf] , [~xtern] ,

I've checked the changes. 

Initially, looks good to me.

Let's check TC and I will recheck the fix.;;;","17/Sep/18 07:25;xtern;[~avinogradov],
merged with last master.
TC results look good. ;;;","17/Sep/18 14:36;SomeFire;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All|http://ci.ignite.apache.org/viewLog.html?buildId=1880784&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","17/Sep/18 15:11;avinogradov;Merged to master.
Thanks for the contribution.;;;","20/Sep/18 09:24;githubbot;Github user xtern closed the pull request at:

    https://github.com/apache/ignite/pull/3587
;;;",,,,,,,,,,,,,,,,,,,
Deadlock Detection uses IgniteCheckedException instead of TransactionTimeoutException,IGNITE-5548,13080986,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,gvvinblade,dmagda,dmagda,20/Jun/17 02:26,02/Aug/19 11:01,14/Jul/23 06:20,04/Jul/17 14:05,2.0,,,,,2.1,,cache,,,,0,,,,"Something has been broken in the deadlock detection mechanism because now it wraps {{TransactionDeadlockException}} into {{IgniteCheckedException}} rather than in {{TransactionTimeoutException}}.

See discussion:
http://apache-ignite-developers.2346864.n4.nabble.com/Transaction-Deadlock-Detection-exception-is-not-wrapped-by-the-timeout-exception-td18786.html",,dmagda,githubbot,,,,,,,,,,,"dspavlov commented on issue #2172: IGNITE-5548
URL: https://github.com/apache/ignite/pull/2172#issuecomment-517659843
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:01;githubbot;600","dspavlov commented on pull request #2172: IGNITE-5548
URL: https://github.com/apache/ignite/pull/2172
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 21 12:06:23 UTC 2017,,,,,,,,,,"0|i3ggzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jun/17 12:06;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2172

    IGNITE-5548

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5548

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2172.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2172
    
----
commit 8c9f1488131f77c6d2994dab033fb4aee5a524e7
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-06-21T12:05:05Z

    IGNITE-5548

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE (PersistentStoreExample),IGNITE-5538,13080775,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ustas,ustas,19/Jun/17 10:14,13/Jul/17 10:46,14/Jul/23 06:20,11/Jul/17 08:47,2.1,,,,,2.1,,cache,,,,0,,,,"Steps to reproduce:
1. Start *PersistentStoreExampleNodeStartup*
2. Start *PersistentStoreExample* (UPLOAD=true)
Result:
1. Topology snapshot [ver=2, servers=1, clients=1, CPUs=8, heap=7.1GB]
2. Started preloading
3. On ExampleNode got exception:
{noformat}
[2017-06-19 13:11:28,545][WARN ][grid-nio-worker-tcp-comm-3-#20%null%][TcpCommunicationSpi] Failed to process selector key (will close): GridSelectorNioSessionImpl [worker=DirectNioClientWorker [super=AbstractNioClientWorker [idx=3, bytesRcvd=2052, bytesSent=252, bytesRcvd0=228, bytesSent0=28, select=true, super=GridWorker [name=grid-nio-worker-tcp-comm-3, igniteInstanceName=null, finished=false, hashCode=1279096191, interrupted=false, runner=grid-nio-worker-tcp-comm-3-#20%null%]]], writeBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], readBuf=java.nio.DirectByteBuffer[pos=4 lim=186 cap=32768], inRecovery=GridNioRecoveryDescriptor [acked=103, resendCnt=0, rcvCnt=104, sentCnt=103, reserved=true, lastAck=96, nodeLeft=false, node=TcpDiscoveryNode [id=be66eae2-3986-4772-b02b-bf2813370a15, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.115, 172.25.4.116, 2001:db8:85a3:0:0:8a2e:370:7334], sockAddrs=[/0:0:0:0:0:0:0:1:0, /127.0.0.1:0, /172.25.4.115:0, /172.25.4.116:0, /2001:db8:85a3:0:0:8a2e:370:7334:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1497867042970, loc=false, ver=2.1.1#20170618-sha1:09ce29e0, isClient=true], connected=true, connectCnt=1, queueLimit=4096, reserveCnt=35, pairedConnections=false], outRecovery=GridNioRecoveryDescriptor [acked=103, resendCnt=0, rcvCnt=104, sentCnt=103, reserved=true, lastAck=96, nodeLeft=false, node=TcpDiscoveryNode [id=be66eae2-3986-4772-b02b-bf2813370a15, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 172.25.4.115, 172.25.4.116, 2001:db8:85a3:0:0:8a2e:370:7334], sockAddrs=[/0:0:0:0:0:0:0:1:0, /127.0.0.1:0, /172.25.4.115:0, /172.25.4.116:0, /2001:db8:85a3:0:0:8a2e:370:7334:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1497867042970, loc=false, ver=2.1.1#20170618-sha1:09ce29e0, isClient=true], connected=true, connectCnt=1, queueLimit=4096, reserveCnt=35, pairedConnections=false], super=GridNioSessionImpl [locAddr=/0:0:0:0:0:0:0:1:47100, rmtAddr=/0:0:0:0:0:0:0:1:60813, createTime=1497867087529, closeTime=0, bytesSent=28, bytesRcvd=228, bytesSent0=28, bytesRcvd0=228, sndSchedTime=1497867087529, lastSndTime=1497867087529, lastRcvTime=1497867087541, readsPaused=false, filterChain=FilterChain[filters=[GridNioCodecFilter [parser=o.a.i.i.util.nio.GridDirectParser@7a94a8f6, directMode=true], GridConnectionBytesVerifyFilter], accepted=true]]
[2017-06-19 13:11:28,545][ERROR][grid-nio-worker-tcp-comm-3-#20%null%][TcpCommunicationSpi] Closing NIO session because of unhandled exception.
class org.apache.ignite.internal.util.nio.GridNioException: null
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2199)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1968)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1669)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.managers.communication.GridIoMessageFactory.create(GridIoMessageFactory.java:879)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$9.create(TcpCommunicationSpi.java:2134)
	at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMessage(DirectByteBufferStreamImplV2.java:1154)
	at org.apache.ignite.internal.direct.DirectMessageReader.readMessage(DirectMessageReader.java:311)
	at org.apache.ignite.internal.managers.communication.GridIoMessage.readFrom(GridIoMessage.java:261)
	at org.apache.ignite.internal.util.nio.GridDirectParser.decode(GridDirectParser.java:90)
	at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:114)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onMessageReceived(GridConnectionBytesVerifyFilter.java:133)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3222)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
	at org.apache.ignite.internal.util.nio.GridNioServer$DirectNioClientWorker.processRead(GridNioServer.java:1213)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2180)
	... 4 more
{noformat}

Full logs in attachment.",,agoncharuk,githubbot,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Jun/17 10:14;ustas;PersistentStoreExample.txt;https://issues.apache.org/jira/secure/attachment/12873469/PersistentStoreExample.txt","19/Jun/17 10:14;ustas;PersistentStoreExampleNode.txt;https://issues.apache.org/jira/secure/attachment/12873468/PersistentStoreExampleNode.txt",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 13 10:46:05 UTC 2017,,,,,,,,,,"0|i3gfp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jul/17 13:36;githubbot;GitHub user Jokser opened a pull request:

    https://github.com/apache/ignite/pull/2273

    IGNITE-5538 Double check for PersistenceStore message factory existence.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5538

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2273.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2273
    
----
commit ab5267134966b466a2d4bfba15d0c7e3ebe91139
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T10:14:18Z

    2.1 More simple tx cancel on node stop

commit 85d8c6572d78c7d6796906d92b566e2fa5b116be
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-07T10:13:55Z

    IGNITE-5520 - Fixed IgniteChangeGlobalStateFailoverTest

commit f589628f4846f14efc8e702b61856cc90a3d0dc7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T10:52:38Z

    Rename ActionData -> CacheActionData.

commit 30922ed8ac518749a2559aff51fe183a890041bb
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-07-07T11:03:18Z

    ignite-2.1 Added map with previous snapshots.

commit 99fd75dd7766318af88a38b5640a648bba3ccdf1
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-07T11:38:36Z

    IGNITE-5483: Added limited support for Java8 LocalDateTime. This closes #2248.

commit 4fc8124d9538625cb0a95c918634b43ec1319bee
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T11:43:28Z

    Fixed formatting.

commit 984ab5bd3c08b2af9222964451acc281b92814b8
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T11:43:50Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 7adb11109bab5d83ed4f376b0cad42b026dd0a71
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T11:49:13Z

    Fixed formatting.

commit 2a5390b1c083819f059e449b34a5979ec35b7755
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-07T12:01:43Z

    IGNITE-5159: DDL example. This closes #2227.

commit d232648711c882ed304eae89ae19f151067649fd
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-07T12:02:29Z

    Merge remote-tracking branch 'upstream/ignite-2.1.2' into ignite-2.1.2

commit a9387adef490086406b05fe961ff0f3151045caa
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T12:21:20Z

    IGNITE-5717 .NET: Reduce MemoryPolicyConfiguration.MaxSize for persistence tests as a workaround for OOM on default settings

commit 13399d530f3458c3bf59634857cb05f801e8cc34
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:24:09Z

    2.1 Fixed assert (cacheName can be null here).

commit ea4420e6aad509c4ae58d6d0880918c98fd1959a
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:24:26Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 0d6fb1ad73e8ed448dabe7c0cc631222835b52c4
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-07T12:54:52Z

    IGNITE-5204: Fixed NPE on certain data with index inlining. This closes #2115.

commit a1cac1b7cc1c3afdcc12afb08bf1ecdcb6f28828
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:55:18Z

    Removed unused method GridDhtPartitionTopology.checkEvictions().

commit 55a5ca019db7d06aab2fb567dbc0da1f133d0fb7
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T12:55:38Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 99713feea764fc8c3e5b247a24698a2c04d3bcf4
Author: Sergey Kalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-07T13:30:37Z

    IGNITE-5204: SQL: fixed incorrect partition calculation in case of unicast optimization, when WHERE clause argument type was different from key or affinity key type. This close #2107.

commit 3c887378eb64d2d236073410070082e5699e8334
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-07T13:52:31Z

    IGNITE-5582: Implemented Compute::Broadcast for C++
    
    (cherry picked from commit fa974286e8f066a8d6aa57519edf5ec7761be095)

commit 3314a4513c816c027dad80258ded1fe5a4c2b700
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-07T14:28:47Z

    Fixed cache plugin validation.

commit 517a23d252078e62a8addca55ca78497e5226b5b
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-30T17:23:55Z

    IGNITE-5554 ServiceProcessor may process failed reassignments in timeout thread

commit 993f7fbe1d49a524e2dee626aef72e16fd5d3cda
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-07T15:55:27Z

    IGNITE-5701 - Some nodes have partitionUpdateCounter equal to 0 after rebalancing

commit e5c2ec5a62c0d5fc268275ea9277f6933a582966
Author: Alexey Kuznetsov <akuznetsov@gridgain.com>
Date:   2017-07-07T16:06:52Z

    ignite-2.1 Minor.

commit eb37f538f55a471258e49ee2fbf0e8f234829def
Author: vsisko <vsisko@gridgain.com>
Date:   2017-07-07T16:22:59Z

    IGNITE-5369 Added support for _key and _val names on QueryEntity XML and code generation.

commit 82e5f8a6553323e793c01c54e24dda6d47188ce6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T16:28:54Z

    IGNITE-5716 .NET: Fix 2-byte field offset handling

commit cb5ae9617af900e953e0f6f065adcd707d2b3830
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T17:15:47Z

    .NET: Remove unused import and redundant cast

commit 17904cb174a340ec928f4a7a4b12d294c2240d0f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-07T17:18:35Z

    .NET: Fix IgniteConfigurationTest

commit 36716fb1f4de5d1f5baab1e27afc95583dd4c7b4
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-07-10T08:09:43Z

    GG-12466 - Clean up public API for snapshots

commit a53544410dd15a3a5112d6de88648db21bd3fcf3
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-10T08:38:04Z

    ignite-5446 Alway use late affinity assignment mode

commit 17694c16d449dea4d4e39a271dd39e838c581858
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-10T08:59:19Z

    IGNITE-5694 - Added retries for getCollection in DataStructuresProcessor - Fixes #2240.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 0b9527e851fd7c1d63bfc427721ca8af80d54b0c
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-10T09:02:03Z

    Fixed NPE in setOwners.

----
;;;","10/Jul/17 15:06;ustas;I've re-checked this issue and got another exception on *PersistentStoreExampleNodeStartup*
{noformat}
2017-07-10 18:03:21,143][ERROR][grid-nio-worker-tcp-comm-2-#19%null%][GridDirectParser] Failed to read message [msg=GridIoMessage [plc=0, topic=null, topicOrd=-1, ordered=false, timeout=0, skipOnTimeout=false, msg=null], buf=java.nio.DirectByteBuffer[pos=4 lim=186 cap=32768], reader=DirectMessageReader [state=DirectMessageState [pos=0, stack=[StateItem [stream=DirectByteBufferStreamImplV2 [baseOff=140442328149504, arrOff=-1, tmpArrOff=0, tmpArrBytes=0, msgTypeDone=false, msg=null, mapIt=null, it=null, arrPos=-1, keyDone=false, readSize=-1, readItems=0, prim=0, primShift=0, uuidState=0, uuidMost=0, uuidLeast=0, uuidLocId=0, lastFinished=true], state=0], null, null, null, null, null, null, null, null, null]], lastRead=false], ses=GridSelectorNioSessionImpl [worker=DirectNioClientWorker [super=AbstractNioClientWorker [idx=2, bytesRcvd=9078, bytesSent=1092, bytesRcvd0=228, bytesSent0=28, select=true, super=GridWorker [name=grid-nio-worker-tcp-comm-2, igniteInstanceName=null, finished=false, hashCode=1625090318, interrupted=false, runner=grid-nio-worker-tcp-comm-2-#19%null%]]], writeBuf=java.nio.DirectByteBuffer[pos=0 lim=32768 cap=32768], readBuf=java.nio.DirectByteBuffer[pos=4 lim=186 cap=32768], inRecovery=GridNioRecoveryDescriptor [acked=102, resendCnt=0, rcvCnt=103, sentCnt=102, reserved=true, lastAck=96, nodeLeft=false, node=TcpDiscoveryNode [id=c7daa293-fa04-46e2-9bac-00bc74fea454, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 192.168.1.143, 2001:db8:85a3:0:0:8a2e:370:7334], sockAddrs=[/0:0:0:0:0:0:0:1:0, /127.0.0.1:0, /2001:db8:85a3:0:0:8a2e:370:7334:0, mpb/192.168.1.143:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1499698832629, loc=false, ver=2.1.2#20170707-sha1:17904cb1, isClient=true], connected=true, connectCnt=1, queueLimit=4096, reserveCnt=158, pairedConnections=false], outRecovery=GridNioRecoveryDescriptor [acked=102, resendCnt=0, rcvCnt=103, sentCnt=102, reserved=true, lastAck=96, nodeLeft=false, node=TcpDiscoveryNode [id=c7daa293-fa04-46e2-9bac-00bc74fea454, addrs=[0:0:0:0:0:0:0:1, 127.0.0.1, 192.168.1.143, 2001:db8:85a3:0:0:8a2e:370:7334], sockAddrs=[/0:0:0:0:0:0:0:1:0, /127.0.0.1:0, /2001:db8:85a3:0:0:8a2e:370:7334:0, mpb/192.168.1.143:0], discPort=0, order=2, intOrder=2, lastExchangeTime=1499698832629, loc=false, ver=2.1.2#20170707-sha1:17904cb1, isClient=true], connected=true, connectCnt=1, queueLimit=4096, reserveCnt=158, pairedConnections=false], super=GridNioSessionImpl [locAddr=/0:0:0:0:0:0:0:1:47100, rmtAddr=/0:0:0:0:0:0:0:1:50726, createTime=1499699001135, closeTime=0, bytesSent=28, bytesRcvd=228, bytesSent0=28, bytesRcvd0=228, sndSchedTime=1499699001135, lastSndTime=1499699001135, lastRcvTime=1499699001135, readsPaused=false, filterChain=FilterChain[filters=[GridNioCodecFilter [parser=o.a.i.i.util.nio.GridDirectParser@6df9f203, directMode=true], GridConnectionBytesVerifyFilter], accepted=true]]]
java.lang.NullPointerException
	at org.apache.ignite.internal.managers.communication.GridIoMessageFactory.create(GridIoMessageFactory.java:879)
	at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$9.create(TcpCommunicationSpi.java:2140)
	at org.apache.ignite.internal.direct.stream.v2.DirectByteBufferStreamImplV2.readMessage(DirectByteBufferStreamImplV2.java:1154)
	at org.apache.ignite.internal.direct.DirectMessageReader.readMessage(DirectMessageReader.java:311)
	at org.apache.ignite.internal.managers.communication.GridIoMessage.readFrom(GridIoMessage.java:261)
	at org.apache.ignite.internal.util.nio.GridDirectParser.decode(GridDirectParser.java:90)
	at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:114)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onMessageReceived(GridConnectionBytesVerifyFilter.java:133)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3222)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
	at org.apache.ignite.internal.util.nio.GridNioServer$DirectNioClientWorker.processRead(GridNioServer.java:1213)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2180)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1968)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1669)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
[2017-07-10 18:03:22,147][ERROR][grid-nio-worker-tcp-comm-2-#19%null%][TcpCommunicationSpi] Closing NIO session because of unhandled exception.
class org.apache.ignite.internal.util.nio.GridNioException: null
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2199)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1968)
	at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1669)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
{noformat};;;","11/Jul/17 08:47;agoncharuk;Merged to ignite-2.1;;;","11/Jul/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2273
;;;","13/Jul/17 10:46;ustas;Fix confirmed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Invalid configuration file variable in generated docker file.,IGNITE-5536,13080757,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,19/Jun/17 09:07,28/Jun/17 08:09,14/Jul/23 06:20,28/Jun/17 08:09,2.1,,,,,2.1,,,,,,0,,,,"# Fix generation of docker file.
# Check creation and work of docker image.",,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 28 08:09:23 UTC 2017,,,,,,,,,,"0|i3gfl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 04:19;vsisko;Fixed generation of docker file.;;;","28/Jun/17 08:09;kuaw26;Looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CREATE INDEX failed if table has been re-created,IGNITE-5533,13080666,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,al.psc,skozlov,skozlov,18/Jun/17 18:17,07/Jul/17 09:38,14/Jul/23 06:20,06/Jul/17 10:02,,,,,,2.1,,sql,,,,0,,,,"The brief scenario:
create table t1 - ok
insert t1 - ok
create index t1 - ok
drop table t1 - ok
create table t1 - ok
insert t1 - ok
create index t1 - fail

{noformat}
[21:13:46,190][SEVERE][sql-connector-#239%null%][JdbcRequestHandler] Failed to execute SQL query [reqId=25, req=JdbcQueryExecuteRequest [schemaName=nu
ll, pageSize=1024, maxRows=0, sqlQry=create index on ""PUBLIC"".t1 (b desc), args=[]]]
class org.apache.ignite.internal.processors.query.IgniteSQLException: Schema change operation failed: Failed to execute SQL statement on internal H2 d
atabase: CREATE INDEX ""t1_b_desc_idx"" ON ""PUBLIC"".""T1"" (""B"" DESC, ""_KEY"" ASC)
        at org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.convert(DdlStatementsProcessor.java:277)
        at org.apache.ignite.internal.processors.query.h2.ddl.DdlStatementsProcessor.runDdlStatement(DdlStatementsProcessor.java:221)
        at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1331)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1856)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1852)
        at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2293)
        at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFieldsNoCache(GridQueryProcessor.java:1860)
        at org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler.executeQuery(JdbcRequestHandler.java:188)
        at org.apache.ignite.internal.processors.odbc.jdbc.JdbcRequestHandler.handle(JdbcRequestHandler.java:122)
        at org.apache.ignite.internal.processors.odbc.SqlListenerNioListener.onMessage(SqlListenerNioListener.java:152)
        at org.apache.ignite.internal.processors.odbc.SqlListenerNioListener.onMessage(SqlListenerNioListener.java:44)
        at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:279)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridNioAsyncNotifyFilter$3.body(GridNioAsyncNotifyFilter.java:97)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at org.apache.ignite.internal.util.worker.GridWorkerPool$1.run(GridWorkerPool.java:70)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
{noformat}

{code:title=repoducer.java|borderStyle=solid}
            Connection conn = DriverManager.getConnection(""jdbc:ignite:thin://127.0.0.1"");
            Statement stmt = conn.createStatement();
            for (int i=0; i < 2; i++) {
                String t = Integer.toString(1);
                print(t);
                stmt.execute(""drop table if exists \""PUBLIC\"".t"" + t);
                stmt.execute(""create table \""PUBLIC\"".t"" + t + "" (a int primary key, b varchar(30))"");
                for (int j=1; j < 10; j++) {
                    String s = Integer.toString(j);
                    stmt.execute(""insert into \""PUBLIC\"".t"" + t + "" (a,b) values ("" + s + "", '"" + s + ""')"");
                }
                stmt.execute(""create index on \""PUBLIC\"".t"" + t + "" (b desc)"");
                stmt.execute(""drop table \""PUBLIC\"".t"" + t);
            }
{code}

",,githubbot,skozlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 07 09:38:55 UTC 2017,,,,,,,,,,"0|i3gf0v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 18:31;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2167

    IGNITE-5533 Proper DROP of dynamic tables.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5533

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2167.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2167
    
----
commit 2f5f910737f9195f0482cfd828eb27f0e98d7947
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-06-20T18:24:58Z

    IGNITE-5533 Proper DROP of dynamic tables.

----
;;;","05/Jul/17 07:50;vozerov;[~al.psc], my comments:
1) Fix looks fine, but I see a hang in ""Ignite Binary Objects Simple Mapper Queries"" suite. Let's rerun the code on recent code base.
2) Please extend the test with {{CREATE INDEX [index_name] ...}} case, i.e. when index name is set explicitly.;;;","07/Jul/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2167
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HibernateL2CacheExample hangs,IGNITE-5531,13080612,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,17/Jun/17 22:23,19/Jun/17 08:34,14/Jul/23 06:20,19/Jun/17 08:34,2.1,,,,,2.1,,examples,,,,0,,,,HibernateL2CacheExample starts and works fine but after {{[01:18:10] Ignite node stopped OK [uptime=00:00:03:023]}} the node is not stopped,,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 22:23;skozlov;st.txt;https://issues.apache.org/jira/secure/attachment/12873398/st.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 17 22:23:45 UTC 2017,,,,,,,,,,"0|i3gep3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 22:23;skozlov;stack trace attached;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H2 can NOT create primary index imported by Web Console from RDBMS,IGNITE-5530,13080604,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,kuaw26,dmagda,dmagda,17/Jun/17 19:06,27/Jun/17 07:17,14/Jul/23 06:20,18/Jun/17 04:45,2.0,2.1,,,,2.1,,,,,,0,,,,"Used the latest version of Web Console and its configuration wizard for version 2.0. A server node started from the generated project immediately fails with the exception below:
{code}
com.intellij.rt.execution.application.AppMain startup.ServerNodeCodeStartup
Jun 17, 2017 11:23:30 AM java.util.logging.LogManager$RootLogger log
SEVERE: Failed to resolve default logging config file: config/java.util.logging.properties
[11:23:31]    __________  ________________ 
[11:23:31]   /  _/ ___/ |/ /  _/_  __/ __/ 
[11:23:31]  _/ // (7 7    // /  / / / _/   
[11:23:31] /___/\___/_/|_/___/ /_/ /___/  
[11:23:31] 
[11:23:31] ver. 2.0.0#20170430-sha1:d4eef3c6
[11:23:31] 2017 Copyright(C) Apache Software Foundation
[11:23:31] 
[11:23:31] Ignite documentation: http://ignite.apache.org
[11:23:31] 
[11:23:31] Quiet mode.
[11:23:31]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[11:23:31] 
[11:23:31] OS: Mac OS X 10.12.5 x86_64
[11:23:31] VM information: Java(TM) SE Runtime Environment 1.8.0_77-b03 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.77-b03
[11:23:31] Initial heap size is 128MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[11:23:31] Configured plugins:
[11:23:31]   ^-- None
[11:23:31] 
[11:23:31] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[11:23:31] Security status [authentication=off, tls/ssl=off]
Jun 17, 2017 11:23:33 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Got exception while starting (will rollback startup routine).
class org.apache.ignite.IgniteCheckedException: Failed to execute SQL statement on internal H2 database: CREATE INDEX PRIMARY ON ""CountrylanguageCache"".Countrylanguage (""COUNTRYCODE"" DESC, ""LANGUAGE"" DESC, ""_KEY"" ASC)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSql(IgniteH2Indexing.java:875)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.addInitialUserIndex(IgniteH2Indexing.java:780)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.createTable(IgniteH2Indexing.java:2009)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.registerType(IgniteH2Indexing.java:1859)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.registerCache0(GridQueryProcessor.java:1306)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.onCacheStart0(GridQueryProcessor.java:756)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.onCacheStart(GridQueryProcessor.java:817)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.startCache(GridCacheProcessor.java:1265)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.onKernalStart(GridCacheProcessor.java:898)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1013)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:595)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:519)
	at org.apache.ignite.Ignition.start(Ignition.java:322)
	at startup.ServerNodeCodeStartup.main(ServerNodeCodeStartup.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement ""CREATE INDEX PRIMARY[*] ON """"CountrylanguageCache"""".COUNTRYLANGUAGE (""""COUNTRYCODE"""" DESC, """"LANGUAGE"""" DESC, """"_KEY"""" ASC) ""; expected ""identifier""; SQL statement:
CREATE INDEX PRIMARY ON ""CountrylanguageCache"".Countrylanguage (""COUNTRYCODE"" DESC, ""LANGUAGE"" DESC, ""_KEY"" ASC) [42001-195]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.getSyntaxError(DbException.java:205)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:3197)
	at org.h2.command.Parser.parseCreate(Parser.java:4374)
	at org.h2.command.Parser.parsePrepared(Parser.java:365)
	at org.h2.command.Parser.parse(Parser.java:320)
	at org.h2.command.Parser.parse(Parser.java:292)
	at org.h2.command.Parser.prepareCommand(Parser.java:257)
	at org.h2.engine.Session.prepareLocal(Session.java:573)
	at org.h2.engine.Session.prepareCommand(Session.java:514)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:482)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSql(IgniteH2Indexing.java:870)
	... 21 more

[11:23:33] Cancelled rebalancing from all nodes [topology=null]
[11:23:33] Cancelled rebalancing from all nodes [topology=null]
[11:23:33] Cancelled rebalancing from all nodes [topology=null]
[11:23:33] Ignite node stopped OK [name=Ignite-MySQL-Cluster, uptime=00:00:02:775]
Exception in thread ""main"" class org.apache.ignite.IgniteException: Failed to execute SQL statement on internal H2 database: CREATE INDEX PRIMARY ON ""CountrylanguageCache"".Countrylanguage (""COUNTRYCODE"" DESC, ""LANGUAGE"" DESC, ""_KEY"" ASC)
	at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:949)
	at org.apache.ignite.Ignition.start(Ignition.java:325)
	at startup.ServerNodeCodeStartup.main(ServerNodeCodeStartup.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL statement on internal H2 database: CREATE INDEX PRIMARY ON ""CountrylanguageCache"".Countrylanguage (""COUNTRYCODE"" DESC, ""LANGUAGE"" DESC, ""_KEY"" ASC)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSql(IgniteH2Indexing.java:875)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.addInitialUserIndex(IgniteH2Indexing.java:780)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.createTable(IgniteH2Indexing.java:2009)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.registerType(IgniteH2Indexing.java:1859)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.registerCache0(GridQueryProcessor.java:1306)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.onCacheStart0(GridQueryProcessor.java:756)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.onCacheStart(GridQueryProcessor.java:817)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.startCache(GridCacheProcessor.java:1265)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.onKernalStart(GridCacheProcessor.java:898)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1013)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:595)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:519)
	at org.apache.ignite.Ignition.start(Ignition.java:322)
	... 6 more
Caused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement ""CREATE INDEX PRIMARY[*] ON """"CountrylanguageCache"""".COUNTRYLANGUAGE (""""COUNTRYCODE"""" DESC, """"LANGUAGE"""" DESC, """"_KEY"""" ASC) ""; expected ""identifier""; SQL statement:
CREATE INDEX PRIMARY ON ""CountrylanguageCache"".Countrylanguage (""COUNTRYCODE"" DESC, ""LANGUAGE"" DESC, ""_KEY"" ASC) [42001-195]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.getSyntaxError(DbException.java:205)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:3197)
	at org.h2.command.Parser.parseCreate(Parser.java:4374)
	at org.h2.command.Parser.parsePrepared(Parser.java:365)
	at org.h2.command.Parser.parse(Parser.java:320)
	at org.h2.command.Parser.parse(Parser.java:292)
	at org.h2.command.Parser.prepareCommand(Parser.java:257)
	at org.h2.engine.Session.prepareLocal(Session.java:573)
	at org.h2.engine.Session.prepareCommand(Session.java:514)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:482)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSql(IgniteH2Indexing.java:870)
	... 21 more

Process finished with exit code 1

{code}

Use the project attached to reproduce the issue.

As a workaround I used the configuration wizard for AI 1.x version and the bug disappeared.",,dmagda,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 19:07;dmagda;Ignite-MySQL-Cluster-project.zip;https://issues.apache.org/jira/secure/attachment/12873395/Ignite-MySQL-Cluster-project.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sun Jun 18 04:45:39 UTC 2017,,,,,,,,,,"0|i3genb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jun/17 19:08;dmagda;+ [~skozlov], [~vozerov], [~sergi.vladykin];;;","18/Jun/17 04:45;kuaw26;Fixed indexes import.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion Error in GridDhtPartitionsExchangeFuture : msg == null,IGNITE-5529,13080591,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,ilantukh,ilantukh,17/Jun/17 14:28,27/Jul/17 20:06,14/Jul/23 06:20,10/Jul/17 07:14,,,,,,2.1,,general,,,,0,MakeTeamcityGreenAgain,test-fail,,"{noformat}
[14:56:31]W:		 [org.apache.ignite:ignite-core] java.lang.AssertionError: GridDhtPartitionsExchangeFuture [dummy=false, forcePreload=false, reassign=false, discoEvt=DiscoveryCustomEvent [customMsg=null, affTopVer=AffinityTopologyVersion [topVer=18, minorTopVer=2], super=DiscoveryEvent [evtNode=TcpDiscoveryNode [id=48b4ad89-eb6c-4d5b-85b5-c964fd300003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=8, intOrder=6, lastExchangeTime=1497700591967, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false], topVer=18, nodeId8=48b4ad89, msg=null, type=DISCOVERY_CUSTOM_EVT, tstamp=1497700591967]], crd=TcpDiscoveryNode [id=48b4ad89-eb6c-4d5b-85b5-c964fd300003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47503], discPort=47503, order=8, intOrder=6, lastExchangeTime=1497700591967, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false], exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=18, minorTopVer=2], nodeId=48b4ad89, evt=DISCOVERY_CUSTOM_EVT], added=true, initFut=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=false, hash=79503565], init=false, lastVer=null, partReleaseFut=null, exchActions=null, affChangeMsg=null, skipPreload=false, clientOnlyExchange=false, initTs=1497700591967, centralizedAff=false, changeGlobalStateE=null, exchangeOnChangeGlobalState=false, forcedRebFut=null, done=true, evtLatch=0, remaining=[20d897e3-729f-404e-a4b5-565137100001, afc48273-8741-48b5-a1c9-e9c011b00000, 38c88372-509a-45b2-9b0d-39ccc0100002], super=GridFutureAdapter [ignoreInterrupts=false, state=DONE, res=class org.apache.ignite.internal.IgniteInterruptedCheckedException: Node is stopping: cache.IgniteCacheCreateRestartSelfTest3, hash=551729273]]
[14:56:31]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:570)
[14:56:31]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1858)
[14:56:31]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[14:56:31]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{noformat}

IgniteCacheCreateRestartSelfTest reproduces this issue.",,dpavlov,ilantukh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-17 14:28:03.0,,,,,,,,,,"0|i3gekf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IS_EVICT_DISABLED flag is not cleared when cache store throws an exception,IGNITE-5528,13080481,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,agoncharuk,agoncharuk,16/Jun/17 18:44,17/Jul/17 16:09,14/Jul/23 06:20,06/Jul/17 11:34,1.7,,,,,2.1,,cache,,,,0,,,,"Below is an observation from a live system:
On a large cluster with occasional topology changes, there is a sporadic hang which manifests itself with ""Failed to evict partition message"" for one of the caches with enabled cache store. I managed to take a heap dump and found out that on the hanging node there was a single entry with IS_EVICT_DISABLED flag set and no other threads were doing store load operation. Earlier in the logs I saw that the cache store threw a CacheLoaderException due to interrupted connection with a database.

Currently, the flag is set before the cache store load and it is cleared after the load.
Looks like if the store throws an exception, this leads to the leaked flag set and the entry cannot be cleared from the partition. As a result, on the next topology change partition exchange will be freezed with ""Failed to wait for partition eviction"" error message.

Attached is the test reproducing this issue (note that the message appears after one minute)",,agoncharuk,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5759,,,,,,,,,,,,,,,"16/Jun/17 18:47;agoncharuk;GridCachePartitionEvictionDuringReadThroughSelfTest.java;https://issues.apache.org/jira/secure/attachment/12873320/GridCachePartitionEvictionDuringReadThroughSelfTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 07 09:38:55 UTC 2017,,,,,,,,,,"0|i3gdvz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 09:57;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2183

    IGNITE-5528 - IS_EVICT_DISABLED flag is not cleared on cache store exception

    Fixed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5528

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2183.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2183
    
----
commit 29e2499100b4f559eb3ee7e877d099f6983cbd74
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-20T04:59:09Z

    IGNITE-5528 - IS_EVICT_DISABLED flag is not cleared on cache store exception.

----
;;;","07/Jul/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2183
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridDeferredAckMessageSender can cause starvation in stripe pool on unstable topology.,IGNITE-5527,13080453,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,16/Jun/17 16:50,26/Jul/17 09:07,14/Jul/23 06:20,10/Jul/17 08:10,,,,,,2.1,,clients,general,,,0,,,,"Slow or failed client can cause starvation in stripe-pool.

GridDeferredAckMessageSender.sendDeferredAckMessage() can stucks when add message to buffer while other thread trying to send this buffer.

Seems, we shouldn't wait for readLock in DeferredAckMessageBuffer.add() method and return false immediately.

Stacktrace:

Thread [name=""sys-stripe-3-#4%null%"", id=16, state=WAITING, blockCnt=3087, waitCnt=204846]
 Lock [object=java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync@54ef60c9, ownerName=sys-#12106%null%, ownerId=12326]
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
        at java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.lock(ReentrantReadWriteLock.java:727)
        at o.a.i.i.processors.cache.GridDeferredAckMessageSender$DeferredAckMessageBuffer.add(GridDeferredAckMessageSender.java:176)
        at o.a.i.i.processors.cache.GridDeferredAckMessageSender.sendDeferredAckMessage(GridDeferredAckMessageSender.java:100)
        at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.sendDeferredUpdateResponse(GridDhtAtomicCache.java:3371)
        at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processDhtAtomicUpdateRequest(GridDhtAtomicCache.java:3353)
        at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$1800(GridDhtAtomicCache.java:130)
        at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:379)
        at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:374)
        at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
        at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
        at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
        at o.a.i.i.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
        at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
        at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1217)
        at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:845)
        at o.a.i.i.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
        at o.a.i.i.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
        at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
        at java.lang.Thread.run(Thread.java:745)",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 26 09:07:24 UTC 2017,,,,,,,,,,"0|i3gdpr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 17:03;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2150

    IGNITE-5527: Prevent starvation in stripe pool on unstable topology.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5527

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2150.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2150
    
----
commit 97ea507dfef0bc389c4e13a07c338157a4f995fc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-16T16:54:26Z

    IGNITE-5527: Prevent starvation in stripe pool on unstable topology.

----
;;;","26/Jul/17 09:07;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/2150
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic cache stop/start from non-affinity coordinator node hangs with AssertionError,IGNITE-5526,13080440,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ivan.glukos,ivan.glukos,16/Jun/17 15:43,23/Jul/19 17:35,14/Jul/23 06:20,17/Jun/17 06:05,2.1,,,,,2.1,,cache,,,,0,,,,"Reproducer is in attachment.
{noformat}
[18:43:17,372][ERROR][exchange-worker-#29%dummy%][GridCachePartitionExchangeManager] Runtime error caught during grid runnable execution: GridWorker [name=partition-exchanger, igniteInstanceName=dummy, finished=false, hashCode=1561691363, interrupted=false, runner=exchange-worker-#29%dummy%]
java.lang.AssertionError
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1065)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.updateTopologies(GridDhtPartitionsExchangeFuture.java:688)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:592)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1858)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,githubbot,ivan.glukos,sboikov,,,,,,,,,,"glukos commented on pull request #2149: IGNITE-5526: Dynamic cache stop/start from non-affinity coordinator node hangs with AssertionError
URL: https://github.com/apache/ignite/pull/2149
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/19 17:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,28800,28200,600,2%,28800,28200,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 15:45;ivan.glukos;NonAffinityCoordinatorDynamicStartStopTest.java;https://issues.apache.org/jira/secure/attachment/12873302/NonAffinityCoordinatorDynamicStartStopTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 17 06:05:19 UTC 2017,,,,,,,,,,"0|i3gdmv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 15:57;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/2149

    IGNITE-5526: Dynamic cache stop/start from non-affinity coordinator node hangs with AssertionError

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5526

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2149.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2149
    
----
commit c7a7e64237e8a2549d43e5e8ba6a3d77529cc150
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T11:12:17Z

    IGNITE-5267 - Fixed compilation after merge from master

commit 7e45010b4848d0a570995e6dc938875710d846d8
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-04T08:02:31Z

    ignite-5075 'logical' caches sharing the same 'physical' cache group

commit e1c328e468c94d268c754a3153c7bc2584279d0d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:16:31Z

    IGNITE-5322 - Improved WAL record/iterator structure

commit b47db106d42afb5dcbee57b793b63efa43fc4ef2
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:41:42Z

    IGNITE-5323 - Moved record serializer version from file name to file header

commit c6f6319eab2c0069534666d9a9a364a5d54d3cda
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:57:57Z

    Merge master into ignite-5267

commit 0ce28c6462870f8b6ff798aa6e9236ade490f540
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T09:33:47Z

    DB managers initialization on client node.

commit 874b1f472cdf866a516f858b2a069a32ce41156f
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T11:57:54Z

    Fixed formatting.

commit 4f69bd021a3e0951ca222e58cc1fb947c0042635
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:02Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit d7108af5925b38dbdacc1e685c65fccfa33236d4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:11Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit 70eea2aa641437a4c74f90f61dfd8fd1de56b08e
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:31:35Z

    ignite-5267

commit 9c22c716b5902a5d21277c8a1ae88e4dd59d3b66
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2017-06-06T10:33:32Z

    IGNITE-5267 - Store sql created flag for cache

commit a2e173053fcd2c3f194ea1907341f18afc7f8adc
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-06T11:13:56Z

    IGNITE-5267 - Fixed compilation after merge

commit fffad68f6c23c36cf28e61bd7465082d71569665
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T09:28:29Z

    IGNITE-5375 - Persistence metrics introduced

commit 518238473c0a12380cb9ed96c67597d1fe42652c
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T18:08:36Z

    Merged 4.ea2 into 5267

commit 1a19b9004ab5317e8c620c55d5faa2f1a18db577
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T12:46:34Z

    IGNITE-5267 - Fixed compilation after merge.

commit 930e2e0114a72452ca3760aac7d640145a412909
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:12:51Z

    IGNITE-5068 - Fixed lost partitions handling

commit 52640357b1c170b6917339dcb5933ec9fcc4e81a
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:17:53Z

    IGNITE-5068 - Fixed lost partitions handling

commit eff3e09cb66738e987f7993a7d68e2278c4afe95
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:58:10Z

    IGNITE-5267 - Fixed CacheState record

commit c782241954595b4d70fe7ee38be746e17211c2c3
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-01T13:19:46Z

    Example of API changes.
    
    (cherry picked from commit c3b6c91)
    
    (cherry picked from commit 90c6345)

commit 60c1454709c520c28d843726b893fb82db750f0e
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-01T15:05:38Z

    Removed explicit CacheConfiguration from AtomicConfiguration and CollectionConfiguration.
    
    (cherry picked from commit ad024dc)

commit 68aa4da3507b2558975eb99763974419fa4f970f
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-02T13:20:41Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 70bbd1a)

commit 9d2eef99aa0c1b185b8ea72b3c928db4a4c448d4
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-02T15:24:50Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 9cd208b)

commit c9412f2040f97595f169bc30fc1eab61ae661cf5
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T14:53:54Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 8b7c239)

commit ff33d803b2223df4bb2036dbdc5340434f5748d4
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T15:38:38Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit f9d7a5a)

commit 0f6873675d5243af02ab042b0817bc8db4d2f431
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T15:44:04Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 272e22c)

commit 891fd2f0225e6da7a946d1deabd9ea200644f51a
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T16:13:53Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 9df4b0b)

commit 4a1889bdc7e6dd4d8f6a8958510f8a08caa63a22
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-07T13:36:39Z

    Data structures based on cache groups - WIP.
    
    (cherry picked from commit 6aa9d45)

commit fdfbde7122193b0d2fe54a24726751ed8e82985b
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-07T14:17:05Z

    Data structures based on cache groups - WIP.
    
    (cherry picked from commit 1cff479)

commit d817d2abe08fe62528f801481880d5a09b6da2c3
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T00:31:51Z

    Data structures based on cache groups - WIP.
    
    (cherry picked from commit e0cab64)

commit d08b3b41b9924659515388da026ad1401385ae2e
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T13:27:21Z

    Data structures based on groups - minor fixes.
    
    (cherry picked from commit 390a24f)

----
;;;","16/Jun/17 16:00;ivan.glukos;Pending TC run: http://ci.ignite.apache.org/viewQueued.html?itemId=671525
Please, review.;;;","17/Jun/17 06:05;sboikov;Merged.

Did minor change: moved cleanup to CacheAffinitySharedManager.onCacheChangeRequest.
Also you need add test in some suite.

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C++ ODBC example fails,IGNITE-5525,13080437,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,izaporozhtseva,izaporozhtseva,16/Jun/17 15:32,30/Aug/17 09:34,14/Jul/23 06:20,16/Jun/17 16:54,2.0,,,,,2.1,,odbc,platforms,,,0,odbc,,,"C++ ODBC example fails:

>>> Cache ODBC example started.

[15:12:08,620][SEVERE][sql-connector-#38%null%][OdbcRequestHandler] Failed to execute SQL query [reqId=1, req=OdbcQueryExecuteRequest [schema=PUBLIC, sqlQry=INSERT INTO Person (_key, orgId, firstName, lastName, resume, salary) VALUES (?, ?, ?, ?, ?, ?)�, args=[1, 1, John, Doe, Master Degree., 2200.0]]]
class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to parse query: INSERT INTO Person (_key, orgId, firstName, lastName, resume, salary) VALUES (?, ?, ?, ?, ?, ?)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1293)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1856)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$6.applyx(GridQueryProcessor.java:1852)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2293)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFieldsNoCache(GridQueryProcessor.java:1860)
	at org.apache.ignite.internal.processors.odbc.odbc.OdbcRequestHandler.executeQuery(OdbcRequestHandler.java:177)
	at org.apache.ignite.internal.processors.odbc.odbc.OdbcRequestHandler.handle(OdbcRequestHandler.java:116)
	at org.apache.ignite.internal.processors.odbc.SqlListenerNioListener.onMessage(SqlListenerNioListener.java:152)
	at org.apache.ignite.internal.processors.odbc.SqlListenerNioListener.onMessage(SqlListenerNioListener.java:44)
	at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:279)
	at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
	at org.apache.ignite.internal.util.nio.GridNioAsyncNotifyFilter$3.body(GridNioAsyncNotifyFilter.java:97)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.util.worker.GridWorkerPool$1.run(GridWorkerPool.java:70)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Table ""PERSON"" not found; SQL statement:
INSERT INTO Person (_key, orgId, firstName, lastName, resume, salary) VALUES (?, ?, ?, ?, ?, ?) [42102-195]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.readTableOrView(Parser.java:5506)
	at org.h2.command.Parser.readTableOrView(Parser.java:5483)
	at org.h2.command.Parser.parseInsert(Parser.java:1056)
	at org.h2.command.Parser.parsePrepared(Parser.java:416)
	at org.h2.command.Parser.parse(Parser.java:320)
	at org.h2.command.Parser.parse(Parser.java:292)
	at org.h2.command.Parser.prepareCommand(Parser.java:257)
	at org.h2.engine.Session.prepareLocal(Session.java:573)
	at org.h2.engine.Session.prepareCommand(Session.java:514)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1204)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:288)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.prepareStatement(IgniteH2Indexing.java:398)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1273)
	... 17 more
An error occurred: Failed to execute prepared statement: HY000: class org.apache.ignite.internal.processors.query.IgniteSQLException: Failed to parse query: INSERT INTO Person (_key, orgId, firstName, lastName, resume, salary) VALUES (?, ?, ?, ?, ?, ?)

>>> Example finished, press 'Enter' to exit ... ",,githubbot,isapego,izaporozhtseva,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 05 14:17:04 UTC 2017,,,,,,,,,,"0|i3gdm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 15:38;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2148

    IGNITE-5525: Fix for ODBC example

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5525

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2148.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2148
    
----
commit 7cfad495cbcec3364306f1a71ceab90d9c8f9b34
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-16T15:34:31Z

    IGNITE-5525: Fix for ODBC example

----
;;;","16/Jun/17 15:39;isapego;[~vozerov], can you take a look?;;;","16/Jun/17 16:54;isapego;Merged to master.;;;","19/Jun/17 09:00;izaporozhtseva;tested on master;;;","05/Jul/17 14:17;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2148
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect deserialization of IgniteComputeImpl when executor name is null,IGNITE-5524,13080434,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,16/Jun/17 15:28,16/Jun/17 15:31,14/Jul/23 06:20,16/Jun/17 15:31,,,,,,2.1,,compute,,,,0,,,,"This will fail is executor name is not set (which is valid case):
{code}
protected Object readResolve() throws ObjectStreamException {
    return prj.compute().withExecutor(execName);
}
{code}",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-16 15:28:10.0,,,,,,,,,,"0|i3gdlj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCachePreloader.onInitialExchangeComplete() is not called in certain cases,IGNITE-5523,13080430,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,16/Jun/17 14:49,01/Aug/19 22:07,14/Jul/23 06:20,10/Jul/17 08:22,2.1,,,,,2.1,,cache,,,,0,,,,,,githubbot,gvvinblade,sboikov,,,,,,,,,,"dspavlov commented on issue #2147: IGNITE-5523
URL: https://github.com/apache/ignite/pull/2147#issuecomment-517475469
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:07;githubbot;600","dspavlov commented on pull request #2147: IGNITE-5523
URL: https://github.com/apache/ignite/pull/2147
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 17 06:40:25 UTC 2017,,,,,,,,,,"0|i3gdkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 15:00;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2147

    IGNITE-5523

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5523

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2147.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2147
    
----
commit 43ddc7d5337635e49a7646d15bd85da22e8b7d4b
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-06-01T00:36:15Z

    Fixed PersistentStore configuration documentation

commit 3a44e3ac104775d58f24f193bd1cce1518526b91
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-06-01T00:49:48Z

    Renaming checkpoint to checkpointing in public interface

commit 9d75ff8cd9af1a2246b48eac28ae4f7367da91c0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-01T13:21:27Z

    Merged master to ignite-5267

commit c6fe26b8aae298e2645d3ed8e14e24836caef6e1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-01T17:12:10Z

    IGNITE-5267 - Added tx participating node IDs to transaction record.

commit 281d105f65f3dfd04c4ffa0ee82d052335506d93
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T08:18:40Z

    Unmuted test

commit 0d5231e6428a83ba9b862be58d9978d44bd58ca6
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T09:56:04Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-5267

commit c7a7e64237e8a2549d43e5e8ba6a3d77529cc150
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T11:12:17Z

    IGNITE-5267 - Fixed compilation after merge from master

commit 7e45010b4848d0a570995e6dc938875710d846d8
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-04T08:02:31Z

    ignite-5075 'logical' caches sharing the same 'physical' cache group

commit e1c328e468c94d268c754a3153c7bc2584279d0d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:16:31Z

    IGNITE-5322 - Improved WAL record/iterator structure

commit b47db106d42afb5dcbee57b793b63efa43fc4ef2
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:41:42Z

    IGNITE-5323 - Moved record serializer version from file name to file header

commit c6f6319eab2c0069534666d9a9a364a5d54d3cda
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:57:57Z

    Merge master into ignite-5267

commit 0ce28c6462870f8b6ff798aa6e9236ade490f540
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T09:33:47Z

    DB managers initialization on client node.

commit 874b1f472cdf866a516f858b2a069a32ce41156f
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T11:57:54Z

    Fixed formatting.

commit 4f69bd021a3e0951ca222e58cc1fb947c0042635
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:02Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit d7108af5925b38dbdacc1e685c65fccfa33236d4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:11Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit 70eea2aa641437a4c74f90f61dfd8fd1de56b08e
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:31:35Z

    ignite-5267

commit 9c22c716b5902a5d21277c8a1ae88e4dd59d3b66
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2017-06-06T10:33:32Z

    IGNITE-5267 - Store sql created flag for cache

commit a2e173053fcd2c3f194ea1907341f18afc7f8adc
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-06T11:13:56Z

    IGNITE-5267 - Fixed compilation after merge

commit fffad68f6c23c36cf28e61bd7465082d71569665
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T09:28:29Z

    IGNITE-5375 - Persistence metrics introduced

commit 518238473c0a12380cb9ed96c67597d1fe42652c
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T18:08:36Z

    Merged 4.ea2 into 5267

commit 1a19b9004ab5317e8c620c55d5faa2f1a18db577
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T12:46:34Z

    IGNITE-5267 - Fixed compilation after merge.

commit 930e2e0114a72452ca3760aac7d640145a412909
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:12:51Z

    IGNITE-5068 - Fixed lost partitions handling

commit 52640357b1c170b6917339dcb5933ec9fcc4e81a
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:17:53Z

    IGNITE-5068 - Fixed lost partitions handling

commit eff3e09cb66738e987f7993a7d68e2278c4afe95
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:58:10Z

    IGNITE-5267 - Fixed CacheState record

commit c782241954595b4d70fe7ee38be746e17211c2c3
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-01T13:19:46Z

    Example of API changes.
    
    (cherry picked from commit c3b6c91)
    
    (cherry picked from commit 90c6345)

commit 60c1454709c520c28d843726b893fb82db750f0e
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-01T15:05:38Z

    Removed explicit CacheConfiguration from AtomicConfiguration and CollectionConfiguration.
    
    (cherry picked from commit ad024dc)

commit 68aa4da3507b2558975eb99763974419fa4f970f
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-02T13:20:41Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 70bbd1a)

commit 9d2eef99aa0c1b185b8ea72b3c928db4a4c448d4
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-02T15:24:50Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 9cd208b)

commit c9412f2040f97595f169bc30fc1eab61ae661cf5
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T14:53:54Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 8b7c239)

commit ff33d803b2223df4bb2036dbdc5340434f5748d4
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T15:38:38Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit f9d7a5a)

----
;;;","17/Jun/17 06:40;sboikov;Reviewed, looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Large near caches lead to cluster instability with metrics enabled,IGNITE-5521,13080392,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,mcherkasov,agoncharuk,agoncharuk,16/Jun/17 11:06,29/Jun/17 09:53,14/Jul/23 06:20,29/Jun/17 09:51,1.7,,,,,2.1,,cache,general,,,0,important,,,"We have two issues in the way cache metrics are working:
1) Near cache size is calculated using full iteration over the near entries. Perhaps, this is done because of near entries may be invalidated by a primary node change, however, we should give a less strict metric rather than O(N) cache size time
2) Cache metrics are copied in discovery worker threads. This looks a bit risky because an error like the one described before may stall the whole cluster. We need to make sure that when the heartbeat message is processed, we already have a metrics snapshot enabled",,agoncharuk,githubbot,mcherkasov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 29 09:53:08 UTC 2017,,,,,,,,,,"0|i3gdc7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 09:21;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/2201

    IGNITE-5521: Large near caches lead to cluster instability with metrics enabled

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5521

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2201.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2201
    
----

----
;;;","29/Jun/17 09:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2201
;;;","29/Jun/17 09:53;mcherkasov;changeset: https://github.com/apache/ignite/commit/f6cbba3f50668bc5dedd5b3e4b3a98ab94956492;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteChangeGlobalStateFailOverTest hangs activate on join node,IGNITE-5520,13080377,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,16/Jun/17 09:56,27/Jul/17 20:06,14/Jul/23 06:20,10/Jul/17 08:11,,,,,,2.1,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,,,DmitriyGovorukhin,dpavlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 21 09:03:57 UTC 2017,,,,,,,,,,"0|i3gd8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jun/17 12:46;dpavlov;Test still fails on Teamcity, http://ci.ignite.apache.org/viewLog.html?buildId=672158&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteActivateDeactivateCluster#testNameId1631068609266412004

should I mute the test?;;;","21/Jun/17 09:03;DmitriyGovorukhin;[~dpavlov] Already muted.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AssertionError in GridDhtPartitionTopologyImpl.nodes0,IGNITE-5519,13080354,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilantukh,vozerov,vozerov,16/Jun/17 08:27,27/Jul/17 20:06,14/Jul/23 06:20,10/Jul/17 08:44,,,,,,2.1,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,"Affected tests: {{GridCachePartitionedNodeRestartTest}}
Build log: http://ci.ignite.apache.org/viewLog.html?buildId=661965&buildTypeId=Ignite20Tests_IgniteDataGridRestarts&tab=buildLog

Stack trace: 
{noformat}
[23:55:40]W:		 [org.apache.ignite:ignite-core] [2017-06-13 20:55:40,395][ERROR][sys-stripe-6-#131%near.GridCachePartitionedNodeRestartTest2%][G] Failed to execute runnable.
[23:55:40]W:		 [org.apache.ignite:ignite-core] java.lang.AssertionError
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.nodes0(GridDhtPartitionTopologyImpl.java:915)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.nodes(GridDhtPartitionTopologyImpl.java:861)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheContext.dhtMap(GridCacheContext.java:1493)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLockFuture.map(GridDhtLockFuture.java:793)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLockFuture.onOwnerChanged(GridDhtLockFuture.java:655)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager.notifyOwnerChanged(GridCacheMvccManager.java:226)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager.access$200(GridCacheMvccManager.java:80)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager$3.onOwnerChanged(GridCacheMvccManager.java:163)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.checkOwnerChanged(GridCacheMapEntry.java:3711)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedCacheEntry.readyLock(GridDistributedCacheEntry.java:469)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLockFuture.readyLocks(GridDhtLockFuture.java:567)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLockFuture.map(GridDhtLockFuture.java:764)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.lockAllAsyncInternal(GridDhtTransactionalCacheAdapter.java:798)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.obtainLockAsync(GridDhtTxLocalAdapter.java:699)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.lockAllAsync(GridDhtTxLocalAdapter.java:647)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.lockAllAsync(GridDhtTransactionalCacheAdapter.java:1020)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.processNearLockRequest(GridDhtTransactionalCacheAdapter.java:647)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter.access$000(GridDhtTransactionalCacheAdapter.java:90)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$3.apply(GridDhtTransactionalCacheAdapter.java:136)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTransactionalCacheAdapter$3.apply(GridDhtTransactionalCacheAdapter.java:134)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:926)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:445)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:364)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:300)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:103)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:290)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
[23:55:40]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{noformat}

{noformat}
xception in thread ""sys-#9684%near.GridCachePartitionedNodeRestartTest1%"" java.lang.AssertionError
[00:39:00]	at org.apache.ignite.internal.processors.cache.KeyCacheObjectImpl.hashCode(KeyCacheObjectImpl.java:115)
[00:39:00]	at java.util.HashMap.put(HashMap.java:399)
[00:39:00]	at java.util.HashSet.readObject(HashSet.java:309)
[00:39:00]	at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)
[00:39:00]	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[00:39:00]	at java.lang.reflect.Method.invoke(Method.java:606)
[00:39:00]	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017)
[00:39:00]	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1893)
[00:39:00]	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
[00:39:00]	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
[00:39:00]	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1990)
[00:39:00]	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1915)
[00:39:00]	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
[00:39:00]	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
[00:39:00]	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
[00:39:00]	at java.util.HashMap.readObject(HashMap.java:1211)
[00:39:00]	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
[00:39:00]	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[00:39:00]	at java.lang.reflect.Method.invoke(Method.java:606)
[00:39:00]	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017)
[00:39:00]	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1893)
[00:39:00]	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
[00:39:00]	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
[00:39:00]	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1990)
[00:39:00]	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1915)
[00:39:00]	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
[00:39:00]	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
[00:39:00]	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
[00:39:00]	at org.apache.ignite.marshaller.jdk.JdkMarshaller.unmarshal0(JdkMarshaller.java:121)
[00:39:00]	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.unmarshal(AbstractNodeNameAwareMarshaller.java:94)
[00:39:00]	at org.apache.ignite.marshaller.jdk.JdkMarshaller.unmarshal0(JdkMarshaller.java:143)
[00:39:00]	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.unmarshal(AbstractNodeNameAwareMarshaller.java:82)
[00:39:00]	at org.apache.ignite.internal.util.IgniteUtils.unmarshal(IgniteUtils.java:9950)
[00:39:00]	at org.apache.ignite.internal.IgniteDiagnosticMessage.unmarshal(IgniteDiagnosticMessage.java:134)
[00:39:00]	at org.apache.ignite.internal.processors.cluster.ClusterProcessor$2.onMessage(ClusterProcessor.java:170)
[00:39:00]	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
[00:39:00]	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
[00:39:00]	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
[00:39:00]	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
[00:39:00]	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
[00:39:00]	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
[00:39:00]	at java.lang.Thread.run(Thread.java:745)
{noformat}",,githubbot,ilantukh,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 10:03:57 UTC 2017,,,,,,,,,,"0|i3gd3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 12:19;githubbot;GitHub user sergey-chugunov-1985 opened a pull request:

    https://github.com/apache/ignite/pull/2145

    IGNITE-5519

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5519

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2145.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2145
    
----
commit 68ee06304209541a8a1fafaab8a149002d70022d
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-05-26T08:35:31Z

    ignite-gg-12163 fix concurrency lvl for rw lock by default

commit 874096f33a68e61d96dfce2ef3af0f354b4ce102
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-05-26T08:54:59Z

    ignite-gg-12163 utils update nearestPow2

commit 13c5a5f37a448c5fde66538ff522ff2582db6146
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-05-26T09:02:37Z

    ignite-gg-12163 utils update

commit 9c3028a6414bf7c94a9550b40cc40a7da72d34e0
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-05-26T09:37:32Z

    Merge remote-tracking branch 'origin/ignite-5267' into ignite-gg-12163
    
    # Conflicts:
    #	modules/pds/src/main/java/org/apache/ignite/internal/processors/cache/database/GridCacheDatabaseSharedManager.java

commit 164e3188f303b3565a53634be713917b0f6e2e85
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-05-26T13:08:57Z

    Fixed unhandled GridDhtInvalidPartitionException.

commit a988b8ddee36209bae7a9fd7b3d6d39428bd4180
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-05-26T14:08:55Z

    IGNITE-GG-12163 JIRA for failing test with detailed description was created

commit 3450241fb101eaa6a6c0378f085097ba7609f1c0
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-05-26T20:59:56Z

    Fixed PersistentStore configuration documentation

commit c68b61d3c3229c1c473cf06023df2ffe6d5aa547
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-05-26T21:27:27Z

    IGNITE-5295: NPE when Persistent Store is used and Memory Configuration is missing

commit c6313b7ec24c860f803d191e776ee7ace11cec82
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-05-29T07:45:42Z

    Merge branch 'ignite-5267' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-gg-12163

commit 43ddc7d5337635e49a7646d15bd85da22e8b7d4b
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-06-01T00:36:15Z

    Fixed PersistentStore configuration documentation

commit 3a44e3ac104775d58f24f193bd1cce1518526b91
Author: Denis Magda <dmagda@gridgain.com>
Date:   2017-06-01T00:49:48Z

    Renaming checkpoint to checkpointing in public interface

commit 9d75ff8cd9af1a2246b48eac28ae4f7367da91c0
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-01T13:21:27Z

    Merged master to ignite-5267

commit c6fe26b8aae298e2645d3ed8e14e24836caef6e1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-01T17:12:10Z

    IGNITE-5267 - Added tx participating node IDs to transaction record.

commit 281d105f65f3dfd04c4ffa0ee82d052335506d93
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T08:18:40Z

    Unmuted test

commit 0d5231e6428a83ba9b862be58d9978d44bd58ca6
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T09:56:04Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-5267

commit c7a7e64237e8a2549d43e5e8ba6a3d77529cc150
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-02T11:12:17Z

    IGNITE-5267 - Fixed compilation after merge from master

commit 7e45010b4848d0a570995e6dc938875710d846d8
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-04T08:02:31Z

    ignite-5075 'logical' caches sharing the same 'physical' cache group

commit e1c328e468c94d268c754a3153c7bc2584279d0d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:16:31Z

    IGNITE-5322 - Improved WAL record/iterator structure

commit b47db106d42afb5dcbee57b793b63efa43fc4ef2
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:41:42Z

    IGNITE-5323 - Moved record serializer version from file name to file header

commit c6f6319eab2c0069534666d9a9a364a5d54d3cda
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-05T08:57:57Z

    Merge master into ignite-5267

commit 0ce28c6462870f8b6ff798aa6e9236ade490f540
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T09:33:47Z

    DB managers initialization on client node.

commit 874b1f472cdf866a516f858b2a069a32ce41156f
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T11:57:54Z

    Fixed formatting.

commit 4f69bd021a3e0951ca222e58cc1fb947c0042635
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:02Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit d7108af5925b38dbdacc1e685c65fccfa33236d4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:11Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit 70eea2aa641437a4c74f90f61dfd8fd1de56b08e
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:31:35Z

    ignite-5267

commit 9c22c716b5902a5d21277c8a1ae88e4dd59d3b66
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2017-06-06T10:33:32Z

    IGNITE-5267 - Store sql created flag for cache

commit a2e173053fcd2c3f194ea1907341f18afc7f8adc
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-06T11:13:56Z

    IGNITE-5267 - Fixed compilation after merge

commit fffad68f6c23c36cf28e61bd7465082d71569665
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T09:28:29Z

    IGNITE-5375 - Persistence metrics introduced

commit 518238473c0a12380cb9ed96c67597d1fe42652c
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T18:08:36Z

    Merged 4.ea2 into 5267

commit 1a19b9004ab5317e8c620c55d5faa2f1a18db577
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T12:46:34Z

    IGNITE-5267 - Fixed compilation after merge.

----
;;;","17/Jun/17 14:32;ilantukh;This exception happens after node left grid, but exchange for that event haven't been processed yet. Since this assertion isn't critical, I replaced it with warning.
GridCachePartitionedNodeRestartTest still hangs, but for different reason: https://issues.apache.org/jira/browse/IGNITE-5529;;;","04/Jul/17 10:03;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2145
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failures in IgniteActiveOnStartNodeJoinValidationSelfTest ,IGNITE-5517,13080329,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,vozerov,vozerov,16/Jun/17 06:35,27/Jul/17 20:06,14/Jul/23 06:20,04/Jul/17 14:07,,,,,,2.1,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,"Affected tests:
{{IgniteActiveOnStartNodeJoinValidationSelfTest.testJoinValidation1}}
{{IgniteActiveOnStartNodeJoinValidationSelfTest.testJoinValidation2}}

Sample build: http://ci.ignite.apache.org/viewLog.html?buildId=667393&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache5

Stack trace: 
{code}
junit.framework.AssertionFailedError: null
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.fail(Assert.java:64)
    at junit.framework.TestCase.fail(TestCase.java:235)
    at org.apache.ignite.internal.processors.cache.distributed.IgniteActiveOnStartNodeJoin
{code}",,DmitriyGovorukhin,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 16 07:38:37 UTC 2017,,,,,,,,,,"0|i3gcy7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 07:38;DmitriyGovorukhin;Removed because it is no longer relevant. Joining node must accept cluster status (active/inactive) [IGNITE-5392|https://issues.apache.org/jira/browse/IGNITE-5392];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in GridDhtPartitionTopologyImpl.localNode,IGNITE-5516,13080320,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,vozerov,vozerov,16/Jun/17 06:08,16/Jun/17 11:46,14/Jul/23 06:20,16/Jun/17 11:46,,,,,,2.1,,cache,,,,0,,,,"Reproducers:
{{IgniteClientCacheInitializationFailTest.testTransactionalNearCacheInitialization}}
{{IgniteClientCacheInitializationFailTest.testAtomicCacheInitialization}}

Sample build: http://ci.ignite.apache.org/viewLog.html?buildId=667023&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache4

Stack trace:
{code}
java.lang.NullPointerException: null
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.localNode(GridDhtPartitionTopologyImpl.java:2112)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.createPartitions(GridDhtPartitionTopologyImpl.java:408)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.initPartitions0(GridDhtPartitionTopologyImpl.java:346)
    at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.beforeExchange(GridDhtPartitionTopologyImpl.java:485)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.initTopologies(GridDhtPartitionsExchangeFuture.java:660)
    at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:602)
    at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1858)
    at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
    at java.lang.Thread.run(Thread.java:745)
{code}",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-16 06:08:39.0,,,,,,,,,,"0|i3gcw7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgnitePdsCacheRebalancingAbstractTest hangs,IGNITE-5514,13080224,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,vozerov,vozerov,15/Jun/17 21:17,27/Jul/17 20:08,14/Jul/23 06:20,04/Jul/17 14:07,,,,,,2.1,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,"Affected tests:
{{IgnitePdsCacheRebalancingAbstractTest.testTopologyChangesWithConstantLoadExplicitTx}}
{{IgnitePdsCacheRebalancingAbstractTest.testTopologyChangesWithConstantLoad}}
{{IgnitePdsCacheRebalancingAbstractTest.testRebalancingOnRestartAfterCheckpoint}}

Sample log: http://ci.ignite.apache.org/viewLog.html?buildId=664931&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgnitePdsIndexing

No obvious reasons.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-15 21:17:30.0,,,,,,,,,,"0|i3gcav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"WalRecoveryTxLogicalRecordsTest is broken, probably due to ""inactive"" cluster state",IGNITE-5513,13080223,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,vozerov,vozerov,15/Jun/17 21:12,04/Jul/17 14:07,14/Jul/23 06:20,04/Jul/17 14:07,,,,,,2.1,,cache,,,,0,,,,"The following tests hang:
{{WalRecoveryTxLogicalRecordsTest.testRecoveryNoPageLost1}}
{{WalRecoveryTxLogicalRecordsTest.testRecoveryNoPageLost2}}
{{WalRecoveryTxLogicalRecordsTest.testRecoveryRandomPutRemove}}
{{WalRecoveryTxLogicalRecordsTest.testWalAfterPreloading}}

Sample log: http://ci.ignite.apache.org/viewLog.html?buildId=664931&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgnitePdsIndexing

The following exception is seen nearby, most probably this is the root cause
{code}
[16:47:05]W:		 [org.apache.ignite:ignite-indexing] class org.apache.ignite.IgniteException: can not perform operation, because cluster inactive
[16:47:05]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.IgniteKernal.checkClusterState(IgniteKernal.java:3666)
[16:47:05]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.IgniteKernal.cache(IgniteKernal.java:2712)
[16:47:05]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.persistence.db.wal.WalRecoveryTxLogicalRecordsTest.testFreeListRecovery(WalRecoveryTxLogicalRecordsTest.java:775)
[16:47:05]W:		 [org.apache.ignite:ignite-indexing] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[16:47:05]W:		 [org.apache.ignite:ignite-indexing] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
{code}:",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-15 21:12:46.0,,,,,,,,,,"0|i3gcan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AssertionError: Handler for class already registered,IGNITE-5511,13080205,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vozerov,vozerov,15/Jun/17 20:17,16/Jun/17 06:12,14/Jul/23 06:20,16/Jun/17 06:12,,,,,,2.1,,cache,,,,0,,,,"Reproducer: {{CacheLateAffinityAssignmentTest.testRandomOperations}}

Other affected tests:
{{CacheStopAndDestroySelfTest.testClientClose}}
{{CacheStopAndDestroySelfTest.testClientCloseWithTry}}
{{CacheStopAndDestroySelfTest.testNearClose}}
{{CacheStopAndDestroySelfTest.testNearCloseWithTry}}
{{IgniteDynamicClientCacheStartSelfTest.testCreateCloseClientCache1}}
{{IgniteDynamicClientCacheStartSelfTest.testCreateCloseClientCache2_1}}
{{IgniteDynamicClientCacheStartSelfTest.testCreateCloseClientCache2_2}}
Sample log: http://ci.ignite.apache.org/viewLog.html?buildId=666034&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache5

Stack trace:
{code}
[19:13:29]W:		 [org.apache.ignite:ignite-core] Exception in thread ""exchange-worker-#54313%client-1%"" java.lang.AssertionError: Handler for class already registered [hndId=151442180, cls=class org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtAffinityAssignmentResponse, old=org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager$2@5cc87411, new=org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager$2@6c3c37ad]
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.addHandler(GridCacheIoManager.java:1419)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.addCacheGroupHandler(GridCacheIoManager.java:1376)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheGroupCreated(CacheAffinitySharedManager.java:331)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.CacheGroupContext.start(CacheGroupContext.java:870)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.startCacheGroup(GridCacheProcessor.java:1918)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheStart(GridCacheProcessor.java:1843)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.processClientCacheStartRequests(CacheAffinitySharedManager.java:407)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.processClientCachesChanges(CacheAffinitySharedManager.java:576)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.processCustomExchangeTask(GridCacheProcessor.java:406)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.processCustomTask(GridCachePartitionExchangeManager.java:1752)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1835)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[19:13:29]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{code}",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5509,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-15 20:17:20.0,,,,,,,,,,"0|i3gc6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AssertionError: null instead of GridCacheReturnCompletableWrapper,IGNITE-5510,13080203,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sboikov,vozerov,vozerov,15/Jun/17 20:13,17/Dec/18 12:38,14/Jul/23 06:20,28/Jul/18 12:13,,,,,,2.7,,cache,,,,0,MakeTeamcityGreenAgain,test-fail,,"Reproducer: {{CacheLateAffinityAssignmentTest#testNoForceKeysRequests}}
Sample log: http://ci.ignite.apache.org/viewLog.html?buildId=666034&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache5

Stack trace:
{code}
java.lang.AssertionError: null instead of GridCacheReturnCompletableWrapper
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager.removeTxReturn(IgniteTxManager.java:1040)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processDhtTxOnePhaseCommitAckRequest(IgniteTxHandler.java:1070)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$700(IgniteTxHandler.java:95)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$8.apply(IgniteTxHandler.java:183)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$8.apply(IgniteTxHandler.java:181)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1032)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:553)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:371)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:301)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:104)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:291)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
	at java.lang.Thread.run(Thread.java:745)
{code}",,dpavlov,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8823,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jul 28 12:13:26 UTC 2018,,,,,,,,,,"0|i3gc67:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/18 17:15;EdShangGG;Hi, [~sboikov].

Do you plan to work with the ticket?;;;","27/Jul/18 13:50;sboikov;I think assert in IgniteTxManager.removeTxReturn is not correct. First, it is possible that removeTxReturn can be called concurrently from processDhtTxOnePhaseCommitAckRequest and from node left handler. In this test it fails since sometimes tx does not start on backup since partition is already evicted when prepare request is processed (cache with 0 backups).;;;","28/Jul/18 12:13;sboikov;Removed invalid assert and enabled test.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Web Console Installation from Docker Image,IGNITE-5508,13080178,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dmagda,dmagda,dmagda,15/Jun/17 18:47,27/Sep/17 18:32,14/Jul/23 06:20,27/Sep/17 18:32,,,,,,2.3,,documentation,,,,0,,,,"We need to add a section to the very beginning of the doc below explaining how to install and set up the console from the Docker image:
https://apacheignite-tools.readme.io/docs/build-and-deploy

",,dmagda,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 16 04:33:18 UTC 2017,,,,,,,,,,"0|i3gc0n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 04:33;kuaw26;Docs updated, please review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Datagrid.StoreExample fails when run with standalone Apache Ignite.NET node,IGNITE-5506,13080120,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,izaporozhtseva,izaporozhtseva,15/Jun/17 15:32,30/Aug/17 09:35,14/Jul/23 06:20,16/Jun/17 08:07,2.1,,,,,2.1,,platforms,,,,0,,,,"{{Datagrid.StoreExample}} fails when run with standalone Apache Ignite.NET node

{code}
Apache.Ignite.Core.Cache.CacheException was unhandled
  HResult=-2146233088
  Message=class org.apache.ignite.IgniteCheckedException: Could not load file or assembly 'Apache.Ignite.ExamplesDll, Version=1.0.6375.29467, Culture=neutral, PublicKeyToken=c27524977cb332ce' or one of its dependencies. The system cannot find the file specified.
  Source=Apache.Ignite.Core
  StackTrace:
       at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedCallbacks.Error(Void* target, Int32 errType, SByte* errClsChars, Int32 errClsCharsLen, SByte* errMsgChars, Int32 errMsgCharsLen, SByte* stackTraceChars, Int32 stackTraceCharsLen, Void* errData, Int32 errDataLen)
       at Apache.Ignite.Core.Impl.Unmanaged.IgniteJniNativeMethods.TargetInLongOutLong(Void* ctx, Void* target, Int32 opType, Int64 val)
       at Apache.Ignite.Core.Impl.Unmanaged.UnmanagedUtils.TargetInLongOutLong(IUnmanagedTarget target, Int32 opType, Int64 memPtr)
       at Apache.Ignite.Core.Impl.Cache.CacheImpl`2.Clear()
       at Apache.Ignite.Examples.Datagrid.StoreExample.Main() in C:\work\gridgain-professional-fabric-2.1.1.b3_23\platforms\dotnet\examples\Apache.Ignite.Examples\Datagrid\StoreExample.cs:line 67
       at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)
       at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)
       at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()
       at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
       at System.Threading.ThreadHelper.ThreadStart()
  InnerException: 
       HResult=-2146233088
       Message=Could not load file or assembly 'Apache.Ignite.ExamplesDll, Version=1.0.6375.29467, Culture=neutral, PublicKeyToken=c27524977cb332ce' or one of its dependencies. The system cannot find the file specified.
       InnerException: 
            HResult=-2146233088
            JavaClassName=javax.cache.CacheException
            JavaMessage=class org.apache.ignite.IgniteCheckedException: Could not load file or assembly 'Apache.Ignite.ExamplesDll, Version=1.0.6375.29467, Culture=neutral, PublicKeyToken=c27524977cb332ce' or one of its dependencies. The system cannot find the file specified.
            Message=javax.cache.CacheException: class org.apache.ignite.IgniteCheckedException: Could not load file or assembly 'Apache.Ignite.ExamplesDll, Version=1.0.6375.29467, Culture=neutral, PublicKeyToken=c27524977cb332ce' or one of its dependencies. The system cannot find the file specified.
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.convertToCacheException(GridCacheUtils.java:1323)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.cacheException(IgniteCacheProxy.java:2629)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.clear(IgniteCacheProxy.java:2049)
	at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInLongOutLong(PlatformCache.java:1088)
	at org.apache.ignite.internal.processors.platform.PlatformTargetProxyImpl.inLongOutLong(PlatformTargetProxyImpl.java:53)
Caused by: class org.apache.ignite.IgniteCheckedException: Could not load file or assembly 'Apache.Ignite.ExamplesDll, Version=1.0.6375.29467, Culture=neutral, PublicKeyToken=c27524977cb332ce' or one of its dependencies. The system cannot find the file specified.
	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7229)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.resolve(GridFutureAdapter.java:258)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:170)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:139)
	at org.apache.ignite.internal.processors.cache.GridCacheGateway.enter(GridCacheGateway.java:166)
	at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.clearLocally(GridCacheProxyImpl.java:974)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$GlobalClearAllJob.localExecute(GridCacheAdapter.java:5142)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$TopologyVersionAwareJob.execute(GridCacheAdapter.java:6099)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6608)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1114)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1907)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Could not load file or assembly 'Apache.Ignite.ExamplesDll, Version=1.0.6375.29467, Culture=neutral, PublicKeyToken=c27524977cb332ce' or one of its dependencies. The system cannot find the file specified.
	at org.apache.ignite.internal.processors.platform.callback.PlatformCallbackUtils.inLongOutLong(Native Method)
	at org.apache.ignite.internal.processors.platform.callback.PlatformCallbackGateway.cacheStoreCreate(PlatformCallbackGateway.java:65)
	at org.apache.ignite.internal.processors.platform.dotnet.PlatformDotNetCacheStore.initialize(PlatformDotNetCacheStore.java:382)
	at org.apache.ignite.internal.processors.platform.PlatformProcessorImpl.registerStore0(PlatformProcessorImpl.java:549)
	at org.apache.ignite.internal.processors.platform.PlatformProcessorImpl.registerStore(PlatformProcessorImpl.java:359)
	at org.apache.ignite.internal.processors.cache.store.CacheOsStoreManager.start0(CacheOsStoreManager.java:60)
	at org.apache.ignite.internal.processors.cache.GridCacheManagerAdapter.start(GridCacheManagerAdapter.java:50)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.startCache(GridCacheProcessor.java:1166)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheStart(GridCacheProcessor.java:1867)
	at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheChangeRequest(CacheAffinitySharedManager.java:717)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onCacheChangeRequest(GridDhtPartitionsExchangeFuture.java:725)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:561)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1858)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	... 1 more

            InnerException: 
{code} ",,githubbot,izaporozhtseva,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 19 09:01:09 UTC 2017,,,,,,,,,,"0|i3gbnr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 15:51;ptupitsyn;The problem is introduced by IGNITE-5170, where {{*}} was added to assembly version, but the bug was there forever: in {{BinaryWriter}} we have
{code}
            if (!desc.IsRegistered)
                WriteString(type.AssemblyQualifiedName);
{code}

We should not write assembly qualified name, which is explained in IGNITE-5172.;;;","16/Jun/17 07:16;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2140

    IGNITE-5506 Write unregistered types according to name mapper

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5506

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2140.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2140
    
----
commit a68db4ba0b12f7e663cebcd5cd72d6b90ebbfda5
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-16T07:10:51Z

    IGNITE-5506 Write unregistered types according to name mapper

----
;;;","16/Jun/17 07:20;ptupitsyn;Fixed, waiting for TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2140%2Fhead;;;","16/Jun/17 08:05;ptupitsyn;Merged to master: {{efd299f401ea34e040037c76be0c9f86e0e8e239}};;;","16/Jun/17 08:06;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2140
;;;","19/Jun/17 09:01;izaporozhtseva;tested on master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failures in GridTcpCommunicationSpiRecoverySelfTest,IGNITE-5504,13080097,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,vozerov,vozerov,15/Jun/17 14:05,04/Apr/18 14:31,14/Jul/23 06:20,04/Apr/18 14:29,2.2,,,,,2.5,,,,,,2,MakeTeamcityGreenAgain,Muted_test,test-fail,"Reproducible only on TeamCity.

Affected tests:
{{GridTcpCommunicationSpiRecoverySelfTest.testBlockRead1}}
{{GridTcpCommunicationSpiRecoverySelfTest.testBlockRead2}}
{{GridTcpCommunicationSpiRecoverySelfTest.testBlockRead3}}

Root cause:
{code}
[2017-06-14 18:16:30,016][ERROR][main][root] Test failed.
junit.framework.AssertionFailedError: Failed to wait for session close
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.TestCase.assertTrue(TestCase.java:192)
    at org.apache.ignite.spi.communication.tcp.GridTcpCommunicationSpiRecoverySelfTest.testBlockRead1(GridTcpCommunicationSpiRecoverySelfTest.java:333)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1992)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:131)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1907)
    at java.lang.Thread.run(Thread.java:745)
{code}",,amashenkov,dpavlov,githubbot,nizhikov,SomeFire,VitaliyB,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 04 14:31:46 UTC 2018,,,,,,,,,,"0|i3gbin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/17 13:53;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2796

    IGNITE-5504: Fluky test fixed.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-5504

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2796.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2796
    
----
commit 23a18d2cf8ab1da0739c54e729fddc0cd30f3c3d
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-10-03T13:49:51Z

    IGNITE-5504: Fluky test fixed.

----
;;;","03/Oct/17 17:32;VitaliyB;Hi, [~vozerov], test fixed.
The cause of these failures was sleep before closing socket in this [Line|https://github.com/apache/ignite/blob/master/modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java#L2283].

[TC run for Ignite SPI suite|https://ci.ignite.apache.org/viewLog.html?buildId=868753&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteSpi]
;;;","02/Apr/18 13:15;SomeFire;Ok for me.;;;","04/Apr/18 14:29;nizhikov;Merged to master

[~VitaliyB] Thanks for the contribution!;;;","04/Apr/18 14:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2796
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Affinity information for cache is not cleared after cache destroy,IGNITE-5503,13080092,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,jokser,jokser,15/Jun/17 13:53,17/Jun/17 06:10,14/Jul/23 06:20,17/Jun/17 06:10,,,,,,2.1,,cache,,,,0,,,,"Test CacheLateAffinityAssignmentTest#testCacheDestroyAndCreate2

Error:

{noformat}
[16:43:38] (err) Failed to notify listener: o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4@40ba6d7e[16:43:38] (err) Failed to notify listener: o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4@22c13489java.lang.AssertionError: Affinity partition is out of range [part=10, partitions=10]
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignment.getIds(GridAffinityAssignment.java:163)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1157)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.updatePartitionFullMap(GridDhtPartitionsExchangeFuture.java:1926)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.processMessage(GridDhtPartitionsExchangeFuture.java:1898)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.access$700(GridDhtPartitionsExchangeFuture.java:107)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4.apply(GridDhtPartitionsExchangeFuture.java:1869)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4.apply(GridDhtPartitionsExchangeFuture.java:1857)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:352)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onReceive(GridDhtPartitionsExchangeFuture.java:1857)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1301)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1400(GridCachePartitionExchangeManager.java:124)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:329)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:327)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2197)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2179)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1032)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:553)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:371)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:301)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:104)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:291)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
java.lang.AssertionError: Affinity partition is out of range [part=12, partitions=10]
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignment.getIds(GridAffinityAssignment.java:163)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1157)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.updatePartitionFullMap(GridDhtPartitionsExchangeFuture.java:1926)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.processMessage(GridDhtPartitionsExchangeFuture.java:1898)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.access$700(GridDhtPartitionsExchangeFuture.java:107)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4.apply(GridDhtPartitionsExchangeFuture.java:1869)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4.apply(GridDhtPartitionsExchangeFuture.java:1857)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:352)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onReceive(GridDhtPartitionsExchangeFuture.java:1857)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1301)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1400(GridCachePartitionExchangeManager.java:124)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:329)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:327)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2197)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2179)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1032)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:553)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:371)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:301)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:104)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:291)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
[2017-06-15 16:43:39,003][ERROR][sys-#77%distributed.CacheLateAffinityAssignmentTest1%][GridCacheIoManager] Failed processing message [senderId=dd836990-3e3a-4221-9439-5514ab500000, msg=GridDhtPartitionsFullMessage [parts={1251687458=GridDhtPartitionFullMap [nodeId=dd836990-3e3a-4221-9439-5514ab500000, nodeOrder=1, updateSeq=4, size=2], 1251687457=GridDhtPartitionFullMap [nodeId=dd836990-3e3a-4221-9439-5514ab500000, nodeOrder=1, updateSeq=2081, size=2], 689859866=GridDhtPartitionFullMap [nodeId=dd836990-3e3a-4221-9439-5514ab500000, nodeOrder=1, updateSeq=33, size=3], -2100569601=GridDhtPartitionFullMap [nodeId=dd836990-3e3a-4221-9439-5514ab500000, nodeOrder=1, updateSeq=33, size=3]}, partCntrs=o.a.i.i.processors.cache.distributed.dht.preloader.IgniteDhtPartitionCountersMap@254c4b3d, partHistSuppliers=o.a.i.i.processors.cache.distributed.dht.preloader.IgniteDhtPartitionHistorySuppliersMap@2853d534, partsToReload=o.a.i.i.processors.cache.distributed.dht.preloader.IgniteDhtPartitionsToReloadMap@24dbce15, topVer=AffinityTopologyVersion [topVer=4, minorTopVer=3], exs={}, compress=false, partCnt=4, super=GridDhtPartitionsAbstractMessage [exchId=GridDhtPartitionExchangeId [topVer=AffinityTopologyVersion [topVer=4, minorTopVer=3], nodeId=13a5dd20, evt=DISCOVERY_CUSTOM_EVT], lastVer=GridCacheVersion [topVer=0, order=1497534142827, nodeOrder=0], flags=1, super=GridCacheMessage [msgId=71, depInfo=null, err=null, skipPrepare=false]]]]
java.lang.AssertionError: Affinity partition is out of range [part=10, partitions=10]
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignment.getIds(GridAffinityAssignment.java:163)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1157)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.updatePartitionFullMap(GridDhtPartitionsExchangeFuture.java:1926)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.processMessage(GridDhtPartitionsExchangeFuture.java:1898)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.access$700(GridDhtPartitionsExchangeFuture.java:107)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4.apply(GridDhtPartitionsExchangeFuture.java:1869)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$4.apply(GridDhtPartitionsExchangeFuture.java:1857)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.notifyListener(GridFutureAdapter.java:382)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.listen(GridFutureAdapter.java:352)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onReceive(GridDhtPartitionsExchangeFuture.java:1857)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1301)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1400(GridCachePartitionExchangeManager.java:124)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:329)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:327)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2197)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2179)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1032)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:553)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:371)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:301)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:104)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:291)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
{noformat}
",,jokser,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 17 06:10:28 UTC 2017,,,,,,,,,,"0|i3gbhj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 09:51;jokser;In some cases we mark SingleMap updates as stale if they have same update sequence but more fresh topology version and loss information about new changes in topology. 
Comparison that checking stale updates now became more strict.

Patch is available in ignite-5503 branch.;;;","17/Jun/17 06:10;sboikov;Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCachePartitionMapUpdateTest hangs,IGNITE-5501,13080081,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,vozerov,vozerov,15/Jun/17 13:02,16/Jun/17 17:09,14/Jul/23 06:20,16/Jun/17 16:18,,,,,,2.1,,cache,,,,0,,,,"Currently all tests in {{IgniteCachePartitionMapUpdateTest}} hang. Reproducible locally. No obvious deadlock is visible from thread dumps. No assertions or obvious exceptions. Log is not informative:
{code}
org.apache.ignite.IgniteException: Timeout of waiting for topology map update [igniteInstanceName=cache.IgniteCachePartitionMapUpdateTest1, cache=ignite-atomics-sys-cache, cacheId=689859866, topVer=AffinityTopologyVersion [topVer=5, minorTopVer=0], p=2, readVer=AffinityTopologyVersion [topVer=5, minorTopVer=0], locNode=TcpDiscoveryNode [id=fe63c3eb-1715-4f9a-a183-acb6bfe00001, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47501], discPort=47501, order=2, intOrder=2, lastExchangeTime=1497465751500, loc=true, ver=2.1.0#19700101-sha1:00000000, isClient=false]]
    at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:691)
    at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:532)
    at org.apache.ignite.testframework.junits.common.GridCommonAbstractTest.awaitPartitionMapExchange(GridCommonAbstractTest.java:517)
    at org.apache.ignite.internal.processors.cache.IgniteCachePartitionMapUpdateTest.testPartitionMapUpdate1(IgniteCachePartitionMapUpdateTest.java:145)
{code}",,dpavlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 16 17:09:48 UTC 2017,,,,,,,,,,"0|i3gbf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 14:50;dpavlov;Reasons are not clear for me too: For example, for testPartitionMapUpdate1() test:
Node joins and awaitPartitionMapExchange  completes successfully.
But awaitPartitionMapExchange failed (timed out) after grid 0 stopping (node left). 

Exchange is started for 3 nodes after node 0 left according to logs.;;;","16/Jun/17 15:57;dpavlov;[~Jokser], test passes for me. Could you please close this issue with link to your fix?;;;","16/Jun/17 17:09;dpavlov;Fixed by [~Jokser] wihtin commit https://github.com/apache/ignite/pull/2120/commits/5c988cb7b9a8e9563f7b3007dae133130f3d6681

Test passed http://ci.ignite.apache.org/viewLog.html?buildId=669906&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache2;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteDiagnosticMessagesMultipleConnectionsTest.testLongRunning fails,IGNITE-5500,13080076,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dpavlov,vozerov,vozerov,15/Jun/17 12:56,15/Jun/17 13:22,14/Jul/23 06:20,15/Jun/17 13:22,,,,,,2.1,,,,,,0,,,,"Stack trace:
{code}
junit.framework.AssertionFailedError: null
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.ignite.internal.managers.IgniteDiagnosticMessagesTest.testLongRunning(IgniteDiagnosticMessagesTest.java:170)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1992)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:131)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1907)
    at java.lang.Thread.run(Thread.java:745)
{code}",,dpavlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 15 13:22:19 UTC 2017,,,,,,,,,,"0|i3gbdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 13:06;dpavlov;https://github.com/apache/ignite/pull/2120/commits/c5d4c1b7238afdc7ba1b44868372fa080213880a;;;","15/Jun/17 13:22;dpavlov;Fixed in branch ignite-2.1.1 (under pull/2120/head)
http://ci.ignite.apache.org/viewLog.html?buildId=664755&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteCache;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MemoryMetricsSelfTest.testAllocationRateMultiThreaded fails,IGNITE-5497,13080063,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,vozerov,vozerov,15/Jun/17 11:44,27/Jul/17 20:06,14/Jul/23 06:20,16/Jun/17 08:38,,,,,,2.1,,,,,,0,MakeTeamcityGreenAgain,test-fail,,"Stack trace: 
{code}
[2017-06-14 22:53:33,664][ERROR][main][root] Test failed.
junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:55)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at junit.framework.Assert.assertTrue(Assert.java:31)
    at junit.framework.TestCase.assertTrue(TestCase.java:201)
    at org.apache.ignite.internal.processors.database.MemoryMetricsSelfTest.testAllocationRateMultiThreaded(MemoryMetricsSelfTest.java:94)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at junit.framework.TestCase.runTest(TestCase.java:176)
    at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1992)
    at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:131)
    at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1907)
    at java.lang.Thread.run(Thread.java:745)
{code}",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-15 11:44:14.0,,,,,,,,,,"0|i3gbb3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion in GridDhtPartitionMap.writeExternal,IGNITE-5493,13079991,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilantukh,vozerov,vozerov,15/Jun/17 07:36,10/Jul/17 08:05,14/Jul/23 06:20,10/Jul/17 08:05,,,,,,2.1,,cache,,,,0,,,,"Test to reproduce: {{IgnitePdsTxCacheRebalancingTest}}
Cause: invalid invariant in {{writeExternal}} method - we have more than 3 values in {{GridDhtPartitionState}} enum.

The whole {{Ignite PDS Indexing}} suite hangs due to it.",,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-06-15 07:36:40.0,,,,,,,,,,"0|i3gav3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Local cache metrics is broken,IGNITE-5492,13079956,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,shroman,kuaw26,kuaw26,15/Jun/17 03:41,16/Jun/17 14:27,14/Jul/23 06:20,16/Jun/17 12:10,2.0,,,,,2.1,,cache,,,,0,,,,"Reproducer:
    IgniteConfiguration cfg = new IgniteConfiguration();
    Ignite ignite = Ignition.start(cfg);

    CacheConfiguration<String, String> locCacheCfg = new CacheConfiguration<>(""local"");
    locCacheCfg.setCacheMode(CacheMode.LOCAL);
    locCacheCfg.setStatisticsEnabled(true);

    IgniteCache locCache = ignite.getOrCreateCache(locCacheCfg);

    assert(locCache.get(""ZZZ"") == null)
    assert(locCache.localMetrics().getCacheMisses == 1)
",,githubbot,kuaw26,sergey-chugunov,shroman,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 16 14:26:33 UTC 2017,,,,,,,,,,"0|i3ganb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 09:42;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/2133

    IGNITE-5492: Local cache metrics are broken.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-5492

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2133.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2133
    
----
commit 01a6b8cb3f57a390cc74692c7099f4bed5131b6d
Author: shroman <rshtykh@yahoo.com>
Date:   2017-06-15T09:41:01Z

    IGNITE-5492: Local cache metrics are broken.

----
;;;","15/Jun/17 09:44;shroman;[~DmitriyGovorukhin] Sorry, I was looking at the same thing... If the fix is correct, probably you can just review and merge ;);;;","16/Jun/17 10:07;sergey-chugunov;Hello [~roman_s],

I did a review on your [pull request|https://github.com/apache/ignite/pull/2133], please see my comment there.

Thanks,
Sergey.;;;","16/Jun/17 12:04;vozerov;Looks good to me. Will merge now.;;;","16/Jun/17 12:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2133
;;;","16/Jun/17 14:26;shroman;[~vozerov] Thanks for renaming the test. That's the proper name :) Dmitriy, thanks for the review!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Possible connection leaks when loadPreviousValue set to true,IGNITE-5489,13079796,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,ntikhonov,ntikhonov,14/Jun/17 15:19,01/Aug/19 22:07,14/Jul/23 06:20,14/Jul/17 12:45,2.0,,,,,2.3,,cache,,,,0,,,,"When {{CacheConfiguration#setLoadPreviousValue}} set to true on owning node does not call {{CacheStore#sessionEnd}} method. It can to lead to leak of connections to DB.
See attached test.",,agura,githubbot,ntikhonov,,,,,,,,,,"dspavlov commented on issue #2175: IGNITE-5489
URL: https://github.com/apache/ignite/pull/2175#issuecomment-517475442
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:07;githubbot;600","dspavlov commented on pull request #2175: IGNITE-5489
URL: https://github.com/apache/ignite/pull/2175
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5808,IGNITE-5806,,IGNITE-5803,IGNITE-5897,,,,,,,,,,,"14/Jun/17 15:23;ntikhonov;IGNITE_5489.patch;https://issues.apache.org/jira/secure/attachment/12872991/IGNITE_5489.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 14 12:45:41 UTC 2017,,,,,,,,,,"0|i3g9nz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jun/17 15:00;githubbot;GitHub user ntikhonov opened a pull request:

    https://github.com/apache/ignite/pull/2175

    IGNITE-5489

    IGNITE-5489

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5489

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2175.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2175
    
----
commit a92f20b5cc75e6b80b2731da0192723526b0c1dc
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-04T11:10:26Z

    IGNITE-3597: Removed static work directory.

commit d45383b69cc68c0ec967ebd673b197e437720214
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-04T15:48:25Z

    .NET: Fix code analysis warnings

commit 23461b8d33922772ef8e7217e9e87b3f3b0b37b1
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T07:14:59Z

    IGNITE-4001: Timeouts for threads in Ignite pools. This closes #1130.

commit b94b0aeae4c42b1d35128c6b1de97e3fa318d497
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-06T07:22:50Z

    IGNITE-3163 IGFS: Added working directory support to IgniteHadoopIgfsSecondaryFileSystem. This closes #1030. This closes #1058. This closes #1132.

commit e6317e01fa8a0de03e15dcdd84a575c6b06ce701
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-06T09:03:48Z

    IGNITE-3593 .NET: IgniteConfiguration.WorkDirectory has no effect. This closes #903. This closes #1145.

commit 952be8b995050b34379006dd6e739da3fe3b49e3
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2016-10-07T12:00:09Z

    Squashed commit of the following:
    
    commit 566881b695b8bc00e618fe9a9b4c86a8fd563cc1
    Author: sboikov <sboikov@gridgain.com>
    Date:   Fri Oct 7 13:08:38 2016 +0300
    
        minor
    
    commit 7fe88a1cb21f794ee55a176ab36d895cbf916528
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Oct 6 11:11:24 2016 +0300
    
        ignite-update-notifier fix after review
    
        (cherry picked from commit a10d2ff)
    
    commit f2de749f958a3b18dc479f8a5517d7bf9362b933
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Oct 4 12:12:08 2016 +0300
    
        ignite-2079-2 optimize import and change url path
    
        (cherry picked from commit 830a3cf)
    
    commit 0d1be85ad55b0aa91224690d6c112ae92e8bc0a9
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Thu Sep 29 19:54:54 2016 +0300
    
        update-notifier remove parse xml, now parse like properties
    
        (cherry picked from commit 9ecaa29)
    
    commit e43bca6fb4528a7fc0dcb804a74fca1c59d7468b
    Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
    Date:   Tue Sep 27 17:07:21 2016 +0300
    
        remove dom parser
    
        (cherry picked from commit d1653b2)

commit b9c776a8423471706ecb1dc6176b38f23e799077
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-10T08:52:57Z

    IGNITE-3235 Failed to initialize primitive boolean cache property of superclass

commit f9a0676fad7fd6c23e3c91c10d7e0412ccb27c06
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T07:23:01Z

    IGNITE-4041: Created separate processor for thread pools and refactored IO manager. This closes #1150.

commit 9a6cfce659df40b0a4624f19fd91c217b74bafea
Author: nikolay_tikhonov <ntikhonov@gridgain.com>
Date:   2016-10-11T10:59:57Z

    IGNITE-4014 Fixed ""Transaction hangs if entry processor failed during serialization"". This closes #1148.

commit 1938a17b01fac1e08c30011180bbcc3ed7374d83
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-11T11:50:18Z

    IGNITE-3948: Fixed a bug causing TTL manager to continue tracking of evicted entries. This closes #1101.

commit 60d27547dfc6bd27c6d39cbcc523d0d1e872a821
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-11T11:51:00Z

    Merge remote-tracking branch 'upstream/ignite-1.6.10' into ignite-1.6.10

commit 359a392f1c53217c691c4c40762c51fd330666e2
Author: Valentin Kulichenko <valentin.kulichenko@gmail.com>
Date:   2016-01-15T06:58:41Z

    Update notifier fixes
    
    (cherry picked from commit a5c85ca)

commit 01ca6db70933fb7f50f161a80cde9647e68a3710
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-10-11T13:18:40Z

    Merge remote-tracking branch 'origin/ignite-1.6.10' into ignite-1.6.10

commit 0659bebe04dc9c0b0a163bc95061519c553e678c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T11:49:36Z

    IGNITE-3972: Fixed a bug causing continuous queries to be lost for ATOMIC cache when key's primary node leaves topology. This closes #1133.

commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2016-10-12T12:44:08Z

    IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.

commit 2ab094e08373dc6667af44d48a38b4f044953a79
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-12T13:48:51Z

    IGNITE-2355: Hadoop: added ability to configure multiple job tracker addresses. This closes #1153.

commit eaf8ae246cc799c1353332fcac05cb3a8efab02c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-10-12T16:57:09Z

    IGNITE-4034 Get rid of specialized methods in platform targets

commit b1ec58f716ece3a5866dd654ebc707bef67caf57
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2016-10-13T05:58:22Z

    IGNITE-4066 Fixed NPE.

commit 447e07c0bb5af75bce6a14612606904e4e3d9705
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-14T08:40:41Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL

commit 7adfbcf1ee7bbe0beb95fa82749a2e04449de8fa
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-14T14:48:14Z

    IGNITE-4060: Fixed a bug in RoundRobinLoadBalancing API causing exception when running closures after client node reconnect. This closes #1157.

commit 80abd1b72e4fc7b0b95212e7f53c700c0fe21156
Author: Aleksei Scherbakov <alexey.scherbakoff@gmail.com>
Date:   2016-10-14T16:33:07Z

    GG-11360 - Implement SQL queries cancellation (#18)
    
    * GG-11360 Merged IGNITE-2680 to ignite-1.6.3.
    
    * GG-11360 Test cleanup.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing test.
    
    * GG-11360 Fixing broken tests.
    
    * GG-11360 Added test for forever-running query cancellation on node restart.
    
    * GG-11360 Fixing race.
    
    * GG-11360 Added test for forever-running query cancellation on node stop.
    
    * GG-11360 Cleanup.
    
    * GG-11360 Support for local query cancellation/timeout.
    
    * GG-11360 Increase test duration.
    
    * GG-11360 Remove redundant catch block.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Fix formatting.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Simplify test.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * GG-11360 Fixing issues.
    
    * Merge remote-tracking branch 'remotes/gg/ignite-1.6.10' into ignite-gg-11360
    
    Conflicts:
    	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.
    
    * GG-11360 Review fixes.

commit 43ac3f5d5e8ab664e07f26d99be34f284f7941dd
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-17T08:26:12Z

    IGNITE-4054: Hadoop: added map-reduce plan debug output.

commit d3f042b9ba6c605500ab7155c40a41850babefdb
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T09:28:31Z

    Fixed indexing test in according to changes from #80abd1b.

commit 59de231c0d0dce56b0cf5c386b19a2880d9c0603
Author: sboikov <sboikov@gridgain.com>
Date:   2016-10-17T13:31:35Z

    Re-generated GridQueryFailResponse.

commit 717e91fed944082df35ecdc2e647de2ad3fca2c7
Author: ascherbakoff <alexey.scherbakoff@gmail.com>
Date:   2016-10-17T19:30:38Z

    GG-11360 Fix java8 compilation.

commit 44eff48f72d2a4c5c6a9a2ba6ed903834bcb63f9
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-10-18T08:53:46Z

    IGNITE-4090: CPP: Fixed compilation for GCC 4.4.7. This closes #1165.

commit 4edcf126baf75840e3816a3e0876200c7e9c0d45
Author: vozerov-gridgain <vozerov@gridgain.com>
Date:   2016-10-18T09:25:56Z

    Revert ""IGNITE-3875: Added separate thread pool for data streamer. This closes #1067.""
    
    This reverts commit f597aff1bdf65d3d430cf85c9932391a72c2d7dc.

commit ccae52cc1af3fa2077ece6f6a9c4146e3ba72cb4
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-18T10:01:03Z

    IGNITE-2355 Fixed the test HadoopClientProtocolMultipleServersSelfTest. Close FileSystem after each test to prevent using the one Client delegate for all tests.

commit e6430bdf14e457e7497bf6e84013747f06f71fc3
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-10-18T10:01:41Z

    Merge remote-tracking branch 'community/ignite-1.6.10' into ignite-1.6.10

commit a863eeed9d152eed8418416291b9b19bd5b5e88b
Author: Anton Vinogradov <av@apache.org>
Date:   2016-10-18T10:20:30Z

    IGNITE-1924 Incomplete marshaller cache rebalancing causes Grid hangs under SSL (HOTFIX)

----
;;;","12/Jul/17 22:29;agura;Waiting for TC.;;;","14/Jul/17 12:45;agura;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build failure: maven-remote-resources-plugin,IGNITE-5488,13079771,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,oleg-ostanin,oleg-ostanin,14/Jun/17 13:41,14/Jun/17 14:50,14/Jul/23 06:20,14/Jun/17 14:50,,,,,,,,,,,,0,,,, [ERROR] Failed to execute goal org.apache.maven.plugins:maven-remote-resources-plugin:1.5:process (ignite-dependencies) on project apache-ignite: The parameters 'resourceBundles' for goal org.apache.maven.plugins:maven-remote-resources-plugin:1.5:process are missing or invalid,,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 14 14:50:31 UTC 2017,,,,,,,,,,"0|i3g9if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/17 14:50;oleg-ostanin;I've removed remote-resources-plugin from release profile.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ExampleNodeStartup fails with NPe,IGNITE-5486,13079751,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skozlov,skozlov,skozlov,14/Jun/17 12:36,15/Jun/17 12:53,14/Jul/23 06:20,15/Jun/17 12:53,2.1,,,,,2.1,,examples,,,,0,,,,"1. Start 3 or more nodes in IDEA and sporadically one prints out NPE:
{noformat}
[2017-06-14 15:34:52,510][ERROR][sys-#35%null%][GridCacheIoManager] Failed processing message [senderId=d6187078-9af2-464f-a86b-9a8f3f4e53ee, msg=GridDhtPartitionsFullMessage [parts={-2100569601=GridDhtPartitionFullMap [nodeId=d6187078-9af2-464f-a86b-9a8f3f4e53ee, nodeOrder=1, updateSeq=12, size=2], 689859866=GridDhtPartitionFullMap [nodeId=d6187078-9af2-464f-a86b-9a8f3f4e53ee, nodeOrder=1, updateSeq=12, size=2]}, partCntrs=o.a.i.i.processors.cache.distributed.dht.preloader.IgniteDhtPartitionCountersMap@4494aed2, partHistSuppliers=null, partsToReload=null, topVer=AffinityTopologyVersion [topVer=-1, minorTopVer=0], exs={}, compress=false, partCnt=2, super=GridDhtPartitionsAbstractMessage [exchId=null, lastVer=null, flags=1, super=GridCacheMessage [msgId=8, depInfo=null, err=null, skipPrepare=false]]]]
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.affinity.GridAffinityAssignment.getIds(GridAffinityAssignment.java:170)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1147)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1272)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1400(GridCachePartitionExchangeManager.java:124)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:329)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:327)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2195)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2177)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:926)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:445)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:364)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:300)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:103)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:290)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 15 12:53:32 UTC 2017,,,,,,,,,,"0|i3g9dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 12:53;sboikov;Should be fixed in 5bf876f67362e6745756b051ac6e56d60015a093.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CacheHibernateStoreExample fails with NPE,IGNITE-5485,13079733,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,skozlov,skozlov,skozlov,14/Jun/17 11:44,15/Jun/17 12:53,14/Jul/23 06:20,15/Jun/17 12:53,2.1,,,,,2.1,,examples,,,,0,,,,"1. Start {{DbH2ServerStartup}}
2. Start {{ExampleNodeStartup}}
3. Start {{CacheHibernateStoreExample}}. It fails with NPE:
{noformat}
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.hasMovingPartitions(GridDhtPartitionTopologyImpl.java:2040)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.processFullPartitionUpdate(GridCachePartitionExchangeManager.java:1281)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager.access$1400(GridCachePartitionExchangeManager.java:124)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:329)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$3.onMessage(GridCachePartitionExchangeManager.java:327)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2195)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$MessageHandler.apply(GridCachePartitionExchangeManager.java:2177)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:926)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:445)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:364)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:300)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:103)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:290)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

{noformat}",,sboikov,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 15 12:53:07 UTC 2017,,,,,,,,,,"0|i3g99z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 12:53;sboikov;Should be fixed in 5bf876f67362e6745756b051ac6e56d60015a093.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataStructuresCacheKey and DataStructureInfoKey should have GridCacheInternal marker,IGNITE-5484,13079707,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,mcherkasov,mcherkasov,14/Jun/17 09:17,15/Jun/17 13:55,14/Jul/23 06:20,15/Jun/17 13:54,,,,,,2.1,,cache,,,,0,,,,"All internal keys and objects stored in cache should have GridCacheInternal marker to avoid eviction, also processing of this internal keys and objects can be different from regular users keys and objects.
",,githubbot,mcherkasov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 15 13:55:16 UTC 2017,,,,,,,,,,"0|i3g947:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Jun/17 13:44;mcherkasov;Pull request: https://github.com/apache/ignite/pull/2127/files;;;","15/Jun/17 13:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2127
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SqlQuery fails with WHERE clause on LocalDateTime field,IGNITE-5483,13079679,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,bgaraude,bgaraude,14/Jun/17 07:42,28/Jul/17 14:13,14/Jul/23 06:20,07/Jul/17 11:41,2.0,,,,,2.1,,sql,,,,0,,,,"When performing a SqlQuery with a WHERE clause containing an {{=}} predicate on a field of type LocalDateTime, the query fails with  {{org.apache.ignite.IgniteCheckedException:Failed to execute SQL query.}} 

This bug occurred in 2.0, the same SqlQuery was working fine on 1.9.

If we dig into the details,the original exception is a {{ClassCastException}} on {{IgniteH2Indexing:3663}}.

When doing the same kind of query with a WHERE clause on a String type, it works.
You can find a test case showing that here: https://github.com/bgaraude/IgniteTest


I think this is related to IGNITE-4172, but this ticket says that the patch has to be updated once H2 has been updated.
It seems that ignite 2.0 uses an updated version of H2: 1.4.195. This H2 version supports LocalDateTime. At least {{org.h2.value.DataType.getTypeFromClass}} returns TimeStamp for the LocalDateTime class. But {{IgniteH2Indexing$RowDescriptor.wrap()}} has not been updated accordingly. Hence, the ClassCastException.

Do you know a workaround i can use while this issue is fixed?

","Ignite 2.0.0
Oracle JDK 1.8.0_121
",dmagda,dpavlov,githubbot,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4172,,,,,,,,,,,,,,,"05/Jul/17 16:51;skalashnikov;Java8Test_Ignite5483.zip;https://issues.apache.org/jira/secure/attachment/12875786/Java8Test_Ignite5483.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 09:28:56 UTC 2017,,,,,,,,,,"0|i3g8xz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/17 21:56;dmagda;[~sergi.vladykin], [~sergi.vladykin], please stop by here.;;;","05/Jul/17 16:46;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/2248

    IGNITE-5483: SQL: Added limited support for Java8 LocalDateTime

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5483

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2248.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2248
    
----
commit a5abdd579cc7ace5d17ebcc6555e3ce66c777917
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-07-04T11:44:42Z

    ignite-2.1 Fixed minor issues and typos.

commit 6c9d2228d2aba6ba5be64bd20ef244e634aeaa5a
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-07-04T12:30:46Z

    ignite-2.1 Added persistent store metrics.

commit f39129020999561e9def300b9cc136138ea3698e
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-06-16T16:54:26Z

    IGNITE-5527: Prevent starvation in stripe pool on unstable topology.
    
    (cherry picked from commit 97ea507)

commit b69f53e0ccf9d3da42a99d4423fb3d8bdd60a7bb
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-04T14:42:31Z

    IGNITE-5629 .NET: CacheConfiguration copy constructor

commit 2e7adbfbbab62f3b98e0409d2f4ceabad89b4120
Author: agura <agura@gridgain.com>
Date:   2017-07-04T13:56:40Z

    ignite-5685 JDBC prepared statement shouldn't clear parameters after execution

commit 9743fa3d711d0f1bbf0fa7ceec65237879f76d0d
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-04T15:10:25Z

    Muted hanging tests.

commit 114c42e14013fe5b7bd6f186f7db59a533d61f68
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-04T16:35:06Z

    Cosmetic changes

commit 77c5dc7455b9bf020dee549cc91286a897dbfdbc
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-04T16:40:21Z

    Added onCacheGroupStopped callback

commit ee7566b1063de69ca4f261ee2088d69d231b1c2a
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-04T17:00:09Z

    Minor code cleanup

commit 44f3fac27bec89b5e70e87564c527e48565ddd2a
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-07-04T17:23:40Z

    IGNITE-5558 - Added ability to read WAL in standalone mode - Fixes #2174.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 90b67fa1b72b096943499e26e402988840bdbe97
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-04T17:47:09Z

    IGNITE-4536 two tests unmuted, one test removed as obsolete (IGNITE-5592) - Fixes #2235.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 50bb0901255707dc9601159803363a36aeafecab
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-04T15:10:25Z

    Muted hanging tests.

commit 5b7165ca717de038249570c4213f050ba9b5aee7
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-07-04T17:57:56Z

    IGNITE-5693 - Fixed semaphore flaky test - Fixes #2239.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit 54572c3023dc03a55621fbb4754888b081791e31
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-07-05T07:30:48Z

    IGNITE-5340: Improved IgniteCacheAbstractQuerySelfTest to better test non-standard index names. This closes #2206.

commit 44fad244aa40f552159af153fefdf25d47c7375e
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-07-05T08:18:48Z

    IGNITE-5426: JdbcThinConnection.readOnly state propagation. This closes #2200.

commit 1337901f04c866e20093b20449c0872f089fb64b
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T08:19:43Z

    Reworked cluster activation/deactivation.

commit b67b8c4438f240038b61ca65b947394106b0e43b
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T08:20:54Z

    Merge remote-tracking branch 'origin/ignite-2.1' into ignite-2.1

commit f9f13cf083b481f004531710ec3835afdf5b7cef
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-07-05T09:59:43Z

    IGNITE-5605 .NET: Inject resources into remote event filters

commit aa21a9b59ec0266b4fee16e02d2796e6e0d1a9b5
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-05T11:18:32Z

    Merge branch 'ignite-2.1' into ignite-2.1.2

commit 301f310b6348b3f6fbe54b16d065569755e71bce
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-04T16:42:33Z

    IGNITE-5663: ODBC: Closing cursor do not reset prepared statement anymore
    
    (cherry picked from commit 64c156e)

commit 58a937e5310c62ccb557d8da959bc4ffa8bcca62
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T11:24:51Z

    Diagnostic info for GridDhtTxFinishFuture.

commit 0f9a895a04cd4a4f6be8e006fc2afd6f720b2215
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T11:25:16Z

    Merge remote-tracking branch 'community/ignite-2.1.2' into ignite-2.1.2

commit 15da654a3e5c2bbf14947f0d3dd08270a9ba6766
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-07-05T12:15:35Z

    IGNITE-5187: Improved DynamicIndexAbstractConcurrentSelfTest reliability. This closes #2219.

commit 0357c51c68540fc14de83ea36f0cfdc7ec987b80
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T13:59:23Z

    ignite-2.1 Do not use 'compress' flag for GridDhtPartitionsFullMessage send in discovery message.

commit 7504b38a603e593fbb190e9e1e9da262cbb8f855
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T14:07:54Z

    ignite-2.1 Do not use 'compress' flag for GridDhtPartitionsFullMessage send in discovery message.

commit ad42f6205b3956dca0ee54e85ce385e6591ec7a9
Author: sboikov <sboikov@gridgain.com>
Date:   2017-07-05T14:41:30Z

    ignite-2.1

commit 29d532e8be971ccac40ece00fc84a6a6bffdad0f
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-07-05T15:51:27Z

    IGNITE-5576: Added Compute::Run() for C++
    
    (cherry picked from commit 80c95ff79f344daf1fca3f094733a24bac2a218d)

commit 905e34d4eee40f9c31288eb9563812f6e9ab888d
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-07-05T16:16:01Z

    Added onActivate/onDeactivate callbacks for plugins

commit 6abfa6ecec025ee46f2a8af83cf4851feca4785b
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-07-05T16:36:51Z

    IGNITE-5483: Added limited support for Java8 LocalDateTime

----
;;;","05/Jul/17 16:51;skalashnikov;Attached the archive Java8Test_Ignite5483.zip with java8 test to verify the fix.

How to run the test:

1. Get Ignite Sources.

2. Apply the patch from pull request.

3. Install Ignite Locally using the following command:
mvn package install -DskipTests   

In the end, you should see the version like 2.1.0-SNAPSHOT.
If it something else, you will need to modify pom.xml inside test archive.

4. Unzip the attached archive Java8Test_Ignite5483.zip.

5. Start IntelliJ IDEA and choose ""Import Project"".

6. Locate pom.xml in the unzipped folder, Click OK.

7. Follow IDEA's instructions through the following dialogs, but be sure to select JDK 1.8 when prompted.

8. Build the project.

9. Locate the test SQLQueryOnLocalDateTimeTest and run it.;;;","11/Jul/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2248
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ODBC: SQLNumParams works incorrectly ,IGNITE-5478,13079475,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,13/Jun/17 12:51,13/Jun/17 16:29,14/Jul/23 06:20,13/Jun/17 16:24,2.0,,,,,2.1,,odbc,,,,0,odbc,,,"{{SQLNumParams}} ODBC call should return number of parameters, required by by prepared statement. Instead, it returns number of parameters, which are currently binded by user.",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 13 16:29:02 UTC 2017,,,,,,,,,,"0|i3g7on:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jun/17 15:20;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/2124

    IGNITE-5478: ODBC: SQLNumParams now returns number of reqiured parameters.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5478

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2124.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2124
    
----
commit 621bed68b10ac63574ee2095be14266f09015f35
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-13T14:36:48Z

    IGNITE-5478: Fixed.

commit 1a504a99d0b0a1e75a56e8be86d762068a4b0e15
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-13T15:19:15Z

    IGNITE-5478: Added test

----
;;;","13/Jun/17 16:00;isapego;Ready for review. [~ptupitsyn], can you take a look?;;;","13/Jun/17 16:06;ptupitsyn;[~isapego] looks good to me.;;;","13/Jun/17 16:24;isapego;Merged to master
;;;","13/Jun/17 16:29;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/2124
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Visor shows wrong statistics for off heap memory,IGNITE-5461,13078615,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,mcherkasov,mcherkasov,09/Jun/17 13:56,19/Jul/17 10:10,14/Jul/23 06:20,28/Jun/17 07:00,2.0,,,,,2.1,,cache,,,,0,important,,,"Visor show that data is stored in Heap, while the data is in off heap:

Total: 1
    Heap: 1
    Off-Heap: 0
    Off-Heap Memory: 0

while:
cache.localPeek(""Key1"", ONHEAP) == null
cache.localPeek(""Key1"", OFFHEAP) == Value

reproducer is attached.",,anovikov,apundir,ivan.glukos,kuaw26,mcherkasov,vozerov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5490,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 13:56;mcherkasov;CreateCache.java;https://issues.apache.org/jira/secure/attachment/12872262/CreateCache.java","09/Jun/17 13:56;mcherkasov;visor-config.xml;https://issues.apache.org/jira/secure/attachment/12872263/visor-config.xml",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 19 10:10:19 UTC 2017,,,,,,,,,,"0|i3g38f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 17:09;mcherkasov;""cache.metrics().getOffHeapEntriesCount();"" returns 0, so looks like it doesn't related with Visor.;;;","14/Jun/17 07:27;vozerov;Also the problem was mentioned on Stack Overflow: https://stackoverflow.com/questions/44534984/is-ignite-web-console-available-for-apache-ignite-2-0;;;","14/Jun/17 17:20;ivan.glukos;Implementations of described metrics are obsolete in 2.0. I propose the following code:

*Heap* (in order to take into account both near entries and entries held by active transactions):
{noformat}
cache.localSize(CachePeekMode.ONHEAP, CachePeekMode.PRIMARY, CachePeekMode.BACKUP, CachePeekMode.NEAR)
{noformat} 
*Off-Heap*:
{noformat}
cache.localSize(CachePeekMode.OFFHEAP, CachePeekMode.PRIMARY, CachePeekMode.BACKUP)
{noformat} 
*Total*: Heap + Off-Heap

*Off-Heap Memory*: not easy to implement, separate ticket created https://issues.apache.org/jira/browse/IGNITE-5490

Does visor need separate methods in CacheMetrics for this?;;;","23/Jun/17 09:13;anovikov;Fixed memory metrics.
[~vsisko], can you please test?;;;","26/Jun/17 08:14;vsisko;Tested. Small fixes in multicluster select in web console. ;;;","28/Jun/17 07:00;kuaw26;Looks good.;;;","18/Jul/17 12:17;apundir;How do I get this fix? I am using 2.0 and the fix date is as of June end. ;;;","19/Jul/17 10:10;anovikov;This fix can be found in branches: {{master}}, {{ignite-2.1}}. You can download latest nightly build: https://ignite.apache.org/community/contribute.html#nightly-builds or try upcoming 2.1 release http://apache-ignite-developers.2346864.n4.nabble.com/VOTE-Apache-Ignite-2-1-0-RC2-td19767.html


;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Incorrect binary object hash code calculation,IGNITE-5455,13078350,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,08/Jun/17 15:09,09/Jun/17 16:00,14/Jul/23 06:20,09/Jun/17 15:59,2.0,,,,,2.1,,platforms,,,,0,.NET,,,"Hash code is calculated over binary object data with the following code in Java and .NET:
{code}
for (int i = start; i <= end; i++)
    hash = 31 * hash + data[i];
{code}

Where {{data}} is {{byte[]}} in Java and .NET.
And {{byte}} is signed in Java and unsigned in .NET.

So in our simple tests on small values it works, but fails on real world data.

As a result, for non-primitive keys:
* DML is broken
* Java interop is broken",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 09 16:00:20 UTC 2017,,,,,,,,,,"0|i3g1lj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jun/17 16:22;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2108

    IGNITE-5455 .NET: Fix binary hash code calculation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5455

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2108.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2108
    
----
commit df1e9d6431a2e9fb61789b3c56c1c9b5d3fc114a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T14:36:54Z

    wip

commit 8da992f3fdbbbfd536d042c4d2dcfa709cddd1e6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T14:37:59Z

    wip

commit 8ddbf99b7b1c2d26d208bc1bdf1ca45591736f1d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T14:40:08Z

    wip

commit 1af859b04b81ef1a9c4daa776c8d5e98df125144
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T15:16:07Z

    fix hash code computation and tests

commit d3fb2c47005231cbdcc4860718b218f2af4bf1f6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T15:22:21Z

    wip

commit 19775feb0c5ab56033f8dffc45b74fd7b48738ef
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T15:24:22Z

    wip

commit 845dd12c47fac9caff5a4ba170fae11725d752eb
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T15:56:58Z

    Improving tests

commit d6cc6d13cf485f2d5f4d0e146ccdadca096dd1dd
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T16:01:51Z

    wip

commit 393b946a0a344ab853407005552b5ecba1e08ad3
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T16:02:46Z

    wip tests

commit c090323b4f819b68b3ba20a008763a2d654af88e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T16:07:53Z

    wip

commit 29f3024b681a615715e46aaf0c08b052f1b7e8cd
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T16:08:36Z

    wip tests

commit f8e76ae370692f45a98a9ceaf1180fc8d90d3160
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-08T16:14:39Z

    Adding tests

----
;;;","08/Jun/17 16:30;ptupitsyn;Fixed, improved tests, waiting for TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2108%2Fhead;;;","09/Jun/17 15:04;ptupitsyn;Adding more tests for all basic data types. Discovered a bug: https://issues.apache.org/jira/browse/IGNITE-5464;;;","09/Jun/17 15:59;ptupitsyn;Merged to master: {{3c5ffd1ac7556b99b64aed70aea58b2d90abc51a}};;;","09/Jun/17 16:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2108
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tree is being concurrently destroyed error,IGNITE-5454,13078348,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,gvvinblade,kdudkov,kdudkov,08/Jun/17 15:05,01/Aug/19 22:07,14/Jul/23 06:20,26/Jun/17 12:44,2.1,,,,,2.1,,cache,,,,0,,,,".NET data streamer example fails sporadically with the following error:

{code}
Caused by: java.lang.IllegalStateException: Tree is being concurrently destroyed: p-305##CacheData
    at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.checkDestroyed(BPlusTree.java:928)
    at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.find(BPlusTree.java:949)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.cursor(IgniteCacheOffheapManagerImpl.java:1328)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.cursor(IgniteCacheOffheapManagerImpl.java:1308)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.cursor(IgniteCacheOffheapManagerImpl.java:1302)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$6.onHasNext(IgniteCacheOffheapManagerImpl.java:619)
    at org.apache.ignite.internal.util.GridCloseableIteratorAdapter.hasNextX(GridCloseableIteratorAdapter.java:53)
    at org.apache.ignite.internal.util.lang.GridIteratorAdapter.hasNext(GridIteratorAdapter.java:45)
    at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.clearCache(IgniteCacheOffheapManagerImpl.java:432)
    at org.apache.ignite.internal.processors.cache.GridCacheClearAllRunnable.run(GridCacheClearAllRunnable.java:85)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter.clearLocally(GridCacheAdapter.java:1056)
    at org.apache.ignite.internal.processors.cache.GridCacheProxyImpl.clearLocally(GridCacheProxyImpl.java:977)
    at org.apache.ignite.internal.processors.cache.GridCacheAdapter$GlobalClearAllJob.localExecute(GridCacheAdapter.java:5136)
{code}

Example TC run: http://ci.ignite.apache.org/viewLog.html?buildId=661989",,githubbot,kdudkov,ptupitsyn,sboikov,,,,,,,,,"dspavlov commented on issue #2181: IGNITE-5454
URL: https://github.com/apache/ignite/pull/2181#issuecomment-517475426
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:07;githubbot;600","dspavlov commented on pull request #2181: IGNITE-5454
URL: https://github.com/apache/ignite/pull/2181
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 26 12:44:14 UTC 2017,,,,,,,,,,"0|i3g1l3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jun/17 08:17;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2181

    IGNITE-5454

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5454

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2181.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2181
    
----
commit c6bba4b3b1857ab592d6e322ae6eb5766034c4f7
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-06-23T08:16:21Z

    IGNITE-5454

----
;;;","26/Jun/17 12:44;sboikov;Merged into master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridTimeoutProcessor can hang on stop.,IGNITE-5452,13078317,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,VitaliyB,amashenkov,amashenkov,08/Jun/17 13:18,28/Aug/17 16:40,14/Jul/23 06:20,14/Jul/17 17:16,2.0,,,,,2.3,,cache,,,,0,,,,"PFA repro attached.

Actually, there are 2 issue.
1. GridTimeoutProcessor can't be stopped if TimeoutObject eats InterruptedException. We should handle this correctly.

2. TX use TimeoutObjects to be rolled back by timeout.  However, TXs doesn't remove their TimeoutObjects on node stop. 
Possible, TimeoutObject doesn't removed on TX rollback and this should be investigated.

",,amashenkov,githubbot,VitaliyB,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/17 13:35;amashenkov;LockTimeoutFailedOnStop.java;https://issues.apache.org/jira/secure/attachment/12872064/LockTimeoutFailedOnStop.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 16 09:23:55 UTC 2017,,,,,,,,,,"0|i3g1e7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jul/17 13:14;githubbot;GitHub user BiryukovVA opened a pull request:

    https://github.com/apache/ignite/pull/2279

    Merge remote-tracking branch 'upstream/master' into IGNITE-5452

    IGNITE-5452:
    1) Handled eaten InterruptedException in TimeoutObject.
    2) Test correctness of rollback a transaction with timeout during the grid stop.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/BiryukovVA/ignite IGNITE-5452

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2279.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2279
    
----
commit b2be98aff13d239dc0999491ebde52bd450a0bd0
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-07-11T13:06:10Z

    IGNITE-5452:
    1) Handled eaten InterruptedException in TimeoutObject.
    2) Test correctness of rollback a transaction with timeout during the grid stop.

commit e663bb37d86dfb4e6a57ba95629d2635e4cb92cc
Author: Vitaliy Biryukov <biryukovvitaliy92@gmail.com>
Date:   2017-07-11T13:09:00Z

    Merge remote-tracking branch 'upstream/master' into IGNITE-5452

----
;;;","11/Jul/17 13:22;VitaliyB;Ready to review.

[~amashenkov], please take a look.;;;","12/Jul/17 10:47;amashenkov;[~VitaliyB],

See my comments in UpSource.

;;;","13/Jul/17 09:04;VitaliyB;[~amashenkov],
Done.;;;","13/Jul/17 15:01;amashenkov;[~VitaliyB]

See my comments in UpSource.
Please, check all you tests are present in TestSuites and run TC tests [1] after all issues will be fixed.

[1] http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2279%2Fhead;;;","14/Jul/17 12:43;VitaliyB;[~amashenkov],
Done.
http://ci.ignite.apache.org/viewLog.html?buildId=726244&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll;;;","14/Jul/17 17:16;amashenkov;[~VitaliyB],

Looks good. Merged to master.
Thanks for contribution.;;;","14/Jul/17 17:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2279
;;;","09/Aug/17 11:34;githubbot;GitHub user dmekhanikov opened a pull request:

    https://github.com/apache/ignite/pull/2419

    IGNITE-5452 GridTimeoutProcessor can hang on stop

    Created for testing

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5452-1.7

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2419.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2419
    
----
commit d5e15af76044cf65385672f8528d48ecdeca3cb6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-02T09:02:00Z

    IGNITE-4121 .NET: add ScanQuery example

commit 74f8308d10fc011c00e52efcdb315b35cc79e60a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-02T12:59:15Z

    IGNITE-4123 .NET: Remove [Serializable] from Employee in examples

commit 92fff630fbf36c82f93bbd9ddd53d11bed44e772
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-02T14:50:51Z

    Restored services compatibility.

commit a62a0136d295486d95c6e2ab5bba88270d831753
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-02T16:07:45Z

    GG-11655 - Fix merge

commit 348593986b56ddfcec4a4455e49d9b279eae4dc8
Author: devozerov <vozerov@gridgain.com>
Date:   2016-11-05T10:28:03Z

    Merge branch 'ignite-1.7.3' into ignite-1.7.4

commit 175da6b7e394dd76c27d5155ff98a5b2ef03bb9d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-11-07T06:16:58Z

    IGNITE-3432:  check data/meta cache names are different for different IGFS instances. This closes #1201

commit ead15193899d08f41491166003cabed0560f0c59
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T07:49:03Z

    IGNITE-4028 Get rid of OP_META in PlatformAbstractTarget
    
    This closes #1192

commit 40ef2f5ae42826fe8fd077e3013e8f55c8512bdd
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-07T09:09:41Z

    ignite-4178 support permission builder

commit df670c7d64046d282c053f296c47a4743c58c8b1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:40:00Z

    IGNITE-4118 .NET: Optimistic transaction example
    
    This closes #1200

commit 474f22fda4c7cf4d7b2623c451cd7c10f0d8c636
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T09:55:20Z

    IGNITE-4119 .NET: add TransactionDeadlockException

commit fc7ce5a4d72145f2e8a86debeda264ef0a5b37e3
Author: isapego <isapego@gridgain.com>
Date:   2016-11-07T10:26:05Z

    IGNITE-4090: Added flags so stdint and limits can be used in C++.

commit a98804a249496ba9bafbc96daa7aaf25b3d36724
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-07T11:00:00Z

    IGNITE-4113: Added tests. Added Statement::Set/GetAttribute.

commit b1c7c9bb95c900083702d0ba0362edf3aea5a7b4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-07T12:40:36Z

    GG-11360 - Implement SQL queries cancellation
    Fix for commit 80abd1b: for distributed joins need always send cancel request.

commit 319014de075c80fb15e58172cc24e35ce16b56cf
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-07T14:53:40Z

    IGNITE-4132 .NET: Improve BinaryConfiguration documentation

commit 950bad474ef29f9b808e74034c49a69d57eb2740
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:03:34Z

    GG-11655 - Restore service compatibility with releases before 1.5.30.

commit 3d19bfc2b66574e3945ce17c7a4dfe77d0070b8d
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2016-11-08T11:04:36Z

    Merge remote-tracking branch 'origin/ignite-1.6.11' into ignite-1.6.11

commit 1612b6d66fed032182a41e90da71e6b986ae087b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T11:07:54Z

    .NET: Fix minor analysis warnings

commit e821dc0083003bc81058b1cb223d8a8a2ee44daf
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:09:21Z

    IGNITE-2079 (revert commit) GridCacheIoManager eats exception trail if it falls into the directed case

commit c2c82ca44befe4570325dd6cf2ba885e0d90596c
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:10:10Z

    Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11

commit 865bbcf0f41a0c4944e0928f1758d43a0eae82c5
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:18:29Z

    Revert ""Merge remote-tracking branch 'professional/ignite-1.6.11' into ignite-1.6.11""
    
    This reverts commit c2c82ca44befe4570325dd6cf2ba885e0d90596c, reversing
    changes made to e821dc0083003bc81058b1cb223d8a8a2ee44daf.

commit 9726421ff9efb2b19813b2fd6ad27a3728b5ab1a
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-08T12:59:00Z

      Revert  Revert  Merge remote-tracking branch 'professional/ignite-1.6.11'

commit 5a3a1960fff1dcf32961c45c0ba5149d6748d2fc
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-08T14:36:35Z

    Added license header.

commit f697fb5786fb4ce15f581c465ff0dcb3d2bb7b14
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:13:48Z

    IGNITE-4185 .NET: Fix NullReferenceException in IgniteOutputCacheProvider when igniteConfiguration is missing

commit 69487f2c375010737311af65750a519b403fc17f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2016-11-08T16:38:28Z

    .NET: Fix error messages when IgniteConfigurationSection content is missing

commit d88f422aeb02738d676d86ce416551b805ad154e
Author: Andrey Novikov <anovikov@apache.org>
Date:   2016-11-09T07:25:38Z

    GG-11028 Fixed resolving of host name.

commit ac660dcaa5bf8eb20e7dd4e442e97c1cf548a827
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T12:29:06Z

    IGNITE-4183: ODBC Fixed null-values fetching issue.

commit cdae2ab76d403aef9a0bd209fc7497dc6cfdfc08
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T13:25:30Z

    IGNITE-3873: Added WiX script to generate ODBC installer.

commit 1093819ac0f3e7a0faacde59919117b8977e6d5b
Author: Igor Sapego <isapego@gridgain.com>
Date:   2016-11-09T15:19:01Z

    IGNITE-4201: Fixed version fix maven step.

commit bac0cba7fddd412dfbff98163afbc15d81d5e0d4
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2016-11-10T06:02:41Z

    ignite-4044  always authenticate local node

commit 26daa57ca82254d68ac04a7b33223c6eb5ade0e4
Author: sboikov <sboikov@gridgain.com>
Date:   2016-11-10T08:17:29Z

    Fixed javadoc.

----
;;;","16/Aug/17 09:23;githubbot;Github user dmekhanikov closed the pull request at:

    https://github.com/apache/ignite/pull/2419
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteH2Indexing#tables implemented incorrectly,IGNITE-5448,13078271,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,vozerov,vozerov,08/Jun/17 10:15,28/Aug/17 16:38,14/Jul/23 06:20,28/Jul/17 11:45,,,,,,2.3,,sql,,,,0,,,,"Currently method IgniteH2Indexing#tables works as follows:
1) Get schema name for cache
2) Return all tables from the schema

This will work incorrectly for caches in {{PUBLIC}} schema, as tables for all caches will be returned. ",,agoncharuk,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5267,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 01 09:28:01 UTC 2017,,,,,,,,,,"0|i3g13z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 16:55;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/2254

    IGNITE-5448: SQL: tables(cache) must only return tables belonging to given cache.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5448

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2254.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2254
    
----

----
;;;","28/Jul/17 11:45;agoncharuk;Merged;;;","01/Aug/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2254
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Deployment ID may be not unique for cache,IGNITE-5447,13078262,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,08/Jun/17 09:56,15/Jun/17 10:24,14/Jul/23 06:20,15/Jun/17 10:24,2.1,,,,,2.1,,wizards,,,,0,,,,"Web Console uses cache.deploymentId for cache identification.
In 2.1 deploymentId may be same for several caches.
This logic should be reworked.",,anovikov,kuaw26,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 15 10:24:37 UTC 2017,,,,,,,,,,"0|i3g11z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Jun/17 10:03;kuaw26;Please review.;;;","09/Jun/17 10:21;anovikov;[~kuaw26], I reviewed your changes, but I don't like that you combine name and deploymentId in one field. I fix this problem, please have a look at my changes.
[~pkonstantinov], Please test queries screen, cache configuration in visor cmd.;;;","14/Jun/17 10:55;pkonstantinov;e.cloneDeep(...) is undefined;;;","15/Jun/17 10:24;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Collections.singletonList is not properly serialized by binary marshaller,IGNITE-5444,13078168,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,williamdo,vkulichenko,vkulichenko,07/Jun/17 23:53,15/Feb/18 12:02,14/Jul/23 06:20,14/Jul/17 13:44,2.0,,,,,2.3,,general,,,,0,,,,"Test attached. {{Collections.singletonList}} is apparently serialized by optimized marshaller, because when deserialized, it doesn't return collection of binary objects, but rather collection of deserialized objects.

Most likely the reason for this is that {{Collections.singletonList}} is not recognized by {{BinaryUtils.knownCollection}} method.",,ezhuravl,githubbot,vkulichenko,williamdo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7718,,,,,,,,,,,,,,,"07/Jun/17 23:53;vkulichenko;BinaryObjectSingletonList.java;https://issues.apache.org/jira/secure/attachment/12871959/BinaryObjectSingletonList.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 14 13:43:08 UTC 2017,,,,,,,,,,"0|i3g0h3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/17 13:03;ezhuravl;Do we need to implement full support for Collections.SingletonList here, or it will be enough that after deserialization it will became an ArrayList, as for other unknown collections? ;;;","23/Jun/17 22:15;williamdo;I believe the issue is to do with the serialized form, which in this case the desired outcome is to be stored as a {{SingletonList}} of binary objects.

The same issue also occurs for {{Collections.unmodifiableList}}. I think ideally we want to add these types to both {{BinaryUtils.knownCollection}} and {{BinaryUtils.isSpecialCollection}}. The latter is the one being used to identify serialization of collection types.

However both of these are private static classes within {{Collections}} and I am not quite sure how to proceed yet.
;;;","24/Jun/17 20:56;williamdo;I looked at the code again and realised my mistake about serialized form. [~ezhuravl] can you provide example collection that deserializes back to ArrayList? I tried LinkedList but that came back deserialized with same implementation. ;;;","26/Jun/17 21:37;vkulichenko;[~williamdo], I believe any custom collection that doesn't implement {{Externalizable}} or {{write/readObject}} will behave this way.

Generally, I would prefer that {{Collections.SingletonList}} is deserialized into {{Collections.SingletonList}}. I don't think this would complicate the fix a lot.;;;","27/Jun/17 11:50;ezhuravl;[~williamdo], you can get SingletonList class from object of this type, for example Collections.singletonList(1).getClass(). I don't see other solution right now.;;;","29/Jun/17 11:48;githubbot;GitHub user WilliamDo opened a pull request:

    https://github.com/apache/ignite/pull/2217

    IGNITE-5444 Fix serialization of SingletonList to binary format

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/WilliamDo/ignite IGNITE-5444

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2217.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2217
    
----
commit 2805fb89feedfe5c66e61161f4876a76b999e28b
Author: William Do <williamd0@outlook.com>
Date:   2017-06-29T11:45:38Z

    IGNITE-5444 Fix serialization of SingletonList to binary format

----
;;;","08/Jul/17 00:47;vkulichenko;Hi William. I left a comment in Upsource: http://reviews.ignite.apache.org/ignite/review/IGNT-CR-206;;;","08/Jul/17 00:47;vkulichenko;BTW, before submitting for review, don't forget to move ticket to Patch Available.;;;","14/Jul/17 13:43;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2217
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: LINQ Conditional statement will fail for some types,IGNITE-5442,13078094,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,gurustron,gurustron,gurustron,07/Jun/17 19:32,20/Jun/17 09:50,14/Jul/23 06:20,20/Jun/17 09:49,2.0,,,,,2.1,,platforms,,,,0,.NET,LINQ,,"Next code will fail:

{code}
var res = persons.Select(x => new {Foo = x.Key%2 == 0 ? 1 : (int?)null, x.Value}).ToArray();
{code}

Fix: strip nullable type in {{SqlTypes}}",,githubbot,gurustron,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 20 09:50:35 UTC 2017,,,,,,,,,,"0|i3g00n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 12:08;githubbot;GitHub user gurustron opened a pull request:

    https://github.com/apache/ignite/pull/2144

    IGNITE-5442 .NET: LINQ Conditional statement will fail for some types

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gurustron/ignite IGNITE-5442

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2144.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2144
    
----
commit 7df6d87f69d6ad153ccc0836d46f3be6cf522e05
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-06-15T17:55:15Z

    start implementation

commit 4512fc4fca4dd1cfed8fab06acb2b7ebfb2f3de3
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-06-16T11:52:14Z

    error for char mapping

commit 4b042d3ea372da5ea61e5565e244feccac2c66b7
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-06-16T11:56:21Z

    ---

commit 716370337bb86be1903582db5670a0f5918a8128
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-06-16T12:05:03Z

    some more tests

----
;;;","20/Jun/17 09:48;ptupitsyn;Looks good.
Merged to master: {{19a78a9d90084e72c194a8cc4017bbdaca0dc761}};;;","20/Jun/17 09:50;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2144
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Stack trace is lost for exceptions in ICacheStore,IGNITE-5441,13078034,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,07/Jun/17 15:47,28/Aug/17 16:40,14/Jul/23 06:20,06/Jul/17 10:04,2.0,,,,,2.3,,platforms,,,,0,,,,"When exception happens during cache store invocation ({{Write}} method in particular), Java stack trace is lost, original .NET stack trace is lost, exception is quite useless. See {{CheckCustomStoreError}} in {{TestLoadCache}}, this test should be improved to make sure we preserve all information.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 07 09:38:55 UTC 2017,,,,,,,,,,"0|i3fznb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 16:13;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2247

    IGNITE-5441 .NET: Propagate CacheStore exception stack traces to the caller node

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5441

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2247.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2247
   ;;;","06/Jul/17 10:04;ptupitsyn;Merged to ignite-2.1: {{c396b0bcfa5f959013c94ece47dc1111fa650d97}};;;","07/Jul/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2247
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Incorrect partition is derived from query when argument type differs from column type,IGNITE-5437,13077998,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,skalashnikov,skalashnikov,07/Jun/17 13:36,11/Jul/17 09:28,14/Jul/23 06:20,07/Jul/17 13:33,2.1,,,,,2.1,,sql,,,,0,,,,"Ignite SQL attempts to derive partition from the query in certain cases and sends the map queries only to nodes which have those calculated partitions.
Such queries are limited to contain equality conditions over key or affinity key columns at the left and constant or parameter at the right.
When the type of argument does not match the column type, the calculation leads to wrong result.

For example, the following query produces incomplete results when _key column is INTEGER and the argument is CHAR. 

select * from test where _key = ?

However, this is valid and resultive query for H2, which does implicit conversion in such cases.",,githubbot,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4509,,,,,,,,"07/Jun/17 13:38;skalashnikov;BugReproducer5437.java;https://issues.apache.org/jira/secure/attachment/12871833/BugReproducer5437.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 09:28:56 UTC 2017,,,,,,,,,,"0|i3fzfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jun/17 11:18;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/2107

    IGNITE-5437: Handling query argument type for query derived partitions

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5437

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2107.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2107
    
----
commit db1e8b69f6bbd0a28aee638d63032ac0c3307d9e
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-06-07T16:53:53Z

    IGNITE-5437: Fixed query argument type handling for query derived partitions.

----
;;;","08/Jun/17 16:53;skalashnikov;[~vozerov], Could you please review the changes?
Tests look good.;;;","11/Jul/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2107
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridServiceProxy does not unwraps exception message from InvocationTargetException,IGNITE-5424,13077654,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,06/Jun/17 12:00,10/Jul/17 08:13,14/Jul/23 06:20,10/Jul/17 08:13,2.1,,,,,2.1,,managed services,,,,0,,,,"Instead of correct message 'null' passed.

{noformat}
class org.apache.ignite.IgniteException: null
	at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:957)
	at org.apache.ignite.internal.processors.service.GridServiceProxy.invokeMethod(GridServiceProxy.java:208)
	at org.apache.ignite.internal.processors.service.GridServiceProxy$ProxyInvocationHandler.invoke(GridServiceProxy.java:356)
	at org.apache.ignite.internal.processors.service.$Proxy25.go(Unknown Source)
	at org.apache.ignite.internal.processors.service.GridServiceProcessorProxySelfTest.testException(GridServiceProcessorProxySelfTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1979)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:130)
	at org.apache.ignite.testframework.junits.GridAbstractTest$5.run(GridAbstractTest.java:1894)
	at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: null
	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7262)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.resolve(GridFutureAdapter.java:258)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:189)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:139)
	at org.apache.ignite.internal.processors.service.GridServiceProxy.invokeMethod(GridServiceProxy.java:197)
	... 12 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ignite.internal.processors.service.GridServiceProxy$ServiceProxyCallable.call(GridServiceProxy.java:417)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2.execute(GridClosureProcessor.java:1847)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:566)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6641)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:560)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:489)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1180)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1907)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1550)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1178)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
	at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	... 1 more
Caused by: java.lang.Exception: Test exception
	at org.apache.ignite.internal.processors.service.GridServiceProcessorAbstractSelfTest$ErrorServiceImpl.go(GridServiceProcessorAbstractSelfTest.java:823)
	... 20 more
{noformat}",,benvee,dkarachentsev,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 07 09:38:55 UTC 2017,,,,,,,,,,"0|i3fxav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jun/17 06:38;benvee;See https://issues.apache.org/jira/browse/IGNITE-4298;;;","21/Jun/17 07:47;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/2168

    IGNITE-5424 Fix GridServiceProxy does not unwraps exception message f…

    …rom InvocationTargetException.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5424

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2168.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2168
    
----
commit f169a9bfb2f074c02288dd287807ab4044282a3e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-06-21T07:46:33Z

    IGNITE-5424 Fix GridServiceProxy does not unwraps exception message from InvocationTargetException.

----
;;;","21/Jun/17 09:15;dkarachentsev;[PR #2168|https://github.com/apache/ignite/pull/2168];;;","21/Jun/17 10:00;sboikov;Looks good, just did minor code style correction, please take a look.

Thanks!;;;","07/Jul/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2168
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite shouldn't expose nor send (clear-text) env variables to a 3rd endpoint,IGNITE-5413,13077461,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,cos,cos,cos,06/Jun/17 01:03,13/Feb/18 17:15,14/Jul/23 06:20,06/Jun/17 18:08,1.1.4,,,,,2.1,,general,,,,1,,,,"Apache Ignite is periodically accessing to https://ignite.run/update_status_ignite-plain-text.php

It is enabled by default at least in org.apache.ignite:ignite-core:1.9.0, but of course it has been happening for a long time.

Corresponding code is https://github.com/apache/ignite/blob/1d0b0765134a81e6626a9ef1c70939085f954847/modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java#L81-L82

Posting JVM env variable (or any other user's specific information) without an explicit user's consent is a bad idea and should be disabled by default. 
See  https://github.com/apache/ignite/blob/1d0b0765134a81e6626a9ef1c70939085f954847/modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/GridUpdateNotifier.java#L313
for more details.",,cos,dmagda,dpavlov,gstein,myui,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7695,,,IGNITE-775,,,,,,,,,,,,"06/Jun/17 03:14;cos;0001-IGNITE-5413.-Ignite-shouldn-t-expose-nor-send-clear-.patch;https://issues.apache.org/jira/secure/attachment/12871468/0001-IGNITE-5413.-Ignite-shouldn-t-expose-nor-send-clear-.patch","06/Jun/17 02:48;cos;0001-IGNITE-5413.-Ignite-shouldn-t-expose-nor-send-clear-.patch;https://issues.apache.org/jira/secure/attachment/12871465/0001-IGNITE-5413.-Ignite-shouldn-t-expose-nor-send-clear-.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 13 09:08:18 UTC 2017,,,,,,,,,,"0|i3fwif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jun/17 02:48;cos;Here's the patch to turn this functionality off completely until the time we know what and how to deal with this.
;;;","06/Jun/17 03:14;cos;Even more explicit version of the patch.;;;","06/Jun/17 17:50;dmagda;[~cos], looks good to me. Please merge to the master. The next release will be synced up with the master.;;;","06/Jun/17 18:08;cos;The fix  is committed to the master as c3b8998.;;;","13/Jun/17 09:08;gstein;Note: the ASF now owns the ""ignite.run"" domain and does not specify any ""A"" records for it. Thus, old/current versions will be unable to contact any third-party systems.

Caveat: cached A records
Caveat: very early systems that used http: and subject to MITM attacks
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Invocation of HadoopDataOutStream#write(byte[], int, int) with zero len сauses an AssertionError.",IGNITE-5410,13077282,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,iveselovskiy,iveselovskiy,iveselovskiy,05/Jun/17 16:28,06/Jun/17 13:56,14/Jul/23 06:20,06/Jun/17 13:56,2.1,,,,,2.1,,hadoop,,,,0,,,,"Writing an array of zero length causes the following AssertionError:

{code}
java.lang.AssertionError: 0
	at org.apache.ignite.internal.processors.hadoop.shuffle.streams.HadoopOffheapBuffer.move(HadoopOffheapBuffer.java:95)
	at org.apache.ignite.internal.processors.hadoop.shuffle.streams.HadoopDataOutStream.move(HadoopDataOutStream.java:55)
	at org.apache.ignite.internal.processors.hadoop.shuffle.collections.HadoopMultimapBase$AdderBase$1.move(HadoopMultimapBase.java:206)
	at org.apache.ignite.internal.processors.hadoop.shuffle.streams.HadoopDataOutStream.write(HadoopDataOutStream.java:70)
	at org.apache.hadoop.io.BytesWritable.write(BytesWritable.java:187)
...
{code}

Suggested fix is to change the assertion to 
{code} assert size >= 0 : size; {code}",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 05 17:45:30 UTC 2017,,,,,,,,,,"0|i3fvsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/17 17:45;iveselovskiy;https://github.com/apache/ignite/pull/2084;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VisorExecutorConfiguration and VisorGridConfiguration should use IgniteConfiguration.sqlConnectorConfiguration insread of IgniteConfiguration.odbcConfiguration,IGNITE-5406,13077220,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vozerov,vozerov,05/Jun/17 10:57,08/Jun/17 14:18,14/Jul/23 06:20,07/Jun/17 07:26,,,,,,2.1,,sql,visor,,,0,,,,,,kuaw26,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4922,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 07 07:27:18 UTC 2017,,,,,,,,,,"0|i3fven:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/17 11:00;vozerov;{{VisorOdbcConfiguration}} should also be replaced with new {{VisorSqlConnectorConfiguration}}.;;;","07/Jun/17 07:27;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test flakily fails,IGNITE-5403,13077202,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sboikov,zstan,zstan,05/Jun/17 09:57,18/Jul/17 06:34,14/Jul/23 06:20,18/Jul/17 06:34,1.9,,,,,,,general,,,,0,,,,simple flaky nodes test fails.,,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 08:32;zstan;GridDiscoveryManagerAliveCacheSelfTest2.java;https://issues.apache.org/jira/secure/attachment/12873630/GridDiscoveryManagerAliveCacheSelfTest2.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 18 06:34:33 UTC 2017,,,,,,,,,,"0|i3fvan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 08:49;zstan;testAlives - correct, testAlivesKillCoord - fail.
{code}
[11:40:23] (err) Failed to notify listener: o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$1@69d5dad0[11:40:23] (err) Failed to notify listener: o.a.i.i.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture$1@6e3d006djava.lang.AssertionError: Invalid update sequence [cur=162, new=57, partMap=GridDhtPartitionFullMap [nodeId=e102547f-2827-41b5-8020-34a262900007, nodeOrder=8, updateSeq=162, size=6, map={63916eeb-9696-46a4-bc1d-c2f5d5c00009=GridDhtPartitionMap2 [moving=0, size=20, map={0=OWNING, 1=OWNING, 2=OWNING, 3=OWNING, 4=OWNING, 5=OWNING, 6=OWNING, 7=OWNING, 8=OWNING, 9=OWNING, 10=OWNING, 11=OWNING, 12=OWNING, 13=OWNING, 14=OWNING, 15=OWNING, 16=OWNING, 17=OWNING, 18=OWNING, 19=OWNING}, top=AffinityTopologyVersion [topVer=22, minorTopVer=0], nodeId=63916eeb-9696-46a4-bc1d-c2f5d5c00009], 134abd31-af08-4a3a-9958-414408500013=GridDhtPartitionMap2 [moving=0, size=20, map={0=OWNING, 1=OWNING, 2=OWNING, 3=OWNING, 4=OWNING, 5=OWNING, 6=OWNING, 7=OWNING, 8=OWNING, 9=OWNING, 10=OWNING, 11=OWNING, 12=OWNING, 13=OWNING, 14=OWNING, 15=OWNING, 16=OWNING, 17=OWNING, 18=OWNING, 19=OWNING}, top=AffinityTopologyVersion [topVer=21, minorTopVer=0], nodeId=134abd31-af08-4a3a-9958-414408500013], e93fd136-234b-41d4-a88a-203c13600011=GridDhtPartitionMap2 [moving=0, size=20, map={0=OWNING, 1=OWNING, 2=OWNING, 3=OWNING, 4=OWNING, 5=OWNING, 6=OWNING, 7=OWNING, 8=OWNING, 9=OWNING, 10=OWNING, 11=OWNING, 12=OWNING, 13=OWNING, 14=OWNING, 15=OWNING, 16=OWNING, 17=OWNING, 18=OWNING, 19=OWNING}, top=AffinityTopologyVersion [topVer=21, minorTopVer=0], nodeId=e93fd136-234b-41d4-a88a-203c13600011], d441249c-0497-41e6-ab5a-76c8dba00008=GridDhtPartitionMap2 [moving=0, size=20, map={0=OWNING, 1=OWNING, 2=OWNING, 3=OWNING, 4=OWNING, 5=OWNING, 6=OWNING, 7=OWNING, 8=OWNING, 9=OWNING, 10=OWNING, 11=OWNING, 12=OWNING, 13=OWNING, 14=OWNING, 15=OWNING, 16=OWNING, 17=OWNING, 18=OWNING, 19=OWNING}, top=AffinityTopologyVersion [topVer=21, minorTopVer=0], nodeId=d441249c-0497-41e6-ab5a-76c8dba00008], 0e1b55d5-60a4-4f83-af68-283f5ea00012=GridDhtPartitionMap2 [moving=0, size=20, map={0=OWNING, 1=OWNING, 2=OWNING, 3=OWNING, 4=OWNING, 5=OWNING, 6=OWNING, 7=OWNING, 8=OWNING, 9=OWNING, 10=OWNING, 11=OWNING, 12=OWNING, 13=OWNING, 14=OWNING, 15=OWNING, 16=OWNING, 17=OWNING, 18=OWNING, 19=OWNING}, top=AffinityTopologyVersion [topVer=21, minorTopVer=0], nodeId=0e1b55d5-60a4-4f83-af68-283f5ea00012], 77c8de82-8181-4c23-86fb-130b34200010=GridDhtPartitionMap2 [moving=0, size=20, map={0=OWNING, 1=OWNING, 2=OWNING, 3=OWNING, 4=OWNING, 5=OWNING, 6=OWNING, 7=OWNING, 8=OWNING, 9=OWNING, 10=OWNING, 11=OWNING, 12=OWNING, 13=OWNING, 14=OWNING, 15=OWNING, 16=OWNING, 17=OWNING, 18=OWNING, 19=OWNING}, top=AffinityTopologyVersion [topVer=21, minorTopVer=0], nodeId=77c8de82-8181-4c23-86fb-130b34200010]}]]
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionFullMap.updateSequence(GridDhtPartitionFullMap.java:172)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.update(GridDhtPartitionTopologyImpl.java:1333)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.updatePartitionSingleMap(GridDhtPartitionsExchangeFuture.java:2000)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.processMessage(GridDhtPartitionsExchangeFuture.java:1540)

{code}

i found that this sequence inconsistence take place from this code :
{code}
GridDhtPartitionTopologyImpl#removeNode
...
node2part = new GridDhtPartitionFullMap(node2part, node2part.updateSequence());
{code}

i hope this fix, will help to cure this problem:
https://github.com/apache/ignite/pull/2121
TC, http://ci.ignite.apache.org/viewModification.html?modId=205557&personal=false&buildTypeId=&tab=vcsModificationBuilds&show_all_builds=true;;;","18/Jul/17 06:34;zstan;Can not reproduce on latest master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors related to multi-version support,IGNITE-5402,13077196,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,pkonstantinov,pkonstantinov,05/Jun/17 09:37,14/Jun/17 08:56,14/Jul/23 06:20,14/Jun/17 08:56,2.0,,,,,2.1,,wizards,,,,0,,,,"1) eviction policy for server and client is the same, but should be different
2) Marshaller on Summary is not changed when version is changed

    on Cluster set version 1.x and set OptimizedMarshaller
    go to Summary and look at preview - it shows Optimized
    change version to 2.0 - look at preview - marshaller is still Optimized

",,anovikov,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 14 08:56:36 UTC 2017,,,,,,,,,,"0|i3fv9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/17 11:37;vsisko;Fixed code generation for client near cache.
For marshaller created separated issue IGNITE-5407;;;","09/Jun/17 10:26;kuaw26;Please review;;;","14/Jun/17 08:56;anovikov;Reviewed. Looks good. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Manual cache rebalancing feature is broken,IGNITE-5399,13076883,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ezhuravl,amashenkov,amashenkov,02/Jun/17 14:28,28/Aug/17 16:39,14/Jul/23 06:20,22/Jun/17 06:56,1.8,1.9,2.0,,,2.3,,cache,,,,0,,,,"Cache.rebalance() javadoc says ""Future that will be completed when rebalancing is finished"". But it is not true.

1. The method return value is Object, however actually it is Boolean and it is not obvious.
2. Future.get() return true if rebalance is finished, but can return false and reschedule rebalancing. So, control can return to thread before rebalancing even started.
3. Spinning on rebalance().get() until it true will not help. Seems like rebalance either restarted (1.9) or hanged (2.0). 

PFA repro attached.",,amashenkov,ezhuravl,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jun/17 14:50;amashenkov;ManualRebalanceBug.java;https://issues.apache.org/jira/secure/attachment/12870989/ManualRebalanceBug.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 22 06:56:24 UTC 2017,,,,,,,,,,"0|i3ftbr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 09:18;ezhuravl;Tc: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2158%2Fhead

PR: https://github.com/apache/ignite/pull/2158;;;","20/Jun/17 09:51;sboikov;Hi,

First, you did not add test in suite, this means it is not run on TC.

In description I see ""can return false and reschedule rebalancing"", I do not understand how your patch fix this, please explain what was wrong and how it was fixed.

Also I tried to run test from your patch without fix, and it still pass, I think more reliable test is needed.

Thanks;;;","21/Jun/17 13:40;ezhuravl;Hi Semen,

Thanks for your comments, 

I added test to the test suite.

Actually, it was a misunderstanding of root of a problem. False returns when new rebalance for this cache already in queue. So, in this case it was not a rescheduled rebalancing, it was another rebalance that was invoked manually.

I rewrited test, now it's failing without patch.;;;","22/Jun/17 06:56;sboikov;Merged into master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: NuGet suite fails on TC,IGNITE-5393,13076831,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,02/Jun/17 12:25,02/Jun/17 14:44,14/Jul/23 06:20,02/Jun/17 14:44,2.1,,,,,2.1,,platforms,,,,0,.NET,,,IGNITE-5365 changed the build procedure and JAR files are in a different place now.,,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 02 14:44:34 UTC 2017,,,,,,,,,,"0|i3ft0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jun/17 13:02;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2069

    IGNITE-5393 .NET: Fix NuGet suite build

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5393

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2069.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2069
    
----
commit a48154cc489137bd8a0c980c17f08263c5eeacc9
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-02T12:30:40Z

    Fix jar copy script

commit 7e978ddf0dd3c98899a5bd589bcb0bcafc1b1980
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-02T12:34:14Z

    wip

commit 9568837d656c0b73932fdccb6d2f3f5bce356b0f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-02T12:42:53Z

    Fixing nuget tests to use common build script

commit d7367d1fcbd1092bf3b9c66f86f3958d53f4bd1e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-02T12:46:42Z

    Fixing nuget tests to use common build script

commit ddcb8f143785d790f86e87ee2440c91a25007a76
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-02T12:59:45Z

    wip

----
;;;","02/Jun/17 14:31;ptupitsyn;Refactored the build procedure to use build script; fixed the build script to copy jars properly.

Merged to master: {{4024cd3a3e2c3c9cd41a16018a15aaf8b0e3daad}};;;","02/Jun/17 14:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2069
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bug in IgniteCacheTxStoreSessionWriteBehindCoalescingTest,IGNITE-5390,13076781,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,sbberkov,sbberkov,sbberkov,02/Jun/17 09:06,06/Jul/17 12:10,14/Jul/23 06:20,06/Jul/17 11:33,2.0,,,,,2.1,,,,,,0,,,,"IgniteCacheTxStoreSessionWriteBehindCoalescingTest override cacheConfiguration method from IgniteCacheStoreSessionWriteBehindAbstractTest to switch TestStore into TestNonCoalescingStore.
But IgniteCacheStoreSessionWriteBehindAbstractTest.getConfiguration cacheStoreFactory explicitly set to TestStore for ccfg1.
Need to remove it.",,ntikhonov,sbberkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4927,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 06 11:31:54 UTC 2017,,,,,,,,,,"0|i3fspb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/17 11:31;ntikhonov;Thank you for your contribution! Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Support to configuration for Ignite 2.x and Ignite 1.x,IGNITE-5388,13076752,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,anovikov,anovikov,02/Jun/17 07:21,05/Jun/17 09:40,14/Jul/23 06:20,05/Jun/17 09:40,2.0,,,,,2.1,,UI,wizards,,,0,,,,,,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 05 09:39:55 UTC 2017,,,,,,,,,,"0|i3fsiv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/17 07:12;anovikov;Implemented version picker for configuration. Added new settings from Ignite 2.0. Show/hide controls according to configuration version, fixed project generation.
[~pkonstantinov], can you please test?;;;","05/Jun/17 09:39;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add possibility to generate alias for primary key in WebConsole,IGNITE-5369,13076426,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,ezhuravl,ezhuravl,01/Jun/17 08:14,11/Jul/17 07:30,14/Jul/23 06:20,07/Jul/17 16:26,2.0,,,,,2.1,,wizards,,,,0,,,,"Add field with alias name for primary key, that wiil be used in QueryEntity.setKeyFieldName
Automatically assign key field alias on import of model.",,ezhuravl,kuaw26,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 07:29:56 UTC 2017,,,,,,,,,,"0|i3fqif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/17 10:50;vsisko;Added possibility to configure aliases for key field and value field. Configure ""Key field name"" and ""Value Field Name"" for specified aliases and use that aliases in queries in query page.;;;","07/Jul/17 16:26;kuaw26;Please test in 2.1;;;","11/Jul/17 04:43;pkonstantinov;[~vsisko] Please point out what fields were added ?;;;","11/Jul/17 07:29;pkonstantinov;Successfully tested;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Sql page fixes.,IGNITE-5367,13076381,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,01/Jun/17 03:30,05/Jun/17 07:37,14/Jul/23 06:20,05/Jun/17 07:37,2.0,,,,,2.1,,wizards,,,,0,,,,"# Not work refresh rage after explain query.
# Next page and (explain ?) buttons should be locked when query in progress.",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jun 05 07:37:05 UTC 2017,,,,,,,,,,"0|i3fq8f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jun/17 07:09;anovikov;Fixed. [~vsisko], please confirm fix.;;;","02/Jun/17 07:13;vsisko;Tested. 1-2 not reproduced more.;;;","05/Jun/17 07:37;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Nullable enum field in binary object causes type cast exception,IGNITE-5358,13076181,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,31/May/17 12:47,02/Jun/17 09:56,14/Jul/23 06:20,02/Jun/17 09:56,2.0,,,,,2.1,,platforms,,,,0,.NET,,,"Reproducer:

{code}
enum TestEnum
{
	TestValue1,
	TestValue2
};

class TestClass
{
	public string Name { get; }
	public TestEnum? EnumValue { get; }

	public TestClass(string name, TestEnum? enumValue)
	{
		Name = name;
		EnumValue = enumValue;
	}
}
...

cache.Put(""TestElem1"", new TestClass(""TestElem1"", TestEnum.TestValue1));
cache.Get(""TestElem1"");  // exception
{code}

Exception:
{code}
No coercion operator is defined between types 'Apache.Ignite.Core.Impl.Binary.BinaryEnum' and 'System.Nullable`1[UserQuery+TestEnum]'. 
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 02 09:56:06 UTC 2017,,,,,,,,,,"0|i3fozz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/May/17 13:45;ptupitsyn;Seems like switching to binary more in {{ReadBinaryObject}} is not necessary. Removing this code fixes the issue and does not break anything.;;;","31/May/17 13:46;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2048

    IGNITE-5358 .NET: Fix nullable enum field handling in binary objects

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5358

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2048.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2048
    
----
commit adf8d59c8fd979586b68c3aac1e7fe0511e84de4
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T12:50:34Z

    IGNITE-5358 .NET: Nullable enum field in binary object causes type cast exception

commit d4d0e4eed9dea9fa1cc930be1f7d90064a003e22
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:00:53Z

    wip

commit a7d5ec1936cab7c1f9beae23008434972719a799
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:05:28Z

    wip

commit 64b0e644bba8b3e1ee3b4f701b227ac796f8574f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:07:32Z

    wip

commit 1d055602395546b49995f418c997c25d295f1b35
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:10:01Z

    wip

commit 56bcf72deeb6b65dec8220129ecebef5cb6e61d0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:13:38Z

    wip reproducer done

commit 09f63b9409d98a9f5b80abb52fd771a9d7c1d44a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:16:27Z

    wip

commit 1c9337f2cde926104b8357784cfdbddca03c6336
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:21:17Z

    wip

commit 4b9c9a60b4f752788d079112ecbb5ef626423059
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T13:46:11Z

    Fix the bug.

----
;;;","31/May/17 14:18;ptupitsyn;Waiting for TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2048%2Fhead;;;","01/Jun/17 09:23;ptupitsyn;The only test that fails is {{TestBinarizableObjectInTask}}. If we have {{27}} (binary object) inside {{103}} (full object), it must come out in binary form.;;;","01/Jun/17 13:49;ptupitsyn;Fixed the bug properly by implementing the same logic for enums ({{28}}) and binary enums ({{38}}) as for objects ({{103}}) and binary objects ({{27}}).;;;","02/Jun/17 09:55;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2048
;;;","02/Jun/17 09:56;ptupitsyn;TC is good, merged to master: {{34409fd59374a8fad31c592a5517e8d80a032cff}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replicated cache reads load balancing.,IGNITE-5357,13076157,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,ascherbakov,ascherbakov,31/May/17 10:26,01/Aug/19 22:10,14/Jul/23 06:20,22/Mar/18 14:53,1.6,,,,,2.5,,cache,,,,0,newbie,,,"Currently all read requests from client node to replicated cache will go through primary node for key.

Need to select random affinity node in topology and send request here (only if readFromBackups=true)

If where are server nodes collocated on same host with client, must select target node from them.",,alex_pl,ascherbakov,DALukjanenko,daradurvs,dpavlov,githubbot,mlipkovich,nizhikov,vozerov,,,,"dspavlov commented on issue #3581: IGNITE-5357 replicated cache reads load balancing was added
URL: https://github.com/apache/ignite/pull/3581#issuecomment-517476461
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600","dspavlov commented on pull request #3581: IGNITE-5357 replicated cache reads load balancing was added
URL: https://github.com/apache/ignite/pull/3581
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 22 14:57:53 UTC 2018,,,,,,,,,,"0|i3foun:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Sep/17 12:50;mlipkovich;Hi Alexei,
I'm working on this task but I faced with one question which I can't resolve. I found the piece of code that as I understand should be updated to resolve the task. But there is a {{canRemap}} flag which has an unclear meaning for me. Please find below method {{GridPartitionedSingleGetFuture#affinityNode}}:
{code}
        if (!canRemap) {
            for (ClusterNode node : affNodes) {
                if (cctx.discovery().alive(node))
                    return node;
            }

            return null;
        }
        else
            return affNodes.get(0);
{code}
It's commented that {{canRemap}} is a flag indicating that get should be done on a locked topology version but it's not clear for me how it is related to the piece of code above. Should I somehow take care about this flag during implementation of requested functionality or I can just ignore it?

Thanks;;;","29/Sep/17 13:33;vozerov;[~ascherbakov], could you please assist?
[~mlipkovich], BTW, there will be a code freeze for AI 2.3 release on Oct 3. Do you think it makes sense to move the ticket to the version 2.4?;;;","29/Sep/17 16:18;ascherbakov;[~mlipkovich],

Yes, you should choose among alive nodes in case of locked topology.

Something like:

{code}
        // Always use primary, if reads from backups are not allowed.
        if (!cctx.config().isReadFromBackup())
            return affNodes.get(0);

        Object mac = cctx.localNode().attribute(IgniteNodeAttributes.ATTR_MACS);

        assert mac != null;

        int r = ThreadLocalRandom8.current().nextInt(affNodes.size());
        
        int c = 0;
        
        ClusterNode n0 = null;
        
        int lastMatch = -1;
        
        for (int i = 0; i < affNodes.size(); i++) {
            ClusterNode node = affNodes.get(i);

            if (canRemap || cctx.discovery().alive(node)) {
                // Prefer collocated node.
                if (mac.equals(node.attribute(IgniteNodeAttributes.ATTR_MACS)))
                    return node;

                if (c++ == r)
                    n0 = node;

                lastMatch = i;
            }
        }
        
        if (n0 == null && lastMatch != -1)
            n0 = affNodes.get(lastMatch);

        return n0;
{code}



;;;","13/Oct/17 10:59;mlipkovich;[~vozerov], [~ascherbakov] thanks both of you!
Sorry for late response - I was on a vacation. So probably the question about version is not relevant anymore and it can be changed to 2.4;;;","03/Feb/18 20:53;DALukjanenko;[~mlipkovich], are you going to fix this issue? If you don't mind, I'll take it.;;;","06/Feb/18 09:27;mlipkovich;[~DALukjanenko], please go ahead with this issue;;;","06/Feb/18 10:25;DALukjanenko;[~ascherbakov], I would like you to assign this issue to me.;;;","06/Feb/18 11:19;ascherbakov;[~DALukjanenko],

Don't you able to reassign it by yourself ?

Thanks for taking interest on this.;;;","06/Feb/18 14:07;DALukjanenko;[~ascherbakov], No I don't. I can't see any button to assign.;;;","06/Feb/18 21:43;DALukjanenko;Now it's ok. My bad :);;;","28/Feb/18 00:26;githubbot;GitHub user DALukjanenko opened a pull request:

    https://github.com/apache/ignite/pull/3581

    IGNITE-5357 replicated cache reads load balancing was added

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/DALukjanenko/ignite IGNITE-5357.master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3581.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3581
    
----
commit 5cc0906838f4916060149a62b51d6904f63a11a7
Author: Dmitry Lukjanenko <lukdiman.developer@...>
Date:   2018-02-28T00:14:36Z

    IGNITE-5357 replicated cache reads load balancing was added

----
;;;","28/Feb/18 07:38;daradurvs;[~ascherbakov], please have a look at the prepared PR: [https://github.com/apache/ignite/pull/3578/files]

[Ci.tests of PR|https://ci.ignite.apache.org/viewLog.html?buildId=1113498&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll] look the same as [the master branch|https://ci.ignite.apache.org/viewLog.html?buildId=1113404&tab=buildResultsDiv&buildTypeId=IgniteTests24Java8_RunAll].

Should we add any special test cases for this change, I think it's covered by existing tests?;;;","02/Mar/18 10:58;nizhikov;> https://github.com/apache/ignite/pull/3578

Looks good to me.;;;","02/Mar/18 11:03;daradurvs;[~NIzhikov], thank you!

[~ascherbakov], I've updated the PR to avoid memory's overhead. Please have a look, if you have time.

Now it covers {{get}} and {{getAll}} operations. I moved logic to {{GridCacheUtils}} since classes have no suitable common superclasses in the hierarchy.

Also, {{get}}-requests distribution tests were added, including {{TRANSACTIONAL + READ_COMMITTED}} modes.;;;","12/Mar/18 16:12;nizhikov;[~ascherbakov] I've reviewed update PR one more time.

looks good to me.

[~daradurvs] Please, provide TC link for current PR changes.;;;","13/Mar/18 05:43;daradurvs;[~NIzhikov], thank you so much.

Latest ci.build: https://ci.ignite.apache.org/viewLog.html?buildId=1134466;;;","16/Mar/18 16:24;dpavlov;Hi Folks, could you please close not actual PRs. It brings a lot of confusion during review.;;;","16/Mar/18 16:28;nizhikov;I detached abandoned PR link.
Now, only actual PR link exists:

PR to review - https://github.com/apache/ignite/pull/3578;;;","22/Mar/18 14:34;daradurvs;Here is new [ci.build|https://ci.ignite.apache.org/viewLog.html?buildId=1151311] after review's notest fixes.;;;","22/Mar/18 14:44;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/3578
;;;","22/Mar/18 14:50;dpavlov;Hi [~daradurvs], 

Merged your changes. Thank you for contribution.

Lets continue to keep an eye to TC.;;;","22/Mar/18 14:53;dpavlov;One small change I've done - I've migrated tests fromm cache 5 to cache 6 suite. Cache 6 is not so overloaded as cache 5.;;;","22/Mar/18 14:57;daradurvs;[~dpavlov], thanks for your help.;;;",,,,,,,,,,,,,,,,,,,
.NET: Peer deployment does not load runtime dependencies,IGNITE-5356,13076154,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,31/May/17 10:13,02/Jun/17 10:01,14/Jul/23 06:20,02/Jun/17 10:00,2.1,,,,,2.1,,platforms,,,,0,.NET,,,"Discovered while testing in LINQPad:
* Start Apache.Ignite.exe with enabled peer loading
* Run a computation from LINQPad that uses {{Dump}} extension method

It fails with ""Cannot load LINQPad assembly"" error, because CLR tries to load that assembly during job execution, not during deserialization.

We should wrap {{ExecuteRemote}} in a {{PeerAssemblyResolver}} to handle runtime assembly requests.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 02 10:01:36 UTC 2017,,,,,,,,,,"0|i3fotz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/May/17 10:27;ptupitsyn;Reproduced with a simple extension method. Static classes are loaded on demand.;;;","01/Jun/17 14:53;ptupitsyn;Another problem uncovered: runtime dependency is not even loaded on origin node, so peer request can not be satisfied. We need to scan through referenced assemblies as well.;;;","01/Jun/17 15:59;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2063

    IGNITE-5356 .NET: Fix runtime dependency loading with peer deployment

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5356

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2063.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2063
    
----
commit 2af4ded9a1bc911c525c64a7370c1df410c87024
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T10:26:17Z

    IGNITE-5356 .NET: Peer deployment does not load runtime dependencies

commit aaac50cc8311531d9a5658423be8474e04c0dd1a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T12:41:40Z

    wip

commit 2d6c79bbee15b7fb572f160ef7ebfd39b45bcb97
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T13:52:33Z

    Merge branch 'master' into ignite-5356

commit 27de98ae040444c388e8ac2e6c1c5d11b13eb70f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T14:34:28Z

    added naive fix

commit 2a84f17b5542f9dc2da405fc4f5257e0264aafe9
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T14:37:09Z

    Fix exception mapping

commit f4aeb412c1807075b41c49d8fb56e9c2e03b1530
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T14:44:29Z

    wip

commit c30641ebd1d47a559fd44f735e705b8ba5f5f69c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T14:52:38Z

    wip

commit b69ebcafe9cf5f4f597c7268edde82ba46b783ff
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T15:38:58Z

    Load referenced assemblies on demand

commit 4f5d8b0a1084f9683187bd3022c23d33a97530bd
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T15:40:53Z

    cleanup

commit 11f30e3d145a13801de24987b17934189398c384
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T15:43:48Z

    wip

commit 6f0a114b7868fbc83c6a6c7901f401e936135b57
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-06-01T15:57:26Z

    cleanup

----
;;;","01/Jun/17 16:01;ptupitsyn;Summary of changes:
* Handle {{AssemblyResolve}} event during job execution
* Satisfy peer assembly requests by calling Assembly.Load (asm may be present but not loaded - JIT loads them on demand)

Waiting for TC: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2063%2Fhead;;;","02/Jun/17 10:00;ptupitsyn;Merged to master: {{79d45e34335d2286bf382d7a8a49a71661f26f79}};;;","02/Jun/17 10:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2063
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: ConfigSectionName can not be overridden from command line,IGNITE-5354,13076117,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,31/May/17 08:01,31/May/17 09:12,14/Jul/23 06:20,31/May/17 09:11,,,,,,2.1,,platforms,,,,0,.NET,,,"{{Apache.Ignite.exe}} takes startup arguments from app.config and command line. Command line arguments override those from app.config.

This is not the case for {{ConfigSectionName}} and {{ConfigFileName}}.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 31 09:12:32 UTC 2017,,,,,,,,,,"0|i3folr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/May/17 08:12;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2042

    IGNITE-5354 .NET: Fix command line args preference over config file

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5354

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2042.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2042
    
----
commit c0012fbf8ca1519adbc2a5e89809a9aa8e43545e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-31T08:06:08Z

    IGNITE-5354 .NET: ConfigSectionName can not be overridden from command line

----
;;;","31/May/17 09:11;ptupitsyn;Merged to master: {{8476a1958a1778a6b48dea55a81e8e954f243179}};;;","31/May/17 09:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2042
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Skip permission check for TASK_EXECUTE for service jobs,IGNITE-5342,13075827,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,30/May/17 12:55,11/Oct/21 14:05,14/Jul/23 06:20,31/May/17 11:09,2.1,,,,,2.1,,,,,,0,,,,"Services work as compute tasks, and when SERVICE_INVOKE is available, service execution should not throw TASK_EXECUTE authorization error",,dkarachentsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-15322,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-05-30 12:55:22.0,,,,,,,,,,"0|i3fmtb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AssertionError in index name check,IGNITE-5340,13075799,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,v.pyatkov,v.pyatkov,30/May/17 11:04,07/Jul/17 09:38,14/Jul/23 06:20,05/Jul/17 07:30,2.0,,,,,2.1,,sql,,,,0,,,,"The exception will be got when index name manual assign with ""#"" symbol, through the method {{org.apache.ignite.cache.QueryIndex#setName()}}

{noformat}
java.lang.AssertionError: null
         at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.escapeName(IgniteH2Indexing.java:1980) 
         at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$TableDescriptor.createUserIndex(IgniteH2Indexing.java:3214) 
         at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$TableDescriptor.createUserIndexes(IgniteH2Indexing.java:3199) 
         at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.createTable(IgniteH2Indexing.java:2041) 
         at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.registerType(IgniteH2Indexing.java:1909) 
         at org.apache.ignite.internal.processors.query.GridQueryProcessor.registerCache0(GridQueryProcessor.java:1298) 
         at org.apache.ignite.internal.processors.query.GridQueryProcessor.initializeCache(GridQueryProcessor.java:751) 
         at org.apache.ignite.internal.processors.query.GridQueryProcessor.onCacheStart(GridQueryProcessor.java:809) 
         at org.apache.ignite.internal.processors.cache.GridCacheProcessor.startCache(GridCacheProcessor.java:1261) 
         at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheStart(GridCacheProcessor.java:1930) 
         at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheStart(GridCacheProcessor.java:1817) 
         at org.apache.ignite.internal.processors.cache.CacheAffinitySharedManager.onCacheChangeRequest(CacheAffinitySharedManager.java:384) 
         at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onCacheChangeRequest(GridDhtPartitionsExchangeFuture.java:764) 
         at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:556) 
         at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1824)
         at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
         at java.lang.Thread.run(Thread.java:745)

{noformat}",,githubbot,tledkov-gridgain,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jul 07 09:38:55 UTC 2017,,,,,,,,,,"0|i3fmn3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jun/17 13:36;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/2206

    IGNITE-5340  AssertionError in index name check

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5340

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2206.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2206
    
----
commit 33a9cc4cf9b32d93e34c5855d52ce208a3fd8228
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:33:30Z

    IGNITE-5267 Deserialize binary object explicitly instead of calling cache. Small refactoring.

commit 95257a16aef0bc0bbacdee03503ee483ffc75bda
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:34:37Z

    IGNITE-5267 Small test refactoring and speeding up

commit e2354cb5ea8965276c3696895c86e51315765571
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:37:38Z

    IGNITE-5267 Fixed and simplified test

commit 41cea0bc2f887881a78436e54143313af27e7fa8
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:38:55Z

    IGNITE-5267 Make partitionMapExchange timeout configurable

commit 8e1439782b993c8ccb974bcdbd55d4f2b28a5489
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:40:53Z

    IGNITE-5267 Use owners instead of nodes to properly check finishing of partitionMapExchange

commit ef732dae02673c2ce79575b57454a573f0d1d591
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:42:00Z

    IGNITE-5267 Provide entry key explicitly in cache queries. Fixed test.

commit 5eb40528bd6e52b4c13a4c21ecca74407b081898
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-08T21:42:34Z

    IGNITE-5267 Explicitly fail test with known issue

commit e4f203b512cba1dc8ae82b506cadebfed3fd7f65
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T13:58:12Z

    review

commit fd7050c72c8125ed1dd213ef781bdb9971d00413
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-06-13T14:02:54Z

    ignite-2.1.1 Add joining node tests in suit

commit 3e509aa604ca342b3f42a73e771a5a4f678d7132
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T14:13:43Z

    ignite-2.1.1 Fixing compilation in tests

commit dea416fa65874d4e33b37b46368f9e476a3904f4
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-06-13T15:00:32Z

    Merge fix: 4.ea2 into 5267: remove node is loopback check

commit b52a84e885b0f88971290200942e0bbe01252ff6
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:09:41Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-2.1.1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticAware.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheIoManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedSingleGetFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridDhtAtomicCache.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/colocated/GridDhtColocatedLockFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxImplicitSingleStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java
    #	modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java
    #	modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/handlers/ClusterListener.java

commit fb2e6d4ab00e3e443bdd896918e812d6fa6119ba
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:10:18Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-2.1.1
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticAware.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteDiagnosticMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/IgniteKernal.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheIoManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtTxPrepareFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridPartitionedSingleGetFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/atomic/GridDhtAtomicCache.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/colocated/GridDhtColocatedLockFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxImplicitSingleStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/transactions/IgniteTxStateImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cluster/ClusterProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/util/nio/GridNioServer.java
    #	modules/core/src/main/java/org/apache/ignite/spi/communication/tcp/TcpCommunicationSpi.java
    #	modules/core/src/test/java/org/apache/ignite/internal/managers/IgniteDiagnosticMessagesTest.java
    #	modules/web-console/web-agent/src/main/java/org/apache/ignite/console/agent/handlers/ClusterListener.java

commit 2300ec47da979847c36a41e95bebbbd3af1758f1
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-13T15:10:52Z

    Merge remote-tracking branch 'community/ignite-2.1.1' into ignite-2.1.1

commit ff9e4559711c69c73210f5d91036fc829b7eef17
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T15:24:09Z

    ignite-5267 : Minors.

commit 34f8c244313ebf94b65c40d5f17dc507f2b54251
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T15:32:33Z

    ignite-5267 : Minors.

commit 2101132fb553c83a2936bbd8501dbdb696ddd054
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-06-13T15:36:54Z

    IGNITE-5364 Remove contention on DataStructure creation or removing

commit c49daaecc8db6c0d71927cc149274e9b51e37911
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-06-13T15:44:54Z

    ignite-2.1.1 Activate nodes after start

commit 6aecaa358c1f9365eb8b1d073634ac74cc65f4d6
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-13T16:08:24Z

    ignite-5267 : Minors.

commit 2b030c0dd40db0e0d400fd3652ffb609bcd9ac06
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-13T16:41:55Z

    ignite-2.1.1 Extract Ignite updates checker to separate class. Fixed GridUpdateNotifier test.

commit db07d5853e80e6e55bb54cae138d2908fd976f2b
Author: Pavel Kovalenko <jokserfn@gmail.com>
Date:   2017-06-13T16:42:14Z

    Merge branch 'ignite-2.1.1' of https://github.com/gridgain/apache-ignite into ignite-2.1.1

commit b3adc5127dd897dd035224e419b020e6f7a1357d
Author: oleg-ostanin <oostanin@gridgain.com>
Date:   2017-06-13T19:28:24Z

    IGNITE-GG-12267 skiped upload ignite-benchmarks and apache-ignite pom.xml to maven repo

commit 4d201dba5a66a3771d4a2d7076d6bc95a0def9fc
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-06-14T04:41:01Z

    IGNITE-4758 - Added missing fields and fixed typos.

commit 9ebdc1106555d9233d5d328fd6cc71f7a1402490
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-06-14T07:58:20Z

    IGNITE-5239 Web Console show full stack trace on Queries screen.

commit 87c6bf2b761f585dee095f9a56641b4741d0db3b
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-06-14T08:04:11Z

    IGNITE-5366 Web Console: Added user notifications.

commit b7a19ae7b54f05a0f2fe8223397e59f34b4f63cf
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2017-06-14T08:32:00Z

    IGNITE-5240 Fixed repository name.

commit 42c04ddb17f560f4120636431da20e6e0b1422a9
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-06-14T08:46:40Z

    IGNITE-5481 Reworked rebalance detection.

commit 29df01dd2196fda7ed927e67e5e8bad194ce6f34
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-06-14T08:55:03Z

    IGNITE-5402 Web Console: Fixed near cache generation for client mode.

commit 0cb8a0ea43fc9dc1902655c32ba03968a3c3b517
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-06-13T16:14:38Z

    GNITE-5478: ODBC: SQLNumParams now returns number of required parameters.

commit 3f8ef4f821908b1a910a36c07457553b17f763e4
Author: Alexey Kuznetsov <akuznetsov@gridgain.com>
Date:   2017-06-13T16:30:43Z

    master - Fixed typo.

----
;;;","27/Jun/17 13:49;tledkov-gridgain;Not reproduced on 2.1.

The index name contains with non letter symbols is added to configuration in the base class for query tests: {{IgniteCacheAbstractQuerySelfTest}}

[Tests results|http://195.239.208.174/project.html?projectId=Ignite20Tests&tab=projectOverview&branch_Ignite20Tests=pull%2F2206%2Fhead] are OK with me.

[~sboikov], please review the changes at the test.;;;","07/Jul/17 09:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2206
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: TestMultipleAssembliesIndirectDependencyMultiLevel fails on TC,IGNITE-5338,13075793,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,30/May/17 10:25,30/May/17 14:00,14/Jul/23 06:20,30/May/17 13:59,,,,,,2.1,,platforms,,,,0,.NET,,,"{{PeerAssemblyLoadingTest.TestMultipleAssembliesIndirectDependencyMultiLevel}} fails on TC. Does not reproduce locally.

The problem is that we try to serialize WaitHandle for some reason, and this does not happen locally.

Try to add debug output to see the entire object graph.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 30 14:00:37 UTC 2017,,,,,,,,,,"0|i3fmlr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/May/17 10:45;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/2033

    IGNITE-5338 .NET: TestMultipleAssembliesIndirectDependencyMultiLevel fails on TC

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5338

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2033.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2033
    
----
commit 36ee69bafcd1f003f46efe5d00a6088d67053a7e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-30T10:44:36Z

    IGNITE-5338 .NET: TestMultipleAssembliesIndirectDependencyMultiLevel fails on TC

----
;;;","30/May/17 12:49;ptupitsyn;Found the problem. NUnit runner on TeamCity attaches its own console listener, {{NUnit.Core.EventListenerTextWriter}}, and it appears in the log4net object graph (inside {{log4net.Util.QuietTextWriter}}). And somewhere deeper there is a {{WaitHandle}}, which can't be serialized.

So there is no bug in Ignite, we should just fix the test and get rid of log4net there.

Full log for the history:
{code}
 Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Compute.ComputeJobHolder' of type 'Apache.Ignite.Core.Impl.Compute.ComputeJobHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Compute.Closure.ComputeOutFuncJob' of type 'Apache.Ignite.Core.Impl.Compute.Closure.ComputeOutFuncJob'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Compute.ComputeOutFuncWrapper' of type 'Apache.Ignite.Core.Impl.Compute.ComputeOutFuncWrapper'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Tests.Deployment.ProcessNameFunc' of type 'Apache.Ignite.Core.Tests.Deployment.ProcessNameFunc'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Tests.Deployment.ProcessNameFunc' of type 'Apache.Ignite.Core.Tests.Deployment.ProcessNameFunc'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Log4Net.IgniteLog4NetLogger' of type 'Apache.Ignite.Log4Net.IgniteLog4NetLogger'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Log4Net.IgniteLog4NetLogger' of type 'Apache.Ignite.Log4Net.IgniteLog4NetLogger'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Core.LogImpl' of type 'log4net.Core.LogImpl'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Core.LogImpl' of type 'log4net.Core.LogImpl'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Repository.Hierarchy.DefaultLoggerFactory+LoggerImpl' of type 'log4net.Repository.Hierarchy.DefaultLoggerFactory+LoggerImpl'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Repository.Hierarchy.DefaultLoggerFactory+LoggerImpl' of type 'log4net.Repository.Hierarchy.DefaultLoggerFactory+LoggerImpl'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Repository.Hierarchy.Hierarchy' of type 'log4net.Repository.Hierarchy.Hierarchy'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Repository.Hierarchy.Hierarchy' of type 'log4net.Repository.Hierarchy.Hierarchy'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Repository.Hierarchy.RootLogger' of type 'log4net.Repository.Hierarchy.RootLogger'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Repository.Hierarchy.RootLogger' of type 'log4net.Repository.Hierarchy.RootLogger'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Util.AppenderAttachedImpl' of type 'log4net.Util.AppenderAttachedImpl'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Util.AppenderAttachedImpl' of type 'log4net.Util.AppenderAttachedImpl'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Appender.AppenderCollection' of type 'log4net.Appender.AppenderCollection'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Appender.AppenderCollection' of type 'log4net.Appender.AppenderCollection'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Appender.TextWriterAppender' of type 'log4net.Appender.TextWriterAppender'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Appender.TextWriterAppender' of type 'log4net.Appender.TextWriterAppender'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Util.QuietTextWriter' of type 'log4net.Util.QuietTextWriter'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'log4net.Util.QuietTextWriter' of type 'log4net.Util.QuietTextWriter'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'NUnit.Core.EventListenerTextWriter' of type 'NUnit.Core.EventListenerTextWriter'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'NUnit.Core.EventListenerTextWriter' of type 'NUnit.Core.EventListenerTextWriter'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'NUnit.Core.QueuingEventListener' of type 'NUnit.Core.QueuingEventListener'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'NUnit.Core.QueuingEventListener' of type 'NUnit.Core.QueuingEventListener'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'NUnit.Core.EventQueue' of type 'NUnit.Core.EventQueue'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'NUnit.Core.EventQueue' of type 'NUnit.Core.EventQueue'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'System.Threading.AutoResetEvent' of type 'System.Threading.AutoResetEvent'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder' of type 'Apache.Ignite.Core.Impl.Deployment.PeerLoadingObjectHolder'
  ----> Apache.Ignite.Core.Binary.BinaryObjectException : Failed to serialize object 'System.Threading.AutoResetEvent' of type 'System.Threading.AutoResetEvent'
  ----> Apache.Ignite.Core.Common.IgniteException : Unsupported primitive type 'System.IntPtr' [Field=IntPtr waitHandle, DeclaringType=System.Threading.WaitHandle
{code};;;","30/May/17 13:59;ptupitsyn;Fixed by replacing log4net with NLog. Merged to master: {{73ae278d87bf5d3f404719a4a3c03f88badbe7d3}}.;;;","30/May/17 14:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2033
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong value read by SQL query for field containing negative decimal,IGNITE-5335,13075669,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,skalashnikov,skalashnikov,29/May/17 16:40,02/Jun/17 11:30,14/Jul/23 06:20,02/Jun/17 11:29,2.0,,,,,2.1,,binary,sql,,,0,important,,,"Steps to reproduce:
1) Create a cache with value type having some decimal field.
2) Instantiate a value, intialize decimal field with a negative value and put it to the cache.
3) Perform an sql query on the decimal field.
4) Check the selected value.
",,githubbot,skalashnikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"29/May/17 16:41;skalashnikov;BinaryObjectFieldDecimalTest.java;https://issues.apache.org/jira/secure/attachment/12870323/BinaryObjectFieldDecimalTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 02 11:30:09 UTC 2017,,,,,,,,,,"0|i3flu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/May/17 16:41;skalashnikov;Attached the reproducer;;;","30/May/17 11:51;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/2034

    IGNITE-5335: Fixed reading decimal binary field

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5335

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2034.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2034
    
----
commit 78a118c1c25e9e8afc2f4721f40d65ce2646e5de
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-05-30T11:49:49Z

    IGNITE-5335: Fixed reading decimal binary field

----
;;;","30/May/17 13:49;skalashnikov;[~vozerov],
Tests looks good. Could you please review the changes?;;;","31/May/17 18:45;vozerov;[~skalashnikov], looks like we should also fix this in {{org.apache.ignite.internal.binary.BinaryFieldImpl#readField}}. Please confirm.;;;","01/Jun/17 09:52;skalashnikov;[~vozerov], You are right. I have fixed that too and added a test. Please see again.;;;","02/Jun/17 11:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2034
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add toString() to GridNearAtomicAbstractSingleUpdateRequest and it's inheritors,IGNITE-5332,13075628,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ameterko,dkarachentsev,dkarachentsev,29/May/17 14:24,19/Jul/17 16:41,14/Jul/23 06:20,19/Jul/17 10:50,1.7,,,,,1.9,,,,,,0,newbie,,,GridNearAtomicAbstractSingleUpdateRequest and all his inheritors should implement toString() method.,,ameterko,dkarachentsev,githubbot,kenmy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5473,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jul 19 10:33:02 UTC 2017,,,,,,,,,,"0|i3fll3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jul/17 11:32;githubbot;GitHub user Desperus opened a pull request:

    https://github.com/apache/ignite/pull/2258

    IGNITE-5332 added toString() method where it was missing

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/Desperus/ignite ignite-5332

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2258.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2258
    
----
commit fd6e61b5eb9ba9084a093377b871e541220ac8b3
Author: Aleksandr_Meterko <aleksandr_meterko@epam.com>
Date:   2017-07-07T11:29:25Z

    ignite-5332 added toString() method where it was missing

----
;;;","12/Jul/17 12:02;ameterko;[~sboikov], could you please review my request?;;;","19/Jul/17 10:13;githubbot;Github user Desperus closed the pull request at:

    https://github.com/apache/ignite/pull/2258
;;;","19/Jul/17 10:33;ameterko;This ticket was implemented in master during implementation of IGNITE-5473 (commit cf345b8) so it should be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DiscoverySpi#setDataExchange returns concrete implementation,IGNITE-5321,13075479,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,nizhikov,nizhikov,nizhikov,28/May/17 15:57,29/May/17 14:30,14/Jul/23 06:20,29/May/17 14:30,2.0,,,,,2.1,,,,,,0,,,,"Two method of DiscoverySpi interface returns concrete implementation instead of interface.

{code:java}
public interface DiscoverySpi extends IgniteSpi {
....
    TcpDiscoverySpi setDataExchange(DiscoverySpiDataExchange var1);

    TcpDiscoverySpi setMetricsProvider(DiscoveryMetricsProvider var1);
...
}
{code}",,nizhikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 29 14:30:14 UTC 2017,,,,,,,,,,"0|i3fknz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/May/17 14:30;nizhikov;Fixed by commit - 
https://github.com/apache/ignite/commit/0f8af137caa6d2ab5bd00ea33a34d4a969adff2b;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decouple DDL from cache name,IGNITE-5304,13075348,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,27/May/17 10:13,27/May/17 12:07,14/Jul/23 06:20,27/May/17 12:06,,,,,,2.1,,sql,,,,0,,,,DDL should not use cache name anyhow.,,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5054,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat May 27 12:07:28 UTC 2017,,,,,,,,,,"0|i3fjuv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/May/17 10:14;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2017

    IGNITE-5304

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5304

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2017.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2017
    
----
commit 99d2299d0964c163396c9335b9de098f5c533b8a
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T11:44:56Z

    WIP.

commit 56a6bf342f3b213ec2a6ffb37657605b39a5e8fc
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T11:47:08Z

    WIP.

commit ea983d7a5fe1bbe6aa34baed2600df61f018484f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T12:01:46Z

    WIP.

commit f046fe04952e78a94af97a9e361012409b6b1a7c
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T12:02:41Z

    Done.

commit 21f94a2a2460b8b2a17bfa989f94735c6661211f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T12:45:44Z

    Done.

commit 650c6f537567e1008360e25b348bd5e53baed5e8
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T17:45:03Z

    Merge branch 'master' into ignite-5282
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheProxy.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryIndexing.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/DmlStatementsProcessor.java
    #	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java

commit e126c89792259e88ead379607f7ae3c7efb6f681
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T18:03:04Z

    WIP.

commit adc79f578e211fdeca5908ecc400d90103f63b76
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T18:10:52Z

    WIP on removing cache name.

commit eb2b21a630e5ff25fb01da01ba848b789d00e9b8
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T18:24:52Z

    Splitting H2 indexing.

commit fcc34a7351f83d52ec9b24681b897bf7baaf270f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-23T18:54:28Z

    WIP on DDL.

commit e8ffac1914ba4fd095f5742220a1e4c553ae6384
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-27T10:11:16Z

    Merge branch 'master' into ignite-5282-2-ddl
    
    # Conflicts:
    #	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/DmlStatementsProcessor.java
    #	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java
    #	modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/twostep/GridReduceQueryExecutor.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/query/h2/GridIndexingSpiAbstractSelfTest.java

commit 45d218a5fb1bad41508ca6122135aee1b420fdf3
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-27T10:12:02Z

    Merge.

----
;;;","27/May/17 12:07;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/2017
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JVM crashes on H2TreeIndex destroy,IGNITE-5301,13075176,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,26/May/17 13:33,28/Aug/17 16:39,14/Jul/23 06:20,21/Aug/17 09:34,2.1,,,,,2.3,,,,,,0,,,,"There is a bug in destroy method because of which {noformat}cctx.offheap().dropRootPageForIndex(idxName){noformat} method actually does nothing. It happens because idx names on create RootPage and destroy it are different (unlike creation a root page, a segment suffix isn't added to tree name on destroy, so that it can't delete the page from metastore by different key).

After fixing this behavior I faced JVM crash. 

I'm quite not familiar with the code, but I suppose something is wrong in MetaStoreInnerIO logic.

Crash report is attached.

How to reproduce:

just create and destroy a cache with indexed types and enabled PDS feature after the fix I provided above is applied.
",,githubbot,gvvinblade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/May/17 13:33;gvvinblade;hs_err_pid9664.log;https://issues.apache.org/jira/secure/attachment/12870071/hs_err_pid9664.log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 04 10:04:08 UTC 2017,,,,,,,,,,"0|i3fisn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/May/17 19:53;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/2029

    IGNITE-5301 JVM crashes on H2TreeIndex destroy

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5301

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2029.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2029
    
----
commit ef01e7558bec7f5e12d8f75694bb40e8f84998cf
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2017-05-29T19:49:41Z

    IGNITE-5301 JVM crashes on H2TreeIndex destroy

----
;;;","29/May/17 19:54;EdShangGG;https://github.com/apache/ignite/pull/2029

Please, take a look!;;;","16/Jun/17 19:34;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2151

    IGNITE-5301-1

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5301-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2151.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2151
    
----
commit 0ce28c6462870f8b6ff798aa6e9236ade490f540
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T09:33:47Z

    DB managers initialization on client node.

commit 874b1f472cdf866a516f858b2a069a32ce41156f
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-05T11:57:54Z

    Fixed formatting.

commit 4f69bd021a3e0951ca222e58cc1fb947c0042635
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:02Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit d7108af5925b38dbdacc1e685c65fccfa33236d4
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:01:11Z

    Merge remote-tracking branch 'remotes/origin/master' into ignite-5267
    
    # Conflicts:
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheAffinitySharedManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupContext.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/ExchangeActions.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCachePartitionExchangeManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheProcessor.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManager.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/database/tree/io/PageIO.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridClientPartitionTopology.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtGetSingleFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtLocalPartition.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/GridDhtPartitionTopologyImpl.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemandMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionDemander.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionSupplier.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsExchangeFuture.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsFullMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPartitionsSingleMessage.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/cache/distributed/dht/preloader/GridDhtPreloader.java
    #	modules/core/src/main/java/org/apache/ignite/internal/processors/query/GridQueryProcessor.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/CacheExchangeMessageDuplicatedStateTest.java
    #	modules/core/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsTest.java
    #	modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/IgniteCacheGroupsSqlTest.java
    #	modules/yardstick/src/main/java/org/apache/ignite/yardstick/IgniteBenchmarkArguments.java

commit 70eea2aa641437a4c74f90f61dfd8fd1de56b08e
Author: sboikov <sboikov@gridgain.com>
Date:   2017-06-06T10:31:35Z

    ignite-5267

commit 9c22c716b5902a5d21277c8a1ae88e4dd59d3b66
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2017-06-06T10:33:32Z

    IGNITE-5267 - Store sql created flag for cache

commit a2e173053fcd2c3f194ea1907341f18afc7f8adc
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-06T11:13:56Z

    IGNITE-5267 - Fixed compilation after merge

commit fffad68f6c23c36cf28e61bd7465082d71569665
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T09:28:29Z

    IGNITE-5375 - Persistence metrics introduced

commit 518238473c0a12380cb9ed96c67597d1fe42652c
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-07T18:08:36Z

    Merged 4.ea2 into 5267

commit 1a19b9004ab5317e8c620c55d5faa2f1a18db577
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T12:46:34Z

    IGNITE-5267 - Fixed compilation after merge.

commit 930e2e0114a72452ca3760aac7d640145a412909
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:12:51Z

    IGNITE-5068 - Fixed lost partitions handling

commit 52640357b1c170b6917339dcb5933ec9fcc4e81a
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:17:53Z

    IGNITE-5068 - Fixed lost partitions handling

commit eff3e09cb66738e987f7993a7d68e2278c4afe95
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T13:58:10Z

    IGNITE-5267 - Fixed CacheState record

commit c782241954595b4d70fe7ee38be746e17211c2c3
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-01T13:19:46Z

    Example of API changes.
    
    (cherry picked from commit c3b6c91)
    
    (cherry picked from commit 90c6345)

commit 60c1454709c520c28d843726b893fb82db750f0e
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-01T15:05:38Z

    Removed explicit CacheConfiguration from AtomicConfiguration and CollectionConfiguration.
    
    (cherry picked from commit ad024dc)

commit 68aa4da3507b2558975eb99763974419fa4f970f
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-02T13:20:41Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 70bbd1a)

commit 9d2eef99aa0c1b185b8ea72b3c928db4a4c448d4
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-02T15:24:50Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 9cd208b)

commit c9412f2040f97595f169bc30fc1eab61ae661cf5
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T14:53:54Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 8b7c239)

commit ff33d803b2223df4bb2036dbdc5340434f5748d4
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T15:38:38Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit f9d7a5a)

commit 0f6873675d5243af02ab042b0817bc8db4d2f431
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T15:44:04Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 272e22c)

commit 891fd2f0225e6da7a946d1deabd9ea200644f51a
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-05T16:13:53Z

    Data structures based on groups - WIP.
    
    (cherry picked from commit 9df4b0b)

commit 4a1889bdc7e6dd4d8f6a8958510f8a08caa63a22
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-07T13:36:39Z

    Data structures based on cache groups - WIP.
    
    (cherry picked from commit 6aa9d45)

commit fdfbde7122193b0d2fe54a24726751ed8e82985b
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-07T14:17:05Z

    Data structures based on cache groups - WIP.
    
    (cherry picked from commit 1cff479)

commit d817d2abe08fe62528f801481880d5a09b6da2c3
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T00:31:51Z

    Data structures based on cache groups - WIP.
    
    (cherry picked from commit e0cab64)

commit d08b3b41b9924659515388da026ad1401385ae2e
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T13:27:21Z

    Data structures based on groups - minor fixes.
    
    (cherry picked from commit 390a24f)

commit 9bf26ac75ddb4c91dabcd117eb0e92be9d2b735d
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T14:18:00Z

    Minor fixes, refactoring.
    
    (cherry picked from commit f670be2)

commit 975c9bc480decb5a06d7cda5434745e5b264d401
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T14:47:46Z

    Javadoc.

commit cd4d04007ca7ad1bfbd7f358f9182f970d38ec3e
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-08T16:10:54Z

    IGNITE-5267 - Moved WAL system properties to WAL configuration

commit 15f3c4eeb7642791845ca19cce7e47c5e61c5139
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-06-08T19:25:32Z

    Made data structure name unique per group.

commit 4b89ae0197ca4acc4d1ee730d296d0e1693674f7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-06-09T11:23:48Z

    IGNITE-5267 - Cleaning public API

----
;;;","17/Jun/17 09:47;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/2151
;;;","04/Jul/17 10:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2029
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't set IgniteLock as broken if lock is failoverSafe,IGNITE-5299,13075160,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ezhuravl,ezhuravl,ezhuravl,26/May/17 12:25,04/Jul/19 21:57,14/Jul/23 06:20,30/May/17 13:11,,,,,,2.1,,,,,,0,,,,"It's unnecessary to set isBroken flag to IgniteLock when failoverSafe=true, because it's only used in case when failoverSafe=false",,avinogradov,ezhuravl,githubbot,,,,,,,,,,"dspavlov commented on issue #2026: IGNITE-5299 Don't set IgniteLock as broken if lock is failoverSafe
URL: https://github.com/apache/ignite/pull/2026#issuecomment-508582478
 
 
   Closing because
   IGNITE-5299 | Resolved 
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:57;githubbot;600","dspavlov commented on pull request #2026: IGNITE-5299 Don't set IgniteLock as broken if lock is failoverSafe
URL: https://github.com/apache/ignite/pull/2026
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/19 21:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 30 13:11:00 UTC 2017,,,,,,,,,,"0|i3fip3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/May/17 14:02;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/2026

    IGNITE-5299 Don't set IgniteLock as broken if lock is failoverSafe

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5299

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2026.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2026
    
----
commit 02ebe624a37379055345ae1409918ba96da1d3fc
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-05-29T13:46:11Z

    IGNITE-5299 Don't set IgniteLock as broken if lock is failoverSafe

----
;;;","30/May/17 13:03;ezhuravl;CI: http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2026%2Fhead;;;","30/May/17 13:11;avinogradov;Merged to the master branch, thanks for contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when Persistent Store is used and Memory Configuration is missing,IGNITE-5295,13075034,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,sergey-chugunov,dmagda,dmagda,26/May/17 00:59,05/Oct/17 10:32,14/Jul/23 06:20,26/May/17 21:28,,,,,,2.1,,,,,,0,,,,"Just added the first Persistent Store example to the branch that fosters the donation:
https://github.com/apache/ignite/tree/ignite-5267/examples/src/main/java/org/apache/ignite/examples/persistentstore

However, the example fails with an NPE if a MemoryConfiguration is not defined explicitly.

{code}
[17:55:39,334][ERROR][main][IgniteKernal] Exception during start processors, node will be stopped and close connections
class org.apache.ignite.IgniteCheckedException: Failed to start processor: GridProcessorAdapter []
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1766)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:925)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:993)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:879)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:778)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:648)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:617)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	at org.apache.ignite.examples.persistentstore.PersistentStoreExample.main(PersistentStoreExample.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to create Ignite component (consider adding ignite-pds module to classpath) [component=DATABASE_MANAGER, cls=org.apache.ignite.internal.processors.cache.database.GridCacheDatabaseSharedManager]
	at org.apache.ignite.internal.IgniteComponentType.componentException(IgniteComponentType.java:335)
	at org.apache.ignite.internal.IgniteComponentType.create0(IgniteComponentType.java:311)
	at org.apache.ignite.internal.IgniteComponentType.create(IgniteComponentType.java:186)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createSharedContext(GridCacheProcessor.java:2078)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.start(GridCacheProcessor.java:632)
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1763)
	... 16 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.apache.ignite.internal.IgniteComponentType.create0(IgniteComponentType.java:307)
	... 20 more
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.database.GridCacheDatabaseSharedManager.<init>(GridCacheDatabaseSharedManager.java:284)
	... 25 more
[17:55:39,338][ERROR][main][IgniteKernal] Got exception while starting (will rollback startup routine).
class org.apache.ignite.IgniteCheckedException: Failed to start processor: GridProcessorAdapter []
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1766)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:925)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:993)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:879)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:778)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:648)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:617)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	at org.apache.ignite.examples.persistentstore.PersistentStoreExample.main(PersistentStoreExample.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to create Ignite component (consider adding ignite-pds module to classpath) [component=DATABASE_MANAGER, cls=org.apache.ignite.internal.processors.cache.database.GridCacheDatabaseSharedManager]
	at org.apache.ignite.internal.IgniteComponentType.componentException(IgniteComponentType.java:335)
	at org.apache.ignite.internal.IgniteComponentType.create0(IgniteComponentType.java:311)
	at org.apache.ignite.internal.IgniteComponentType.create(IgniteComponentType.java:186)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createSharedContext(GridCacheProcessor.java:2078)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.start(GridCacheProcessor.java:632)
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1763)
	... 16 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.apache.ignite.internal.IgniteComponentType.create0(IgniteComponentType.java:307)
	... 20 more
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.database.GridCacheDatabaseSharedManager.<init>(GridCacheDatabaseSharedManager.java:284)
	... 25 more
[17:55:39,346][ERROR][main][IgniteKernal] Failed to pre-stop processor: GridProcessorAdapter []
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.onKernalStop(GridCacheProcessor.java:974)
	at org.apache.ignite.internal.IgniteKernal.stop0(IgniteKernal.java:2099)
	at org.apache.ignite.internal.IgniteKernal.stop(IgniteKernal.java:2047)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1052)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:993)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:879)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:778)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:648)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:617)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	at org.apache.ignite.examples.persistentstore.PersistentStoreExample.main(PersistentStoreExample.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
[17:55:39,351][ERROR][main][IgniteKernal] Failed to stop component (ignoring): GridProcessorAdapter []
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.stop(GridCacheProcessor.java:926)
	at org.apache.ignite.internal.IgniteKernal.stop0(IgniteKernal.java:2180)
	at org.apache.ignite.internal.IgniteKernal.stop(IgniteKernal.java:2047)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:1052)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:993)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:879)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:778)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:648)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:617)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	at org.apache.ignite.examples.persistentstore.PersistentStoreExample.main(PersistentStoreExample.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
[17:55:39] Ignite node stopped wih ERRORS [uptime=00:00:08:000]
Exception in thread ""main"" class org.apache.ignite.IgniteException: Failed to start processor: GridProcessorAdapter []
	at org.apache.ignite.internal.util.IgniteUtils.convertException(IgniteUtils.java:959)
	at org.apache.ignite.Ignition.start(Ignition.java:350)
	at org.apache.ignite.examples.persistentstore.PersistentStoreExample.main(PersistentStoreExample.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to start processor: GridProcessorAdapter []
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1766)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:925)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
	at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:993)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:879)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:778)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:648)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:617)
	at org.apache.ignite.Ignition.start(Ignition.java:347)
	... 6 more
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to create Ignite component (consider adding ignite-pds module to classpath) [component=DATABASE_MANAGER, cls=org.apache.ignite.internal.processors.cache.database.GridCacheDatabaseSharedManager]
	at org.apache.ignite.internal.IgniteComponentType.componentException(IgniteComponentType.java:335)
	at org.apache.ignite.internal.IgniteComponentType.create0(IgniteComponentType.java:311)
	at org.apache.ignite.internal.IgniteComponentType.create(IgniteComponentType.java:186)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createSharedContext(GridCacheProcessor.java:2078)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.start(GridCacheProcessor.java:632)
	at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1763)
	... 16 more
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.apache.ignite.internal.IgniteComponentType.create0(IgniteComponentType.java:307)
	... 20 more
Caused by: java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.database.GridCacheDatabaseSharedManager.<init>(GridCacheDatabaseSharedManager.java:284)
	... 25 more
{code}",,AndreK,dmagda,dpavlov,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Oct 05 10:32:37 UTC 2017,,,,,,,,,,"0|i3fhx3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/17 17:32;sergey-chugunov;as was [discussed|http://apache-ignite-developers.2346864.n4.nabble.com/Persistent-Store-example-fails-with-NPE-tt18034.html] on dev list on the first iteration client nodes won't support persistence store and will ignore persistence configuration if any is provided

pull request with changes is open: https://github.com/apache/ignite/pull/2016;;;","26/May/17 21:27;dmagda;Thanks, merged to ignite-5267.;;;","05/Oct/17 10:32;AndreK;Related null pointer exception:
java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.getPageMemoryForCacheGroup(GridCacheDatabaseSharedManager.java:1460)
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.restoreMemory(GridCacheDatabaseSharedManager.java:1357)
	at org.apache.ignite.internal.processors.cache.persistence.GridCacheDatabaseSharedManager.readCheckpointAndRestoreMemory(GridCacheDatabaseSharedManager.java:539)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.onClusterStateChangeRequest(GridDhtPartitionsExchangeFuture.java:770)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:574)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1901)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:748)
Observed on calling Ignite.activate(true) when IGNITE_HOME was not set as an environment variable. Setting IGNITE_HOME solved the crash but probably should fix the npe.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: plans cache does not clear on cache stop,IGNITE-5291,13074863,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,25/May/17 14:56,01/Jun/17 10:05,14/Jul/23 06:20,01/Jun/17 10:04,2.0,,,,,2.1,,sql,,,,0,,,,,"After cache-schema decoupling mutation of {{DmlStatementsProcessor#planCache}} appears to be broken (different pieces of code contexts operate different schema names), have to do this consistently.",al.psc,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 01 10:05:52 UTC 2017,,,,,,,,,,"0|i3fgv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/17 15:25;al.psc;Patch available. Problem was in cache stop routine of IgniteH2Indexing (cache-schema mapping was removed before call to {{DmlStatementsProcessor#onCacheStop}} which internally needs that mapping).;;;","25/May/17 15:32;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/2008

    IGNITE-5291 Correct handling of cache stop in IgniteH2Indexing

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5291

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2008.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2008
    
----
commit de522ebcc27807f4316b18349f5024f28f1bcf2b
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-05-25T15:21:13Z

    IGNITE-5291 Correct handling of cache stop in IgniteH2Indexing

----
;;;","26/May/17 10:21;vozerov;[~al.psc], fix looks good, but I see failed tests on TC (Ignite Binary Objects Simple Mapper Queries). Please confirm that TC is in acceptable state.;;;","01/Jun/17 10:05;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2008
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Events might be missed during concurrent CQ registration and cache operations,IGNITE-5290,13074832,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ntikhonov,ntikhonov,ntikhonov,25/May/17 13:09,04/Aug/17 11:54,14/Jul/23 06:20,04/Aug/17 11:54,2.0,,,,,,,,,,,0,,,,Events might be missed during concurrent CQ registration and cache operations. See attached test.,,ntikhonov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"25/May/17 13:10;ntikhonov;test.patch;https://issues.apache.org/jira/secure/attachment/12869867/test.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 11:54:34 UTC 2017,,,,,,,,,,"0|i3fgo7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/17 20:37;amashenkov;[~ntikhonov], is it duplicate of IGNITE-4939 ?
Looks like it is fixed, but not merged to master.;;;","26/May/17 10:16;ntikhonov;[~amashenkov],
It is not duplicate. Its other issue.;;;","29/May/17 07:28;sboikov;Currently I'm doing changes in CQ code and faced the same issue. This caused by the fact that in GridCacheMapEntry.innerUpdate collection of CQ listeners to notify if initialized before partition update counter is incremented. Looks like to avoid this error it should work in this way:
- first get snapshot of listeners (in the same place it is obtained now)
- execute update logic
- before notifying listeners, again get snapshot of listeners, if it changed then for all added listeners mark current counter as filtered;;;","29/May/17 10:24;ntikhonov;[~sboikov]
Thank you for your idea!  I've already implemeted it. Could you please look at PR? 
https://github.com/apache/ignite/pull/2010;;;","04/Aug/17 11:54;ntikhonov;Fixed by 42293fa sboikov <sboikov@gridgain.com> on 29.05.2017 at 16:41;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: CacheConfiguration.sqlEscapeAll must affect only predefined objects,IGNITE-5287,13074476,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,24/May/17 11:13,27/May/17 18:31,14/Jul/23 06:20,27/May/17 09:49,,,,,,2.1,,cache,sql,,,0,,,,"Mentioned flag should work as follows:
1) If set, all object names (schema, QueryEntity (table, fields and aliases), QueryIndex (name and fields)) should be left as is.
2) Otherwise we should convert them to uppercase, and replace class delimiters (""."", ""$"") with underscore. 

This is it. This property should not be used anywhere else. Allmost all usages of {{IgniteH2Indexing.escapeName}} should go away.",,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5054,,,,,,,,,,,,,,,,,,,,,,IGNITE-5315,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat May 27 09:48:39 UTC 2017,,,,,,,,,,"0|i3feh3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/17 10:12;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/2004

    IGNITE-5287

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5287

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2004.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2004
    
----
commit 7dd23aa3f891659c5d455316b9bedda4c26d22b3
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-24T12:52:15Z

    Started.

commit 7a7646d46080ec7e22476e744cd4b9973be066b6
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-24T15:26:11Z

    Implemented normalization logic.

commit 3caf64a42bacf8cbe82d63797473949a521babbb
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-24T15:36:01Z

    Minor fix. Normalization appears to be fine at this point.

commit c3773cc7de08ff31f70d9c77af55c9b53a55ce06
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-24T16:31:06Z

    WIP.

commit 37a7c223f604680904d63743de7472ef86a85e6b
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-24T16:50:45Z

    WIP.

commit cbcc8d4f58fdb0ec9d6b2c5a85b2c6330742be2f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T07:38:17Z

    WIP.

commit b48c8ff383bd9e174a31f04038f36f13ad0da0a3
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T07:50:24Z

    List of failing tests.

commit f066b7748c3d749cebd2b1bd836f390328ab2462
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T07:55:14Z

    Fixing tests.

commit 23f4f46b05929285ead36164d8a90f685c6dca93
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T08:06:24Z

    WIP on tests.

commit 2195c14f8a203d9709b224ac68962ee8acf57a57
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T08:13:58Z

    WIP on tests.

commit 8e438499f03ad450788a81d1c5d4fcbde9179b6d
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T08:48:37Z

    Table name is always set.

commit 8227e6934f7690bf53bdb6925e03eb4a2f0dfcf3
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T09:19:10Z

    WIP.

commit e790fa76899f974f67708a6f7ff45548260b953d
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T09:23:41Z

    WIP.

commit 266e661f383604ae299125807658fd3f89420d8d
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T09:31:14Z

    WIP.

commit 39d180fc7ec53b49a069b66d65ecc415a49a9ecc
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T10:11:35Z

    Fixing tests.

commit b1aef1585e358a9c05ee4361cc7994d55de93299
Author: devozerov <vozerov@gridgain.com>
Date:   2017-05-25T10:12:23Z

    Enabling tests.

----
;;;","27/May/17 09:48;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/2004
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction recovery works incorrectly with cache store and writeThrough enabled,IGNITE-5283,13074204,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,23/May/17 13:42,15/Jun/17 15:55,14/Jul/23 06:20,02/Jun/17 15:03,1.7,,,,,2.1,,cache,,,,0,,,,"Transaction (at least optimistic) recovery on backups works incorrectly when cache store and writeThrough enabled. Changes aren't propagated to DB (it's correct) but propagated to cache if primary node left topology.

It happens because {{IgniteTxRemoteStateAdapter.storeUsed()}} method always returns {{false}}. As result incorrect code branch executes in {{NodeFailureTimeoutObject.onTimeout0()}} method ({{salvageTx()}} method should be invoked).

*Steps to reproduce*:
- Start two nodes A and B with cache. Cache store and writeThrough are anbled.
- From node A start optimistic transaction which executes put/update operation for key. Node A should be primary for this key.
- Kill node A when {{CacheStore.sessionEnd()}} method is invoked but changes are not propagated to underlying database (before commit on connection).
- DB doesn't contain changes but node B contains it.

*Expected behaviour:*

All changes should be rolled back.",,agura,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jun 15 15:55:43 UTC 2017,,,,,,,,,,"0|i3fcsn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/May/17 17:19;agura;Fixed. See PR: https://github.com/apache/ignite/pull/2001

Now flags {{skipStore}} and {{storeUsed}} passed from primary node to backups and {{GridDhtTxRemote}} starts with proper {{storeUsed}} value.

Waiting for TC.;;;","26/May/17 00:23;agura;There are failed tests. Investigation in progress.;;;","30/May/17 15:12;agura;Tests are fixed. Please review.;;;","02/Jun/17 15:04;agura;Need to port to 2.0;;;","15/Jun/17 15:55;agura;Merged into master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Minor serialization fix,IGNITE-5259,13073180,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,18/May/17 15:45,03/Jun/17 07:49,14/Jul/23 06:20,03/Jun/17 07:35,2.1,,,,,2.1,,,,,,0,,,,,,dkarachentsev,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5077,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 03 07:49:51 UTC 2017,,,,,,,,,,"0|i3f6h3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/17 10:56;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/2013

    IGNITE-5259 Minor serialization fix

    (cherry picked from commit b2040b7)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5259-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2013.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2013
    
----
commit b6ad8535171951afb66d4c37d5cbf4bc3e208334
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-05-23T13:14:08Z

    IGNITE-5259 Minor serialization fix
    
    (cherry picked from commit b2040b7)

----
;;;","03/Jun/17 07:49;githubbot;Github user dkarachentsev closed the pull request at:

    https://github.com/apache/ignite/pull/2013
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SqlFieldsQuery result set should expose fields metadata.,IGNITE-5252,13073049,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,18/May/17 08:46,24/May/17 10:26,14/Jul/23 06:20,24/May/17 10:26,2.0,,,,,2.1,,sql,,,,0,,,,"Internal class QueryCursorImpl can contains fields metadata, but QueryCursor does not provide any method for this. So, the only way for user to get metadata is to cast result object to internal class.

We should extend QueryCursor in child interface and change IgniteCache.query() return type for SqlFieldsQueries.",,amashenkov,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5253,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 23 12:15:33 UTC 2017,,,,,,,,,,"0|i3f5nz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/May/17 10:48;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1982

    IGNITE-5252: Expose getFieldName method to SqlFieldsQuery result.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5252

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1982.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1982
    
----
commit 03b4af0b568372b15d9b7a7dbe1283f3fb731370
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-22T10:47:28Z

    Expose getFieldName method to SqlFieldsQuery result.

----
;;;","23/May/17 10:47;amashenkov;TC tests looks fine.;;;","23/May/17 12:15;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1982
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unhelpful exception when value of wrong type is passed to H2,IGNITE-5250,13073000,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,dmagda,dmagda,18/May/17 03:42,13/Mar/19 07:16,14/Jul/23 06:20,13/Mar/19 07:13,2.0,,,,,2.8,,sql,,,,0,usability,,,"For instance, if an SQL schema defined this way:
{code}
cfg.setIndexedTypes(AffinityKey.class, Person.class);
{code}

and then, by some reason, the users confuses the type of the key passing {{int}} instead of {{AffinityKey}}

{code}
        SqlFieldsQuery query = new SqlFieldsQuery(""INSERT INTO Person (_key, id, name, country ) "" +
            ""VALUES ( ? , ? , ? , ?)"");

        // Setting the key of a wrong type (AffinityKey instance must be used instead).
        query.setArgs(100, 1000, ""John"", ""Canada"");

        // Getting not user friendly exception.
        cache.query(query).getAll();
{code}

he will get an exception that doesn't point out to the exact root cause:
{noformat}
Caused by: class org.apache.ignite.IgniteException: Failed to execute SQL query.
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor$3.iterator(DmlStatementsProcessor.java:365)
	at org.apache.ignite.internal.processors.cache.QueryCursorImpl.iterator(QueryCursorImpl.java:94)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.doInsert(DmlStatementsProcessor.java:836)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.executeUpdateStatement(DmlStatementsProcessor.java:378)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.updateSqlFields(DmlStatementsProcessor.java:173)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.updateSqlFieldsTwoStep(DmlStatementsProcessor.java:207)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.queryDistributedSqlFields(IgniteH2Indexing.java:1657)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$5.applyx(GridQueryProcessor.java:1701)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor$5.applyx(GridQueryProcessor.java:1699)
	at org.apache.ignite.internal.util.lang.IgniteOutClosureX.apply(IgniteOutClosureX.java:36)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.executeQuery(GridQueryProcessor.java:2129)
	at org.apache.ignite.internal.processors.query.GridQueryProcessor.querySqlFields(GridQueryProcessor.java:1706)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.query(IgniteCacheProxy.java:783)
	... 6 more
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to execute SQL query.
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:1224)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQueryWithTimer(IgniteH2Indexing.java:1276)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.access$1300(IgniteH2Indexing.java:239)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$4.iterator(IgniteH2Indexing.java:1079)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing$4.iterator(IgniteH2Indexing.java:1067)
	at org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor$3.iterator(DmlStatementsProcessor.java:362)
	... 18 more
Caused by: org.h2.jdbc.JdbcSQLException: Hexadecimal string with odd number of characters: ""100""; SQL statement:
SELECT
TABLE._KEY,
TABLE.ID,
TABLE.NAME,
TABLE.COUNTRY
FROM TABLE(_KEY OTHER=(?1,), ID BIGINT=(?2,), NAME VARCHAR=(?3,), COUNTRY VARCHAR=(?4,)) [90003-195]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.util.StringUtils.convertHexToBytes(StringUtils.java:930)
	at org.h2.value.Value.convertTo(Value.java:957)
	at org.h2.table.Column.convert(Column.java:167)
	at org.h2.expression.TableFunction.getTable(TableFunction.java:118)
	at org.h2.expression.TableFunction.getValue(TableFunction.java:41)
	at org.h2.table.FunctionTable.getValueResultSet(FunctionTable.java:218)
	at org.h2.table.FunctionTable.getResult(FunctionTable.java:189)
	at org.h2.index.FunctionIndex.find(FunctionIndex.java:50)
	at org.h2.index.BaseIndex.find(BaseIndex.java:128)
	at org.h2.index.IndexCursor.find(IndexCursor.java:169)
	at org.h2.table.TableFilter.next(TableFilter.java:468)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1452)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:79)
	at org.h2.result.LazyResult.next(LazyResult.java:59)
	at org.h2.command.dml.Select.queryFlat(Select.java:519)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:625)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:114)
	at org.h2.command.dml.Query.query(Query.java:352)
	at org.h2.command.dml.Query.query(Query.java:333)
	at org.h2.command.CommandContainer.query(CommandContainer.java:113)
	at org.h2.command.Command.executeQuery(Command.java:201)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:111)
	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.executeSqlQuery(IgniteH2Indexing.java:1217)
	... 23 more
{noformat}

It makes sense to process the unclear exception like {{Caused by: org.h2.jdbc.JdbcSQLException: Hexadecimal string with odd number of characters: ""100"";}} internally and give user a hint how to fix it.",,dmagda,ignitetcbot,tledkov-gridgain,vozerov,,,,,,,,,"asfgit commented on pull request #6193: IGNITE-5250: disallow use composite _key, _val columns in DML stateme…
URL: https://github.com/apache/ignite/pull/6193
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 07:16;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6286,,,,,,,,,,,,,,,"18/May/17 03:44;dmagda;ExampleNodeStartup.java;https://issues.apache.org/jira/secure/attachment/12868672/ExampleNodeStartup.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 06 12:57:39 UTC 2019,,,,,,,,,,"0|i3f5d3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/19 15:11;tledkov-gridgain;Looks like the error message was clarified by the IGNITE-7200 patch.

I propose to add the column name to the error message. ;;;","20/Feb/19 15:58;tledkov-gridgain;[~vozerov], what about validation the type of the passed key and value object?
This usability issue is reproduced like below:
{code}
node.createCache(new CacheConfiguration<PersonKey, Person>()
            .setIndexedTypes(PersonKey.class, Person.class));

BinaryObjectBuilder bob = node.binary().builder(""MyPerson"");
bob.setField(""name"", ""myperson"");
bob.setField(""orgId"", 2L);

qryProc.querySqlFields(new SqlFieldsQuery(""INSERT INTO Person (_key, _val) VALUES (?, ?)"")
            .setSchema(""TEST"").setArgs(new PersonKey(2), bob.build()), false);
{code}

The INSERT statement passes without errors and returns *1* (updates OK).
But {{SELECT * from Person}} doesn't return row with key *PersonKey(2)* because the type is not indexed.

Change this behavior: 
*Pros*: fix usability issue. This is a one of the most common mistakes of newcomers.
*Cons*: additional check the type may be a cause of performance drop.

Other way:
Try to silent rebuild the value object in this case.

Similar but not the same for the key object.;;;","01/Mar/19 13:24;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3209513&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","01/Mar/19 13:25;tledkov-gridgain;[~vozerov], please review the patch.;;;","05/Mar/19 07:28;vozerov;[~tledkov-gridgain], my comments:
# Looks like we currently check INSERT and UPDATE, but not bulk update. Please have a look at the method {{verifyDmlColumns}}. Most likelt new checks should be there. Need to confirm with tests it is called for all operation types (INSERT, UPDATE, MERGE, COPY, INSERT with streaming)
# {{IGNITE_ALLOW_KEY_VAL_COLUMNS_AT_DML}} property is better be named as {{IGNITE_SQL_ALLOW_KEY_VAL_UPDATES}}. Please make sure that JavaDoc is valid. Currently it is a copy-paste.;;;","06/Mar/19 12:54;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=3240387&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","06/Mar/19 12:57;tledkov-gridgain;[~vozerov], 
1. Thanks for comment. I move the check into {{UpdatePlanBuilder#verifyDmlColumns}}
Bulk update is available only from JDBC driver that supports only SQL primitive types and doesn't support composite java object.
2. Fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpCommunicationSpi calls GridNioRecoveryDescriptor with looks unusually large rcvCnt and fail with null. ,IGNITE-5247,13072845,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,rcbose,rcbose,17/May/17 15:40,08/Nov/19 09:51,14/Jul/23 06:20,08/Nov/19 09:50,2.0,,,,,2.8,,cache,,,,0,,,,"TcpCommunicationSpi calls GridNioRecoveryDescriptor with looks unusually large rcvCnt and fail with null. 

This happens when new node try to join existing grid of size 2 or 3, 

Environment Machine 1: 
SunOS betapm 5.10 Generic_150400-48 sun4v sparc sun4v

Environment Machine 2: 
Linux sbpmwsv1 2.6.32-642.13.1.el6.x86_64 #1 SMP Wed Nov 23 16:03:01 EST 2016 x86_64 x86_64 x86_64 GNU/Linux

rcvCnt=216172782113783808 ???

The configuration following. MyTcpDiscoveryIpFinderAdapter returns 3 InetSocketAddress including self.

        IgniteConfiguration cfg = new IgniteConfiguration();
        TcpDiscoverySpi spi = new TcpDiscoverySpi();
        JdkMarshaller marshaller = new JdkMarshaller();
        cfg.setMarshaller(marshaller);
        spi.setLocalPort(8087);
        spi.setSocketTimeout(80000L);
        spi.setAckTimeout(80000L);
       
        spi.setLocalPortRange(1);
        spi.setIpFinder(new MyTcpDiscoveryIpFinderAdapter());
        cfg.setDiscoverySpi(spi);
        cfg.setGridName(""demo-cluster"");
        cfg.setClientMode(false);

        Ignite ignite = Ignition.start(cfg);
        IgniteCache<String, String> cache = ignite.getOrCreateCache(""bose"");
        System.out.println(cache.get(""key1""));


May 19, 2017 10:09:13 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Closing NIO session because of unhandled exception.
class org.apache.ignite.internal.util.nio.GridNioException: null
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2043)
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1868)
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1573)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
        at org.apache.ignite.internal.util.nio.GridNioRecoveryDescriptor.ackReceived(GridNioRecoveryDescriptor.java:211)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.onMessage(TcpCommunicationSpi.java:647)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.onMessage(TcpCommunicationSpi.java:342)
        at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:279)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:117)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onMessageReceived(GridConnectionBytesVerifyFilter.java:88)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3062)
        at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
        at org.apache.ignite.internal.util.nio.GridNioServer$DirectNioClientWorker.processRead(GridNioServer.java:1121)
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2031)
        ... 4 more

May 19, 2017 10:09:14 AM org.apache.ignite.logger.java.JavaLogger error
SEVERE: Closing NIO session because of unhandled exception.
class org.apache.ignite.internal.util.nio.GridNioException: null
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2043)
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.bodyInternal(GridNioServer.java:1868)
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.body(GridNioServer.java:1573)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
        at org.apache.ignite.internal.util.nio.GridNioRecoveryDescriptor.ackReceived(GridNioRecoveryDescriptor.java:211)
        at org.apache.ignite.internal.util.nio.GridNioRecoveryDescriptor.onHandshake(GridNioRecoveryDescriptor.java:294)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.connected(TcpCommunicationSpi.java:716)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.onFirstMessage(TcpCommunicationSpi.java:577)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.onMessage(TcpCommunicationSpi.java:626)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi$2.onMessage(TcpCommunicationSpi.java:342)
        at org.apache.ignite.internal.util.nio.GridNioFilterChain$TailFilter.onMessageReceived(GridNioFilterChain.java:279)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridNioCodecFilter.onMessageReceived(GridNioCodecFilter.java:117)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridConnectionBytesVerifyFilter.onMessageReceived(GridConnectionBytesVerifyFilter.java:123)
        at org.apache.ignite.internal.util.nio.GridNioFilterAdapter.proceedMessageReceived(GridNioFilterAdapter.java:109)
        at org.apache.ignite.internal.util.nio.GridNioServer$HeadFilter.onMessageReceived(GridNioServer.java:3062)
        at org.apache.ignite.internal.util.nio.GridNioFilterChain.onMessageReceived(GridNioFilterChain.java:175)
        at org.apache.ignite.internal.util.nio.GridNioServer$DirectNioClientWorker.processRead(GridNioServer.java:1121)
        at org.apache.ignite.internal.util.nio.GridNioServer$AbstractNioClientWorker.processSelectedKeysOptimized(GridNioServer.java:2031)
        ... 4 more
",,agoncharuk,ignitetcbot,rcbose,,,,,,,,,,"agoncharuk commented on pull request #7023: IGNITE-5247 Always use LITTLE_ENDIAN for communication SPI
URL: https://github.com/apache/ignite/pull/7023
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Oct/19 15:16;githubbot;600","asfgit commented on pull request #7023: IGNITE-5247 Always use LITTLE_ENDIAN for communication SPI
URL: https://github.com/apache/ignite/pull/7023
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Nov/19 09:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-1453,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Nov 08 09:51:02 UTC 2019,,,,,,,,,,"0|i3f4en:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/17 18:50;rcbose;I think it is because of Big and Little endian.;;;","29/Oct/19 15:05;agoncharuk;Confirming the issue running a client on x86 and server on zOS.;;;","07/Nov/19 13:40;ignitetcbot;{panel:title=Branch: [pull/7023/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4734879&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","08/Nov/19 09:51;agoncharuk;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Invalid docker repository name in compose file,IGNITE-5240,13072670,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,17/May/17 04:15,14/Jun/17 08:34,14/Jul/23 06:20,14/Jun/17 08:33,,,,,,2.1,,wizards,,,,0,,,,"in docker/compose/docker-compose.yml

Optimize test dependencies end exclude them in build process.",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 14 08:33:52 UTC 2017,,,,,,,,,,"0|i3f3bz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/17 08:29;vsisko;Fixed docker image build scripts. 
Andrey. Please exclude test dependencies from build process.;;;","14/Jun/17 08:33;anovikov;Reviewed. Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite Spark can't be used with Ignite REST,IGNITE-5238,13072547,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,shroman,dmagda,dmagda,16/May/17 18:47,20/May/17 04:21,14/Jul/23 06:20,20/May/17 04:21,2.0,,,,,2.1,,,,,,0,,,,"{{ignite-rest-http}} can't be used together with {{ignite-spark}} because the former imports some legacy version of Jackson library and the following exception is thrown from an IDEA in attempt to use Ignite+Spark application:

{code}
Exception in thread ""main"" java.lang.ExceptionInInitializerError
	at org.apache.spark.SparkContext.withScope(SparkContext.scala:701)
	at org.apache.spark.SparkContext.parallelize(SparkContext.scala:715)
	at org.apache.spark.api.java.JavaSparkContext.parallelizePairs(JavaSparkContext.scala:153)
	at org.apache.spark.api.java.JavaSparkContext.parallelizePairs(JavaSparkContext.scala:158)
	at org.apache.ignite.iot.SparkStreamerStartup.preloadSensorsData(SparkStreamerStartup.java:123)
	at org.apache.ignite.iot.SparkStreamerStartup.main(SparkStreamerStartup.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Incompatible Jackson version: 2.8.8
	at com.fasterxml.jackson.module.scala.JacksonModule$class.setupModule(JacksonModule.scala:64)
	at com.fasterxml.jackson.module.scala.DefaultScalaModule.setupModule(DefaultScalaModule.scala:19)
	at com.fasterxml.jackson.databind.ObjectMapper.registerModule(ObjectMapper.java:745)
	at org.apache.spark.rdd.RDDOperationScope$.<init>(RDDOperationScope.scala:82)
	at org.apache.spark.rdd.RDDOperationScope$.<clinit>(RDDOperationScope.scala)
	... 11 more
{code}

To reproduce:
- Download this project and open in IntellijIdea: https://github.com/dmagda/IgniteSparkIoT
- Go to pom.xml and uncomment {{ignite-rest-http}} module. It has to be imported.
- Start a cluster node with IgniteNodeStartup
- Start SparkStreamerStartup and you will get the error above.

Looks like the Ignite REST module has to be upgraded to the recent Jackson version.",,anovikov,dmagda,githubbot,kuaw26,shroman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat May 20 04:21:52 UTC 2017,,,,,,,,,,"0|i3f2lb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/May/17 06:00;shroman;Spark has the dependency on the following version
{{<fasterxml.jackson.version>2.6.5</fasterxml.jackson.version>}}, which conflicts with what we have in the parent pom.

{code}
[INFO] |  +- org.apache.spark:spark-core_2.11:jar:2.1.0:compile
…
[INFO] |  |  +- (com.fasterxml.jackson.core:jackson-databind:jar:2.6.5:compile - omitted for conflict with 2.8.8)
{code}

I propose to change jackson to 2.6.5 in IGNITE project.

[~kuaw26] I think you upgraded Jackson before and know this part best. Do you think this solution is ok?;;;","19/May/17 06:07;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1973

    IGNITE-5238: Resolved dependency problems of Ignite Spark and Ignite …

    …Rest modules.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-5238

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1973.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1973
    
----

----
;;;","19/May/17 06:12;kuaw26;[~roman_s] Yes, go ahead. But just in case, please, run all tests on TC.;;;","19/May/17 10:55;dmagda;[~roman_s], once you get positive results from TC please assign the ticket to me. I'll check the changes against the example used at conferences.;;;","19/May/17 11:32;shroman;[~dmagda] TC looks good (there are some errors, but I think they are unrelated to this change).
Your IoT example doesn't fail with the error anymore.;;;","19/May/17 19:53;dmagda;[~roman_s], the example still fails with the same error if I move it sources under ""ignite/examples/"" folder and run from here applying your patch. Probably, this is because your patch is not synced up with master and it caused chaos in my local repo. :)

How did you check that example works on your side? Did you make sure it fails before applying the patch? Currently, the project that is in the repository includes a hack - I imported ignite-http-rest directly as a lib (not using maven). You need to go to the project settings and remove all the external libs (not imported by Maven) from there.

Finally, as for TC we need to make sure all Spark suites and Examples suite are green.;;;","20/May/17 00:32;shroman;[~dmagda], yes it failed with the message you described before the fix.
What I did to fix and check it
1. Made changes to 2.1.0-SNAPSHOT as in the pull request
2. _mvn clean install -DskipTests_ the whole Ignite project
3. Uncommented http-rest in pom of the IoT project and changed dependencies from 2.0.0 to 2.1.0-SNAPSHOT.
So it's completely maven.

4. Ran TC, Spark and Examples are green.
;;;","20/May/17 04:20;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1973
;;;","20/May/17 04:21;shroman;Merged to master branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"GridDhtPartitionDemander.requestPartitions invokes sendMessages consequently, which lead to significant increase of node start time on large clusters with ssl",IGNITE-5232,13072391,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,ezhuravl,ezhuravl,16/May/17 10:32,31/May/17 11:01,14/Jul/23 06:20,31/May/17 11:01,,,,,,2.1,,,,,,0,,,,,,ezhuravl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-05-16 10:32:29.0,,,,,,,,,,"0|i3f1n3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Add support for Ignite 2.0 cluster on Queries screen,IGNITE-5231,13072388,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,anovikov,anovikov,16/May/17 10:24,02/Jun/17 07:07,14/Jul/23 06:20,02/Jun/17 07:07,2.0,,,,,2.1,,UI,wizards,,,0,,,,,,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 02 07:07:42 UTC 2017,,,,,,,,,,"0|i3f1mf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/17 04:13;anovikov;Added support for Ignite 2.0 clusters. [~vsisko], please test;;;","17/May/17 08:38;vsisko;Tested. Queries work for Ignite node with version 2.0.;;;","02/Jun/17 07:07;anovikov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StackOverflowError in GridCacheMapEntry#checkOwnerChanged(),IGNITE-5227,13072031,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,mstepachev,agoncharuk,agoncharuk,15/May/17 14:17,20/Aug/19 16:31,14/Jul/23 06:20,01/Aug/19 16:53,1.6,,,,,2.8,,,,,,0,,,,"A simple test reproducing this error:
{code}
    /**
     * @throws Exception if failed.
     */
    public void testBatchUnlock() throws Exception {
       startGrid(0);
       grid(0).createCache(new CacheConfiguration<Integer, Integer>(DEFAULT_CACHE_NAME)
            .setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL));

        try {
            final CountDownLatch releaseLatch = new CountDownLatch(1);

            IgniteInternalFuture<Object> fut = GridTestUtils.runAsync(new Callable<Object>() {
                @Override public Object call() throws Exception {
                    IgniteCache<Object, Object> cache = grid(0).cache(null);

                    Lock lock = cache.lock(""key"");

                    try {
                        lock.lock();

                        releaseLatch.await();
                    }
                    finally {
                        lock.unlock();
                    }

                    return null;
                }
            });

            Map<String, String> putMap = new LinkedHashMap<>();

            putMap.put(""key"", ""trigger"");

            for (int i = 0; i < 10_000; i++)
                putMap.put(""key-"" + i, ""value"");

            IgniteCache<Object, Object> asyncCache = grid(0).cache(null).withAsync();

            asyncCache.putAll(putMap);

            IgniteFuture<Object> resFut = asyncCache.future();

            Thread.sleep(1000);

            releaseLatch.countDown();

            fut.get();

            resFut.get();
        }
        finally {
            stopAllGrids();
        }
{code}
We should replace a recursive call with a simple iteration over the linked list.",,agoncharuk,dpavlov,githubbot,ignitetcbot,ivan.glukos,mcherkasov,mstepachev,,,,,,"ingvard commented on pull request #6736: IGNITE-5227 StackOverflowError in GridCacheMapEntry#checkOwnerChanged…
URL: https://github.com/apache/ignite/pull/6736
 
 
   …(), reduced checkThreadChain calls.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 13:32;githubbot;600","asfgit commented on pull request #6736: IGNITE-5227 StackOverflowError in GridCacheMapEntry#checkOwnerChanged…
URL: https://github.com/apache/ignite/pull/6736
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:55;githubbot;600","dspavlov commented on issue #1967: IGNITE-5227: StackOverflowError in GridCacheMapEntry#checkOwnerChanged()
URL: https://github.com/apache/ignite/pull/1967#issuecomment-517474198
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600","dspavlov commented on pull request #1967: IGNITE-5227: StackOverflowError in GridCacheMapEntry#checkOwnerChanged()
URL: https://github.com/apache/ignite/pull/1967
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600",,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-12087,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 20 16:31:45 UTC 2019,,,,,,,,,,"0|i3ezfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/17 17:34;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/1967

    IGNITE-5227: StackOverflowError in GridCacheMapEntry#checkOwnerChanged()

    StackOverflowError occurs due recursion in methods:
    GridCacheMapEntry.checkOwnerChanged -> GridDistributedCacheEntry.checkThreadChain -> GridDistributedCacheEntry.recheck -> GridCacheMapEntry.checkOwnerChanged
    
    I broke this cycle by introducing ""checkCandidateChain"" flag in GridCacheMapEntry.checkOwnerChanged method, which allow to miss GridDistributedCacheEntry.checkThreadChain. 
    The check fo the whole candidate chain is moved to GridDistributedCacheEntry.checkThreadChain method, as you can see there  already was cycle for this, I've just removed break(put it in else branch in case we don't have any kes for lock candidates).

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mcherkasov/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1967.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1967
    
----
commit fbe059e8003b04568a39a3cfb604a248928d1f6f
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-05-17T17:12:14Z

    IGNITE-5227: StackOverflowError in GridCacheMapEntry#checkOwnerChanged()

----
;;;","18/May/17 18:10;githubbot;GitHub user mcherkasov opened a pull request:

    https://github.com/apache/ignite/pull/1972

    ignore. PR for test on TC(IGNITE-5227)

    ignore. PR for test on TC(IGNITE-5227)

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/mcherkasov/ignite ignite-2.0

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1972.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1972
    
----
commit ff250302ee616379f044866ba93cef0b13a06df0
Author: mcherkasov <mcherkasov@gridgain.com>
Date:   2017-05-17T17:12:14Z

    IGNITE-5227: StackOverflowError in GridCacheMapEntry#checkOwnerChanged()

----
;;;","30/May/17 10:53;githubbot;Github user mcherkasov closed the pull request at:

    https://github.com/apache/ignite/pull/1972
;;;","31/Jul/19 13:36;mstepachev;https://github.com/apache/ignite/pull/6736/files;;;","31/Jul/19 13:37;mstepachev;[~ivan.glukos] Please, make code review.;;;","01/Aug/19 07:51;ignitetcbot;{panel:title=Branch: [pull/6736/head] Base: [master] : Possible Blockers (1)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}PDS (Indexing){color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=4438275]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4438310&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","01/Aug/19 09:49;ignitetcbot;{panel:title=Branch: [pull/6736/head] Base: [master] : No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=4438310&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","01/Aug/19 16:53;ivan.glukos;[~mstepachev], thanks, merged to master.;;;","20/Aug/19 16:31;dpavlov;Folks, why do you resolve the ticket without fix version? Some day it becomes a pain in the neck for release manager to find out where the fix is.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpCommunicationSpi.createTcpClient can cause OOME.,IGNITE-5225,13072002,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,15/May/17 13:08,08/Nov/17 14:26,14/Jul/23 06:20,16/May/17 09:35,2.0,,,,,2.1,,general,,,,0,,,,"TcpCommunicationSpi.filterReachable method doesn't shutdown executor correctly that causes OOME.
Possible reason is that user uses host name that can't be resolved somewhere in configuration.

Caused by: class org.apache.ignite.spi.IgniteSpiException: Failed to send message to remote node: TcpDiscoveryNode [id=edcb71b0-bd61-455a-8742-ade1653b0701, addrs=[0:0:0:0:0:0:0:1%lo, 10.162.115.12, 127.0.
0.1], sockAddrs=[0:0:0:0:0:0:0:1%lo:0, /127.0.0.1:0, mydomain.com/10.162.115.12:0], discPort=0, order=25, intOrder=25, lastExchangeTime=1494183620982, loc=false, ver=,
 isClient=true]
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage0(TcpCommunicationSpi.java:2368)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage(TcpCommunicationSpi.java:2304)
        at org.apache.ignite.internal.managers.communication.GridIoManager.send(GridIoManager.java:1283)
        ... 34 more
Caused by: class org.apache.ignite.IgniteCheckedException: java.lang.NullPointerException
        at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7228)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:170)
        at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:119)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.reserveClient(TcpCommunicationSpi.java:2515)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.sendMessage0(TcpCommunicationSpi.java:2340)
        ... 36 more
Caused by: java.util.concurrent.ExecutionException: java.lang.NullPointerException
        at java.util.concurrent.FutureTask.report(FutureTask.java:122)
        at java.util.concurrent.FutureTask.get(FutureTask.java:192)
        at org.apache.ignite.internal.util.IgniteUtils.filterReachable(IgniteUtils.java:1884)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createTcpClient(TcpCommunicationSpi.java:2775)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.createNioClient(TcpCommunicationSpi.java:2587)
        at org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi.reserveClient(TcpCommunicationSpi.java:2479)
        ... 37 more
Caused by: java.lang.NullPointerException
        at org.apache.ignite.internal.util.IgniteUtils.reachable(IgniteUtils.java:2091)
        at org.apache.ignite.internal.util.IgniteUtils$18.run(IgniteUtils.java:1873)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 16 09:44:45 UTC 2017,,,,,,,,,,"0|i3ez8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/May/17 14:46;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1942

    IGNITE-5225: Fixed thread pools incorrect shutdown.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5225

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1942.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1942
    
----
commit 66cef22366a8129f54a4839792a4b24e8014c00c
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-05-15T14:39:52Z

    IGNITE-5225: Fixed thread pools incorrect shutdown.

----
;;;","15/May/17 17:09;amashenkov;Looks like it is cause by IGNITE-4577 changes.;;;","16/May/17 09:44;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1942
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow use local binary metadata cache if it's possible,IGNITE-5223,13071989,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,15/May/17 12:31,23/May/17 13:43,14/Jul/23 06:20,23/May/17 13:43,1.9,,,,,1.9,,,,,,0,,,,"Add system property that will use local binary metadata cache instead of distributed one, when all classes available on all nodes and don't change.",,dkarachentsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-05-15 12:31:34.0,,,,,,,,,,"0|i3ez5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException with enable DEBUG log level,IGNITE-5214,13071923,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,ntikhonov,ntikhonov,15/May/17 08:49,02/Jun/20 16:15,14/Jul/23 06:20,02/Jun/20 16:15,2.0,,,,,2.9,,,,,,0,,,,"ConcurrentModificationException with 
org.apache.ignite.continuous.query=DEBUG
{noformat}
Unexpected exception during cache update 
java.util.ConcurrentModificationException: null
	at java.util.TreeMap$PrivateEntryIterator.nextEntry(TreeMap.java:1211)
	at java.util.TreeMap$EntryIterator.next(TreeMap.java:1247)
	at java.util.TreeMap$EntryIterator.next(TreeMap.java:1242)
	at java.util.AbstractMap.toString(AbstractMap.java:554)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler$PartitionRecovery.collectEntries(CacheContinuousQueryHandler.java:1132)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.handleEvent(CacheContinuousQueryHandler.java:739)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.onEntryUpdate(CacheContinuousQueryHandler.java:792)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.access$800(CacheContinuousQueryHandler.java:91)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler$1.onEntryUpdated(CacheContinuousQueryHandler.java:419)
	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryManager.onEntryUpdated(CacheContinuousQueryManager.java:347)
	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:2669)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateSingle(GridDhtAtomicCache.java:2390)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal0(GridDhtAtomicCache.java:1792)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAllAsyncInternal(GridDhtAtomicCache.java:1632)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.mapSingle(GridNearAtomicAbstractUpdateFuture.java:263)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.map(GridNearAtomicSingleUpdateFuture.java:494)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.mapOnTopology(GridNearAtomicSingleUpdateFuture.java:436)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicAbstractUpdateFuture.map(GridNearAtomicAbstractUpdateFuture.java:208)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$23.apply(GridDhtAtomicCache.java:1152)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$23.apply(GridDhtAtomicCache.java:1150)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.asyncOp(GridDhtAtomicCache.java:847)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.updateAsync0(GridDhtAtomicCache.java:1150)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putAsync0(GridDhtAtomicCache.java:619)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.putAsync(GridCacheAdapter.java:2574)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putIfAbsentAsync(GridDhtAtomicCache.java:664)
	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.putIfAbsent(GridDhtAtomicCache.java:657)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.putIfAbsent(IgniteCacheProxy.java:1451)
	at com.workday.fabric.ignite.management.IgniteManagementService.doExecute(IgniteManagementService.java:174)
	at com.workday.fabric.ignite.service.AbstractIgniteService.execute(AbstractIgniteService.java:94)
	at org.apache.ignite.internal.processors.service.GridServiceProcessor$3.run(GridServiceProcessor.java:1157)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,akorensh,ignitetcbot,ilyak,ntikhonov,,,,,,,,,"alamar opened a new pull request #7874:
URL: https://github.com/apache/ignite/pull/7874


   Thank you for submitting the pull request to the Apache Ignite.
   
   In order to streamline the review of the contribution 
   we ask you to ensure the following steps have been taken:
   
   ### The Contribution Checklist
   - [ ] There is a single JIRA ticket related to the pull request. 
   - [ ] The web-link to the pull request is attached to the JIRA ticket.
   - [ ] The JIRA ticket has the _Patch Available_ state.
   - [ ] The pull request body describes changes that have been made. 
   The description explains _WHAT_ and _WHY_ was made instead of _HOW_.
   - [ ] The pull request title is treated as the final commit message. 
   The following pattern must be used: `IGNITE-12407: Add Cluster API support to Java thin client`
   - [ ] A reviewer has been mentioned through the JIRA comments 
   (see [the Maintainers list](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute#HowtoContribute-ReviewProcessandMaintainers)) 
   - [ ] The pull request has been checked by the Teamcity Bot and 
   the `green visa` attached to the JIRA ticket (see [TC.Bot: Check PR](https://mtcga.gridgain.com/prs.html))
   
   ### Notes
   - [How to Contribute](https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute)
   - [Coding abbreviation rules](https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules)
   - [Coding Guidelines](https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines)
   - [Apache Ignite Teamcity Bot](https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+Teamcity+Bot)
   
   If you need any help, please email dev@ignite.apache.org or ask anу advice on http://asf.slack.com _#ignite_ channel.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/20 15:54;githubbot;600","asfgit closed pull request #7874:
URL: https://github.com/apache/ignite/pull/7874


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/20 16:14;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/May/17 08:56;ntikhonov;IGNITE_5214.patch;https://issues.apache.org/jira/secure/attachment/12868034/IGNITE_5214.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 02 16:15:29 UTC 2020,,,,,,,,,,"0|i3eyrb:",9223372036854775807,Fixed ConcurrentModificationException when DEBUG logging continuous queries.,,,,,,,,,,,,,,,,,,,,"01/Jun/20 18:23;ignitetcbot;{panel:title=Branch: [pull/7874/head] Base: [master] : Possible Blockers (1)|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}Cache 6{color} [[tests 0 Exit Code |https://ci.ignite.apache.org/viewLog.html?buildId=5354906]]

{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=5348846&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","01/Jun/20 18:25;ilyak;[~akorensh] please review proposed fix.;;;","02/Jun/20 14:48;akorensh;[~ilyak] Fix looks good!;;;","02/Jun/20 16:15;ilyak;Thank you [~akorensh], the fix is merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Reflective serializer fails on custom dictionaries ,IGNITE-5213,13071922,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,15/May/17 08:48,15/May/17 10:15,14/Jul/23 06:20,15/May/17 10:15,2.0,,,,,2.1,,platforms,,,,0,.NET,,,"See {{BinaryReflectiveActions:489}}. All types that implement {{IDictionary}} and are not generic are written as {{Hashtable}}, which is not correct, since type information is lost. Deserialization fails with {{InvalidCastException}}.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 15 10:15:24 UTC 2017,,,,,,,,,,"0|i3eyr3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/May/17 10:15;ptupitsyn;Fixed in master: only {{ICollection}}, {{ArrayList}}, {{IDictionary}}, {{Hashtable}} fields are now written in Java format, all other fields are written as objects.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allow custom affinity for system caches,IGNITE-5212,13071672,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,v.pyatkov,ascherbakov,ascherbakov,12/May/17 20:53,23/May/17 12:35,14/Jul/23 06:20,23/May/17 12:35,,,,,,2.1,,,,,,0,newbie,,,"Currently there is no option to specify affinity function atomics system cache, which may be not appropriate in custom data placement scenarios.

Suggestion: allow setting custom affinity for AtomicConfiguration",,ascherbakov,sboikov,v.pyatkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 23 12:35:14 UTC 2017,,,,,,,,,,"0|i3ex7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/17 14:58;v.pyatkov;This is my PR: https://github.com/apache/ignite/pull/1964
[~sboikov], please look at this change.

I have added possibility to set custom affinity function through {{AtomicConfiguration#setAffinity}}.;;;","23/May/17 12:35;sboikov;Thanks Vladislav, reviewed changes and merged into master (f353faf1be5f26cf4ea069d13a9194bcf18840bb).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If enabled security authentication, server is unable to restart if client tries to reconnect",IGNITE-5210,13071530,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,12/May/17 13:14,31/May/17 12:41,14/Jul/23 06:20,31/May/17 12:41,2.0,,,,,2.1,,general,,,,0,,,,"Steps to reproduce:
# Configure security authentication.
# Start server node.
# Start client node.
# Restart server node.
# Server fails with ClassCastException

{noformat}
java.lang.ClassCastException: org.apache.ignite.plugin.security.SecurityCredentials cannot be cast to [B
	at org.apache.ignite.spi.discovery.tcp.ServerImpl.unmarshalCredentials(ServerImpl.java:1316)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl.access$2500(ServerImpl.java:168)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processJoinRequestMessage(ServerImpl.java:3362)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2573)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2393)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:6491)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2479)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{noformat}",,dkarachentsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-05-12 13:14:19.0,,,,,,,,,,"0|i3ewbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Segfault on Put,IGNITE-5208,13071466,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,isapego,tghosgor,tghosgor,12/May/17 08:12,02/Jun/17 19:42,14/Jul/23 06:20,17/May/17 09:39,2.0,,,,,2.1,,platforms,,,,1,c++,cpp,,"The following segfault happens when:
  - using multiple caches (suffixed with number as in X_\{number\}),
  - caches contain same type of object but not the same objects,
  - doing multithreaded `::Put` operation, only one put is done on each cache concurrently, independent caches (X_1, X_2, ...) can be operated on and called `::Put` on concurrently, but that should not be relevant as cache api is thread safe.

{code:none}
C  [test+0xf8116a]  std::less<int>::operator()(int const&, int const&) const+0x14
C  [test+0x1106305]  std::_Rb_tree<int, std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> >, std::_Select1st<std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> > >, std::less<int>, std::allocator<std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> > >*, std::_Rb_tree_node_base*, int const&)+0x41
C  [test+0x1105a9d]  std::_Rb_tree<int, std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> >, std::_Select1st<std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> > >, std::less<int>, std::allocator<std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> > > >::find(int const&)+0x45
C  [test+0x1104e7f]  std::map<int, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot>, std::less<int>, std::allocator<std::pair<int const, ignite::common::concurrent::SharedPointer<ignite::impl::binary::BinaryTypeSnapshot> > > >::find(int const&)+0x23
C  [test+0x1104031]  ignite::impl::binary::BinaryTypeManager::GetHandler(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x6f
C  [test+0xe6de2d]  void ignite::impl::binary::BinaryWriterImpl::WriteTopObject<std::shared_ptr<test::data> >(std::shared_ptr<test::data> const&)+0xbb
C  [test+0xe6cd48]  ignite::impl::In2Operation<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<test::data> >::ProcessInput(ignite::impl::binary::BinaryWriterImpl&)+0x3e
C  [test+0x1128cf1]  ignite::impl::interop::InteropTarget::WriteTo(ignite::impl::interop::InteropMemory*, ignite::impl::InputOperation&, ignite::IgniteError&)+0xa9
C  [test+0x1128f67]  ignite::impl::interop::InteropTarget::OutOp(int, ignite::impl::InputOperation&, ignite::IgniteError&)+0x65
C  [test+0x1125f41]  ignite::impl::cache::CacheImpl::Put(ignite::impl::InputOperation&, ignite::IgniteError&)+0x2d
C  [test+0xe5539a]  ignite::cache::Cache<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<test::data> >::Put(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<test::data> const&, ignite::IgniteError&)+0x52
{code}

There seems to be some kind of race situation:
{code:none}
0x0000000001381206 in std::less<int>::operator() (this=0x1a4e4b0, __x=<error reading variable>, __y=@0x7fff80846e04: 2066246303) at /usr/include/c++/6.3.1/bits/stl_function.h:386
{code}
{code:none}
#4  0x00000000015040cd in ignite::impl::binary::BinaryTypeManager::GetHandler (this=0x1a560d0, typeName=""test.data"", typeId=2066246303) at src/impl/binary/binary_type_manager.cpp:56
56                          std::map<int32_t, SPSnap>::iterator it = snapshots0.find(typeId);
(gdb) print snapshots0
$10 = std::map with 42286576 elements = {[42312864] = {ptr = 0x285a4a0, impl = 0x0}<error reading variable: Cannot access memory at address 0x110>...}
(gdb) print snapshot
$11 = {ptr = 0x7fffffffda4f, impl = 0x11}
{code}

`impl` pointers seems to be corrupted on multiple places.",,githubbot,isapego,ptupitsyn,tghosgor,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 17 09:39:46 UTC 2017,,,,,,,,,,"0|i3evxr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/17 10:57;tghosgor;Note that if this crash does not happen initially and the program survives for some time, it does not seem to happen later.;;;","15/May/17 15:11;isapego;The issue seems to be caused by concurrent {{map}} access in {{BinaryTypeManager}}, not with the {{SharedPointer}} class. This also explains why crash only happens in the beginning - once all type metadata is in cache there no more concurrent changing of that {{map}} object. Working on resolving the issue.;;;","15/May/17 15:54;tghosgor;This seemed to solve it for me:
{code:none}
diff -Naur ""/tmp/apache-ignite-2.0.0 (original)/binary/src/impl/binary/binary_type_manager.cpp"" /tmp/apache-ignite-2.0.0/binary/src/impl/binary/binary_type_manager.cpp
--- ""/tmp/apache-ignite-2.0.0 (original)/binary/src/impl/binary/binary_type_manager.cpp""	2017-04-30 12:27:20.000000000 +0300
+++ /tmp/apache-ignite-2.0.0/binary/src/impl/binary/binary_type_manager.cpp	2017-05-15 14:57:14.000000000 +0300
@@ -48,11 +48,11 @@
 
             SharedPointer<BinaryTypeHandler> BinaryTypeManager::GetHandler(const std::string& typeName, int32_t typeId)
             {
-                std::map<int32_t, SPSnap>& snapshots0 = *snapshots.Get();
-
                 { // Locking scope.
                     CsLockGuard guard(cs);
 
+                    std::map<int32_t, SPSnap>& snapshots0 = *snapshots.Get();
+
                     std::map<int32_t, SPSnap>::iterator it = snapshots0.find(typeId);
                     if (it != snapshots0.end())
                         return SharedPointer<BinaryTypeHandler>(new BinaryTypeHandler(it->second));
@@ -65,7 +65,7 @@
 
             void BinaryTypeManager::SubmitHandler(BinaryTypeHandler& hnd)
             {
-                // If this is the very first write of a class or difference exists, 
+                // If this is the very first write of a class or difference exists,
                 // we need to enqueue it for write.
                 if (hnd.HasUpdate())
                 {
@@ -152,6 +152,8 @@
 
             SPSnap BinaryTypeManager::GetMeta(int32_t typeId)
             {
+                CsLockGuard guard(cs);
+
                 std::map<int32_t, SPSnap>::iterator it = snapshots.Get()->find(typeId);
 
                 if (it != snapshots.Get()->end() && it->second.Get())
@@ -175,4 +177,4 @@
             }
         }
     }
-}
\ No newline at end of file
+}
{code}

The problem was that shared pointer's data was deleted whilst a reference to it was obtained outside the lock. Converting the reference to an actual copy of shared pointer can also solve the issue but in my tests lock seems to protect the shared pointer anyway so far.

I am not sure about the lock I added in `GetMeta` is really needed though.;;;","15/May/17 16:14;isapego;[~tghosgor], thank you for report and for your help. I'm going to submit patch in few hours and hopefully it's going to be in master in few days. Your patch looks correct - you may use it as a fix for now.;;;","15/May/17 16:29;tghosgor;[~isapego] Thanks for the verification. It has survived multiple runs of UTs so far, we will be continuing with this patch then. ;;;","16/May/17 11:57;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1953

    IGNITE-5208: Fixed sigfault on concurrent map access.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5208

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1953.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1953
    
----
commit 1cdd7926c92a552ef434326aa6bd0f785949e363
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-05-16T11:55:43Z

    IGNITE-5208: Fixed sigfault on concurrent map access

----
;;;","16/May/17 13:10;isapego;Ready for review. [~ptupitsyn], please, take a look.;;;","16/May/17 14:00;ptupitsyn;[~isapego] looks good to me.;;;","17/May/17 09:38;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1953
;;;","17/May/17 09:39;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Non-Int32 enums can't be serialized,IGNITE-5207,13071455,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,12/May/17 07:47,15/May/17 07:42,14/Jul/23 06:20,12/May/17 11:24,2.0,,,,,2.1,,platforms,,,,0,.NET,,,"There is no way to serialize non-Int32 enums. 

Enums in .NET can be {{byte}}, {{sbyte}}, {{short}}, {{ushort}}, {{int}}, {{uint}}, {{long}}, {{ulong}} (see https://docs.microsoft.com/en-us/dotnet/articles/csharp/language-reference/keywords/enum).

We should write all of these except {{long}} and {{ulong}} properly (converting them to int and back).
{{long}} and {{ulong}} enums should be written as object.",,githubbot,ptupitsyn,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 15 07:40:52 UTC 2017,,,,,,,,,,"0|i3evvb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/17 09:55;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1933

    IGNITE-5207 .NET: Support non-Int32 enums

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5207

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1933.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1933
    
----
commit 79520ac9d6da1decebbe3a0e31abe48fc4c064b1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T08:18:35Z

    IGNITE-5207 .NET: Non-Int32 enums can't be serialized

commit 6279507ec929f1dd7ba938e2383766451253ab7b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T08:21:38Z

    failing test added

commit 79862815a2e2fada95a12caac138f604f32ac126
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T08:27:25Z

    Easy fix implemented

commit b4ee2ea5faae143266693d27993cb36c03b15f20
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T08:42:37Z

    wip tests

commit 1d14404a6b8cde039a5607fdc275bae5536aebd8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T08:48:21Z

    wip tests

commit 244d6540f2bfdc8b8224aa63a1c2b4edfca05a11
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T08:50:08Z

    wip

commit c29bf478d66da332fe6e00353c63239fab443149
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:00:53Z

    wip

commit 12a9775fb70693fcd793b3eed028a5eee440dde8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:07:55Z

    wip

commit 88f1d6e59d5e4d153d4c2c66e5a98e177dbfece7
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:30:24Z

    Refactor binary writers

commit a7b77be9ec56da3d627c9986daf7473a75b2c2a6
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:34:02Z

    wip

commit 544e07d941d3321d6c431d08247df248dbf85003
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:50:39Z

    wip

commit f6fc06c3d4092a3e77ece5f8ce64e46a12d9970a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:52:49Z

    wip

commit dffe685e28ce9e3a9de21e752489bdec97c760fd
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-12T09:53:50Z

    Enum handling done

----
;;;","12/May/17 10:57;ptupitsyn;Fixed in master: 4b2b68434bf4560cb71485b93f366126730d59a7;;;","12/May/17 10:57;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1933
;;;","15/May/17 06:45;vozerov;[~ptupitsyn], could you please clarify how this was fixed? Did it require any changes to the protocol?;;;","15/May/17 07:40;ptupitsyn;[~vozerov] no changes to the protocol.
* Enums can be {{byte}}, {{sbyte}}, {{short}}, {{ushort}}, {{int}}, {{uint}}, {{long}}, {{ulong}}.
* In 2.0 there is an exception for any non-{{int}} enum.
* After this fix all enums that fit into 4 bytes are written in Ignite format. {{long}} and {{ulong}} enums are written as regular objects with a single field (via reflective serializer).
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The Unicode character in the value of a field which are included in an un-unique index will cause ""stack overhead"" exception",IGNITE-5204,13071151,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,skalashnikov,walaqi@sohu.com,walaqi@sohu.com,11/May/17 12:41,11/Jul/17 09:28,14/Jul/23 06:20,07/Jul/17 12:55,2.0,,,,,2.1,,cache,sql,,,0,,,,"When put  ""草DX009090"" as the value of BillId, which is a field of entity Bill. If I define a index includes the BillId, and execute the query like ""select * from Bill where BillId=’草DX009090‘ in the H2 debug console, there throws an exception by the H2 with a code 5000. 
another scenario is, I have two entities, ""Bill"" and ""Detail"", both have field ""BillId"". If either of them have value like ""草DX009090"" and execute the query like ""select bill.* from bill left join detail on bill.billid=detail.billid"", the whole ignite cache node will halt ( suppose there should be an stack overhead exception, dead loop).
======================
I think the issue should relate to hash computing on the unicode character.","windows server 2012, JDK 1.8, X64",dmagda,githubbot,skalashnikov,vozerov,walaqi@sohu.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jun/17 18:52;skalashnikov;IgniteSqlIssue5204Test.java;https://issues.apache.org/jira/secure/attachment/12872121/IgniteSqlIssue5204Test.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 11 09:28:56 UTC 2017,,,,,,,,,,"0|i3etzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/17 21:50;dmagda;[~vozerov], [~sergi.vladykin], please look in here.;;;","22/May/17 03:26;walaqi@sohu.com;Dears,
Would you have any plan on the issue IGNITE-5204? so far it present us from upgrading the current 1.9 to 2.0 in prod.

Thanks,;;;","24/May/17 11:32;vozerov;[~walaqi@sohu.com], we will look at the problem in the nearest time.;;;","25/May/17 11:49;skalashnikov;[~walaqi@sohu.com],
Have you really tried to run these queries via proper Ignite SQL API? 
Why do you use H2 Debug console to run queries?

I made an automatic test using your description of the issue. The test uses Ignite cache query API.
With this automatic test, I have not managed to reproduce the problem. 

I was only able to reproduce the first issue manually with the help of H2 debug console connected to the Ignite client node.
The root cause of the issue is that for client node some internals of index are not initialized (intentionally). 
This can only be a problem if you use H2 Debug console to run queries.
In fact, for the query to be run properly, it must go through Ignite query API.
;;;","26/May/17 05:00;walaqi@sohu.com;I do execute the SQL query via the SqlFieldQuery provided in .NET ignite api and it is continuously hanging when indexed field have Chinese character in its value. Did your automatically testing is based on .net api? or is there any possibility that the .net api have same behavior like H2 debug console?
;;;","26/May/17 14:23;skalashnikov;[~walaqi@sohu.com],
Thank you. This is valueable info. I did not know you use .NET API.
I rewrote my test for .NET. However, the issue is not reproduced for me. 
Some configuration details might be missing then.
Is it possible that you share your cache configuration?

Here is my .NET test (I have modified one of .NET examples for that purpose)
{code}
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Apache.Ignite.Examples.Datagrid
{
    using System;
    using System.Text;
    using Apache.Ignite.Core;
    using Apache.Ignite.Core.Cache;
    using Apache.Ignite.Core.Cache.Configuration;
    using Apache.Ignite.Core.Cache.Query;
    using Apache.Ignite.ExamplesDll.Binary;

    /// <summary>
    /// This example showcases DML capabilities of Ignite's SQL engine.
    /// <para />
    /// 1) Build the project Apache.Ignite.ExamplesDll (select it -> right-click -> Build).
    ///    Apache.Ignite.ExamplesDll.dll must appear in %IGNITE_HOME%/platforms/dotnet/examples/Apache.Ignite.ExamplesDll/bin/${Platform]/${Configuration} folder.
    /// 2) Set this class as startup object (Apache.Ignite.Examples project -> right-click -> Properties ->
    ///     Application -> Startup object);
    /// 3) Start example (F5 or Ctrl+F5).
    /// <para />
    /// This example can be run with standalone Apache Ignite.NET node:
    /// 1) Run %IGNITE_HOME%/platforms/dotnet/bin/Apache.Ignite.exe:
    /// Apache.Ignite.exe -configFileName=platforms\dotnet\examples\apache.ignite.examples\app.config -assembly=[path_to_Apache.Ignite.ExamplesDll.dll]
    /// 2) Start example.
    /// </summary>
    public class Ignite5204Example
    {
        private const string BillCacheName = ""bill_cache"";

        public class Bill
        {
            [QuerySqlField(IsIndexed = true)]
            public string BillId { get; set; }
        }

        public class Detail
        {
            [QuerySqlField(IsIndexed = true)]
            public string BillId { get; set; }
        }

        [STAThread]
        public static void Main()
        {
            using (var ignite = Ignition.StartFromApplicationConfiguration())
            {
                Console.WriteLine();
                Console.WriteLine("">>> Example started."");

                var billCache = ignite.GetOrCreateCache<string, Bill>(
                    new CacheConfiguration(BillCacheName, 
                        new QueryEntity(typeof(string), typeof(Bill)),
                        new QueryEntity(typeof(string), typeof(Detail)) ));

                billCache.Clear();

                Insert(billCache);
                Select(billCache, ""Test"");

                Console.WriteLine();
            }

            Console.WriteLine();
            Console.WriteLine("">>> Example finished, press any key to exit ..."");
            Console.ReadKey();
        }

        private static void Select(ICache<string, Bill> billCache, string message)
        {
            Console.WriteLine(""\n>>> {0}"", message);

            var qry = new SqlFieldsQuery(""select * from Bill where BillId = '草DX009090'"");

            using (var cursor = billCache.QueryFields(qry))
            {
                foreach (var row in cursor)
                {
                    Console.WriteLine("">>> {0}"", row[0]);
                }
            }
            
            qry = new SqlFieldsQuery(""select bill.*from bill left join detail on bill.billid = detail.billid"");
            
            using (var cursor = billCache.QueryFields(qry))
            {
                foreach (var row in cursor)
                {
                    Console.WriteLine("">>> {0}"", row[0]);
                }
            }
        }

        private static void Insert(ICache<string, Bill> billCache)
        {
            var qry = new SqlFieldsQuery(""insert into Bill (_key, BillId) values (?, ?)"");

            qry.Arguments = new object[] {""Bill_1"", ""DX0000000""};
            billCache.QueryFields(qry);

            qry.Arguments = new object[] {""Bill_2"", ""草DX009090"" };
            billCache.QueryFields(qry);

            qry = new SqlFieldsQuery(""insert into Detail (_key, BillId) values (?, ?)"");

            qry.Arguments = new object[] {""Detail_1"", ""DX0000000""};
            billCache.QueryFields(qry);

            qry.Arguments = new object[] {""Detail_2"", ""草DX009090""};
            billCache.QueryFields(qry);
        }
    }
}
{code};;;","08/Jun/17 10:15;walaqi@sohu.com;Dear,
I found the things that might reproduce the problem. in the class ""org.apache.ignite.internal.processors.query.h2.database.InlineIndexHelper"" line 444:
""size = (short)(s.length | 0x8000);""
when the ""s"" is null, the logic will cause exception (NullReferenceException) cause problem when querying on the cache.
case Value.STRING_IGNORECASE: {
                short size;

                byte[] s = val.getString().getBytes(CHARSET);
                if (s.length + 3 <= maxSize)
                    size = (short)s.length;
                else {
                    s = trimUTF8(s, maxSize - 3);
                    size = (short)(s.length | 0x8000);
                }

                if (s == null) {
                    // Can't fit anything to
                    PageUtils.putByte(pageAddr, off, (byte)Value.UNKNOWN);
                    return 0;
                }
                else {
                    PageUtils.putByte(pageAddr, off, (byte)val.getType());
                    PageUtils.putShort(pageAddr, off + 1, size);
                    PageUtils.putBytes(pageAddr, off + 3, s);
                    return s.length + 3;
                }
            };;;","08/Jun/17 15:59;dmagda;[~sergi.vladykin], [~vozerov], [~al.psc], please have a look.;;;","08/Jun/17 18:52;skalashnikov;Reproduced with attached java test. 
Just added 'ccfg.setSqlIndexMaxInlineSize(4)' line to my initial java test.;;;","09/Jun/17 13:33;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/2115

    IGNITE-5204: Fixed NPE on certain data with index inlining

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5204

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2115.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2115
    
----
commit 62aa323162ee7d195574b771c47dfb8bbc5ed58d
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-06-09T13:31:48Z

    IGNITE-5204: Fixed NPE on certain data with index inlining

----
;;;","07/Jul/17 12:26;vozerov;[~agoncharuk], could you please take a look at the patch?;;;","07/Jul/17 12:27;vozerov;Is it fine that UTF8 converting method may return null?;;;","11/Jul/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2115
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC driver should support BLOB fields,IGNITE-5203,13071130,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,11/May/17 10:46,21/Jun/17 11:14,14/Jul/23 06:20,29/May/17 21:35,2.0,,,,,2.1,,jdbc,,,,0,,,,"JDBD driver doesn't support BLOB fields. Need to implement BLOBs, at least simple byte array based implementation.

",,agura,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 29 21:35:19 UTC 2017,,,,,,,,,,"0|i3etv3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/May/17 16:58;agura;Implemented. Please review.
https://github.com/apache/ignite/pull/1971;;;","19/May/17 08:02;vozerov;[~agura], [~vkulichenko], could you please briefly describe the design? Is it about passing byte arrays back and forth in streaming fashion through JDBC driver?  I am trying to understand how it could affect development of the new JDBC driver.;;;","19/May/17 08:03;vozerov;Also as far as I see, PR is created to some old Ignite version. Can we have a PR to master?;;;","19/May/17 14:01;agura;Vladimir,

in current design BLOB is just a wrapper for byte array that can be stored as field of some object. Only simplest operations are supported. It is mostly designed for reading data from byte arrays. {{ResultSet.getBlob()}} method just delegates call to {{ResultSet.getBytes()}} method. {{ResultSet.updateBlob()}} and {{PreparedStatement.setBlob()}} methods are not supported yet.;;;","22/May/17 12:50;agura;PR based on master branch created
https://github.com/apache/ignite/pull/1984;;;","23/May/17 14:25;vkulichenko;[~agura], here are my comments:
* Do we also need to implement {{Connection.createBlob}} and {{PreparedStatement.setBlob}} methods?
* {{U.systemCopy}} should be used instead of {{System.arrayCopy}}. It utilizes unsafe where possible.
* Unsupported methods should throw {{SQLFeatureNotSupportedException}}, not {{UnsupportedOperationException}}.;;;","23/May/17 18:10;agura;[~vkulichenko] Thanks for comments. Fixed. PR updated.;;;","29/May/17 10:42;vkulichenko;Looks good now.;;;","29/May/17 21:35;agura;Merged.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default mem policy name is not changed after setting defaultMemoryPolicyName property,IGNITE-5202,13071117,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,krybakova,krybakova,krybakova,11/May/17 10:19,30/Jun/17 07:11,14/Jul/23 06:20,30/Jun/17 07:11,2.0,,,,,2.1,,,,,,0,,,,"Default mem policy name is not changed after setting defaultMemoryPolicyName property.

Config:
{noformat}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"">
<import resource=""ignite-base-load-config.xml""/>
<bean id=""grid.cfg"" class=""org.apache.ignite.configuration.IgniteConfiguration"" parent=""base-ignite.cfg"">
<property name=""cacheConfiguration"">
  <list>
    <ref bean=""atomic-part"" />
    ...
  </list>
</property>
<property name=""memoryConfiguration"">
  <bean class=""org.apache.ignite.configuration.MemoryConfiguration"" parent=""base-mem.cfg"">
    <property name=""defaultMemoryPolicyName"" value=""default2""/>
    <property name=""SystemCacheInitialSize"" value=""#{50L * 1024 * 1024}""/>
  </bean>
</property>

</bean>
</beans>
{noformat}

{noformat}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"">
    <bean id=""base-ignite.cfg"" class=""org.apache.ignite.configuration.IgniteConfiguration"" abstract=""true"">
    ...
    </bean>

    <bean name=""base-mem.cfg"" class=""org.apache.ignite.configuration.MemoryConfiguration"" abstract=""true"">
       ...
       <property name=""memoryPolicies"">
           <list>
               ...
               <bean class=""org.apache.ignite.configuration.MemoryPolicyConfiguration"">
                   <property name=""name"" value=""default2""/>
               </bean>
         </list>
     </property>
   </bean>

   <bean name=""atomic-part"" class=""org.apache.ignite.configuration.CacheConfiguration"">
        <property name=""name"" value=""atomic-part""/>
        <property name=""cacheMode"" value=""PARTITIONED""/>
        <property name=""atomicityMode"" value=""ATOMIC""/>
    </bean>
   ...
</beans>
{noformat}

According to this config default memory policy should be ""default2"", but it remains ""default"" (while SystemCacheInitialSize was changed successfully to 50Mb as it's set in config). 

{noformat}
[12:48:12,226][INFO ][main][IgniteKernal] System cache's MemoryPolicy size is configured to 50 MB. Use MemoryConfiguration.systemCacheMemorySize property to change the setting.
[12:48:12,226][INFO ][main][IgniteKernal] Configured caches [in 'default' memoryPolicy: ['ignite-sys-cache', 'ignite-atomics-sys-cache', 'atomic-part', 'atomic-rplc', 'atomic-part-fat-values', 'atomic-part-onheap-evict-fifo', 'atomic-rplc-onheap-evict-lru', 'tx-part', 'tx-rplc', 'tx-part-fat-values', 'compute', 'tx-part-onheap-evict-lru', 'tx-rplc-onheap-evict-fifo', 'atomic-index', 'query', 'orgCache']]
{noformat}

Also it would be nice to have default policy name instead of ""null""  in logs when printing caches info:
{noformat}
<12:48:12><main><yardstick> Cache configured with the following parameters: CacheConfiguration [name=atomic-part, memPlcName=null, storeConcurrentLoadAllThreshold=5, ...
{noformat}
{noformat}
[12:48:13,239][INFO ][main][GridCacheProcessor] Started cache [name=atomic-part, memoryPolicyName=null, mode=PARTITIONED]
{noformat}",,agoncharuk,krybakova,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 30 07:11:15 UTC 2017,,,,,,,,,,"0|i3ets7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/17 13:40;sergey-chugunov;I lowered priority of the bug to Minor because it turned out that there were some flaws in cache configuration logging causing incorrect messages to appear in logs.
MemoryPolicy functionality is fine and works as expected.;;;","11/May/17 14:32;sergey-chugunov;pull request is open: https://github.com/apache/ignite/pull/1930;;;","30/Jun/17 07:11;agoncharuk;Thanks, Sergey, merged your changes to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Watch in ignite_modules works incorrect after migration on webpack2,IGNITE-5200,13071067,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,anovikov,anovikov,11/May/17 07:47,13/Jun/17 07:46,14/Jul/23 06:20,13/Jun/17 07:02,2.0,,,,,2.1,,wizards,,,,0,,,,,,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 13 06:48:03 UTC 2017,,,,,,,,,,"0|i3eth3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/May/17 03:06;anovikov;[~pkonstantinov], please do smoke test (modal icons, project download, getting started images, signin page);;;","13/Jun/17 06:48;pkonstantinov;Tested successfully.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent modification in .GridDiscoveryManager.nodeCaches,IGNITE-5196,13070909,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,yzhdanov,yzhdanov,10/May/17 18:33,01/Aug/19 22:02,14/Jul/23 06:20,07/Jun/17 08:11,,,,,,2.1,,,,,,0,,,,"{noformat}
./grid149.tar.gz:org.apache.ignite.IgniteCheckedException: null
./grid149.tar.gz:       at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7281) ~[ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at org.apache.ignite.internal.processors.rest.GridRestProcessor$2.body(GridRestProcessor.java:171) [ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110) [ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_121]
./grid149.tar.gz:       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_121]
./grid149.tar.gz:       at java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]
./grid149.tar.gz:Caused by: java.util.ConcurrentModificationException: null
./grid149.tar.gz:       at java.util.HashMap$HashIterator.nextNode(HashMap.java:1437) ~[na:1.8.0_121]
./grid149.tar.gz:       at java.util.HashMap$EntryIterator.next(HashMap.java:1471) ~[na:1.8.0_121]
./grid149.tar.gz:       at java.util.HashMap$EntryIterator.next(HashMap.java:1469) ~[na:1.8.0_121]
./grid149.tar.gz:       at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.nodeCaches(GridDiscoveryManager.java:1733) ~[ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at org.apache.ignite.internal.processors.rest.handlers.top.GridTopologyCommandHandler.createNodeBean(GridTopologyCommandHandler.java:219) ~[ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHO
T]
./grid149.tar.gz:       at org.apache.ignite.internal.processors.rest.handlers.top.GridTopologyCommandHandler.handleAsync(GridTopologyCommandHandler.java:109) ~[ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at org.apache.ignite.internal.processors.rest.GridRestProcessor.handleRequest(GridRestProcessor.java:265) ~[ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at org.apache.ignite.internal.processors.rest.GridRestProcessor.access$100(GridRestProcessor.java:88) ~[ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       at org.apache.ignite.internal.processors.rest.GridRestProcessor$2.body(GridRestProcessor.java:154) [ignite-core-1.10.3.ea6.jar:2.0.0-SNAPSHOT]
./grid149.tar.gz:       ... 4 common frames omitted
{noformat}",,githubbot,gvvinblade,sboikov,yzhdanov,,,,,,,,,"dspavlov commented on issue #2083: IGNITE-5196
URL: https://github.com/apache/ignite/pull/2083#issuecomment-517474253
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600","dspavlov commented on pull request #2083: IGNITE-5196
URL: https://github.com/apache/ignite/pull/2083
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600","dspavlov commented on issue #2102: IGNITE-5196 Ignite JDBC Driver fix
URL: https://github.com/apache/ignite/pull/2102#issuecomment-517474263
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600","dspavlov commented on pull request #2102: IGNITE-5196 Ignite JDBC Driver fix
URL: https://github.com/apache/ignite/pull/2102
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:02;githubbot;600",,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jun 07 11:25:49 UTC 2017,,,,,,,,,,"0|i3eshz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/17 17:11;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2083

    IGNITE-5196

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5196

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2083.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2083
    
----
commit 93ef1c9761df653a8a1019380c8b20ce20827d42
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-06-05T13:43:07Z

    IGNITE-5196

----
;;;","06/Jun/17 07:04;sboikov;Thanks Igor,

Changes look good, I did few minor changes, please take a look.
This registeredCaches collection is also accessed from ClusterGroupAdapter.CachesFilter, could you please also add similar test with concurrent cache start/stop and ClusterGroup (it is created from public API ClusterGroup.forCacheNodes, forClientNodes)

Thanks!;;;","06/Jun/17 13:17;gvvinblade;[~sboikov], I have just added the tests and updated the request.;;;","07/Jun/17 06:51;sboikov;Please always merge from master before sending for review. 
And your test fails, please fix:
{noformat}
09:49:53,590][ERROR][main][root] Test failed.
org.apache.ignite.cache.CacheExistsException: Failed to start cache (a cache with the same name is already started): cache0
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.prepareCacheChangeRequest(GridCacheProcessor.java:3647)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.dynamicStartCache(GridCacheProcessor.java:2480)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.dynamicStartCache(GridCacheProcessor.java:2419)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createFromTemplate(GridCacheProcessor.java:2280)
	at org.apache.ignite.internal.IgniteKernal.createCache(IgniteKernal.java:2780)
	at org.apache.ignite.internal.ClusterGroupSelfTest$3.run(ClusterGroupSelfTest.java:331)
	at org.apache.ignite.testframework.GridTestUtils$9.call(GridTestUtils.java:1208)
	at org.apache.ignite.testframework.GridTestThread.run(GridTestThread.java:86)
	Suppressed: org.apache.ignite.cache.CacheExistsException: Failed to start cache (a cache with the same name is already started): cache12
		... 8 more
	Suppressed: org.apache.ignite.cache.CacheExistsException: Failed to start cache (a cache with the same name is already started): cache8
		... 8 more
	Suppressed: org.apache.ignite.cache.CacheExistsException: Failed to start cache (a cache with the same name is already started): cache4
		... 8 more
{noformat}
;;;","07/Jun/17 07:48;gvvinblade;[~sboikov], I've fixed the issue. 

Checking each test separately I forgot to run all of them together.

Master is merged, tests are passed (checked twice).;;;","07/Jun/17 08:11;sboikov;Thanks Igor! Merged into master.;;;","07/Jun/17 11:25;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/2102

    IGNITE-5196 Ignite JDBC Driver fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite jdbc-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2102.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2102
    
----
commit 8ddd4713fb12d23adf87e4b78ca5b808b6688ffe
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-06-07T11:24:24Z

    Ignite JDBC Driver fix

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DataStreamer can fails if non-data node enter\leave the grid.,IGNITE-5195,13070868,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,mcherkasov,amashenkov,amashenkov,10/May/17 16:51,02/Aug/19 11:02,14/Jul/23 06:20,20/Nov/17 15:41,1.8,,,,,2.4,,streaming,,,,1,,,,"DataStreamer failed with ""too many remaps"" message even if non-data node enter\leave topology.
PFA repro attached. 

Seems, we should ignore topology changes when non-data node enter\leave the grid. 

And also we need to sure that remapping doesn't occurs when there is no data nodes in grid any more, as remapping make no sense and more suitable message should be logged.",,amashenkov,dsetrakyan,githubbot,mcherkasov,ntikhonov,,,,,,,,"dspavlov commented on issue #2872: IGNITE-5195 : DataStreamer remap optimization.
URL: https://github.com/apache/ignite/pull/2872#issuecomment-517660111
 
 
   The ticket is resolved, closing PR. Feel free to reopen if it is needed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600","dspavlov commented on pull request #2872: IGNITE-5195 : DataStreamer remap optimization.
URL: https://github.com/apache/ignite/pull/2872
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 11:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,IGNITE-5144,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/May/17 16:56;amashenkov;DataStreamerFailure.java;https://issues.apache.org/jira/secure/attachment/12867379/DataStreamerFailure.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Nov 20 15:41:42 UTC 2017,,,,,,,,,,"0|i3es8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/May/17 11:42;amashenkov;There is another use case to be checked: if rising minor version topology can cause DataStreamer remapping procedure.
E.g. clients connect to grid and register caches that rises minor topology version. 

If it so, then may be it would enough to make DataStreamer just ignore minor topology changes?;;;","03/Sep/17 16:58;dsetrakyan;Also, this is the forum thread describing this issue:
http://apache-ignite-users.70518.x6.nabble.com/Failing-DataStreamer-beacuse-of-minor-version-change-td12142.html

*I am surprised that a link to the user thread was not added to the ticket when it was filed. We must always be disciplined to do it.*

Also, it looks like the exception thrown can be ignored (at least according to the responses in the thread). If an exception can be ignored, then it should not be an exception, it should be a warning.;;;","16/Oct/17 10:41;mcherkasov;I set priority to major because many users have faced with this problem and in an active cluster, where a lot of clients join and left cluster makes data streamer useless.;;;","16/Oct/17 14:57;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2862

    IGNITE-5195 : DataStreamer remap optimization.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5195

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2862.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2862
    
----
commit caa7f7c833a162a01edacb241634515cdce67ec2
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-10-16T14:56:18Z

    ignite-5195 : DataStreamer remap optimization.

----
;;;","17/Oct/17 14:06;githubbot;Github user ilantukh closed the pull request at:

    https://github.com/apache/ignite/pull/2862
;;;","17/Oct/17 14:07;githubbot;GitHub user ilantukh opened a pull request:

    https://github.com/apache/ignite/pull/2872

    IGNITE-5195 : DataStreamer remap optimization.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5195

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2872.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2872
    
----
commit caa7f7c833a162a01edacb241634515cdce67ec2
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-10-16T14:56:18Z

    ignite-5195 : DataStreamer remap optimization.

commit 68b13fa248393c8ab75686c2956e84a2c5177839
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-10-16T15:03:48Z

    ignite-5195 : Added test.

commit e35b2d6508bd8b96c10d245253e066cdc2839a01
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-10-17T13:50:53Z

    ignite-5195 : Fixed failing tests, simplified solution.

----
;;;","20/Nov/17 15:41;ntikhonov;[~mcherkas],
Thank you for your contribution! Looks good for me. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: TryGetIgnite does not work with AutoGenerateIgniteInstanceName,IGNITE-5194,13070828,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,10/May/17 14:19,11/May/17 10:45,14/Jul/23 06:20,11/May/17 10:45,2.0,,,,,2.1,,platforms,,,,0,.NET,,,"{{Ignition.GetIgnite()}} has been reworked to return instance with any name if there is only one present. This is needed to work nicely with {{AutoGenerateIgniteInstanceName}}.

{{TryGetIgnite()}}, however, was not updated.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 11 10:44:11 UTC 2017,,,,,,,,,,"0|i3erzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/17 10:44;ptupitsyn;Fixed in master: 57c6705050219e15e218fbc3c0e9f7d6bf8803f5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Hadoop: Ignite node fails to start if some , but not all HADOOP_XXX_HOME variables are set.",IGNITE-5193,13070821,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,iveselovskiy,iveselovskiy,iveselovskiy,10/May/17 14:02,17/May/17 10:33,14/Jul/23 06:20,17/May/17 10:33,1.8,,,,,2.1,,hadoop,,,,0,easyfix,,,"Ignite node fails to start if some , but not all 3 HADOOP_XXX_HOME variables are set (see trace below). This is caused by the following gap in Ignite logic: 
{{org.apache.ignite.internal.processors.hadoop.HadoopClasspathUtils#exists , #isDirectory , #isReadable}} return {{true}} for empty String argument. For the unset location variables the value is empty String, but {{org.apache.ignite.internal.processors.hadoop.HadoopLocations#xxxxxExists}} gets {{true}}, so the location considered to be valid. This is the cause of the problem.

{code}
[06:09:42] Security status [authentication=off, tls/ssl=off]
[06:17:23,822][ERROR][main][IgniteKernal] Got exception while starting (will rollback startup routine).
java.lang.RuntimeException: class org.apache.ignite.IgniteCheckedException: Failed to resolve Hadoop JAR locations: Failed to get directory files [dir=]
        at org.apache.ignite.internal.processors.hadoop.HadoopClassLoader.addHadoopUrls(HadoopClassLoader.java:422)
        at org.apache.ignite.internal.processors.hadoop.HadoopClassLoader.<init>(HadoopClassLoader.java:134)
        at org.apache.ignite.internal.processors.hadoop.HadoopHelperImpl.commonClassLoader(HadoopHelperImpl.java:78)
        at org.apache.ignite.hadoop.fs.IgniteHadoopIgfsSecondaryFileSystem.start(IgniteHadoopIgfsSecondaryFileSystem.java:254)
        at org.apache.ignite.internal.processors.igfs.IgfsImpl.<init>(IgfsImpl.java:186)
        at org.apache.ignite.internal.processors.igfs.IgfsContext.<init>(IgfsContext.java:101)
        at org.apache.ignite.internal.processors.igfs.IgfsProcessor.start(IgfsProcessor.java:128)
        at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1638)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:900)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1799)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1602)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
        at org.apache.ignite.internal.IgnitionEx.startConfigurations(IgnitionEx.java:964)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:850)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:749)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:619)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:589)
        at org.apache.ignite.Ignition.start(Ignition.java:347)
        at org.apache.ignite.startup.cmdline.CommandLineStartup.main(CommandLineStartup.java:302)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to resolve Hadoop JAR locations: Failed to get directory files [dir=]
        at org.apache.ignite.internal.processors.hadoop.HadoopClassLoader.hadoopUrls(HadoopClassLoader.java:456)
        at org.apache.ignite.internal.processors.hadoop.HadoopClassLoader.addHadoopUrls(HadoopClassLoader.java:419)
        ... 18 more
Caused by: java.io.IOException: Failed to get directory files [dir=]
        at org.apache.ignite.internal.processors.hadoop.HadoopClasspathUtils$SearchDirectory.files(HadoopClasspathUtils.java:344)
        at org.apache.ignite.internal.processors.hadoop.HadoopClasspathUtils.classpathForClassLoader(HadoopClasspathUtils.java:68)
        at org.apache.ignite.internal.processors.hadoop.HadoopClassLoader.hadoopUrls(HadoopClassLoader.java:453)
        ... 19 more
{code}",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 11 13:52:03 UTC 2017,,,,,,,,,,"0|i3eryf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/17 13:52;iveselovskiy;Pull Request https://github.com/apache/ignite/pull/1928  ,  
Tests http://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests_IgniteHadoop&branch_IgniteTests=pull%2F1928%2Fhead&tab=buildTypeStatusDiv .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE at CacheDataStoreImpl.canUpdateOldRow during load test,IGNITE-5192,13070792,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,krybakova,krybakova,10/May/17 12:29,23/Jun/17 11:14,14/Jul/23 06:20,23/Jun/17 11:14,2.0,,,,,2.1,,cache,,,,0,,,,"NPE occurs during load test:
{noformat}
[14:05:37,145][ERROR][sys-stripe-5-#6%null%][GridDhtTxLocal] Heuristic transaction failure.
class org.apache.ignite.internal.transactions.IgniteTxHeuristicCheckedException: Failed to locally write to cache (all transaction entries will be invalidated, however there was a window when entries for this transaction were visible to
others) ...
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:829)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.localFinish(GridDhtTxLocalAdapter.java:772)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.localFinish(GridDhtTxLocal.java:580)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.finishTx(GridDhtTxLocal.java:466)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.commitDhtLocalAsync(GridDhtTxLocal.java:514)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:841)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:720)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:676)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$200(IgniteTxHandler.java:95)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:153)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:151)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:863)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:386)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:308)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:100)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:253)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1257)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:885)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:114)
        at org.apache.ignite.internal.managers.communication.GridIoManager$7.run(GridIoManager.java:802)
        at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Runtime failure on search row: org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$SearchRow@55f39849
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.invoke(BPlusTree.java:1615)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:925)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:326)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.storeValue(GridCacheMapEntry.java:3241)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSet(GridCacheMapEntry.java:992)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:663)
        ... 21 more
Caused by: java.lang.NullPointerException
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.canUpdateOldRow(IgniteCacheOffheapManagerImpl.java:913)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.createRow(IgniteCacheOffheapManagerImpl.java:970)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$UpdateClosure.call(GridCacheMapEntry.java:3937)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$UpdateClosure.call(GridCacheMapEntry.java:3895)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Invoke.invokeClosure(BPlusTree.java:2966)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Invoke.access$6200(BPlusTree.java:2860)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.invokeDown(BPlusTree.java:1702)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.invokeDown(BPlusTree.java:1673)
        at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.invoke(BPlusTree.java:1585)
        ... 26 more
{noformat}

Load test config (config and property files for yardstick are attached):
- 4 server nodes and 20 client nodes at 2 hosts
- 28 caches of different types (atomic/tx, partition/replicated, onheap/offheap etc.)
- operations: PUT PUT_ALL GET GET_ALL INVOKE INVOKE_ALL REMOVE REMOVE_ALL PUT_IF_ABSENT REPLACE
- backups: 1
- number of entries (preload and key range): 500K",,krybakova,sboikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/May/17 12:30;krybakova;ignite-base-load-config.xml;https://issues.apache.org/jira/secure/attachment/12867325/ignite-base-load-config.xml","10/May/17 12:30;krybakova;run-load.properties;https://issues.apache.org/jira/secure/attachment/12867323/run-load.properties","10/May/17 12:30;krybakova;run-load.xml;https://issues.apache.org/jira/secure/attachment/12867324/run-load.xml",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 23 11:14:21 UTC 2017,,,,,,,,,,"0|i3errz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jun/17 13:47;vozerov;[~krybakova], please confirm which version (revision) did you use? This appears to be a bit outdated code base.;;;","16/Jun/17 14:11;krybakova;[~vozerov] Reproduced with 2.1 (root exception is the same)

{noformat}
[15:40:29] (err) Failed to execute compound future reducer: GridNearTxFinishFuture [futId=1f188e0bc51-780e981f-2b57-4630-b934-85cdcafbf1b0, tx=GridNearTxLocal ....[mappings=IgniteTxMappingsImpl [], nearLocallyMapped=false, colocatedLocallyMa
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:831)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocalAdapter.localFinish(GridDhtTxLocalAdapter.java:774)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.localFinish(GridDhtTxLocal.java:580)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.finishTx(GridDhtTxLocal.java:466)
        at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxLocal.commitDhtLocalAsync(GridDhtTxLocal.java:514)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finishDhtLocal(IgniteTxHandler.java:843)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:722)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processNearTxFinishRequest(IgniteTxHandler.java:678)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$200(IgniteTxHandler.java:95)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:153)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$3.apply(IgniteTxHandler.java:151)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:1032)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:553)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:371)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:301)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$100(GridCacheIoManager.java:104)
        at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:291)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1554)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:1182)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$4200(GridIoManager.java:124)
        at org.apache.ignite.internal.managers.communication.GridIoManager$9.run(GridIoManager.java:1095)
        at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteException: Runtime failure on search row: org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$SearchRow@7a45888a
        at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invoke(BPlusTree.java:1632)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:1105)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:351)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.storeValue(GridCacheMapEntry.java:3221)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSet(GridCacheMapEntry.java:979)
        at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.userCommit(IgniteTxLocalAdapter.java:665)
        ... 22 more
Caused by: java.lang.NullPointerException
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.canUpdateOldRow(IgniteCacheOffheapManagerImpl.java:1091)
        at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.createRow(IgniteCacheOffheapManagerImpl.java:1151)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$UpdateClosure.call(GridCacheMapEntry.java:3917)
        at org.apache.ignite.internal.processors.cache.GridCacheMapEntry$UpdateClosure.call(GridCacheMapEntry.java:3875)
        at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Invoke.invokeClosure(BPlusTree.java:2988)
        at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree$Invoke.access$6200(BPlusTree.java:2882)
        at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invokeDown(BPlusTree.java:1719)
        at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invokeDown(BPlusTree.java:1690)
        at org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree.invoke(BPlusTree.java:1602)
        ... 27 more
<15:40:30><benchmark-worker-32><yardstick> The benchmark of random operation failed.
{noformat};;;","17/Jun/17 13:37;vozerov;[~krybakova], I rearranged the code a bit so that it should be clear where exactly exception comes form. Could you please re-run again and share the logs?;;;","20/Jun/17 14:37;sboikov;I found root cause of issue: if cache operation with 'filter' (e.g. replace) is executed for tx cache, then is possible that 'null' is put in cache, instead of no-op. This issue existed before 2.0, but started to reproduce as NPE after changes related to PageMemory.;;;","23/Jun/17 11:14;sboikov;Merged fix (63debcdb1d6bfb5402ca65197d516f82df105574).

[~krybakova], could you please verify issue does not reproduce anymore?

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException in GridMergeIndexSorted,IGNITE-5190,13070757,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergi,amashenkov,amashenkov,10/May/17 10:50,11/May/17 13:03,14/Jul/23 06:20,11/May/17 13:03,2.0,,,,,2.1,,sql,,,,0,,,,PFA stacktrace with query.,,amashenkov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10/May/17 13:40;amashenkov;JoinWithSubQueryFails.java;https://issues.apache.org/jira/secure/attachment/12867336/JoinWithSubQueryFails.java","10/May/17 10:51;amashenkov;join-on-subquery-exception.txt;https://issues.apache.org/jira/secure/attachment/12867301/join-on-subquery-exception.txt",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 11 13:03:11 UTC 2017,,,,,,,,,,"0|i3erk7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/May/17 13:41;amashenkov;I've attach a repro. Seems, join with subquery is buggy.;;;","11/May/17 13:03;sergi;Fixed and merged to master
3a9dba5f86ad34736ccd278ebf91044e18cf9a6b;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Implement configuration of cache memory pagination.,IGNITE-5185,13070674,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,10/May/17 03:12,09/Jun/17 08:48,14/Jul/23 06:20,09/Jun/17 08:47,2.0,,,,,2.1,,wizards,,,,0,,,,,,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 09 08:47:50 UTC 2017,,,,,,,,,,"0|i3er1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/May/17 11:09;vsisko;Implemented possibility to configure memory configuration.;;;","09/Jun/17 08:47;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance degradation using evictions in near-enabled caches,IGNITE-5175,13069426,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,gvvinblade,gvvinblade,05/May/17 11:49,23/May/17 07:37,14/Jul/23 06:20,23/May/17 07:37,2.0,,,,,2.1,,cache,,,,0,,,,"Both RandomLruNearEnabledPageEvictionMultinodeTest.testPageEviction and 
Random2LruNearEnabledPageEvictionMultinodeTest.testPageEviction fail with timeout exceptions. 

Seems that the execution time (eviction operation) is non-linearly dependent on a count of elements in the cache (the more elements the longer the operation).",,agoncharuk,githubbot,gvvinblade,ivan.glukos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 23 07:37:42 UTC 2017,,,,,,,,,,"0|i3ejdb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/17 15:37;ivan.glukos;Current test hang is expected. Entry can't be evicted on local node if it's present in near cache on another node (after some iterations, almost all entries have copies in near cache). Test is changed.;;;","11/May/17 15:38;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/1931

    IGNITE-5175: Performance degradation using evictions in near-enabled …

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5175

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1931.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1931
    
----
commit 9f2f30c4a5de21fb8108b97bcb03dbf91d6b3fdf
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-05-11T15:37:45Z

    IGNITE-5175: Performance degradation using evictions in near-enabled caches

----
;;;","23/May/17 07:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1931
;;;","23/May/17 07:37;agoncharuk;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to have opportunity to list only server nodes for specified topology version,IGNITE-5174,13069351,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,agoncharuk,zstan,zstan,05/May/17 06:47,28/Aug/17 16:40,14/Jul/23 06:20,27/Jul/17 08:48,,,,,,2.3,,,,,,0,,,,Need to have common utility function which filters client nodes for specified topology version.,,agoncharuk,dpavlov,githubbot,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Aug 01 09:28:01 UTC 2017,,,,,,,,,,"0|i3eiwn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/17 06:55;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/1910

    IGNITE-5174 client nodes filter func

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5174

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1910.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1910
    
----
commit 2185c173059db0615bfbb6b9d54ed92f5e1cb511
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-05-05T06:50:04Z

    IGNITE-5174 client nodes filter func

----
;;;","18/Jul/17 09:00;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/1910
;;;","18/Jul/17 09:14;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/2312

    IGNITE-5174, list only server nodes for specified topology version

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5174

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2312.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2312
    
----
commit 4a89684f9b73d6b3130dc28fc617c02181315f2e
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-07-18T09:13:20Z

    IGNITE-5174: list only server nodes for specified topology version

----
;;;","26/Jul/17 11:43;dpavlov;Hi, [~zstan],

I've checked you changes and it seems to be OK.;;;","27/Jul/17 08:48;agoncharuk;Merged;;;","01/Aug/17 09:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2312
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Dynamic type registration uses assembly-qualified type name,IGNITE-5172,13069229,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,04/May/17 18:04,05/May/17 15:41,14/Jul/23 06:20,05/May/17 15:41,2.0,,,,,2.1,,platforms,,,,0,.NET,,,"{{BinaryProcessor.RegisterType}} uses {{AssemblyQualifiedName}}, which includes assembly version.

This has two issues:
* We ignore current name mapper, so this type name is not the same as type name in binary metadata, marshaller, etc
* This breaks when same type comes from assemblies with different versions, which is a valid scenario. Binary protocol is flexible and does not care about type versions, it tolerates new or missing fields.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 05 15:41:08 UTC 2017,,,,,,,,,,"0|i3ei5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/May/17 19:27;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1909

    IGNITE-5172 .NET: Fix type name resolving during dynamic registration

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-5172

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1909.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1909
    
----
commit 190476e55d29214d8c5dd87523e70abb58175efa
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-04T18:07:35Z

    IGNITE-5172 .NET: Fix type name mapping for dynamic registration

commit 95e0c20285c8b84307753b09eff5c8aea8efde95
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-04T18:48:26Z

    Add test

commit 7fefe5f60a505b85e0d03576de18bc70e52ec677
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-04T18:50:31Z

    Fix compilation

commit 435a91a3258615e0e4fc1a1e23dab96687ddb1f0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-04T19:13:02Z

    Fixing TypeResolver

commit 31435b3ae30d7326c5ec726c3806e9074b1d02ee
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-05-04T19:23:51Z

    Fixing generic type resolver

----
;;;","05/May/17 15:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1909
;;;","05/May/17 15:41;ptupitsyn;* {{RegisterType}} fixed to use type name from current {{BinaryNameMapper}}
* As a result, multiple bugs in {{TypeNameParser}} and {{TypeResolver}} were uncovered and fixed (simple names resolving, array handling)

TC is green, merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Allocated memory pages count is incorrect during load test,IGNITE-5150,13068810,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,krybakova,krybakova,krybakova,03/May/17 15:42,23/May/17 12:07,14/Jul/23 06:20,23/May/17 12:07,2.0,,,,,2.1,,,,,,0,,,,"Load test config:
- CacheRandomOpearion benchmark
- 1 server (-Xms4g -Xmx4g)
- 1 client (-Xms4g -Xmx4g)
- 1 cache with following config
{noformat}
    <bean name=""orgCache"" class=""org.apache.ignite.configuration.CacheConfiguration"">
        <property name=""name"" value=""orgCache""/>
        <property name=""cacheMode"" value=""PARTITIONED""/>
        <property name=""atomicityMode"" value=""ATOMIC""/>

        <!-- Configure query entities -->
        <property name=""queryEntities"">
            <list>
                <bean class=""org.apache.ignite.cache.QueryEntity"">
                    <property name=""keyType"" value=""java.lang.Integer""/>
                    <property name=""valueType"" value=""org.apache.ignite.yardstick.cache.model.Organization""/>

                    <property name=""fields"">
                        <map>
                            <entry key=""id"" value=""java.lang.Integer""/>
                            <entry key=""name"" value=""java.lang.String""/>
                        </map>
                    </property>

                    <property name=""indexes"">
                        <list>
                            <bean class=""org.apache.ignite.cache.QueryIndex"">
                                <constructor-arg value=""id""/>
                            </bean>
                            <bean class=""org.apache.ignite.cache.QueryIndex"">
                                <constructor-arg value=""name""/>
                            </bean>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
{noformat}
- preloaded data: 40M entries
- backup count: 0
- memory config:
{noformat}
<property name=""memoryConfiguration"">
            <bean class=""org.apache.ignite.configuration.MemoryConfiguration"">

                <property name=""defaultMemoryPolicyName"" value=""default""/> <!-- default -->
		<property name=""SystemCacheMaxSize"" value=""#{100L * 1024 * 1024}""/> <!-- default -->
		<property name=""SystemCacheInitialSize"" value=""#{40L * 1024 * 1024}""/> <!-- default -->
		<property name=""PageSize"" value=""#{2L * 1024}""/> <!-- default -->
                
		<property name=""memoryPolicies"">
		    <list>
                    	<bean class=""org.apache.ignite.configuration.MemoryPolicyConfiguration"">
                            <property name=""name"" value=""default""/>
                            <property name=""initialSize"" value=""#{500L * 1024 * 1024}""/>
			    <property name=""maxSize"" value=""#{6L * 1024 * 1024 * 1024}""/>
                        </bean>
                    	<bean class=""org.apache.ignite.configuration.MemoryPolicyConfiguration"">
                            <property name=""name"" value=""memPolicyCfg_evict_LRU""/>
			    <property name=""pageEvictionMode"" value=""RANDOM_LRU""/>
                            <property name=""initialSize"" value=""#{500L * 1024 * 1024}""/>
			    <property name=""maxSize"" value=""#{1L * 1024 * 1024 * 1024}""/>
                        </bean>
                    	<bean class=""org.apache.ignite.configuration.MemoryPolicyConfiguration"">
                            <property name=""name"" value=""memPolicyCfg_evict_2LRU""/>
			    <property name=""pageEvictionMode"" value=""RANDOM_2_LRU""/>
                            <property name=""initialSize"" value=""#{500L * 1024 * 1024}""/>
			    <property name=""maxSize"" value=""#{4L * 1024 * 1024 * 1024}""/>
                        </bean>
		    </list>
                </property>
            </bean>
        </property>
{noformat}

40M entries consume about 4Gb offheap memory. It might be proved by {{top}} command (RES value - JVM memory = 8Gb - 4Gb) or by summing all ""Allocated next memory segment"" printed in server log.

After all data preloaded metrics show the following:
{noformat}
[18:37:18,152][INFO ][grid-timeout-worker-#23%null%][IgniteKernal]
Metrics for local node (to disable set 'metricsLogFrequency' to 0)
    ^-- Node [id=dc009e3c, name=null, uptime=00:02:10:102]
    ^-- H/N/C [hosts=2, nodes=2, CPUs=32]
    ^-- CPU [cur=19.53%, avg=11.99%, GC=0.03%]
    ^-- PageMemory [pages=22527667]
    ^-- Heap [used=238MB, free=94.17%, comm=4096MB]
    ^-- Non heap [used=40MB, free=68.18%, comm=45MB]
    ^-- Public thread pool [active=0, idle=0, qSize=0]
    ^-- System thread pool [active=0, idle=10, qSize=0]
    ^-- Outbound messages queue [size=0]
{noformat}

pages=22527667 seems to be wrong, otherwise offheap memory size would be 22527667 * 2KB = about 43Gb.

Driver and server logs, yardstick configs, top logs are attached.

Note:
This problem leads to eviction working incorrectly. 
{code}
boolean shouldEvict = allocatedPagesCnt > (memorySize / sysPageSize * plcCfg.getEvictionThreshold()) &&
                emptyDataPagesCnt < plcCfg.getEmptyPagesPoolSize();
{code}
If I change memory policy for the cache to memPolicyCfg_evict_2LRU I expect that eviction happens when about 4Gb of offheap memory is used. But it happens at 1Gb, since at this point memory pages count =~ 2M (2M * 2Kb =~ 4Gb).

",,agoncharuk,githubbot,ivan.glukos,krybakova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/May/17 16:00;krybakova;183504_id0_server.log;https://issues.apache.org/jira/secure/attachment/12866208/183504_id0_server.log","03/May/17 16:00;krybakova;183507_id0_driver.log;https://issues.apache.org/jira/secure/attachment/12866209/183507_id0_driver.log","03/May/17 16:00;krybakova;ignite-base-load-config.xml;https://issues.apache.org/jira/secure/attachment/12866210/ignite-base-load-config.xml","03/May/17 16:00;krybakova;run-load.properties;https://issues.apache.org/jira/secure/attachment/12866211/run-load.properties","03/May/17 16:00;krybakova;run-load.xml;https://issues.apache.org/jira/secure/attachment/12866212/run-load.xml","03/May/17 16:00;krybakova;top-driver.log;https://issues.apache.org/jira/secure/attachment/12866213/top-driver.log","03/May/17 16:00;krybakova;top-server.log;https://issues.apache.org/jira/secure/attachment/12866214/top-server.log",,,,7.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue May 23 12:07:45 UTC 2017,,,,,,,,,,"0|i3efkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/May/17 15:13;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/1915

    IGNITE-5150: Allocated memory pages count is incorrect during load test

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5150

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1915.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1915
    
----
commit cd3959e599cb2776540c053c1d1053c5ee8c6883
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-05-05T15:12:05Z

    IGNITE-5150: Allocated memory pages count is incorrect during load test

----
;;;","23/May/17 12:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1915
;;;","23/May/17 12:07;agoncharuk;Merged to master. Ksenia, can you please re-check?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Not POJO models are showed in project structure,IGNITE-5147,13068721,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,03/May/17 11:14,04/May/17 02:54,14/Jul/23 06:20,04/May/17 02:54,2.0,,,,,2.1,,,,,,0,,,,"# Configure model with filled section 'Domain model for cache store' and disabled options 'Generate POJO classes',
# Open summary page,
# Click by 'Project structure' button and extend src -> main -> java folder in tree.

File for configured model is shown. ",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 04 02:54:24 UTC 2017,,,,,,,,,,"0|i3ef0v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/May/17 11:14;vsisko;Fixed generation of project structure view.;;;","04/May/17 02:54;anovikov;Reviewed. Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Simplify generation of user properties file,IGNITE-5146,13068713,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,03/May/17 10:38,26/Feb/19 03:30,14/Jul/23 06:20,04/May/17 04:43,2.0,,,,,2.1,,wizards,,,,0,,,,"Secret properties file generator has duplicate code for different fields. 
Similar generations have different implementations.",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 04 04:43:34 UTC 2017,,,,,,,,,,"0|i3eez3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/May/17 10:42;vsisko;Simplified generation for user properties, removed code duplicates.;;;","04/May/17 04:43;anovikov;Reviewed. Looks good. merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Import of model required connection of agent to node,IGNITE-5143,13068642,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,03/May/17 05:38,04/May/17 10:14,14/Jul/23 06:20,04/May/17 10:14,2.1,,,,,2.1,,,,,,0,,,,"Run agent without nodes.
Open Model page.
Try to import model from database.

Showed message that agent is not connected to node.
",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 04 10:14:42 UTC 2017,,,,,,,,,,"0|i3eejb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/May/17 09:49;anovikov;Extract await agent connect from await cluster connect.
[~vsisko], please check.;;;","04/May/17 09:52;vsisko;Tested. Anent not require a connection to a node on import of models.;;;","04/May/17 10:14;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridLogThrottle memory leak,IGNITE-5136,13068433,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,SomeFire,zstan,zstan,02/May/17 13:58,29/Aug/18 12:01,14/Jul/23 06:20,23/May/18 09:35,,,,,,2.7,,general,,,,1,,,,class GridLogThrottle stores throttle info into map and noone clears it.,,avinogradov,githubbot,ivanan.fed,javaller,nizhikov,SomeFire,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 29 12:01:08 UTC 2018,,,,,,,,,,"0|i3ed8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Sep/17 20:51;javaller;[~zstan] [~avinogradov] In my opinion tests look good.
[TC Overview | https://ci.ignite.apache.org/viewType.html?buildTypeId=Ignite20Tests_RunAll&branch_Ignite20Tests=pull%2F2674%2Fmerge&tab=buildTypeStatusDiv];;;","18/Sep/17 07:45;zstan;No need to use separate ThreadPool, using java.util.Timer would be enough.;;;","15/Dec/17 10:49;githubbot;GitHub user SomeFire opened a pull request:

    https://github.com/apache/ignite/pull/3236

    IGNITE-5136: GridLogThrottle memory leak

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/SomeFire/ignite ignite-5136

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/3236.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #3236
    
----
commit 63bfe6a8681ea7a9f40de9d17f44df0c66c678ec
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-05T17:29:58Z

    Added test and cleanUpOldEntries

commit 30b132e7e2a62ae1d0605db1cdd107eb9ca1ec37
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-05T18:19:27Z

    Added check of timeStamp in map.

commit 09d0fed6fdc8ca910a5e1b67bbe4d3c1911a37d3
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-05T19:28:59Z

    Added testOnChangingTimeout

commit a13a6e78e9ecf1507cf2e82a0859fa10bf02babc
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-06T14:12:04Z

    Added lazy initialization.

commit eb75fe7d7219b3d1f9a2ba64d4a6fd532aee742d
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-06T14:19:34Z

    Added throttleTimeout.

commit 795593570e78623fea8c0d16f7c19423d6b83654
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-06T14:23:42Z

    Changed sleep timeout.

commit 18b8c75df9673d7c1223d66f74da68d436a45eee
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-06T15:07:41Z

    Added removing from errors with iterator.

commit 184f092b3bc0fd604480ae2cbd16f0fa8a7fed6e
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-06T15:41:39Z

    Code style.n

commit 881b78fd69ad1939bb580c49880623eb3ed74cca
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-07T13:40:07Z

    Improved iterator.

commit 90e9665f6371abbc3180c55ab75c714a38c1ed22
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-07T16:24:34Z

    Changed sleep timeout.

commit 6d2e0158bb5c0d8fc0c602cd0a8c874f0ed685e7
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-07T16:37:13Z

    Refactoring.

commit 9bfa9c3b60b53b1f444a6721f01dd84dc1f028f4
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-07T16:47:31Z

    Refactoring.

commit 0769ce86fdf5d73658548f31af21f9782d210f70
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-07T16:50:36Z

    Deleted loggedTs.

commit df05944a66448b4fcd3f635f8e348827096b5f15
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-11T16:24:33Z

    Review fixes

commit ec037cab659107d3f9959fe1b2540028f95d9345
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-13T13:24:31Z

    Added synchronized.

commit ec7d65527199039f84fcd4f0aa30cb1758c0e2e9
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-13T17:46:39Z

    Added cancel to synchronized area.

commit 2f8ba6b1864e479e934033fa7c49b44e1e57156e
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-15T10:28:14Z

    Added cancel to synchronized.

commit fabbc8bc22237f63e6a93851bdbbec7ee8bf5ec2
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-15T13:31:46Z

    Added cleanUpCancelEnabled to mapCleaningPeriodSetup.

commit ac850a5f6bf0cf44ea3afcd895a9ec95398834ca
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-15T13:36:51Z

    Refactoring.

commit 45c0eb6159bd51b23ed35ae7f49b6502c8c96ba8
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-15T13:46:12Z

    Overwritten mapCleaningPeriodSetup.

commit b2ec2a25de6fe484ac3dcfcd2b90256f2cf416bd
Author: vadopolski <vop444@gmail.com>
Date:   2017-09-15T14:11:31Z

    Refactoring.

commit 3e11d19e1e39c3b476df65292640b83342455d19
Author: Dmitrii Ryabov <somefireone@gmail.com>
Date:   2017-12-14T12:56:44Z

    Merge branch 'master' into ignite-5136

commit c0be8de7de492122e35be641a9a0f06a1d4f937f
Author: Dmitrii Ryabov <somefireone@gmail.com>
Date:   2017-12-14T15:33:44Z

    IGNITE-5136: review fix.

----
;;;","19/Dec/17 09:35;SomeFire;[~zstan], I've done with your comment, can you review again?;;;","29/Dec/17 12:12;zstan;[~dvryaboy] thanks, but i mean that you just need to register clear task, like:
{code:java}
GridTimeoutProcessor,  ctx.timeout()
{code}
;;;","09/Jan/18 11:17;SomeFire;[~zstan], it impossible to register any task that way because {{GridTimeoutProcessor}} and other exists only inside a node, but {{GridLogThrottle}} is static class and can be used without any {{Ignite}} instance.;;;","08/May/18 12:55;ivanan.fed;[~SomeFire], looks good to me.;;;","15/May/18 10:54;nizhikov;[~SomeFire] I left some comments in upsource. Please, fix it.;;;","15/May/18 12:40;avinogradov;[~SomeFire]

Since we're fixing memory leak I propose to use \{{ConcurrentLinkedHashMap}} with maxCap ~ 100. 

This will allow us to keep 100 actual uniquie errors, this should be enough.

100 should not be hardcoded. 

 ;;;","15/May/18 12:46;SomeFire;Agree, this way will be simpler than current implementation. I'll make changes.;;;","23/May/18 08:31;SomeFire;[~avinogradov], new implementation is ready, tests are ok.;;;","23/May/18 09:35;avinogradov;Looks good to me.

Merged to master.

Thanks for contribution!;;;","29/Aug/18 12:01;githubbot;Github user SomeFire closed the pull request at:

    https://github.com/apache/ignite/pull/3236
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Explicit cast to PageMemoryNoStoreImpl in IgniteCacheDatabaseSharedManager,IGNITE-5134,13068420,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ivan.glukos,gvvinblade,gvvinblade,02/May/17 13:23,20/Jun/19 11:42,14/Jul/23 06:20,03/May/17 08:26,2.0,,,,,2.0,,cache,,,,0,,,,"The method {{IgniteCacheDatabaseSharedManager#initMemory}} contains an explicit cast, that makes impossible to change {{PageMemory}} implementation.",,githubbot,gvvinblade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-11547,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 03 08:25:36 UTC 2017,,,,,,,,,,"0|i3ed5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/May/17 13:46;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/1895

    IGNITE-5134: Explicit cast to PageMemoryNoStoreImpl in IgniteCacheDatabaseSharedManager

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5134

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1895.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1895
    
----
commit 77a2c208684ab955b0871c3e03c0a2b6f5504bce
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-05-02T13:40:57Z

    IGNITE-5134: Explicit cast to PageMemoryNoStoreImpl in IgniteCacheDatabaseSharedManager

----
;;;","03/May/17 08:25;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1895
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CPP: Put-Get example fails to complete successfully.,IGNITE-5132,13068416,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,02/May/17 13:05,03/May/17 13:16,14/Jul/23 06:20,03/May/17 13:15,2.0,,,,,2.1,,platforms,,,,0,cpp,examples,,"C++ Put-Get example crashes on start with the following exception:
{code}
Exception during start processors, node will be stopped and close connections
java.lang.IllegalArgumentException: Ouch! Argument is invalid: Cache name must not be null or empty.
        at org.apache.ignite.internal.util.GridArgumentCheck.ensure(GridArgumentCheck.java:109)
        at org.apache.ignite.internal.processors.cache.GridCacheUtils.validateCacheName(GridCacheUtils.java:1699)
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerCache(GridCacheProcessor.java:711)
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerCacheFromConfig(GridCacheProcessor.java:672)
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.start(GridCacheProcessor.java:651)
        at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1763)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:925)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:573)
        at org.apache.ignite.internal.processors.platform.PlatformAbstractBootstrap.start(PlatformAbstractBootstrap.java:48)
        at org.apache.ignite.internal.processors.platform.PlatformIgnition.start(PlatformIgnition.java:76)
[15:49:19,229][SEVERE][main][IgniteKernal] Got exception while starting (will rollback startup routine).
java.lang.IllegalArgumentException: Ouch! Argument is invalid: Cache name must not be null or empty.
        at org.apache.ignite.internal.util.GridArgumentCheck.ensure(GridArgumentCheck.java:109)
        at org.apache.ignite.internal.processors.cache.GridCacheUtils.validateCacheName(GridCacheUtils.java:1699)
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerCache(GridCacheProcessor.java:711)
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.registerCacheFromConfig(GridCacheProcessor.java:672)
        at org.apache.ignite.internal.processors.cache.GridCacheProcessor.start(GridCacheProcessor.java:651)
        at org.apache.ignite.internal.IgniteKernal.startProcessor(IgniteKernal.java:1763)
        at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:925)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1895)
        at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1647)
        at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1075)
        at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:573)
        at org.apache.ignite.internal.processors.platform.PlatformAbstractBootstrap.start(PlatformAbstractBootstrap.java:48)
        at org.apache.ignite.internal.processors.platform.PlatformIgnition.start(PlatformIgnition.java:76)
[15:49:19] Ignite node stopped OK [uptime=00:00:10:971]
An error occurred: Ouch! Argument is invalid: Cache name must not be null or empty.
{code}",,githubbot,isapego,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 03 13:16:03 UTC 2017,,,,,,,,,,"0|i3ed53:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/May/17 17:22;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1897

    IGNITE-5132: Fixed PutGet example.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5132

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1897.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1897
    
----
commit 17e50e98cdab27630f1eabb08f02aa431b12e47e
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-05-02T17:20:49Z

    IGNITE-5132: Fixed PutGet example.

----
;;;","02/May/17 17:28;isapego;Ready for review. [~ptupitsyn], please, take a look.;;;","02/May/17 19:11;ptupitsyn;[~isapego] looks good to me.;;;","03/May/17 13:15;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1897
;;;","03/May/17 13:16;isapego;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop: update asm library to a version that can parse 1.8 bytecode,IGNITE-5131,13068409,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,iveselovskiy,iveselovskiy,iveselovskiy,02/May/17 12:42,12/Dec/17 08:36,14/Jul/23 06:20,17/May/17 09:06,2.0,,,,,2.1,,hadoop,,,,0,,,,"This question indicates, that asm bytecode parser 4.2 cannot parse 1.8 bytecode:
http://stackoverflow.com/questions/34318028/apache-ignite-failed-to-load-job-class-class-org-apache-ignite-internal-proces

{code}
         <dependency>
             <groupId>org.ow2.asm</groupId>
             <artifactId>asm-all</artifactId>
             <version>4.2</version>
         </dependency>
{code}

Consider to update asm lib to newer version that understands 1.8 bytecode version, (likely 5.2 ? http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.ow2.asm%22%20AND%20a%3A%22asm-all%22 )
",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,BIGTOP-2917,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon May 15 17:48:49 UTC 2017,,,,,,,,,,"0|i3ed3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/May/17 17:39;iveselovskiy;https://github.com/apache/ignite/pull/1946;;;","15/May/17 17:48;iveselovskiy;asm-all library version advanced to 5.0.3 .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Not work validation of fields.,IGNITE-5127,13068364,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,02/May/17 09:21,03/May/17 04:18,14/Jul/23 06:20,03/May/17 04:18,2.0,,,,,2.1,,wizards,,,,0,,,,"F.e. Clusters -> General -> Local host,
Clusters -> General -> Static IP addresses.
Clusters -> Binary configuration -> Any class name field.
",,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 03 04:18:21 UTC 2017,,,,,,,,,,"0|i3ectj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/May/17 10:40;vsisko;Fixed fields validation by fix of attribute translation into mixins and extraction of URL type attribute into top level mixins. ;;;","03/May/17 04:18;anovikov;Reviewed. Looks good.
Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite.cache(String) returns null in PluginProvider.onIgniteStart(),IGNITE-5123,13068170,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,eignatiev,npordash,npordash,01/May/17 16:55,28/Aug/17 16:39,14/Jul/23 06:20,24/Jul/17 12:45,2.0,,,,,2.3,,,,,,0,,,,"Given an Ignite node that has pre-configured caches (via IgniteConfiguration.setCacheConfiguration) if you try to obtain a reference to the cache instance in PluginProvider.onIgniteStart() you'll get a null reference.

@Override
public void onIgniteStart() throws IgniteCheckedException {
    ignite.cacheNames().forEach(name -> {
        assert ignite.cache(name) != null : ""Cache is null: "" + name;
    });
}",,agoncharuk,cos,dpavlov,eignatiev,githubbot,kenmy,neeraj.bhatt,npordash,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/May/17 16:56;npordash;ignite-plugin-failure.zip;https://issues.apache.org/jira/secure/attachment/12865781/ignite-plugin-failure.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jul 24 13:10:04 UTC 2017,,,,,,,,,,"0|i3ebmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/May/17 16:56;npordash;Reproducer project attached;;;","12/Jul/17 09:34;githubbot;GitHub user YevIgn opened a pull request:

    https://github.com/apache/ignite/pull/2285

    IGNITE-5123

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/YevIgn/ignite ignite-5123

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2285.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2285
    
----
commit b329b100549d6608f126bc35c9cc62c2e6e693e7
Author: Evgeniy Ignatiev <evgeniy_ignatiev@epam.com>
Date:   2017-07-12T09:33:06Z

    IGNITE-5123 Reorder ignite plugin provider on Ignite start callback call
    
    So that PluginProvider#onIgniteStart will be called after internal
    components start callbacks have been executed to comply with itself
    javadoc.

----
;;;","12/Jul/17 09:40;eignatiev;The problem seems to be because PluginProvider#onIgniteStart is actually called before internal components #onKernalStart callbacks are executed, contrarwise to the javadoc of #onIgniteStart, the solution seems to simply move PluginProvider notification after internal components callbacks.;;;","12/Jul/17 11:51;eignatiev;[~agoncharuk], Please review my changes.;;;","19/Jul/17 15:50;dpavlov;See also related discussions on dev list 
http://apache-ignite-developers.2346864.n4.nabble.com/IGNITE-5123-td19337.html
http://apache-ignite-developers.2346864.n4.nabble.com/IGNITE-5123-Review-td19813.html ;;;","20/Jul/17 14:30;eignatiev;Rerun tests in ""Run All"" Ignite 2.0 group after merge with the latest master - http://ci.ignite.apache.org/viewLog.html?buildId=734705&tab=queuedBuildOverviewTab - Do you see any issues with them? (Unfortunately I have too little experience with Ignite tests to judge.)
;;;","20/Jul/17 15:37;dpavlov;[~eignatiev], let me check the results for you. I'll respond to dev list;;;","20/Jul/17 19:56;cos;Are we tracking the JIRA in two different places? It might create an inconvenience if anyone would ever need to follow through the discussion. It makes sense to keep the JIRA discussion on the ticket (or in the PR _if_ such PR is named correctly and ASF Infra bot can publish the updates to the JIRA automatically).
;;;","20/Jul/17 20:01;dpavlov;[~cos], is my understanding correct that better place to discuss ticket is JIRA/PR comments, but not dev list, for example, thread http://apache-ignite-developers.2346864.n4.nabble.com/IGNITE-5123-Review-td19813.html ?;;;","20/Jul/17 20:09;cos;I am _not_ saying one is better than another (and the example you've provided doesn't look that much ticket specific for me, really). I am saying that splitting the discussion through the multiple sources makes it harder for people to use later.;;;","24/Jul/17 10:29;agoncharuk;I'm ok with the changes as long as TC is ok;;;","24/Jul/17 12:05;dpavlov;[~avinogradov], could you please merge this fix? 
See also http://apache-ignite-developers.2346864.n4.nabble.com/IGNITE-5123-Review-td19813.html for more details on this issue;;;","24/Jul/17 12:45;sboikov;Merged into master.;;;","24/Jul/17 13:10;githubbot;Github user YevIgn closed the pull request at:

    https://github.com/apache/ignite/pull/2285
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST example is broken,IGNITE-5122,13067957,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,skozlov,skozlov,29/Apr/17 20:53,30/Apr/17 15:05,14/Jul/23 06:20,30/Apr/17 15:05,2.0,,,,,2.0,,,,,,0,,,,REST example {{examples/rest/http-rest-example.php}} is broken due to missing a cache name for requests.,,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-29 20:53:30.0,,,,,,,,,,"0|i3eab3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST API call with empty cache name causes NPE,IGNITE-5121,13067956,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,shroman,skozlov,skozlov,29/Apr/17 20:51,24/May/17 08:21,14/Jul/23 06:20,24/May/17 08:20,2.0,,,,,2.1,,,,,,0,,,,"Request cache entry without cacheName causes NPE on the node:
{noformat}
[19:58:33,960][SEVERE][qtp153051342-48][GridJettyRestProtocol] Failed to process HTTP request [action=/ignite, req=(POST /ignite?cmd=get&key=mykey-529&clientId=2128506-ad94-4a21-a711-529&cacheName=)@2130154253 org.eclipse.jetty.server.Request@7ef7930d]
class org.apache.ignite.IgniteCheckedException: null
	at org.apache.ignite.internal.util.IgniteUtils.cast(IgniteUtils.java:7242)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor$2.body(GridRestProcessor.java:172)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at java.util.concurrent.ConcurrentHashMap.hash(ConcurrentHashMap.java:333)
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:988)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.cache(GridCacheProcessor.java:3439)
	at org.apache.ignite.internal.processors.rest.handlers.cache.GridCacheCommandHandler.localCache(GridCacheCommandHandler.java:752)
	at org.apache.ignite.internal.processors.rest.handlers.cache.GridCacheCommandHandler.executeCommand(GridCacheCommandHandler.java:678)
	at org.apache.ignite.internal.processors.rest.handlers.cache.GridCacheCommandHandler.handleAsync(GridCacheCommandHandler.java:427)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor.handleRequest(GridRestProcessor.java:266)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor.access$100(GridRestProcessor.java:89)
	at org.apache.ignite.internal.processors.rest.GridRestProcessor$2.body(GridRestProcessor.java:155)
	... 4 more
{noformat}",,githubbot,shroman,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 24 08:21:28 UTC 2017,,,,,,,,,,"0|i3eaav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/May/17 05:46;githubbot;GitHub user shroman opened a pull request:

    https://github.com/apache/ignite/pull/1920

    IGNITE-5121: REST API call with empty cache name to call ""default.""

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/shroman/ignite IGNITE-5121

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1920.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1920
    
----
commit 7b3d627449410ee0d452ed89dabae747534d632f
Author: shroman <rshtykh@yahoo.com>
Date:   2017-05-09T05:45:57Z

    IGNITE-5121: REST API call with empty cache name to call ""default.""

----
;;;","24/May/17 01:12;shroman;[~s.kozlov] Can you please verify it is fixed?;;;","24/May/17 07:36;skozlov;[~roman_s] The fix successfully tested. Now ignite throws the expected exception and error message for REST response. Thanks for contribution.;;;","24/May/17 08:20;shroman;Merged to master.;;;","24/May/17 08:21;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1920
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken compilation for LGPL fabric edition,IGNITE-5120,13067934,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,skozlov,skozlov,skozlov,29/Apr/17 13:43,29/Apr/17 21:01,14/Jul/23 06:20,29/Apr/17 21:01,2.0,,,,,2.0,,build,,,,0,,,,"The fabric edition can't be complied with lgpl profile:
{noformat}
mvn clean package  -Prelease,lgpl -Dignite.edition=fabric-lgpl -DskipTests
...
Downloaded: https://repo.maven.apache.org/maven2/org/hibernate/hibernate-core/4.2.21.Final/hibernate-core-4.2.21.Final.jar (4592 KB at 3578.8 KB/sec)
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO]
[INFO] ignite-apache-license-gen .......................... SUCCESS [ 35.812 s]
[INFO] ignite-tools ....................................... SUCCESS [ 51.923 s]
[INFO] ignite-core ........................................ SUCCESS [02:30 min]
[INFO] ignite-log4j ....................................... SUCCESS [  3.119 s]
[INFO] ignite-indexing .................................... SUCCESS [ 12.571 s]
[INFO] ignite-urideploy ................................... SUCCESS [  4.896 s]
[INFO] ignite-spring ...................................... SUCCESS [  4.876 s]
[INFO] ignite-hadoop ...................................... SUCCESS [ 43.381 s]
[INFO] ignite-extdata-p2p ................................. SUCCESS [  4.034 s]
[INFO] ignite-extdata-uri-dep ............................. SUCCESS [  1.825 s]
[INFO] ignite-extdata-uri ................................. SUCCESS [  1.353 s]
[INFO] ignite-rest-http ................................... SUCCESS [  5.660 s]
[INFO] ignite-clients ..................................... SUCCESS [  3.208 s]
[INFO] ignite-spring-data ................................. SUCCESS [  4.394 s]
[INFO] ignite-web ......................................... SUCCESS [  3.048 s]
[INFO] ignite-aop ......................................... SUCCESS [  4.712 s]
[INFO] ignite-ssh ......................................... SUCCESS [  2.761 s]
[INFO] ignite-jta ......................................... SUCCESS [ 13.427 s]
[INFO] ignite-aws ......................................... SUCCESS [  8.144 s]
[INFO] ignite-log4j2 ...................................... SUCCESS [  4.777 s]
[INFO] ignite-slf4j ....................................... SUCCESS [  2.809 s]
[INFO] ignite-jcl ......................................... SUCCESS [  2.857 s]
[INFO] ignite-codegen ..................................... SUCCESS [  2.166 s]
[INFO] ignite-gce ......................................... SUCCESS [  7.182 s]
[INFO] ignite-cloud ....................................... SUCCESS [ 33.800 s]
[INFO] ignite-mesos ....................................... SUCCESS [  6.682 s]
[INFO] ignite-kafka ....................................... SUCCESS [ 22.972 s]
[INFO] ignite-flume ....................................... SUCCESS [  7.512 s]
[INFO] ignite-yarn ........................................ SUCCESS [ 16.315 s]
[INFO] ignite-jms11 ....................................... SUCCESS [  5.567 s]
[INFO] ignite-twitter ..................................... SUCCESS [  7.928 s]
[INFO] ignite-mqtt ........................................ SUCCESS [01:05 min]
[INFO] ignite-zookeeper ................................... SUCCESS [  4.415 s]
[INFO] ignite-camel ....................................... SUCCESS [  7.775 s]
[INFO] ignite-storm ....................................... SUCCESS [ 11.099 s]
[INFO] ignite-osgi-paxlogging ............................. SUCCESS [  0.284 s]
[INFO] ignite-osgi-karaf .................................. SUCCESS [  0.677 s]
[INFO] ignite-osgi ........................................ SUCCESS [ 25.125 s]
[INFO] ignite-appserver-test .............................. SUCCESS [  0.199 s]
[INFO] ignite-websphere-test .............................. SUCCESS [  5.006 s]
[INFO] ignite-cassandra ................................... SUCCESS [  0.088 s]
[INFO] ignite-cassandra-store ............................. SUCCESS [ 36.538 s]
[INFO] ignite-cassandra-serializers ....................... SUCCESS [  3.664 s]
[INFO] ignite-flink ....................................... SUCCESS [ 22.355 s]
[INFO] ignite-kubernetes .................................. SUCCESS [  2.073 s]
[INFO] ignite-zeromq ...................................... SUCCESS [  2.446 s]
[INFO] ignite-rocketmq .................................... SUCCESS [  6.950 s]
[INFO] ignite-hibernate_4.2 ............................... FAILURE [  2.575 s]
[INFO] ignite-hibernate_5.1 ............................... SKIPPED
[INFO] ignite-hibernate-core .............................. SKIPPED
[INFO] ignite-geospatial .................................. SKIPPED
[INFO] ignite-schedule .................................... SKIPPED
[INFO] ignite-scalar ...................................... SKIPPED
[INFO] ignite-spark ....................................... SKIPPED
[INFO] ignite-visor-console ............................... SKIPPED
[INFO] ignite-visor-plugins ............................... SKIPPED
[INFO] apache-ignite ...................................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11:41 min
[INFO] Finished at: 2017-04-29T16:38:55+03:00
[INFO] Final Memory: 272M/1094M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal on project ignite-hibernate_4.2: Could not resolve dependencies for project org.apache.ignite:ignite-hibernate_4.2:jar:
2.0.0: Could not find artifact org.apache.ignite:ignite-hibernate-core:jar:2.0.0 in central (https://repo.maven.apache.org/maven2) -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :ignite-hibernate_4.2
{noformat}

Looks like the the reason of failure is wrong orger of hibernate modules compilation:
{noformat}
[INFO] ignite-hibernate_4.2 ............................... FAILURE [  2.575 s]
[INFO] ignite-hibernate_5.1 ............................... SKIPPED
[INFO] ignite-hibernate-core .............................. SKIPPED
{noformat}

But {{ignite-hibernate-core}} must be compiled first.",,kuaw26,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Apr 29 16:29:06 UTC 2017,,,,,,,,,,"0|i3ea5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Apr/17 14:09;kuaw26;I pushed fix to ignite-2.0.

Please test.;;;","29/Apr/17 16:29;skozlov;still failed
{noformat}
[18:46:35] :                         [exec] [INFO] ignite-websphere-test ............................. SUCCESS [4.426s]
[18:46:35] :                         [exec] [INFO] ignite-cassandra .................................. SUCCESS [0.110s]
[18:46:35] :                         [exec] [INFO] ignite-cassandra-store ............................ SUCCESS [7.460s]
[18:46:35] :                         [exec] [INFO] ignite-cassandra-serializers ...................... SUCCESS [2.799s]
[18:46:35] :                         [exec] [INFO] ignite-flink ...................................... SUCCESS [2.024s]
[18:46:35] :                         [exec] [INFO] ignite-kubernetes ................................. SUCCESS [1.369s]
[18:46:35] :                         [exec] [INFO] ignite-zeromq ..................................... SUCCESS [1.516s]
[18:46:35] :                         [exec] [INFO] ignite-rocketmq ................................... SUCCESS [1.488s]
[18:46:35] :                         [exec] [INFO] ignite-hibernate-core ............................. FAILURE [22.782s]
[18:46:35] :                         [exec] [INFO] ignite-hibernate_4.2 .............................. SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-hibernate_5.1 .............................. SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-geospatial ................................. SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-schedule ................................... SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-scalar ..................................... SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-spark ...................................... SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-visor-console .............................. SKIPPED
[18:46:35] :                         [exec] [INFO] ignite-visor-plugins .............................. SKIPPED
[18:46:35] :                         [exec] [INFO] apache-ignite ..................................... SKIPPED
[18:46:36] :                         [exec] [INFO] ------------------------------------------------------------------------
[18:46:36] :                         [exec] [INFO] BUILD FAILURE
[18:46:36] :                         [exec] [INFO] ------------------------------------------------------------------------
[18:46:36] :                         [exec] [INFO] Total time: 3:32.962s
[18:46:36] :                         [exec] [INFO] Finished at: Sat Apr 29 18:46:35 MSK 2017
[18:46:36] :                         [exec] [INFO] Final Memory: 233M/787M
[18:46:36] :                         [exec] [INFO] ------------------------------------------------------------------------
[18:46:36] :                         [exec] [ERROR] Failed to execute goal on project ignite-hibernate-core: Could not resolve dependencies for project org.apache.ignite:ignite-hibernate-core:jar:2.0.0-SNAPSHOT: Could not find artifact org.apache.ignite:ignite-apache-license-gen:jar:2.0.0-SNAPSHOT in h2database.com (http://h2database.com/m2-repo) -> [Help 1]
[18:46:36] :                         [exec] [ERROR] 
[18:46:36] :                         [exec] [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[18:46:36] :                         [exec] [ERROR] Re-run Maven using the -X switch to enable full debug logging.
[18:46:36] :                         [exec] [ERROR] 
[18:46:36] :                         [exec] [ERROR] For more information about the errors and possible solutions, please read the following articles:
[18:46:36] :                         [exec] [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
[18:46:36] :                         [exec] [ERROR] 
[18:46:36] :                         [exec] [ERROR] After correcting the problems, you can resume the build with the command
[18:46:36] :                         [exec] [ERROR]   mvn <goals> -rf :ignite-hibernate-core
[18:46:37]E:                         [exec] Result: 1
[18:46:37]E:                     [build_ignite] fail
[18:46:37]E:                         [fail] ERROR: mvn clean install -f /home/teamcity/buildAgent/work/ce959aebc895eb20/apache-ignite/pom.xml -Prelease,lgpl -Dignite.edition=fabric-lgpl -DskipTests failed
[18:46:37]E:                 [antcall] The following error occurred while executing this line:
/home/teamcity/buildAgent/work/ce959aebc895eb20/ggtest/teamcity.xml:598: ERROR: mvn clean install -f /home/teamcity/buildAgent/work/ce959aebc895eb20/apache-ignite/pom.xml -Prelease,lgpl -Dignite.edition=fabric-lgpl -DskipTests failed
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Table with name Object lead to compilation error in code generated by webconsole,IGNITE-5118,13067882,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,ezhuravl,ezhuravl,29/Apr/17 05:17,04/May/17 14:17,14/Jul/23 06:20,04/May/17 14:17,1.7,,,,,,,,,,,0,,,,,,anovikov,ezhuravl,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 04 14:17:00 UTC 2017,,,,,,,,,,"0|i3e9uf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/May/17 09:44;vsisko;Fixed type name generation when type name is a Java class name.;;;","04/May/17 14:17;anovikov;Reviewed. Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle cache destroy in DmlStatementsProcessor,IGNITE-5116,13067717,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,28/Apr/17 15:19,05/May/17 11:40,14/Jul/23 06:20,05/May/17 11:40,1.9,,,,,2.1,,sql,,,,0,,,,We have to clear plans cache for Ignite cache that is being destroyed as otherwise cache context leaks with obsolete DML execution plans,,al.psc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-28 15:19:44.0,,,,,,,,,,"0|i3e8tr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Investigation of failing tests of coordinator node failure ,IGNITE-5115,13067712,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,NSAmelchev,sergey-chugunov,sergey-chugunov,28/Apr/17 14:48,24/Dec/18 20:37,14/Jul/23 06:20,24/Dec/18 20:35,,,,,,2.8,,messaging,,,,0,MakeTeamcityGreenAgain,,,"Tests *customEventCoordinatorFailure1/2* from *TcpDiscoverySelfTest* are flaky on TC and sometimes hang with the following assertion in logs:
{code}
Exception in thread ""tcp-disco-msg-worker-#5245%tcp.TcpDiscoverySelfTest0%"" java.lang.AssertionError
	at org.apache.ignite.spi.discovery.tcp.internal.TcpDiscoveryNodesRing.removeNode(TcpDiscoveryNodesRing.java:353)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processNodeFailedMessage(ServerImpl.java:4670)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2567)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.processMessage(ServerImpl.java:2366)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$MessageWorkerAdapter.body(ServerImpl.java:6485)
	at org.apache.ignite.spi.discovery.tcp.ServerImpl$RingMessageWorker.body(ServerImpl.java:2456)
	at org.apache.ignite.spi.IgniteSpiThread.run(IgniteSpiThread.java:62)
{code}

It seems that this happens because tests' implementation drops connections of *TcpCommunicatonSpi* on coordinator node with *simulateNodeFailure* method.
At the same time tests leave *TcpDiscoverySpi* operational; it receives subsequent NodeFailed message and throws the assertion error shown above.

The whole situation looks legitimate as it is possible to imagine a situation when CommSPI connections on coordinator fail for some reason while DiscoSPI connections are healthy.

It is needed to investigate the situation deeper, figure out whether the root cause is using of *simulateNodeFailure* or not and propose a solution if the error may happen in the real life.",,agoncharuk,akalashnikov,DmitriyGovorukhin,githubbot,ignitetcbot,NSAmelchev,sergey-chugunov,voropava,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5445,,,,,,,,,IGNITE-10087,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 24 20:37:58 UTC 2018,,,,,,,,,,"0|i3e8sn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Nov/18 09:30;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/5391

    IGNITE-5115

    Problem was that coordinator fails when process the fail message about itself. Reproducer attached to PR.
    I have fixed this issue by disabling removing itself from the ring (like as on node leaving). When coordinator process message it will send verify message across ring and nodes will remove him from ring map. The new coordinator will send the discard message and ends the node fail process.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite ignite-5115

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/5391.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #5391
    
----
commit e8b41ba1886d736ee46be0559caa230e26e55936
Author: NSAmelchev <nsamelchev@...>
Date:   2018-11-14T09:09:14Z

    Fix coordinator fails

----
;;;","15/Nov/18 10:57;ignitetcbot;{panel:title=No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity Run All Results|http://ci.ignite.apache.org/viewLog.html?buildId=2317539&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","15/Nov/18 11:00;NSAmelchev;Problem was that coordinator fails when process the fail message about itself. Reproducer attached to PR.
I have fixed this issue by disabling removing itself from the ring (like as on node leaving). When coordinator process message it will send verify message across ring and nodes will remove him from ring map. The new coordinator will send the discard message and ends the node fail process.

Could anyone review, please?;;;","27/Nov/18 12:32;ignitetcbot;{panel:title=Possible Blockers|borderStyle=dashed|borderColor=#ccc|titleBGColor=#F7D6C1}
{color:#d04437}[Inspections] Core{color} [[tests 0 BuildFailureOnMetric |https://ci.ignite.apache.org/viewLog.html?buildId=2400898]]

{panel}
[TeamCity Run All Results|https://ci.ignite.apache.org/viewLog.html?buildId=2400902&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","27/Nov/18 12:32;NSAmelchev;I have investigated the issue one more time and used the *segmentLocalNodeOnSendFail* method when the failing coordinator gets the message about itself. This is correct behavior if the network fails. TC tests are OK.;;;","29/Nov/18 12:14;voropava;Looks good.;;;","03/Dec/18 11:35;sergey-chugunov;[~NSAmelchev],

Fix looks reasonable to me as well. Could you please improve a bit your test and add a check for EVT_NODE_FAILED to verify that event was received about expected node?

After that I believe we could proceed with merging this fix.

Thank you!;;;","04/Dec/18 10:56;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2452751&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","04/Dec/18 10:59;NSAmelchev;[~sergey-chugunov], [~voropava] Thanks for taking a look! 
I have improved test by adding some checks.;;;","04/Dec/18 13:49;agoncharuk;[~NSAmelchev], why do we fail the old coordinator if a non-verified message is received? From the explanation above I thought the message should have been verified by another node that already became a coordinator.

[~yzhdanov], can you take a look? The change seems a bit dangerous to me, because we fail the coordinator node when a non-verified message is received.;;;","04/Dec/18 15:20;yzhdanov;[~agoncharuk] [~voropava] [~NSAmelchev]

Overall idea seems to be absolutely valid. However, new code seems to fail if user configures NOOP segmentation policy - coordinator will not stop. So we need to have guaranteed way to stop coordinator.

Cancelling patch for now

Yakov;;;","05/Dec/18 09:45;NSAmelchev;[~yzhdanov], Hi.
Could you explain why the coordinator should be stopped, please? In my case behavior the same as failing non-coordinator node. If the segmentation policy is NOOP the failing node close connections and will not be stopped.;;;","05/Dec/18 10:15;agoncharuk;I think we should only stop discovery SPI on coordinator in the aforementioned case. Then the coordinator should raise the {{SEGMENTED}} event and the node will stop if the corresponding policy is set.;;;","05/Dec/18 10:41;NSAmelchev;[~agoncharuk],  In my fix, the behavior is the same, except for *disconnect discovery, not stopping*. 

I call the method _segmentLocalNodeOnSendFail()_. It notifies discovery with the _EVT_NODE_SEGMENTED_ event and then _DiscoveryWorker_ process it and call the _onSegmentation()_ method where discovery disconnecting from topology and applying segmentation policy. ;;;","06/Dec/18 15:39;yzhdanov;[~NSAmelchev] can you please add the same test with NOOP segmentation policy and check ee if it works correclty?;;;","07/Dec/18 08:06;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2485243&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","07/Dec/18 08:10;NSAmelchev;[~yzhdanov],
I have added the same test for NOOP segmentation policy ([see PR|https://github.com/apache/ignite/pull/5391/files]). It works fine. Also, I have tested on TC one more time. ;;;","18/Dec/18 09:22;akalashnikov;Changes and tests looks good for me. I think it can be merged. I have only one minor notes - perhaps it makes sense will add one more node to tests for checking  ring closing after coordinator segmented.;;;","18/Dec/18 14:55;NSAmelchev;[~akalashnikov] , thanks for taking a look at changes! 
I'll add a one more node to test and I'll notify on done.;;;","18/Dec/18 21:50;ignitetcbot;{panel:title=--&gt; Run :: All: No blockers found!|borderStyle=dashed|borderColor=#ccc|titleBGColor=#D6F7C1}{panel}
[TeamCity *--&gt; Run :: All* Results|https://ci.ignite.apache.org/viewLog.html?buildId=2574612&amp;buildTypeId=IgniteTests24Java8_RunAll];;;","18/Dec/18 21:53;NSAmelchev;[~akalashnikov], I have added one more node to the test and added checks for the failed event and new discovery ring size. TC tests look good. Please, take a look one more time.;;;","19/Dec/18 06:52;akalashnikov;[~NSAmelchev] thanks, looks good. [~agoncharuk] could you help with merge, please.;;;","24/Dec/18 20:35;DmitriyGovorukhin;Thanks to all guys, changes merged to master.;;;","24/Dec/18 20:37;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/5391
;;;",,,,,,,,,,,,,,,,,,
Refactoring for SparseDistributedMatrix,IGNITE-5109,13067633,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,chief,chief,28/Apr/17 08:39,30/Jun/17 17:42,14/Jul/23 06:20,03/May/17 17:03,,,,,,2.1,,ml,,,,0,,,,"According to [~agoncharuk] we should change logic of this matrix. Creating new cache each time when we create new matrix is really bad idea.

So we must use one dedicated cache for ML matrices.",,chief,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5029,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 03 20:23:38 UTC 2017,,,,,,,,,,"0|i3e8b3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/May/17 16:36;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/1903

    IGNITE-5109 Refactoring for SparseDistributedMatrix:

    Use one cache for all instances of SparseDistributedMatrix.
    
    Also added some tests and fixed get() and destroy() behavior for SparseDistributedMatrix.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5109

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1903.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1903
    
----
commit c42f68fb1bb574f5299364152de1655a2ef20ce6
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-05-02T10:55:06Z

    IGNITE-5109 Refactoring for SparseDistributedMatrix:
      WIP

commit 5f24345b28c30a65f29100a4708ed36fa5199c49
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-05-02T11:25:31Z

    IGNITE-5109 Refactoring for SparseDistributedMatrix:
      WIP

commit c4a44e1a9732456b57942257f89d2a45e16e6f94
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-05-03T15:16:46Z

    IGNITE-5109 Refactoring for SparseDistributedMatrix:
      call get from remote node in case we don't have this entry in local node.

commit a9872a574ab3fb36f9695a0a2544dff67774282e
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-05-03T15:48:08Z

    IGNITE-5109 Refactoring for SparseDistributedMatrix:
      fix SparseDistributedMatrix.destroy() behaviour
      added testCacheBehaviour

----
;;;","03/May/17 20:23;githubbot;Github user ybabak closed the pull request at:

    https://github.com/apache/ignite/pull/1903
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Website still contains links to to ""incubator-ignite"" ",IGNITE-5106,13067490,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,cos,cos,27/Apr/17 20:01,07/May/18 11:54,14/Jul/23 06:20,17/May/17 19:21,1.1.4,,,,,2.0,,site,,,,0,,,,"At least some of the examples referred by the website pages are pointed to ""incubator-ignite"" mirror on the github. Which were empty for a long time.

Let's get this fixed.",,cos,dmagda,pgarg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 17 19:21:08 UTC 2017,,,,,,,,,,"0|i3e7fb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 20:04;cos;One of the spots is here
- https://svn.apache.org/viewvc/ignite/site/trunk/features/streaming.html?view=markup;;;","27/Apr/17 20:08;dmagda;[~pgarg], could you please handle this?;;;","17/May/17 18:46;dmagda;[~pgarg], as far as I understand you did this task? Can it be closed?;;;","17/May/17 19:21;pgarg;Removed all occurrences of 'incubator' from the website.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TcpDiscoverySpi ignores maxMissedClientHeartbeats property,IGNITE-5103,13067401,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ezhuravl,vkulichenko,vkulichenko,27/Apr/17 14:27,10/Aug/18 11:28,14/Jul/23 06:20,10/Aug/18 11:24,1.9,,,,,2.7,,general,,,,0,,,,"Test scenario is the following:
* Start one or more servers.
* Start a client node.
* Suspend client process using {{-SIGSTOP}} signal.
* Wait for {{maxMissedClientHeartbeats*heartbeatFrequency}}.
* Client node is expected to be removed from topology, but server nodes don't do that.

Attached is the unit test reproducing the same by stopping the heartbeat sender thread on the client.",,agoncharuk,akalashnikov,amashenkov,dkarachentsev,DmitriyGovorukhin,ezhuravl,githubbot,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5015,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 14:28;vkulichenko;TcpDiscoveryClientSuspensionSelfTest.java;https://issues.apache.org/jira/secure/attachment/12865377/TcpDiscoveryClientSuspensionSelfTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 10 11:28:56 UTC 2018,,,,,,,,,,"0|i3e6vj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/17 09:22;dkarachentsev;[~sboikov],

Please review [PR 2284|https://github.com/apache/ignite/pull/2284];;;","14/Jul/17 11:15;sboikov;Looks ok.;;;","04/Oct/17 13:01;amashenkov;Looks like it wasn't merged to master by some reason.
Aslo I've found there is similar issue IGNITE-4799.

We have to check if IGNITE-4799 resolved this issue and reconsider this fix.;;;","04/Oct/17 14:28;amashenkov;I'd think that with having maxMissedClientHeartbeats and heartbeatFrequency and failureDetectionTimeout parameters 
grid should drop slow client node if it missed ""maxMissedClientHeartbeats"" during failureDetectionTimeout.

But looking at a code I see we just calculate failureDetectionTimeout for client nodes as maxMissedClientHeartbeats*heartbeatFrequency.

From user perspective, having failureDetectionTimeout and clientFailureDetectionTimeout is much less confusing.
So, looks like this can be closed as won't fix.

;;;","27/Jul/18 14:02;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/4446

    IGNITE-5103 - Server drops client node from cluster when no metrics u…

    …pdate messages received in clienFailureDetectionTimeout

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5103

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4446.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4446
    
----
commit 63733ec7ce2875bf92a473534506ee0d354346ba
Author: ezhuravl <ezhuravlev@...>
Date:   2018-07-27T13:51:04Z

    IGNITE-5103 - Server drops client node from cluster when no metrics update messages received in clienFailureDetectionTimeout

----
;;;","31/Jul/18 09:48;ezhuravl;Here is the link for the tc: https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_RunAll&branch_IgniteTests24Java8=pull%2F4446%2Fhead&tab=buildTypeStatusDiv
After this run I've fixed several tests and rerun few jobs again.;;;","03/Aug/18 09:51;DmitriyGovorukhin;[~akalashnikov] Please, review this changes. The link in an attached.;;;","06/Aug/18 09:28;akalashnikov;Changes looks good for me. But various tests in SPI suit started to fail often than usual. Perhaps we will need to change tests or maybe clientFailureDetectionTimeout is incorrect.

https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_Spi&branch_IgniteTests24Java8=pull%2F4446%2Fhead&tab=buildTypeStatusDiv

[~ezhuravl], can do you check it?;;;","09/Aug/18 09:52;ezhuravl;[~akalashnikov], thank you for review. I've fixed tests from this suite by increasing clientFailureDetectionTimeout for these tests and some additional changes for certain tests: 
https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_Spi&branch_IgniteTests24Java8=pull%2F4446%2Fhead&tab=buildTypeStatusDiv;;;","09/Aug/18 11:52;akalashnikov;Thanks, Evgenii. Now everything looks good for me. I think it can be merged.;;;","10/Aug/18 11:24;agoncharuk;Thanks, [~ezhuravl], merged your changes to master.;;;","10/Aug/18 11:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4446
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Exchange queue is not used properly,IGNITE-5100,13067305,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,ascherbakov,ascherbakov,27/Apr/17 09:23,10/Dec/18 16:45,14/Jul/23 06:20,19/Jun/17 11:38,1.6,,,,,2.1,,general,,,,0,,,,"Currently exchange futures share same queue for pending(incomplete) and completed exchanges.

The queue has fixed hardcoded size of 1000.

This leads to a problem when > 1000 nodes try to enter grid.

In such case oldest exchanges will be removed by ExchangeFutureSet size limit, leading to whole exchange hanging.

Solution: 

1. Use separate queues for pending and completed exchanges.

2. Pending exchange queue must be unbounded.

3. Add system property to control exchange history.

",,ascherbakov,githubbot,sboikov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:45:05 UTC 2018,,,,,,,,,,"0|i3e6a7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/17 13:07;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/1955

    IGNITE-5100 don`t remove active exchange events from exchange list

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5100

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1955.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1955
    
----
commit f8157297707b30d6230e666752db3419b0a34b9f
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-05-16T13:04:18Z

    IGNITE-5100 don`t remove active exchange events from exchange list

----
;;;","17/May/17 06:55;zstan;tests looks like correct: http://ci.ignite.apache.org/viewQueued.html?itemId=611081

failed :
TcpDiscoverySslSelfTest.testFailBeforeNodeAddedSent 
IgniteCacheConnectionRecovery10ConnectionsTest.testConnectionRecovery - looks like flapped, work properly well on my local.

RandomLruNearEnabledPageEvictionMultinodeTest.testPageEviction
and 
IgniteCacheJoinPartitionedAndReplicatedTest.testReplicatedToPartitionedLeftJoin

probably not mine, due to fail in parent branch too.;;;","13/Jun/17 13:16;zstan;IGNITE_EXCHANGE_HISTORY_SIZE=1 test append;;;","19/Jun/17 11:38;sboikov;Merged into master.

Thanks!;;;","10/Dec/18 16:45;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/1955
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missed ignite-rocketmq/licenses/apache-2.0.txt,IGNITE-5098,13067291,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,ustas,ustas,27/Apr/17 08:54,27/Apr/17 09:06,14/Jul/23 06:20,27/Apr/17 09:06,,,,,,2.0,,,,,,0,,,,Need to add $IGNITE_HOME/libs/optional/ignite-rocketmq/licenses/apache-2.0.txt,,agoncharuk,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 27 09:06:37 UTC 2017,,,,,,,,,,"0|i3e673:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 09:06;agoncharuk;Added missing license file;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Too many files with unapproved license,IGNITE-5096,13067262,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ustas,ustas,ustas,27/Apr/17 06:42,11/Jul/17 06:53,14/Jul/23 06:20,27/Apr/17 06:57,2.0,,,,,2.0,,,,,,0,,,,"Steps to reproduce:
mvn clean validate -DskipTests=true -P check-licenses

Result:

{noformat}
[INFO] apache-ignite ...................................... FAILURE [  1.429 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 54.186 s
[INFO] Finished at: 2017-04-27T09:36:47+03:00
[INFO] Final Memory: 62M/479M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.rat:apache-rat-plugin:0.11:check (default) on project apache-ignite: Too many files with unapproved license: 3 See RAT report
{noformat}

RAT report attached to this ticket.",,kuaw26,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 06:43;ustas;rat.txt;https://issues.apache.org/jira/secure/attachment/12865291/rat.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 27 06:57:55 UTC 2017,,,,,,,,,,"0|i3e60n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 06:57;kuaw26;Fixed web-console icons RAT check.
Please retest in ignite-2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eviction tracker does not evict data pages when near cache is enabled,IGNITE-5094,13067106,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,agoncharuk,agoncharuk,26/Apr/17 16:56,27/Apr/17 09:38,14/Jul/23 06:20,27/Apr/17 09:38,2.0,,,,,2.0,,cache,,,,0,,,,,,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 27 09:38:50 UTC 2017,,,,,,,,,,"0|i3e51z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 09:38;agoncharuk;Merged to ignite-2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TC should check Examples on each regression.,IGNITE-5092,13067068,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,avinogradov,avinogradov,26/Apr/17 13:46,26/Apr/17 14:18,14/Jul/23 06:20,26/Apr/17 14:18,,,,,,2.0,,,,,,0,,,,,,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-26 13:46:05.0,,,,,,,,,,"0|i3e4tj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enum comparison fails after marshal-unmarshal with BinaryMarshaller.,IGNITE-5087,13067007,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,NSAmelchev,amashenkov,amashenkov,26/Apr/17 10:17,21/May/18 16:29,14/Jul/23 06:20,10/Jul/17 12:43,1.9,,,,,2.3,,binary,,,,1,,,,"PFA repro.
It fails on 1.9 and on 2.0-snapshot as well.",,amashenkov,avinogradov,githubbot,NSAmelchev,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-8547,,,,,,,,,,,,"26/Apr/17 10:17;amashenkov;EnumBinaryMarshallerBug.java;https://issues.apache.org/jira/secure/attachment/12865120/EnumBinaryMarshallerBug.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 04 08:27:04 UTC 2017,,,,,,,,,,"0|i3e4fz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Apr/17 14:17;amashenkov;Actually, we check if object is enum instance by calling 'isEnum()' method on class.

It works fine if it is enum constant. But enum objects type is anonymous class and isEnum() method on it returns false, 
that leads these object to be serialized as regular objects.

Startpoint is BinaryFieldAccessor.mode() method. It uses to detect serialization mode for field value type, but not for field type itself. 
Also seems, we should write enum.getDeclaredClass name instead of value class. See BinaryWriterImpl.doWriteEnum().

;;;","26/May/17 15:06;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/2015

    IGNITE-5087

    Fix Enum comparison fails after marshal-unmarshal with BinaryMarshaller.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite IGNITE-5087

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2015.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2015
    
----
commit bca9756cc4fbe3e89fbc29453d94619d2f90c95b
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-07T14:04:02Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit fc8ed83579ee9781061490041c0cce553c9a4025
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-03-27T12:45:44Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 1c7493cbb5de000f1c131745c90b93d7b57d4d50
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-04T09:50:52Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 91703d9004a4f68bfd2ca694c93b6c3b2fb45101
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-17T12:06:48Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 7e0e55e52812d605cde570ca5b50c5764d69e0fb
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-25T09:27:33Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit e603cc6107b6a972d752fb2176bf1d1461058584
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T14:23:21Z

    Merge branch 'master' of https://github.com/apache/ignite

commit e66897fddff3818c136e9d9afebe5b4bec802abe
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-04T08:35:19Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit e8068b07fb8a7079385b113da821587fef4348c4
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-18T10:17:40Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit fd9c2823571130cd4093a20e7d46563df6f4aade
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-22T13:35:26Z

    Merge branch 'master' of https://github.com/apache/ignite

commit 5dfee14838190c90155ea7a34a9d9e8f75cfb868
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T12:46:10Z

    Add fix and test for enum with declared body

commit 8e5fc52fdf998fa2af142e65823fa3b9d0bc4a2a
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T12:55:28Z

    Test refactoring

commit 1d7fa342a05e9fee7b9ef10a5b3d0289363ada6b
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T13:52:10Z

    Add method isEnum

commit 6fbf6a304f243ef80b4e1012d4c30ef15272a70e
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T14:03:45Z

    Javadoc refactor

commit 108df9521fed3d14762c2f697a791fb64dda5c11
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T14:10:38Z

    javadoc fix

commit 481e5e9ff24b23fb8616e1ce17ec47aab32c2e53
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T14:16:51Z

    Merge remote-tracking branch 'apache/master'

commit ca500a345fb1eef6ba567585d04bbbbac8d666db
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T14:32:54Z

    Merge remote-tracking branch 'apache/master' into IGNITE-5087
    
    # Conflicts:
    #	modules/core/src/test/java/org/apache/ignite/internal/binary/BinaryEnumsSelfTest.java

commit 305cd99e669eff149a502c221d80711399130c87
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T14:34:58Z

    Method refactor

commit cfd3250618c0b05be988000b3f456c61cf9f5b30
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-05-26T14:39:35Z

    Merge remote-tracking branch 'refs/remotes/origin/master' into IGNITE-5087

----
;;;","28/Jun/17 08:28;NSAmelchev;[~amashenkov]
I fixed it, please review;;;","28/Jun/17 10:06;amashenkov;Looks fine.

We should add a test in BinaryMarshallerSelfTest as well (as it done in attached repro with marshal-unmarshal approach) before merge to master.;;;","28/Jun/17 12:20;NSAmelchev;[~amashenkov]
I add a test in BinaryMarshallerSelfTest. I left only binary marshaller enum test so as change applied only the BinaryMarshaller. In addition I add test to BinaryEnumsSelfTest.
Please, review.;;;","04/Jul/17 15:05;vozerov;[~NSAmelchev], fix looks good to me. Did you run TC tests?;;;","04/Jul/17 15:47;NSAmelchev;[~vozerov] Yes, [TC tests|http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F2015%2Fhead];;;","04/Jul/17 17:13;avinogradov;[~NSAmelchev]
Please check that there is no stability drop as compared with master.;;;","07/Jul/17 13:12;avinogradov;[~amashenkov], 
Nikita checked TC, could you please recheck to make sure we did not miss something?

In case everything is ok please let me know and I'll merge changes to master.;;;","07/Jul/17 13:25;NSAmelchev;[~amashenkov] Yesterday I checked all tests and compared with master. I dont see any problems.;;;","07/Jul/17 14:08;amashenkov;[~NSAmelchev],
.NET test fails due to timeout. I see it was failed in master earlier, but looks fixed right now.
Would you please merge your PR with lastest master and check .NET test again?

The rest tests looks perfect.;;;","07/Jul/17 15:36;NSAmelchev;[~amashenkov]  I done it. It seems there are no problems at latest master.;;;","10/Jul/17 10:37;amashenkov;Great! 
TC tests looks fine. Can be merged.

[~NSAmelchev], thanks for contribution.;;;","10/Jul/17 12:43;avinogradov;Merged to master branch;;;","04/Dec/17 08:27;githubbot;Github user NSAmelchev closed the pull request at:

    https://github.com/apache/ignite/pull/2015
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityPermissionSetBuilder duplicates permission if it's appended more than once,IGNITE-5081,13066706,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,25/Apr/17 14:26,02/May/17 11:13,14/Jul/23 06:20,02/May/17 11:13,1.9,,,,,2.1,,general,,,,0,,,,"If the same permission is appended to builder more than once, builder duplicates it in the resulting collection. This doesn't actually break anything, but seems to be redundant.

Example:
{code}
new SecurityPermissionSetBuilder()
    .appendSystemPermissions(ADMIN_VIEW)
    .appendSystemPermissions(ADMIN_VIEW, ADMIN_QUERY)
    .build();
{code}",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-25 14:26:02.0,,,,,,,,,,"0|i3e2l3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SecurityBasicPermissionSet implementation is incomplete,IGNITE-5080,13066704,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,25/Apr/17 14:23,02/May/17 11:12,14/Jul/23 06:20,02/May/17 11:12,1.9,,,,,2.1,,general,,,,0,,,,"There are several issues with {{SecurityBasicPermissionSet}}:
* It doesn't implement {{hashCode}} and {{equals}} methods. This makes it impossible to use it as part of validation token.
* {{Collection}} fields are not marked with {{@GridToStringInclude}} annotation, so {{toString}} method doesn't actually print out all the information.
* {{systemPermissions}} method returns empty collection instead of {{null}} by default. This actually means 'no system permissions' even if {{defaultAllowAll}} is true.",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-25 14:23:40.0,,,,,,,,,,"0|i3e2kn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QueryWords example fails with exception,IGNITE-5069,13066376,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,vozerov,yzhdanov,yzhdanov,24/Apr/17 15:29,25/Apr/17 08:22,14/Jul/23 06:20,25/Apr/17 08:22,,,,,,2.0,,examples,,,,0,,,,"[~sergi.vladykin], please have a look. It may happen so that avg(cnt) in former Ignite versions was returned as double for long column. For current master it is returned as long and causes exception in formatter. I was able to reproduce it on 1.9 also, but did not try other versions.

Steps to reproduce
# start {{ExampleNodeStartup}}
# start {{QueryWords}}
# start {{StreamWords}}

{noformat}
/opt/jdk/jdk1.8.0_121/bin/java...
org.apache.ignite.examples.streaming.wordcount.QueryWords
[18:20:17]    __________  ________________ 
[18:20:17]   /  _/ ___/ |/ /  _/_  __/ __/ 
[18:20:17]  _/ // (7 7    // /  / / / _/   
[18:20:17] /___/\___/_/|_/___/ /_/ /___/  
[18:20:17] 
[18:20:17] ver. 2.1.0-SNAPSHOT#19700101-sha1:DEV
[18:20:17] 2017 Copyright(C) Apache Software Foundation
[18:20:17] 
[18:20:17] Ignite documentation: http://ignite.apache.org
[18:20:17] 
[18:20:17] Quiet mode.
[18:20:17]   ^-- Logging to file '/home/yzhdanov/projects/incubator-ignite/work/log/ignite-dbfdab2d.log'
[18:20:17]   ^-- To see **FULL** console log here add -DIGNITE_QUIET=false or ""-v"" to ignite.{sh|bat}
[18:20:17] 
[18:20:17] OS: Linux 4.8.0-46-generic amd64
[18:20:17] VM information: Java(TM) SE Runtime Environment 1.8.0_121-b13 Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.121-b13
[18:20:17] Initial heap size is 246MB (should be no less than 512MB, use -Xms512m -Xmx512m).
[18:20:17] Configured plugins:
[18:20:17]   ^-- None
[18:20:17] 
[18:20:17] Message queue limit is set to 0 which may lead to potential OOMEs when running cache operations in FULL_ASYNC or PRIMARY_SYNC modes due to message queues growth on sender and receiver sides.
[18:20:17] Security status [authentication=off, tls/ssl=off]
[18:20:18] REST protocols do not start on client node. To start the protocols on client node set '-DIGNITE_REST_START_ON_CLIENT=true' system property.
[18:20:20] Performance suggestions for grid  (fix if possible)
[18:20:20] To disable, set -DIGNITE_PERFORMANCE_SUGGESTIONS_DISABLED=true
[18:20:20]   ^-- Disable grid events (remove 'includeEventTypes' from configuration)
[18:20:20]   ^-- Enable G1 Garbage Collector (add '-XX:+UseG1GC' to JVM options)
[18:20:20]   ^-- Specify JVM heap max size (add '-Xmx<size>[g|G|m|M|k|K]' to JVM options)
[18:20:20]   ^-- Set max direct memory size if getting 'OOME: Direct buffer memory' (add '-XX:MaxDirectMemorySize=<size>[g|G|m|M|k|K]' to JVM options)
[18:20:20]   ^-- Disable processing of calls to System.gc() (add '-XX:+DisableExplicitGC' to JVM options)
[18:20:20] Refer to this page for more performance suggestions: https://apacheignite.readme.io/docs/jvm-and-system-tuning
[18:20:20] 
[18:20:20] To start Console Management & Monitoring run ignitevisorcmd.{sh|bat}
[18:20:20] 
[18:20:20] Ignite node started OK (id=dbfdab2d)
[18:20:20] Topology snapshot [ver=2, servers=1, clients=1, CPUs=4, heap=6.8GB]
Query result set is empty.
Query result set is empty.
[18:20:27] Topology snapshot [ver=3, servers=1, clients=2, CPUs=4, heap=10.0GB]
Query results [avg=[18:20:33] Ignite node stopped OK [uptime=00:00:12:733]
Exception in thread ""main"" java.util.IllegalFormatConversionException: f != java.lang.Long
	at java.util.Formatter$FormatSpecifier.failConversion(Formatter.java:4302)
	at java.util.Formatter$FormatSpecifier.printFloat(Formatter.java:2806)
	at java.util.Formatter$FormatSpecifier.print(Formatter.java:2753)
	at java.util.Formatter.format(Formatter.java:2520)
	at java.io.PrintStream.format(PrintStream.java:970)
	at java.io.PrintStream.printf(PrintStream.java:871)
	at org.apache.ignite.examples.streaming.wordcount.QueryWords.main(QueryWords.java:78)

Process finished with exit code 1

{noformat}",,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-24 15:29:11.0,,,,,,,,,,"0|i3e0jz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Absolute swapFilePath for MemoryPolicy is merged incorrectly with working dir path,IGNITE-5067,13066344,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,sergey-chugunov,sergey-chugunov,24/Apr/17 13:56,28/Aug/17 16:39,14/Jul/23 06:20,21/Jul/17 15:01,2.0,,,,,2.3,,general,,,,0,general,,,"h2. Steps to reproduce
* Create *MemoryPolicyConfiguration* with swapFilePath specified to some *absolute* path
* Start Ignite node with this configuration.

h2. Expected outcome
Swap file is allocated by absolute path specified by configuration.

h2. Actual outcome
Swap file is allocated by path where current working directory is merged with swapFilePath.
",,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-24 13:56:02.0,,,,,,,,,,"0|i3e0cv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Continuous query fails with exception on Java side,IGNITE-5066,13066297,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,24/Apr/17 10:50,24/Apr/17 11:10,14/Jul/23 06:20,24/Apr/17 11:10,1.9,,,,,2.0,,platforms,,,,0,.NET,,,"Reported by the user, simple program being run twice:
{code}
using (IIgnite ignite = Ignition.Start(config))
            {
                var cache = ignite.GetOrCreateCache<Guid, Data>(nameof(Data));
                cache.QueryContinuous(new ContinuousQuery<Guid, Data>(new Listener()));
        
                // Pressing any key in the console will add a value to the cache
                while (true)
                {
                    Console.ReadKey();

                    var entry = new Data() { Id = Guid.NewGuid(), Value = ""a value"" };
                    cache.Put(entry.Id, entry);
                }
            }
{code}

Causes exceptions on Java side:
{code}
Exception in thread ""sys-#44%null%"" javax.cache.event.CacheEntryListenerException: Failed resolve class for ID: 3076010
        at org.apache.ignite.internal.processors.platform.utils.PlatformUtils.toCacheEntryListenerException(PlatformUtils.java:593)
        at org.apache.ignite.internal.processors.platform.utils.PlatformUtils.applyContinuousQueryEvents(PlatformUtils.java:551)
        at org.apache.ignite.internal.processors.platform.cache.query.PlatformContinuousQueryImpl.onUpdated(PlatformContinuousQueryImpl.java:200)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.notifyCallback0(CacheContinuousQueryHandler.java:705)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.notifyCallback(CacheContinuousQueryHandler.java:650)
        at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.processNotification(GridContinuousProcessor.java:1089)
        at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.access$2000(GridContinuousProcessor.java:97)
        at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor$8.onMessage(GridContinuousProcessor.java:741)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1222)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$2000(GridIoManager.java:108)
        at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2443)
        at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1182)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$2300(GridIoManager.java:108)
        at org.apache.ignite.internal.managers.communication.GridIoManager$8.run(GridIoManager.java:1151)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Unknown Source)
Caused by: class org.apache.ignite.binary.BinaryObjectException: Failed resolve class for ID: 3076010
        at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:699)
        at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize0(BinaryReaderExImpl.java:1491)
        at org.apache.ignite.internal.binary.BinaryReaderExImpl.deserialize(BinaryReaderExImpl.java:1450)
        at org.apache.ignite.internal.binary.BinaryObjectImpl.deserializeValue(BinaryObjectImpl.java:637)
        at org.apache.ignite.internal.binary.BinaryObjectImpl.value(BinaryObjectImpl.java:142)
        at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinary(CacheObjectContext.java:272)
        at org.apache.ignite.internal.processors.cache.CacheObjectContext.unwrapBinaryIfNeeded(CacheObjectContext.java:160)
        at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryEvent.getValue(CacheContinuousQueryEvent.java:73)
        at org.apache.ignite.internal.processors.platform.utils.PlatformUtils.writeCacheEntryEvent(PlatformUtils.java:606)
        at org.apache.ignite.internal.processors.platform.utils.PlatformUtils.applyContinuousQueryEvents(PlatformUtils.java:539)
        ... 15 more
Caused by: class org.apache.ignite.IgniteCheckedException: Class definition was not found at marshaller cache and local file. [id=3076010, file=C:\Users\USER\AppData\Local\Temp\ignite\work\marshaller\3076010.classname]
        at org.apache.ignite.internal.MarshallerContextImpl.className(MarshallerContextImpl.java:218)
        at org.apache.ignite.internal.MarshallerContextAdapter.getClass(MarshallerContextAdapter.java:174)
        at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:683)
{code}

For some reason Java tries to deserialize .NET value.
There is no exception on .NET side, but events are not delivered.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 24 11:10:06 UTC 2017,,,,,,,,,,"0|i3e02f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/17 11:10;ptupitsyn;Added a test ({{TestSameQueryMultipleNodes}}) that reproduces the problem in {{ignite-1.9}}. It does not fail in {{ignite-2.0}}, so the problem seems to be fixed.

Merged to {{ignite-2.0}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: build.ps1 fails for Any CPU config on PowerShell 4.0 and lower,IGNITE-5057,13065923,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,21/Apr/17 15:45,24/Apr/17 12:38,14/Jul/23 06:20,24/Apr/17 12:38,1.9,,,,,2.0,,platforms,,,,0,.NET,,,{{MSBUILD : error MSB1008: Only one project can be specified. Switch: CPU}},,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 24 12:38:20 UTC 2017,,,,,,,,,,"0|i3dxrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/17 12:38;ptupitsyn;Fixed in {{ignite-2.0}}: {{7c249d7bbb3c6f65e2781e0da3cd21c62d2ce078}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE during deadlock detection because cache isn't started on node,IGNITE-5041,13065520,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agura,agura,agura,20/Apr/17 12:46,26/Apr/17 16:15,14/Jul/23 06:20,26/Apr/17 16:15,1.7,,,,,2.0,,cache,,,,0,,,,"NPE is possible during deadlock detection process in case when one of participating cache isn't started on node that initiates transaction:

{noformat}
Exception in thread ""sys-#66%transactions.TxDeadlockNpeClientTest1%"" java.lang.NullPointerException
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxKey.finishUnmarshal(IgniteTxKey.java:92)
	at org.apache.ignite.internal.processors.cache.transactions.TxLocksResponse.finishUnmarshal(TxLocksResponse.java:190)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$DeadlockDetectionListener.unmarshall(IgniteTxManager.java:2588)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxManager$DeadlockDetectionListener.onMessage(IgniteTxManager.java:2478)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1082)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:710)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:102)
	at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:673)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{noformat}

*Steps to reproduce:*

# Start server node with two caches.
# Start two transactions on server node that involve both caches and lead to deadlock.
# Start client node and create only one cache
# Start transaction on client node that will try to update key that involved into deadlock

As result transaction on client node will hang until deadlock detection timeout happens.

The same result could be achived using node filters for caches.

*Workaround:*

Start all caches on node if possible.

Another way is deadlock detection disabling using JVM parameter {{-DIGNITE_TX_DEADLOCK_DETECTION_MAX_ITERS=0}}

*Possible solution:*

Try to create {{CacheObjectContext}} without starting of the cache.",,agura,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 26 16:15:41 UTC 2017,,,,,,,,,,"0|i3dv9z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/17 17:51;agura;Fixed. Waiting for TC.;;;","21/Apr/17 13:54;agura;TC looks good. Please review. PR: https://github.com/apache/ignite/pull/1848;;;","24/Apr/17 13:02;sboikov;Hi Andrey,

Reviewed, did some minor changes, please take a look. Good to merge.

Thanks!;;;","26/Apr/17 16:15;agura;Merged into ignite-2.0 branch.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ML examples,IGNITE-5040,13065507,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,chief,skozlov,skozlov,20/Apr/17 12:15,18/May/17 11:45,14/Jul/23 06:20,27/Apr/17 13:54,2.0,,,,,2.0,,ml,,,,0,,,,"I've reviewed examples for ML module and found some issues:

1. There's no description for examples at beginning of code (as we've for other java examples)

2. TracerExample opens the empty HTML page (seems JS error)

3. Example isn't a test and shouldn't have asserts. Correctness of example results is responsibility of tests.

4. Some local API calls used without running Ignite nodes would be better to provide as part of remote jobs sent to the cluster",,avinogradov,chief,githubbot,oignatenko,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4572,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 28 06:58:27 UTC 2017,,,,,,,,,,"0|i3dv73:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Apr/17 06:10;oignatenko;(/) fix for {{TracerExample}} was pushed to branch ignite-5040.

Problem was in Java code not in JS.

The cause was that some invocations of {{String.format}} were with implicit locale (dependent on user's machine). At machines with particular locales this caused [decimal mark|https://en.wikipedia.org/wiki/Decimal_mark|what's this] to output as comma causing JSON parsing errors.

The fix was to explicitly set locale (US) that formats decimal mark as dot. With such a locale things were displayed correctly.

I also managed to use fixed code to reproduce that issue in code that runs at TracerExample, in order to make sure that behavior indeed depends on the locale. With French locale that uses comma for decimal mark my browser was showing same troublesome output as at bug reporter's machine.;;;","25/Apr/17 10:48;chief;merged;;;","27/Apr/17 13:00;chief;It's looks like we accidentally lost those changes, so I reopen this ticket.;;;","27/Apr/17 13:03;oignatenko;(i) related pull request: https://github.com/apache/ignite/pull/1856 ([in patch format|https://github.com/apache/ignite/pull/1856.patch]);;;","27/Apr/17 13:29;githubbot;GitHub user ybabak opened a pull request:

    https://github.com/apache/ignite/pull/1881

    IGNITE-5040 ML examples:

      restored missed changes.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5040

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1881.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1881
    
----
commit bbd31ca54bfc4341248c79b35890e012db975821
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-04-27T13:27:49Z

    IGNITE-5040 ML examples:
      restored missed changes

----
;;;","28/Apr/17 06:58;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1881
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disallow @QuerySqlField and @QueryTextField on methods,IGNITE-5036,13065436,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,vozerov,vozerov,20/Apr/17 08:30,26/May/17 05:20,14/Jul/23 06:20,25/Apr/17 14:35,,,,,,2.0,,sql,,,,0,,,,,,githubbot,irudyak,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 26 05:20:24 UTC 2017,,,,,,,,,,"0|i3durb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/17 09:50;vozerov;Implementation plan:
1) Prohibit annotations on methods.
2) Fix all compilation issues (usually - move annotation from method to field, or remove test). NB: be careful with {{org.apache.ignite.tests.pojos}}
3) Remove internal code for method handling.;;;","24/Apr/17 14:39;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1863

    IGNITE-5036  Disallow @QuerySqlField and @QueryTextField on methods

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5036

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1863.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1863
    
----
commit 2d505817cef677c523dc27a521a709d983cc26e5
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-20T08:31:14Z

    WIP.

commit 668be3703cedad20c3440f3b6c050e909ad85e38
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-20T09:50:57Z

    Merge branch 'ignite-2.0' into ignite-5036

commit 214c665beec3e50ec78ed1f6aa1f5a8a7f07bd57
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-20T10:32:51Z

    IGNITE-5036: save the progress

commit b2a420f04075822682e1101d7776041e62dbf88b
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-20T10:41:33Z

    IGNITE-5036: save the progress

commit c92e3090be6aa9a2fff881d71b32df185fcae82d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-20T15:23:54Z

    Merge branch 'ignite-2.0' into ignite-5036

commit 564e59f71482ef0791c4a6d18b50b12cb463d516
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-21T08:34:55Z

    IGNITE-5036: save the progress

commit 2861a904d6c8429627cb49e34c247de380fe7b9b
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-21T13:41:10Z

    Merge branch 'ignite-2.0' into ignite-5036

commit cc54788c586782110ecf6ed2b673142acef7af40
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-24T09:15:37Z

    Merge branch 'ignite-2.0' into ignite-5036

commit 53e07627f1e72dbe3e7594e805a56d9fa3522e42
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-24T12:28:39Z

    IGNITE-5036: cassandra: save the progress

commit e27054f9cc430ce8d3541129efffe5b7e0ea523f
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-24T13:28:10Z

    IGNITE-5036: cassandra: save the progress

commit 732b6c8850a84a12536ff2b38964010e1c3d20ea
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-24T14:16:11Z

    IGNITE-5036: cassandra: save the progress

commit 504890f3182085b304166a88c4c965e1d5a12cbb
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-24T14:37:41Z

    IGNITE-5036: the progress

----
;;;","24/Apr/17 14:46;tledkov-gridgain;Tests [results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1863%2Fhead] are OK with me.;;;","24/Apr/17 15:16;tledkov-gridgain;[~irudyak], please review the changes at the {{cassandra store}} modules.;;;","26/Apr/17 13:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1863
;;;","26/May/17 05:20;irudyak;Hi guys,

Sorry for the late response, but this implementation brakes Cassandra module and backward compatibility with old deployments. It no longer supports POJO classes having ""getters"" annotated with @QuerySqlField;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Remove default-dotnet.xml,IGNITE-5028,13065056,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,19/Apr/17 11:18,19/Apr/17 12:11,14/Jul/23 06:20,19/Apr/17 12:10,2.0,,,,,2.0,,platforms,,,,0,.NET,,,"Default .NET config no longer differs from default Java config. Remove this file, update pom.xml.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4410,IGNITE-3267,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 19 12:10:22 UTC 2017,,,,,,,,,,"0|i3dszr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Apr/17 12:10;ptupitsyn;Fixed in {{ignite-2.0}};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two index type pairs with the same indexed field in value class cannot start,IGNITE-5027,13065052,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,vozerov,vozerov,19/Apr/17 10:50,19/Apr/17 16:44,14/Jul/23 06:20,19/Apr/17 16:44,,,,,,2.0,,sql,,,,0,,,,,,githubbot,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 19 16:44:50 UTC 2017,,,,,,,,,,"0|i3dsyv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Apr/17 10:51;githubbot;GitHub user devozerov opened a pull request:

    https://github.com/apache/ignite/pull/1831

    IGNITE-5027

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5027

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1831.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1831
    
----
commit d8480bdc22048ffadd3716f5d3a1f1c6a1797a0f
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-18T12:24:19Z

    IGNITE-4990: Removed deprecated properties from FileSystemConfiguration. This closes #1816.

commit eaf7350c64aabd98084df4eca337923c0208d085
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-18T12:25:27Z

    Merge remote-tracking branch 'origin/ignite-2.0' into ignite-2.0

commit 3565e4ee60e705e0bc34a73045a8b9b161df2e6e
Author: Anton Vinogradov <av@apache.org>
Date:   2017-04-18T12:32:29Z

    Special profiles to set versions and check compilation across all modules

commit 862d8af0a27974eec76665a8d336a4be4c08361a
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-04-18T12:42:54Z

    master - fixed SPI test

commit c4d81808c3cc002f1c71afb275361b728a84440b
Author: Dmitriy Govorukhin <dmitriy.govorukhin@gmail.com>
Date:   2017-04-18T12:44:15Z

    master - Fixed jetty REST processor testIncorrectPut

commit 22580e19b7ae5d11b8c299e2b3d92f5c8b9f0e8c
Author: Alexander Belyak <alexandr.belyak@xored.com>
Date:   2017-04-18T11:56:50Z

    IGNITE-4927 Write behind - add an option to skip write coalescing
    
    Signed-off-by: nikolay_tikhonov <ntikhonov@gridgain.com>

commit 58a8cb2579665c989ea9b08ebebf7b050f4d1405
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-18T13:01:49Z

    .NET: Fix MessagingTest flakiness

commit 7038af4a7d976e59a7875b32b3ee3dfc1758908d
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-04-18T13:46:15Z

    IGNITE-5000 Rename Ignite Math module to Ignite ML module
          added missed licenses
          renamed packages
          fixed wrong ml profile activation

commit d78e071a7de1129838652e9f377ff73d3a84495d
Author: Yury Babak <ybabak@gridgain.com>
Date:   2017-04-18T13:47:15Z

    IGNITE-5000 Rename Ignite Math module to Ignite ML module
          added missed licenses
          renamed packages
          fixed wrong ml profile activation

commit d60cf53bbfae162ac96ec1525bcd1772b8249a79
Author: Konstantin Dudkov <kdudkov@ya.ru>
Date:   2017-04-18T13:50:16Z

    ignite-4982 Fixed GridIntList.

commit 43d6d7e7eb9eb146c48b843293849ac687ead216
Author: sboikov <sboikov@gridgain.com>
Date:   2017-04-18T13:50:45Z

    Merge remote-tracking branch 'origin/ignite-2.0' into ignite-2.0

commit 8ea9f83ce7f21f6ba50c0c644f62319f25b56ebd
Author: Alexey Kuznetsov <akuznetsov@gridgain.com>
Date:   2017-04-18T13:39:58Z

    master Fixed Visor tests.
    (cherry picked from commit 36a6cd0)

commit 9e7421f261354b28119094b3b53b9490fd817b24
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-18T14:04:43Z

    Merge branch 'master' into ignite-2.0

commit 2edb935cbf87198993c403724e26efc655710c25
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-18T14:11:34Z

    IGNITE-4565: Implemented CREATE INDEX and DROP INDEX. This closes #1773. This closes #1804.

commit 9b21c85d6ec0cdbba8cbf2382559a8ef5a82e15c
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-04-18T15:40:27Z

    master - Mute test with a correct link

commit f82ed01807c80b36b7e361a5800ea131c1431c14
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-04-18T15:40:55Z

    master - Fix mvcc tests after CLOCK mode removal

commit 36e7e19830dc53c0ed02a0d83806b2cb5a7c7ce5
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-04-19T04:34:16Z

    IGNITE-4988 Cleanup code.

commit d38348432a2b8b66999c6410ec4f5c1ef050191d
Author: sboikov <sboikov@gridgain.com>
Date:   2017-04-19T09:46:31Z

    Attempt to fix awaitPartitionMapExchange: wait for last exchange completion to avoid races with cache destroy.

commit 22d5e55bee69403c4f9f8da9c113751ce110aa2d
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-04-19T09:54:14Z

    IGNITE-3523 IGFS: Remove ""initialize default path modes"" feature. This closes #1786.

commit 2ded758ad1f1663aea05ca943ecf509b1574c0bf
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-19T09:54:34Z

    Merge remote-tracking branch 'origin/ignite-2.0' into ignite-2.0

commit b9883ce0c3818db0f95d1a0b1cf37342f14734c3
Author: devozerov <vozerov@gridgain.com>
Date:   2017-04-19T10:50:54Z

    Fixed.

----
;;;","19/Apr/17 16:44;githubbot;Github user devozerov closed the pull request at:

    https://github.com/apache/ignite/pull/1831
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
getOrCreateCaches() hangs if any exception in GridDhtPartitionsExchangeFuture.init(),IGNITE-5026,13065046,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,slava.koptilin,ein,ein,19/Apr/17 10:22,17/Jul/18 10:00,14/Jul/23 06:20,17/Jul/18 10:00,1.9,2.0,,,,2.7,,cache,,,,0,,,,"Any exception has been thrown by {{GridDhtPartitionsExchangeFuture.init()}} causes to wait indefinitely {{GridCompoundFuture}} returned by {{GridCacheProcessor.dynamicStartCaches()}}.

Reproduced by {{IgniteDynamicCacheStartSelfTest.testGetOrCreateCollectionExceptional()}}",,Alexey Kuznetsov,ein,slava.koptilin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7207,,,IGNITE-1094,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jul 17 10:00:12 UTC 2018,,,,,,,,,,"0|i3dsxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jun/17 13:38;Alexey Kuznetsov;There is no test with name *testGetOrCreateCollectionExceptional*;;;","06/Jun/17 16:38;ein;[~Alexey Kuznetsov], please, look at the branch https://github.com/gridgain/apache-ignite/tree/ignite-5026 and the commit https://github.com/gridgain/apache-ignite/commit/237a7d81437497ce49a0ded889bf48b20e06ac9f;;;","17/Jul/18 10:00;slava.koptilin;merged into master branch
commit: a393e696212ef0dd4f23f923bf1001e0a48db915;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock in GridCacheVariableTopologySelfTest.testNodeStop,IGNITE-5019,13064777,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,18/Apr/17 16:36,24/Apr/17 07:40,14/Jul/23 06:20,24/Apr/17 07:40,,,,,,2.0,,general,,,,0,,,,,,agoncharuk,DmitriyGovorukhin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Apr/17 16:36;DmitriyGovorukhin;threads_report.txt;https://issues.apache.org/jira/secure/attachment/12863844/threads_report.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 24 07:40:10 UTC 2017,,,,,,,,,,"0|i3dra7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/17 07:40;agoncharuk;Reviewed and merged to ignite-2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTML formatted releases notes,IGNITE-5017,13064728,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmagda,skozlov,skozlov,18/Apr/17 14:31,17/May/17 18:43,14/Jul/23 06:20,17/May/17 18:43,1.9,,,,,2.0,,documentation,,,,0,,,,,,dmagda,skozlov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 17 18:43:44 UTC 2017,,,,,,,,,,"0|i3dqzb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/May/17 18:43;dmagda;Done, here is an example of how the page looks like:
https://ignite.apache.org/releases/2.0.0/release_notes.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add validation of input params of disco command,IGNITE-5011,13064679,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,18/Apr/17 12:01,26/Jun/18 17:50,14/Jul/23 06:20,29/May/18 15:28,,,,,,2.7,,,,,,0,,,,"{code}
visor> disco -t=0h
java.lang.IllegalArgumentException: Time frame size is not positive in: 0h
        at org.apache.ignite.visor.visor$.timeFilter(visor.scala:2671)
        at org.apache.ignite.visor.commands.disco.VisorDiscoveryCommand.disco(VisorDiscoveryCommand.scala:127)
        at org.apache.ignite.visor.commands.disco.VisorDiscoveryCommand$$anonfun$4.apply(VisorDiscoveryCommand.scala:282)
        at org.apache.ignite.visor.commands.disco.VisorDiscoveryCommand$$anonfun$4.apply(VisorDiscoveryCommand.scala:282)
        at org.apache.ignite.visor.commands.VisorConsole.mainLoop(VisorConsole.scala:217)
        at org.apache.ignite.visor.commands.VisorConsole$.delayedEndpoint$org$apache$ignite$visor$commands$VisorConsole$1(VisorConsole.scala:329)
        at org.apache.ignite.visor.commands.VisorConsole$delayedInit$body.apply(VisorConsole.scala:318)
        at scala.Function0$class.apply$mcV$sp(Function0.scala:34)
        at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
        at scala.App$$anonfun$main$1.apply(App.scala:76)
        at scala.App$$anonfun$main$1.apply(App.scala:76)
        at scala.collection.immutable.List.foreach(List.scala:381)
        at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)
        at scala.App$class.main(App.scala:76)
        at org.apache.ignite.visor.commands.VisorConsole$.main(VisorConsole.scala:318)
        at org.apache.ignite.visor.commands.VisorConsole.main(VisorConsole.scala)
(wrn) <visor>: Invalid command name: 'disco -t=0h'
(wrn) <visor>: Type 'help' to print commands list.
{code}",,dpavlov,githubbot,kuaw26,pkonstantinov,vinx13,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 31 09:14:36 UTC 2018,,,,,,,,,,"0|i3dqof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/17 10:45;githubbot;GitHub user vinx13 opened a pull request:

    https://github.com/apache/ignite/pull/1917

    IGNITE-5011: Add validation on args and show proper warnings on disco command

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vinx13/ignite ignite-5011

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1917.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1917
    
----
commit a3230f6f92622a2cadbc0a1e3c0748685a2c4aed
Author: Wuwei Lin <vincentl13x@gmail.com>
Date:   2017-05-06T10:37:32Z

    IGNITE-5011: Add validation on args and show proper warnings

----
;;;","12/Feb/18 17:02;githubbot;Github user vinx13 closed the pull request at:

    https://github.com/apache/ignite/pull/1917
;;;","23/Apr/18 17:38;dpavlov;Hi [~vinx13], I can see PR is closed, but ticket is in PA state. 

Could you please set status of ticket to open or to in progress?

Alternatively could you please provide PR and TC RunAll to review and check?;;;","24/Apr/18 02:59;githubbot;GitHub user vinx13 reopened a pull request:

    https://github.com/apache/ignite/pull/1917

    IGNITE-5011: Add validation on args and show proper warnings on disco command

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vinx13/ignite ignite-5011

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1917.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1917
    
----
commit a3230f6f92622a2cadbc0a1e3c0748685a2c4aed
Author: Wuwei Lin <vincentl13x@...>
Date:   2017-05-06T10:37:32Z

    IGNITE-5011: Add validation on args and show proper warnings

----
;;;","08/May/18 11:23;dpavlov;[~kuaw26] could you please review this ticket? I'm not so strong in scala.;;;","17/May/18 03:34;vsisko;Looks good. [~pkonstantinov] Please test with empty and invalid arguments. Check validation of other arguments.

Also check validation of -t argument for events command.;;;","18/May/18 04:09;pkonstantinov;'-t' option validation looks good.;;;","18/May/18 12:09;dpavlov;Was PR 1917 merged? 

I don't see comment from committer about merge.

If PR is not merged, Resolved status is not best option.;;;","29/May/18 15:28;kuaw26;Looks good. Merged to master.;;;","29/May/18 15:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1917
;;;","31/May/18 09:14;pkonstantinov;Re-tested on the master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Page Memory Throws Meaningless OOM exception if there is an issue in config,IGNITE-5008,13064538,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,sergey-chugunov,dmagda,dmagda,18/Apr/17 00:41,12/Dec/18 07:16,14/Jul/23 06:20,20/Apr/17 12:18,,,,,,2.0,,,,,,0,,,,"The ticket was created as a result of this discussion:
http://apache-ignite-developers.2346864.n4.nabble.com/Memory-policies-examples-fails-td16717.html

Presently a page memory can throw an OOM exception due to a misconfiguration. The message of the exception has to point out to a problematic place directly (size, ect.) so that the user can quickly fix it.",,dmagda,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 12 07:16:13 UTC 2018,,,,,,,,,,"0|i3dpt3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Apr/17 14:50;githubbot;GitHub user sergey-chugunov-1985 opened a pull request:

    https://github.com/apache/ignite/pull/1822

    IGNITE-5008 message of IgniteOutOfMemoryException was detailed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-5008

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1822.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1822
    
----
commit d6fc207693d0928ef615cc409054af067d5a079b
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-04-18T14:37:59Z

    IGNITE-5008 message of IgniteOutOfMemoryException was detailed

----
;;;","12/Dec/18 07:16;githubbot;Github user sergey-chugunov-1985 closed the pull request at:

    https://github.com/apache/ignite/pull/1822
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: SQL does not work with F# record types,IGNITE-5006,13064414,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,17/Apr/17 15:23,18/Apr/17 10:17,14/Jul/23 06:20,18/Apr/17 10:17,1.7,,,,,2.0,,platforms,,,,0,.NET,,,"The following code returns null results:

{code}
type Person = 
    { 
        [<QuerySqlField>]
        id : int; 
        [<QuerySqlField>]
        name : String 
    }

...

cache.QueryFields(new SqlFieldsQuery(""from person select id"")).GetAll()
{code}

F# record fields have {{@}} symbol in the end. We should clean up or escape these.

{{Person [idHash=59332389, id@=1, name@=John]}}

Make sure other F#-specific types do not cause problems (tuples, structs, classes, nested types).",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 18 10:17:50 UTC 2017,,,,,,,,,,"0|i3dp1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Apr/17 10:15;ptupitsyn;Backing fields have {{@}} suffix in F#. This symbol is not used in C#. Updated {{BinaryUtils.CleanFieldName}} to remove this suffix. Tested with records and classes in F#, now everything works out of the box.;;;","18/Apr/17 10:17;ptupitsyn;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Distributed join on partitioned caches with segmented indices broken in master.,IGNITE-4993,13064103,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,agoncharuk,amashenkov,amashenkov,14/Apr/17 17:24,19/Apr/17 11:23,14/Jul/23 06:20,19/Apr/17 11:23,,,,,,2.0,,sql,,,,0,,,,"Next test fails in master sporadicaly:
org.apache.ignite.internal.processors.query.IgniteSqlSegmentedIndexSelfTest.testMultiNodeIndexSegmentation

Test looks fine on commit before IGNITE-3477 merged to master.
Seems, there is a race.

[20:14:51,340][ERROR][query-#162%query.IgniteSqlSegmentedIndexMultiNodeSelfTest0%][GridMapQueryExecutor] Failed to execute local query.
class org.apache.ignite.cache.query.QueryCancelledException: The query was cancelled while executing.
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.onQueryRequest0(GridMapQueryExecutor.java:610)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor.access$400(GridMapQueryExecutor.java:99)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor$5.call(GridMapQueryExecutor.java:433)
	at org.apache.ignite.internal.processors.query.h2.twostep.GridMapQueryExecutor$5.call(GridMapQueryExecutor.java:431)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6601)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$2.body(GridClosureProcessor.java:914)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)",,agoncharuk,amashenkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4992,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 19 11:23:18 UTC 2017,,,,,,,,,,"0|i3dn4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Apr/17 10:53;agoncharuk;The issue is caused by caching isLocal flag in DistributedJoinBatch. Since query context may change, this flag also should be changed.

Removing the flag from the batch and adding a method instead which will check query context.;;;","19/Apr/17 11:23;agoncharuk;Merged the fix to 2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Assertion error in BPlusTree#finishTail,IGNITE-4989,13064070,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergi,agoncharuk,agoncharuk,14/Apr/17 13:07,03/May/17 12:14,14/Jul/23 06:20,03/May/17 12:13,2.0,,,,,2.1,,cache,,,,0,,,,"This assertion occasionally appears in CacheRandomOperationsMultithreadedTest

{code}
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] [12:03:13,541][ERROR][sys-stripe-9-#3935%cache.CacheRandomOperationsMultithreadedTest2%][GridNearTxLocal] Commit failed.
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] class org.apache.ignite.internal.transactions.IgniteTxHeuristicCheckedException: Commit produced a runtime exception (all transaction entries will be invalidated): GridDhtTxRemote[id=6fc395c6b51-062d9824-0000-0001-0000-015b6c5889ed, concurrency=OPTIMISTIC, isolation=READ_COMMITTED, state=COMMITTING, invalidate=false, rollbackOnly=false, nodeId=04efe5ed-8050-4529-ba7c-395e39000000, duration=10]
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commitIfLocked(GridDistributedTxRemoteAdapter.java:719)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commitRemoteTx(GridDistributedTxRemoteAdapter.java:789)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:1222)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processDhtTxFinishRequest(IgniteTxHandler.java:1130)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.access$600(IgniteTxHandler.java:95)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$7.apply(IgniteTxHandler.java:180)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$7.apply(IgniteTxHandler.java:178)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:863)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:386)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:308)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:100)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:253)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1238)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:866)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:111)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.managers.communication.GridIoManager$7.run(GridIoManager.java:798)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:483)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at java.lang.Thread.run(Thread.java:745)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] Caused by: java.lang.AssertionError: Assertion error on search row: Row@19cdbda1[ key: org.apache.ignite.internal.processors.cache.CacheRandomOperationsMultithreadedTest$TestKey@2e5, val: org.apache.ignite.internal.processors.cache.CacheRandomOperationsMultithreadedTest$TestData@125ca243 ][ 131925325, 131925325 ]
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.doRemove(BPlusTree.java:1773)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.removex(BPlusTree.java:1570)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.query.h2.database.H2TreeIndex.removex(H2TreeIndex.java:264)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.doUpdate(GridH2Table.java:615)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.query.h2.opt.GridH2Table.update(GridH2Table.java:513)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.store(IgniteH2Indexing.java:645)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.query.GridQueryProcessor.store(GridQueryProcessor.java:460)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.query.GridCacheQueryManager.store(GridCacheQueryManager.java:476)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.finishUpdate(IgniteCacheOffheapManagerImpl.java:1068)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:938)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:326)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.storeValue(GridCacheMapEntry.java:3269)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerSet(GridCacheMapEntry.java:992)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commitIfLocked(GridDistributedTxRemoteAdapter.java:597)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	... 17 more
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] Caused by: java.lang.AssertionError
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Remove.finishTail(BPlusTree.java:3387)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree$Remove.access$6700(BPlusTree.java:3155)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.doRemove(BPlusTree.java:1746)
[15:03:13]W:		 [org.apache.ignite:ignite-indexing] 	... 30 more
{code}",,agoncharuk,githubbot,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 03 12:14:18 UTC 2017,,,,,,,,,,"0|i3dmxj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/May/17 13:17;githubbot;GitHub user EdShangGG opened a pull request:

    https://github.com/apache/ignite/pull/1894

    IGNITE-4989 Assertion error in BPlusTree#finishTail

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4989

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1894.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1894
    
----
commit 694ab4d7006786e1d4498886b8753f504a843059
Author: EdShangGG <eshangareev@gridgain.com>
Date:   2017-05-02T12:44:10Z

    IGNITE-4989 Assertion error in BPlusTree#finishTail

----
;;;","02/May/17 13:31;EdShangGG;Patch is available.

http://ci.ignite.apache.org/viewQueued.html?itemId=596062 - test run was scheduled.;;;","03/May/17 08:23;EdShangGG;Please, review.;;;","03/May/17 12:13;sergi;Merged to master;;;","03/May/17 12:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1894
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Atomic cache operations acquire backpressure semaphore on retries,IGNITE-4985,13064055,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,agoncharuk,agoncharuk,agoncharuk,14/Apr/17 10:32,18/Apr/17 09:58,14/Jul/23 06:20,18/Apr/17 09:58,,,,,,2.0,,,,,,0,,,,,,agoncharuk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 18 09:58:09 UTC 2017,,,,,,,,,,"0|i3dmu7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 10:33;agoncharuk;This leads to failover2 suite hanging.;;;","18/Apr/17 09:58;agoncharuk;Fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AssertionError GridNearAtomicSingleUpdateFuture.onAllReceived on node left,IGNITE-4984,13064045,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,14/Apr/17 09:46,24/Apr/17 08:16,14/Jul/23 06:20,24/Apr/17 08:16,,,,,,2.0,,cache,,,,0,,,,"Observed this assertion:
{noformat}
[17:36:35]W:		 [org.apache.ignite:ignite-core] [14:36:35,825][ERROR][disco-event-worker-#15603%atomic.IgniteCachePutRetryAtomicPrimaryWriteOrderSelfTest0%][GridEventStorageManager] Unexpected exception in listener notification for event: DiscoveryEvent [evtNode=TcpDiscoveryNode [id=aad85fba-82f7-4e2e-9e88-002251f00003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47502], discPort=47502, order=22, intOrder=13, lastExchangeTime=1492094195733, loc=false, ver=2.0.0#19700101-sha1:00000000, isClient=false], topVer=23, nodeId8=23f2fe27, msg=Node left: TcpDiscoveryNode [id=aad85fba-82f7-4e2e-9e88-002251f00003, addrs=[127.0.0.1], sockAddrs=[/127.0.0.1:47502], discPort=47502, order=22, intOrder=13, lastExchangeTime=1492094195733, loc=false, ver=2.0.0#19700101-sha1:00000000, isClient=false], type=NODE_LEFT, tstamp=1492094195813]
[17:36:35]W:		 [org.apache.ignite:ignite-core] java.lang.AssertionError
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onAllReceived(GridNearAtomicSingleUpdateFuture.java:336)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onNodeLeft(GridNearAtomicSingleUpdateFuture.java:176)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager$4.onEvent(GridCacheMvccManager.java:266)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager$LocalListenerWrapper.onEvent(GridEventStorageManager.java:1311)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:892)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record0(GridEventStorageManager.java:340)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record(GridEventStorageManager.java:307)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.recordEvent(GridDiscoveryManager.java:2277)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body0(GridDiscoveryManager.java:2474)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body(GridDiscoveryManager.java:2306)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
[17:36:35]W:		 [org.apache.ignite:ignite-core] [14:36:35,826][ERROR][disco-event-worker-#15603%atomic.IgniteCachePutRetryAtomicPrimaryWriteOrderSelfTest0%][GridDiscoveryManager] Unexpected exception in discovery worker thread (ignored).
[17:36:35]W:		 [org.apache.ignite:ignite-core] java.lang.AssertionError
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onAllReceived(GridNearAtomicSingleUpdateFuture.java:336)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onNodeLeft(GridNearAtomicSingleUpdateFuture.java:176)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager$4.onEvent(GridCacheMvccManager.java:266)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager$LocalListenerWrapper.onEvent(GridEventStorageManager.java:1311)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:892)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record0(GridEventStorageManager.java:340)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record(GridEventStorageManager.java:307)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.recordEvent(GridDiscoveryManager.java:2277)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body0(GridDiscoveryManager.java:2474)
[17:36:35] :	 [Step 4/5] [14:36:35,827][INFO ][async-callable-runner-1][GridDeploymentLocalStore] Removed undeployed class: GridDeployment [ts=1492094195773, depMode=SHARED, clsLdr=IsolatedClassLoader{roleName='test'}, clsLdrId=af814d76b51-aad85fba-82f7-4e2e-9e88-002251f00003, userVer=0, loc=true, sampleClsName=org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionFullMap, pendingUndeploy=false, undeployed=true, usage=0]
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body(GridDiscoveryManager.java:2306)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
[17:36:35]W:		 [org.apache.ignite:ignite-core] [14:36:35,827][ERROR][disco-event-worker-#15603%atomic.IgniteCachePutRetryAtomicPrimaryWriteOrderSelfTest0%][GridDiscoveryManager] Runtime error caught during grid runnable execution: DiscoveryWorker [nodeSegFired=false]
[17:36:35]W:		 [org.apache.ignite:ignite-core] java.lang.AssertionError
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onAllReceived(GridNearAtomicSingleUpdateFuture.java:336)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onNodeLeft(GridNearAtomicSingleUpdateFuture.java:176)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager$4.onEvent(GridCacheMvccManager.java:266)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager$LocalListenerWrapper.onEvent(GridEventStorageManager.java:1311)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:892)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record0(GridEventStorageManager.java:340)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record(GridEventStorageManager.java:307)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.recordEvent(GridDiscoveryManager.java:2277)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body0(GridDiscoveryManager.java:2474)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body(GridDiscoveryManager.java:2306)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
[17:36:35]W:		 [org.apache.ignite:ignite-core] Exception in thread ""disco-event-worker-#15603%atomic.IgniteCachePutRetryAtomicPrimaryWriteOrderSelfTest0%"" java.lang.AssertionError
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onAllReceived(GridNearAtomicSingleUpdateFuture.java:336)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridNearAtomicSingleUpdateFuture.onNodeLeft(GridNearAtomicSingleUpdateFuture.java:176)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMvccManager$4.onEvent(GridCacheMvccManager.java:266)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager$LocalListenerWrapper.onEvent(GridEventStorageManager.java:1311)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.notifyListeners(GridEventStorageManager.java:892)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record0(GridEventStorageManager.java:340)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.eventstorage.GridEventStorageManager.record(GridEventStorageManager.java:307)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.recordEvent(GridDiscoveryManager.java:2277)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body0(GridDiscoveryManager.java:2474)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.discovery.GridDiscoveryManager$DiscoveryWorker.body(GridDiscoveryManager.java:2306)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[17:36:35]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{noformat}
",,kdudkov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 24 08:16:02 UTC 2017,,,,,,,,,,"0|i3dmrz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Apr/17 08:16;sboikov;It was possible that node left could be processed twice, fixed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Cache plugins do not work,IGNITE-4983,13064033,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,14/Apr/17 08:56,14/Apr/17 11:45,14/Jul/23 06:20,14/Apr/17 11:45,2.0,,,,,2.0,,platforms,,,,0,,,,"IGNITE-3477 brought breaking changes to cache plugin infrastructure. Now cache plugins can not exist independently of grid plugins: {{PluginProvider.createCacheProvider}} creates cache provider, instead of {{CachePluginConfiguration.createProvider}}.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4987,,,IGNITE-3477,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 14 11:45:38 UTC 2017,,,,,,,,,,"0|i3dmpb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 11:03;ptupitsyn;We should probably remove {{ICachePluginProvider}} and related infrastructure and leave only Java-based plugins in place ({{ICachePluginConfiguration}} with non-null {{CachePluginConfigurationClosureFactoryId}}), since current infrastructure on .NET side does not play along with new Java aprt at all.;;;","14/Apr/17 11:34;ptupitsyn;IGNITE-4987 created to restore .NET-based cache plugins;;;","14/Apr/17 11:45;ptupitsyn;Fixed in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: NuGet packages do not work with PackageReference in VS2017,IGNITE-4980,13064002,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,14/Apr/17 06:11,09/Oct/19 09:56,14/Jul/23 06:20,09/Oct/19 09:56,1.6,,,,,2.8,,,,,,0,.NET,,,"VS2017 & NuGet 4.0 come with a new way of referencing packages: instead of {{packages.config}}, there is a {{PackageReference}} section in {{csproj}} file: http://blog.nuget.org/20170316/NuGet-now-fully-integrated-into-MSBuild.html

This feature does not support {{install.ps1}} script which we use to insert build event for copying JARs to output directory.

This is not a blocker, since build event can be set up manually.",,connor,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-10554,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Oct 09 09:56:10 UTC 2019,,,,,,,,,,"0|i3dmif:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Apr/17 12:10;ptupitsyn;Nothing to fix now:
{{Package references are currently supported for only .NET Core and .NET Standard projects in Visual Studio 2017}}
https://docs.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files

Ignite.NET is not supported in .NET Core and .NET Standard. Postponing to look into this later.;;;","09/Oct/19 09:56;ptupitsyn;Fixed as part of IGNITE-10554;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timeout in ignite-cassandra SessionPool is not configurable,IGNITE-4954,13063588,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,vkulichenko,vkulichenko,vkulichenko,12/Apr/17 18:52,18/Apr/17 14:08,14/Jul/23 06:20,18/Apr/17 14:08,1.9,,,,,2.0,,cassandra,,,,0,,,,Cassandra cache store implementation uses {{SessionPool}} class which kills idle sessions after 5 minutes. Need to make this timeout configurable.,,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 18 14:01:34 UTC 2017,,,,,,,,,,"0|i3djyf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Apr/17 08:31;githubbot;GitHub user vkulichenko opened a pull request:

    https://github.com/apache/ignite/pull/1785

    IGNITE-4954 - Configurable expiration timeout for Casssndra session

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/vkulichenko/ignite ignite-4954

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1785.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1785
    
----
commit 4652877b0444eb72181982030082dce6e9b4dec1
Author: Valentin Kulichenko <valentin.lulichenko@gmail.com>
Date:   2017-04-13T08:29:30Z

    IGNITE-4954 - Configurable expiration timeout for Casssndra session

----
;;;","18/Apr/17 14:01;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1785
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rework logic of concurrent schema changes,IGNITE-4953,13063517,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,al.psc,al.psc,12/Apr/17 14:46,15/Apr/17 14:53,14/Jul/23 06:20,15/Apr/17 14:53,2.0,,,,,2.0,,sql,,,,0,important,,,H2's prepared statements store references to indexes that were present when the statement was parsed and initialized - this means that currently there's no way to prevent index usage if it goes down between the moment when the statement is created and actually executed. Have to come up with some new locking schema.,,al.psc,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4634,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Apr 15 14:14:41 UTC 2017,,,,,,,,,,"0|i3djin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/17 10:54;vozerov;[~al.psc],
Please see my branch {{ignite-4953-1}} where I polished several problems during review. However, it doesn't work still. The problem is that H2 knows nothing about indexes created on table initialization phase. For this reason {{DynamicIndexBasicClientSelfTest.testDrop}} fails with {{Index ""IDX_1"" not found}} exception thrown from H2 internals.;;;","15/Apr/17 10:57;vozerov;Another problem is that we use old {{GridH2TreeIndex}}, while new {{H2TreeIndex}} should be used instead.;;;","15/Apr/17 14:14;vozerov;Fixed. Data consistency is fine. However, there are some weird failures in {{H2DynamicIndexSelfTest}} still.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect behavior CacheJdbcPojoStore if binary marshaller enable,IGNITE-4949,13063432,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,DmitriyGovorukhin,DmitriyGovorukhin,DmitriyGovorukhin,12/Apr/17 10:07,26/Apr/17 12:18,14/Jul/23 06:20,21/Apr/17 13:29,,,,,,2.0,,general,,,,0,,,,"In case using binary marshaller, CacheJdbcPojoStore.loadCache may not provide binary object in callback.
[dev-list| http://apache-ignite-developers.2346864.n4.nabble.com/CachePojoStore-data-loading-with-binary-marshaller-td16417.html] discussion.",,agoncharuk,DmitriyGovorukhin,kuaw26,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4485,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 21 13:29:25 UTC 2017,,,,,,,,,,"0|i3dizr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Apr/17 09:55;vkulichenko;[~DmitriyGovorukhin], is there a pull request that I can take a look at?;;;","15/Apr/17 10:07;DmitriyGovorukhin;[~vkulichenko] Done, please look [pull/1803|https://github.com/apache/ignite/pull/1803];;;","15/Apr/17 10:33;vkulichenko;[~DmitriyGovorukhin], it looks like this change makes sure that binary mapping comes first, which makes sense. But why do we still need the second mapping?

[~kuaw26], I think you should take a look at this as well, because you know implementation details of the POJO store much better.;;;","17/Apr/17 10:24;kuaw26;https://github.com/apache/ignite/pull/1803
Looks good for me.;;;","17/Apr/17 10:28;DmitriyGovorukhin;[~vkulichenko] What do you think? I corrected the comments, take a look at the new changes.;;;","19/Apr/17 15:04;vkulichenko;[~DmitriyGovorukhin], couple of minor comments:
* The exception in case of class doesn't exist should be more informative, suggesting possible solutions (deploy the class or use binary marshaller).
* Condition {{if (!binarySupported && keyKind == TypeKind.BINARY)}} should never be true now, so let's replace it with assertion.

Other than that looks good, assuming that all tests pass.;;;","19/Apr/17 15:28;DmitriyGovorukhin;[~vkulichenko] Done, please check pull request now.;;;","19/Apr/17 17:03;vkulichenko;Looks good to me. Can be merged if tests are OK.;;;","21/Apr/17 13:29;agoncharuk;Merged to ignite-2.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web session clustering fails to work with Spring Security,IGNITE-4948,13063313,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vkulichenko,vkulichenko,vkulichenko,11/Apr/17 20:48,11/Apr/17 20:51,14/Jul/23 06:20,11/Apr/17 20:51,1.9,,,,,2.0,,websession,,,,0,,,,"{{WebSessionFilter.doFilterV2}} method do not refresh the local instance of session after {{chain.doFilter}}. But it's possible that session is replaced by some other filter (e.g. due to login). And if after this replacement some attributes are added, they do not end up in cache.

dev@ list discussion: http://apache-ignite-developers.2346864.n4.nabble.com/IGNITE-2741-spring-session-design-td14560.html",,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-04-11 20:48:26.0,,,,,,,,,,"0|i3di9b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridCacheP2PUndeploySelfTest became failed,IGNITE-4946,13063188,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,11/Apr/17 12:54,18/Apr/17 08:21,14/Jul/23 06:20,13/Apr/17 12:54,,,,,,2.0,,,,,,0,,,,There are a race between GridDhtPartitionsExchangeFuture which cleans caches after undeployment and GridDeploymentPerVersionStore which makes the undeployment.,,githubbot,gvvinblade,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 18 08:21:14 UTC 2017,,,,,,,,,,"0|i3dhhj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Apr/17 12:57;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/1774

    IGNITE-4946

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4946

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1774.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1774
    
----
commit d23d2e0401045b19f2ba0124c92d00ff1d18dcb8
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-04-11T12:57:04Z

    [IGNITE-4946] GridCacheP2PUndeploySelfTest became failed

----
;;;","13/Apr/17 12:54;yzhdanov;Merged to master.
Thanks for contribution, Igor!;;;","18/Apr/17 08:21;githubbot;Github user gvvinblade closed the pull request at:

    https://github.com/apache/ignite/pull/1774
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Receive event before cache initialized,IGNITE-4939,13062915,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ezhuravl,ntikhonov,ntikhonov,10/Apr/17 14:34,22/Jun/18 17:42,14/Jul/23 06:20,22/Jun/18 17:41,1.9,,,,,2.7,,cache,,,,0,,,,"Receive event before cache initialized that leads to the following:
{noformat}
Exception in thread ""sys-#755%Default%"" java.lang.IllegalArgumentException: Cache is not configured: ignite-sys-cache
    	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.jcache(GridCacheProcessor.java:3343)
    	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.handleEvent(CacheContinuousQueryHandler.java:719)
    	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.notifyCallback0(CacheContinuousQueryHandler.java:691)
    	at org.apache.ignite.internal.processors.cache.query.continuous.CacheContinuousQueryHandler.notifyCallback(CacheContinuousQueryHandler.java:650)
    	at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.processNotification(GridContinuousProcessor.java:1086)
    	at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor.access$2000(GridContinuousProcessor.java:97)
    	at org.apache.ignite.internal.processors.continuous.GridContinuousProcessor$8.onMessage(GridContinuousProcessor.java:741)
    	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1082)
    	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1600(GridIoManager.java:102)
    	at org.apache.ignite.internal.managers.communication.GridIoManager$GridCommunicationMessageSet.unwind(GridIoManager.java:2332)
    	at org.apache.ignite.internal.managers.communication.GridIoManager.unwindMessageSet(GridIoManager.java:1042)
    	at org.apache.ignite.internal.managers.communication.GridIoManager.access$1900(GridIoManager.java:102)
    	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:1011)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    	at java.lang.Thread.run(Thread.java:745)
{noformat}",,aad,dkarachentsev,dmekhanikov,dpavlov,ein,ezhuravl,githubbot,ilantukh,ntikhonov,xtern,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-7474,,,,,,,,,,,IGNITE-4232,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jun 22 17:42:45 UTC 2018,,,,,,,,,,"0|i3dftj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 15:12;ntikhonov;How possilbe solution can move {{ctx.service().onContinuousProcessorStarted(ctx);}} statment from {{GridContinuousProcessor#start}} to {{GridContinuousProcessor#onKernalStart}}.;;;","11/Apr/17 13:52;dkarachentsev;It looks related to [IGNITE-4232|https://issues.apache.org/jira/browse/IGNITE-4232].;;;","18/Apr/17 09:15;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/1814

    IGNITE-4939 Receive event before cache initialized fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1814.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1814
    
----
commit e448a4d011c4137528f7915600fdf32cc5455128
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-04-18T09:14:07Z

    IGNITE-4939 Receive event before cache initialized fix

----
;;;","18/Apr/17 09:16;githubbot;Github user ezhuravl closed the pull request at:

    https://github.com/apache/ignite/pull/1814
;;;","18/Apr/17 09:16;githubbot;GitHub user ezhuravl reopened a pull request:

    https://github.com/apache/ignite/pull/1814

    IGNITE-4939 Receive event before cache initialized fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1814.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1814
    
----
commit e448a4d011c4137528f7915600fdf32cc5455128
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-04-18T09:14:07Z

    IGNITE-4939 Receive event before cache initialized fix

----
;;;","04/May/17 14:41;ezhuravl; GridContiniousProcessor.onStart invokes ctx.service().onContinuousProcessorStarted(ctx) too early, when caches not create yet(it happens in GridCacheProcessor.onKernalStart).
It's not possible to move ctx.service().onContinuousProcessorStarted(ctx) invoke to code after all caches start, because at the moment, when discoveryManager starts, this method must be already invoked.;;;","02/Jun/17 10:12;githubbot;Github user ezhuravl closed the pull request at:

    https://github.com/apache/ignite/pull/1814
;;;","02/Jun/17 10:14;ezhuravl;Not reproducible since 2.0;;;","01/Nov/17 16:40;ezhuravl;Looks like this issue still reproducible in 2.1, just witnessed it on the node. startup;;;","08/Nov/17 09:58;dmekhanikov;Here is a reproducer for Ignite 2.3:
{code}
public class CacheNotConfiguredExample {

    TcpDiscoveryIpFinder ipFinder = new TcpDiscoveryVmIpFinder(true);

    public static void main(String[] args) {
        new CacheNotConfiguredExample().doMain();
    }

    void doMain() {
        new Thread(this::startServer).start();
        new Thread(this::startClient).start();
    }

    Ignite startClient() {
        IgniteConfiguration igniteCfg = igniteConfiguration();
        igniteCfg.setIgniteInstanceName(""Client Node"");
        igniteCfg.setClientMode(true);

        return Ignition.start(igniteCfg);
    }

    Ignite startServer() {
        IgniteConfiguration igniteCfg = igniteConfiguration();
        igniteCfg.setIgniteInstanceName(""Server Node"");
        igniteCfg.setServiceConfiguration(serviceConfiguration());
        igniteCfg.setClientMode(false);

        return Ignition.start(igniteCfg);
    }

    IgniteConfiguration igniteConfiguration() {
        IgniteConfiguration cfg = new IgniteConfiguration();

        TcpDiscoverySpi spi = new TcpDiscoverySpi();
        spi.setIpFinder(ipFinder);
        cfg.setDiscoverySpi(spi);

        return cfg;
    }

    ServiceConfiguration serviceConfiguration() {
        ServiceConfiguration svcCfg = new ServiceConfiguration();
        svcCfg.setName(""service"");
        svcCfg.setTotalCount(1);
        svcCfg.setService(new SimpleMapServiceImpl<Integer, String>());
        return svcCfg;
    }
}
{code}

There is a race, so the exception may appear not every time.;;;","12/Nov/17 18:06;ein;Was reproduced recently on TC https://ci.ignite.apache.org/viewLog.html?buildId=939024&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgniteBinarySImpleMapperBasic#testNameId-8143606663834956785;;;","28/Dec/17 10:54;aad;If there is any workaroud? As I see in my logs, if this case happens service not started (i.e. no log messages from init(final ServiceContext ctx)).;;;","19/Jun/18 12:49;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/4226

    IGNITE-4939 Receive event before cache initialized fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/4226.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #4226
    
----
commit 704f0fda313f559b810da9278fc120916c80795e
Author: ezhuravl <ezhuravlev@...>
Date:   2018-06-18T09:19:39Z

    IGNITE-4939 Receive event before cache initialized fix

----
;;;","21/Jun/18 10:00;ezhuravl;I've checked team city: https://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests24Java8_RunAll&branch_IgniteTests24Java8=pull%2F4226%2Fhead&tab=buildTypeStatusDiv - it contains some test failures, some of them are not reproducible, other were failed even before this fix.
Pr for this issue have test SystemCacheNotConfiguredTest, it reproduces this error on 2.4, but it looks like it was a race and it was somehow changed in 2.5 and it's not so easily reproducible. However, this issue still exists in master and should be properly fixed.

;;;","22/Jun/18 10:40;ilantukh;Code changes look OK to me.;;;","22/Jun/18 17:41;dpavlov;[~ezhuravl], thank you for contribution.

I've removed 2 unused imports and added 1 return tag for javadoc.

[~ilantukh] thank you for review.;;;","22/Jun/18 17:42;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/4226
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
.NET: IgniteConfiguration.EventStorageSpi,IGNITE-4935,13062773,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,10/Apr/17 04:43,10/Apr/17 09:35,14/Jul/23 06:20,10/Apr/17 09:35,2.0,,,,,2.0,,platforms,,,,0,.NET,,,"IGNITE-4812 introduced {{NoOpEventStorageSpi}} which is now the default. This breaks event queries in .NET, and the only workaround is Spring XML.

Let's add this to C# configuration and fix tests.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4812,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 10 09:35:25 UTC 2017,,,,,,,,,,"0|i3dexz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 08:52;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1761

    IGNITE-4935 .NET: IgniteConfiguration.EventStorageSpi

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4935

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1761.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1761
    
----
commit 7bf1475b28de57028019a457ac2d615cc19d1bb5
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T04:49:41Z

    IGNITE-4935 .NET: IgniteConfiguration.EventStorageSpi

commit 78408b10818f3f21410603ea1895ee8393bb2cff
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T05:51:57Z

    wip SPIs

commit 91f792e885a648fa13f206826ca5f53508189b54
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T06:11:56Z

    wip

commit e70b8eb16f6d823b87cb9a6317272fb7155fffe4
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T07:21:33Z

    wip

commit 6449b1c547fef2f0c90403a764d7602ec507150d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T07:23:51Z

    wip

commit cc3f0eebb80a33354c4ab57c249dec195524cdda
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T07:26:58Z

    platform read-write done

commit 7cc98215090e77348a1eeb9aa83f6f6224bdd47e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T07:32:43Z

    wip

commit a712017348ef59f37ccb58b5603146fb775dbb7a
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T08:37:00Z

    fix tests

commit 661b08c47ce91e257b000aab38a6850e69b27350
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-10T08:45:05Z

    wip tests

----
;;;","10/Apr/17 09:34;ptupitsyn;Fixed in master;;;","10/Apr/17 09:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1761
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
onePhase tx for invoke may fail on changing topology,IGNITE-4929,13062345,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,07/Apr/17 07:57,20/Apr/17 07:30,14/Jul/23 06:20,20/Apr/17 07:30,,,,,,2.0,,cache,,,,0,,,,"One phase tx for invoke may fail in this scenario:
- backup did not rebalanced partition yet
- in this case primary sends on backup new value instead of entry processor, in this case on backup we loose information about value calculated by entry processor
- primary fails before it receives response from backup, client sends 'check' request on backup to get return value, but return value on backup does not contain expected invoke result

Added test IgniteOnePhaseCommitInvokeTest.",,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2893,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 20 07:30:29 UTC 2017,,,,,,,,,,"0|i3dcav:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Apr/17 07:30;sboikov;When execute tx on changing topology we already send old value available on primary to all backups, so this old value can be used on backups to execute 'invoke'. So I got rid of code in GridDhtTxPrepareFuture sending to backups computed value instead of entry processors.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Join fails in LINQ when subquery is using Select clause,IGNITE-4926,13062099,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,gurustron,gurustron,gurustron,06/Apr/17 13:05,20/Jun/17 15:59,14/Jul/23 06:20,20/Jun/17 15:58,,,,,,2.1,,platforms,,,,0,.NET,LINQ,,"Using {{Join}} with subquery works when subquery does not contain {{Select}} clause:

{code}
var persons = GetPersonCache().AsCacheQueryable().Where(x => x.Key >= 0);
var orgs = GetOrgCache().AsCacheQueryable().Where(x => x.Key > 10);
var res = persons.Join(orgs,
                p => p.Value.OrganizationId,
                o => o.Value.Id, (p, o) => p)
                .Where(x => x.Key >= 0)
                .ToList();
{code}

And fails when subquery is using {{Select}}:

{code}
var res = persons
    .Join(
        orgs.Where(orgEntry => orgEntry.Value.Name == ""Org_1"")
            .Select(orgEntry => orgEntry.Key),
        e => e.Value.OrganizationId,
        i => i,
        (e, i) => e)
    .ToList();
{code}

Exception:
{code}
Failed to parse SQL query: select _T0._key, _T0._val from """".Person as _T0 inner join (select _T1._key from """".Organization as _T1 where (_T1._key > ?) and (_T1.Name = ?) ) as _T2 on (_T2._key, _T2._val = _T0.OrganizationId) where (_T0._key >= ?)
Caused by: org.h2.jdbc.JdbcSQLException: Column ""_T2._VAL"" not found;
{code}

This can be reproduced in {{CacheLinqTest.TestSubqueryJoin}} by adding next:

{code}
var foo = persons
    .Join(
        orgs.Where(orgEntry => orgEntry.Value.Name == ""Org_1"")
            .Select(orgEntry => orgEntry.Key),
        e => e.Value.OrganizationId,
        i => i,
        (e, i) => e)
    .ToArray();
{code}

or

{code}
var foo = orgs
    .Where(orgEntry => orgEntry.Value.Name == ""Org_1"")
    .Select(orgEntry => orgEntry.Key);
var bar = persons
    .Join(foo, e => e.Value.OrganizationId, i => i, (e, i) => e)
    .ToArray();
{code}",,githubbot,gurustron,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jun 20 15:59:41 UTC 2017,,,,,,,,,,"0|i3dasf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/17 15:15;githubbot;GitHub user gurustron opened a pull request:

    https://github.com/apache/ignite/pull/2166

    IGNITE-4926: .NET: Join fails in LINQ when subquery is using Select clause

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gurustron/ignite IGNITE-4926

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2166.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2166
    
----
commit a27b4aa67c074a9a653e1306ed79970d38c273ad
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-06-17T16:59:00Z

    analyze joinclause in VisitQuerySourceReference

commit f517131581bf305108687f32df3927a98a56be31
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-06-20T15:09:53Z

    some fixes

----
;;;","20/Jun/17 15:58;ptupitsyn;Looks good, merged to master: {{b16f725ecceddad3e97c98af7b0fe1e3ea256179}};;;","20/Jun/17 15:59;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2166
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCacheEntryListenerEagerTtlDisabledTest.testSynchronousEventsObjectKeyValue test fails while invoking from IgniteBinaryCacheTestSuite ,IGNITE-4925,13062083,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ezhuravl,ezhuravl,ezhuravl,06/Apr/17 12:16,26/Apr/17 13:26,14/Jul/23 06:20,19/Apr/17 11:26,2.0,,,,,2.0,,,,,,0,,,,,,ezhuravl,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 26 13:26:28 UTC 2017,,,,,,,,,,"0|i3daov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 13:04;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/1750

    IGNITE-4925 Fix IgniteCacheEntryListenerEagerTtlDisabledTest.hronousEventsObjectKeyValue…

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4925

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1750.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1750
    
----
commit b24e832ab1e17fe50c7b8bbddbbcf0207675cf61
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-04-06T13:02:44Z

    IGNITE-4925 Fix IgniteCacheEntryListenerEagerTtlDisabledTest.testSynchronousEventsObjectKeyValue test

----
;;;","06/Apr/17 13:09;ezhuravl;The problem was with BinaryObjects hashCode: now, instead of object hashCode BinaryArrayIdentityResolver used by default. 

tc link: http://ci.ignite.apache.org/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1750%2Fhead;;;","26/Apr/17 13:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1750
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryObjectBuilder field value access failed if its serialized with optimal marshaller,IGNITE-4917,13061701,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,05/Apr/17 11:27,07/Apr/17 10:15,14/Jul/23 06:20,07/Apr/17 10:12,,,,,,2.0,,binary,,,,0,,,,"Repro:
{noformat}
BinaryObjectBuilder bob = ignite.binary().builder(""test"");

bob.setField(""test1"", new BigInteger(""123456789""), BigInteger.class);
       
BinaryObjectBuilder bob2 = bob.build().toBuilder();
        
Object o = bob2.getField(""test1""); // This call failed with ""Invalid flag value: -2""
{noformat}",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4026,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 07 10:15:46 UTC 2017,,,,,,,,,,"0|i3d8bz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Apr/17 11:35;amashenkov;Looks like it was missed in IGNITE-4026.;;;","05/Apr/17 11:43;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1736

    IGNITE-4917: BinaryObjectBuilder field value access failed if its serialized with optimal marshaller

    Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4917

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1736.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1736
    
----
commit 1fcf992b30d86ad0c34df82c7a6afb5c52ac6106
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-04-05T11:33:27Z

    Fixed failure when accessing BinaryObjectBuilder field value serialized with OptimizedMarshaller .

----
;;;","07/Apr/17 09:40;amashenkov;TC tests looks fine;;;","07/Apr/17 10:15;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1736
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic type registration hangs for platformId > 0 on node restart,IGNITE-4914,13061667,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,sergey-chugunov,ptupitsyn,ptupitsyn,05/Apr/17 08:45,06/Apr/17 08:27,14/Jul/23 06:20,06/Apr/17 08:27,2.0,,,,,2.0,,binary,,,,0,,,,"{{MarshallerContextImpl.registerClassName}} hangs when called after node restart:

* Start two nodes, A and B
* Call {{registerClassName}} with {{platformId = 1}} and any class name from node B
* Stop node B
* Start node B again
* Call {{registerClassName}} with {{platformId = 1}} and any class name from node B

The last call hangs.",,githubbot,ptupitsyn,sergey-chugunov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4906,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 08:27:13 UTC 2017,,,,,,,,,,"0|i3d84f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Apr/17 14:00;githubbot;GitHub user sergey-chugunov-1985 opened a pull request:

    https://github.com/apache/ignite/pull/1741

    IGNITE-4914 distributing marshaller mappings for multiple platforms fixed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4914

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1741.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1741
    
----
commit 519e9d473db696452c169e87719cb74d5be17c9a
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-04-05T13:31:24Z

    IGNITE-4914 distributing marshaller mappings for multiple platforms was fixed

----
;;;","05/Apr/17 14:02;sergey-chugunov;Pull request is open and available here: https://github.com/apache/ignite/pull/1741;;;","06/Apr/17 08:26;ptupitsyn;Looks good to me. Merged to master.;;;","06/Apr/17 08:27;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1741
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Excessive service instances can be started with dynamic deployment.,IGNITE-4907,13061259,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,03/Apr/17 21:20,14/Apr/17 17:36,14/Jul/23 06:20,12/Apr/17 11:52,1.9,,,,,2.0,,managed services,,,,0,user-experience,,,"More than needed service instances can be started when service deployed dynamicly. 

For next service configuration all 3 instances will be started even if cluster has 2 ignites nodes only:
  cfg.setMaxPerNodeCount(1);
  cfg.setTotalCount(3);


See for details: http://apache-ignite-users.70518.x6.nabble.com/Ignite-may-start-more-service-instances-per-node-than-maxPerNodeCount-in-case-of-manual-redeploy-td11661.html",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Apr/17 21:20;amashenkov;ServiceDeploymentBug.java;https://issues.apache.org/jira/secure/attachment/12861762/ServiceDeploymentBug.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 14 17:36:17 UTC 2017,,,,,,,,,,"0|i3d5lr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 13:28;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1766

    IGNITE-4907: Excessive service instances can be started with dynamic deployment.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4907

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1766.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1766
    
----
commit b8cb82de65a529040ea18b0dc03fa7109c69bb4a
Author: Vasiliy Sisko <vsisko@gridgain.com>
Date:   2016-12-29T07:48:45Z

    IGNITE-4442 Implemented cache affinity configuration.
    
    (cherry picked from commit f4a1e6c)

commit 852f03829c997883376245e3515e47822e9012eb
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-01-11T09:34:23Z

    Merge branches 'ignite-1.7.5' and 'web-console-production' of https://github.com/gridgain/apache-ignite into web-console-production

commit d3e2e0c5574f7677645e73e1fbafaee3563895f1
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-01-25T07:27:01Z

    Merge branches 'ignite-1.7.6' and 'web-console-production' of https://github.com/gridgain/apache-ignite into web-console-production

commit 295f80d10da02692540435d46961a9c3cca99b3c
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-01-25T06:58:57Z

    IGNITE-4520 Added credential request for authentication on proxy.
    
    (cherry picked from commit ef04f35)

commit faa20530a707014ac34477cba8adaaa4b67de1bb
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-01-25T09:48:05Z

    IGNITE-1596 Fixed version sort.
    
    (cherry picked from commit 128ba07)

commit 1b3bbdb1758eb19c755dabcb5fe329529fa0f378
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-01-27T04:30:49Z

    IGNITE-4622 Fixed generation in domain model for cache store.
    
    (cherry picked from commit 43007d5)

commit a8355feef630a5c8c4edbe02224c8325dd5952d3
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-03T04:58:43Z

    IGNITE-4610 Added more informative message.
    
    (cherry picked from commit 9ff2a8f)

commit 94d8a6fc0a61bb3046e2ebd8b3cbffb8917c2b6a
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-08T04:43:22Z

    IGNITE-4472 Added user activities in Web Console.
    
    (cherry picked from commit 26ee9c2)

commit b571fd40f009709718bce0c969d47b62be06b8f6
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-08T10:05:08Z

    IGNITE-4472 Added user activities in Web Console.
    
    (cherry picked from commit 26ee9c2)

commit db48f545a83bb72cded77d8269fe4f8820e8380f
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-10T08:55:05Z

    IGNITE-4678 Web Console: Implemented demo load as service.
    
    (cherry picked from commit a600caf)

commit e4b54c985f256478ae2cae23b423d9b8e0842df8
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-13T02:48:50Z

    Merge branch 'ignite-1.8.3' of https://github.com/gridgain/apache-ignite into web-console-production

commit 2d6735a20ac8009d1ac3f003da4fcd319271bd71
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-02-09T09:44:41Z

    IGNITE-4676 Fixed hang if closure executed nested internal task with continuation. Added test.
    
    (cherry picked from commit e7a5307)

commit d307e2eced1fd10b007ee08c3dd113e7bb4f22ba
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-13T10:35:29Z

    IGNITE-4687 Added pool to process REST request in Web Agent.
    
    (cherry picked from commit 262a341)

commit 8874f99f44dc2edf08a525619edb49d5db70b938
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-02-14T15:44:57Z

    IGNITE-4641 - Refresh client attributes during reconnect

commit ca5956bedfc0c3bd18290c64b6a6c2e3f114a440
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-14T16:28:06Z

    IGNITE-4472 UI fix, minor fixes
    
    (cherry picked from commit 79e1e53)

commit db9252c9588c671279664484bb8c397312d265e6
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-15T09:08:57Z

    IGNITE-4678 Node version in range.
    
    (cherry picked from commit 2cfd55d)

commit 58c0c49d31605bf4608e7ee97099b75b324a782f
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-16T03:41:30Z

    IGNITE-4472 Fixed became this user.
    
    (cherry picked from commit ee832e4)

commit 2ccbf32ea3ecaff1068832accf37235a32734b4b
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-16T07:22:22Z

    IGNITE-4472 Minor UI fix.
    
    (cherry picked from commit 97c7ed7)

commit ef4886d5be7c708b917e97b1cd5fd766b2ad8450
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-16T11:38:40Z

    IGNITE-4472 Minor UI fix.
    
    (cherry picked from commit d4efbf3)

commit 05788b3188b30b5a3b39a75fe66301e03658408f
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-02-17T09:14:53Z

    IGNITE-3429: Added BinaryResolver configuration samples for  org.hibernate.cache.spi.CacheKey. This closes #1516.

commit 1f881aa70a3894af01135f4cc5e341a8130462c2
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-02-17T09:34:41Z

    IGNITE-4147 - Throw exception on connecting node to cluster with different SSL configuration

commit 382fbc9d0b55f794eb4a9045fe72ca06b480062f
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-02-17T09:35:18Z

    Merge remote-tracking branch 'origin/ignite-1.7.8' into ignite-1.7.8

commit 11bbec487dc174fac1acd6b50c940840305bc75a
Author: Alexey Kuznetsov <akuznetsov@apache.org>
Date:   2017-02-17T10:57:50Z

    IGNITE-4436 API for collecting list of running queries and cancel them.
    (cherry picked from commit 49237343d53ee33d44e5599cd7fe7da868ee30a1)

commit 2f57760dbb4fba948cd035498d2c7f71869c0665
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-02-17T13:15:31Z

    IGNITE-4624: Scan query optimization. This closes #1509.

commit c0e2df26f056cd11690d821146f05e3fd938906e
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-02-20T08:17:35Z

    IGNITE-3429 - Rollback due to broken compilation

commit c849534df6583043d6a1d4f454cb981a20896d1a
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-02-21T03:08:55Z

    IGNITE-4472 Added user activities in Web Console.
    
    (cherry picked from commit 26ee9c2865648118da97ee8ef84df990359edb96)

commit 9df5e94d5cf14ddd55e29b81989177a7798f7e1a
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-02-21T12:34:59Z

    IGNITE-4671 - FairAffinityFunction fails on node restart with backupFilter set and no backups

commit 9fcb3e74f91c8497b7b1358cdff40950cdf5c568
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-02-28T13:05:06Z

    IGNITE-4740 - Fix. Service could be deployed/undeployed twice on concurrent cancel and discovery event.

commit 231984d04d8391ccafb33ce995d942a9033cae44
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-03-01T02:49:08Z

    Web console: removed legacy backend port.
    
    (cherry picked from commit 5456caf)

commit 573624796b171b2420b87657598198f40a91f6bb
Author: Alexey Kuznetsov <akuznetsov@gridgain.com>
Date:   2017-03-01T15:09:40Z

    Implemented support for enforce join order flag.
    (cherry picked from commit a7f77d4)

----
;;;","14/Apr/17 17:36;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1766
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Examples tests hang,IGNITE-4906,13061164,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,03/Apr/17 15:43,06/Apr/17 08:54,14/Jul/23 06:20,06/Apr/17 08:54,2.0,,,,,2.0,,platforms,,,,0,.NET,,,"{{ExamplesTest}} hangs on various stages: http://195.239.208.174/viewType.html?buildTypeId=IgniteTests_IgnitePlatformNetLongRunnin

Logs show many multicast-related exceptions. We should probably avoid multicast in tests.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4914,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 08:53:55 UTC 2017,,,,,,,,,,"0|i3d50n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/17 16:32;ptupitsyn;We can copy config file to a temp location and replace config with {{TcpDiscoveryStaticIpFinder}} during tests.;;;","04/Apr/17 08:34;ptupitsyn;* {{ClientReconnectExample}} fixed to use {{TcpDiscoveryStaticIpFinder}}, it does not need external nodes
* Other examples keep {{TcpDiscoveryMulticastIpFinder}}, but are tested under {{TcpDiscoveryStaticIpFinder}}

There are still hangs caused by dynamic type registration, investigating.;;;","05/Apr/17 08:57;ptupitsyn;There is a bug on Java side in dynamic registration engine, IGNITE-4914 created. Waiting for the fix.;;;","06/Apr/17 08:53;ptupitsyn;IGNITE-4914 resolved dynamic registration hangs.
Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClassCastException in DML benchmarks,IGNITE-4905,13061146,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,03/Apr/17 14:53,10/Apr/17 14:33,14/Jul/23 06:20,10/Apr/17 14:33,1.9,,,,,2.0,,sql,,,,0,,,,,,al.psc,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 07 14:13:30 UTC 2017,,,,,,,,,,"0|i3d4wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/17 14:56;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1722

    IGNITE-4905 DML benchmarks ClassCastException fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4905

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1722.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1722
    
----
commit bae83e6c8700059dda16abc74d70514a655ea8d4
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-04-03T14:54:10Z

    IGNITE-4905 DML benchmarks ClassCastException fix

----
;;;","07/Apr/17 14:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1722
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: StartFromApplicationConfiguration does not work in ASP.NET,IGNITE-4902,13060712,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,31/Mar/17 15:27,03/Apr/17 13:09,14/Jul/23 06:20,03/Apr/17 13:09,1.7,,,,,2.0,,platforms,,,,0,.NET,,,"{{Ignition.StartFromApplicationConfiguration()}} fails with {{exePath must be specified when not running inside a stand alone exe}} error. Equivalent call in web environment would be {{System.Web.Configuration.WebConfigurationManager.OpenWebConfiguration(""~"")}}, but we really do not want System.Web dependency.

{{Ignition.StartFromApplicationConfiguration(""igniteConfiguration"")}} works, and that is what we should do from the method without arguments.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 03 13:09:32 UTC 2017,,,,,,,,,,"0|i3d287:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/17 13:09;ptupitsyn;Fixed in master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add path to ODBC driver installers to platforms\cpp\odbc\README.txt,IGNITE-4898,13060664,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dmagda,izaporozhtseva,izaporozhtseva,31/Mar/17 12:32,30/Aug/17 09:35,14/Jul/23 06:20,19/Apr/17 12:17,,,,,,2.0,,documentation,platforms,,,0,,,,"Add path to ODBC driver installers (/cpp/bin/odbc/) to platforms\cpp\odbc\README.txt:

""There are two ways to install ODBC driver currently. The first one is to use
32-bit or 64-bit installer. This is the most simple way and you are recommended to stick to it by default."" ",,dmagda,githubbot,isapego,izaporozhtseva,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 21 11:29:48 UTC 2017,,,,,,,,,,"0|i3d1xj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/17 12:45;dmagda;[~isapego], please review and update the readme.io documentation if needed.;;;","31/Mar/17 13:20;isapego;[~dmagda] sure, will do.;;;","06/Apr/17 15:43;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1753

    IGNITE-4898: Added ODBC installers paths to README

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4898

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1753.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1753
    
----
commit 149137918ae0b8b4f82e86165470b8a8eb6fa797
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-04-06T15:39:09Z

    IGNITE-4898: Added ODBC installers paths to README

----
;;;","06/Apr/17 17:32;isapego;[~dmagda], done. You can find updated documentation here: https://apacheignite.readme.io/docs/odbc-driver-20#installing-odbc-driver

Can you take a look?;;;","19/Apr/17 12:17;vozerov;Reviewed, merged.;;;","21/Apr/17 11:29;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1753
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OptimizedMarshaller should not failed on GridClientNodeBean serialization,IGNITE-4896,13060644,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,31/Mar/17 10:20,14/Apr/17 11:33,14/Jul/23 06:20,14/Apr/17 11:33,1.9,,,,,2.0,,clients,,,,0,,,,"If node attributes contain some unknown for Optimized marshaller classes (not present in classnames.properties) it will failed to serialize them.

I think it is better to skip such objects and print warning in node log and GridClient log.",,kuaw26,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 14 11:33:32 UTC 2017,,,,,,,,,,"0|i3d1t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/17 11:54;kuaw26;[~vkulichenko] Could you review my changes?
See https://github.com/gridgain/apache-ignite/pull/63;;;","01/Apr/17 04:18;vkulichenko;[~kuaw26], I don't like that the change is made on the class descriptor level. It implements the protocol and writing some dummy strings there looks completely wrong. It's correct for the protocol to throw an exception if something can't be serialized, and it's up to upper-level code to catch is and write these strings or do whatever else is needed.

If there is something wrong with {{GridClientNodeBean}} in particular, let's fix it in its {{write/readExternal}} methods.;;;","02/Apr/17 16:00;kuaw26;[~vkulichenko] I reworked fix (rolled back changes in marshaller) and changed  {{GridClientNodeBean}} serialization logic.
Please review once again.;;;","08/Apr/17 22:21;vkulichenko;[~kuaw26], looks good now. Feel free to merge.;;;","14/Apr/17 11:33;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Key is deserialized during transactional get() even if withKeepBinary is set,IGNITE-4891,13060517,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dkarachentsev,vkulichenko,vkulichenko,30/Mar/17 22:44,13/Apr/17 06:32,14/Jul/23 06:20,13/Apr/17 06:32,1.9,,,,,2.0,,cache,,,,0,,,,This test reproduces the issue: https://github.com/olegskoblya/tx-binary-bug,,dkarachentsev,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 13 06:32:03 UTC 2017,,,,,,,,,,"0|i3d10v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/17 07:42;dkarachentsev;Valentin, please review the fix: [PR 1715|https://github.com/apache/ignite/pull/1715]
Upsource: [IGNT-CR-157|http://reviews.ignite.apache.org/ignite/review/IGNT-CR-157];;;","08/Apr/17 22:18;vkulichenko;[~dkarachentsev], your PR is based on ignite-1.8 for some reason and actually has conflicts with master. Can you please check and resolve?;;;","10/Apr/17 13:51;dkarachentsev;Please check for master [PR 1767|https://github.com/apache/ignite/pull/1767];;;","12/Apr/17 12:23;sboikov;Hi Dmitry,

I reviewed fix, looks good to me.

Thanks;;;","13/Apr/17 06:32;dkarachentsev;Thanks Semen!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to create tables automatically because 'unconfigured columnfamily' error is not handled for older Cassandra versions,IGNITE-4890,13060491,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,venky1963,venky1963,venky1963,30/Mar/17 20:51,18/Dec/18 04:00,14/Jul/23 06:20,18/Dec/18 03:55,1.9,,,,,2.8,,general,,,,0,patch,,,"PROBLEM:
When running Ignite with older Cassandra versions (i.e DSE 4.8.10, Cassandra 2.1.6 or older), we noticed that only the first tabel in an Ignite config is created and the others fail with 'unconfigured columnfamily' exception.

SUGGESTED FIX:
It appears that the error from Cassandra is changed in newer versions to 'unconfigured table ...' and this is handled.  The conditions checked in 
org.apache.ignite.cache.store.cassandra.common.CassandraHelper needs to be modified to handle the older Cassandra errors. 

We are submitting a patch to do that. 

13:44:28,753 ERROR com.walmartlabs.qarth.ignite.tests.utils.CacheStoreHelper [main] - Failed to execute Cassandra CQL statement: insert into ""test1"".""blob_test2"" (""key"", ""value"") values (?,?);
class org.apache.ignite.IgniteException: Failed to execute Cassandra CQL statement: insert into ""test1"".""blob_test2"" (""key"", ""value"") values (?,?);
	at org.apache.ignite.cache.store.cassandra.session.CassandraSessionImpl.execute(CassandraSessionImpl.java:163)
	at org.apache.ignite.cache.store.cassandra.CassandraCacheStore.write(CassandraCacheStore.java:276)
	at com.walmartlabs.qarth.ignite.tests.cassandra.CassandraDirectPersistenceTest.blobStrategyTest(CassandraDirectPersistenceTest.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: class org.apache.ignite.IgniteException: Failed to prepare Cassandra CQL statement: insert into ""test1"".""blob_test2"" (""key"", ""value"") values (?,?);
	at org.apache.ignite.cache.store.cassandra.session.CassandraSessionImpl.prepareStatement(CassandraSessionImpl.java:615)
	at org.apache.ignite.cache.store.cassandra.session.CassandraSessionImpl.execute(CassandraSessionImpl.java:133)
	... 27 more
Caused by: com.datastax.driver.core.exceptions.InvalidQueryException: unconfigured columnfamily blob_test2
	at com.datastax.driver.core.exceptions.InvalidQueryException.copy(InvalidQueryException.java:50)
	at com.datastax.driver.core.DriverThrowables.propagateCause(DriverThrowables.java:37)
	at com.datastax.driver.core.AbstractSession.prepare(AbstractSession.java:98)
	at org.apache.ignite.cache.store.cassandra.session.CassandraSessionImpl.prepareStatement(CassandraSessionImpl.java:597)
	... 28 more
Caused by: com.datastax.driver.core.exceptions.InvalidQueryException: unconfigured columnfamily blob_test2
	at com.datastax.driver.core.Responses$Error.asException(Responses.java:136)
	at com.datastax.driver.core.SessionManager$4.apply(SessionManager.java:220)
	at com.datastax.driver.core.SessionManager$4.apply(SessionManager.java:196)
	at com.google.common.util.concurrent.Futures$AsyncChainingFuture.doTransform(Futures.java:1442)
	at com.google.common.util.concurrent.Futures$AsyncChainingFuture.doTransform(Futures.java:1433)
	at com.google.common.util.concurrent.Futures$AbstractChainingFuture.run(Futures.java:1408)
	at com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:456)
	at com.google.common.util.concurrent.AbstractFuture.executeListener(AbstractFuture.java:817)
	at com.google.common.util.concurrent.AbstractFuture.complete(AbstractFuture.java:753)
	at com.google.common.util.concurrent.AbstractFuture.set(AbstractFuture.java:613)
	at com.datastax.driver.core.Connection$Future.onSet(Connection.java:1174)
	at com.datastax.driver.core.Connection$Future.onSet(Connection.java:1168)
	at com.datastax.driver.core.RequestHandler.setFinalResult(RequestHandler.java:184)
	at com.datastax.driver.core.RequestHandler.access$2500(RequestHandler.java:43)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.setFinalResult(RequestHandler.java:798)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:617)
	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1005)
	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:928)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:304)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:304)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:304)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:276)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:263)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:318)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:304)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)
	at java.lang.Thread.run(Thread.java:745)",,dpavlov,githubbot,kuaw26,venky1963,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,Tue Dec 18 04:00:24 UTC 2018,,,,,,,,,,"0|i3d0v3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/17 17:31;githubbot;GitHub user venky1963 opened a pull request:

    https://github.com/apache/ignite/pull/1719

    https://issues.apache.org/jira/browse/IGNITE-4890

    Support older versions of Cassandra where the table not exists message
    comes out as 'unconfigured columnfamily' instead of the newer
    'unconfigured table' in newer Cassandra versions

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/venky1963/ignite master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1719.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1719
    
----
commit c08a9d33b3b49535e50837916b9f2324589e0558
Author: vkandas <vkandas@172.28.88.26>
Date:   2017-03-31T17:22:45Z

    https://issues.apache.org/jira/browse/IGNITE-4890
    Support older versions of Cassandra where the table not exists message
    comes out as 'unconfigured columnfamily' instead of the newer
    'unconfigured table' in newer Cassandra versions

----
;;;","31/Mar/17 17:33;venky1963;Patch pull request created:

https://issues.apache.org/jira/browse/IGNITE-4890 #1719;;;","04/Jul/17 13:43;vozerov;[~irudyak], could you please take a look?;;;","23/Apr/18 17:40;dpavlov;Hi [~kuaw26] could you please take a look?;;;","14/Dec/18 14:58;dpavlov;[~venky1963] could you assign the issue to yourself? It will be easier for committers to find it. Now It is unassigned but patch available.;;;","18/Dec/18 03:55;kuaw26;Looks good to me. Merged to master.

This fix will be a part of Ignite 2.8 release.;;;","18/Dec/18 04:00;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1719
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
An assertion error in TcpDiscoverySelfTest,IGNITE-4888,13060393,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,gvvinblade,gvvinblade,gvvinblade,30/Mar/17 15:10,31/Mar/17 11:23,14/Jul/23 06:20,31/Mar/17 08:19,,,,,,,,,,,,0,,,,"The exception as shown below sometimes appears in output:

{noformat}
java.lang.AssertionError
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.distributedExchange(GridDhtPartitionsExchangeFuture.java:735)
	at org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.init(GridDhtPartitionsExchangeFuture.java:503)
	at org.apache.ignite.internal.processors.cache.GridCachePartitionExchangeManager$ExchangeWorker.body(GridCachePartitionExchangeManager.java:1678)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,githubbot,gvvinblade,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 31 08:28:19 UTC 2017,,,,,,,,,,"0|i3d09b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/17 15:23;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/1703

    IGNITE-4888

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4888

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1703.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1703
    
----
commit 6de3a8c695316f3b4d189a4b6db081b95b9396c2
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-03-30T15:21:23Z

    [IGNITE-4888]An assertion error in TcpDiscoverySelfTest

----
;;;","31/Mar/17 08:19;yzhdanov;I have merged the changes. Thanks for contribution.;;;","31/Mar/17 08:28;githubbot;Github user gvvinblade closed the pull request at:

    https://github.com/apache/ignite/pull/1703
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VisorServiceTask should properly handle ClassNotFound exceptions.,IGNITE-4886,13060367,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,30/Mar/17 13:53,14/Apr/17 11:37,14/Jul/23 06:20,14/Apr/17 11:37,1.9,,,,,2.0,,wizards,,,,0,,,,"{code}
org.apache.ignite.IgniteException: Failed to find service class: xxxx
        at org.apache.ignite.internal.processors.service.ServiceDescriptorImpl.serviceClass(ServiceDescriptorImpl.java:68)
        at org.apache.ignite.internal.visor.service.VisorServiceDescriptor.<init>(VisorServiceDescriptor.java:71)
        at org.apache.ignite.internal.visor.service.VisorServiceTask$VisorServiceJob.run(VisorServiceTask.java:65)
        at org.apache.ignite.internal.visor.service.VisorServiceTask$VisorServiceJob.run(VisorServiceTask.java:44)
        at org.apache.ignite.internal.visor.VisorJob.execute(VisorJob.java:69)
        at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:560)
        at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6564)
        at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:554)
        at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:483)
        at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
        at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1114)
        at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1894)
        at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1082)
        at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:710)
        at org.apache.ignite.internal.managers.communication.GridIoManager.access$1700(GridIoManager.java:102)
        at org.apache.ignite.internal.managers.communication.GridIoManager$5.run(GridIoManager.java:673)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ClassNotFoundException: xxxx
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1702)
        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1547)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:264)
        at org.apache.ignite.internal.processors.service.ServiceDescriptorImpl.serviceClass(ServiceDescriptorImpl.java:65)
        ... 18 common frames omitted
{code}",,kuaw26,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 14 11:37:38 UTC 2017,,,,,,,,,,"0|i3d03j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 10:06;vsisko;Added catching of exceptions on service class name detection.;;;","14/Apr/17 11:37;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Meaningless exception on generic type in BinaryConfiguration,IGNITE-4885,13060351,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,30/Mar/17 12:58,06/Apr/17 06:42,14/Jul/23 06:20,06/Apr/17 06:42,1.6,,,,,2.0,,platforms,,,,0,.NET,,,"{{BinaryTypeConfiguration}} does not support open generic types (when parameters are not specified, like {{typeof(List<>)}} instead of {{typeof(List<int>}}). But the exception is not helpful, and stack trace is very short (because of native transition).

We should try to provide meaningful exception message and a proper stack trace.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 06:41:57 UTC 2017,,,,,,,,,,"0|i3czzz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Apr/17 11:09;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1733

    IGNITE-4885 .NET: Disallow abstract and open generic types in BinaryConfiguration

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4885

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1733.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1733
    
----
commit 3122c258fc7a7f3969e33f3c24dc3af568c13255
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T10:00:50Z

    IGNITE-4885 .NET: Meaningless exception on generic type in BinaryConfiguration

commit 7af83635c23d8a24e4763c226e922f2245bb8cf8
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T10:28:20Z

    wip

commit c96db8a12a6e40bff82cf75b568b601cfab5d263
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T10:31:07Z

    Fix exception propagation

commit 06dd3289cdce8a3fb6eeb77c727833dfa0ac3d4c
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T10:34:15Z

    wip

commit 270c881e8f6e7e175ea3a8c166e029231c1ccb00
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T10:39:02Z

    Add type validation

commit 29bb64949811ec474eac38a53f587d3a2d48f604
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T10:52:35Z

    Add check for abstract types

commit f79c138aceb9702ce746631f30cc363b9dc4dd30
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-04-05T11:05:19Z

    Fix tests

----
;;;","05/Apr/17 11:14;ptupitsyn;* Open generics and abstract types are disallowed
* Exception propagation fixed to preserve original stack trace;;;","06/Apr/17 06:39;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1733
;;;","06/Apr/17 06:41;ptupitsyn;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
System pool starvation while partition evicting.,IGNITE-4879,13060029,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,amashenkov,amashenkov,amashenkov,29/Mar/17 12:57,10/Apr/17 09:47,14/Jul/23 06:20,10/Apr/17 09:47,1.7,,,,,2.0,,cache,,,,0,,,,"Some system pool threads is waiting for others made partition eviction.
We should change partition eviction in async way, to allow only one thread do useful job without blocking other threads.

Startpoint is clearAll() call in GridDhtLocalPartition.tryEvict() method.
TryEvict method is called synchronously during few basic operations that can stuck unexpectedly.",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 10:26;amashenkov;thread-dump-example.log;https://issues.apache.org/jira/secure/attachment/12862269/thread-dump-example.log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 08:58:47 UTC 2017,,,,,,,,,,"0|i3cy0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/17 16:56;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1704

    IGNITE-4879: System pool starvation while partition evicting.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4879

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1704.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1704
    
----

----
;;;","30/Mar/17 16:58;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1704
;;;","06/Apr/17 08:58;amashenkov;TC tests looks fine.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary benchmarks for legacy binary identity,IGNITE-4869,13059413,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ezhuravl,ezhuravl,ezhuravl,27/Mar/17 14:40,28/Mar/17 07:17,14/Jul/23 06:20,28/Mar/17 07:16,,,,,,2.0,,general,,,,0,,,,IgniteLegacyBinaryIdentityPutBenchmark & IgniteLegacyBinaryIdentityGetBenchmark isn't needed after removing BinaryObjectBuilder.hashCode(int) method ,,ezhuravl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4558,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Mar 27 15:06:03 UTC 2017,,,,,,,,,,"0|i3cu7z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Mar/17 15:06;ezhuravl;PR: https://github.com/apache/ignite/pull/1677;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Entry can't be removed from index with 'Object.class' key type configured.,IGNITE-4868,13059411,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,amashenkov,amashenkov,27/Mar/17 14:39,29/Mar/17 16:47,14/Jul/23 06:20,29/Mar/17 16:47,,,,,,2.0,,sql,,,,0,,,,"Using Object.class as index key type cause an unexpected behaviour. Entry won't be removed from index due to inconsistent value type of entry and of table type descriptor.

Startpoints are IgniteH2Indexing.remove() and GridQueryProcessor.initializeCache()",,al.psc,amashenkov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Mar/17 17:11;amashenkov;SqlIndexTest.java;https://issues.apache.org/jira/secure/attachment/12860688/SqlIndexTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 28 12:55:13 UTC 2017,,,,,,,,,,"0|i3cu7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Mar/17 12:55;al.psc;Patch available https://github.com/apache/ignite/pull/1685;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log4jLogger can change RootLogger logging level unexpectedly.,IGNITE-4863,13058918,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,24/Mar/17 15:07,10/Apr/17 14:25,14/Jul/23 06:20,10/Apr/17 14:12,1.5.0.final,,,,,2.0,,general,,,,0,,,,"Setting System property ""IGNITE_CONSOLE_APPENDER"" to true will set rootLogger level to OFF that can be unexpectedly as well.

See http://apache-ignite-users.70518.x6.nabble.com/Logging-ignite-log4j-jar-td11400.html

Seems, we should check if there is no other loggers configured which can inherits rootLogger logging level before raising level or turning rootLogger off.
",,amashenkov,githubbot,javastuff.sam@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 10 14:25:59 UTC 2017,,,,,,,,,,"0|i3cr5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Mar/17 18:27;javastuff.sam@gmail.com;Looked at code and seems like check for log configuration is made, 
{code}
                    if(!isConfigured()) { 
                        this.impl.setLevel(Level.OFF); 
                    }
{code}
but not completely correct. Below is the method from Log4JLogger 

{code}
    public static boolean isConfigured() { 
        return Logger.getRootLogger().getAllAppenders().hasMoreElements(); 
    } 
{code}

It is looking at appenders from rootLogger only. It should also check for other Loggers. Probably below code should fix it. 

{code}
    public static boolean isConfigured() { 
        Enumeration appenders = Logger.getRootLogger().getAllAppenders(); 
        if (appenders.hasMoreElements()) { 
            return true; 
        } 
        else { 
            Enumeration loggers = LogManager.getCurrentLoggers() ; 
            while (loggers.hasMoreElements()) { 
                Logger c = (Logger) loggers.nextElement(); 
                if (c.getAllAppenders().hasMoreElements()) 
                    return true; 
            } 
        } 
        return false; 
    }
{code}


And below code also needs to to be removed, which is changing rootLogger log level.

{code}
                        if(logLevel != null) {
                            this.impl.setLevel(logLevel);
                        }
{code};;;","28/Mar/17 13:25;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1687

    IGNITE-4863: Log4jLogger can change RootLogger logging level unexpectedly.

    …n other loggers.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4863

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1687.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1687
    
----
commit dedbdfaa1c34890484ff184d77612716fb340ff1
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-03-28T13:22:57Z

    Disallow change RootLogger log-level if it can have negative effect on other loggers.

----
;;;","10/Apr/17 14:25;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1687
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in reading data from IGFS,IGNITE-4862,13058887,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ilyak,dkarachentsev,dkarachentsev,24/Mar/17 13:15,18/Dec/17 12:58,14/Jul/23 06:20,18/Dec/17 12:58,1.9,,,,,2.4,,hadoop,,,,0,,,,"{noformat}
D:\app\CodexRT.CodexRT_20170314-1>hadoop\bin\hadoop fs -copyToLocal igfs:///cacheLink/test3.orc D:\test3.orc
-copyToLocal: Fatal internal error
java.lang.NullPointerException
        at org.apache.ignite.internal.processors.hadoop.impl.igfs.HadoopIgfsInputStream$FetchBufferPart.flatten(HadoopIgfsInputStream.java:458)
        at org.apache.ignite.internal.processors.hadoop.impl.igfs.HadoopIgfsInputStream$DoubleFetchBuffer.flatten(HadoopIgfsInputStream.java:511)
        at org.apache.ignite.internal.processors.hadoop.impl.igfs.HadoopIgfsInputStream.read(HadoopIgfsInputStream.java:177)
        at java.io.DataInputStream.read(DataInputStream.java:100)
        at org.apache.hadoop.io.IOUtils.copyBytes(IOUtils.java:91)
        at org.apache.hadoop.io.IOUtils.copyBytes(IOUtils.java:59)
        at org.apache.hadoop.io.IOUtils.copyBytes(IOUtils.java:119)
        at org.apache.hadoop.fs.shell.CommandWithDestination$TargetFileSystem.writeStreamToFile(CommandWithDestination.java:466)
        at org.apache.hadoop.fs.shell.CommandWithDestination.copyStreamToTarget(CommandWithDestination.java:391)
        at org.apache.hadoop.fs.shell.CommandWithDestination.copyFileToTarget(CommandWithDestination.java:328)
        at org.apache.hadoop.fs.shell.CommandWithDestination.processPath(CommandWithDestination.java:263)
        at org.apache.hadoop.fs.shell.CommandWithDestination.processPath(CommandWithDestination.java:248)
        at org.apache.hadoop.fs.shell.Command.processPaths(Command.java:317)
        at org.apache.hadoop.fs.shell.Command.processPathArgument(Command.java:289)
        at org.apache.hadoop.fs.shell.CommandWithDestination.processPathArgument(CommandWithDestination.java:243)
        at org.apache.hadoop.fs.shell.Command.processArgument(Command.java:271)
        at org.apache.hadoop.fs.shell.Command.processArguments(Command.java:255)
        at org.apache.hadoop.fs.shell.CommandWithDestination.processArguments(CommandWithDestination.java:220)
        at org.apache.hadoop.fs.shell.Command.processRawArguments(Command.java:201)
        at org.apache.hadoop.fs.shell.Command.run(Command.java:165)
        at org.apache.hadoop.fs.FsShell.run(FsShell.java:287)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)
        at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:84)
        at org.apache.hadoop.fs.FsShell.main(FsShell.java:340)
{noformat}

Details in discussion: [http://apache-ignite-users.70518.x6.nabble.com/NullPointerException-when-using-IGFS-td11328.html]",,dkarachentsev,iveselovskiy,juanrh,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 26 13:28:58 UTC 2017,,,,,,,,,,"0|i3cqz3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/17 15:42;iveselovskiy;The property {{prefetchBlocks}} must be set to non-zero value to reproduce the problem ({{perNodeParallelBatchCount}} should be > 0, but it is 16 by default):
{code}
                <bean class=""org.apache.ignite.configuration.FileSystemConfiguration"">
                 .....
                    <property name=""prefetchBlocks"" value=""32""/>
{code}
After that the problem was reproducible just after node start with an attempt to read a 44Mb file via IGFS (with  {{./hadoop-ig fs -copyToLocal igfs://localhost:10500/tmp/myfile /tmp/}} ) that exists on HDFS (secondary Fs), but is yet missing in the IGFS caches.

The following exception happens on the Ignite node at the same time: 
{code}
Exception in thread ""igfs-#50%null%"" java.lang.NullPointerException
	at org.apache.ignite.internal.processors.hadoop.impl.igfs.HadoopIgfsSecondaryFileSystemPositionedReadable.read(HadoopIgfsSecondaryFileSystemPositionedReadable.java:104)
	at org.apache.ignite.internal.processors.igfs.IgfsLazySecondaryFileSystemPositionedReadable.read(IgfsLazySecondaryFileSystemPositionedReadable.java:64)
	at org.apache.ignite.internal.processors.igfs.IgfsDataManager.secondaryDataBlock(IgfsDataManager.java:419)
	at org.apache.ignite.internal.processors.igfs.IgfsDataManager$4.applyx(IgfsDataManager.java:357)
	at org.apache.ignite.internal.processors.igfs.IgfsDataManager$4.applyx(IgfsDataManager.java:346)
	at org.apache.ignite.internal.util.lang.IgniteClosureX.apply(IgniteClosureX.java:38)
	at org.apache.ignite.internal.util.future.GridFutureChainListener.applyCallback(GridFutureChainListener.java:78)
	at org.apache.ignite.internal.util.future.GridFutureChainListener.access$000(GridFutureChainListener.java:30)
	at org.apache.ignite.internal.util.future.GridFutureChainListener$1.run(GridFutureChainListener.java:65)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
{code}

The problem is that class `org.apache.ignite.internal.processors.hadoop.impl.igfs.HadoopIgfsSecondaryFileSystemPositionedReadable` was designed fro single-threaded access, but in fact was accessed by multiple threads. That lead to unexpected situation, when org.apache.ignite.internal.processors.hadoop.impl.igfs.HadoopIgfsSecondaryFileSystemPositionedReadable#in returned null , that caused a bunch of further errors. 
Fixed by making HadoopIgfsSecondaryFileSystemPositionedReadable thread safe (underlying secondary file system input stream has its own mechanisms to preserve consistency upon multithreaded access.);;;","30/Mar/17 19:34;iveselovskiy;https://github.com/apache/ignite/pull/1706;;;","31/Mar/17 14:36;iveselovskiy;Current patch makes classes {{IgfsLazySecondaryFileSystemPositionedReadable}} and  {{HadoopIgfsSecondaryFileSystemPositionedReadable}} thread safe. As a result, upon concurrent blocks fetching no trouble happens.;;;","03/Apr/17 08:00;vozerov;[~iveselovskiy],
I am not quite sure why do we need such complex solution. All our streams are accessed from a single thread in usual case. Isn't it enough to wrap dangerous calls with the code below?
{code}
synchronized(mux) { ... }
{code};;;","03/May/17 14:38;iveselovskiy;I prepared another version of the fix (pull request https://github.com/apache/ignite/pull/1901) that leaves the 2 problematic classes almost unsynchronized, but adds {{ synchronized (mux) {} }} if needed to use them in concurrent context.  
This fix also proven to work and looks simple, but for me it looks less preferable, because it does not make good encapsulation and responsibility separation, so I would recommend to use 1st version of the fix. The  {{ LazyValue }} class is just generic purpose utility class , that is to be placed in utilities. Other than that , the change is small , and , what is more important, it makes the logic very clear.

  ;;;","26/May/17 11:34;vozerov;[~iveselovskiy], my comments:
1) Let's avoid any volatiles and simply make {{read}} and {{close}} methods fully synchronized.
2) Instead of synchronizing on {{this}} and even leaking it to the outside ({{IgfsDataManager}}), let's synchronize on internal mutexes ({{new Object()}}).;;;","26/May/17 13:28;iveselovskiy;[~vozerov] , thanks, fixed.
One note: as I understand, reading from the underlying secondary Fs stream does not need synchronization, only getting this stream and closing it needs to be synchronized.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
redis protocol not list at the document page,IGNITE-4857,13058501,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pgarg,netroby,netroby,23/Mar/17 07:52,07/Apr/17 04:23,14/Jul/23 06:20,07/Apr/17 04:23,,,,,,2.0,,,,,,0,,,,"The redis protocol source code exists. but can not find in the document page.
https://ignite.apache.org/features/clientprotos.html",,dmagda,netroby,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 23 16:56:08 UTC 2017,,,,,,,,,,"0|i3colb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Mar/17 16:56;dmagda;Thanks for bringing this up. Here is a technical documentation:
https://apacheignite.readme.io/docs/redis

[~pgarg], please update [1] adding Redis integration there.

[1] https://ignite.apache.org/features/clientprotos.html;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error when switching between notebooks,IGNITE-4855,13058198,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,pkonstantinov,pkonstantinov,pkonstantinov,22/Mar/17 11:48,23/Mar/17 09:56,14/Jul/23 06:20,23/Mar/17 09:55,1.9,,,,,2.0,,,,,,0,,,,"{code}
TypeError: Cannot redefine property: ace
    at Function.defineProperty (<anonymous>)
    at https://staging-console.my-host.com/app.9102c5d071fa1be61279.js:13:17181
    at https://staging-console.my-host.com/app.9102c5d071fa1be61279.js:7:22481
    at u (https://staging-console.my-host.com/vendor.ceecd70bedaaa641a449.js:1:1909)
    at Function.gs (https://staging-console.my-host.com/vendor.ceecd70bedaaa641a449.js:2:11302)
    at r (https://staging-console.my-host.com/app.9102c5d071fa1be61279.js:7:22424)
    at y (https://staging-console.my-host.com/app.9102c5d071fa1be61279.js:7:23641)
    at Object.link (https://staging-console.my-host.com/app.9102c5d071fa1be61279.js:7:23679)
    at https://staging-console.my-host.com/vendor.ceecd70bedaaa641a449.js:103:5660
    at we (https://staging-console.myhost.com/vendor.ceecd70bedaaa641a449.js:104:11056) <div class=""sql-editor ng-pristine ng-untouched ng-valid ace_editor ace-chrome"" ignite-ace=""{onLoad: aceInit(paragraph), theme: &quot;chrome&quot;, mode: &quot;sql&quot;, require: [&quot;ace/ext/language_tools&quot;],advanced: {enableSnippets: false, enableBasicAutocompletion: true, enableLiveAutocompletion: true}}"" ng-model=""paragraph.query"" style=""font-family: monospace; font-size: 14px;"">
{code}",,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 23 09:55:27 UTC 2017,,,,,,,,,,"0|i3cmpz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Mar/17 02:38;anovikov;Fixed error on switch between notebooks.
[~pkonstantinov], please check.;;;","23/Mar/17 09:55;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: the button 'Project structure' on Summary doesn't work under Firefox 52,IGNITE-4854,13058173,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,pkonstantinov,pkonstantinov,22/Mar/17 10:18,06/Apr/17 09:50,14/Jul/23 06:20,06/Apr/17 09:50,,,,,,2.0,,wizards,,,,0,,,,When I click on the button nothing is happens,,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 09:50:27 UTC 2017,,,,,,,,,,"0|i3cmkf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 09:50;pkonstantinov;Now all works fine.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hang in loop inside BPlusTree.invoke,IGNITE-4853,13058162,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,sergi,sboikov,sboikov,22/Mar/17 09:29,19/Apr/17 09:00,14/Jul/23 06:20,19/Apr/17 09:00,,,,,,2.0,,cache,,,,0,,,,"I observed on TeamCity several hangs with similar symptom: it seems some thread infinitely loops inside BPlusTree.invoke

Here are several thread dumps taken during test execution (full log is attached):
{noformat}
[07:01:57]W:		 [org.apache.ignite:ignite-core] [04:01:57,653][WARN ][grid-timeout-worker-#430627%worker3%][G] >>> Possible starvation in striped pool: sys-stripe-11-#430608%worker3%
[07:01:57]W:		 [org.apache.ignite:ignite-core] [Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155137946, order=1490155141225, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155137954, order=1490155140839, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155137954, order=1490155140838, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=27, arr=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11069572, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155137994, order=1490155144344, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155137994, order=1490155144343, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[5,5,2,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,6,6,6,6,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11069993, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155137996, order=1490155144408, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138002, order=1490155145052, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138002, order=1490155145051, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=306e6dc0-6a43-4c7a-9cf5-888c8b666003, taskNameHash=0, updateCntrs=GridLongList [idx=7, arr=[3,3,4,3,3,3,3]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070105, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138012, order=1490155145977, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138012, order=1490155145976, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=26, arr=[5,5,5,4,4,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070169, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138045, order=1490155147341, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138053, order=1490155148166, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138056, order=1490155148292, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138056, order=1490155148291, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070632, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138060, order=1490155149901, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138060, order=1490155149900, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=20, arr=[11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070691, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138067, order=1490155149533, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138079, order=1490155150667, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138083, order=1490155151172, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138083, order=1490155151171, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=29, arr=[8,8,8,8,10,8,9,8,8,8,8,8,8,8,5,8,8,8,8,9,9,9,9,6,9,6,9,9,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071011, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138086, order=1490155151374, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138088, order=1490155151596, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138088, order=1490155151595, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[9,10,10,10,10,10,10,10,10,9,12,9,11,9,9,9,9,9,9,9,6,9,9,9,9,10,10,10,10,7]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071106, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138118, order=1490155155273, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138118, order=1490155155272, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=27, arr=[9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,8,9,8,9,9]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071597, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138128, order=1490155158591, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138128, order=1490155158590, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=21, arr=[20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071771, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138147, order=1490155161328, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138147, order=1490155161327, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=22, arr=[20,23,23,23,23,23,24,24,24,20,24,24,24,24,24,24,21,21,25,25,25,25]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072078, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138158, order=1490155159121, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138158, order=1490155159120, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072217, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161831, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161830, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[15,15,12,15,12,12,15,15,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072546, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161864, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161863, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[14,10,14,14,14,14,10,14,14,9,14,9,14,14,14,9,14,14,14,14,14,14,14,14,14,14,14,14,14,14]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072554, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridNearGetRequest [futId=f03dfa6fa51-558cd504-2acb-4739-9e9e-8c8f233f9e9d, miniId=113dfa6fa51-558cd504-2acb-4739-9e9e-8c8f233f9e9d, ver=GridCacheVersion [topVer=101635144, time=1490155202931, order=1490155166112, nodeOrder=3], keyMap=null, reload=false, readThrough=true, skipVals=false, recovery=false, topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, accessTtl=-1]]]]
[07:01:57]W:		 [org.apache.ignite:ignite-core] deadlock: false
[07:01:57]W:		 [org.apache.ignite:ignite-core] completed: 2
[07:01:57]W:		 [org.apache.ignite:ignite-core] Thread [name=""sys-stripe-11-#430608%worker3%"", id=550044, state=RUNNABLE, blockCnt=0, waitCnt=7]
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.pagemem.impl.PageMemoryNoStoreImpl.readLockPage(PageMemoryNoStoreImpl.java:356)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.pagemem.impl.PageNoStoreImpl.getForReadPointer(PageNoStoreImpl.java:72)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.util.PageHandler.readLock(PageHandler.java:150)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.util.PageHandler.readPage(PageHandler.java:84)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.BPlusTree.invokeDown(BPlusTree.java:1524)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.BPlusTree.invoke(BPlusTree.java:1459)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:936)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:338)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:1617)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processDhtAtomicUpdateRequest(GridDhtAtomicCache.java:3276)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$1800(GridDhtAtomicCache.java:126)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:372)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:367)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1227)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:855)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
[07:01:57]W:		 [org.apache.ignite:ignite-core]         at java.lang.Thread.run(Thread.java:745)

[07:02:57]W:		 [org.apache.ignite:ignite-core] [04:02:57,682][WARN ][grid-timeout-worker-#430627%worker3%][G] >>> Possible starvation in striped pool: sys-stripe-11-#430608%worker3%
[07:02:57]W:		 [org.apache.ignite:ignite-core] [Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155137946, order=1490155141225, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155137954, order=1490155140839, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155137954, order=1490155140838, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=27, arr=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11069572, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155137994, order=1490155144344, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155137994, order=1490155144343, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[5,5,2,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,6,6,6,6,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11069993, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155137996, order=1490155144408, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138002, order=1490155145052, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138002, order=1490155145051, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=306e6dc0-6a43-4c7a-9cf5-888c8b666003, taskNameHash=0, updateCntrs=GridLongList [idx=7, arr=[3,3,4,3,3,3,3]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070105, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138012, order=1490155145977, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138012, order=1490155145976, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=26, arr=[5,5,5,4,4,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070169, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138045, order=1490155147341, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138053, order=1490155148166, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138056, order=1490155148292, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138056, order=1490155148291, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070632, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138060, order=1490155149901, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138060, order=1490155149900, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=20, arr=[11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070691, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138067, order=1490155149533, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138079, order=1490155150667, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138083, order=1490155151172, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138083, order=1490155151171, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=29, arr=[8,8,8,8,10,8,9,8,8,8,8,8,8,8,5,8,8,8,8,9,9,9,9,6,9,6,9,9,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071011, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138086, order=1490155151374, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138088, order=1490155151596, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138088, order=1490155151595, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[9,10,10,10,10,10,10,10,10,9,12,9,11,9,9,9,9,9,9,9,6,9,9,9,9,10,10,10,10,7]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071106, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138118, order=1490155155273, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138118, order=1490155155272, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=27, arr=[9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,8,9,8,9,9]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071597, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138128, order=1490155158591, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138128, order=1490155158590, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=21, arr=[20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071771, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138147, order=1490155161328, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138147, order=1490155161327, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=22, arr=[20,23,23,23,23,23,24,24,24,20,24,24,24,24,24,24,21,21,25,25,25,25]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072078, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138158, order=1490155159121, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138158, order=1490155159120, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072217, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161831, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161830, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[15,15,12,15,12,12,15,15,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072546, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161864, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161863, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[14,10,14,14,14,14,10,14,14,9,14,9,14,14,14,9,14,14,14,14,14,14,14,14,14,14,14,14,14,14]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072554, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridNearGetRequest [futId=f03dfa6fa51-558cd504-2acb-4739-9e9e-8c8f233f9e9d, miniId=113dfa6fa51-558cd504-2acb-4739-9e9e-8c8f233f9e9d, ver=GridCacheVersion [topVer=101635144, time=1490155202931, order=1490155166112, nodeOrder=3], keyMap=null, reload=false, readThrough=true, skipVals=false, recovery=false, topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, accessTtl=-1]]]]
[07:02:57]W:		 [org.apache.ignite:ignite-core] deadlock: false
[07:02:57]W:		 [org.apache.ignite:ignite-core] completed: 2
[07:02:57]W:		 [org.apache.ignite:ignite-core] Thread [name=""sys-stripe-11-#430608%worker3%"", id=550044, state=RUNNABLE, blockCnt=0, waitCnt=7]
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.pagemem.impl.PageMemoryNoStoreImpl.readLockPage(PageMemoryNoStoreImpl.java:356)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.pagemem.impl.PageNoStoreImpl.getForReadPointer(PageNoStoreImpl.java:72)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.util.PageHandler.readLock(PageHandler.java:150)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.util.PageHandler.readPage(PageHandler.java:84)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.BPlusTree.invokeDown(BPlusTree.java:1524)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.BPlusTree.invoke(BPlusTree.java:1459)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:936)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:338)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:1617)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processDhtAtomicUpdateRequest(GridDhtAtomicCache.java:3276)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$1800(GridDhtAtomicCache.java:126)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:372)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:367)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1227)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:855)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
[07:02:57]W:		 [org.apache.ignite:ignite-core]         at java.lang.Thread.run(Thread.java:745)

[07:03:27]W:		 [org.apache.ignite:ignite-core] [04:03:27,701][WARN ][grid-timeout-worker-#430627%worker3%][G] >>> Possible starvation in striped pool: sys-stripe-11-#430608%worker3%
[07:03:27]W:		 [org.apache.ignite:ignite-core] [Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155137946, order=1490155141225, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155137954, order=1490155140839, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155137954, order=1490155140838, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=27, arr=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11069572, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155137994, order=1490155144344, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155137994, order=1490155144343, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[5,5,2,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,6,6,6,6,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11069993, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155137996, order=1490155144408, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138002, order=1490155145052, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138002, order=1490155145051, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=306e6dc0-6a43-4c7a-9cf5-888c8b666003, taskNameHash=0, updateCntrs=GridLongList [idx=7, arr=[3,3,4,3,3,3,3]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070105, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138012, order=1490155145977, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138012, order=1490155145976, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=26, arr=[5,5,5,4,4,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070169, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138045, order=1490155147341, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138053, order=1490155148166, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138056, order=1490155148292, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138056, order=1490155148291, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070632, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138060, order=1490155149901, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138060, order=1490155149900, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=20, arr=[11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11070691, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138067, order=1490155149533, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138079, order=1490155150667, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138083, order=1490155151172, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138083, order=1490155151171, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=29, arr=[8,8,8,8,10,8,9,8,8,8,8,8,8,8,5,8,8,8,8,9,9,9,9,6,9,6,9,9,6]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071011, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateResponse [futVer=GridCacheVersion [topVer=101635144, time=1490155138086, order=1490155151374, nodeOrder=4], failedKeys=null, err=null, nearEvicted=null]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138088, order=1490155151596, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138088, order=1490155151595, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[9,10,10,10,10,10,10,10,10,9,12,9,11,9,9,9,9,9,9,9,6,9,9,9,9,10,10,10,10,7]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071106, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138118, order=1490155155273, nodeOrder=5], writeVer=GridCacheVersion [topVer=101635144, time=1490155138118, order=1490155155272, nodeOrder=5], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=40805166-9a3d-43ee-b19c-65716a70c004, taskNameHash=0, updateCntrs=GridLongList [idx=27, arr=[9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,8,9,8,9,9]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071597, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138128, order=1490155158591, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138128, order=1490155158590, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=21, arr=[20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11071771, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138147, order=1490155161328, nodeOrder=3], writeVer=GridCacheVersion [topVer=101635144, time=1490155138147, order=1490155161327, nodeOrder=3], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, updateCntrs=GridLongList [idx=22, arr=[20,23,23,23,23,23,24,24,24,20,24,24,24,24,24,24,21,21,25,25,25,25]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072078, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138158, order=1490155159121, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138158, order=1490155159120, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072217, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161831, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161830, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[15,15,12,15,12,12,15,15,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072546, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridDhtAtomicUpdateRequest [futVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161864, nodeOrder=6], writeVer=GridCacheVersion [topVer=101635144, time=1490155138196, order=1490155161863, nodeOrder=6], topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], keys=[KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true], KeyCacheObjectImpl [val=null, hasValBytes=true]], vals=[CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true], CacheObjectImpl [val=null, hasValBytes=true]], prevVals=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], ttls=null, conflictExpireTimes=null, nearTtls=null, nearExpireTimes=null, syncMode=FULL_SYNC, nearKeys=null, nearVals=null, forceTransformBackups=false, subjId=506b022d-eb29-4617-a295-0d5112cd2005, taskNameHash=0, updateCntrs=GridLongList [idx=30, arr=[14,10,14,14,14,14,10,14,14,9,14,9,14,14,14,9,14,14,14,14,14,14,14,14,14,14,14,14,14,14]], keepBinary=false, flags=0, super=GridCacheMessage [msgId=11072554, depInfo=null, err=null, skipPrepare=false, cacheId=1254100233, cacheId=1254100233]]]], Message closure [msg=GridIoMessage [plc=2, topic=TOPIC_CACHE, topicOrd=8, ordered=false, timeout=0, skipOnTimeout=false, msg=GridNearGetRequest [futId=f03dfa6fa51-558cd504-2acb-4739-9e9e-8c8f233f9e9d, miniId=113dfa6fa51-558cd504-2acb-4739-9e9e-8c8f233f9e9d, ver=GridCacheVersion [topVer=101635144, time=1490155202931, order=1490155166112, nodeOrder=3], keyMap=null, reload=false, readThrough=true, skipVals=false, recovery=false, topVer=AffinityTopologyVersion [topVer=7, minorTopVer=0], subjId=20fe25c6-2928-456e-aaaf-ae3dfbefd002, taskNameHash=0, accessTtl=-1]]]]
[07:03:27]W:		 [org.apache.ignite:ignite-core] deadlock: false
[07:03:27]W:		 [org.apache.ignite:ignite-core] completed: 2
[07:03:27]W:		 [org.apache.ignite:ignite-core] Thread [name=""sys-stripe-11-#430608%worker3%"", id=550044, state=RUNNABLE, blockCnt=0, waitCnt=7]
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.BPlusTree.invokeDown(BPlusTree.java:1524)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.database.tree.BPlusTree.invoke(BPlusTree.java:1459)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:936)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:338)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:1617)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processDhtAtomicUpdateRequest(GridDhtAtomicCache.java:3276)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$1800(GridDhtAtomicCache.java:126)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:372)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:367)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1227)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:855)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at o.a.i.i.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
[07:03:27]W:		 [org.apache.ignite:ignite-core]         at java.lang.Thread.run(Thread.java:745)
{noformat}

Team City link:
http://ci.ignite.apache.org/viewLog.html?buildId=509038&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteCacheRestarts2",,sboikov,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/17 09:30;sboikov;restarts_hang.zip;https://issues.apache.org/jira/secure/attachment/12859897/restarts_hang.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 19 09:00:01 UTC 2017,,,,,,,,,,"0|i3cmhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 09:36;sboikov;Probably this can be related to https://issues.apache.org/jira/browse/IGNITE-4851 when tree is concurrently destroyed while update is progress, let's postpone investigation until IGNITE-4851 is fixed.;;;","19/Apr/17 09:00;sergi;The issue was caused by concurrent destroy.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IllegalStateException: Tree is being concurrently destroyed in atomic cache,IGNITE-4851,13058151,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ilantukh,sboikov,sboikov,22/Mar/17 09:08,10/Apr/17 16:48,14/Jul/23 06:20,10/Apr/17 16:48,,,,,,2.0,,cache,,,,0,,,,"I observed several hangs on TC in tests with changing topology, most probably reason of hang is this error:
{noformat}
[07:26:03]W:		 [org.apache.ignite:ignite-core] java.lang.IllegalStateException: Tree is being concurrently destroyed: p-1006##CacheData
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.checkDestroyed(BPlusTree.java:908)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.invoke(BPlusTree.java:1451)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.invoke(IgniteCacheOffheapManagerImpl.java:936)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.invoke(IgniteCacheOffheapManagerImpl.java:338)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerUpdate(GridCacheMapEntry.java:1617)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.processDhtAtomicUpdateRequest(GridDhtAtomicCache.java:3276)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache.access$1800(GridDhtAtomicCache.java:126)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:372)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.dht.atomic.GridDhtAtomicCache$8.apply(GridDhtAtomicCache.java:367)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1227)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:855)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
[07:26:03]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{noformat}

This error was thrown on backup, as result it did not send reply to primary and update hang. I guess this exception is possible when partition is evicted while do GridCacheMapEntry.innerUpdate.

Attached full log from TC.",,agoncharuk,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Mar/17 09:08;sboikov;Ignite_Tests_Ignite_Binary_Objects_Cache_2_1651.log.zip;https://issues.apache.org/jira/secure/attachment/12859889/Ignite_Tests_Ignite_Binary_Objects_Cache_2_1651.log.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 10 16:48:47 UTC 2017,,,,,,,,,,"0|i3cmfj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Mar/17 09:16;sboikov;Found on TC similar error for tx cache (http://ci.ignite.apache.org/viewLog.html?buildId=509037&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteDataGridRestarts):
{noformat}
[06:48:49]W:		 [org.apache.ignite:ignite-core] [03:48:49,283][ERROR][sys-stripe-21-#208348%near.GridCachePartitionedNodeRestartTest3%][GridNearTxLocal] Commit failed.
[06:48:49]W:		 [org.apache.ignite:ignite-core] class org.apache.ignite.internal.transactions.IgniteTxHeuristicCheckedException: Commit produced a runtime exception (all transaction entries will be invalidated): GridDhtTxRemote[id=bb1a124fa51-060ed29c-0000-0003-0000-015af421a12e, concurrency=PESSIMISTIC, isolation=REPEATABLE_READ, state=COMMITTING, invalidate=false, rollbackOnly=false, nodeId=4a97442c-3646-4319-a315-5d7e1d500002, duration=0]
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commitIfLocked(GridDistributedTxRemoteAdapter.java:732)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commit(GridDistributedTxRemoteAdapter.java:802)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:1191)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processDhtTxFinishRequest(IgniteTxHandler.java:1103)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$7.apply(IgniteTxHandler.java:182)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$7.apply(IgniteTxHandler.java:180)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1227)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:855)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
[06:48:49]W:		 [org.apache.ignite:ignite-core] Caused by: java.lang.IllegalStateException: Tree is being concurrently destroyed: p-8##CacheData
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.checkDestroyed(BPlusTree.java:908)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.doRemove(BPlusTree.java:1600)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.remove(BPlusTree.java:1435)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.remove(IgniteCacheOffheapManagerImpl.java:1104)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.remove(IgniteCacheOffheapManagerImpl.java:362)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.removeValue(GridCacheMapEntry.java:3195)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.innerRemove(GridCacheMapEntry.java:1084)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commitIfLocked(GridDistributedTxRemoteAdapter.java:646)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	... 16 more
[06:48:49]W:		 [org.apache.ignite:ignite-core] [03:48:49,284][ERROR][sys-stripe-21-#208348%near.GridCachePartitionedNodeRestartTest3%][GridNearTxLocal] Failed to invalidate transaction entries while reverting a commit.
[06:48:49]W:		 [org.apache.ignite:ignite-core] java.lang.IllegalStateException: Tree is being concurrently destroyed: p-8##CacheData
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.checkDestroyed(BPlusTree.java:908)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.doRemove(BPlusTree.java:1600)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.database.tree.BPlusTree.remove(BPlusTree.java:1435)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl$CacheDataStoreImpl.remove(IgniteCacheOffheapManagerImpl.java:1104)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.IgniteCacheOffheapManagerImpl.remove(IgniteCacheOffheapManagerImpl.java:362)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.removeValue(GridCacheMapEntry.java:3195)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheMapEntry.invalidate(GridCacheMapEntry.java:2174)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxAdapter.uncommit(IgniteTxAdapter.java:437)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commitIfLocked(GridDistributedTxRemoteAdapter.java:737)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxRemoteAdapter.commit(GridDistributedTxRemoteAdapter.java:802)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.finish(IgniteTxHandler.java:1191)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.processDhtTxFinishRequest(IgniteTxHandler.java:1103)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$7.apply(IgniteTxHandler.java:182)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler$7.apply(IgniteTxHandler.java:180)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.processMessage(GridCacheIoManager.java:827)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onMessage0(GridCacheIoManager.java:369)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.handleMessage(GridCacheIoManager.java:293)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.access$000(GridCacheIoManager.java:95)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.processors.cache.GridCacheIoManager$1.onMessage(GridCacheIoManager.java:238)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1227)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:855)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:109)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:785)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at org.apache.ignite.internal.util.StripedExecutor$Stripe.run(StripedExecutor.java:428)
[06:48:49]W:		 [org.apache.ignite:ignite-core] 	at java.lang.Thread.run(Thread.java:745)
{noformat};;;","10/Apr/17 16:48;agoncharuk;Merged to ignite-3477;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteCache.containsKey() may return false if entry is not in local backup yet on atomic cache,IGNITE-4842,13057507,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,20/Mar/17 12:22,24/Jul/19 16:38,14/Jul/23 06:20,18/May/17 16:16,1.9,,,,,2.1,,,,,,0,,,,"Reproducer is in [PR#1641|https://github.com/apache/ignite/pull/1641]",,amashenkov,dkarachentsev,githubbot,sboikov,,,,,,,,,"dspavlov commented on issue #1851: IGNITE-4842 Now containsKey() respects isReadFromBackup() flag.
URL: https://github.com/apache/ignite/pull/1851#issuecomment-514708092
 
 
   
   IGNITE-4842 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:38;githubbot;600","dspavlov commented on pull request #1851: IGNITE-4842 Now containsKey() respects isReadFromBackup() flag.
URL: https://github.com/apache/ignite/pull/1851
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/19 16:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu May 18 13:27:51 UTC 2017,,,,,,,,,,"0|i3cign:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Mar/17 16:08;amashenkov;It looks like GridCacheAdapter.getAllAsync() ignores 'forcePrimary' flag.
It may affect 'get' and others operations as well.;;;","21/Apr/17 09:48;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/1851

    IGNITE-4842 Now containsKey() respects isReadFromBackup() flag.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4842-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1851.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1851
    
----
commit b47de415093ff75ddd2367e1e853ec2881ea6f78
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-04-21T09:47:39Z

    IGNITE-4842 Now containsKey() respects isReadFromBackup() flag.

----
;;;","03/May/17 09:22;dkarachentsev;[PR 1851|https://github.com/apache/ignite/pull/1851];;;","04/May/17 13:46;sboikov;Hi,

Reviewed changes, fix looks ok but you did not include test in the suite. Also I did not understand why test you added extends IgniteCacheContainsKeyAbstractSelfTest, I think it should extend GridCacheAbstractSelfTest, please fix this.

Thanks;;;","15/May/17 14:18;dkarachentsev;Hi Semen,

I've fixed it, please check.

Thanks!;;;","18/May/17 13:27;sboikov;Looks good.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on execution of unknown internal task by name,IGNITE-4838,13057456,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,vsisko,vsisko,20/Mar/17 08:42,05/Jul/19 14:16,14/Jul/23 06:20,29/Mar/17 15:43,1.9,,,,,2.0,,compute,,,,0,,,,"Caused by: java.lang.NullPointerException
	at org.jsr166.ConcurrentHashMap8.get(ConcurrentHashMap8.java:2619)
	at org.apache.ignite.internal.managers.deployment.GridDeployment.internalTask(GridDeployment.java:373)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:624)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:447)
	at org.apache.ignite.internal.IgniteComputeImpl.execute(IgniteComputeImpl.java:267)",,amashenkov,githubbot,kuaw26,vsisko,yzhdanov,,,,,,,,"dspavlov commented on issue #1673: IGNITE-4838 Check task class on null when task name is invalid.
URL: https://github.com/apache/ignite/pull/1673#issuecomment-508772990
 
 
   
   IGNITE-4838 | Closed 
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/19 14:16;githubbot;600","dspavlov commented on pull request #1673: IGNITE-4838 Check task class on null when task name is invalid.
URL: https://github.com/apache/ignite/pull/1673
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/19 14:16;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 30 04:07:57 UTC 2017,,,,,,,,,,"0|i3ci5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Mar/17 16:32;amashenkov;Seems, it happened with assertions disabled and when neither task nor its class not name was passed to GridTaskProcessor.startTask().
We should throw an exception with suited reason if task class name can't be resolved.;;;","27/Mar/17 09:05;githubbot;GitHub user vsisko opened a pull request:

    https://github.com/apache/ignite/pull/1673

    IGNITE-4838 Check task class on null when task name is invalid.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4838

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1673.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1673
    
----
commit 68a67c3bf1a3a8400a25be3175862c32d8626e9e
Author: vsisko <vsisko@gridgain.com>
Date:   2017-03-27T08:47:37Z

    IGNITE-4838 Check task class on null when task name is invalid.

----
;;;","27/Mar/17 10:51;vsisko;Added Check task class on null when task name is invalid. Added test.;;;","27/Mar/17 13:41;kuaw26;Vasiliy, I reviewed your changes. Please fix my comments that I made in Upsource.;;;","28/Mar/17 03:11;vsisko;http://reviews.ignite.apache.org/ignite/review/IGNT-CR-136;;;","28/Mar/17 04:31;vsisko;Yakov. Please review fix.;;;","29/Mar/17 14:41;yzhdanov;Vassily, the fix looks good to me. [~kuaw26], can you please merge the changes?;;;","30/Mar/17 04:07;kuaw26;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Yarn deployment is ignoring memory limits,IGNITE-4836,13056976,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,tnovak,tnovak,17/Mar/17 12:23,23/Mar/17 14:43,14/Jul/23 06:20,23/Mar/17 14:43,1.9,2.0,,,,,,yarn,,,,0,patch,,,"Yarn deployment is ignoring  IGNITE_MEMORY_OVERHEAD_PER_NODE, so server nodes can be killed by yarn due to ""running beyond physical memory limits"".","Linux, Ignite deployment over yarn",ntikhonov,tnovak,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/17 12:33;tnovak;yarn_mem_overhead.patch;https://issues.apache.org/jira/secure/attachment/12859279/yarn_mem_overhead.patch","17/Mar/17 15:47;tnovak;yarn_mem_overhead_test.patch;https://issues.apache.org/jira/secure/attachment/12859311/yarn_mem_overhead_test.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,Thu Mar 23 14:43:16 UTC 2017,,,,,,,,,,"0|i3cf6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/17 12:33;tnovak;Added missing variable to the environment.
Though more config fields can be missing.;;;","17/Mar/17 12:36;ntikhonov;[~tnovak]
You've created ticket with {{PATCH AVAILABLE}}. Do you have patch or pull-request that fixed the issue? Also could you share more about case when Ignite-yarn ignored this parameter?;;;","17/Mar/17 12:37;ntikhonov;[~tnovak]
Thanks for your contribution. I'll review your patch soon.;;;","17/Mar/17 14:00;ntikhonov;[~tnovak]
Could you add tests on this chages?;;;","17/Mar/17 15:47;tnovak;Simple test for ClusterProperties.toEnvs();;;","23/Mar/17 14:43;ntikhonov;[~tnovak]
Sorry for delay. Looks good for me! I'll merge the changes to master and the fix will be available in 2.0 release.
Thank you for your contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service is deployed on client when service configuration is provided on startup,IGNITE-4832,13056669,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,vkulichenko,vkulichenko,16/Mar/17 13:58,07/Apr/17 09:56,14/Jul/23 06:20,07/Apr/17 09:41,1.9,,,,,2.0,,managed services,,,,0,newbie,,,"In case service configuration is provided on startup (i.e. as a part of {{IgniteConfiguration}}), the service can be deployed on the client node which is incorrect. Client nodes should be filtered out by default, like it's done in {{IgniteServices.deployXXX(..)}} methods.

Test reproducing the behavior is attached.",,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Mar/17 13:59;vkulichenko;ServiceConfigTest.java;https://issues.apache.org/jira/secure/attachment/12859100/ServiceConfigTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 07 09:56:36 UTC 2017,,,,,,,,,,"0|i3cda7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 10:07;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1748

    IGNITE-4832: Service is deployed on client when service configuration is provided on startup.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4832

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1748.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1748
    
----

----
;;;","07/Apr/17 09:56;githubbot;Github user AMashenkov closed the pull request at:

    https://github.com/apache/ignite/pull/1748
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spring context is not injected into POJO store when JDBC driver is utilized,IGNITE-4829,13056485,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,kuaw26,dmagda,dmagda,15/Mar/17 23:46,24/Mar/17 03:47,14/Jul/23 06:20,24/Mar/17 03:47,1.9,,,,,2.0,,,,,,0,,,,"Faced with the exception reported in the discussion initiated a long time ago:
http://apache-ignite-users.70518.x6.nabble.com/ignite-Spring-application-context-resource-is-not-injected-problem-td6377.html

Basically, I get the same exception:

{code}
class org.apache.ignite.IgniteException: Spring application context resource is not injected.
	at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStoreFactory.create(CacheJdbcPojoStoreFactory.java:171)
	at org.apache.ignite.cache.store.jdbc.CacheJdbcPojoStoreFactory.create(CacheJdbcPojoStoreFactory.java:100)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.createCache(GridCacheProcessor.java:1261)
	at org.apache.ignite.internal.processors.cache.GridCacheProcessor.onKernalStart(GridCacheProcessor.java:791)
	at org.apache.ignite.internal.IgniteKernal.start(IgniteKernal.java:950)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start0(IgnitionEx.java:1799)
	at org.apache.ignite.internal.IgnitionEx$IgniteNamedInstance.start(IgnitionEx.java:1602)
	at org.apache.ignite.internal.IgnitionEx.start0(IgnitionEx.java:1042)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:569)
	at org.apache.ignite.internal.IgnitionEx.start(IgnitionEx.java:516)
	at org.apache.ignite.Ignition.start(Ignition.java:322)
	at org.apache.ignite.internal.jdbc2.JdbcConnection.getIgnite(JdbcConnection.java:191)
	at org.apache.ignite.internal.jdbc2.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.apache.ignite.IgniteJdbcDriver.connect(IgniteJdbcDriver.java:361)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:270)
	at Main.initIgniteConnection(Main.java:260)
	at Main.main(Main.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)
{code}

The exception occurs when my application uses Ignite JDBC driver to connect to a cluster. The cluster persists data to a relation database (Postrgers), so I have the POJO store defined in the application configuration. The latter was generated for by Apache Ignite Web Console and the POJO store is set by {{CacheJdbcPojoStoreFactory.dataSourceBean}} which causes the error.

If I set the POJO store using {{CacheJdbcPojoStoreFactory.dataSource}} method then the issue disappears.

To reproduce the issue do the following:
- Unzip the attached project and start {{ServerNode}} class.
- Start the sample application that uses Ignite JDBC driver and you'll get the reported exception.

Change the configuration from {{ignite-jdbc-bad}} to {{ignite-jdbc}} and the exception dissappears because the latter sets the store using {{CacheJdbcPojoStoreFactory.dataSource}}.
 ",,agura,dmagda,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/17 23:47;dmagda;SampleJdbcApp.zip;https://issues.apache.org/jira/secure/attachment/12858972/SampleJdbcApp.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 24 02:29:46 UTC 2017,,,,,,,,,,"0|i3cc5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/17 17:06;kuaw26;[~agura], could you please review my changes in branch ignite-4829.
See diff: https://github.com/apache/ignite/compare/ignite-4829
http://reviews.ignite.apache.org/ignite/review/IGNT-CR-127

Also I fixed tests.;;;","22/Mar/17 12:42;agura;Thanks [~kuaw26]! I've added a few comments to review. But in general looks good for me. ;;;","24/Mar/17 02:29;kuaw26;[~agura], I fixed your comments, could you please review my changes once again.
TC passed: http://195.239.208.174/viewLog.html?buildId=512876&tab=buildResultsDiv&buildTypeId=IgniteTests_IgniteJdbcDriver;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SQL: Eviction to swap failed if segmented index is used.,IGNITE-4826,13056313,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,15/Mar/17 15:18,11/Apr/17 07:36,14/Jul/23 06:20,28/Mar/17 15:12,1.9,,,,,2.0,,sql,,,,0,trivial,,,"PFA stacktrace attached.

SegmentID should be calculated from row key field in GridH2TreeIndex.findOne(row) method.",,amashenkov,githubbot,sergi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"15/Mar/17 15:18;amashenkov;stacktrace.log;https://issues.apache.org/jira/secure/attachment/12858888/stacktrace.log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 28 15:13:14 UTC 2017,,,,,,,,,,"0|i3cb33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Mar/17 15:02;sergi;Looks good to me.;;;","28/Mar/17 15:12;sergi;Merged to master;;;","28/Mar/17 15:13;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1628
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SpringCache#putIfAbsent - wrong implementation,IGNITE-4823,13056200,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,daradurvs,daradurvs,15/Mar/17 07:30,01/Apr/17 04:56,14/Jul/23 06:20,01/Apr/17 04:56,,,,,,,,cache,,,,0,,,,"*Current implementation:*
{code}
Object old;
if (val == null)
    old = cache.withSkipStore().putIfAbsent(key, NULL);
else
    old = cache.putIfAbsent(key, val);
return old != null ? fromValue(old) : null;
{code}
cache.putIfAbsent(key, val) - return boolean, not cached value

*Excepted behavior (according to the Spring-docs)*
{code}
Object existingValue = cache.get(key);
if (existingValue == null) {
    cache.put(key, value);
    return null;
} else {
    return existingValue;
}
{code}

1. Need to fix implementation
2. Cover SpringCache class with unit-tests",,daradurvs,githubbot,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Apr 01 04:56:13 UTC 2017,,,,,,,,,,"0|i3cadz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Mar/17 07:59;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/1624

    IGNITE-4823

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-4823

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1624.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1624
    
----
commit 69f9bc93d59d736c518279f60e14b4c7a85a06be
Author: Vyacheslav Daradur <daradurvs@gmail.com>
Date:   2017-03-15T07:56:43Z

    ignite-4823: unit-tests for whole SpringCache class were added

commit 5c6373900f8a51f7014ad428edb18cc6a5b8873f
Author: Vyacheslav Daradur <daradurvs@gmail.com>
Date:   2017-03-15T07:57:21Z

    ignite-4823: putIfAbsent-method implementation was fixed

----
;;;","15/Mar/17 15:58;vkulichenko;Vyacheslav,

Very good catch on the bug! But the fix is completely wrong though :) Here are my comments:
# First of all, you call {{putIfAbsent}} and then {{get}} but this is not atomic and can produce incorrect result. There is {{getAndPutIfAbsent}} method which you should use for this purpose.
# Do not remove {{withSkipStore}} flag for {{NULL}} value. It's a special flag value and it doesn't make sense to persist it.;;;","16/Mar/17 07:07;daradurvs;[~vkulichenko]
Thank you for notes. You're right.

Ready for review, [ci.tests|http://ci.ignite.apache.org/viewLog.html?buildId=500925].;;;","23/Mar/17 13:48;daradurvs;Shouldn't be merged before IGNITE-4211.
Perhaps it will be necessary to change tests.;;;","01/Apr/17 04:56;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1624
;;;","01/Apr/17 04:56;vkulichenko;[~daradurvs], I looked at IGNITE-4211 and didn't find any reason for these tickets to depend on each other. So I merged your fix. Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Add EnforceJoinOrder option on Queries screen,IGNITE-4821,13056161,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,anovikov,anovikov,15/Mar/17 04:26,15/Mar/17 04:44,14/Jul/23 06:20,15/Mar/17 04:41,,,,,,2.0,,wizards,,,,0,,,,"Add support for on Query tab.
{code:java}
SqlFieldsQuery.setEnforceJoinOrder(true);
{code}",,anovikov,pkonstantinov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 15 04:44:15 UTC 2017,,,,,,,,,,"0|i3ca5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Mar/17 04:30;vsisko;Implemented enforce join option on query execution in Web console.;;;","15/Mar/17 04:32;anovikov;Reviewed. Looks good for me. [~pkonstantinov], please test.;;;","15/Mar/17 04:34;pkonstantinov;Successfully tested. Please merge.;;;","15/Mar/17 04:44;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Contains fails in LINQ when subquery comes from a variable,IGNITE-4817,13055876,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,14/Mar/17 09:03,06/Apr/17 07:33,14/Jul/23 06:20,06/Apr/17 07:33,1.9,,,,,2.0,,platforms,,,,0,.NET,LINQ,,"Using Contains with subquery works when subquery is inline:

{code}
var res = personsQry.Where(x => orgsQry.Where(o => o.Value.Size < 100000).Select(o => o.Key).Contains(x.Value.OrgId));
{code}

And fails when extracted into a variable:

{code}
var orgIds = orgsQry.Where(o => o.Value.Size < 100000).Select(o => o.Key);
		
var res = personsQry.Where(x => orgIds.Contains(x.Value.OrgId));
{code}

Exception:
{code}
Failed to parse query: select _T0._key, _T0._val from ""persons-linq"".Person as _T0 where (_T0.OrgId IN (select _T1._key, _T1._val from ""orgs-linq"".Organization as _T1 ))
Caused by: org.h2.jdbc.JdbcSQLException: Subquery is not a single column query
{code}

This can be reproduced in {{CacheLinqTest.TestContains}} by extracting a variable:

{code}
var foo = orgCache
  .Where(orgEntry => orgEntry.Value.Name == ""Org_1"")
  .Select(orgEntry => orgEntry.Key);
{code}",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4425,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 07:33:10 UTC 2017,,,,,,,,,,"0|i3c8dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Apr/17 20:23;githubbot;GitHub user gurustron opened a pull request:

    https://github.com/apache/ignite/pull/1745

    IGNITE-4817

    QueryParser switched to use CompoundExpressionTreeProcessor.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gurustron/ignite IGNITE-4817

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1745.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1745
    
----
commit 488e67e7be7970e1373f3e23f34563e3a8a46bd3
Author: gurustron <gurustronpublic@gmail.com>
Date:   2017-04-05T20:11:48Z

    IGNITE-4817: Query Parser uses CompoundExpressionTreeProcessor, small fixes, tests

----
;;;","06/Apr/17 07:26;ptupitsyn;[~GuruStron] looks good to me in general. I've fixed a couple minor issues:
* Line length should not exceed 120 chars (not your fault, it wasn't specified on wiki https://cwiki.apache.org/confluence/display/IGNITE/Ignite.NET+Development)
* Some simplification in {{CacheQueryParser}} - default parameter is never used, class and method can be made private

Also please give a meaningful name to pull requests, like ""IGNITE-4817 .NET: Fixed LINQ Contains when subquery comes from a variable"";;;","06/Apr/17 07:32;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1745
;;;","06/Apr/17 07:33;ptupitsyn;Merged to master. Thank you for the contribution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CollisionSPI.onCollision() method has a confusing javadoc,IGNITE-4815,13050069,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Trivial,Fixed,amashenkov,amashenkov,amashenkov,10/Mar/17 15:25,03/Apr/17 08:31,14/Jul/23 06:20,28/Mar/17 15:56,,,,,,2.0,,general,,,,0,,,,"CollisionSPI calls on every EVT_NODE_METRICS_UPDATED event.

It looks like CollisionSPI.onCollision() method has a confusing javadoc.",,amashenkov,githubbot,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 03 08:31:58 UTC 2017,,,,,,,,,,"0|i3b8yn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/17 15:40;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1613

    IGNITE-4815: CollisionSPI.onCollision() confusing javadoc fixed

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4815

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1613.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1613
    
----
commit 1bc9b0f31fcc0f6e893713994663f19461423f38
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2017-03-10T15:33:34Z

    Javadoc fixed.

----
;;;","10/Mar/17 15:43;amashenkov;[~yzhdanov], would you please confirm that it is really lack of javadoc and review a PR.;;;","13/Mar/17 11:55;yzhdanov;Andrey, I think that javadoc should mention that this method is called also on metrics update (which was corrected by you) however, I would put all the cases into unordered list in the comment. Makes sense?;;;","03/Apr/17 08:31;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1613
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ignite map-reduce engine should set MRJobConfig.TASK_ATTEMPT_ID,IGNITE-4813,13050016,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,iveselovskiy,iveselovskiy,iveselovskiy,10/Mar/17 11:32,03/Apr/17 08:26,14/Jul/23 06:20,03/Apr/17 08:26,1.8,,,,,2.0,,hadoop,,,,0,,,,"Hadoop ""join"" example fails on Ignite with the error like this:

{code}
 Out: class org.apache.ignite.IgniteCheckedException: class org.apache.ignite.IgniteCheckedException: null
[14:27:29,636][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2MapTask.run0(HadoopV2MapTask.java:102)
[14:27:29,636][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2Task.run(HadoopV2Task.java:55)
[14:27:29,636][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2TaskContext.run(HadoopV2TaskContext.java:266)
[14:27:29,636][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.runTask(HadoopRunnableTask.java:209)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call0(HadoopRunnableTask.java:144)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:116)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask$1.call(HadoopRunnableTask.java:114)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2TaskContext.runAsJobOwner(HadoopV2TaskContext.java:573)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:114)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopRunnableTask.call(HadoopRunnableTask.java:46)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.taskexecutor.HadoopExecutorService$2.body(HadoopExecutorService.java:186)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
[14:27:29,637][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at java.lang.Thread.run(Thread.java:745)
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: Caused by: java.lang.NullPointerException
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.hadoop.mapreduce.task.TaskAttemptContextImpl.<init>(TaskAttemptContextImpl.java:49)
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.hadoop.mapreduce.lib.join.Parser$WNode.createRecordReader(Parser.java:348)
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.hadoop.mapreduce.lib.join.Parser$CNode.createRecordReader(Parser.java:486)
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.hadoop.mapreduce.lib.join.CompositeInputFormat.createRecordReader(CompositeInputFormat.java:143)
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2MapTask.run0(HadoopV2MapTask.java:69)
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 	... 12 more
[14:27:29,638][INFO ][Thread-3][jvm-a6fc1c46] PID-31907  Out: 
{code}

This is because org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2Context sets the job id and task id, but does not set task attempt id. In Hadoop this is done in method org.apache.hadoop.mapred.Task#localizeConfiguration .",,iveselovskiy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4808,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 10 13:14:44 UTC 2017,,,,,,,,,,"0|i3b8mv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/17 12:04;iveselovskiy;Pull request: https://github.com/apache/ignite/pull/1610 ;;;","10/Mar/17 13:14;iveselovskiy;Builds: http://ci.ignite.apache.org/viewType.html?buildTypeId=IgniteTests_IgniteHadoop&branch_IgniteTests=pull%2F1610%2Fhead&tab=buildTypeStatusDiv ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Disable EventStorageSpi by default,IGNITE-4812,13049984,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,alpert,vkulichenko,vkulichenko,10/Mar/17 09:33,10/Apr/17 04:45,14/Jul/23 06:20,09/Apr/17 12:28,1.9,,,,,2.0,,general,,,,0,,,,"Current default implementation of {{EventStorageSpi}} is {{MemoryEventStorageSpi}}. It consumes a lot of memory, while is used only for events querying (i.e. not listening), which is a fairly rare use case.

Need to:
* Introduce {{NoOpEventStorageSpi}}.
* Make {{NoOpEventStorageSpi}} the default one.
* Throw an exception when {{IgniteEvents#localQuery}} or {{#remoteQuery}} method is called with default setting. Exception message should explain how to fix it.",,alpert,ptupitsyn,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4935,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 10 04:45:13 UTC 2017,,,,,,,,,,"0|i3b8fr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/17 21:06;alpert;Hi [~vkulichenko].

Can you review the pull request please: https://github.com/apache/ignite/pull/1623.;;;","14/Mar/17 22:23;vkulichenko;Hey Alper,

Sure, will take a look during next few days.;;;","17/Mar/17 13:01;alpert;Ping [~vkulichenko].;;;","18/Mar/17 10:55;vkulichenko;Alper, I remember about you and will review as soon as possible. BTW, if PR is ready, ticket should be moved to Patch Available state.;;;","01/Apr/17 04:34;vkulichenko;[~alpert], the fix itself looks good, but I don't like multiple changes in old tests. Please do the following:
* Revert all these changes of {{getConfiguration}} method in tests.
* Instead modify {{GridAbstractTest.getConfiguration(String igniteInstanceName, IgniteTestResources rsrcs)}} method to use {{MemoryEventStorageSpi}} by default, so that nothing changes for any of tests that already exist.
* In any new tests that require {{NoopEventStorageSpi}}, set it explicitly.
* Rerun TC and check that everything is fine.;;;","01/Apr/17 10:27;alpert;[~vkulichenko], I made changes you requested. I run Ignite Basic and Ignite Compute Grid Tests and it seems OK. Should I run any other tests? Or is there an option to run all test and is it necessary? ;;;","03/Apr/17 03:36;vkulichenko;[~alpert], sorry, one more thing. I don't like that the check to throw exception is inside {{IgniteEventsImpl}}. Such things should be done inside a manager, in this case {{GridEventStorageManager}}. Can you please make this change?;;;","03/Apr/17 09:11;alpert;[~vkulichenko], I did the changes. Can you check it again?;;;","09/Apr/17 12:28;vkulichenko;[~alpert], I merged your change. However I had to make some changes:
* Exception handling was still incorrect. In case of remote query, exception should be thrown on remote node(s), because it's possible that client will still have no-op SPI, while servers will have correct implementation.
* In addition, internal components should never throw unchecked {{IgniteException}}. You should use {{IgniteCheckedException}} instead and convert it in the API facade.
* Any new file you add should have proper header with Apache 2.0 license.

Please review these changes to make sure you understand how to do this properly in the future.

Thanks for the contribution!;;;","10/Apr/17 04:45;ptupitsyn;[~vkulichenko] this commit breaks .NET tests. I will address this as part of IGNITE-4935.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove duplicated properties in parent-pom,IGNITE-4804,13049596,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,daradurvs,daradurvs,daradurvs,09/Mar/17 13:10,15/Mar/17 11:08,14/Jul/23 06:20,10/Mar/17 19:36,,,,,,2.0,,build,,,,0,,,,"ignite\parent\pom.xml сontains duplicated properties.

{code}
...
<properties>
   ...
   <hadoop.version>2.4.1</hadoop.version>
   <spark.version>1.5.2</spark.version>
   <spring.version>4.1.0.RELEASE</spring.version>
   ...
   <hadoop.version>2.4.1</hadoop.version>
   ...
   <spark.version>1.5.2</spark.version>
   ...
   <spring.version>4.1.0.RELEASE</spring.version>
   ...
</properties>
...
{code}

In case of their separate change it can result in not expected behavior.",,daradurvs,dmagda,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 15 11:08:39 UTC 2017,,,,,,,,,,"0|i3b6cn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/17 13:50;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/1606

    IGNITE-4804

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-4804

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1606.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1606
    
----
commit fbfb69aaab46f064ba0005f6d312e199d38c13bc
Author: Vyacheslav Daradur <daradurvs@gmail.com>
Date:   2017-03-09T13:47:44Z

    ignite-4804: duplicated properties were removed

----
;;;","10/Mar/17 07:20;daradurvs;Done. [ci.tests|http://ci.ignite.apache.org/viewLog.html?buildId=490111&tab=buildResultsDiv&buildTypeId=IgniteTests_RunAll];;;","10/Mar/17 19:36;dmagda;Thanks, merged your changes to the master branch.;;;","15/Mar/17 11:08;githubbot;Github user daradurvs closed the pull request at:

    https://github.com/apache/ignite/pull/1606
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lucene query may fails with NPE.,IGNITE-4800,13049253,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,amashenkov,amashenkov,amashenkov,08/Mar/17 12:17,28/Aug/17 16:38,14/Jul/23 06:20,04/Aug/17 15:06,1.8,,,,,2.3,,sql,,,,0,,,,"GridLuceneFile 'buffers' field is set to null regardless file can be used in GridLuceneInputStream by some query.
We should add a guard, that will prevent 'buffers' to be cleared until all GridLuceneInputStream-s is closed.


Userlist discussion: http://apache-ignite-users.70518.x6.nabble.com/Lucene-like-Contains-phrase-query-td10808.html#a10956",,amashenkov,dpavlov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5986,,,,,,,,,,,,,,,"08/Mar/17 12:18;amashenkov;application_lucene.log;https://issues.apache.org/jira/secure/attachment/12856800/application_lucene.log",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Aug 04 19:36:13 UTC 2017,,,,,,,,,,"0|i3b48f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/17 13:58;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/2315

    IGNITE-4800: Lucene query may fails with NPE.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4800

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2315.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2315
    
----
commit 18bdfe96a1e579371108c661e3374183c58a296d
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-13T12:42:30Z

    Fixed NPE in tests

commit d9ed07c67e4a4ff3a9de543cbe039ac2a48f03a0
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T14:32:06Z

    Functionality of muted test is debated now

commit 871d9260f3b32bed5273852dbdb74c758f73d383
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-13T15:34:01Z

    Functionality of GridVersionSelfTest is debated now

commit 2788a740c9aec88d14808d5927a346d121ad42b1
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:23:42Z

    Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ignite into ignite-2.1.3

commit 1e7e692bd4ce0fe2e092117190b59382840317a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T09:25:08Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 9fa78849c1ecc45fa56f518ad229e76725c27790
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-14T11:12:29Z

    IGNITE-4831: Add an option to disable MBeans. This closes #2265.
    
    (cherry picked from commit 7283edb)

commit d5cc82cb09cf37da783c9bcfbf6743b8910ceb30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:09Z

    GridCacheAbstractNodeRestartSelfTest stopping all grids after each test to prevent subsequent test failures when one test fails or hangs

commit 8f1d732fc8065e59a29bb538456194d7f4edd3e9
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T11:52:17Z

    Merge branch 'ignite-2.1.3' of https://github.com/gridgain/apache-ignite into ignite-2.1.3

commit 1d75560f9f418628da7d212207267482a1ea16aa
Author: devozerov <vozerov@gridgain.com>
Date:   2017-07-14T13:07:49Z

    Merge branch 'master' into ignite-2.1.3

commit e7ed26b6d305485d3a48ffcca0b9f4069e1fad30
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-07-14T14:04:51Z

    Test configuration fix to pass validation.

commit b32800a0ec573fb60b77bd00cb04578c5114233b
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-14T17:17:15Z

    Corrected benchmark output

commit 2b50486983fcda8d4b599d9af33e08673e87668e
Author: dpavlov <dpavlov@gridgain.com>
Date:   2017-07-14T18:10:06Z

    IGNITE-5515: Tests were enabled to get hangup on TC

commit 310d903a3ae23a2761c5c8339e5cd53ea6a7eb03
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-17T09:45:20Z

    Minor (comments)

commit 0d6b73081725d006947a11bfe787bf01f0e869f4
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-07-17T10:25:58Z

    GG-12495 SaveStoreMetadata doesn't work for local cache. Got NPE.

commit a71691ae22e30eea775324363d13e8875be8c4d9
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-07-18T09:37:14Z

    IGNITE-5774 - Added more information about long-running partition release future

commit e46cf9582bb05c22a45b868c2c78ea7ed4818d62
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-18T12:49:00Z

    Forcible node drop makes cluster unstable in some cases. Disable forcible node drop by default.

commit cf345b81820fbbcb82e5fcb2283b43ea286a40b4
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-18T12:50:03Z

    Partial fix of IGNITE-5473: Introduce troubleshooting logger

commit 3497531849ebecaa1368f70a6ac9535a007305d2
Author: Andrey V. Mashenkov <andrey.mashenkov@gmail.com>
Date:   2017-07-18T13:53:53Z

    IGNITE-4800: Fix possible NPE in GridLuceneInputStream.

----
;;;","04/Aug/17 15:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2315
;;;","04/Aug/17 19:36;dpavlov;Could you please check failures on TC
in master
http://ci.ignite.apache.org/viewLog.html?buildId=757487&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgnitePlatformNet

and same in PR
http://ci.ignite.apache.org/viewLog.html?buildId=748756&tab=buildResultsDiv&buildTypeId=Ignite20Tests_IgnitePlatformNet;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove TcpDiscoverySpi.heartbeatsFrequency parameter,IGNITE-4799,13048994,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,dmagda,dmagda,07/Mar/17 19:20,26/Apr/17 16:14,14/Jul/23 06:20,26/Apr/17 12:48,,,,,,2.0,,general,,,,0,important,,,"{{TcpDiscoverySpi.heartbeatsFrequency}} is no longer used to adjust the heartbeats frequence. It affects the frequency of metrics messages sent over the cluster ring.

The following has to be done as a part of 2.0 release:
* Remove {{TcpDiscoverySpi.heartbeatsFrequency}} parameter.
* Use {{IgniteConfiguraion.getMetricsUpdateFrequency}} to adjust the rate of metrics messages.
* Make sure {{IgniteConfiguraion.getMetricsUpdateFrequency}} and metrics messages are not participated in the failure detection process. We have to clean up legacy code in {{ServerImpl}}.

Refer to this discussion for more details:
http://apache-ignite-developers.2346864.n4.nabble.com/Renaming-TcpDiscoverySpi-heartbeatsFrequency-to-TcpDiscoverySpi-metricsUpdateFrequency-td14941.html ",,dmagda,ptupitsyn,sbberkov,sboikov,yzhdanov,,,,,,,,"Remove heartbeatFrequence, maxMissed*Heartbeats, add clientFailoverDetectionTimeout.;17/Apr/17 16:32;sbberkov;28800","Fix tests and debug solution.;20/Apr/17 14:04;sbberkov;28800",,,,,,,,,,,,,,,,,,,,,,0,57600,,,0,57600,,IGNITE-5015,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5062,IGNITE-5060,IGNITE-5042,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Apr 26 16:13:57 UTC 2017,,,,,,,,,,"0|i3b2mv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/17 11:42;yzhdanov;Although I have finished the initial removal of the property and fixed tests logic and xml configs to use igniteCfg.metricsUpdateFreq, there is still a lot to do:
# we need to fix documentation to reflect the changes ([~dmagda], can you please take a look and propose changes?)
# need to decide what to do with ""maxMissedHeartbeats"" property and respective property for client
# should we rename and refactor TCP disco messages and logic to remove all ""heartbeat mentions""? Should we go ahead and refactor this as well e.g. to maxMissedMetricUpdates?

Also there are some changes to platforms and webconsole required. [~kuaw26] and [~ptupitsyn] can you take a look at respective parts?

The changes are in origin/ignite-4799;;;","10/Apr/17 18:40;dmagda;[~yzhdanov], thanks for taking care of this. Please see below:

1. I've updated Javadoc of {{IgniteConfiguration.metricsUpdateFrequency}} parameter and merged the changes to the branch provided by you. This is enough for now. As for the readme.io doc, just assign the ticket to me once the changes are merged. 
2. Let's remove it. As I see it was used in a combination with {{TcpDiscoverySpi.heartbeatsFrequency}}. The latter is no longer exists and looks like {{TcpDiscoverySpi.maxMissedHeartbeats}} can be wiped out right away.
3. Yes, I would rename existing properties to avoid confusion. However, if it might take extra time then let's merge current breaking changes into 2.0 and keep the rest of refactoring in 2.1. What do you think?;;;","11/Apr/17 07:17;ptupitsyn;[~yzhdanov], I've removed {{TcpDiscoverySpi.HeartbeatFrequency}} from .NET and pushed my changes. Tests seem to be fine.;;;","21/Apr/17 23:20;dmagda;[~Berkov], [~yzhdanov], what's the status of this ticket? I think that it has to be closed at the beginning of the next week because Ignite 2.0 branch is going to be ""frozen"" soon.;;;","24/Apr/17 11:50;ptupitsyn;[~sbberkov] please merge from 2.0 so I can work on .NET in IGNITE-5062 subtask;;;","25/Apr/17 05:25;sbberkov;Create ignite-4799-2.0 branch from ignite-2.0 and move all commits. Please commit changes from IGNITE-5062 to it.;;;","25/Apr/17 11:23;ptupitsyn;[~sbberkov] {{TcpDiscoverySpi.metricsUpdateFreq}} is a private field and does not have accessor property, is it intended?;;;","25/Apr/17 11:56;ptupitsyn;IGNITE-5062 done in {{ignite-4799-2.0}} branch. See {{// TODO}} in {{TcpDiscoverySpi}};;;","26/Apr/17 08:52;sboikov;[~ptupitsyn], metricsUpdateFreq is not configured for TcpDiscoverySpi, it is taken from IgniteConfiguration, so I removed it from .net code in ignite-4799-2.0.

Thanks;;;","26/Apr/17 12:48;sboikov;Merged into 2.0.;;;","26/Apr/17 16:13;ptupitsyn;.NET changes were lost during merge, all tests have failed.
Fixed in {{ignite-2.0}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missed discovery data snapshot during exchange processing,IGNITE-4779,13048004,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,sboikov,sboikov,03/Mar/17 11:45,31/Mar/17 08:26,14/Jul/23 06:20,10/Mar/17 06:55,,,,,,2.0,,cache,,,,0,,,,"Currently GridDiscoveryManager stores only 500 last discovery data snapshots, if in 'resolveDiscoCache' requested version is not available it just throws IgniteException. It is possible while exchange is processed on topology version N, lot of discovery events is generated (e.g. in case of client caches start) and version N is removed from history. For exchange solution is simple: when exchange is triggered need save discovery snapshot in exchange future.

Also need review others places where discovery history is used.",,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4803,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 31 08:26:34 UTC 2017,,,,,,,,,,"0|i3awq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/17 14:52;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/1597

    IGNITE-4779 Missed discovery data snapshot during exchange processing

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4779

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1597.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1597
    
----
commit e3ac2d4d7aedd54605eb1932fddd111d91d298c2
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-03-06T14:51:36Z

    [IGNITE-4779] Missed discovery data snapshot during exchange processing

----
;;;","10/Mar/17 06:55;sboikov;Reviewed, merged into maser.

Thanks!;;;","31/Mar/17 08:26;githubbot;Github user gvvinblade closed the pull request at:

    https://github.com/apache/ignite/pull/1597
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Script inside javadoc bottom cause compilation error at 1.8.0_121-b13,IGNITE-4770,13047663,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,daradurvs,avinogradov,avinogradov,02/Mar/17 12:10,02/Mar/17 14:11,14/Jul/23 06:20,02/Mar/17 12:58,,,,,,1.9,,build,,,,0,,,,"Problem:
parent/pom.xml:455 contains following:

{noformat}
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
{noformat}

this script generates ""Follow us"" at the bottom of the incubator-ignite/target/javadoc/core/index.html. 

this cause compilation error during
{noformat}
mvn clean package -DskipTests
{noformat}

error
{noformat}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.10.1:jar (module-javadoc) on project ignite-tools: MavenReportException: Error while creating archive:
[ERROR] Exit code: 1 - javadoc: error - Argument for -bottom contains JavaScript.
[ERROR] Use --allow-script-in-comments to allow use of JavaScript.
{noformat}

addition of ""--allow-script-in-comments""
cause compilation issues on any JDK8 before 1.8.0_121-b13
{noformat}
[ERROR] Failed to execute goal org.apache.maven.plugins:
maven-javadoc-plugin:2.10.1:jar (module-javadoc) on project ignite-tools:
MavenReportException: Error while creating archive:
[ERROR] Exit code: 1 - javadoc: error - invalid flag:
--allow-script-in-comments
{noformat}

Solution:
Need to keep button at the bottom of the page, but fix compilation errors.",,avinogradov,daradurvs,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4771,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Mar 02 14:07:38 UTC 2017,,,,,,,,,,"0|i3aumf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/17 12:26;githubbot;GitHub user daradurvs opened a pull request:

    https://github.com/apache/ignite/pull/1586

    IGNITE-4770

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/daradurvs/ignite ignite-4770

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1586.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1586
    
----
commit ce3b7dab3aeeeca9e5f0357ab80309ecf75999ab
Author: Vyacheslav Daradur <daradurvs@gmail.com>
Date:   2017-03-02T12:24:32Z

    ignite-4770: workaround solution

----
;;;","02/Mar/17 12:58;avinogradov;Merged to ignite-1.9 branch. Thanks for contribution.;;;","02/Mar/17 13:56;githubbot;Github user daradurvs closed the pull request at:

    https://github.com/apache/ignite/pull/1586
;;;","02/Mar/17 14:07;daradurvs;[~avinogradov],

Master and ignite-2.0 branches have the same problem.
If this fix is good, makes sense to copy it in other branches.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
rollback exception hides the origin exception (e.g. commit),IGNITE-4767,13047602,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ein,ein,ein,02/Mar/17 08:18,28/Aug/17 16:40,14/Jul/23 06:20,09/Aug/17 14:36,1.8,,,,,2.3,,cache,general,,,0,,,,"There is too much code places like:
{noformat}
try {
	return txFuture.get();
}
catch (IgniteCheckedException e) {
	tx.rollbackAsync();

	throw e;
}
{noformat}
where an error upon rollback hides the actual exception {{e}}.

This should be implemented in the way like try-with-resources does:
{noformat}
try {
	return txFuture.get();
}
catch (IgniteCheckedException e1) {
	try {
		tx.rollbackAsync();
	}
	catch (Throwable inner) {
		e.addSuppressed(inner);
	}

	throw e;
}
{noformat}
",,dpavlov,ein,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jul 27 12:06:27 UTC 2017,,,,,,,,,,"0|i3au8v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/17 04:34;ein;Testing done, please review
https://github.com/apache/ignite/pull/1599/files;;;","26/Jul/17 11:18;dpavlov;Hi, [~ein],

I've checked the change and it seems to be OK.
In the same time e.getSuppressed() is never called. Is it indended to be logged into apache log throught printStackTrace. Is suppressed exception logged automatically or any additional change is required?

One more question, could you please share the link to TC run? Was it in Ignite20Tests?
;;;","26/Jul/17 12:19;ein;Hi, [~dpavlov],

Suppressed exceptions will be automatically logged when stack trace is printed. Actually we should not worry about it.

I've found only this TC run in history, related to the 1599 PR
http://195.239.208.174/viewType.html?buildTypeId=IgniteTests_IgniteCache3&tab=buildTypeStatusDiv&branch_IgniteTests=pull%2F1599%2Fhead

Testing was done 2 months ago after merging with the master, I think Ignite20Tests was not present at that time.;;;","26/Jul/17 17:06;dpavlov;I've restarted tests for 2.0 group using RunAll chain: 
http://ci.ignite.apache.org/project.html?projectId=Ignite20Tests&branch_Ignite20Tests=pull%2F1599%2Fhead;;;","27/Jul/17 12:06;dpavlov;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
doSetRollbackOnly method to be implemented in SpringTransactionManager,IGNITE-4763,13047183,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,NSAmelchev,Sumanta,Sumanta,01/Mar/17 03:55,04/Dec/17 08:27,14/Jul/23 06:20,22/May/17 13:24,1.8,,,,,2.1,,spring,,,,0,newbie,patch,,"This issue is raised in continuation with the message posted in ignite user forum (http://apache-ignite-users.70518.x6.nabble.com/SpringTransactionManager-Participating-in-existing-transactions-is-not-supported-td7305.html#a10624). Since the doSetRollBackOnly method is not implemented in SpringTransactionManager, it is not being possible to integrate with spring data's ChainedTransactionManager class. A simple fix (below) would work it seems (however, I did not yet tested with proper rollback test cases though, this implementation at least get rid of the exception chainedtransaction manager raises)

@Override 
        protected void doSetRollbackOnly(DefaultTransactionStatus status) throws TransactionException { 
                Transaction txn = ((Ignite)this.getResourceFactory()).transactions().tx(); 
                if (txn!=null) txn.setRollbackOnly(); 
        }
NOTE: This is the first time I am raising issues in apache. So, apologies if all the details are not proper.",,agura,githubbot,NSAmelchev,Sumanta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,http://apache-ignite-users.70518.x6.nabble.com/SpringTransactionManager-Participating-in-existing-transactions-is-not-supported-td7305.html#a10624,,Patch,,,,,,,,9223372036854775807,,,Mon Dec 04 08:27:11 UTC 2017,,,,,,,,,,"0|i3arnz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/17 08:38;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/1879

    IGNITE-4763

    doSetRollbackOnly method to be implemented in SpringTransactionManager

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite IGNITE-4763

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1879.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1879
    
----
commit bca9756cc4fbe3e89fbc29453d94619d2f90c95b
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-07T14:04:02Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit fc8ed83579ee9781061490041c0cce553c9a4025
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-03-27T12:45:44Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 1c7493cbb5de000f1c131745c90b93d7b57d4d50
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-04T09:50:52Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 91703d9004a4f68bfd2ca694c93b6c3b2fb45101
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-17T12:06:48Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 7e0e55e52812d605cde570ca5b50c5764d69e0fb
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-25T09:27:33Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit b1c09e34d6fa9980ccbdc144de36f485ba518e7f
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-26T13:17:19Z

    doSetRollbackOnly method to be implemented in the SpringTransactionManager

commit 62fe1e9dee40e5d5eee2695ed9a4f0f54e1ccc10
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T08:24:19Z

    Refactoring

commit 06b55cbf15f56e31cfd6ed9bf42ebfc8caae03a8
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T08:34:44Z

    one-line javadoc

commit 827a28cba5f0f15e27daacb35f0106f420e92379
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T08:36:17Z

    one-line javadoc doSetRollbackOnly

----
;;;","27/Apr/17 16:26;githubbot;Github user NSAmelchev closed the pull request at:

    https://github.com/apache/ignite/pull/1879
;;;","28/Apr/17 11:17;githubbot;GitHub user NSAmelchev opened a pull request:

    https://github.com/apache/ignite/pull/1884

    IGNITE-4763

    - doSetRollbackOnly method to be implemented in SpringTransactionManager
    - testDoSetRollbackOnlyInExistingTransaction

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/NSAmelchev/ignite IGNITE-4763

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1884.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1884
    
----
commit bca9756cc4fbe3e89fbc29453d94619d2f90c95b
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-02-07T14:04:02Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit fc8ed83579ee9781061490041c0cce553c9a4025
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-03-27T12:45:44Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 1c7493cbb5de000f1c131745c90b93d7b57d4d50
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-04T09:50:52Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 91703d9004a4f68bfd2ca694c93b6c3b2fb45101
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-17T12:06:48Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit 7e0e55e52812d605cde570ca5b50c5764d69e0fb
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-25T09:27:33Z

    Merge remote-tracking branch 'refs/remotes/apache/master'

commit b1c09e34d6fa9980ccbdc144de36f485ba518e7f
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-26T13:17:19Z

    doSetRollbackOnly method to be implemented in the SpringTransactionManager

commit 62fe1e9dee40e5d5eee2695ed9a4f0f54e1ccc10
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T08:24:19Z

    Refactoring

commit 06b55cbf15f56e31cfd6ed9bf42ebfc8caae03a8
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T08:34:44Z

    one-line javadoc

commit 827a28cba5f0f15e27daacb35f0106f420e92379
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T08:36:17Z

    one-line javadoc doSetRollbackOnly

commit d1f2a9ea1a83bd92342046aeba973fdc2b486073
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-27T17:57:46Z

    Merge remote-tracking branch 'refs/remotes/apache/master' into IGNITE-4763

commit 6a7ddfb4e77d4bc14b1877bfca0904b03f2917ea
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-28T09:33:07Z

    add testParticipatingInExistingTransactions

commit 791c2abdc42aae02183acba8d91e23ee6c08cca3
Author: NSAmelchev <nsamelchev@gmail.com>
Date:   2017-04-28T10:36:33Z

    Refactoring method

----
;;;","28/Apr/17 11:21;NSAmelchev;I add test that check the doSetRollbackOnly method in existing transaction https://github.com/apache/ignite/pull/1884;;;","16/May/17 15:30;agura;Hi, Nikita,

First of all thank you for contribution!

I've looked at your PR and have only one comment. Why do you check reference to the tx on {{null}} value? It seems that transaction should always be non-{{null}}. Otherwise is implementation error. May be it would be better just assert that {{tx}} doesn't equal {{null}}?;;;","22/May/17 08:30;NSAmelchev;Hi, Andrey.

I do it because _getTransaction()_ can return null. I agree with you and leave assert. 

Please, review.;;;","22/May/17 13:24;agura;Nikita,

your changes are merged into master branch. Thanks a lot!;;;","04/Dec/17 08:27;githubbot;Github user NSAmelchev closed the pull request at:

    https://github.com/apache/ignite/pull/1884
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ServiceProcessor hangs while stopping on unstable topology.,IGNITE-4761,13047026,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,amashenkov,amashenkov,amashenkov,28/Feb/17 17:02,22/Mar/17 14:09,14/Jul/23 06:20,14/Mar/17 13:16,1.7,,,,,2.0,,cache,managed services,,,0,,,,"GridServiceProcessor.onKernalStop can be blocked on taking busyLock when
the lock is being held by TopologyListener while infinite waiting for readyAffinityFuture.

",,amashenkov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 22 14:09:10 UTC 2017,,,,,,,,,,"0|i3aqpb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Mar/17 15:35;githubbot;GitHub user AMashenkov opened a pull request:

    https://github.com/apache/ignite/pull/1602

    IGNITE-4761: ServiceProcessor hangs while stopping on unstable topology.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4761-1

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1602.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1602
    
----
commit 1433ed3299cc206b09b78b34d6d20922a0bf4320
Author: AMRepo <andrey.mashenkov@gmail.com>
Date:   2017-03-08T15:23:23Z

    Fixed.

----
;;;","08/Mar/17 15:49;amashenkov;[~agoncharuk], please review this. 
If it can be solved this way or I've missed smth?;;;","14/Mar/17 13:16;amashenkov;TC tests looks fine.;;;","22/Mar/17 14:09;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1602
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Print a warning when option 'ignite.job.shared.classloader' is on.,IGNITE-4755,13046619,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,iveselovskiy,iveselovskiy,iveselovskiy,27/Feb/17 11:31,28/Feb/17 12:36,14/Jul/23 06:20,28/Feb/17 12:36,1.9,,,,,2.0,,hadoop,,,,0,,,,,,iveselovskiy,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-4720,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 28 12:36:27 UTC 2017,,,,,,,,,,"0|i3ao6v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/17 15:05;iveselovskiy;https://github.com/apache/ignite/pull/1579;;;","28/Feb/17 12:36;vozerov;[~iveselovskiy], merged. Please see my corrections, commit {{50f8741}}.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SharedRDDExample missed in example JAR file,IGNITE-4754,13046574,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ezhuravl,skozlov,skozlov,27/Feb/17 08:15,01/Aug/19 22:01,14/Jul/23 06:20,27/Feb/17 11:12,1.9,,,,,1.9,,,,,,0,,,,"1. Compile Ignite examples via command line {{mvn package}}
2. Take look on target JAR file: {{org.apache.ignite.examples.spark.SharedRDDExample}} does not exist",,githubbot,skozlov,,,,,,,,,,,"dspavlov commented on issue #1574: IGNITE-4754 SharedRDDExample missed in example JAR file
URL: https://github.com/apache/ignite/pull/1574#issuecomment-517473942
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on pull request #1574: IGNITE-4754 SharedRDDExample missed in example JAR file
URL: https://github.com/apache/ignite/pull/1574
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 27 08:46:28 UTC 2017,,,,,,,,,,"0|i3anwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/17 08:46;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/1574

    IGNITE-4754 SharedRDDExample missed in example JAR file

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4754

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1574.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1574
    
----
commit d1b1e491b3647c4918ecdf488823311da4fdfbf0
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-02-27T08:45:48Z

    IGNITE-4754 SharedRDDExample missed in example JAR file

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hadoop examples fail for hadoop  accelerator,IGNITE-4752,13046147,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Blocker,Fixed,ezhuravl,skozlov,skozlov,24/Feb/17 20:59,01/Aug/19 22:01,14/Jul/23 06:20,27/Feb/17 11:12,1.9,,,,,1.9,,,,,,0,,,,"0. Setup Apache Ignite Hadoop accelerator
1. Start 4 nodes {{bin/ignite.sh}}
2. Start a hadoop example, for instance {{pi}}
3. The server nodes print out following:
{noformat}
[23:51:47,364][ERROR][pub-#62%null%][HadoopJobTracker] Failed to submit job: f05d867c-a96b-4ea4-be57-0a6002f14870_1
class org.apache.ignite.IgniteCheckedException: null
	at org.apache.ignite.internal.processors.hadoop.HadoopDefaultJobInfo.createJob(HadoopDefaultJobInfo.java:99)
	at org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.job(HadoopJobTracker.java:1120)
	at org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.submit(HadoopJobTracker.java:313)
	at org.apache.ignite.internal.processors.hadoop.HadoopProcessor.submit(HadoopProcessor.java:173)
	at org.apache.ignite.internal.processors.hadoop.HadoopImpl.submit(HadoopImpl.java:69)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolSubmitJobTask.run(HadoopProtocolSubmitJobTask.java:50)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolSubmitJobTask.run(HadoopProtocolSubmitJobTask.java:33)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolTaskAdapter$Job.execute(HadoopProtocolTaskAdapter.java:101)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:560)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6618)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:554)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:483)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1180)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1894)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1216)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:844)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:108)
	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:783)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.ignite.internal.processors.hadoop.HadoopDefaultJobInfo.createJob(HadoopDefaultJobInfo.java:93)
	... 21 more
Caused by: java.lang.NoClassDefFoundError: com/google/common/base/Preconditions
	at org.apache.hadoop.conf.Configuration$DeprecationDelta.<init>(Configuration.java:314)
	at org.apache.hadoop.conf.Configuration$DeprecationDelta.<init>(Configuration.java:327)
	at org.apache.hadoop.conf.Configuration.<clinit>(Configuration.java:409)
	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2Job.<init>(HadoopV2Job.java:158)
	... 26 more
Caused by: java.lang.ClassNotFoundException: com.google.common.base.Preconditions
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 30 more
[23:51:49,788][ERROR][pub-#11%null%][HadoopJobTracker] Failed to submit job: 6e1713a8-8bbf-480c-8e0b-9045bc55c77d_1
class org.apache.ignite.IgniteCheckedException: null
	at org.apache.ignite.internal.processors.hadoop.HadoopDefaultJobInfo.createJob(HadoopDefaultJobInfo.java:99)
	at org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.job(HadoopJobTracker.java:1120)
	at org.apache.ignite.internal.processors.hadoop.jobtracker.HadoopJobTracker.submit(HadoopJobTracker.java:313)
	at org.apache.ignite.internal.processors.hadoop.HadoopProcessor.submit(HadoopProcessor.java:173)
	at org.apache.ignite.internal.processors.hadoop.HadoopImpl.submit(HadoopImpl.java:69)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolSubmitJobTask.run(HadoopProtocolSubmitJobTask.java:50)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolSubmitJobTask.run(HadoopProtocolSubmitJobTask.java:33)
	at org.apache.ignite.internal.processors.hadoop.proto.HadoopProtocolTaskAdapter$Job.execute(HadoopProtocolTaskAdapter.java:101)
	at org.apache.ignite.internal.processors.job.GridJobWorker$2.call(GridJobWorker.java:560)
	at org.apache.ignite.internal.util.IgniteUtils.wrapThreadLoader(IgniteUtils.java:6618)
	at org.apache.ignite.internal.processors.job.GridJobWorker.execute0(GridJobWorker.java:554)
	at org.apache.ignite.internal.processors.job.GridJobWorker.body(GridJobWorker.java:483)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.job.GridJobProcessor.processJobExecuteRequest(GridJobProcessor.java:1180)
	at org.apache.ignite.internal.processors.job.GridJobProcessor$JobExecutionListener.onMessage(GridJobProcessor.java:1894)
	at org.apache.ignite.internal.managers.communication.GridIoManager.invokeListener(GridIoManager.java:1216)
	at org.apache.ignite.internal.managers.communication.GridIoManager.processRegularMessage0(GridIoManager.java:844)
	at org.apache.ignite.internal.managers.communication.GridIoManager.access$2100(GridIoManager.java:108)
	at org.apache.ignite.internal.managers.communication.GridIoManager$6.run(GridIoManager.java:783)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.apache.ignite.internal.processors.hadoop.HadoopDefaultJobInfo.createJob(HadoopDefaultJobInfo.java:93)
	... 21 more
Caused by: java.lang.NoClassDefFoundError: Could not initialize class org.apache.hadoop.mapred.JobConf
	at org.apache.ignite.internal.processors.hadoop.impl.v2.HadoopV2Job.<init>(HadoopV2Job.java:158)
	... 26 more
{noformat}

The issue was introduced between {{5b94a7d5b14600e951d4bb31b474f9fb1195f703}} (it works) and {{a65889a75b0ba7b3fe74d97df82e2214ff1d9b52}} (it does not work)
",,githubbot,skozlov,vozerov,,,,,,,,,,"dspavlov commented on issue #1576: IGNITE-4752 Hadoop examples fail for hadoop accelerator
URL: https://github.com/apache/ignite/pull/1576#issuecomment-517473960
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on pull request #1576: IGNITE-4752 Hadoop examples fail for hadoop accelerator
URL: https://github.com/apache/ignite/pull/1576
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 27 10:39:36 UTC 2017,,,,,,,,,,"0|i3alof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/17 08:53;vozerov;[~skozlov], [~avinogradov], [~ezhuravl],
The problem is that {{hadoop-common-2.4.1.jar}} is inlcuded into {{ignite-spark}} folder and hence appears in the app classloader classpath. It should be excluded from the build. Moreover, we should double-check if other non-spark dependencies should be included or not.;;;","27/Feb/17 10:39;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/1576

    IGNITE-4752 Hadoop examples fail for hadoop accelerator

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4752

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1576.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1576
    
----
commit 7d883ad438c5936977386d6d92d393c46d2bc2a6
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-02-27T10:37:18Z

    IGNITE-4752 Hadoop examples fail for hadoop accelerator

----
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky IgniteCacheUpdateSqlQuerySelfTest.testTypeConversions,IGNITE-4742,13045178,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,al.psc,al.psc,al.psc,22/Feb/17 10:30,01/Mar/17 14:33,14/Jul/23 06:20,22/Feb/17 13:37,1.8,,,,,1.9,,sql,,,,0,,,,This test fails randomly on various query related suites and very seldom locally. Seems to be test problem and not of what is tested.,,al.psc,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Mar 01 14:33:41 UTC 2017,,,,,,,,,,"0|i3afq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Feb/17 10:32;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1569

    IGNITE-4742 IgniteCacheUpdateSqlQuerySelfTest.testTypeConversions fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4742

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1569.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1569
    
----
commit ceffb95bc9301c716d7e35c3e80d6fd46ac7a34c
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-02-22T10:31:24Z

    IGNITE-4742 IgniteCacheUpdateSqlQuerySelfTest.testTypeConversions fix

----
;;;","01/Mar/17 14:33;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1569
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Service could be deployed/undeployed twice on concurrent cancel and discovery event,IGNITE-4740,13045114,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,22/Feb/17 07:15,28/Feb/17 13:06,14/Jul/23 06:20,28/Feb/17 13:06,1.8,,,,,2.0,,managed services,,,,0,,,,"In case of concurrent service cancel and discovery event, for example, applying continuous query, may cause double service deploy/undeploy.

Fix should consist in filtering such DiscoveryCustomEvent in GridServiceProcessor.TopologyListener.",,dkarachentsev,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Feb 28 12:59:58 UTC 2017,,,,,,,,,,"0|i3afbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/17 14:36;dkarachentsev;[PR#1577|https://github.com/apache/ignite/pull/1577];;;","28/Feb/17 12:59;sboikov;Hi Dmitry,

Reviewed your fix, looks good.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some CPP files are missing from source releases.,IGNITE-4735,13044830,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,isapego,isapego,isapego,21/Feb/17 12:40,27/Feb/17 09:56,14/Jul/23 06:20,22/Feb/17 09:09,1.8,,,,,1.9,,build,,,,0,cpp,,,"Some CPP files missing from the sources release. For example:
- modules/platforms/cpp/common/project/vs/targetver.h
- modules/platforms/cpp/jni/project/vs/targetver.h
- modules/platforms/cpp/core/include/ignite/impl/interop/interop_target.h

It seems that there is issue with files which has ""target"" in name.",,avinogradov,githubbot,isapego,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 27 09:56:12 UTC 2017,,,,,,,,,,"0|i3adkv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Feb/17 12:46;githubbot;GitHub user isapego opened a pull request:

    https://github.com/apache/ignite/pull/1562

    IGNITE-4735: Excluded CPP sources.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4735

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1562.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1562
    
----
commit 1c3e602032df72c844e44cc1eb6224b54d9e8712
Author: Igor Sapego <isapego@gridgain.com>
Date:   2017-02-21T12:44:30Z

    IGNITE-4735: Excluded CPP sources.

----
;;;","21/Feb/17 17:00;isapego;Ready. Please, [~vozerov] or [~avinogradov] take a look.;;;","22/Feb/17 09:09;vozerov;LGTM;;;","22/Feb/17 09:22;avinogradov;Igor, 
please do ""vote preparation"" for same sources with both regexps (old and new) and make sure that sources.zip contains same files set.
 ;;;","22/Feb/17 10:04;vozerov;[~isapego],
{{interop_target.h}} appeared, but there are no {{targetver.h}} still. However, I dot not see them in 1.8 release either. Do we really need them?;;;","22/Feb/17 13:14;isapego;[~avinogradov] Yeah, I've checked that with a diff tool.;;;","27/Feb/17 09:56;githubbot;Github user isapego closed the pull request at:

    https://github.com/apache/ignite/pull/1562
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid ids quoting logic in DML and GridSqlFunction,IGNITE-4732,13044804,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,al.psc,al.psc,al.psc,21/Feb/17 11:00,21/Feb/17 14:58,14/Jul/23 06:20,21/Feb/17 14:58,1.9,,,,,1.9,,sql,,,,0,,,,,,al.psc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-02-21 11:00:04.0,,,,,,,,,,"0|i3adf3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Fix the position of tooltips in modal windows,IGNITE-4727,13044554,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,kuaw26,vabramova,vabramova,20/Feb/17 13:51,31/Mar/17 09:23,14/Jul/23 06:20,31/Mar/17 09:16,,,,,,,,UI,wizards,,,0,,,,"Tooltips (in modal windows) should not go beyond the modal windows.
",,anovikov,Dmitriyff,vabramova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"20/Feb/17 13:52;vabramova;tooltips.png;https://issues.apache.org/jira/secure/attachment/12853563/tooltips.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Mar 31 09:23:23 UTC 2017,,,,,,,,,,"0|i3abvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Mar/17 11:19;Dmitriyff;Added common solution to show and set up tooltip for fields;;;","30/Mar/17 09:47;anovikov;Reviewed. [~vabramova], please check.;;;","31/Mar/17 08:24;vabramova;[~anovikov], done! Everything is good.;;;","31/Mar/17 09:23;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AVG function always returns double type instead of the argument type,IGNITE-4724,13044510,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,skozlov,skozlov,20/Feb/17 10:24,31/May/17 18:41,14/Jul/23 06:20,31/May/17 18:40,1.9,,,,,2.1,,sql,,,,0,important,,,"For H2:
SELECT AVG(intCol) FROM cache_part_2 AS part_2 WHERE (10*shortCol/100) > longCol
-[472]

For Ignite:
SELECT AVG(intCol) FROM AllTypes AS part_2 WHERE (10*shortCol/100) > longCol
+[472.2307692307692]
",,githubbot,skalashnikov,skozlov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed May 31 18:41:11 UTC 2017,,,,,,,,,,"0|i3ablr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/17 10:48;vozerov;Moved to AI 2.0 because it is old problem, doesn't fit to 1.9 schedule.;;;","22/May/17 17:53;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1989

    IGNITE-4724: SQL: corrected result type for AVG()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4724

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1989.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1989
    
----
commit ee2615784fa43a6e1770d6271e87d7dbfc3bc34a
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-05-22T17:51:46Z

    IGNITE-4724: SQL: corrected result type for AVG()

----
;;;","22/May/17 18:00;skalashnikov;Implemented fix. Tests are in progress.;;;","23/May/17 09:54;skalashnikov;TC is OK. Patch is available for review.;;;","26/May/17 13:22;vozerov;[~skalashnikov],
Looks like we need more test here with different numeric datatypes, to make sure that final conversion is always correct. For now I see only tests for {{Integer}} and some fractional types. Full list to check:
1) {{TINYINT}} -> {{java.lang.Byte}}
2) {{SMALLINT}} -> {{java.lang.Short}}
3) {{INT}}, {{INTEGER}}, {{MEDIUMINT}} -> {{java.lang.Integer}}
4) {{BIGINT}} -> {{java.lang.Long}}
5) {{DECIMAL}} -> {{java.lang.BigDecimal}} with proper precision/scale
6) {{REAL}} -> {{java.lang.Float}}
7) {{DOUBLE}}, {{FLOAT}} -> {{java.lang.Double}};;;","31/May/17 18:41;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1989
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cache size hangs on cache clear,IGNITE-4717,13043954,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,anovikov,anovikov,17/Feb/17 10:33,20/Feb/17 11:39,14/Jul/23 06:20,20/Feb/17 11:39,1.9,,,,,1.9,,cache,,,,0,,,,"* Run two nodes with load
* Clear ten or more caches by sending VisorCacheClearTask at one moment
* In thread dump I found locked threads in management pool
{code}
""mgmt-#78%tester%"" Id=133 WAITING on org.apache.ignite.internal.ComputeTaskInternalFuture@23edc803
	at sun.misc.Unsafe.park(Native Method)
	-  waiting on org.apache.ignite.internal.ComputeTaskInternalFuture@23edc803
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:161)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:119)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.size(GridCacheAdapter.java:3717)
{code}",,anovikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 20 11:39:26 UTC 2017,,,,,,,,,,"0|i3a8dz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/17 10:46;vozerov;This is a regression from IGNITE-4239 (commit {{861fab9}}). It fixed a starvation when {{IgniteCache.clear()}} was called from compute task. With this fix we moved size calculation to management pool. 
The problem is that {{VisorCacheClearTask}} is also executed in management pool, so when all threads from the pool are exhausted we receive a hang. ;;;","20/Feb/17 11:39;anovikov;Fixed hangs in VisorCacheClearTask.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leaks in PageMemory,IGNITE-4712,13043669,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,gvvinblade,gvvinblade,16/Feb/17 15:31,19/May/17 10:16,14/Jul/23 06:20,16/Mar/17 07:42,,,,,,2.0,,cache,,,,0,,,,"During performing put/get/remove operations on large objects (objects, which size is more than 1kb) allocated pages number constantly grows.",,githubbot,gvvinblade,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,,,IGNITE-4694,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri May 19 10:16:18 UTC 2017,,,,,,,,,,"0|i3a6mn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Feb/17 09:48;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/1559

    IGNITE-4712 Memory leaks in PageMemory

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4712

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1559.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1559
    
----
commit 3c9e3786a21ec7c8919de9c29bc04d2e3561846c
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-15T10:41:08Z

    IGNITE-4694 Add tests to check there are no memory leaks in PageMemory

commit 8e12097f9094d7f155135ee2f4c9c33f5f7af9aa
Author: sboikov <sboikov@gridgain.com>
Date:   2017-02-15T12:08:14Z

    ignite-4694 review

commit e70d990f14288cfc8fe211fa25631016d5708144
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-15T15:04:38Z

    IGNITE-4694 Add tests to check there are no memory leaks in PageMemory

commit 84c03e0c522abc90b2d91e514138eac08388abd2
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-16T10:41:51Z

    IGNITE-4694 Add tests to check there are no memory leaks in PageMemory (pending)

commit e259b7a2032de9ec1334668e10f92fbae9e5c096
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T10:40:05Z

    IGNITE-4712 Memory leaks in PageMemory

commit fa395addf03376423b9aeb15dd74a7a9969cb851
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T10:43:36Z

    IGNITE-4712 Memory leaks in PageMemory

commit be241d9789392f13c4951e9588c85357cd79192f
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T13:19:00Z

    IGNITE-4712 Memory leaks in PageMemory

commit 4376f82d13ef4d08c4eb8d9b6e3f19cba9d9ce1c
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T13:40:25Z

    IGNITE-4712 Memory leaks in PageMemory

commit 95faf450cbbf6be4887965209bec3ae0244bcdd9
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T15:11:34Z

    IGNITE-4712 Memory leaks in PageMemory

commit bfb0021b9fbda0ca9fde83ba5513ed3eb32f3703
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T15:25:07Z

    IGNITE-4712 Memory leaks in PageMemory

commit 4ae7d7177b1e55c31579c4691514655eeadb833f
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-20T15:31:15Z

    IGNITE-4712 Memory leaks in PageMemory

commit 5e4e991360c2f2917ec22128e40a353c13db8285
Author: Igor Seliverstov <gvvinblade@gmail.com>
Date:   2017-02-21T08:49:35Z

    IGNITE-4694 Add tests to check there are no memory leaks in PageMemory

----
;;;","15/Mar/17 10:54;githubbot;GitHub user gvvinblade opened a pull request:

    https://github.com/apache/ignite/pull/1625

    IGNITE-4712 (tests fix)

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4712

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1625.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1625
    
----

----
;;;","16/Mar/17 07:42;sboikov;Merged into ignite-3477.

Thanks!;;;","16/Mar/17 07:53;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1625
;;;","19/May/17 10:16;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1559
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Font aren't Roboto Slab in the 'Project Structure' pop up window,IGNITE-4700,13042958,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vabramova,vabramova,14/Feb/17 14:25,16/Nov/17 08:19,14/Jul/23 06:20,16/Nov/17 08:17,,,,,,,,UI,wizards,,,0,,,,See attached img. Need to change Verdana - > Roboto Slab (at all controls like this),,Klaster_1,vabramova,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5466,,,,"14/Feb/17 14:33;vabramova;structure.png;https://issues.apache.org/jira/secure/attachment/12852578/structure.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Nov 16 08:17:20 UTC 2017,,,,,,,,,,"0|i3a28n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/17 08:17;Klaster_1;Already fixed during configuration redesign task.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web console: Use pool for process REST request in Web Agent,IGNITE-4687,13042510,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,anovikov,anovikov,13/Feb/17 09:01,28/Mar/17 10:58,14/Jul/23 06:20,13/Feb/17 10:51,1.8,,,,,1.9,,wizards,,,,0,,,,,,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 13 10:52:27 UTC 2017,,,,,,,,,,"0|i39zhb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/17 10:01;anovikov;Added thread pool for REST request in Web Agent.
[~vsisko], please test changes. Web Agent should execute REST request in parallel.;;;","13/Feb/17 10:29;vsisko;Tested. Console update information in time of other long operation execution.;;;","13/Feb/17 10:52;anovikov;Merge changes to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console: Implement demo load as service,IGNITE-4678,13041999,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,anovikov,anovikov,10/Feb/17 08:53,13/Feb/17 02:28,14/Jul/23 06:20,13/Feb/17 02:27,1.8,,,,,1.9,,wizards,,,,0,,,,,,anovikov,vsisko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 13 02:28:28 UTC 2017,,,,,,,,,,"0|i39wbz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/17 08:59;anovikov;Implemented demo load as service.
[~vsisko], please check.;;;","10/Feb/17 10:31;vsisko;Tested. Demo load is implemented as services. 
On stop of service specified load is stopped too.;;;","13/Feb/17 02:28;anovikov;Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closure hangs if executed nested internal task with continuation,IGNITE-4676,13041601,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,kuaw26,kuaw26,09/Feb/17 06:37,09/Feb/17 09:46,14/Jul/23 06:20,09/Feb/17 09:46,1.8,,,,,1.9,,compute,,,,0,,,,"Initially this bug found in following scenario.
Client send task T1 to node B via node A.
Node A sends closure ExeCallable to node B and add listener to taskFuture.
On node B ExeCallable executed internal task with one job with continuation.
Result of ExeCallable never returned to node A.

The problem isolated in GridJobWorker 
{code}private static final ThreadLocal<Boolean> HOLD{code}
 variable does not change its state in valid way for internal tasks and never call {{finishJob()}} method.",,kuaw26,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 09 09:46:34 UTC 2017,,,,,,,,,,"0|i39tvj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/17 08:49;kuaw26;Fixed. Test added.
Ready for review: http://reviews.ignite.apache.org/ignite/review/IGNT-CR-91;;;","09/Feb/17 09:35;yzhdanov;Alex, changes look good to me. Proceed with the PR once TeamCity finishes
;;;","09/Feb/17 09:46;kuaw26;Compute suite passed on TC. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Object array element type is written as a user type,IGNITE-4673,13041407,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,ptupitsyn,ptupitsyn,08/Feb/17 15:09,21/Mar/17 09:24,14/Jul/23 06:20,15/Feb/17 11:56,2.0,,,,,2.0,,binary,,,,0,,,,"{{BinaryWriterExImpl.doWriteObjectArray}} registers {{java.lang.Object}} element type as a custom type instead of using {{OBJECT_TYPE_ID}}.

As a result, platforms (.NET, C++) can not understand such an array.
This is also suboptimal due to extra type registration and lookups.",,githubbot,ptupitsyn,tledkov-gridgain,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2703,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 21 09:24:53 UTC 2017,,,,,,,,,,"0|i39sof:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/17 10:11;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1512

    IGNITE-4673  Object array element type is written as a user type

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4673

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1512.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1512
    
----
commit c893da70a9757b16b0799adc8eaa29fa1b03d06e
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-21T11:54:33Z

    IGNITE-4399: IGFS: Merged IgfsSecondaryFileSystem and IgfsSecondaryFileSystemV2 interfaces. This closes #1346.

commit c5882a85f4e3a1f61723ac54fd92f087684df6da
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-26T11:15:42Z

    Merge branch 'master' into ignite-2.0

commit 7e73d0223a3f09cbe0b7094a2c04bdf9d63ca9be
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-28T09:54:47Z

    Merge branch 'master' into ignite-2.0

commit 7d82d6a06b5e9f1f8cd2909b865e37d46b8da03f
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-28T09:58:11Z

    IGNITE-3875: Introduced separate thread pool for data streamer. This closes #1173. This closes #1383.

commit a61b0eaff1817d84c0659e8a7e095f29e22800e1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-28T11:09:38Z

    IGNITE-4405: Hadoop: implemented ""readLine"" method for HadoopDataInStream and HadoopDirectDataInput classes. This closes #1358.

commit 2df39a80d80e2575be61a902ccd48615796fcde9
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-28T13:47:24Z

    IGNITE-3961: IGFS: Added IgfsSecondaryFileSystem.affintiy() method. This closes #1114. This closes #1252.

commit 2e691d80ea4870c3e7b5b127792b66c920f72c39
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-29T08:00:01Z

    IGNITE-4462: IGFS: removed grid name from HadoopIgfsEndpoint. This closes #1368.

commit a9b1fc2b3840d47d7c978d9296e8ae6bdeb10be5
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-29T08:07:22Z

    IGNITE-4459: Hadoop: weighted planned is default one from now on. This closes #1391.

commit 1f743465d6875ef48b1835d03a78a0dbaf339bf6
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-29T08:14:10Z

    IGNITE-4458: Hadoop: ""striped"" shuffle mode is default from now on. This closes #1390.

commit 6090ebdfcd0ea3840b0d32cb10197b43615e1e89
Author: devozerov <vozerov@gridgain.com>
Date:   2017-01-05T09:23:06Z

    Merge branch 'master' into ignite-2.0

commit 77ca2e636c73e464f833f227c4894df0785ae9e2
Author: devozerov <vozerov@gridgain.com>
Date:   2017-01-16T13:07:49Z

    Merge branch 'master' into ignite-2.0

commit d14e0727b3dd61ab5ec2957133d77dbc25e9ba68
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-01-16T13:36:25Z

    IGNITE-4428: Hadoop: moved HadoopMapReducePlanner and dependent classes to public space. This closes #1389. This closes #1394.

commit f1365421c299b754a10edf8b6f156aeeb5ff0ce1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-01-16T13:57:27Z

    IGNITE-4503: Hadoop: added boundary checks to HadoopDirectDataInput. This closes # 1416.

commit e08b6ff48916edfab2dbd5d62092be5a1f819a2f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-19T10:34:59Z

    Merge branch 'master' into ignite-2.0

commit 43adf8a3f09c6b29fe3e70f62dbc58251d8d7cb9
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2017-01-19T11:34:23Z

    IGNITE-4219: Hadoop: fixed serialization of long strings. This closes #1409.

commit 454b9769e72775c5f6b44a36f0eef84bcce13bd7
Author: devozerov <vozerov@gridgain.com>
Date:   2017-01-19T11:34:43Z

    Merge remote-tracking branch 'origin/ignite-2.0' into ignite-2.0

commit 4cd332b781cf700b99402eed2363f988f6403602
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-01-19T12:05:09Z

    IGNITE-4157 Use  discovery custom messages instead of marshaller cache - Fixes #1271.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit d0a6c57aa26bca64ef68370c0ebdb5ce45bcc765
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-19T14:10:41Z

    IGNITE-4441 Define plugin API in .NET
    
    This closes #1362

commit 34a97833905a33bdb31b8e4580a576c2142313a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-01-19T15:04:23Z

    IGNITE-4157 - Added mapping update listener stub

commit e8377167b7b8dd020a93d92c743e4541dcd000ed
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-20T10:00:40Z

    Merge branch 'master' into ignite-2.0

commit 38cb67d45eb91e20ad4b92a490747534f5e8febb
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-20T13:09:57Z

    Merge branch 'master' into ignite-2.0

commit 82857d0cb6e2984a5359b822a9c903874414aa67
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-23T10:12:12Z

    Merge branch 'master' into ignite-2.0
    
    # Conflicts:
    #	modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/impl/v1/HadoopV1MapTask.java
    #	modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/impl/v1/HadoopV1ReduceTask.java

commit b0f84872945f36f240218636c298ecc9f765c152
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T11:58:52Z

    IGNITE-4592 .NET: Fix binary enum serialization
    
    This closes #1456

commit b9901f02147319e811be21db1e3b9fd1970fa47d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T12:26:05Z

    IGNITE-4457 Define cache plugin API in .NET
    
    This closes #1375

commit 0453627b5f6a5a48967916d342ebf9ce92d42ec1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T12:32:33Z

    .NET: Add missing AttributeUsage for plugin attributes

commit 68cce9c1cb62f2a5f89b9e0f2078d3fe6aceb448
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T12:35:38Z

    Merge branch 'master' into ignite-2.0

commit ec1430824a21e41349a172c22fa3a66a53a8a90b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T14:13:46Z

    IGNITE-4441 Define plugin API in .NET - do not start PlatformPluginProcessor when there is no platform

commit e219bad22b724deb46661478e00d2282415f70a1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T14:47:25Z

    .NET: Seal plugin attributes, remove unused imports

commit 490e9a138d5ed0da505f4de7f57bb0e14c540fea
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-25T11:38:57Z

    Merge branch 'master' into ignite-2.0

commit 637d79170a3bd9ae229447b5b756fbb63c8e9328
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-25T17:33:35Z

    Merge branch 'master' into ignite-2.0

----
;;;","09/Feb/17 10:35;tledkov-gridgain;TC [tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1512%2Fhead]

About tests results: I don't see real new failures. All failures marked as 'new' look like fluky.;;;","14/Feb/17 13:37;vozerov;[~tledkov-gridgain],
I would also remove other usages of {{OBJECT_TYPE_ID}} in {{BinaryUtils.doReadClass}} and {{BinaryUtils.resolveClass}}. Everything should work still after this change.;;;","14/Feb/17 14:49;tledkov-gridgain;Fixed.
[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1512%2Fhead]
About tests results: I don't see real new failures. All failures marked as 'new' look like fluky.;;;","21/Mar/17 09:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1512
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FairAffinityFunction fails on node restart with backupFilter set and no backups,IGNITE-4671,13041397,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,08/Feb/17 14:24,21/Feb/17 12:35,14/Jul/23 06:20,21/Feb/17 12:35,1.8,,,,,2.0,,cache,,,,0,,,,"Setup: FairAffinityFunction with backup or affinity filter, number of cache backups is 0.

On nodes restart fails on assertion in isAssignable() method.",,dkarachentsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Feb 09 09:47:45 UTC 2017,,,,,,,,,,"0|i39sm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/17 09:47;dkarachentsev;[PR#1511|https://github.com/apache/ignite/pull/1511] [Review|http://reviews.ignite.apache.org/ignite/review/IGNT-CR-92];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Throw exception on starting client cache when indexed types cannot be loaded,IGNITE-4667,13041305,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,dkarachentsev,dkarachentsev,08/Feb/17 07:57,03/Jun/17 07:49,14/Jul/23 06:20,10/Apr/17 07:55,1.8,,,,,2.1,,cache,,,,0,,,,"Assume following situation:
1. Server node configured cache indexed types with classes that client node doesn't have.
2. Start server.
3. Start client. Client successfully connected.
4. Try to get cache on client node.
5. Was thrown exception in GridQueryProcessor and request for cache on client node hangs forever.

If on some reason cache couldn't be initialized, exception must be thrown on Ignite.cache() operation.",,dkarachentsev,githubbot,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Sat Jun 03 07:49:34 UTC 2017,,,,,,,,,,"0|i39s1r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Apr/17 12:19;dkarachentsev;[PR 1725|https://github.com/apache/ignite/pull/1725];;;","05/Apr/17 08:52;sboikov;Hi Dmitry,

Reviewed your changes, have some comments:
- please add more tests so that all cache modes are tested: transactional/atomic + near cache enabled/disabled
- I think you need catch/handle cache init exception on more higher level - inside CacheAffinitySharedManager.onCacheChangeRequest (prepareCacheStart can finish without errors, but after this initAffinity can fail)
- also I think it is better to finish cache statr futures in single place, now this is done in GridCacheProcessor.onExchangeDone, let's just change it to finish future with error if 'err' != null 

Thanks!;;;","06/Apr/17 16:31;dkarachentsev;Semen,

Thanks for review, please check last changes.;;;","07/Apr/17 09:48;sboikov;Reviewed, looks good to merge.

Thanks!;;;","26/May/17 09:59;githubbot;GitHub user dkarachentsev opened a pull request:

    https://github.com/apache/ignite/pull/2012

    IGNITE-4667 - Throw exception on starting client cache when indexed t…

    …ypes cannot be loaded

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4667-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2012.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2012
    
----
commit 22a64e30a3e1e7cac322a520d12cfd7cb179c524
Author: dkarachentsev <dkarachentsev@gridgain.com>
Date:   2017-05-26T09:55:55Z

    IGNITE-4667 - Throw exception on starting client cache when indexed types cannot be loaded

----
;;;","03/Jun/17 07:49;githubbot;Github user dkarachentsev closed the pull request at:

    https://github.com/apache/ignite/pull/2012
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BinaryUtils.doReadObjectArray can not read array with platform-only element type,IGNITE-4663,13040938,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,tledkov-gridgain,ptupitsyn,ptupitsyn,07/Feb/17 11:07,21/Mar/17 09:24,14/Jul/23 06:20,14/Feb/17 13:19,2.0,,,,,2.0,,binary,,,,0,,,,"{{BinaryUtils.doReadObjectArray}} performs unnecessary class lookup when {{deserialize = false}}. When array elements are of platform-only type ({{platformId != 0}}), the class can never be resolved. 

* arrays of user-defined types are not supported for platforms
* performance is suboptimal in binary mode (in Java and platforms)

Stack trace for platforms problem:
{code}
Java exception occurred [class=org.apache.ignite.binary.BinaryInvalidTypeException, message=Unknown pair [platformId= 0, typeId=3184265]]
  ----> Apache.Ignite.Core.Common.JavaException : class org.apache.ignite.binary.BinaryInvalidTypeException: Unknown pair [platformId= 0, typeId=3184265]
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForTypeId(BinaryContext.java:691)
	at org.apache.ignite.internal.binary.BinaryUtils.doReadClass(BinaryUtils.java:1521)
	at org.apache.ignite.internal.binary.BinaryUtils.doReadClass(BinaryUtils.java:1441)
	at org.apache.ignite.internal.binary.BinaryUtils.doReadObjectArray(BinaryUtils.java:1884)
	at org.apache.ignite.internal.binary.BinaryUtils.unmarshal(BinaryUtils.java:1838)
	at org.apache.ignite.internal.binary.BinaryReaderExImpl.readObjectDetached(BinaryReaderExImpl.java:1129)
	at org.apache.ignite.internal.processors.platform.cache.PlatformCache.processInStreamOutLong(PlatformCache.java:409)
	at org.apache.ignite.internal.processors.platform.PlatformTargetProxyImpl.inStreamOutLong(PlatformTargetProxyImpl.java:61)
{code}",,Alexey Kuznetsov,githubbot,ptupitsyn,tledkov-gridgain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2703,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Mar 21 09:24:53 UTC 2017,,,,,,,,,,"0|i39ps7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/17 08:11;Alexey Kuznetsov;why we need this flag? I hardly can understand in what cases we need to not deserialize entities;;;","08/Feb/17 12:25;githubbot;GitHub user tledkov-gridgain opened a pull request:

    https://github.com/apache/ignite/pull/1507

    IGNITE-4663: skip class loading when deserialize == false

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4663

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1507.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1507
    
----
commit c893da70a9757b16b0799adc8eaa29fa1b03d06e
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-21T11:54:33Z

    IGNITE-4399: IGFS: Merged IgfsSecondaryFileSystem and IgfsSecondaryFileSystemV2 interfaces. This closes #1346.

commit c5882a85f4e3a1f61723ac54fd92f087684df6da
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-26T11:15:42Z

    Merge branch 'master' into ignite-2.0

commit 7e73d0223a3f09cbe0b7094a2c04bdf9d63ca9be
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-28T09:54:47Z

    Merge branch 'master' into ignite-2.0

commit 7d82d6a06b5e9f1f8cd2909b865e37d46b8da03f
Author: devozerov <vozerov@gridgain.com>
Date:   2016-12-28T09:58:11Z

    IGNITE-3875: Introduced separate thread pool for data streamer. This closes #1173. This closes #1383.

commit a61b0eaff1817d84c0659e8a7e095f29e22800e1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-28T11:09:38Z

    IGNITE-4405: Hadoop: implemented ""readLine"" method for HadoopDataInStream and HadoopDirectDataInput classes. This closes #1358.

commit 2df39a80d80e2575be61a902ccd48615796fcde9
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-28T13:47:24Z

    IGNITE-3961: IGFS: Added IgfsSecondaryFileSystem.affintiy() method. This closes #1114. This closes #1252.

commit 2e691d80ea4870c3e7b5b127792b66c920f72c39
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-29T08:00:01Z

    IGNITE-4462: IGFS: removed grid name from HadoopIgfsEndpoint. This closes #1368.

commit a9b1fc2b3840d47d7c978d9296e8ae6bdeb10be5
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-29T08:07:22Z

    IGNITE-4459: Hadoop: weighted planned is default one from now on. This closes #1391.

commit 1f743465d6875ef48b1835d03a78a0dbaf339bf6
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2016-12-29T08:14:10Z

    IGNITE-4458: Hadoop: ""striped"" shuffle mode is default from now on. This closes #1390.

commit 6090ebdfcd0ea3840b0d32cb10197b43615e1e89
Author: devozerov <vozerov@gridgain.com>
Date:   2017-01-05T09:23:06Z

    Merge branch 'master' into ignite-2.0

commit 77ca2e636c73e464f833f227c4894df0785ae9e2
Author: devozerov <vozerov@gridgain.com>
Date:   2017-01-16T13:07:49Z

    Merge branch 'master' into ignite-2.0

commit d14e0727b3dd61ab5ec2957133d77dbc25e9ba68
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-01-16T13:36:25Z

    IGNITE-4428: Hadoop: moved HadoopMapReducePlanner and dependent classes to public space. This closes #1389. This closes #1394.

commit f1365421c299b754a10edf8b6f156aeeb5ff0ce1
Author: tledkov-gridgain <tledkov@gridgain.com>
Date:   2017-01-16T13:57:27Z

    IGNITE-4503: Hadoop: added boundary checks to HadoopDirectDataInput. This closes # 1416.

commit e08b6ff48916edfab2dbd5d62092be5a1f819a2f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-19T10:34:59Z

    Merge branch 'master' into ignite-2.0

commit 43adf8a3f09c6b29fe3e70f62dbc58251d8d7cb9
Author: Ivan Veselovskiy <iveselovskiy@gridgain.com>
Date:   2017-01-19T11:34:23Z

    IGNITE-4219: Hadoop: fixed serialization of long strings. This closes #1409.

commit 454b9769e72775c5f6b44a36f0eef84bcce13bd7
Author: devozerov <vozerov@gridgain.com>
Date:   2017-01-19T11:34:43Z

    Merge remote-tracking branch 'origin/ignite-2.0' into ignite-2.0

commit 4cd332b781cf700b99402eed2363f988f6403602
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-01-19T12:05:09Z

    IGNITE-4157 Use  discovery custom messages instead of marshaller cache - Fixes #1271.
    
    Signed-off-by: Alexey Goncharuk <alexey.goncharuk@gmail.com>

commit d0a6c57aa26bca64ef68370c0ebdb5ce45bcc765
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-19T14:10:41Z

    IGNITE-4441 Define plugin API in .NET
    
    This closes #1362

commit 34a97833905a33bdb31b8e4580a576c2142313a7
Author: Alexey Goncharuk <alexey.goncharuk@gmail.com>
Date:   2017-01-19T15:04:23Z

    IGNITE-4157 - Added mapping update listener stub

commit e8377167b7b8dd020a93d92c743e4541dcd000ed
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-20T10:00:40Z

    Merge branch 'master' into ignite-2.0

commit 38cb67d45eb91e20ad4b92a490747534f5e8febb
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-20T13:09:57Z

    Merge branch 'master' into ignite-2.0

commit 82857d0cb6e2984a5359b822a9c903874414aa67
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-23T10:12:12Z

    Merge branch 'master' into ignite-2.0
    
    # Conflicts:
    #	modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/impl/v1/HadoopV1MapTask.java
    #	modules/hadoop/src/main/java/org/apache/ignite/internal/processors/hadoop/impl/v1/HadoopV1ReduceTask.java

commit b0f84872945f36f240218636c298ecc9f765c152
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T11:58:52Z

    IGNITE-4592 .NET: Fix binary enum serialization
    
    This closes #1456

commit b9901f02147319e811be21db1e3b9fd1970fa47d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T12:26:05Z

    IGNITE-4457 Define cache plugin API in .NET
    
    This closes #1375

commit 0453627b5f6a5a48967916d342ebf9ce92d42ec1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T12:32:33Z

    .NET: Add missing AttributeUsage for plugin attributes

commit 68cce9c1cb62f2a5f89b9e0f2078d3fe6aceb448
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T12:35:38Z

    Merge branch 'master' into ignite-2.0

commit ec1430824a21e41349a172c22fa3a66a53a8a90b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T14:13:46Z

    IGNITE-4441 Define plugin API in .NET - do not start PlatformPluginProcessor when there is no platform

commit e219bad22b724deb46661478e00d2282415f70a1
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T14:47:25Z

    .NET: Seal plugin attributes, remove unused imports

commit 490e9a138d5ed0da505f4de7f57bb0e14c540fea
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-25T11:38:57Z

    Merge branch 'master' into ignite-2.0

commit 637d79170a3bd9ae229447b5b756fbb63c8e9328
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-25T17:33:35Z

    Merge branch 'master' into ignite-2.0

----
;;;","08/Feb/17 13:56;tledkov-gridgain;[Tests results|http://195.239.208.174/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1507%2Fhead];;;","08/Feb/17 14:14;ptupitsyn;[~Alexey Kuznetsov] see https://apacheignite.readme.io/docs/binary-marshaller. There are a lot of such use cases.;;;","13/Feb/17 15:19;tledkov-gridgain;About tests results: I don't see real new failures. All failures marked as 'new' look like fluky.;;;","21/Mar/17 09:24;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1507
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GridMarshallerPerformanceTest fail,IGNITE-4654,13040124,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,,zstan,zstan,03/Feb/17 13:21,10/Dec/18 16:42,14/Jul/23 06:20,21/Feb/17 14:43,2.0,,,,,2.0,,,,,,0,,,,"NPE fail
{code}
[13:46:49,678][INFO ][main][root] >>> Starting test class: GridMarshallerPerformanceTest <<<
[13:46:49,688][INFO ][main][root] >>> Starting test: GridMarshallerPerformanceTest#testGridMarshaller <<<
[13:46:49,694][ERROR][main][root] Test failed.
class org.apache.ignite.internal.util.lang.GridClosureException: Failed to serialize object: org.apache.ignite.marshaller.GridMarshallerPerformanceTest$TestObject@d0bb6d5
        at org.apache.ignite.internal.util.lang.GridFunc.wrap(GridFunc.java:4582)
        at org.apache.ignite.internal.util.lang.IgniteInClosureX.apply(IgniteInClosureX.java:41)
        at org.apache.ignite.marshaller.GridMarshallerPerformanceTest.runTest(GridMarshallerPerformanceTest.java:236)
        at org.apache.ignite.marshaller.GridMarshallerPerformanceTest.testGridMarshaller(GridMarshallerPerformanceTest.java:132)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at junit.framework.TestCase.runTest(TestCase.java:176)
        at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1803)
        at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:118)
        at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1718)
        at java.lang.Thread.run(Thread.java:745)
Caused by: class org.apache.ignite.IgniteCheckedException: Failed to serialize object: org.apache.ignite.marshaller.GridMarshallerPerformanceTest$TestObject@d0bb6d5
        at org.apache.ignite.marshaller.optimized.OptimizedMarshaller.marshal0(OptimizedMarshaller.java:197)
        at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
        at org.apache.ignite.marshaller.GridMarshallerPerformanceTest$3.applyx(GridMarshallerPerformanceTest.java:122)
        at org.apache.ignite.marshaller.GridMarshallerPerformanceTest$3.applyx(GridMarshallerPerformanceTest.java:120)
        at org.apache.ignite.internal.util.lang.IgniteInClosureX.apply(IgniteInClosureX.java:38)
        ... 11 more
Caused by: java.lang.NullPointerException
{code}",,githubbot,sboikov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:42:30 UTC 2018,,,,,,,,,,"0|i39ktz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Feb/17 13:28;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/1493

    IGNITE-4654 GridMarshallerPerformanceTest#testGridMarshaller fix

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4654

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1493.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1493
    
----
commit be0ae98ab477ec6b03d4393050f82d518684b5d4
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-02-03T13:24:36Z

    IGNITE-4654 GridMarshallerPerformanceTest#testGridMarshaller fix

----
;;;","03/Feb/17 13:28;zstan;https://github.com/apache/ignite/pull/1493;;;","21/Feb/17 14:43;sboikov;Merged into master.

Thanks!;;;","10/Dec/18 16:42;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/1493
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IgniteInternalTx.prepare() does not wait for async operations to complete,IGNITE-4648,13039828,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,SomeFire,ptupitsyn,ptupitsyn,02/Feb/17 13:25,26/Feb/18 18:09,14/Jul/23 06:20,26/Jul/17 14:01,1.7,,,,,2.3,,cache,,,,0,,,,"{{commit}} and {{rollback}} wait for async operations by calling {{tx.txState().awaitLastFut();}} (see {{GridCacheSharedContext}}).

There is no such thing in {{IgniteInternalTx.prepare()}} implementations.

Since {{prepare}} is an internal method, this is not an issue mostly, except for two things:
* JTA. {{CacheJtaResource}} calls {{prepare()}} explicitly. 
* .NET {{TransactionScope}} API. Same thing as JTA, basically. {{PlatformTransactions}} call {{prepare()}} as well.


As a result, if user starts an async operation within JTA transaction and then completes the tx, undefined behavior is possible.",,Alexey Kuznetsov,avinogradov,githubbot,ptupitsyn,SomeFire,yzhdanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 26 18:09:46 UTC 2018,,,,,,,,,,"0|i39j07:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Apr/17 13:33;githubbot;GitHub user SomeFire opened a pull request:

    https://github.com/apache/ignite/pull/1876

    IGNITE-4648

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/SomeFire/ignite ignite-4648

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1876.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1876
    
----
commit 400dca03c510730d867807a734195ff4a6bae77a
Author: Dmitrii Ryabov <somefireone@gmail.com>
Date:   2017-04-26T13:28:18Z

    tx.txState().awaitLastFut() inserted into prepareTx()

----
;;;","17/May/17 14:46;yzhdanov;Dmitry, can you please add a test that fails before the fix and passes after? In Ignite we try to react on a problem reported with a  test that fails. Then we fix the test. 

Please look at this test - org.apache.ignite.internal.processors.cache.AbstractCacheJtaSelfTest

You can add new test method and do some putAsync() for keys that are currently locked by pessimistic transactions in parallel threads. Then you commit JTA transaction and then commit cache transaction in parallel thread and then assert the results.

Thanks!

Yakov;;;","03/Jul/17 09:38;SomeFire;[~yzhdanov], I added new method to check prepare. Can you look it?;;;","13/Jul/17 10:47;yzhdanov;[~SomeFire] [~ptupitsyn]

Guys, I have pushed my changes to origin/ignite-4648

Dmitry, please review my changes and rerun TC for them. Please let us know about TC results here. 

I would also ask you to extend JTA test coverage (you can file in another ticket). The goal is to have every method of CacheJtaResource called  inside your tests. Please add tests that will enlist fake XA resources to transaction (to the one enlisted for proper cache tx). You can use this snippet:
{noformat}
jotm.getTransactionManager().getTransaction().enlistResource(new XAResource() {.. });
{noformat}

We need to do this because with only one resource transaction manager calls commit() without calling prepare(). Therefore, a lot of code is not covered with tests. Please add them and add invocations counters and asserts for them.

Pavel, please see my changes to CacheJtaResource and change PlatformTransactions accordingly. I want you to add more tests for platform tx that would at least check async operations that should have been failed before changes to this ticket.;;;","13/Jul/17 13:13;SomeFire;[~yzhdanov], TC tests are in progress (I let you know results when they finish), but I though test method for this ticket must have separate ""prepare"" call.

I created separate ticket for test coverage - [IGNITE-5748 Extend JTA test coverage|https://issues.apache.org/jira/browse/IGNITE-5748].;;;","13/Jul/17 14:37;ptupitsyn;[~yzhdanov] I've updated .NET tests to check async operations within {{TransactionScope}}. These tests hang or fail in master, but work fine in this branch.;;;","14/Jul/17 09:04;SomeFire;[~yzhdanov], [~ptupitsyn], test results are [here|http://ci.ignite.apache.org/viewLog.html?buildId=723892&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAll]. Fails look similar to master branch. I tried some tests (e.g. compute) and they don't fail on my pc.

Yakov, I merged your changes to my pull request so we can merge it with master.;;;","18/Jul/17 13:59;avinogradov;[~SomeFire],

Looks good to me.

[~yzhdanov],

Please make final check.;;;","18/Jul/17 14:27;yzhdanov;[~SomeFire] it seems you altered my code. Please put this method back:
{noformat}
    /**
     * @throws IgniteCheckedException If failed.
     */
    public final void awaitLastFutureAndPrepare() throws IgniteCheckedException {
        txState().awaitLastFuture(cctx);

        prepare();
    }
{noformat}

And restore its invocations.;;;","18/Jul/17 14:30;SomeFire;[~yzhdanov], do we really need separate method for awaiting?;;;","18/Jul/17 15:31;avinogradov;[~SomeFire],

Discussed with [~yzhdanov] at separate thread and decided to add {{awaitAsyncOps}} boolean flag to {{prepare()}} signature. 
It should be true for all current invokes.

Please check tests using this method still successful.;;;","20/Jul/17 07:40;SomeFire;[~avinogradov], [~yzhdanov], [~ptupitsyn], I added boolean flag to {{prepare()}} method. [JTA|http://ci.ignite.apache.org/viewLog.html?buildId=733943&buildTypeId=Ignite20Tests_IgniteJta&tab=buildResultsDiv] and [.NET|http://ci.ignite.apache.org/viewLog.html?buildId=733942&tab=buildResultsDiv&buildTypeId=Ignite20Tests_RunAllNet] tests are successfully completed.;;;","21/Jul/17 13:26;avinogradov;Currently waiting for TeamCity results.;;;","26/Jul/17 14:01;avinogradov;[~SomeFire],

Thanks for contribution! 
Merged to master branch.;;;","26/Feb/18 18:09;githubbot;Github user SomeFire closed the pull request at:

    https://github.com/apache/ignite/pull/1876
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Value from IgniteQueue in atomic mode could be lost,IGNITE-4644,13039777,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,avinogradov,dkarachentsev,dkarachentsev,02/Feb/17 09:15,18/May/17 08:35,14/Jul/23 06:20,06/Apr/17 12:01,1.8,,,,,2.1,,cache,,,,0,,,,"Assume following case (operations are going concurrently):
1) Client1 -> offer. Add new index in queue.
2) On Client1 happens JVM pause or short-time problem with connectivity to cluster longer than 3 sec.
3) Client2 -> poll. Get index from cache, but no value available.
4) Client2 checks for value about 3 sec and if no value appears, just skips it.

Should be fixed somehow or make timeout configurable.",,avinogradov,dkarachentsev,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Apr 06 12:01:10 UTC 2017,,,,,,,,,,"0|i39iov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/17 12:01;avinogradov;Timeout now can be set by ""IGNITE_ATOMIC_CACHE_QUEUE_RETRY_TIMEOUT"" System Property ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JdbcDatabaseMetadata.getIndexInfo() method not working,IGNITE-4643,13039684,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ilyak,vkulichenko,vkulichenko,02/Feb/17 01:59,28/Aug/17 16:39,14/Jul/23 06:20,23/Aug/17 13:28,1.8,,,,,2.3,,jdbc,,,,0,,,,"{{JdbcDatabaseMetadata.getIndexInfo()}} method does not update metadata before creating result set. So if it's a first method invocation on this instance of {{JdbcDatabaseMetadata}}, it fails with NPE. Need to create tests and add {{updateMetaData()}} call in the beginning of the method.",,avinogradov,githubbot,ilyak,tledkov-gridgain,vkulichenko,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-6125,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Aug 23 13:28:57 UTC 2017,,,,,,,,,,"0|i39i47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/17 16:12;avinogradov;FixVersion changed to 2.0.
In case issue can be done till Feb 17 please rollback this change.;;;","18/Aug/17 08:58;ilyak;It seems that JdbcDatabaseMetadata is also lacking a lot of diagnostic calls which return sensible values in e.g. thin client.;;;","18/Aug/17 11:48;githubbot;GitHub user alamar opened a pull request:

    https://github.com/apache/ignite/pull/2481

    IGNITE-4643 Fix NPE in getIndexInfo() with test

    Also ported several tests from Thin driver implementation.
    Fixed a problem in Primary Keys metadata.
    Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alamar/ignite ignite-4643

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/2481.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #2481
    
----
commit f3bf90943ce9a613296929d8050c55aa0cdc88b0
Author: Ilya Kasnacheev <ilya.kasnacheev@gmail.com>
Date:   2017-08-18T11:40:42Z

    IGNITE-4643 Fix NPE in getIndexInfo() with test
    
    Also ported several tests from Thin driver implementation.
    Fixed a problem in Primary Keys metadata.
    Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.

----
;;;","18/Aug/17 12:15;ilyak;https://reviews.ignite.apache.org/ignite/branch/PR%202481

    Also ported several tests from Thin driver implementation.
    Fixed a problem in Primary Keys metadata.
    Fixed several get*Version() methods to return Ignite version/JDBC 4.1 instead of dummy values.
;;;","18/Aug/17 13:57;tledkov-gridgain;[~ilyak], looks good. My comments:
1. Code style: if / for braces for multi-line statements.
2. I think we have to create separate ticket to enhance DatabaseMetadata for jdbc2 (or fix the comments below in this ticket):
2.1. Works with schema name is invalid. {{cacheName != schemaName}}. see {{JdbcRequestHandler#getSchemas}}
2.3. {{calatog}} parameter is ignored in all method. An empty results must be returned when non=empty catalog argument is passed.
2.4. Uppercase mustn't use on match & results output.;;;","18/Aug/17 14:18;ilyak;2.1. I'll take a look whether it's a safe thing to do.
2.3. Might cause existing clients to fail (a potentially breaking API change) - scared to do that one.
2.4. I think we can go without uppercasing results output, but removing case-insensitive matching arguments is again a breaking change that's I'm afraid to do.;;;","21/Aug/17 07:48;vozerov;[~ilyak], have you confirmed that these changes do really break anything?;;;","21/Aug/17 08:05;vozerov;[~ilyak], my comments:
1) Changes to {{getDatabase*Version}} looks invalid to me. This method should return version of the database, which could differ from version of the driver. All changes to {{version}} methods should be reverted and implemented in a separate ticket.
2) I do not understand why {{matches}} method does upper-case conversions. {{MYTABLE}} and {{MyTable}} are different objects, but both will fall into same patterns.
3) As Taras mentioned, catalog is currently handled incorrectly. 

Provided that we have a range of problems here, and most of them are fixed incorrectly, I propose to focus on actual goal of the ticket - fix {{getIndexedInfo}} - this is one-line fix. The rest problems should be fixed separately.;;;","21/Aug/17 10:16;ilyak;[~vozerov] OK, let's do the one-liner. I have updated https://github.com/apache/ignite/pull/2481, please review it.;;;","21/Aug/17 10:29;ilyak;I have created IGNITE-4643 for the rest of work.;;;","23/Aug/17 08:56;tledkov-gridgain;The latest minimal changes looks good. It's OK with me.;;;","23/Aug/17 13:28;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/2481
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node starts with incorrect QueryEntity configuration,IGNITE-4631,13039217,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,skalashnikov,skalashnikov,skalashnikov,31/Jan/17 15:48,08/Feb/17 17:17,14/Jul/23 06:20,08/Feb/17 14:13,,,,,,1.9,,sql,,,,0,,,,"When QueryEntity.keyFields property is used to specify compound key fields, it is possible to set the field names in wrong register.
The node would start normally, but for SQL queries requesting key fields the resultset contains nulls in corresponding columns.
The query processor internally fails to tell the key field from value field in this case.
Note that for optimized marshaller, the keyFields aren't taken into account and queries return valid data. 

I believe the node shall not start with such configuration at all.

See the attached test that reproduces the case.",,githubbot,skalashnikov,vozerov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 15:50;skalashnikov;QueryEntityCaseMismatchTest.java;https://issues.apache.org/jira/secure/attachment/12850216/QueryEntityCaseMismatchTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 08 17:17:13 UTC 2017,,,,,,,,,,"0|i39f9j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 17:29;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1484

    IGNITE-4631 Added check to ensure QueryEntity 'keyFields' is subset o…

    …f 'fields'

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4631

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1484.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1484
    
----
commit 81fa92dc8846cf6f9a031bb5d8a7255b02ab266e
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-01-31T17:26:44Z

    IGNITE-4631 Added check to ensure QueryEntity 'keyFields' is subset of 'fields'

----
;;;","01/Feb/17 09:13;skalashnikov;Added check to ensure QueryEntity 'keyFields' is subset of 'fields';;;","01/Feb/17 09:13;skalashnikov;[~vozerov], could you please review?;;;","01/Feb/17 14:41;skalashnikov;Added check to ensure QueryEntity 'keyFields' is subset of 'fields'.;;;","08/Feb/17 14:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1484
;;;","08/Feb/17 14:13;vozerov;[~skalashnikov],
Fix looks good. I performed several minor changes:
- Added field name to exception message
- Simplified test.

Please review these changes in {{master}}, commit {{46ff66e}}.;;;","08/Feb/17 17:17;skalashnikov;Vova,
I have reviewed the changes you made. Thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.ignite.lang.IgniteProductVersion.releaseDate returns not valid date,IGNITE-4630,13039185,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ezhuravl,ezhuravl,ezhuravl,31/Jan/17 14:04,01/Aug/19 22:01,14/Jul/23 06:20,03/Feb/17 09:45,,,,,,1.9,,,,,,0,easyfix,,,,,ezhuravl,githubbot,,,,,,,,,,,"dspavlov commented on issue #1482: IGNITE-4630 return valid date for org.apache.ignite.lang.IgniteProductVersion.releaseDate
URL: https://github.com/apache/ignite/pull/1482#issuecomment-517473932
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on pull request #1482: IGNITE-4630 return valid date for org.apache.ignite.lang.IgniteProductVersion.releaseDate
URL: https://github.com/apache/ignite/pull/1482
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 31 14:17:46 UTC 2017,,,,,,,,,,"0|i39f2f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jan/17 14:16;githubbot;GitHub user ezhuravl opened a pull request:

    https://github.com/apache/ignite/pull/1482

    IGNITE-4630 return valid date for org.apache.ignite.lang.IgniteProductVersion.releaseDate

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ezhuravl/ignite ignite-4630

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1482.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1482
    
----
commit d3d771672b76f86234cc41ec178ec8616c6470b4
Author: Evgenii Zhuravlev <ezhuravlev@gridgain.com>
Date:   2017-01-31T14:07:45Z

    IGNITE-4630 return valid date for org.apache.ignite.lang.IgniteProductVersion.releaseDate

----
;;;","31/Jan/17 14:17;ezhuravl;Now releaseDate returns a valid Date;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimization: store value of indexed field in H2Tree,IGNITE-4629,13039143,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kdudkov,sboikov,sboikov,31/Jan/17 10:00,30/Mar/17 09:41,14/Jul/23 06:20,30/Mar/17 09:41,,,,,,2.0,,cache,,,,0,,,,"Currently we store only 'link' in H2Tree and to do comparison we read lock data page and copy row data into GridH2Row. If indexed value is primitive then it is possible to store this value in H2Tree, so get value for comparison will be just Unsafe.getInt/getLong.

Prototype is implemented in ignite-3477-idx. (branch is based on ignite-3477).",,amashenkov,kdudkov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 08 14:55:15 UTC 2017,,,,,,,,,,"0|i39et3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Feb/17 08:36;kdudkov;I've done first implementation, running tests now.
[Review page (IG-CR-11)|http://reviews.ignite.apache.org/apache-ignite/review/IG-CR-11]

github branch: ignite-3477-idx2;;;","06/Feb/17 15:53;kdudkov;[TC tests|http://ci.ignite.apache.org/project.html?projectId=IgniteTests&tab=projectOverview&branch_IgniteTests=pull%2F1500%2Fhead];;;","06/Feb/17 16:22;kdudkov;[PR 1500|https://github.com/apache/ignite/pull/1500];;;","08/Feb/17 11:33;kdudkov;Benchmarks:

Configuration:
1/8 clients; 4 severs
primary sync
1 backup

1 client			
|| ||ignite-3477-idx2 rev:2fcf5408 || ignite-3477 rev:8d5d6860 || delta ||
|replace-indexed-value | 159,223.70 | 97,124.72 | 63.94% |

8 clients			
|| || ignite-3477-idx2 rev:2fcf5408 || ignite-3477 rev:8d5d6860 || delta ||
| replace-indexed-value | 26,448.40 | 16,147.90 | 63.79% |

Mostly done, please review.;;;","08/Feb/17 14:55;sboikov;Hi Konstantin,

I reviewed changes and have one question: will new code work if index is created on, say, Integer field, but actual value of this field during cache put is null, please add such test.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: MixedClusterTest leaves Java-only node running,IGNITE-4625,13038447,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,27/Jan/17 14:10,04/Apr/17 08:06,14/Jul/23 06:20,04/Apr/17 08:05,,,,,,2.0,,platforms,,,,0,.NET,,,"MixedClusterTest causes consequent tests to fail in some situations because it leaves java-only ""grid2"" node running. Looks like ExecuteJavaTask does not stop node properly.",,avinogradov,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Apr 04 08:06:22 UTC 2017,,,,,,,,,,"0|i39aun:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Feb/17 16:12;avinogradov;FixVersion changed to 2.0.
In case issue can be done till Feb 17 please rollback this change.;;;","31/Mar/17 13:25;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1716

    IGNITE-4625 .NET: MixedClusterTest leaves Java-only node running

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4625

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1716.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1716
    
----
commit eab761e99a8da7087fa753f2e66d074a8a0d0b8b
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-03-31T13:08:39Z

    fix AbstractTaskTest teardown

commit 5de99a6b63ce589365b10d65354cc83064d96b0d
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-03-31T13:13:45Z

    Fix DeploymentTest

----
;;;","31/Mar/17 15:09;ptupitsyn;Looks like {{MixedClusterTest.TestScanQuery}} breaks something serious on Java side, and node may fail to stop and clean up properly.;;;","03/Apr/17 14:56;ptupitsyn;Looks like stopping Java node from a Java task is not a good idea, this can lead to a failure, which leaves ""grid2"" in the map:
{{No verification for local node leave has been received from coordinator (will stop node anyway).}};;;","04/Apr/17 08:05;ptupitsyn;* Fix {{PlatformStopIgniteTask}} to prefer local node
* Fix nodes stop in {{AbstractTaskTest}}
* Remove {{MixedClusterTest.TestScanQuery}} since it does not provide much value and can cause failed node shutdown

Merged to master.;;;","04/Apr/17 08:06;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/1716
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Web Console wrongly sets keyFields ,IGNITE-4622,13038214,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,dmagda,dmagda,26/Jan/17 18:03,27/Jan/17 04:42,14/Jul/23 06:20,27/Jan/17 04:42,,,,,,1.9,,,,,,0,,,,"Issue reported in this discussion:
http://apache-ignite-users.70518.x6.nabble.com/insert-update-delete-issue-in-Version-1-8-td10244.html

After that , no more exception there. I am wondering... so I reviewed the
""model"" section of web console. it generates everything for us, right? and I
found it is a little strange...  

in WEB CONSOLE:
    the auto generated code is ""
    qryEntity.setKeyFields(new JdbcTypeField(Types.BIGINT, ""PK"",
long.class, ""pk""));
""
in DOWNLOADED zip file, code is ""
    type.setKeyFields(new JdbcTypeField(Types.BIGINT, ""PK"", long.class,
""pk""));
"" the type is ""JdbcType""... not the ""qryEntity""",,anovikov,dmagda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 27 04:42:02 UTC 2017,,,,,,,,,,"0|i399dr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Jan/17 04:42;anovikov;Fixed variable name in preview. Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hang on broadcast when BinaryUtils.FIELDS_SORTED_ORDER == true,IGNITE-4621,13038190,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,avinogradov,avinogradov,avinogradov,26/Jan/17 16:54,01/Feb/17 11:32,14/Jul/23 06:20,01/Feb/17 11:32,,,,,,1.9,,,,,,0,,,,"Reproducer:
{noformat}
        assert BinaryUtils.FIELDS_SORTED_ORDER; // should be set by ENV variable.

        startGrids(GRIDS);

        //awaitPartitionMapExchange();

        Ignite ignite = grid(0);

        ignite.compute(ignite.cluster().forServers()).broadcast(new JustAnotherCallable()); // hang here

        stopAllGrids();
{noformat}

where cache configuration is 
{noformat}
...
        cfg.setMarshaller(new BinaryMarshaller());

        final BinaryConfiguration binaryCfg = new BinaryConfiguration();

        binaryCfg.setCompactFooter(false);

        cfg.setBinaryConfiguration(binaryCfg);
...
{noformat}

Stacktrace:
{noformat}
	- parking to wait for  <0x000000076fce15c8> (a org.apache.ignite.internal.util.future.GridFutureAdapter$ChainFuture)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireShared(AbstractQueuedSynchronizer.java:967)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(AbstractQueuedSynchronizer.java:1283)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get0(GridFutureAdapter.java:158)
	at org.apache.ignite.internal.util.future.GridFutureAdapter.get(GridFutureAdapter.java:118)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$25.op(GridCacheAdapter.java:2369)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$25.op(GridCacheAdapter.java:2355)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(GridCacheAdapter.java:4385)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke0(GridCacheAdapter.java:2355)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke(GridCacheAdapter.java:2326)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.invoke(IgniteCacheProxy.java:1814)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.addMeta(CacheObjectBinaryProcessorImpl.java:585)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl$3.addMeta(CacheObjectBinaryProcessorImpl.java:218)
	at org.apache.ignite.internal.binary.BinaryContext.updateMetadata(BinaryContext.java:1215)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:753)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:205)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:200)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:133)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:459)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1092)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:623)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:782)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:205)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:133)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.marshal(GridBinaryMarshaller.java:239)
	at org.apache.ignite.internal.binary.BinaryMarshaller.marshal0(BinaryMarshaller.java:83)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9861)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9925)
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.marshal(GridCacheUtils.java:817)
	at org.apache.ignite.internal.processors.cacheobject.IgniteCacheObjectProcessorImpl.marshal(IgniteCacheObjectProcessorImpl.java:105)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.marshal(CacheObjectBinaryProcessorImpl.java:797)
	at org.apache.ignite.internal.processors.cache.CacheObjectImpl.prepareMarshal(CacheObjectImpl.java:101)
	at org.apache.ignite.internal.processors.cache.transactions.TxEntryValueHolder.marshal(TxEntryValueHolder.java:143)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxEntry.marshal(IgniteTxEntry.java:889)
	at org.apache.ignite.internal.processors.cache.GridCacheMessage.marshalTx(GridCacheMessage.java:359)
	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxPrepareRequest.prepareMarshal(GridDistributedTxPrepareRequest.java:338)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareRequest.prepareMarshal(GridDhtTxPrepareRequest.java:311)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onSend(GridCacheIoManager.java:876)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.send(GridCacheIoManager.java:898)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare0(GridDhtTxPrepareFuture.java:1306)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.mapIfLocked(GridDhtTxPrepareFuture.java:665)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare(GridDhtTxPrepareFuture.java:1038)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.prepareAsyncLocal(GridNearTxLocal.java:1015)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareColocatedTx(IgniteTxHandler.java:253)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareTx(IgniteTxHandler.java:234)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.proceedPrepare(GridNearOptimisticTxPrepareFuture.java:533)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.prepareSingle(GridNearOptimisticTxPrepareFuture.java:379)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.prepare0(GridNearOptimisticTxPrepareFuture.java:326)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFutureAdapter.prepare(GridNearOptimisticTxPrepareFutureAdapter.java:69)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.prepareAsync(GridNearTxLocal.java:825)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.commitAsync(GridNearTxLocal.java:848)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.optimisticPutFuture(IgniteTxLocalAdapter.java:3228)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.putAsync0(IgniteTxLocalAdapter.java:3016)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.invokeAsync(IgniteTxLocalAdapter.java:1877)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$25.op(GridCacheAdapter.java:2363)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$25.op(GridCacheAdapter.java:2355)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(GridCacheAdapter.java:4385)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke0(GridCacheAdapter.java:2355)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke(GridCacheAdapter.java:2326)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.invoke(IgniteCacheProxy.java:1814)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.addMeta(CacheObjectBinaryProcessorImpl.java:585)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl$3.addMeta(CacheObjectBinaryProcessorImpl.java:218)
	at org.apache.ignite.internal.binary.BinaryContext.updateMetadata(BinaryContext.java:1215)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:753)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:205)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:200)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:133)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:459)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObjectField(BinaryWriterExImpl.java:1092)
	at org.apache.ignite.internal.binary.BinaryFieldAccessor$DefaultFinalClassAccessor.write(BinaryFieldAccessor.java:623)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:782)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:205)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:133)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.marshal(GridBinaryMarshaller.java:239)
	at org.apache.ignite.internal.binary.BinaryMarshaller.marshal0(BinaryMarshaller.java:83)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9861)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9925)
	at org.apache.ignite.internal.processors.cache.GridCacheUtils.marshal(GridCacheUtils.java:817)
	at org.apache.ignite.internal.processors.cacheobject.IgniteCacheObjectProcessorImpl.marshal(IgniteCacheObjectProcessorImpl.java:105)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.marshal(CacheObjectBinaryProcessorImpl.java:797)
	at org.apache.ignite.internal.processors.cache.CacheObjectImpl.prepareMarshal(CacheObjectImpl.java:101)
	at org.apache.ignite.internal.processors.cache.transactions.TxEntryValueHolder.marshal(TxEntryValueHolder.java:143)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxEntry.marshal(IgniteTxEntry.java:889)
	at org.apache.ignite.internal.processors.cache.GridCacheMessage.marshalTx(GridCacheMessage.java:359)
	at org.apache.ignite.internal.processors.cache.distributed.GridDistributedTxPrepareRequest.prepareMarshal(GridDistributedTxPrepareRequest.java:338)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareRequest.prepareMarshal(GridDhtTxPrepareRequest.java:311)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.onSend(GridCacheIoManager.java:876)
	at org.apache.ignite.internal.processors.cache.GridCacheIoManager.send(GridCacheIoManager.java:898)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare0(GridDhtTxPrepareFuture.java:1306)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.mapIfLocked(GridDhtTxPrepareFuture.java:665)
	at org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.prepare(GridDhtTxPrepareFuture.java:1038)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.prepareAsyncLocal(GridNearTxLocal.java:1015)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareColocatedTx(IgniteTxHandler.java:253)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxHandler.prepareTx(IgniteTxHandler.java:234)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.proceedPrepare(GridNearOptimisticTxPrepareFuture.java:533)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.prepareSingle(GridNearOptimisticTxPrepareFuture.java:379)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFuture.prepare0(GridNearOptimisticTxPrepareFuture.java:326)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticTxPrepareFutureAdapter.prepare(GridNearOptimisticTxPrepareFutureAdapter.java:69)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.prepareAsync(GridNearTxLocal.java:825)
	at org.apache.ignite.internal.processors.cache.distributed.near.GridNearTxLocal.commitAsync(GridNearTxLocal.java:848)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.optimisticPutFuture(IgniteTxLocalAdapter.java:3228)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.putAsync0(IgniteTxLocalAdapter.java:3016)
	at org.apache.ignite.internal.processors.cache.transactions.IgniteTxLocalAdapter.invokeAsync(IgniteTxLocalAdapter.java:1877)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$25.op(GridCacheAdapter.java:2363)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter$25.op(GridCacheAdapter.java:2355)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.syncOp(GridCacheAdapter.java:4385)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke0(GridCacheAdapter.java:2355)
	at org.apache.ignite.internal.processors.cache.GridCacheAdapter.invoke(GridCacheAdapter.java:2326)
	at org.apache.ignite.internal.processors.cache.IgniteCacheProxy.invoke(IgniteCacheProxy.java:1814)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl.addMeta(CacheObjectBinaryProcessorImpl.java:585)
	at org.apache.ignite.internal.processors.cache.binary.CacheObjectBinaryProcessorImpl$3.addMeta(CacheObjectBinaryProcessorImpl.java:218)
	at org.apache.ignite.internal.binary.BinaryContext.registerUserClassDescriptor(BinaryContext.java:796)
	at org.apache.ignite.internal.binary.BinaryContext.registerClassDescriptor(BinaryContext.java:750)
	at org.apache.ignite.internal.binary.BinaryContext.descriptorForClass(BinaryContext.java:622)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:163)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:133)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.doWriteObject(BinaryWriterExImpl.java:459)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.writeObject(BinaryWriterExImpl.java:1383)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor$C2V2.writeBinary(GridClosureProcessor.java:2069)
	at org.apache.ignite.internal.binary.BinaryClassDescriptor.write(BinaryClassDescriptor.java:730)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal0(BinaryWriterExImpl.java:205)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:146)
	at org.apache.ignite.internal.binary.BinaryWriterExImpl.marshal(BinaryWriterExImpl.java:133)
	at org.apache.ignite.internal.binary.GridBinaryMarshaller.marshal(GridBinaryMarshaller.java:239)
	at org.apache.ignite.internal.binary.BinaryMarshaller.marshal0(BinaryMarshaller.java:83)
	at org.apache.ignite.marshaller.AbstractNodeNameAwareMarshaller.marshal(AbstractNodeNameAwareMarshaller.java:58)
	at org.apache.ignite.internal.util.IgniteUtils.marshal(IgniteUtils.java:9861)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.sendRequest(GridTaskWorker.java:1357)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.processMappedJobs(GridTaskWorker.java:644)
	at org.apache.ignite.internal.processors.task.GridTaskWorker.body(GridTaskWorker.java:536)
	at org.apache.ignite.internal.util.worker.GridWorker.run(GridWorker.java:110)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.startTask(GridTaskProcessor.java:679)
	at org.apache.ignite.internal.processors.task.GridTaskProcessor.execute(GridTaskProcessor.java:403)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor.callAsync(GridClosureProcessor.java:418)
	at org.apache.ignite.internal.processors.closure.GridClosureProcessor.callAsync(GridClosureProcessor.java:391)
	at org.apache.ignite.internal.IgniteComputeImpl.broadcast(IgniteComputeImpl.java:383)
	at org.gridgain.grid.cache.store.local.GridCacheLocalStoreGridRestartTest.testRestartSimple(GridCacheLocalStoreGridRestartTest.java:268)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at org.apache.ignite.testframework.junits.GridAbstractTest.runTestInternal(GridAbstractTest.java:1797)
	at org.apache.ignite.testframework.junits.GridAbstractTest.access$000(GridAbstractTest.java:119)
	at org.apache.ignite.testframework.junits.GridAbstractTest$4.run(GridAbstractTest.java:1712)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",,avinogradov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,2017-01-26 16:54:15.0,,,,,,,,,,"0|i3998f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Yardstick makes wrong restarts when several servers are at the same host,IGNITE-4616,13038088,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,oleg-ostanin,krybakova,krybakova,26/Jan/17 11:34,12/Dec/18 10:09,14/Jul/23 06:20,12/Dec/18 10:09,1.8,,,,,,,yardstick,,,,0,,,,"During failover test yardstick makes wrong restarts when several servers are at the same host and first digits of their ids match (1 and 12,13,etc.; 2 and 27,22,etc.; 7 and 70,74,etc.)
For instance, we have the following RESTART_SERVERS option:
{noformat}
hostA:1:600:1200:6000,hostB:2:900:1200:6000,hostA:11:1200:1200:6000,hostB:12:1500:1200:6000,hostA:20:1800:1200:6000,hostB:21:2100:1200:6000
{noformat}
During server id1 restart at hostA server id11 will also be restarted, server id12 won't be restarted since it's at another host.
During server id2 restart  at hostB server id21 will be restarted as well while server id20 won't.


",,krybakova,oleg-ostanin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Dec 12 10:09:21 UTC 2018,,,,,,,,,,"0|i398lr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Oct/18 07:54;oleg-ostanin;[~ustas] Please check fixed scripts in [https://github.com/gridgain/yardstick/tree/ignite-4616-c] branch.;;;","12/Dec/18 10:09;oleg-ostanin;Fixed in yardstick framework.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Binary schema is not reset in BinaryReader,IGNITE-4614,13037749,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,ptupitsyn,ptupitsyn,ptupitsyn,25/Jan/17 16:37,02/Mar/17 11:38,14/Jul/23 06:20,25/Jan/17 17:39,1.8,,,,,,,platforms,,,,0,.NET,,,"{{BinaryReader}} does not reset {{_frame.Schema}} and {{_frame.SchemaMap}}. This can cause bugs with certain object nesting layouts. 

Make sure to write a test that reproduces this issue first.",,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2703,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 25 17:39:10 UTC 2017,,,,,,,,,,"0|i3972f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jan/17 17:39;ptupitsyn;Fixed in master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Please add explicity recomendation to check ""ignite-rest-http"" is present in ""libs"" folder",IGNITE-4610,13037552,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,kuaw26,pkonstantinov,pkonstantinov,25/Jan/17 03:14,03/Feb/17 04:46,14/Jul/23 06:20,03/Feb/17 04:46,1.8,,,,,1.9,,,,,,0,,,,Currently it is not clear what I need to check in case when I got error about executing REST command.,,anovikov,pkonstantinov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 03 04:45:33 UTC 2017,,,,,,,,,,"0|i395un:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Jan/17 04:46;anovikov;Changed message in dialog.;;;","03/Feb/17 04:45;pkonstantinov;Tested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: Binary enums are handled incorrectly,IGNITE-4592,13037073,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,23/Jan/17 15:48,24/Jan/17 12:00,14/Jul/23 06:20,24/Jan/17 12:00,1.8,,,,,2.0,,platforms,,,,0,.NET,,,"* BinaryEnum is represented as {{int typeId}} + {{int value}}
* BinaryEnumArray is represented as {{int typeId}} + {{int[] value}}

In most cases we handle this incorrectly, using only {{int value}}:
* {{BinaryObjectBuilder.WriteAsPredefined}} 
* {{BinarySystemHandlers.*EnumArray}}
etc

Add tests thich verify that .NET binary enum handling is consistent with Java.",,githubbot,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2703,,,,,,,,,,,,,,,,,,,,,,IGNITE-1956,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Jan 24 12:00:05 UTC 2017,,,,,,,,,,"0|i392wf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 15:58;ptupitsyn;We should probably write all enums as enums, even unregistered.;;;","24/Jan/17 10:04;ptupitsyn;Let's fix this in 2.0 to avoid breaking existing behavior in 1.9;;;","24/Jan/17 11:03;githubbot;GitHub user ptupitsyn opened a pull request:

    https://github.com/apache/ignite/pull/1456

    IGNITE-4592 .NET: Fix binary enum serialization

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ptupitsyn/ignite ignite-4592

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1456.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1456
    
----
commit 454d6e24d1155252a1e7c91e984d62ab14a25206
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-23T15:59:14Z

    IGNITE-4592 .NET: Binary enums are handled incorrectly

commit b278307d01ab7502e343db6f51378669f4f63a4e
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T10:10:32Z

    Merge branch 'ignite-2.0' into ignite-4592

commit cfe1ed7054754e561179150055e1259627648434
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T10:17:44Z

    Fix enum writing

commit 917e0c24a96ff06cc554a93b56954ca15ac1154f
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T10:40:26Z

    Tests fixed

commit 019f2f58bf881b84a82a4f896ec501bcf20311a0
Author: Pavel Tupitsyn <ptupitsyn@apache.org>
Date:   2017-01-24T11:01:47Z

    Add more tests

----
;;;","24/Jan/17 11:59;ptupitsyn;Fixed in ignite-2.0;;;","24/Jan/17 12:00;githubbot;Github user ptupitsyn closed the pull request at:

    https://github.com/apache/ignite/pull/1456
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
File interop_target.h is missing from source-release,IGNITE-4591,13037055,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,ustas,isapego,isapego,23/Jan/17 14:17,09/Oct/17 12:11,14/Jul/23 06:20,19/Sep/17 09:15,1.7,,,,,1.9,,,,,,0,cpp,,,"File {{modules\platforms\cpp\core\include\ignite\impl\interop\interop_target.h}} missing from source releases of versions 1.7.0 and 1.8.0. It is present, however, in repository and binary releases.",,isapego,skozlov,ustas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Tue Sep 19 09:15:19 UTC 2017,,,,,,,,,,"0|i392sf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 14:18;skozlov;i'll take a look on this;;;","19/Sep/17 09:15;ustas;Re-tested on ignite-2.2. Fix confirmed;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lock/unlock operations are hanging when topology changed,IGNITE-4590,13037034,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,sboikov,ntikhonov,ntikhonov,23/Jan/17 13:05,08/Feb/17 08:09,14/Jul/23 06:20,08/Feb/17 08:09,1.8,,,,,1.9,,cache,,,,0,,,,Lock/unlock operations are hanging when topology changed. See attached test.,,ntikhonov,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Jan/17 13:06;ntikhonov;4590-test.patch;https://issues.apache.org/jira/secure/attachment/12848900/4590-test.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Feb 06 11:29:38 UTC 2017,,,,,,,,,,"0|i392nr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Jan/17 18:52;ntikhonov;Seems that got bottom for this issue. This case happening when enabled late affinity assignment. After node join lock request processed on ""old"" primary node but transaction hopes to find {{GridCacheMvccCandidate}} how local owner.;;;","30/Jan/17 09:16;ntikhonov;TC passed;;;","06/Feb/17 11:29;sboikov;Reviewed, looks good.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discontinue and remove CacheAtomicWriteOrderMode.CLOCK mode,IGNITE-4587,13036679,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dreamx,dmagda,dmagda,20/Jan/17 20:20,01/Aug/19 22:01,14/Jul/23 06:20,14/Apr/17 16:16,,,,,,2.0,,cache,,,,1,,,,"{{CacheAtomicWriteOrderMode.CLOCK}} proved to be harmful in production due to timing issues.

It makes sense to remove it completely in 2.0 release. Migration guide has be updated:
https://cwiki.apache.org/confluence/display/IGNITE/Apache+Ignite+2.0+Migration+Guide",,agura,dmagda,dreamx,githubbot,ptupitsyn,,,,,,,,"dspavlov commented on issue #1521: IGNITE-4587: Discontinue and remove CacheAtomicWriteOrderMode.CLOCK mode
URL: https://github.com/apache/ignite/pull/1521#issuecomment-517474027
 
 
   The ticket is resolved. Closing PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600","dspavlov commented on pull request #1521: IGNITE-4587: Discontinue and remove CacheAtomicWriteOrderMode.CLOCK mode
URL: https://github.com/apache/ignite/pull/1521
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 22:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,IGNITE-4547,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 17 13:51:11 UTC 2017,,,,,,,,,,"0|i390gv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/17 12:22;dreamx;[~dmagda], how to deal with the tests where it is verified to work with {{CacheAtomicWriteOrderMode.CLOCK}} (i.e. {{GridCacheInterceptorLocalAtomicSelfTest}}, {{GridCacheAtomicOffHeapMultiNodeFullApiSelfTest}} and other), they want to remove?;;;","11/Feb/17 00:25;dmagda;[~dreamx], I would change the write mode from {{CLOCK}} to {{PRIMARY}} for the tests like that.;;;","13/Feb/17 10:06;githubbot;GitHub user dream-x opened a pull request:

    https://github.com/apache/ignite/pull/1521

    IGNITE-4587: Discontinue and remove CacheAtomicWriteOrderMode.CLOCK mode

    [Jira ticket](https://issues.apache.org/jira/browse/IGNITE-4587). 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/dream-x/ignite ignite-4587

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1521.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1521
    
----
commit f0dcbbdecd10ee9afee3cb0c5a96bb1540d0c06a
Author: Max Kozlov <dreamx.max@gmail.com>
Date:   2017-02-13T09:20:51Z

    Delete CLOCK mode in CacheAtomicWriteOrderMode.

commit a37ff76168613007d3ca09c06688bc6456e4c330
Author: Max Kozlov <dreamx.max@gmail.com>
Date:   2017-02-13T09:27:28Z

    Delete use CLOCK for ignite-core.

commit 25d4ea5003773b739baba2c2d5c3e7be2194ba7a
Author: Max Kozlov <dreamx.max@gmail.com>
Date:   2017-02-13T09:43:59Z

    Fix tests CLOCK change to PRIMARY and delete same test.

----
;;;","23/Feb/17 16:55;agura;Hi, [~dreamx]

I've reviewed your pull request. First of all, please merge the latest changes from master branch. 

See my comments bellow:

# {{CacheAtomicWriteOrderMode}} enum contains now only one value {{PRIMARY}}. Given the fact that this enum makes sense only for atomic cache I would prefer to remove this enum. But better way is to discuss this on dev list. If there are no any objectives then we can just remove this enum and all methods' parameters of this type.
# {{GridDhtAtomicCache}} class {{isFastMap}} method always returns {{false}} now. So this method is also candidate for removal. 
# {{GridNearAtomicSingleUpdateFuture}} class {{mapSingleUpdate}} method. Parameter {{updVer}} is always {{null}} now. Please remove this parameter. Also please make sure that this parameter make sense for requests that will be created in this method. It seems that {{GridNearAtomicSingleUpdateFuture.updVer}} doesn't make sense also.
# {{GridNearAtomicUpdateFuture}} class. The same issue as for previous item but for {{mapSingleUpdate}} and {{mapUpdate}} methods and {{updVer}} parameter.;;;","27/Feb/17 13:28;dreamx;Hi, [~agura]
Merge the latest change from master branch.
1. Create discuss on dev list.
2. Remove.
3. Remove parameter.
4. Also remove parameter.;;;","10/Mar/17 15:22;agura;[~dreamx], did you run tests on TC? 

Also I see the following classes in {{org.apache.ignite.internal.processors.clock}} package:

- {{GridClockDeltaSnapshot}}
- {{GridClockDeltaSnapshotMessage}}
- {{GridClockDeltaVersion}}
- {{GridClockMessage}}
- {{GridClockServer}}
- {{GridClockSource}}
- {{GridJvmClockSource}}

I believe all this classes can be removed.;;;","12/Mar/17 19:18;dreamx;[~agura] yes, http://ci.ignite.apache.org/project.html?projectId=IgniteTests&branch_IgniteTests=pull/1521/head
Ok, I removed everything.;;;","13/Mar/17 17:37;agura;[~dreamx],

I've review your changes. See my comments below. Please, fix.

# Class {{GridCacheAtomicFullApiSelfTest}}: method {{cacheConfiguration()}} can be removed because it just returns result of base class method.
# Class {{GridCacheAtomicMultiNodeP2PDisabledFullApiSelfTest}}: method {{cacheConfiguration()}} can be removed because it just returns result of base class method.
# Class {{GridCacheReplicatedAtomicMultiNodeFullApiSelfTest}}: method {{cacheConfiguration()}} can be removed because it just returns result of base class method.
# Class {{GridCacheAtomicMessageCountSelfTest}}: methods {{testPartitionedPrimary()}} and {{testClientPrimary()}} should be renamed to {{testPartitioned()}} and {{testClient()}} respectively.
# Class {{GridCacheAtomicNearCacheSelfTest}}: method {{startGridsLocal()}} confuses. Why {{Local}}? May be {{doStartGrids}} or something like.
# Class {{GridCacheAtomicVersionComparator}}: {{ignoreTime}} parameter at {{compare}} method is unused and should be removed.
# Class {{GridCacheInterceptorAbstractSelfTest}}: unused import and methods.
# Class {{GridCacheMapEntry}}, method {{innerUpdate}}, lines 2172 and 2228: {{ignireTime}} variable is always {{true}}. Need remove usage.
# Class {{GridCacheMultithreadedFailoverAbstractTest}}, method {{configuration()}}, line 221: Nested if could be combined with embraced.
# Class {{GridCacheUtils}}: unused imports.
# Class {{GridCacheUtils}}: Bug. Please fix array size and offsets in {{versionToBytes()}} and {{readVersion()}} methods.
# Class {{IgniteUtils}}: Bug. Please fix offsets in {{writeVersion()}} and {{readVersion()}} methods.
# Class {{GridCacheVersion}}: Bug. Integers will be overflowed in {{asGridUuid()}} method. Please replace by {{new UUID(topVer, nodeOrderDrId)}}.
# Class {{GridCacheVersion}}: method {{fieldsCount()}} returns incorrect result. Use {{MessageCodeGenerator}} in order to generate correct code.
# Class {{GridCacheVersionEx}}: incorrect implementations of {{fieldsCount()}}, {{writeTo()}} and {{readFrom()}} methods. Use {{MessageCodeGenerator}} in order to generate correct code.
# Class {{GridCommonAbstractTest}}: unused imports.
# Class {{GridCommonAbstractTest}}: method {{atomicClockModeDelay()}} should be removed.
# Class {{GridDhtAtomicCache}}: I'm not sure about it. It seems that methos {{isFastMap()}} should not be removed. Could you please ask about it on dev list. Check also {{fastMap}} flag in {{GridNearAtomicUpdateFuture}} class.
# Class {{GridDhtAtomicCache}}: Redundant {{catch}} blocks in {{lockEntriesMethod()}}, lines 2899 and 2914.
# Class {{GridNearAtomicSingleUpdateFuture}}: Method {{mapSingleUpdate()}} creates different requests (like {{GridNearAtomicSingleUpdateInvokeRequest}}). For all this requests all instantiations have {{updateVer == null}}. Need to remove this prameter. The same for {{GridNearAtomicUpdateFuture}} class {{mapUpdate()}} and {{mapSingleUpdate()}} methods.
# Class {{IgniteBenchmarkArguments}}: Comand line arguments {{""-wom"", ""--writeOrderMode""}} were removed. Please, check that there are not this arguments usges in {{modules/yardstick}}.
# Class {{IgniteCacheExpiryPolicyAbstractTest}}: methods {{nearReaderUpdate()}} and {{nearPutAll()}}. It seems that all {{U.sleep()}} calls are redundant now.
# Class {{IgniteCachePutRetryAbstractSelfTest}}: unused import.
# Class {{IgniteConfiguration}}: fields {{clockSyncSamples}} and {{clockSyncFreq}}, corresponding methods and constants {{DFLT_CLOCK_SYNC_SAMPLES}} and {{DFLT_CLOCK_SYNC_FREQUENCY}} should be removed.

Also I see a lot of removed tests. I need additional time for analyzing it. Thanks!;;;","16/Mar/17 13:54;dreamx;1-24: I've done everything.
18. ask on dev list
21. I checked again.
22. I not found U.sleep() calls.

Waiting for your response in the tests. :)
;;;","16/Mar/17 13:59;agura;Maksim, I'll answer later. What about other issues?;;;","16/Mar/17 14:01;dreamx;[~agura] All is done.;;;","21/Mar/17 19:48;agura;[~dreamx] Looks good for me. I've merged it with master and ran tests. If tests will ok I'll merge your changes.;;;","22/Mar/17 12:56;agura;[~dreamx], thank you very much for your contribution. But performance tests showed performance drop for some configuration, so {{CLOCK}} mode is still preferable for some cases.

It's possible that your PR will be useful in the future when workaround without performance penalty will be found.

Thanks a lot again :);;;","22/Mar/17 13:17;dreamx;[~agura] Are these your internal tests? 
Can you find out more in which cases is it {{CLOCK}} mode more preferable?;;;","23/Mar/17 17:42;agura;[~dreamx] You can find performance tests in {{ignite-yardstick}} module. 

{{CLOCK}} mode behaves better in case of multiple clients perform operations like {{putAll}}.;;;","23/Mar/17 20:34;dmagda;Guys, in any case, after we see benchmarking results for 1.9 and 2.0 (both in PRIMARY synchronization mode) then the final decision will be done. If 2.0 outperforms 1.9 in PRIMARY synchronization mode then there is no sense to preserve harmful CLOCK mode. Even more, we might need to remove {{CacheWriteSynchMode}} from the public API at all, since there is no need to have it for a single parameter.

;;;","24/Mar/17 08:03;dreamx;[~agura] Thanks for the explanation, on the weekend I'll learn {{ignite-yardstick}} module.
[~dmagda] ok :);;;","30/Mar/17 04:44;dmagda;[~dreamx], [~agura],

Looking at the benchmarking results produced by one of my colleagues I didn't spot any performance degradation between 1.9 and 2.0 for PRIMARY write order mode. So, we accept this contribution and wipe out {{CLOCK}} mode.

Even more, can we remove {{CacheAtomicWriteOrderMode}} enum from the public API at all? I see no reason why we should preserve for a single option available - {{PRIMARY}}. Asked the same in the related discussion on the dev list.;;;","30/Mar/17 12:05;agura;Good news! I'll run tests once again and then merge changes into master.;;;","14/Apr/17 16:16;agura;[~dreamx],

thanks a lot for contribution. Changes are merged into master branch.;;;","14/Apr/17 17:04;ptupitsyn;.NET build fixed in master.;;;","17/Apr/17 12:35;githubbot;GitHub user glukos opened a pull request:

    https://github.com/apache/ignite/pull/1808

    IGNITE-4587: Found bug - CacheVersionIO is changed, but size isn't

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite IGNITE-4587-version-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1808.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1808
    
----
commit 3590a6796dc440d49223b8c94e9bac53e4d51e6c
Author: Ivan Rakov <ivan.glukos@gmail.com>
Date:   2017-04-17T12:34:14Z

    IGNITE-4587: Found bug - CacheVersionIO is changed, but size isn't

----
;;;","17/Apr/17 13:51;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1808
;;;",,,,,,,,,,,,,,,,,,,
.NET: ICache.LoadCache fails on non-primitive arguments,IGNITE-4563,13036140,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,ptupitsyn,ptupitsyn,19/Jan/17 09:07,20/Jan/17 09:57,14/Jul/23 06:20,20/Jan/17 09:57,1.5.0.final,1.6,1.7,1.8,,1.9,,platforms,,,,0,.NET,,,{{ICache.LoadCache}} arguments are unnecessarily deserialized on Java side (see {{readObjectArray}} call in {{PlatformCache.loadCache0}}). So any arguments that are not primitives or primitive collections cause an exception.,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 20 09:57:07 UTC 2017,,,,,,,,,,"0|i38x4v:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jan/17 09:57;ptupitsyn;Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong method is called on rebalancing.,IGNITE-4557,13035859,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,,ascherbakov,ascherbakov,18/Jan/17 13:09,01/Feb/17 14:29,14/Jul/23 06:20,01/Feb/17 14:29,1.6,,,,,1.9,,cache,,,,0,,,,"During rebalancing the following code might be called from {{GridDhtPartitionDemander:695}}:

{noformat}
for (Integer miss : supply.missed()) {
      if (cctx.affinity().localNode(miss, topVer))
            fut.partitionMissed(id, miss);
}
{noformat}

The problem is in wrong polymorphic call to

{noformat}
public boolean localNode(Object key, AffinityTopologyVersion topVer)
{noformat}

Instead the following must be called:

{noformat}
public boolean localNode(int part, AffinityTopologyVersion topVer)
{noformat}

Also a codebase must be verified for existing similar problems and its better to rename both methods to keyLocalNode and partitionLocalNode to avoid confusion.


",,ascherbakov,sboikov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Feb 01 09:01:11 UTC 2017,,,,,,,,,,"0|i38vef:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/17 14:50;zstan;https://github.com/apache/ignite/pull/1438;;;","19/Jan/17 08:49;sboikov;Evgeny, changes look good, but I think we also need do renames 'key' vs 'partition' for others methods of GridCacheAffinityManager: primary, backup, belongs.

Thanks!;;;","20/Jan/17 12:38;zstan;https://github.com/apache/ignite/pull/1445
done.;;;","30/Jan/17 11:49;sboikov;Evgeny,

I started review and immediately found places where primaryByKey is erroneously called instead of primaryByPartition: GridCacheEvictionManager:778 and GridCacheEvictionManager:1452. 

Please carefully review your changes, fix found issues and re-submit for review.

Thanks!;;;","31/Jan/17 11:09;zstan;miss it :( all done. 

Thanks !;;;","01/Feb/17 08:24;sboikov;Evgeny,

The same error again CacheContinuousQueryManager:371, I'm not going to fix all your errors. Please really do what I was asking for: review yourself your changes before submitting for review.

Thanks;;;","01/Feb/17 09:01;zstan;Semen, 

sorry not exactly read your comment, thus no further checks were made ... 
hope it`s ok now.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Optimize GridDhtLocalPartition.rmvQueue,IGNITE-4552,13035419,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ascherbakov,ascherbakov,17/Jan/17 07:57,10/Dec/18 16:19,14/Jul/23 06:20,07/Feb/17 11:23,1.6,,,,,2.0,,cache,,,,0,,,,"Current implementation stores deferred entry removals in rmvQueue for consistency guaranties.

This can lead to significant heap over-usage(I observed several Gbs) in case of many caches with removals, because currently queue is cleared lazily after reaching max capacity(200_000 by default).

This can be mitigated by using lower IGNITE_ATOMIC_CACHE_DELETE_HISTORY_SIZE, but can lead to consistency issues in case of frequent cache updates.

Possible optimizations:

* Use single fixed size queue per all caches to overcome limitations of IGNITE_ATOMIC_CACHE_DELETE_HISTORY_SIZE workaround.

* Do queue cleaning in background

* Move queue to an off-heap.



",,ascherbakov,githubbot,sboikov,zstan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Feb/17 08:10;estanilovsky;Plot_ThroughputLatencyProbe_01_20170203_1.png;https://issues.apache.org/jira/secure/attachment/12850789/Plot_ThroughputLatencyProbe_01_20170203_1.png","31/Jan/17 14:06;zstan;Plot_ThroughputLatencyProbe_01_31_origin.png;https://issues.apache.org/jira/secure/attachment/12850201/Plot_ThroughputLatencyProbe_01_31_origin.png","31/Jan/17 14:06;zstan;Plot_ThroughputLatencyProbe_01_4552_mine.png;https://issues.apache.org/jira/secure/attachment/12850200/Plot_ThroughputLatencyProbe_01_4552_mine.png","30/Jan/17 09:52;zstan;Plot_ThroughputLatencyProbe_01_mine.png;https://issues.apache.org/jira/secure/attachment/12849932/Plot_ThroughputLatencyProbe_01_mine.png","27/Jan/17 13:56;zstan;Plot_ThroughputLatencyProbe_01_mine_3node.png;https://issues.apache.org/jira/secure/attachment/12849692/Plot_ThroughputLatencyProbe_01_mine_3node.png","30/Jan/17 09:52;zstan;Plot_ThroughputLatencyProbe_01_origin.png;https://issues.apache.org/jira/secure/attachment/12849931/Plot_ThroughputLatencyProbe_01_origin.png","27/Jan/17 13:56;zstan;Plot_ThroughputLatencyProbe_01_origin_3node.png;https://issues.apache.org/jira/secure/attachment/12849693/Plot_ThroughputLatencyProbe_01_origin_3node.png","24/Jan/17 13:02;zstan;Screenshot_20170124_155355.png;https://issues.apache.org/jira/secure/attachment/12849105/Screenshot_20170124_155355.png","27/Jan/17 13:56;zstan;benchmark-put-remove-simultaneously.properties;https://issues.apache.org/jira/secure/attachment/12849694/benchmark-put-remove-simultaneously.properties",,9.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Dec 10 16:19:39 UTC 2018,,,,,,,,,,"0|i38sov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jan/17 08:06;ascherbakov;When thread per partition model will be implemented this ticket'll became obsolete. But this is rather large refactoring, so it may be worth to fix this meanwhile.;;;","23/Jan/17 12:08;zstan;i fount that in my local installation there are 3 system caches :
ignite-sys-cache, U.ceilPow2(delQueueSize) = 100, size of partition = 128
ignite-atomics-sys-cache, U.ceilPow2(delQueueSize) = 1024, size of partition = 128
ignite-marshaller-sys-cache, U.ceilPow2(delQueueSize) = 20, size of partition = 128
and my test cache:
organization, U.ceilPow2(delQueueSize) = 64, size of partition = 4096

thus it would be over  400k tuple objects : <KeyCacheObject, GridCacheVersion>  only in my local config.

;;;","24/Jan/17 13:03;zstan;success in reproduce this case, create 100 caches, put and simultaneously remove 10000 items, heap dump, look snapshot attached.
!Screenshot_20170124_155355.png!;;;","26/Jan/17 09:55;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/1465

    IGNITE-4552 support eviction for dhtLocalPartition remove queue

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4552

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1465.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1465
    
----
commit be22a73c3b47ed898c1dc8c3957d672bf8f02ae6
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-01-25T15:15:50Z

    IGNITE-4552 support eviction for dhtLocalPartition remove queue

----
;;;","26/Jan/17 09:55;zstan;all done, take a look into PR plz.

https://github.com/apache/ignite/pull/1465

i understand that use tuples instead of wrappers is bad style for java, if it so i`m ready for refactoring.
i write my own simple tests for this case, did i need to add it, there are very simple code that creates 10 caches and sequentially add and remove item in the loop?
tests generate more items than removed queue is configured for, thus i tests not only timeout eviction, but queue remainingCapacity overhead too.

my local results are :
original code:                            common working time: 143580 (ms), heap size after: 407Mb
refactoring linkeq queue code: common working time: 143822 (ms), heap size after: 74Mb (like on grid startup moment).

wait for criticism.
;;;","27/Jan/17 14:04;zstan;found some degradation here, is it big harm for us?

origin_1node
!Plot_ThroughputLatencyProbe_01_origin.png|origin_1node!

ignite-4552_1node
!Plot_ThroughputLatencyProbe_01_mine.png|mine_1node!

origin_3node
!Plot_ThroughputLatencyProbe_01_origin_3node.png|origin_3node!

ignite-4552_3node
!Plot_ThroughputLatencyProbe_01_mine_3node.png|mine_3node!;;;","30/Jan/17 09:58;sboikov;Hi Evgeny,

Do I understand correctly that pictures you attached show that with single node new version is slower? We can not afford this. Also please provide more details about benchmark (type of cache, number of threads, etc), average value also will help to interpret results. Also I do not see your benchmark in ignite-4552, please commit it as well.

Comments regarding changes: you introduced 'sycnronized' method GridDhtLocalPartition.putIfRemain, thus we have huge point of contention on remove operation. Let's change it this way:
- replace LinkedBlockingQueue with ConcurrentLinkedDeque8
- do not use T3<KeyCacheObject, GridCacheVersion, Long>, add special class to avoid unnecessary boxing for Long
- in onDeferredDelete: 
1. put new item in queue, 
2. while queue.peekFirst.expireTime > 'current time' remove it from queue
3. if queue.sizex > LIMIT remove items from queue
- let's get rid of new cleanup thread, instead schedule periodic task using GridTimeoutProcessor. This task should submit another cleanup runnable is system pool: cctx.closures().runLocalSafe(c, true) (GridTimeoutProcessor's task itself should not execute long operations since all tasks in GridTimeoutProcessor are processed by single thread)
- we need disable 'clear rmv queue by time' if data center replication is enabled (GridCacheDrManager.enabled()), in this case only 'clear by max queue size' should work

Thanks!;;;","31/Jan/17 13:12;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/1465
;;;","31/Jan/17 13:18;githubbot;GitHub user zstan opened a pull request:

    https://github.com/apache/ignite/pull/1481

    IGNITE-4552 support eviction for dhtLocalPartition remove queue

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4552

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1481.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1481
    
----
commit 2f22d78aa0e2ccf1f5d803d79884c1937d3fe3c8
Author: Evgeny Stanilovskiy <estanilovskiy@gridgain.com>
Date:   2017-01-31T12:23:54Z

    IGNITE-4552 support eviction for dhtLocalPartition remove queue

----
;;;","31/Jan/17 14:12;zstan;ok i realize all instead of ??2. while queue.peekFirst.expireTime > 'current time' , i hope it unnecessary here ... 
yardstick, running on my local machine shows throughput performance increase of: 2%
origin_1node
!Plot_ThroughputLatencyProbe_01_31_origin.png|origin_1node!

issue_4552_1node
!Plot_ThroughputLatencyProbe_01_4552_mine.png|origin_1node!

Thanks !;;;","01/Feb/17 08:59;sboikov;Reviewed changes, my comments:
- it does not compile with jdk7, please switch to jdk7
- 'while (rmvQueue.peekFirst().expireTime() < U.currentTimeMillis())' - you need check result of 'peekFirst()' for null
- do not schedule cleanup task per-partition, it should be single task per node
- error in 'onDeferredDelete', now if size > limit you remove all itmes from queue, actually you need pollFirst while size > limit
- queue.peekFirst.expireTime > 'current time' is necessary in 'onDeferredDelete' since there can be too many expired entries and cleanup task will not be able to do cleanup fast enough
- please follow coding conventions (remove unused imports, add javadoc for all methods, fields, 'Override' must be on the same line with method)

Thnaks;;;","03/Feb/17 08:17;zstan;!Plot_ThroughputLatencyProbe_01_20170203_1.png!

some throughput gaps in new graphics (make 2 times, all graphs have gaps) but average and median numbers are still better than original master branch.
i can investigate nature of this gaps if it necessary.
complete all suggests, plz review.;;;","07/Feb/17 11:23;sboikov;Reviewed, fixed some found issues, added sanity test for queue cleanup on timeout, merged into master.;;;","10/Dec/18 16:19;githubbot;Github user zstan closed the pull request at:

    https://github.com/apache/ignite/pull/1481
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid mapping of enum to varchar on load/store operation.,IGNITE-4548,13035104,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,vsisko,vsisko,16/Jan/17 05:40,05/Jul/19 14:13,14/Jul/23 06:20,20/Jan/17 09:26,1.9,,,,,1.9,,cache,,,,0,,,,"http://stackoverflow.com/questions/41609207/ignite-cachejdbcpojostorefactory-using-enum-fields

On load of data when type contain enum field that mapped in varchar in database sometimes kind of type is incorrectly detected as binary. 
Pojo contain string transformer methods.
{code}
private OrderSide side; // OrderSide is an enum
public String getSideAsString() {
    return this.side.name();
}
public void setSideAsString(String s) {
    this.side = OrderSide.valueOf(s);
}
{code}
and enum column described as:
{code}
new JdbcTypeField(Types.VARCHAR, ""side"", String.class, ""sideAsString"")
{code}",,anovikov,githubbot,kuaw26,vkulichenko,vsisko,,,,,,,,"dspavlov commented on pull request #1433: IGNITE-4548 Implemented mapping of enum fields for POJO STORE
URL: https://github.com/apache/ignite/pull/1433
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/19 14:13;githubbot;600","dspavlov commented on issue #1433: IGNITE-4548 Implemented mapping of enum fields for POJO STORE
URL: https://github.com/apache/ignite/pull/1433#issuecomment-508772216
 
 
   Closing PR:
   IGNITE-4548 | Closed 
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/19 14:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,IGNITE-4561,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 20 09:26:12 UTC 2017,,,,,,,,,,"0|i38qrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Jan/17 05:43;vsisko;Investigated loading of cache for type with enum columns.;;;","16/Jan/17 08:09;anovikov;By design BinaryMarshaller not deserialize field ""side"" when you query ""sideAsString"".  

As temporary workaround OptimizedMarshaller can be used:
{code}
IgniteConfiguration cfg = new IgniteConfiguration();

cfg.setMarshaller(new OptimizedMarshaller());
{code}

[~vsisko] Need support enum mapping in CacheJdbcPojoStore using type in database. (org.apache.ignite.cache.store.jdbc.JdbcTypesDefaultTransformer and org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore#fillParameter);;;","16/Jan/17 15:38;githubbot;GitHub user vsisko opened a pull request:

    https://github.com/apache/ignite/pull/1433

    IGNITE-4548 Implemented mapping of enum fields for POJO STORE

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4548-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1433.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1433
    
----
commit ab956f2d970507d8c7fe414c10ceda061bf99ba8
Author: vsisko <vsisko@gridgain.com>
Date:   2017-01-16T11:11:30Z

    IGNITE-4548 Mapping of enum types.

commit e4e3ce4c388abaf9595964a33544fc255347abb1
Author: vsisko <vsisko@gridgain.com>
Date:   2017-01-16T12:10:22Z

    IGNITE-4548 Mapping of enum types test.

----
;;;","17/Jan/17 04:06;vsisko;Implemented mapping of fields with Enum types.;;;","17/Jan/17 11:04;anovikov;Reviewed. Fixed tests. Clean-up code.
[~kuaw26], please do final review.;;;","17/Jan/17 12:10;kuaw26;Looks good for me. [~vkulichenko] could you also take a look?;;;","19/Jan/17 01:25;vkulichenko;[~kuaw26]

Changes are OK, but {{JdbcTypesTransformer}} API became even more confusing then before. In particular, why the new name is called {{getParameterValue}}? It actually converts Java field value to DB field value, right?

Do we need this API change in the first place? I believe it's better to just fix the bug first and then propose API change in a separate ticket and properly design it.

Bottom line - I don't like the public API change, but I don't want to block the bug fix because of that. Is it possible to separate these changes?;;;","19/Jan/17 04:43;vsisko;Tested postgres and oracle.;;;","19/Jan/17 10:58;anovikov;Revert public API changes in JdbcTypesTransformer, create separated ticket: IGNITE-4561;;;","20/Jan/17 09:26;anovikov;Merge to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
.NET: BinaryConfiguration handles nested type names incorrectly,IGNITE-4546,13034663,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,ptupitsyn,ptupitsyn,13/Jan/17 14:18,18/Apr/17 10:09,14/Jul/23 06:20,18/Apr/17 10:09,1.8,,,,,2.0,,platforms,,,,0,.NET,,,Type name is resolved incorrectly for nested types (class in class).,,ptupitsyn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-2492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Apr 17 08:46:02 UTC 2017,,,,,,,,,,"0|i38o1j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Apr/17 08:46;ptupitsyn;Fixed as part of IGNITE-2398;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve router node detection for external client,IGNITE-4545,13034595,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,anovikov,anovikov,13/Jan/17 10:57,16/Jan/17 04:33,14/Jul/23 06:20,16/Jan/17 04:25,1.8,,,,,1.9,,clients,,,,0,,,,"GridClientTopology.java:386 On each topology refresh will try to resolve hostname for all nodes. I think will be better to resolve router hostname and cache it.
GridClientConnectionManagerAdapter.java:318 Before establishing connection to node all macs collected without cache.",,anovikov,githubbot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 16 04:33:53 UTC 2017,,,,,,,,,,"0|i38nmf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 11:13;githubbot;GitHub user nva opened a pull request:

    https://github.com/apache/ignite/pull/1428

    IGNITE-4545 Added cache for router hostnames.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4545

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1428.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1428
    
----

----
;;;","16/Jan/17 04:32;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1428
;;;","16/Jan/17 04:33;anovikov;Checked TC. Merged to master;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ability to disable default H2 Indexing.,IGNITE-4540,13033669,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Minor,Fixed,amashenkov,amashenkov,amashenkov,11/Jan/17 10:18,17/Jan/17 12:32,14/Jul/23 06:20,17/Jan/17 12:32,1.8,,,,,1.9,,sql,,,,0,,,,"It is impossible for now to use IndexingSPI without H2Indexing due to next reasons:
- H2Indexing always starts if IgniteH2Indexing class found in classpath.
- if IndexingTypes are set and IndexingSPI is configured, then both IndexingSPI and H2Indexing is used. If IndexingTypes is not set, then both indexers are disabled.

We need to add an option that force disabling H2IndexingSpi. 
It look like the only workaround for now is remove ignite-indexing jar from classpath.",,amashenkov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 16 14:32:42 UTC 2017,,,,,,,,,,"0|i38jov:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jan/17 22:40;vkulichenko;[~amashenkov], I don't think we need to add any new options for this. Current problem is that we go though two different checks before calling {{IndexingSpi.store(..)}}: {{GridCacheQueryManager.enabled()}} and then {{GridIndexingManager.enabled()}}. When custom {{IndexingSpi}} is used, the second one is true, but the first one is false. We need to fix the logic and make sure everything is working properly in this case.;;;","13/Jan/17 10:44;amashenkov;GridCacheQueryManager.enabled() is false if there is no IndexedTypes\QueryEntities set in configuration. 
Just setting it to true (when IndexingSPI is configured) would turn on indexing for system caches. 

We need an ability to turn IndexingSPI for certain caches in CacheConfiguration. However, IndexingSPI is IgniteConfiguration property and can be configured on per node base, not per cache.

It looks like, we need to add either option to disable default indexing or option to force enabling IndexingSPI for certain cache.;;;","13/Jan/17 12:58;amashenkov;I've decouple GridQueryProcessor and GridIndexingManager. So, they can be configured independently.
Entry events for all caches (except system caches) pass to IndexingSPI if IndexingSpi is configured. Before this fix, IndexingSPI can process events for only caches which has IndexingTypes\QueryEntities  configured, e.i. entries that allowed to be indexed by default H2Indexing. ;;;","16/Jan/17 14:32;amashenkov;Tc tests look fine.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Notifier must not transfer system properties,IGNITE-4537,13033576,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Critical,Fixed,dkarachentsev,dmagda,dmagda,11/Jan/17 02:16,03/Feb/17 09:23,14/Jul/23 06:20,03/Feb/17 09:23,,,,,,1.9,,,,,,0,,,,"Apache Ignite Update Notifier that is used for sending updates about new Apache Ignite versions gathers and transfers all system properties.

The script must not do this. Instead, it has to get only those system properties like Java version, OS versions that are needed. Otherwise, the script might send sensitive information like passwords stored in the system properties.

",,dkarachentsev,dmagda,sboikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Feb 03 09:19:45 UTC 2017,,,,,,,,,,"0|i38j47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/17 12:23;dkarachentsev;Denis,

I suppose to filter property keys with condition: 
{code}
key.startsWith(""IGNITE_"") || key.startsWith(""java."")
                || key.startsWith(""sun."") || key.startsWith(""os."")
                || key.startsWith(""file."") || key.startsWith(""user."")
                || ""path.separator"".equals(key)
{code}

Is it OK or we should make it more strict and hardcode some standard properties?;;;","18/Jan/17 21:12;dmagda;In general, OS and Java version should be enough. However, let me think over a bit.;;;","19/Jan/17 16:29;dmagda;Well, let's pass all the properties that start with ""java."", ""os."" and ""user."". The rest can be skipped.;;;","24/Jan/17 13:43;dkarachentsev;[PR#1459|https://github.com/apache/ignite/pull/1459];;;","03/Feb/17 09:19;sboikov;Looks good.

Thanks!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update DML operation not working for @QuerySqlField with name,IGNITE-4531,13033000,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,vozerov,Sawfish,Sawfish,09/Jan/17 08:33,26/Jul/19 10:54,14/Jul/23 06:20,12/Jan/17 07:50,1.8,,,,,1.9,,sql,,,,0,,,,"After putting a java class Operation with

{code}
    @QuerySqlField(name = ""operationNumber"", index = true)
    private String mOperationNumber;

    @QuerySqlField(index = true)
    private String mUuid;
{code}

in the cache. Via debug console I can see the following fields:

_val:

Operation [... ,mUuid=FF42930B6D3242B5A0B9D631E017027E, mOperationNumber = 0010, ...]

and a column named: OPERATIONNUMBER with value 0010.

The query
{code}
String updateQueryString = ""UPDATE Operation set operationNumber =  ? WHERE mUuid =  ?"";
SqlFieldsQuery updateQuery = new SqlFieldsQuery(updateQueryString ).setArgs(""SCHEDULED"",""FF42930B6D3242B5A0B9D631E017027E"");
cache.query(updateQuery);
{code}

results in:

Operation [... ,mUuid=FF42930B6D3242B5A0B9D631E017027E, mOperationNumber = 0010, operationNumber=SCHEDULED, ...]

and a column named: OPERATIONNUMBER with value 0010.

The column 'OPERATIONNUMBER' and the field 'mOperationNumber' is not updated!

",,al.psc,dmagda,githubbot,Sawfish,,,,,,,,,"dspavlov commented on issue #1419: IGNITE-4531 Use correct property name in BinaryProperty.
URL: https://github.com/apache/ignite/pull/1419#issuecomment-515408815
 
 
   
   IGNITE-4531 | Resolved
   -- | --
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 10:54;githubbot;600","dspavlov commented on pull request #1419: IGNITE-4531 Use correct property name in BinaryProperty.
URL: https://github.com/apache/ignite/pull/1419
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 10:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,IGNITE-4704,,,,,,,,,,,,,,,,,,,,,,,,,,"10/Jan/17 10:22;Sawfish;IgniteOperationCacheTest.java;https://issues.apache.org/jira/secure/attachment/12846552/IgniteOperationCacheTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Thu Jan 12 07:33:05 UTC 2017,,,,,,,,,,"0|i38fkf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jan/17 00:24;dmagda;[~al.psc], please take a look at this. In the meanwhile, David what do you use as a debug console? Do you have any ready to run test?;;;","10/Jan/17 09:31;Sawfish;Hi,

I am using -DIGNITE_H2_DEBUG_CONSOLE=true as debug console. ;;;","10/Jan/17 10:15;Sawfish;Attached a test  file to reproduce the behaviour;;;","10/Jan/17 20:18;githubbot;GitHub user alexpaschenko opened a pull request:

    https://github.com/apache/ignite/pull/1419

    IGNITE-4531 Use correct property name in BinaryProperty.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4531

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1419.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1419
    
----
commit e930dfa54112a5374ac4acd6c6ac88510fa9d3e9
Author: Alexander Paschenko <alexander.a.paschenko@gmail.com>
Date:   2017-01-10T20:12:58Z

    IGNITE-4531 Use correct property name in BinaryProperty.

----
;;;","10/Jan/17 20:19;al.psc;Fixed; patch: https://github.com/apache/ignite/pull/1419; TC tests are on the run.
This affected not just UPDATE, but actually all operations. Suggested fix should help with them all.;;;","11/Jan/17 19:58;al.psc;TC looks good; passed this to [~vozerov] to review.;;;","11/Jan/17 22:46;dmagda;Shouldn't the issue rather be reviewed by [~sergi.vladykin]?;;;","12/Jan/17 07:33;al.psc;The fix is effectively a one-liner, I believe Vlad will be able to handle this sooner.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Passing AWSCredentialsProvider to TcpDiscoveryS3IpFinder,IGNITE-4530,13032619,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,akazlou,dmagda,dmagda,06/Jan/17 18:12,17/May/19 14:37,14/Jul/23 06:20,18/Jan/17 19:50,1.8,,,,,1.9,2.0,,,,,0,,,,"{{TcpDiscoveryS3IpFinder}} accepts credentials in a form of {{AWSCredentials}} only. This might not be enough for all the cases. In a situation when the credentials get expired a special instance of {{AWSCredentialsProvider}} can renew them automatically.

However, the credentials will not be updated if {{StaticCredentialsProvider}} is used. This provider is created automatically if user provides raw {{AWSCredentials}}.

We need to add new method to {{TcpDiscoveryS3IpFinder}} that will accept {{AWSCredentialsProvider}}:

{code}
    public void setAwsCredentialsProvider(AWSCredentialsProvider provider) {
{code}

A new test has to be added to {{TcpDiscoveryS3IpFinderSelfTest}} as well.

For more details refer to a discussion on the user list:
http://apache-ignite-users.70518.x6.nabble.com/Old-AWS-SDK-version-why-td9824.html",,akazlou,dmagda,githubbot,,,,,,,,,,"dspavlov commented on pull request #1404: IGNITE-4530 Add support to provide AWSCredentialsProvider to TcpDisco…
URL: https://github.com/apache/ignite/pull/1404
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:37;githubbot;600","dspavlov commented on issue #1404: IGNITE-4530 Add support to provide AWSCredentialsProvider to TcpDisco…
URL: https://github.com/apache/ignite/pull/1404#issuecomment-493477302
 
 
   https://issues.apache.org/jira/browse/IGNITE-4530 is closed, closing the PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/May/19 14:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,IGNITE-5495,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Wed Jan 18 20:08:36 UTC 2017,,,,,,,,,,"0|i38d7r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jan/17 21:49;akazlou;According to IAM Best Practices, it is a recommended way to launch EC2 instances where application running there needs to talk to AWS services http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#use-roles-with-ec2.

And assuming that most of the people are following the best practices from the above, and Apache Ignite is running on those EC2 instances in the clustered mode using S3 as an IP finder source, then it is pretty common issue people will encounter.;;;","07/Jan/17 08:17;akazlou;[~dmagda] as discussed in the user list, could you, please, give the necessary permissions to my account, so I can start working on this issue.;;;","07/Jan/17 16:15;dmagda;[~akazlou], awesome! Granted you the permissions.

Just in case this is a piece of useful information you may not aware of.

Subscribe to both dev and user lists:
https://ignite.apache.org/community/resources.html#mail-lists

Get familiar with Ignite development process described here:
https://cwiki.apache.org/confluence/display/IGNITE/Development+Process

Instructions on how to contribute can be found here:
https://cwiki.apache.org/confluence/display/IGNITE/How+to+Contribute

Project Setup in Intellij IDEAL
https://cwiki.apache.org/confluence/display/IGNITE/Project+Setup

;;;","08/Jan/17 23:45;githubbot;GitHub user zshamrock opened a pull request:

    https://github.com/apache/ignite/pull/1404

    IGNITE-4530 Add support to provide AWSCredentialsProvider to TcpDisco…

    …veryS3IpFinder in addition to just AWSCredentials
    
    Addressing https://issues.apache.org/jira/browse/IGNITE-4530.
    
    Just to review by the maintainers whether it meets all the project criteria.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zshamrock/ignite ignite-4530

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1404.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1404
    
----
commit eec10ca32de8311c1d6eaea337cf5511b9bfc2d0
Author: Aliaksandr Kazlou <aliaksandr.kazlou@gmail.com>
Date:   2017-01-08T23:42:12Z

    IGNITE-4530 Add support to provide AWSCredentialsProvider to TcpDiscoveryS3IpFinder in addition to just AWSCredentials

----
;;;","10/Jan/17 00:21;dmagda;[~akazlou], thanks a lot. In general, everything looks good so far. I left a minor note in the pull request on GitHub. Please address it.

BTW, did you use your personal AWS account for the updated API testing?

Finally, please move the ticket into ""patch available"" state if it's truly ready for a review.
;;;","10/Jan/17 22:41;akazlou;Hi, [~dmagda] I will take a look and address them tomorrow. I also think have to put `testIpFinder` in every of the test class (I think the one from the abstract parent will not be picked, see below). Also I have not tested it yet, expected there to be some CI which will fail if there is an issue. Will then test it manually as well, and after will move into ""patch available"" state if everything works and comments addressed.;;;","13/Jan/17 23:40;akazlou;[~dmagda] Yes, right now I did testing with my personal credentials. I also made a few more changes (mostly code cleanup), just take a look at Github and approve if no more comments.

Also moved the ticket into Patch Available state.;;;","17/Jan/17 19:49;akazlou;[~dmagda] have you had a chance to look into the last changes? 

What are the next steps from my side, if any? Or you have just to accept and merge to master?

Thank you.;;;","17/Jan/17 21:27;dmagda;[~akazlou], sorry for the delay. I'll review the changes tomorrow and merge them if everything is ok.;;;","18/Jan/17 19:50;dmagda;[~akazlou], great job! I've merged your changes to the master. They will go to the next Apache Ignite release.

Also, I've added you to the contributors' list.
https://ignite.apache.org/community/resources.html#people

Look forward to more commits from your side ;);;;","18/Jan/17 20:08;akazlou;Thank you, [~dmagda]!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Near reader is not created when value is loaded from store,IGNITE-4525,13032062,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,dkarachentsev,vkulichenko,vkulichenko,04/Jan/17 19:20,18/Jan/17 09:10,14/Jul/23 06:20,18/Jan/17 09:10,1.8,,,,,2.0,,cache,,,,0,,,,"When client with a near cache get value that is not in cache yet, it's loaded from store and the value is saved in near cache. However reader on primary node is not created, and when it's updated on server side, near cache is not synchronized.

Test attached.",,dkarachentsev,sboikov,vkulichenko,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Jan/17 19:22;vkulichenko;NearCacheTest.java;https://issues.apache.org/jira/secure/attachment/12845598/NearCacheTest.java",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Jan 13 10:39:00 UTC 2017,,,,,,,,,,"0|i389rz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jan/17 09:15;dkarachentsev;[PR#1414|https://github.com/apache/ignite/pull/1414];;;","13/Jan/17 10:39;sboikov;Reviewed, looks good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Indexes usage in SQL functions like min/max,IGNITE-4524,13032050,Bug,Resolved,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,skalashnikov,dmagda,dmagda,04/Jan/17 18:19,14/Apr/17 06:29,14/Jul/23 06:20,13/Apr/17 08:41,,,,,,2.0,,sql,,,,0,important,,,"If to execute queries like this

{code}
select min(id) from MyValue
select max(id) from MyValue
{code}

assuming that 'id' is an indexed field then the engine will not gain from this. 

The SQL engine needs to be improved so that the indexes are used for queries like the ones above.

More details can be found in this discussion:
http://apache-ignite-developers.2346864.n4.nabble.com/min-max-SQL-and-indexes-td13492.html",,dmagda,githubbot,skalashnikov,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Fri Apr 14 06:29:27 UTC 2017,,,,,,,,,,"0|i389pb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/17 18:45;skalashnikov;Found an issue in H2 while adding the tests for this one.

Here are the details:

{code}
drop table test if exists;
create table test(key int, a int, b int);
create index key_pk on test(key);
create index usr_idx on test(a, key);
explain select min(key) from test;

PLAN  
SELECT
    MIN(KEY)
FROM PUBLIC.TEST
    /* PUBLIC.USR_IDX */
/* direct lookup */
{code}

The index in ""explain results"" is wrong. It should be KEY_PK.
;;;","31/Mar/17 13:27;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1717

    IGNITE-4524: Index direct lookup for SQL functions MIN() and MAX()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4524

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1717.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1717
    
----
commit 7ce61b7d08cb54f5355ae51657a3df37766a30b6
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-03-31T09:32:04Z

    IndexingSpi test fixed

commit 261a5eeafdc9f7db8446ca6b58896c9a249ee618
Author: Sergey Chugunov <sergey.chugunov@gmail.com>
Date:   2017-03-31T10:53:26Z

    H2CompareBigQueryTest configuration issue (probably introduced with merge) fixed

commit 5b5c838060e8d0c9160a82caa3b9052d0f5e8d69
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2017-03-31T12:01:39Z

    ignite-3477-master fix (node can't s obtain write lock on stop)

commit c7f8c4682cccf17d9fad007e2152422e545aeaa8
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2017-03-31T12:13:42Z

    ignite-3477-master minor update import

commit 3f49b18ef85009893ed9f22ac0368263cb417e05
Author: Dmitriy Govorukhin <dgovorukhin@gridgain.com>
Date:   2017-03-31T12:14:40Z

    Merge branch 'ignite-3477-master-apache' into ignite-3477-master

commit 5cf3f05d476407e7a8bcdacb516f8d826c968300
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-03-31T12:35:44Z

    Fixed GridCacheAtomicEntryProcessorDeploymentSelfTest.

commit f701c6af2198ea22ef59f57063e053db7536f3cd
Author: Ilya Lantukh <ilantukh@gridgain.com>
Date:   2017-03-31T12:36:30Z

    Merge branch 'ignite-3477-master' of https://github.com/gridgain/apache-ignite into ignite-3477-master

commit 4af9d8f99ae22687c49783e36c7bc0c1b206c342
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-03-31T13:19:05Z

    IGNITE-4524: Index direct lookup for SQL functions MIN() and MAX()

----
;;;","31/Mar/17 13:30;skalashnikov;Implemented. However, we need to fix H2 issue with index selection in order to fully fix this.
The changes are based on ignite-3477-master branch.;;;","06/Apr/17 10:52;githubbot;Github user skalashnikov closed the pull request at:

    https://github.com/apache/ignite/pull/1717
;;;","06/Apr/17 10:57;githubbot;GitHub user skalashnikov opened a pull request:

    https://github.com/apache/ignite/pull/1749

    IGNITE-4524: Index direct lookup for SQL MIN() and MAX()

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4524

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1749.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1749
    
----
commit 9fd888e30397612d9b732264da8b3e265ff27175
Author: skalashnikov <skalashnikov@gridgain.com>
Date:   2017-04-06T10:50:15Z

    IGNITE-4524: Index direct lookup for SQL MIN() and MAX()

----
;;;","06/Apr/17 12:20;skalashnikov;Applied review remarks. Had to re-create the branch and PR ( https://github.com/apache/ignite/pull/1749 )
[~sergi.vladykin], could you please have a look at the changes once again? ;;;","14/Apr/17 06:29;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1749
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong WHERE clause generated by org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect#loadCacheRangeQuery for upper bounds,IGNITE-4518,13031628,Bug,Closed,IGNITE,Ignite,software,cos,Apache Ignite,http://ignite.apache.org,Major,Fixed,,abotos,abotos,03/Jan/17 10:40,16/Jan/17 03:43,14/Jul/23 06:20,16/Jan/17 03:42,1.8,,,,,1.9,,sql,,,,0,,,,"Scenario:
* Cache entity with 3 key fields mapped to database as columns {{KC1}}, {{KC2}}, {{KC3}}
* The following data is in the database table {{MY_TABLE}} (the values 0 to 4 encoded as binary):
||KC1||KC2||KC3||
|0|0|0|
|0|0|1|
|0|1|0|
|0|1|1|
|1|0|0|

When running {{org.apache.ignite.IgniteCache#loadCache(null)}} (i.e. with no custom SQL query arguments) the following happens:
* In {{org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore#loadCache}}, the query produced by {{org.apache.ignite.cache.store.jdbc.dialect.JdbcDialect#loadCacheSelectRangeQuery}} is used to determine the range boundaries for the load. In our case the query would be:
{{SELECT KC1,KC2,KC3 FROM (SELECT KC1,KC2,KC3, ROWNUM AS rn FROM (SELECT KC1,KC2,KC3 FROM MY_TABLE ORDER BY KC1,KC2,KC3)) WHERE mod(rn, 2) = 0}} (I used {{parallelLoadCacheMinThreshold=2}} just as an example so that the problem is visible for this small data set).
The results of this query are:
||KC1||KC2||KC3||
|0|0|1|
|0|1|1|
(which is correct, due to https://issues.apache.org/jira/browse/IGNITE-4163 being fixed now)
These results will be used by {{org.apache.ignite.cache.store.jdbc.CacheAbstractJdbcStore#loadCacheRange}} to generate queries using {{org.apache.ignite.cache.store.jdbc.dialect.JdbcDialect#loadCacheRangeQuery}} which will be executed in parallel. Since there were 2 rows in the above result, this means that the load will occur using 3 ranges/queries:
# No lower bound, upper bound using first row of the selectRangeQuery result
# Lower bound using the first row of the selectRangeQuery result, upper bound using the second row of the selectRangeQuery result
# Lower bound using the second row of the selectRangeQuery result, no upper bound

The queries are the following:
# {{SELECT KC1,KC2,KC3 FROM MY_TABLE WHERE (KC1 = ? AND KC2 = ? AND KC3 <= ?  OR KC1 = ? AND KC2 <= ?  OR KC1 <= ? )}}
# {{SELECT KC1,KC2,KC3 FROM MY_TABLE WHERE (KC1 = ? AND KC2 = ? AND KC3 > ? OR KC1 = ? AND KC2 > ? OR KC1 > ? ) AND (KC1 = ? AND KC2 = ? AND KC3 <= ?  OR KC1 = ? AND KC2 <= ?  OR KC1 <= ? )}}
# {{SELECT KC1,KC2,KC3 FROM MY_TABLE WHERE (KC1 = ? AND KC2 = ? AND KC3 > ? OR KC1 = ? AND KC2 > ? OR KC1 > ? )}}

Replacing the first bound in the first query yields the following query: {{SELECT KC1,KC2,KC3 FROM MY_TABLE WHERE (KC1 = 0 AND KC2 = 0 AND KC3 <= 1  OR KC1 = 0 AND KC2 <= 0  OR KC1 <= 0 )}}, which executed, yields the following results:
||KC1||KC2||KC3||
|0|0|0|
|0|0|1|
|0|1|0|
|0|1|1|
which is not correct, as the result set should have contained only 2 rows (due to {{parallelLoadCacheMinThreshold=2}}). Something similar will happen also to the second query (the one with both lower and upper bound).

The problem arises due to how the upper bound part of the WHERE clause is being generated, namely the conditions when NOT ALL of the key columns are constrained. These conditions should use *<* (strictly less), not *<=* (less or equal).

The correct queries should be (please note the {{OR KC1 = ? AND KC2 < ?  OR KC1 < ?}} part which makes the difference):
# {{SELECT KC1, KC2, KC3 FROM MY_TABLE WHERE (KC1 = ? AND KC2 = ? AND KC3 <= ?  OR KC1 = ? AND KC2 < ?  OR KC1 < ? )}}
# {{SELECT KC1, KC2, KC3 FROM MY_TABLE WHERE (KC1 = ? AND KC2 = ? AND KC3 > ? OR KC1 = ? AND KC2 > ? OR KC1 > ? ) AND (KC1 = ? AND KC2 = ? AND KC3 <= ?  OR KC1 = ? AND KC2 < ?  OR KC1 < ? )}}
# {{SELECT KC1, KC2, KC3 FROM MY_TABLE WHERE (KC1 = ? AND KC2 = ? AND KC3 > ? OR KC1 = ? AND KC2 > ? OR KC1 > ? )}}

My fix to generate the correct queries was to use the following code instead of {{org.apache.ignite.cache.store.jdbc.dialect.BasicJdbcDialect#loadCacheRangeQuery:193-205}}:
{code}
        sb.append(""("");

        for (int cnt = keyCols.size(); cnt > 0; cnt--) {
            for (int j = 0; j < cnt; j++) {
                if (j == cnt - 1) {
                    if (cnt == keyCols.size()) {
                        sb.append(cols[j]).append("" <= ? "");
                    } else {
                        sb.append(cols[j]).append("" < ? "");
                    }
                } else {
                    sb.append(cols[j]).append("" = ? AND "");
                }
            }
            if (cnt != 1) {
                sb.append("" OR "");
            }
        }

        sb.append("")"");
{code}
",,abotos,anovikov,githubbot,kuaw26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,Mon Jan 16 03:43:53 UTC 2017,,,,,,,,,,"0|i3873z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jan/17 10:12;githubbot;GitHub user nva opened a pull request:

    https://github.com/apache/ignite/pull/1426

    IGNITE-4518 Fixed parallel load cache.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/gridgain/apache-ignite ignite-4518

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/ignite/pull/1426.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1426
    
----
commit 74208e984bb473ca6a9838f117fe5d6b0fc3e86d
Author: Andrey Novikov <anovikov@gridgain.com>
Date:   2017-01-13T04:10:19Z

    IGNITE-4518 Fixed parallel load cache.

----
;;;","13/Jan/17 10:15;anovikov;Fixed query generation, added test.
Alexey please review.;;;","13/Jan/17 10:30;kuaw26;Looks good for me.
See my comment in GitHub PR review.;;;","16/Jan/17 03:36;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/ignite/pull/1426
;;;","16/Jan/17 03:43;anovikov;Fixed review notes. Merged to master.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
