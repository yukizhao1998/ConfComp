Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocker),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Completes),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Outward issue link (Incorporates),Inward issue link (Problem/Incident),Inward issue link (Problem/Incident),Inward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Inward issue link (Required),Outward issue link (Supercedes),Inward issue link (dependent),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Language),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Patch Info),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Regression),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
User is informed to inspect missing log4j.properties file during start-up,AMQ-9285,13541317,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,jbonofre,alexejtimonin,alexejtimonin,25/Jun/23 16:38,26/Jun/23 05:10,13/Jul/23 08:25,26/Jun/23 05:10,,,,,5.17.5,5.18.2,5.19.0,,,,,,0,,,,,"The following is printed out when ActiveMQ is started:
{code:java}
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details {code}
No log4j.properties file exists, there is however, log4j2.properties in configuration directory.",,alexejtimonin,jira-bot,,,,,,,,,,"AlexejTimonin commented on PR #1037:
URL: https://github.com/apache/activemq/pull/1037#issuecomment-1606223557

   > @AlexejTimonin Thanks for the PR. Are you sure this PR is related to Jira AMQ-7229 ? Can you please fix the commit message to use the correct Jira ID ?
   
   I've corrected it, thanks for catching it!


;25/Jun/23 19:11;githubbot;600","jbonofre merged PR #1037:
URL: https://github.com/apache/activemq/pull/1037


;26/Jun/23 05:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 26 05:07:38 UTC 2023,,,,,,,,,,,"0|z1irmw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jun/23 05:07;jira-bot;Commit 58246c8a16aa5c55ee3da70113c21f9c98285d82 in activemq's branch refs/heads/main from JB Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=58246c8a16 ]

Merge pull request #1037 from AlexejTimonin/startup-info-log4j-to-log4j2

[AMQ-9285] On startup inform to inpsect log4j2.properties;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak on stomp transport when a client unsubscribe,AMQ-9283,13540361,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,16/Jun/23 09:30,16/Jun/23 11:58,13/Jul/23 08:27,16/Jun/23 11:58,,,,,5.17.5,5.18.2,5.19.0,STOMP,,,,,0,,,,,,,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 16 11:58:35 UTC 2023,,,,,,,,,,,"0|z1ils0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Jun/23 11:57;jira-bot;Commit 90f96a02992b64ba330c6e6b62e6a8fc3d4d8120 in activemq's branch refs/heads/main from u8675309
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=90f96a0299 ]

[AMQ-9283] Fix memory leak with STOMP unsubscribe
;;;","16/Jun/23 11:58;jira-bot;Commit c87726f2db2378f3d4a13b818a565ce5cce3af8a in activemq's branch refs/heads/activemq-5.18.x from u8675309
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c87726f2db ]

[AMQ-9283] Fix memory leak with STOMP unsubscribe

(cherry picked from commit 90f96a02992b64ba330c6e6b62e6a8fc3d4d8120)
;;;","16/Jun/23 11:58;jira-bot;Commit 587980fa9b2e521790c398f907dff5749e654dd3 in activemq's branch refs/heads/activemq-5.17.x from u8675309
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=587980fa9b ]

[AMQ-9283] Fix memory leak with STOMP unsubscribe

(cherry picked from commit 90f96a02992b64ba330c6e6b62e6a8fc3d4d8120)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composite consumers do not work properly with a network of brokers,AMQ-9262,13538970,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,06/Jun/23 23:03,13/Jun/23 12:11,13/Jul/23 08:27,07/Jun/23 11:21,5.18.1,,,,5.17.5,5.18.2,5.19.0,Network of Brokers,,,,,0,,,,,"I found an interesting edge case where consumers that use a composite destination do not correctly work dynamically included destinations with a network of brokers. The issue is the composite destination that is used by the consumer causes the bridge to not be able to correctly create conduit subscriptions as the logic used to to check for matching subscriptions fails.

*Note:* This is referring to a consumer that uses a composite destination string when consuming to subscribe to multiple topics, *NOT* virtual topics or the composite destination feature in the broker itself.

The end result is that duplicate subscriptions will be created for both topic/queue subscriptions even if conduit subscriptions is enabled. In the durable subscription case this is actually even worse because an exception occurs as it tries to create the same durable more than once which is not allowed of course.

An example like the following fails because the network bridge tries to create the same durable twice and it already exists.
{code:java}
final ActiveMQTopic compositeTopic = new ActiveMQTopic(testTopic1 + "","" + testTopic2);
TopicSubscriber durSub1 = session1.createDurableSubscriber(compositeTopic, subName + ""1"");
TopicSubscriber durSub2 = session1.createDurableSubscriber(compositeTopic, subName + ""2"");{code}
I looked at a few ways to fix this and the simplest/best way I found is to split the composite destination into individual destinations and create a network demand subscription per destination instead of 1 for the entire composite destination. This solves the issue and allow conduit subscriptions to work and having demand be generated as intended. It also works correctly for durable subs as well. 

I have a PR and tests I will push up, the one caveat is the dynamically include destinations that are allowed need to use a wild card for the filter because of how the advisory filters work for consumers. Ie, the dynamically included list config should have a destination added such as {{{}my.topic.>{}}}. This will allow composite consumers to work that use something like {{{}my.topic.test.1,my.topic.test.2{}}}. Listing out individual topics do not work and would require much more work to fix.

Lastly, I did not add a flag to optionally disable/enable this feature. I was thinking about it but this seems like a a bug that should just be fixed and I don't see a reason to keep the old broken behavior. The way it is now conduit subscriptions are completely broken so I think breaking the composite destination into individual for network subs is the correct fix and likely what we should just do. It's also probably an edge case since no one has reported a bug with it so probably not a big deal to change this behavior.",,cshannon,jira-bot,,,,,,,,,,"cshannon opened a new pull request, #1014:
URL: https://github.com/apache/activemq/pull/1014

   This fixes network subscriptions that are generated on demand when a consumer uses composite destinations. Before this fix conduit subscriptions didn't work correctly. This fix now splits up the composite dest and generates correct demand for each of the individual destinations.


;06/Jun/23 23:11;githubbot;600","cshannon commented on PR #1014:
URL: https://github.com/apache/activemq/pull/1014#issuecomment-1579581284

   I will let CI run but plan to merge this in tomorrow if everything looks good.


;06/Jun/23 23:13;githubbot;600","cshannon commented on PR #1014:
URL: https://github.com/apache/activemq/pull/1014#issuecomment-1579584304

   @mattrpav - feel free to take a look (or not), it's not a very common issue many people will run into it. I have tested things pretty extensively already before pushing this patch.


;06/Jun/23 23:17;githubbot;600","cshannon merged PR #1014:
URL: https://github.com/apache/activemq/pull/1014


;07/Jun/23 11:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 07 11:20:57 UTC 2023,,,,,,,,,,,"0|z1id6w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Jun/23 11:18;jira-bot;Commit 901956d4ddb6a0ea9fe5fedf39732117ab68f087 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=901956d4dd ]

AMQ-9262 - Fix network subscriptions for composite consumers (#1014)

This fixes network subscriptions that are generated on demand when a
consumer uses composite destinations. Before this fix conduit
subscriptions didn't work correctly. This fix now splits up the
composite dest and generates correct demand for each of the individual
destinations.;;;","07/Jun/23 11:20;jira-bot;Commit 04cb6585bde51818eff089a2823b20e9e4a62991 in activemq's branch refs/heads/activemq-5.18.x from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=04cb6585bd ]

AMQ-9262 - Fix network subscriptions for composite consumers (#1014)

This fixes network subscriptions that are generated on demand when a
consumer uses composite destinations. Before this fix conduit
subscriptions didn't work correctly. This fix now splits up the
composite dest and generates correct demand for each of the individual
destinations.

(cherry picked from commit 901956d4ddb6a0ea9fe5fedf39732117ab68f087)
;;;","07/Jun/23 11:20;jira-bot;Commit 1707cc194b1c74808c67ff54db8b909f8ef4b990 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1707cc194b ]

AMQ-9262 - Fix network subscriptions for composite consumers (#1014)

This fixes network subscriptions that are generated on demand when a
consumer uses composite destinations. Before this fix conduit
subscriptions didn't work correctly. This fix now splits up the
composite dest and generates correct demand for each of the individual
destinations.

(cherry picked from commit 901956d4ddb6a0ea9fe5fedf39732117ab68f087)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB minor fix when db files may be larger than max length,AMQ-9254,13534602,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,mattrpav,mattrpav,mattrpav,01/May/23 15:33,29/Jun/23 22:54,13/Jul/23 08:27,03/May/23 10:08,,,,,5.17.5,5.18.2,5.19.0,KahaDB,,,,,0,,,,,"Log message:
{noformat}
Caused by: java.io.IOException: Invalid location size: 54:33554460, size: 2412
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readRecord(DataFileAccessor.java:88) ~[?:?]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:953) ~[?:?]
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:1197) ~[?:?]
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1401) ~[?:?]
        ... 74 more
{noformat}

db-54.log size: 33556877

Note: This read would have succeeded otherwise.

Reproducible test case:
ref: https://github.com/mattrpav/activemq-jira-9254",,cshannon,jira-bot,mattrpav,,,,,,,,,"mattrpav commented on PR #1004:
URL: https://github.com/apache/activemq/pull/1004#issuecomment-1531592623

   related: https://github.com/apache/activemq/commit/8c3ef6cadb46d9694c68aa649a7952eb1612279f


;02/May/23 14:34;githubbot;600","cshannon commented on PR #1004:
URL: https://github.com/apache/activemq/pull/1004#issuecomment-1532267039

   @mattrpav - let me know what you think of my commit I just pushed. We should be able to just do a normal merge commit when we merge the PR and keep both commits separate in this case instead of squashing.


;02/May/23 23:13;githubbot;600","cshannon merged PR #1004:
URL: https://github.com/apache/activemq/pull/1004


;03/May/23 10:04;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,AMQ-6815,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jun 29 22:54:10 UTC 2023,,,,,,,,,,,"0|z1hmgo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/May/23 17:22;mattrpav;Considaration to convert this to a log.WARN and attempt to continue

ref: https://github.com/apache/activemq/blob/activemq-5.17.4/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/DataFileAccessor.java#L88
{noformat}
            if ((long)location.getOffset() + location.getSize() > dataFile.length) {
                throw new IOException(""Invalid location size: "" + location + "", size: "" + location.getSize());
            }
{noformat}


;;;","01/May/23 23:13;cshannon;I haven't had a chance to look at the test case yet but I assume that the file is larger than the max size due to a message being published that is larger than the max file size? It's been a little while since I have been in the KahaDB journal code but I think the only time the journal file should be larger would be a big message. If that isn't the case here then we'd need to figure out why the file is too big.;;;","01/May/23 23:23;cshannon;So to be clear, the issue is the actual file is larger than dataFile.length?

That seems to be a bit of a problem if the file is larger than what is reported so I wonder if we should be smarter here. I need to look how that value is set but I am guessing the length is coming from max length setting or some sort of offset by the read messages etc Trying to read past the real max length is an actual problem and I don't think we should be swallowing that error just because in this one case it would succeed. In other cases it could be corruption.

I'm wondering if we should do something where we check the real file length as an extra check before failing. If we are truly exceeding the real file length we need to throw an exception and shut down.

 ;;;","01/May/23 23:34;cshannon;Ok so the size is actually incremented for each message so it can be longer then max journal size and that is normal. It seems there's probably a bit of a math issue here (that's the real bug) when writing to the file and it's a bit off. Maybe rounding or something else. Ultimately finding that bug is the real solution but as a sanity check in the mean time we could handle it better.

I think we should do something like the following:
 # Keep things as they currently are for computing the dataFile.length as it seems to be computing it by offsets and incrementing for each message/write so it's fast and avoids an expensive lookup to the file system
 # If we encounter this edge case error we look up the real length of the file on the file system and re-check. If the real size is longer and the read is fine then we just log an info statement or something otherwise continue with the IO exception.

We shouldn't need to cache the value if it's only on error which would be rare and also the file size can change until it rolls over to the next file.

Ultimately there's probably an issue here with the counter.;;;","01/May/23 23:50;mattrpav;I'll work up a PR. In the one-off case of a db-foo.log file being too large, inside the if.. check size.. .. we can do the OS file size check (fstat() penalty).. but this would _only_ be for reads outside the expected max journal length, so the read penalty would be very limited, and we wouldn't need to cache the size (which could be wrong if the file changes size).;;;","03/May/23 10:04;jira-bot;Commit bcc74f93fe6dbbd5c795c35484db8efa29b254b6 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bcc74f93fe ]

AMQ-9254 - Rework data file size validation and add unit test

This isolates the validation on data file length on read and adds unit
tests to verify we properly fallback to the real file length on initial
size check failure
;;;","03/May/23 10:04;jira-bot;Commit b8b5dedb781677970c227d1cc972397cb994b901 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b8b5dedb78 ]

Merge pull request #1004 from mattrpav/AMQ-9254

[AMQ-9254] DataFile readRecord fallback to OS file.length in rare edge case

Rework validation that the record read won't exceed the length of the file;;;","03/May/23 10:07;jira-bot;Commit 78a399cb8714c6b7cd0bbcaa6be21fa217399033 in activemq's branch refs/heads/activemq-5.18.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=78a399cb87 ]

AMQ-9254 - Rework data file size validation and add unit test

This isolates the validation on data file length on read and adds unit
tests to verify we properly fallback to the real file length on initial
size check failure

(cherry picked from commit bcc74f93fe6dbbd5c795c35484db8efa29b254b6)
;;;","03/May/23 10:08;jira-bot;Commit 6a64a0817e93991515eb89ee09ddc468452bd1c3 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6a64a0817e ]

AMQ-9254 - Rework data file size validation and add unit test

This isolates the validation on data file length on read and adds unit
tests to verify we properly fallback to the real file length on initial
size check failure

(cherry picked from commit bcc74f93fe6dbbd5c795c35484db8efa29b254b6)
;;;","18/May/23 16:29;jira-bot;Commit cfbea60d6d4f934e7fbe85915183a2f211414b82 in activemq's branch refs/heads/main from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cfbea60d6d ]

[AMQ-9258] Update kahadb corruption test to account for new fix from AMQ-9254 (#1007)

;;;","29/Jun/23 22:50;jira-bot;Commit fa72c13612e816603b42245de54b4d4dc8fc3dcd in activemq's branch refs/heads/activemq-5.18.x from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fa72c13612 ]

[AMQ-9258] Update kahadb corruption test to account for new fix from AMQ-9254 (#1007)

(cherry picked from commit cfbea60d6d4f934e7fbe85915183a2f211414b82)
;;;","29/Jun/23 22:54;jira-bot;Commit 697feeccb0a14caa464e09adcde43fd58b30bc55 in activemq's branch refs/heads/activemq-5.17.x from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=697feeccb0 ]

[AMQ-9258] Update kahadb corruption test to account for new fix from AMQ-9254 (#1007)

(cherry picked from commit cfbea60d6d4f934e7fbe85915183a2f211414b82)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-partition module should not have a compile time dependency on log4j-slf4j2-impl,AMQ-9242,13532199,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,11/Apr/23 14:06,12/Apr/23 10:25,13/Jul/23 08:27,12/Apr/23 10:25,,,,,5.18.2,5.19.0,,Broker,,,,,0,,,,,"The activemq-partition module is pulling in log4j-slf4j2-impl by mistake as a compile time dependency. It should only be a test dependency and the slf4j-api should be the only compile time dependency like the rest of the modules. Only the activemq-all and assembly modules should pull in the implementation versions.

This has been broken since before slf4j2 but I noticed it with the upgrade from conflicts when I had slff4j1 still on the classpath.",,cshannon,jira-bot,,,,,,,,,,"cshannon commented on PR #997:
URL: https://github.com/apache/activemq/pull/997#issuecomment-1503434232

   I meant to get this into 5.18.1 but forgot but it's fine to wait for 5.18.2 as it's been broken a while, not a new thing and this module isn't really used anymore anyways.


;11/Apr/23 14:10;githubbot;600","cshannon commented on PR #997:
URL: https://github.com/apache/activemq/pull/997#issuecomment-1505031307

   Looked like the run on CI was hung for some reason but seems unrelated to the changes here so I'm going to merge it. I can investigate if it hangs again but seems very unlikely it has anything to do with just changing this compile time dependency.


;12/Apr/23 10:22;githubbot;600","cshannon merged PR #997:
URL: https://github.com/apache/activemq/pull/997


;12/Apr/23 10:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 12 10:25:08 UTC 2023,,,,,,,,,,,"0|z1h7q0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Apr/23 10:23;jira-bot;Commit 3372e01f7a9320cf2cba41ee117c0614c3b89c51 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3372e01f7 ]

AMQ-9242 - remove compile time dependency log4j-slf4j2-impl dependency (#997) from activemq-partition

;;;","12/Apr/23 10:25;jira-bot;Commit f63328048f38d47c209e0191f8115436211d6488 in activemq's branch refs/heads/activemq-5.18.x from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f63328048 ]

AMQ-9242 - remove compile time dependency log4j-slf4j2-impl dependency (#997) from activemq-partition

(cherry picked from commit 3372e01f7a9320cf2cba41ee117c0614c3b89c51)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE in SubQueueSelectorCacheBroker.removeConsumer,AMQ-9233,13529998,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,mattrpav,mattrpav,24/Mar/23 15:57,24/Jun/23 04:23,13/Jul/23 08:27,24/Jun/23 04:23,5.16.4,,,,5.18.2,5.19.0,,,,,,,0,,,,,"This NPE occurs after a number of cascading errors. Probably, the _selectors.size()_ needs a null check.

{noformat}
java.lang.NullPointerException
        at org.apache.activemq.plugin.SubQueueSelectorCacheBroker.removeConsumer(SubQueueSelectorCacheBroker.java:183)[activemq-broker-5.16.4.jar:5.16.4]
        at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)[activemq-broker-5.16.4.jar:5.16.4]
 {noformat}",,jira-bot,mattrpav,,,,,,,,,,"jbonofre opened a new pull request, #1034:
URL: https://github.com/apache/activemq/pull/1034

   (no comment)


;21/Jun/23 05:39;githubbot;600","jbonofre merged PR #1034:
URL: https://github.com/apache/activemq/pull/1034


;24/Jun/23 04:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jun 24 04:23:00 UTC 2023,,,,,,,,,,,"0|z1gu6g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jun/23 04:22;jira-bot;Commit 95e3c2a1aa0d4962ad6a22a4422a9314875f824b in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=95e3c2a1aa ]

[AMQ-9233] Prevent NPE in SubQueueSelectorCacheBroker
;;;","24/Jun/23 04:22;jira-bot;Commit 251577cf610bbc2596ac114a1fc36daadee3147c in activemq's branch refs/heads/main from JB Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=251577cf61 ]

Merge pull request #1034 from jbonofre/AMQ-9233

[AMQ-9233] Prevent NPE in SubQueueSelectorCacheBroker;;;","24/Jun/23 04:23;jira-bot;Commit 2383a06b20c4d32f2ac44271c91f7deb80bfc38c in activemq's branch refs/heads/activemq-5.18.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2383a06b20 ]

[AMQ-9233] Prevent NPE in SubQueueSelectorCacheBroker

(cherry picked from commit 95e3c2a1aa0d4962ad6a22a4422a9314875f824b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reentrant locks should always be locked outside of a try block,AMQ-9202,13522540,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,01/Feb/23 16:12,01/Feb/23 16:34,13/Jul/23 08:27,01/Feb/23 16:34,5.17.3,,,,5.17.4,5.18.0,,Broker,,,,,0,,,,,"I saw an exception happen today that turned out to be improper use of Reentrant locks. Acquiring the lock should always be done before the try block so that the finally clause to unlock will never execute unless the lock is acquired. More info: https://stackoverflow.com/questions/31058681/java-locking-structure-best-pattern

The issue is inside of AbstractRuntimeConfigurationBroker, for example: [https://github.com/apache/activemq/blob/d8ce1d9ff0fa2296f3c56b59602e5cddb6ffe4a9/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/AbstractRuntimeConfigurationBroker.java#L81]

I saw a IllegalMonitorStateException exception occur due to lockInterruptibly() throwing an exception so when the finally block tried to unlock it threw the IllegalMonitorStateException since it was not owned by the thread.

I went through the rest of the code and most places are correct but a couple spots need to be fixed as well.",,cshannon,jira-bot,,,,,,,,,,"cshannon opened a new pull request, #959:
URL: https://github.com/apache/activemq/pull/959

   This is best practice and will prevent unlock from being attempted inside of a finally block when the thread doesn't actually own the lock which can happen when the lock attempt throws an exception such as calling lockInterruptibly()


;01/Feb/23 16:21;githubbot;600","cshannon merged PR #959:
URL: https://github.com/apache/activemq/pull/959


;01/Feb/23 16:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 01 16:34:08 UTC 2023,,,,,,,,,,,"0|z1fk80:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Feb/23 16:32;jira-bot;Commit ed924cddac90b96bdc47b215852a68155d818bcd in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ed924cdda ]

AMQ-9202 - Make sure Reentrant locks are acquired outside a try block

This is best practice and will prevent unlock from being attempted
inside of a finally block when the thread doesn't actually own the
lock which can happen when the lock attempt throws an exception
such as calling lockInterruptibly()
;;;","01/Feb/23 16:32;jira-bot;Commit 3f68f49939064477e57a40c02db9a727a3a2f4d1 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3f68f4993 ]

Merge pull request #959 from cshannon/AMQ-9202

AMQ-9202 - Make sure Reentrant locks are acquired outside a try block;;;","01/Feb/23 16:34;jira-bot;Commit 6d91d71c1acab166a607425e88a228ba28d06bab in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6d91d71c1 ]

AMQ-9202 - Make sure Reentrant locks are acquired outside a try block

This is best practice and will prevent unlock from being attempted
inside of a finally block when the thread doesn't actually own the
lock which can happen when the lock attempt throws an exception
such as calling lockInterruptibly()

(cherry picked from commit ed924cddac90b96bdc47b215852a68155d818bcd)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in creating store directory for new queues,AMQ-9199,13519886,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,mjanczykowski,mjanczykowski,17/Jan/23 11:09,02/Feb/23 13:45,13/Jul/23 08:27,02/Feb/23 13:45,5.16.5,5.17.3,,,5.17.4,5.18.0,,KahaDB,,,,,0,,,,,"After introducing dynamically created STOMP queues in our production system we've observed exceptions thrown from {{IOHelper.mkdirs()}} caused by a race condition in creating directories for a new STOMP queue. The exception is thrown during two different actions:
 # on processing the STOMP subscription action
 # on sending a persistent JMS message to any already existing queue, when {{store.size()}} is performed

 

*Stack traces:*

STOMP subscription (from ActiveMQ logs):
{code:java}
2022-12-29 09:09:14,704 | ERROR | java.lang.RuntimeException: Failed to start per destination persistence adapter for destination: queue://STOMP.x-queue-userpn4ckpkl, (...)java.io.IOException: Failed to create directory '(...)/activemq/data/kahadb/queue#3a#2f#2fSTOMP.x-queue-userpn4ckpkl'
        at org.apache.activemq.util.IOHelper.mkdirs(IOHelper.java:331)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:494)
        at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:309)
        at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:212)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:232)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.store.kahadb.MultiKahaDBPersistenceAdapter.startAdapter(MultiKahaDBPersistenceAdapter.java:211)
        at org.apache.activemq.store.kahadb.MultiKahaDBPersistenceAdapter.getMatchingPersistenceAdapter(MultiKahaDBPersistenceAdapter.java:204)
        at org.apache.activemq.store.kahadb.MultiKahaDBPersistenceAdapter.createQueueMessageStore(MultiKahaDBPersistenceAdapter.java:188)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:84)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:629)
        at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:155)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:357)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:244)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:118)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)
        at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:561)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:346)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:436)
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:243)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:131)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.security.AuthorizationBroker.addConsumer(AuthorizationBroker.java:183)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:705)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:352)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:335)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:302)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:179)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:679)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:249)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:172)
        at org.apache.activemq.transport.stomp.StompSslTransportFactory$1$1.doConsume(StompSslTransportFactory.java:73)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
        at java.base/java.lang.Thread.run(Thread.java:829)
 {code}
 

JMS message send (from JBOSS running application):
{code:java}
2023-01-12T09:57:47,360Z WARN  [org.jboss.jca.core.connectionmanager.listener.TxConnectionListener] (...): javax.jms.JMSException: java.io.IOException: Failed to create directory '(...)/activemq/kahadb/queue#3a#2f#2fSTOMP.x-queue-useref42egyx'
    at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:56)
    at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1973)
    at org.apache.activemq.ActiveMQConnection$3$1.run(ActiveMQConnection.java:1882)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:750)
Caused by: java.lang.RuntimeException: java.io.IOException: Failed to create directory '(...)/activemq/kahadb/queue#3a#2f#2fSTOMP.x-queue-useref42egyx'
    at org.apache.activemq.store.kahadb.KahaDBStore.size(KahaDBStore.java:1379)
    at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.size(KahaDBPersistenceAdapter.java:223)
    at org.apache.activemq.store.kahadb.MultiKahaDBPersistenceAdapter.size(MultiKahaDBPersistenceAdapter.java:366)
    at org.apache.activemq.usage.StoreUsage.retrieveUsage(StoreUsage.java:53)
    at org.apache.activemq.usage.Usage.caclPercentUsage(Usage.java:283)
    at org.apache.activemq.usage.Usage.isFull(Usage.java:126)
    at org.apache.activemq.broker.region.Queue.checkUsage(Queue.java:939)
    at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:875)
    at org.apache.activemq.broker.region.Queue.send(Queue.java:756)
    at org.apache.activemq.broker.region.DestinationFilter.send(DestinationFilter.java:138)
    at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:511)
    at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:477)
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:320)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
    at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:295)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:226)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.plugin.StatisticsBroker.send(StatisticsBroker.java:229)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:580)
    at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:769)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:335)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    ... 1 more
Caused by: java.io.IOException: Failed to create directory '(...)/activemq/kahadb/queue#3a#2f#2fSTOMP.x-queue-useref42egyx'
    at org.apache.activemq.util.IOHelper.mkdirs(IOHelper.java:331)
    at org.apache.activemq.store.kahadb.MessageDatabase.createPageFile(MessageDatabase.java:3381)
    at org.apache.activemq.store.kahadb.MessageDatabase.getPageFile(MessageDatabase.java:3556)
    at org.apache.activemq.store.kahadb.KahaDBStore.size(KahaDBStore.java:1377)
    ... 35 more {code}
 

*Background*

We had KahaDB configured with {{preallocationStrategy=os_kernel_copy}} and size set to 32MB which probably slowed things down. After disabling preallocation for STOMP queues, we no longer observe the issue, but it's just a matter of decreased probability.

 

There's a pull request with a test case reproducing the issue and a fix proposal: [https://github.com/apache/activemq/pull/957] ","* ActiveMQ 5.17.3
 * JBoss EAP 7.4
 * Amazon Linux 2",jira-bot,mjanczykowski,,,,,,,,,,"mjanczykowski opened a new pull request, #957:
URL: https://github.com/apache/activemq/pull/957

   A store directory is created by `MessageDatabase.getPageFile()` which is called in two cases:
   1. `KahaDBStore.start()` when creating a queue
   2. `KahaDBStore.size()` which is performed when sending any persistent message
   
   If both methods are called concurrently it's possible to get an IOException thrown from the `IOHelper.mkdirs()` method.


;17/Jan/23 11:28;githubbot;600","jbonofre merged PR #957:
URL: https://github.com/apache/activemq/pull/957


;02/Feb/23 13:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 02 13:45:11 UTC 2023,,,,,,,,,,,"0|z1f3zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Feb/23 13:43;jira-bot;Commit 7de7ba2aa92dd1a98f48175fac5a538bd6e8579b in activemq's branch refs/heads/main from Michał Janczykowski
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7de7ba2aa ]

[AMQ-9199] Fixed race condition in creating store directory

A store directory is created by MessageDatabase#getPageFile which
is called in two cases:
1. KahaDBStore.start() when creating a queue
2. KahaDBStore.size() which is performed when sending any persistent message

If both methods are called concurrently it's possible to get an IOException
thrown from the IOHelper.mkdirs method.
;;;","02/Feb/23 13:43;jira-bot;Commit 13ec5d5b7ace619e84ff2982da9e80091bb64e66 in activemq's branch refs/heads/main from Michał Janczykowski
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=13ec5d5b7 ]

[AMQ-9199] reordered imports
;;;","02/Feb/23 13:43;jira-bot;Commit c86cd20029b5e00bc9bb6c8a9710fc1e3a5f81c7 in activemq's branch refs/heads/main from JB Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c86cd2002 ]

Merge pull request #957 from mjanczykowski/bugfix/AMQ-9199

[AMQ-9199] Fixed race condition in creating store directory;;;","02/Feb/23 13:45;jira-bot;Commit c5ecf53bdca0f9b163c514eefc01eff15b4b5d81 in activemq's branch refs/heads/activemq-5.17.x from Michał Janczykowski
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c5ecf53bd ]

[AMQ-9199] Fixed race condition in creating store directory

A store directory is created by MessageDatabase#getPageFile which
is called in two cases:
1. KahaDBStore.start() when creating a queue
2. KahaDBStore.size() which is performed when sending any persistent message

If both methods are called concurrently it's possible to get an IOException
thrown from the IOHelper.mkdirs method.

(cherry picked from commit 7de7ba2aa92dd1a98f48175fac5a538bd6e8579b)
;;;","02/Feb/23 13:45;jira-bot;Commit b1f5d6beb3d265bf9a9c1db6e43260fdf314457e in activemq's branch refs/heads/activemq-5.17.x from Michał Janczykowski
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b1f5d6beb ]

[AMQ-9199] reordered imports

(cherry picked from commit 13ec5d5b7ace619e84ff2982da9e80091bb64e66)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve broker shutdown logic in unit tests to improve test reliability,AMQ-9193,13517597,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,11/Jan/23 11:19,11/Jan/23 18:15,13/Jul/23 08:27,11/Jan/23 18:15,5.17.3,,,,5.17.4,5.18.0,,Broker,,,,,0,,,,,"A lot of the test failures that happen in CI are due to brokers that were not shut down properly in previous test runs (so ports are not open or JMX interferes, etc). I have noticed a lot of the reason is simply not wrapping code that is called before stopping the broker in a try/catch (such as connection.close()) so that if the previous code fails the broker doesn't get stopped.

The goal here is to just try and go through and find places in the unit tests where broker stop can be better handled to try and limit some of the issues when running in CI.

Another issue altogether is that the tests would be much more reliable if random ports were used and not hard coded ports but that is a much bigger task to change for all tests so would be another issue if needed.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 11 11:23:18 UTC 2023,,,,,,,,,,,"0|z1epww:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Jan/23 11:22;jira-bot;Commit a083ff4d23e9ea0997efa5aa596ed5f1c3c6ee24 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a083ff4d2 ]

AMQ-9193 - Improve broker shutdown in unit tests

This should improve test reliability for the unit tests so brokers don't
hang around after the end of a test on error. Also increase the surefire
re-run count to 3 times before failing.
;;;","11/Jan/23 11:23;jira-bot;Commit 5e12551a4abbb02ac9c07deab258042ef1202042 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5e12551a4 ]

AMQ-9193 - Improve broker shutdown in unit tests

This should improve test reliability for the unit tests so brokers don't
hang around after the end of a test on error. Also increase the surefire
re-run count to 3 times before failing.

(cherry picked from commit a083ff4d23e9ea0997efa5aa596ed5f1c3c6ee24)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix flaky AdvisoryTests causing CI failures,AMQ-9192,13517480,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,10/Jan/23 17:28,11/Jan/23 11:13,13/Jul/23 08:27,11/Jan/23 11:13,5.17.3,,,,5.17.4,5.18.0,,Broker,,,,,0,,,,,I noticed in Jenkins that the advisory tests are flaky for two reasons. One is on stop the connection.stop() call can cause an error and prevent the broker from being stopped which leads to future tests failing due to the broker instance still running in memory. The other issue is some of the tests are sending way too many messages (way more than needed) and is causing slow tests and timeouts.,,cshannon,jira-bot,,,,,,,,,,"cshannon opened a new pull request, #951:
URL: https://github.com/apache/activemq/pull/951

   Properly shutdown broker for each test and speed up tests by sending less messages


;10/Jan/23 17:40;githubbot;600","cshannon commented on PR #951:
URL: https://github.com/apache/activemq/pull/951#issuecomment-1377635168

   I created a PR here mostly to let the tests run to see if it fixes things and then it can be merged and I will back port it to 5.17.x as well (along with any tweaks)


;10/Jan/23 17:51;githubbot;600","cshannon commented on PR #951:
URL: https://github.com/apache/activemq/pull/951#issuecomment-1377807977

   There might still be something to tweak but it looks like it fixed the vast majority of the Advisory test issues so I'm going to merge this and let it run against main and then fix whatever else.


;10/Jan/23 20:28;githubbot;600","cshannon merged PR #951:
URL: https://github.com/apache/activemq/pull/951


;10/Jan/23 20:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 11 11:13:51 UTC 2023,,,,,,,,,,,"0|z1ep6w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Jan/23 20:29;jira-bot;Commit 044f5346e93d9b133fcecccb6000d16967aa0f1e in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=044f5346e ]

AMQ-9192 - Fix flaky AdvisoryTests

Properly shutdown broker for each test and speed up tests by sending
less messages
;;;","10/Jan/23 20:29;jira-bot;Commit 362d28cddfd0c18c3ab505a0370f21921c8c50c4 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=362d28cdd ]

Merge pull request #951 from cshannon/AMQ-9192

AMQ-9192 - Fix flaky AdvisoryTests;;;","10/Jan/23 20:32;jira-bot;Commit 4ac6065acee402e7b002a9418d303a76ba2c4f85 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4ac6065ac ]

AMQ-9192 - Fix flaky AdvisoryTests

Properly shutdown broker for each test and speed up tests by sending
less messages

(cherry picked from commit 044f5346e93d9b133fcecccb6000d16967aa0f1e)
;;;","10/Jan/23 20:41;cshannon;So far this seems to have helped a lot so I merged into main and 5.17.x. I will let CI run to see if we need more fixes before closing this as done.;;;","11/Jan/23 11:13;cshannon;The test issues appear to be resolved based on the latest CI;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Send To"" in the web console is broken",AMQ-9189,13516732,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,tetlucas,tetlucas,05/Jan/23 23:42,08/Feb/23 16:05,13/Jul/23 08:27,08/Feb/23 16:05,,,,,5.18.0,,,Web Console,,,,,0,,,,,"commons-lang3 was removed in [this commit|https://github.com/apache/activemq/commit/4fa107e8969754e8b27c6a7f65d7c33ee311cad0] for AMQ-8572 which breaks the console since it still uses org.apache.commons.lang3.StringEscapeUtils.escapeHtml4 and org.apache.commons.lang3.StringEscapeUtils.escapeEcmaScript. This commit was merged in to the main branch in October before the 5.17.3 release however it seems it was never merged in to the 5.17.x branch so the 5.17.3 console should still be fine! 

We should either revert that commit or find a different way to escape the text.

 

!image-2023-01-05-16-41-49-744.png!

 

 
{code:java}
WARN | /admin/send.jsp
javax.servlet.ServletException: javax.servlet.ServletException: org.apache.jasper.JasperException: Unable to compile class for JSP: 
An error occurred at line: [27] in the jsp file: [/WEB-INF/tags/form/text.tag]
org.apache.commons.lang3.StringEscapeUtils cannot be resolved to a type
24:     if (value == null) {
25:         value = """";
26:     }
27:     value = org.apache.commons.lang3.StringEscapeUtils.escapeHtml4(value);
28: 
29: %>
30: <input type=""text"" name=""${name}"" value=""<%= value %>""/>

Stacktrace:
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:162) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.Server.handle(Server.java:516) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104) ~[jetty-io-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
    at java.lang.Thread.run(Thread.java:1589) ~[?:?]
Caused by: javax.servlet.ServletException: org.apache.jasper.JasperException: Unable to compile class for JSP: 
An error occurred at line: [27] in the jsp file: [/WEB-INF/tags/form/text.tag]
org.apache.commons.lang3.StringEscapeUtils cannot be resolved to a type
24:     if (value == null) {
25:         value = """";
26:     }
27:     value = org.apache.commons.lang3.StringEscapeUtils.escapeHtml4(value);
28: 
29: %>
30: <input type=""text"" name=""${name}"" value=""<%= value %>""/>

Stacktrace:
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:162) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:146) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    ... 12 more
Caused by: org.apache.jasper.JasperException: Unable to compile class for JSP: 
An error occurred at line: [27] in the jsp file: [/WEB-INF/tags/form/text.tag]
org.apache.commons.lang3.StringEscapeUtils cannot be resolved to a type
24:     if (value == null) {
25:         value = """";
26:     }
27:     value = org.apache.commons.lang3.StringEscapeUtils.escapeHtml4(value);
28: 
29: %>
30: <input type=""text"" name=""${name}"" value=""<%= value %>""/>

Stacktrace:
    at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:101) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:213) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:556) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:380) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:350) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:334) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:597) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.servlet.JspServletWrapper.loadTagFile(JspServletWrapper.java:268) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.TagFileProcessor.loadTagFile(TagFileProcessor.java:588) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.TagFileProcessor.access$000(TagFileProcessor.java:49) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.TagFileProcessor$TagFileLoaderVisitor.visit(TagFileProcessor.java:671) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1558) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2385) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2437) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2443) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Node$Root.accept(Node.java:471) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2385) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.TagFileProcessor.loadTagFiles(TagFileProcessor.java:694) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:232) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:374) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:350) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:334) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:597) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:398) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:383) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:331) ~[apache-jsp-8.5.70.jar:8.5.70]
    at org.eclipse.jetty.jsp.JettyJspServlet.service(JettyJspServlet.java:106) ~[apache-jsp-9.4.49.v20220914.jar:9.4.49.v20220914]
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-servlet-api-9.0.65.jar:4.0.FR]
    at org.eclipse.jetty.servlet.ServletHolder$NotAsync.service(ServletHolder.java:1459) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.23.jar:5.3.23]
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.23.jar:5.3.23]
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45) ~[activemq-web-5.18.0-SNAPSHOT.jar:5.18.0-SNAPSHOT]
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102) ~[?:?]
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:201) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:552) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:146) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560) ~[jetty-security-9.4.49.v20220914.jar:9.4.49.v20220914]
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:146) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
    ... 12 more
 
{code}
 ",,mattrpav,tetlucas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"05/Jan/23 23:41;tetlucas;image-2023-01-05-16-41-49-744.png;https://issues.apache.org/jira/secure/attachment/13054393/image-2023-01-05-16-41-49-744.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 06 00:37:54 UTC 2023,,,,,,,,,,,"0|z1eknk:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"06/Jan/23 00:37;mattrpav;I'll get a fix;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"java.lang.NullPointerException: Cannot invoke ""String.length()"" because ""replacement"" is null",AMQ-9185,13509812,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,05/Dec/22 06:11,05/Feb/23 06:33,13/Jul/23 08:21,05/Feb/23 06:33,5.17.3,,,,5.17.4,5.18.0,,,,,,,0,,,,,"After upgrading a test broker to 5.17.3, ActiveMQ reports a NPE during startup.

Here is the full trace:
{code}
2022-12-05T07:06:21.255+0100 [WrapperSimpleAppMain] WARN WebAppContext - Failed startup of context o.e.j.w.WebAppContext@4cd59611{Apache ActiveMQ REST API,/api,file:///usr/share/activemq-5.17.3/webapps/api/,UNAVAILABLE}
javax.servlet.ServletException: jolokia-agent==org.jolokia.http.AgentServlet@c61e72f3{jsp=null,order=1,inst=true,async=false,src=DESCRIPTOR:file:///usr/share/activemq-5.17.3/webapps/api/WEB-INF/web.xml,STARTED}
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:650) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:415) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHandler.lambda$initialize$0(ServletHandler.java:750) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762) ~[?:?]
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:774) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:379) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1449) ~[jetty-webapp-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1414) ~[jetty-webapp-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:916) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:288) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:524) ~[jetty-webapp-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:117) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:117) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.start(Server.java:423) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:110) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.server.Server.doStart(Server.java:387) ~[jetty-server-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73) ~[jetty-util-9.4.49.v20220914.jar:9.4.49.v20220914]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.util.MethodInvoker.invoke(MethodInvoker.java:283) ~[spring-core-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.config.MethodInvokingBean.invokeWithTargetException(MethodInvokingBean.java:123) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.config.MethodInvokingFactoryBean.afterPropertiesSet(MethodInvokingFactoryBean.java:108) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:936) ~[spring-beans-5.3.23.jar:5.3.23]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.23.jar:5.3.23]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.23.jar:5.3.23]
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64) ~[xbean-spring-4.22.jar:4.22]
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52) ~[xbean-spring-4.22.jar:4.22]
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104) ~[activemq-spring-5.17.3.jar:5.17.3]
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104) ~[activemq-spring-5.17.3.jar:5.17.3]
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67) ~[activemq-spring-5.17.3.jar:5.17.3]
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) ~[activemq-broker-5.17.3.jar:5.17.3]
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) ~[activemq-broker-5.17.3.jar:5.17.3]
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87) ~[activemq-console-5.17.3.jar:5.17.3]
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:63) ~[activemq-console-5.17.3.jar:5.17.3]
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154) ~[activemq-console-5.17.3.jar:5.17.3]
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:63) ~[activemq-console-5.17.3.jar:5.17.3]
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104) ~[activemq-console-5.17.3.jar:5.17.3]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.apache.activemq.console.Main.runTaskClass(Main.java:262) ~[activemq.jar:5.17.3]
	at org.apache.activemq.console.Main.main(Main.java:115) ~[activemq.jar:5.17.3]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:349) ~[wrapper.jar:3.5.51]
	at java.lang.Thread.run(Thread.java:833) ~[?:?]
Caused by: java.lang.NullPointerException: Cannot invoke ""String.length()"" because ""replacement"" is null
	at java.util.regex.Matcher.appendExpandedReplacement(Matcher.java:1014) ~[?:?]
	at java.util.regex.Matcher.appendReplacement(Matcher.java:907) ~[?:?]
	at org.jolokia.util.NetworkUtil.replaceExpression(NetworkUtil.java:366) ~[jolokia-core-1.7.1.jar:?]
	at org.jolokia.restrictor.RestrictorFactory.createRestrictor(RestrictorFactory.java:48) ~[jolokia-core-1.7.1.jar:?]
	at org.jolokia.http.AgentServlet.createRestrictor(AgentServlet.java:195) ~[jolokia-core-1.7.1.jar:?]
	at org.jolokia.http.AgentServlet.init(AgentServlet.java:135) ~[jolokia-core-1.7.1.jar:?]
	at org.eclipse.jetty.servlet.ServletHolder$Wrapper.init(ServletHolder.java:1345) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:632) ~[jetty-servlet-9.4.49.v20220914.jar:9.4.49.v20220914]
	... 72 more
{code}",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre merged PR #966:
URL: https://github.com/apache/activemq/pull/966


;05/Feb/23 06:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Feb 05 06:33:44 UTC 2023,,,,,,,,,,,"0|z1de5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Dec/22 07:26;jbonofre;OK, the problem is because you start ActiveMQ with the wrapper (and not the activemq script).

ActiveMQ 5.17.3 introduced a new JOLOKIA_CONF env variable (jolokia.conf system property) with the path to the Jolokia access file. Both bin/activemq.bat and bin/activemq scripts have been updated but I forgot to update wrapper configuration.

A simple workaround is to add the JOLOKIA_CONF in the wrapper configuration. I will fix that.;;;","05/Dec/22 07:27;jbonofre;I will also add a test (at least manual) to check wrapper behavior.;;;","05/Dec/22 07:57;lionel.cons;I confirm that adding the missing {{-Djolokia.conf=...}} line to {{wrapper.conf}} does fix the problem.

Many thanks for your very fast reply!;;;","05/Feb/23 06:32;jira-bot;Commit ed0177e445f7c5b75e4aa54f02de0f5757d8ab57 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ed0177e44 ]

[AMQ-9185] Define jolokia.conf system property in the wrapper
;;;","05/Feb/23 06:32;jira-bot;Commit 2f9b557e59aee1c542f0c03c824a3319d0a78d22 in activemq's branch refs/heads/main from JB Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2f9b557e5 ]

Merge pull request #966 from jbonofre/AMQ-9185

[AMQ-9185] Define jolokia.conf system property in the wrapper;;;","05/Feb/23 06:33;jira-bot;Commit c11a92a8528fbb28eeebd14a015c0e1c6500dfcf in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c11a92a85 ]

[AMQ-9185] Define jolokia.conf system property in the wrapper

(cherry picked from commit ed0177e445f7c5b75e4aa54f02de0f5757d8ab57)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MessageDelivered advisory causes NPE on non persistent broker when using transactions,AMQ-9175,13504997,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,21/Nov/22 16:01,21/Nov/22 16:12,13/Jul/23 08:27,21/Nov/22 16:12,5.17.2,,,,5.17.3,5.18.0,,Broker,,,,,0,,,,,I was doing some more testing and noticed that in the tests when using a non persistent broker (MemoryTransactionStore) there is a null pointer exception thrown when MessageDelivered is turned on as the ConnectionContext used by the transaction store does not set the broker like it should on the object.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 21 16:12:39 UTC 2022,,,,,,,,,,,"0|z1ckgg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Nov/22 16:03;jira-bot;Commit f83c5f1ba156ed850acf76dc42f944b4150d21f8 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f83c5f1ba ]

AMQ-9175 - Properly set broker on ConnectionContext inside
MemoryTransactionStores

This fixes a NPE when using the messageDelivered advisory and
transactions
;;;","21/Nov/22 16:12;jira-bot;Commit 20dc305a49c0538ef743043f12f3d075694c693f in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=20dc305a4 ]

AMQ-9175 - Properly set broker on ConnectionContext inside
MemoryTransactionStores

This fixes a NPE when using the messageDelivered advisory and
transactions

(cherry picked from commit f83c5f1ba156ed850acf76dc42f944b4150d21f8)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message expired advisory is not sent when Topic Subscriptions expire a message,AMQ-9168,13502884,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,16/Nov/22 11:42,16/Nov/22 11:54,13/Jul/23 08:27,16/Nov/22 11:54,5.17.2,,,,5.17.3,5.18.0,,Broker,,,,,0,,,,,"I noticed that when enabling advisories for expiration that Topic Subscriptions do not send the advisory. this is because the server code calls discard so the discard advisory is sent instead. This should be fixed so that if the message is expired by the subscription on the server (usually on dispatch) that the advisory sent is the expired and not discarded advisory.

Also, on another note, just like how we don't currently fire message consumed advisories for topic subscriptions for the same reason, expired advisories are not fired if the client does the expiration (only if server expires). This only applies to Topic subs (and not durable or queue subs) because Topic Subs are different in that they do not track the original message for dispatched messages. 

This is done for performance and to save memory as default topic prefetch is quite high at Short.MAX (over 32k) so just some metadata is saved. We would need to track the original message to be able to use it when the acks were sent by the client for consumed, expiration, etc to do this but since this feature seems to be rarely used and off by default probably not worth it for now. If we ever wanted to fix it we would likely want to lower prefetch to be a lot lower (maybe default 1000) like durables to prevent blowing heap.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 16 11:49:49 UTC 2022,,,,,,,,,,,"0|z1c7g8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Nov/22 11:45;jira-bot;Commit 757a712890996d71cf380c56fc2cefbd5a82ec88 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=757a71289 ]

AMQ-9168 - Send message expired advisory and not discard advisory when
Topic subscriptions expire a message

This fixes topic subs to send the right advisory type, if enabled, when
the server discards a message on dispatch to a topic sub. Also add some
more expiration tests for other subscription types
;;;","16/Nov/22 11:49;jira-bot;Commit f90a7bf5355e371972b7f4011779019c50d4ee48 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f90a7bf53 ]

AMQ-9168 - Send message expired advisory and not discard advisory when
Topic subscriptions expire a message

This fixes topic subs to send the right advisory type, if enabled, when
the server discards a message on dispatch to a topic sub. Also add some
more expiration tests for other subscription types

(cherry picked from commit 757a712890996d71cf380c56fc2cefbd5a82ec88)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix TwoSecureBrokerRequestReplyTest,AMQ-9167,13502727,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,jbonofre,jbonofre,15/Nov/22 16:35,16/Nov/22 04:10,13/Jul/23 08:27,15/Nov/22 22:08,,,,,5.17.3,5.18.0,,Test Cases,,,,,0,,,,,"TwoSecureBrokerRequestReplyTest is failing with:
{code:java}
[ERROR] org.apache.activemq.usecases.TwoSecureBrokerRequestReplyTest.testRequestReply  Time elapsed: 17.918 s  <<< FAILURE!
junit.framework.AssertionFailedError: reply message : 250, to: temp-queue://sender-39671-1668529111597-12:1:251, by consumer:sender-39671-1668529111597-12:1:1:251
        at junit.framework.Assert.fail(Assert.java:57)
        at junit.framework.Assert.assertTrue(Assert.java:22)
        at junit.framework.Assert.assertNotNull(Assert.java:256)
        at junit.framework.TestCase.assertNotNull(TestCase.java:399)
        at org.apache.activemq.usecases.TwoSecureBrokerRequestReplyTest.testRequestReply(TwoSecureBrokerRequestReplyTest.java:80)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
        at junit.framework.TestCase.runTest(TestCase.java:177)
        at junit.framework.TestCase.runBare(TestCase.java:142)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
        at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
        at junit.framework.TestResult$1.protect(TestResult.java:122)
        at junit.framework.TestResult.runProtected(TestResult.java:142)
        at junit.framework.TestResult.run(TestResult.java:125)
        at junit.framework.TestCase.run(TestCase.java:130)
        at junit.framework.TestSuite.runTest(TestSuite.java:241)
        at junit.framework.TestSuite.run(TestSuite.java:236)
        at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:377)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:284)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:248)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:167)
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
        at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
        at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
 {code}",,cshannon,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 16 04:10:33 UTC 2022,,,,,,,,,,,"0|z1c6hc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Nov/22 18:15;jbonofre;The test fails since this commit:
{code:java}
58666afffde7eb43509d155e709e76e6fdba8084 is the first bad commit
commit 58666afffde7eb43509d155e709e76e6fdba8084
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   Thu Nov 3 10:38:02 2022 -0400


    AMQ-9156 - Make sure in flight metrics are properly decremented on
    subscription destroys and dispatch failures


 .../broker/region/PrefetchSubscription.java        |  5 ++
 .../activemq/broker/region/TopicSubscription.java  | 24 +++++++-
 .../AbstractInflightMessageSizeTest.java           | 72 ++++++++++++++++++++--
 3 files changed, 94 insertions(+), 7 deletions(-) {code};;;","15/Nov/22 18:16;jbonofre;[~cshannon] any idea why your commit makes this test fails ?;;;","15/Nov/22 18:24;cshannon;Not sure, I will have to take a look later today when I get a chance.;;;","15/Nov/22 19:27;jbonofre;Thanks ! I will investigate tomorrow my time if you don’t have time. ;;;","15/Nov/22 22:01;jira-bot;Commit 8554a1464c6471f81ebbcd6c482376ae32cf6808 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8554a1464 ]

(AMQ-9156, AMQ-9167) - Update TopicSubscription to use a new counter for
current dispatched count

The previous way of computing the count of using total dispatched minus
total dequeued didn't work in the case of destination removal and
messages were not acked. The counter is needed as the dispatched list is
optional unlike prefetch subs.
;;;","15/Nov/22 22:02;jira-bot;Commit 46cdecf05f38b122fb834355192712ba0e611bdb in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=46cdecf05 ]

(AMQ-9156, AMQ-9167) - Update TopicSubscription to use a new counter for
current dispatched count

The previous way of computing the count of using total dispatched minus
total dequeued didn't work in the case of destination removal and
messages were not acked. The counter is needed as the dispatched list is
optional unlike prefetch subs.

(cherry picked from commit 8554a1464c6471f81ebbcd6c482376ae32cf6808)
;;;","15/Nov/22 22:08;cshannon;[~jbonofre] - This for pointing out the failure, it was a real failure. I fixed the issue, it has to do with the metrics. My other fix of properly removing messages from dispatch on destination removal exposed the issue in that trying to use total dispatched - total dequeues for pending queue size is bad because dequeues should only update on an ack (success, expired, etc). 

In the case of destination being deleted it doesn't make sense to me to increment dequeues since the message was never processed (never acked, expired, discarded, etc). The messages are just deleted so using a new counter makes the most sense and is a simple fix. Prefetch subscriptions (durables and queues) don't have this problem because while they also do not increment dequeue counter on destination removal, they just rely on the size of dispatched list for that metric as the dispatched list is mandatory for those subs unlike topic subs.

There's a ton of tests that rely on the getDispatchedQueueSize() so if the tests all pass we should be good.;;;","16/Nov/22 04:10;jbonofre;[~cshannon] Thanks ! I'm doing a new pass (preparing the release).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TopicSubscription should only remove nodes from dispatched list that match destination,AMQ-9159,13500978,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,10/Nov/22 21:16,17/Nov/22 14:11,13/Jul/23 08:27,10/Nov/22 21:19,5.17.2,,,,5.17.3,5.18.0,,Broker,,,,,0,,,,,"I found a minor issue on destination removal from TopicSubscriptions where the dispatched list is cleared but really only nodes that match the removed destination should be removed. There can be multiple destinations associated if it's a wild card consumer.  -I am putting this as minor as I don't think if it's a real issue in practice as you generally can't remove a destination from an active subscription so since they only get removed when the subscription is closed we would be cleaning up the entire list anyways.- 

-Either way i figure it's worth fixing. It's not easy to write a test just for this since closing the sub to remove the dest clears everything anyways (as I said) but there are plenty of existing tests that should exercise the change including the in flight statistics tests.-

Edit: I found there is an API method to remove 1 destination from an active wildcard sub so this is a bigger deal. I have a test case that shows this works now and I will push it shortly. If you pass in a timeout greater than 0 to the removeDestination() method in Region then it will just remove the sub from the dest and not fail. The BrokerView does this [here|https://github.com/apache/activemq/blob/2b81946e34805b7f08913cd37543729f2a3ed884/activemq-broker/src/main/java/org/apache/activemq/broker/jmx/BrokerView.java#L426] for JMX so it's definitely possible to do from JMX and by users. 

The new test shows that the statistics are correct which means the in flight nodes in the list are removed when the destination is gone.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 17 14:11:55 UTC 2022,,,,,,,,,,,"0|z1bvp4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Nov/22 21:17;jira-bot;Commit 837df23be66f9d22e4df61ae40cd70de34e064a7 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=837df23be ]

AMQ-9159 - In topic subscriptions only remove nodes from dispatched list if
they match the destination on destination removal
;;;","10/Nov/22 21:18;jira-bot;Commit 8062423dcdc11260347cb797a98f719de2dac7bd in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8062423dc ]

AMQ-9159 - In topic subscriptions only remove nodes from dispatched list if
they match the destination on destination removal

(cherry picked from commit 837df23be66f9d22e4df61ae40cd70de34e064a7)
;;;","17/Nov/22 14:10;jira-bot;Commit f6e26085cfa3693b2872b1c53354c674c0cbca49 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f6e26085c ]

AMQ-9159 - Add a test case to verify inflight message stats for wildcard
consumer when a destination is removed
;;;","17/Nov/22 14:11;jira-bot;Commit 29dcd3f8bf68bcb3c30acc43793caa9bb5b0d386 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=29dcd3f8b ]

AMQ-9159 - Add a test case to verify inflight message stats for wildcard
consumer when a destination is removed

(cherry picked from commit f6e26085cfa3693b2872b1c53354c674c0cbca49)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In flight destination statistics are not properly decremented on Topic sub failure or close,AMQ-9156,13494599,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,03/Nov/22 14:35,16/Nov/22 11:53,13/Jul/23 08:27,03/Nov/22 14:43,5.17.2,,,,5.17.3,5.18.0,,Broker,,,,,0,,,,,In flight statistics were enhanced back in AMQ-5837 and I noticed a small edge case issue for Topic subscriptions where the in flight count on the destination the topic subscription was consuming from would not be properly decremented on Topic subscription failure due to dispatch failure or on subscription close. We just need to make sure on failure/close the stats are updated properly (Prefetch subs already do this for queues/durables). I will push a small fix for this and a couple new tests.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 15 22:02:45 UTC 2022,,,,,,,,,,,"0|z1ascg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Nov/22 14:42;jira-bot;Commit 58666afffde7eb43509d155e709e76e6fdba8084 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=58666afff ]

AMQ-9156 - Make sure in flight metrics are properly decremented on
subscription destroys and dispatch failures
;;;","03/Nov/22 14:42;jira-bot;Commit 9c5a6219eafa3d02a4c00aaa00234063468ea411 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9c5a6219e ]

AMQ-9156 - Make sure in flight metrics are properly decremented on
subscription destroys and dispatch failures

(cherry picked from commit 58666afffde7eb43509d155e709e76e6fdba8084)
;;;","03/Nov/22 14:44;jira-bot;Commit 3bd099f4697e140bbb6c782ab0677d930f59518d in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3bd099f46 ]

AMQ-9156 - fix formatting
;;;","03/Nov/22 14:45;jira-bot;Commit 2306a26aef2680005396a109385d5913a53442d3 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2306a26ae ]

AMQ-9156 - fix formatting

(cherry picked from commit 3bd099f4697e140bbb6c782ab0677d930f59518d)
;;;","15/Nov/22 22:01;jira-bot;Commit 8554a1464c6471f81ebbcd6c482376ae32cf6808 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8554a1464 ]

(AMQ-9156, AMQ-9167) - Update TopicSubscription to use a new counter for
current dispatched count

The previous way of computing the count of using total dispatched minus
total dequeued didn't work in the case of destination removal and
messages were not acked. The counter is needed as the dispatched list is
optional unlike prefetch subs.
;;;","15/Nov/22 22:02;jira-bot;Commit 46cdecf05f38b122fb834355192712ba0e611bdb in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=46cdecf05 ]

(AMQ-9156, AMQ-9167) - Update TopicSubscription to use a new counter for
current dispatched count

The previous way of computing the count of using total dispatched minus
total dequeued didn't work in the case of destination removal and
messages were not acked. The counter is needed as the dispatched list is
optional unlike prefetch subs.

(cherry picked from commit 8554a1464c6471f81ebbcd6c482376ae32cf6808)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Slow Consumer Advisory for Queue subscriptions,AMQ-9153,13493994,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,01/Nov/22 10:42,01/Nov/22 14:32,13/Jul/23 08:27,01/Nov/22 14:32,5.17.2,,,,5.17.3,5.18.0,,,,,,,0,,,,,"The {{AdvisoryTests}} class was not running due to a bug with the the test configuration that is now fixed in AMQ-9152. The {{testSlowConsumerAdvisory}} test is now failing when run so this needs to be investigated to see if it's a real failure and something broke or if the test needs to be fixed.

After further investigation it turns out after changse in AMQ-1902 it no longer works at all for queues (only durables and topic subs) so it needs to be fixed.
",,cshannon,jira-bot,,,,,,,,,,"cshannon opened a new pull request, #927:
URL: https://github.com/apache/activemq/pull/927

   Due to changes with Queues to check if consumers are full before adding more messages to the subscription, the Queue dispatch logic needed to be updated to mark subscriptions as slow and send advisories if configured instead of relying on the subscription itself to do it.


;01/Nov/22 12:22;githubbot;600","cshannon commented on PR #927:
URL: https://github.com/apache/activemq/pull/927#issuecomment-1298482028

   > LGTM from a code standpoint. I'm doing a quick test.
   
   The advisory is off by default anyways and I doubt a lot of people use it. It's pretty spammy if you turn it on as it fires whenever prefetch is full (durable subs is the same way). The fact that no one complained in 10 years (or at least I don't recall but maybe someone created a Jira or posted on the mailing list) tells me there's probably not a lot of people that care.


;01/Nov/22 13:07;githubbot;600","jbonofre commented on PR #927:
URL: https://github.com/apache/activemq/pull/927#issuecomment-1298489421

   Yeah, agree, I don't think it's much used.


;01/Nov/22 13:12;githubbot;600","mattrpav commented on PR #927:
URL: https://github.com/apache/activemq/pull/927#issuecomment-1298505423

   @cshannon we've noticed the spammy behavior when advisoryForSlowConsumer is enabled and it is not a reliable source for monitoring. 
   
   I think long term, moving to more metrics is better than Advisories for monitoring related things. Advisory back pressure is a problem;01/Nov/22 13:24;githubbot;600","cshannon commented on PR #927:
URL: https://github.com/apache/activemq/pull/927#issuecomment-1298509865

   > @cshannon we've noticed the spammy behavior when advisoryForSlowConsumer is enabled and it is not a reliable source for monitoring.
   > 
   > I think long term, moving to more metrics is better than Advisories for monitoring related things. Advisory back pressure is a problem;01/Nov/22 13:27;githubbot;600","mattrpav commented on code in PR #927:
URL: https://github.com/apache/activemq/pull/927#discussion_r1010426705


##########
activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java:
##########
@@ -2210,6 +2210,16 @@ private PendingList doActualDispatch(PendingList list) throws Exception {
                         // no further dispatch of list to a full consumer to
                         // avoid out of order message receipt
                         fullConsumers.add(s);
+
+                        //For full consumers we need to mark that they are slow and
+                        // then call the broker.slowConsumer() hook if implemented
+                        if (s instanceof PrefetchSubscription) {

Review Comment:
   Should we honor the isAdvisoryForSlowConsumer config flag? Here or maybe better in the AdvisoryBroker. 



;01/Nov/22 13:30;githubbot;600","mattrpav commented on PR #927:
URL: https://github.com/apache/activemq/pull/927#issuecomment-1298515952

   > I'm not against having a different/better approach but I don't think we should remove any advisories. 
   
   Sure thing. I created [AMQ-9154](https://issues.apache.org/jira/browse/AMQ-9154) to track the improvement to add a SlowConsumerCount metric
   
   


;01/Nov/22 13:32;githubbot;600","cshannon commented on code in PR #927:
URL: https://github.com/apache/activemq/pull/927#discussion_r1010435045


##########
activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java:
##########
@@ -2210,6 +2210,16 @@ private PendingList doActualDispatch(PendingList list) throws Exception {
                         // no further dispatch of list to a full consumer to
                         // avoid out of order message receipt
                         fullConsumers.add(s);
+
+                        //For full consumers we need to mark that they are slow and
+                        // then call the broker.slowConsumer() hook if implemented
+                        if (s instanceof PrefetchSubscription) {

Review Comment:
   You can't really add that check here because that the callback could be used for many different things. Advisories is just one use case and implementation.



;01/Nov/22 13:33;githubbot;600","cshannon commented on code in PR #927:
URL: https://github.com/apache/activemq/pull/927#discussion_r1010435045


##########
activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java:
##########
@@ -2210,6 +2210,16 @@ private PendingList doActualDispatch(PendingList list) throws Exception {
                         // no further dispatch of list to a full consumer to
                         // avoid out of order message receipt
                         fullConsumers.add(s);
+
+                        //For full consumers we need to mark that they are slow and
+                        // then call the broker.slowConsumer() hook if implemented
+                        if (s instanceof PrefetchSubscription) {

Review Comment:
   You can't really add that check here because that callback could be used for many different things. Advisories is just one use case and implementation.



;01/Nov/22 13:33;githubbot;600","cshannon merged PR #927:
URL: https://github.com/apache/activemq/pull/927


;01/Nov/22 14:29;githubbot;600",,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,AMQ-9154,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 01 14:32:07 UTC 2022,,,,,,,,,,,"0|z1aomg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Nov/22 11:08;cshannon;It looks like this has been broken for 10 years. The change back in 2012 in this Jira AMQ-1902 prevents messages from being dispatched to *queue* subscriptions so the pending cursor ends up being 0 and the logic to detect the slow consumer never is true. It looks like durable subscriptions are fine.

This fix prevents adding to full consumers:
https://github.com/apache/activemq/blob/ba0b7a25a0fb8d225147748f28f69ba5abee01b5/activemq-broker/src/main/java/org/apache/activemq/broker/region/Queue.java#L2199

This is where the logic is supposed to check if it's slow:
https://github.com/apache/activemq/blob/ba0b7a25a0fb8d225147748f28f69ba5abee01b5/activemq-broker/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java#L670

;;;","01/Nov/22 14:30;jira-bot;Commit 596ee316874894ad0342475d8f242913bd507cd1 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=596ee3168 ]

AMQ-9153: Fix slow consumer advisory for queue subscriptions

Due to changes with Queues to check if consumers are full before adding
more messages to the subscription, the Queue dispatch logic needed to be
updated to mark subscriptions as slow and send advisories if configured
instead of relying on the subscription itself to do it.
;;;","01/Nov/22 14:32;jira-bot;Commit bc9e728123463c467cfd2b6125449f09db8c488c in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bc9e72812 ]

AMQ-9153: Fix slow consumer advisory for queue subscriptions

Due to changes with Queues to check if consumers are full before adding
more messages to the subscription, the Queue dispatch logic needed to be
updated to mark subscriptions as slow and send advisories if configured
instead of relying on the subscription itself to do it.

(cherry picked from commit 596ee316874894ad0342475d8f242913bd507cd1)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ unit tests are not running all tests,AMQ-9152,13493993,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,01/Nov/22 10:37,03/Nov/22 22:29,13/Jul/23 08:27,03/Nov/22 19:49,5.17.2,,,,5.17.3,5.18.0,,,,,,,0,,,,,"There is an include filter in the pom for activemq-unit-tests that is preventing all tests from running. It's only running tests that end in ""Test"" so it won't run things like ""AdvisoryTests"" since there is an s at the end. After changing this I already found one failing test in AdvisoryTests and there will probably be others so once we see what breaks we will need to go fix the tests or ignore them for now and then add a Jira to fix them later as they have likely been broken for a long time.",,cshannon,jbonofre,jira-bot,mattrpav,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 03 22:29:42 UTC 2022,,,,,,,,,,,"0|z1aom8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Nov/22 10:38;jira-bot;Commit ba0b7a25a0fb8d225147748f28f69ba5abee01b5 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ba0b7a25a ]

AMQ-9152: Fix surefire setup to run all tests that are not excluded
;;;","01/Nov/22 10:44;cshannon;[~mattrpav] and [~jbonofre] I figured the simplest thing here is to just go ahead and push this and see what breaks in CI and then go fix.;;;","01/Nov/22 10:57;robbie;Note of course that surefire still has a default (though using that will now pick up the '*Tests' you mentioned specifically).

https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#includes;;;","01/Nov/22 11:27;cshannon;Makes sense there's a default filter like that. I had figured surefire was just trying to scan all of src/test/java for Junit annotations or something like if no include filter but the default includes list makes more sense from a performance standpoint.;;;","01/Nov/22 12:58;jbonofre;[~cshannon] it makes sense. I will a new pass but we also have to improve CI/CD (too long, too flaky IMHO).;;;","01/Nov/22 13:00;cshannon;[~jbonofre] - We can also disable the tests if too slow or broken but the way it was it was inadvertently excluding tests that shouldn't be. We should explicitly exclude them with the exclude filter if they are flaky or fix them.;;;","01/Nov/22 13:03;jbonofre;[~cshannon] fully agree. In the last PR build, we had couple of timeouts, but most of flaky failure. I will do a pass to exclude the guilty ;);;;","01/Nov/22 13:18;mattrpav;[~cshannon] good catch, definitely on-board with pushing it in now. 

I've been thinking about approaches on cleaning up the unit tests. A number of things like breaking some up into separate maven modules (performance-related tests, etc) 

Also, junit5 may help from a management perspective.. using @Disabled annotation vs rules in the pom. When working in the IDE it takes an extra work flow step to check the pom to know if a test is included or not in the maven build;;;","01/Nov/22 13:24;cshannon;Yeah we could def split things up, it would make it easier to run certain categories of tests that you care about for quicker feedback when developing.;;;","01/Nov/22 21:50;jira-bot;Commit ea10d984d01c665ca1883cfcc38a66719f997596 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ea10d984d ]

AMQ-9152: Make test classes abstract to fix surefire plugin
;;;","03/Nov/22 19:49;jira-bot;Commit 81773c85d72373896deb3a5ff7c64a6a55971c98 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=81773c85d ]

AMQ-9152: Fix surefire setup to run all tests that are not excluded

(cherry picked from commit ba0b7a25a0fb8d225147748f28f69ba5abee01b5)
;;;","03/Nov/22 19:49;jira-bot;Commit 3047807763f7cf7f9791cb1272273c9161b08908 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=304780776 ]

AMQ-9152: Make test classes abstract to fix surefire plugin

(cherry picked from commit ea10d984d01c665ca1883cfcc38a66719f997596)
;;;","03/Nov/22 19:49;cshannon;I'm closing this as resolved as the tests are now running again. If there are specific tests that are broken or need to be ignored we can fix them in another Jira.;;;","03/Nov/22 22:29;cshannon;Tests keep timing out now after this so I opened a PR to increase the timeout, if that fails we will need to reopen this or create a new jira to hunt down which test is causing the build to always timeout with the error: *There was a timeout in the fork* : https://github.com/apache/activemq/pull/930;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jolokia throws exception during startup,AMQ-9126,13486687,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,cathodion,cathodion,17/Oct/22 18:57,02/Dec/22 19:41,13/Jul/23 08:27,29/Nov/22 06:42,5.17.2,,,,5.17.3,5.18.0,,Broker,,,,,0,,,,,"During startup of a freshly downloaded activemq-5.17.2 for windows the jolokia agent scrambles up the path of the jolokia-access.xml file, fails to open it, and throws an exception:
{code:java}
C:\Tools\Brokers\apache-activemq-5.17.2>bin\activemq start
Java Runtime: AdoptOpenJDK 11.0.7 C:\Tools\Java\jdk-11.0.7.10-hotspot
  Heap sizes: current=1048576k  free=1040894k  max=1048576k
    JVM args: -Dcom.sun.management.jmxremote -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\conf\login.config -Dactivemq.classpath=C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\conf;C:\Tools\Brokers\apache-activemq-5.17.2\bin\../conf;C:\Tools\Brokers\apache-activemq-5.17.2\bin\../conf; -Dactivemq.home=C:\Tools\Brokers\apache-activemq-5.17.2\bin\.. -Dactivemq.base=C:\Tools\Brokers\apache-activemq-5.17.2\bin\.. -Dactivemq.conf=C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\conf -Dactivemq.data=C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\data -Djava.io.tmpdir=C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\data\tmp
Extensions classpath:
  [C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\lib,C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\lib\camel,C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\lib\optional,C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\lib\web,C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\lib\extra]
ACTIVEMQ_HOME: C:\Tools\Brokers\apache-activemq-5.17.2\bin\..
ACTIVEMQ_BASE: C:\Tools\Brokers\apache-activemq-5.17.2\bin\..
ACTIVEMQ_CONF: C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\conf
ACTIVEMQ_DATA: C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\data
Loading message broker from: xbean:activemq.xml
 INFO | Using Persistence Adapter: KahaDBPersistenceAdapter[C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\data\kahadb]
 INFO | PListStore:[C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\data\localhost\tmp_storage] started
 INFO | Apache ActiveMQ 5.17.2 (localhost, ID:DESKTOP-ENEPHES-56664-1666030664750-0:1) is starting
 INFO | Listening for connections at: tcp://DESKTOP-ENEPHES:61616?maximumConnections=1000&wireFormat.maxFrameSize=104857600
 INFO | Connector openwire started
 INFO | Listening for connections at: amqp://DESKTOP-ENEPHES:5672?maximumConnections=1000&wireFormat.maxFrameSize=104857600
 INFO | Connector amqp started
 INFO | Listening for connections at: stomp://DESKTOP-ENEPHES:61613?maximumConnections=1000&wireFormat.maxFrameSize=104857600
 INFO | Connector stomp started
 INFO | Listening for connections at: mqtt://DESKTOP-ENEPHES:1883?maximumConnections=1000&wireFormat.maxFrameSize=104857600
 INFO | Connector mqtt started
 INFO | Starting Jetty server
 INFO | Creating Jetty connector
 WARN | ServletContext@o.e.j.s.ServletContextHandler@58437801{/,null,STARTING} has uncovered http methods for path: /
 INFO | Listening for connections at ws://DESKTOP-ENEPHES:61614?maximumConnections=1000&wireFormat.maxFrameSize=104857600
 INFO | Connector ws started
 INFO | Apache ActiveMQ 5.17.2 (localhost, ID:DESKTOP-ENEPHES-56664-1666030664750-0:1) started
 INFO | For help or more information please see: http://activemq.apache.org
 WARN | Store limit is 102400 mb (current store usage is 0 mb). The data directory: C:\Tools\Brokers\apache-activemq-5.17.2\bin\..\data\kahadb only has 95573 mb of usable space. - resetting to maximum available disk space: 95573 mb
 INFO | ActiveMQ WebConsole available at http://127.0.0.1:8161/
 INFO | ActiveMQ Jolokia REST API available at http://127.0.0.1:8161/api/jolokia/
 WARN | jolokia-agent: Error while accessing access restrictor at file:C:ToolsBrokersapache-activemq-5.17.2bin..conf/jolokia-access.xml. Denying all access to MBeans for security reasons. Exception: java.io.FileNotFoundException: C:ToolsBrokersapache-activemq-5.17.2bin..conf\jolokia-access.xml (Het systeem kan het opgegeven pad niet vinden)

{code}
It seems to have removed the slashes from the base path somehow.

No files have been changed after unpacking the zip distribution.

 

 ","Windows 10
Java 11",cathodion,jbonofre,jira-bot,Sreeni,,,,,,,,"jbonofre merged PR #944:
URL: https://github.com/apache/activemq/pull/944


;29/Nov/22 06:41;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,AMQ-8596,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 29 06:42:41 UTC 2022,,,,,,,,,,,"0|z19fog:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Oct/22 04:46;Sreeni;This is known issue in windows. Little google search would've given you this.

[https://stackoverflow.com/questions/72574570/activemq-startup-problem-on-windows-filenotfoundexception-for-jolokia-access-x]

Solution for this is:

on command prompt:
{code:java}
set ACTIVEMQ_HOME=C:\\Tools\\Brokers\\apache-activemq-5.17.2\\{code}
*and then run activemq.bat file.*;;;","28/Oct/22 14:28;cathodion;[~Sreeni] You're missing the point of my bug report. Users should not have to start googling solutions to know problems in the latest version of any product. We/they should solve the problem at the core. I'm reporting it because I'm guessing it might have eluded the developers attention.;;;","28/Oct/22 14:31;jbonofre;And it’s gonna be fix in next release that I plan next week. Thanks !;;;","29/Oct/22 17:48;Sreeni;[~cathodion] Apologies if offended you with my comment. I didn't mean it. Just to unblock you i mentioned like that.

 

[~jbonofre]  Thanks for addressing it.;;;","30/Oct/22 08:25;cathodion;[~jbonofre] Thanks for the feedback! Quick reponses like this are what makes it worth-while to halt my work for a minute and report things I think might be worth reporting.

[~Sreeni] No problem man. No offense taken. I rather see people responding than ignoring to my reports. :) ;;;","28/Nov/22 17:22;jbonofre;Actually the bug could be consider in Jolokia which require to double all \. I'm fixing the issue in activemq.bat by introducing a new JOLOKIA_CONF variable where I'm changing the \ by \\. I'm creating the PR.;;;","29/Nov/22 06:41;jira-bot;Commit 49626f07b67c09914d4b70548da6e198bd0de1e0 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=49626f07b ]

[AMQ-9126] Set jolokia.conf sys prop and escape cleanly on Windows platform
;;;","29/Nov/22 06:41;jira-bot;Commit 726cc68078926709cfbfd1f2d04770646e19e865 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=726cc6807 ]

Merge pull request #944 from jbonofre/AMQ-9126

[AMQ-9126] Set jolokia.conf sys prop and escape cleanly on Windows platform;;;","29/Nov/22 06:42;jira-bot;Commit 3f6ffd30d27d3ac3c11d27004eea850fa165c0b9 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3f6ffd30d ]

[AMQ-9126] Set jolokia.conf sys prop and escape cleanly on Windows platform

(cherry picked from commit 49626f07b67c09914d4b70548da6e198bd0de1e0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ not sending `RemoveInfo` advisory message to AMQP advisory consumers when a consumer disconnects.,AMQ-9119,13485999,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,jbonofre,tetlucas,tetlucas,13/Oct/22 01:38,13/Oct/22 03:55,13/Jul/23 08:27,13/Oct/22 03:55,5.15.11,5.16.0,,,5.16.6,5.17.3,5.18.0,AMQP,,,,,0,,,,,"When the consumer subscribed to the advisory topic uses AMQP it only receives ""ConsumerInfo"" (consumer=1) and never receives the ""RemoveInfo"" (consumer=0) message. If the consumer subscribed to the advisory topic uses Openwire both the ""ConsumerInfo"" and ""RemoveInfo"" messages are received as expected. This appears to be a regression related to AMQ-7068. 

 

In the logs we see an error like the following: 

{{WARN  AmqpSender                - Error detected while flushing outbound messages: No encoding is known for map entry value of type: org.apache.activemq.command.SessionId}}

 

We also noticed that the console shows the messages are Inflight but they are never received by the consumer: 

!image-2022-10-12-18-37-41-001.png|width=1627,height=478!

 

I have a fix and will prepare a PR right away. ",,jira-bot,tetlucas,,,,,,,,,,"jbonofre merged PR #919:
URL: https://github.com/apache/activemq/pull/919


;13/Oct/22 03:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,"13/Oct/22 01:37;tetlucas;image-2022-10-12-18-37-41-001.png;https://issues.apache.org/jira/secure/attachment/13050846/image-2022-10-12-18-37-41-001.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 13 03:54:17 UTC 2022,,,,,,,,,,,"0|z19bfk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Oct/22 03:54;jira-bot;Commit 3bcbc5b847da43f97125490925335d7ce45b53e8 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3bcbc5b84 ]

Merge pull request #919 from lucastetreault/AMQ-9119

[AMQ-9119] Fix serialization of RemoveInfo advisory message for AMQP consumers;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Closing many consumers causes CPU to spike to 100%,AMQ-9107,13484946,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,tetlucas,tetlucas,07/Oct/22 07:18,06/Nov/22 20:06,13/Jul/23 08:27,03/Nov/22 10:51,5.16.5,5.17.1,,,5.16.6,5.17.3,5.18.0,,,,,,0,,,,,"When there are many consumers (~188k) on a queue, closing them is incredibly expensive and causes the CPU to spike to 100% while the consumers are closed. Tested on an Amazon MQ mq.m5.large instance (2 vcpu, 8gb memory).

I have attached a minimal recreation of the issue where the following happens: 

1/ Open 100 connections.

2/ Create consumers as fast as we can on all of those connections until we hit at least 188k consumers.

3/ Sleep for 5 minutes so we can observe the CPU come back down after opening all those connections.

4/ Start closing consumers as fast as we can.

5/ After all consumers are closed, sleep for 5 minutes to observe the CPU come back down after closing all the connections.

 

In this example it seems 5 minutes wasn't actually sufficient time for the CPU to come back down and the consumer and connection counts seem to hit 0 at the same time: 

!image-2022-10-07-00-12-39-657.png|width=757,height=353!

 

In a previous test with more time sleeping after closing all the consumers we can see the CPU come back down before we close the connections. 

!image-2022-10-07-00-17-30-657.png|width=764,height=348!",,cshannon,jbonofre,jira-bot,tetlucas,,,,,,,,"lucastetreault opened a new pull request, #908:
URL: https://github.com/apache/activemq/pull/908

   Running a profiler while executing the sample code attached to [AMQ-9107](https://issues.apache.org/jira/browse/AMQ-9107) identified ManagedRegionBroker.removeConsumer as the bottleneck. The existing implementation loops over all the subscriptions to find the subscription for the consumer we want to close. When we have n consumers and we want to close them all this for loop is O(n^2) and when n is big enough it creates a serious performance issue. With 188,000 consumers we observe the CPU at 100% for ~40 minutes while all the connections are closed: 
   
   <img width=""1217"" alt=""image"" src=""https://user-images.githubusercontent.com/7095337/195011857-a6971abb-b73c-41fd-bd88-9ab376388949.png"">
   
   
   After this PR, running the same test case we observe a spike in CPU of only one minute or less, similar to what it took to create the consumers: 
   
   <img width=""968"" alt=""image"" src=""https://user-images.githubusercontent.com/7095337/195017869-c17c8b4a-fabc-4c2c-a909-6073955613a1.png"">
   
   I ran the full suite of tests and everything is passing.
   
   


;11/Oct/22 07:11;githubbot;600","jbonofre merged PR #908:
URL: https://github.com/apache/activemq/pull/908


;13/Oct/22 03:58;githubbot;600","mattrpav commented on PR #908:
URL: https://github.com/apache/activemq/pull/908#issuecomment-1277675599

   In the doStop();13/Oct/22 14:09;githubbot;600","mattrpav commented on code in PR #908:
URL: https://github.com/apache/activemq/pull/908#discussion_r994672165


##########
activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagedRegionBroker.java:
##########
@@ -215,6 +217,7 @@ public ObjectName registerSubscription(ConnectionContext context, Subscription s
                 registerSubscription(objectName, sub.getConsumerInfo(), key, view);
             }
             subscriptionMap.put(sub, objectName);
+            consumerSubscriptionMap.put(sub.getConsumerInfo(), sub);

Review Comment:
   Was this tested with an offline durable topic subscription? I'm thinking this will return null here



;13/Oct/22 14:09;githubbot;600","jbonofre commented on code in PR #908:
URL: https://github.com/apache/activemq/pull/908#discussion_r994700232


##########
activemq-broker/src/main/java/org/apache/activemq/broker/jmx/ManagedRegionBroker.java:
##########
@@ -215,6 +217,7 @@ public ObjectName registerSubscription(ConnectionContext context, Subscription s
                 registerSubscription(objectName, sub.getConsumerInfo(), key, view);
             }
             subscriptionMap.put(sub, objectName);
+            consumerSubscriptionMap.put(sub.getConsumerInfo(), sub);

Review Comment:
   Good catch, that's possible. At least we should test if `sub` is not null.



;13/Oct/22 14:12;githubbot;600","mattrpav commented on PR #908:
URL: https://github.com/apache/activemq/pull/908#issuecomment-1277726391

   >         registeredMBeans.clear();
   
   We probably at least need a unit test to verify after stop that all the collections are size == 0


;13/Oct/22 14:42;githubbot;600","lucastetreault commented on PR #908:
URL: https://github.com/apache/activemq/pull/908#issuecomment-1278493980

   Hey Matt, as discussed on slack. I'll have a look and add some tests in the next few days. Just wanted to add a comment here in case others were following along :) 


;14/Oct/22 05:14;githubbot;600","jbonofre commented on PR #908:
URL: https://github.com/apache/activemq/pull/908#issuecomment-1278500436

   @lucastetreault thanks ! Much appreciated. You can create a new PR, I will do a review. Thanks again !


;14/Oct/22 05:24;githubbot;600","lucastetreault commented on PR #908:
URL: https://github.com/apache/activemq/pull/908#issuecomment-1279653855

   > In the doStop();15/Oct/22 04:21;githubbot;600","lucastetreault opened a new pull request, #920:
URL: https://github.com/apache/activemq/pull/920

   As per Matt's request [here](https://github.com/apache/activemq/pull/908#discussion_r994672165), adding a test to make sure offline durable subscribers can be added/removed as usual. 


;15/Oct/22 04:22;githubbot;600","lucastetreault commented on PR #908:
URL: https://github.com/apache/activemq/pull/908#issuecomment-1279778668

   I created [AMQ-9123](https://issues.apache.org/jira/browse/AMQ-9123) to follow up on clearing the collections when the broker is stopped. I'll make the changes soon and run all the tests to make sure things are still behaving as expected. 


;15/Oct/22 16:32;githubbot;600","lucastetreault commented on PR #920:
URL: https://github.com/apache/activemq/pull/920#issuecomment-1279781189

   Pushed an empty commit to trigger the tests again. All the tests passed on my own Jenkins for this commit 🤷‍♂️


;15/Oct/22 16:46;githubbot;600","lucastetreault commented on PR #920:
URL: https://github.com/apache/activemq/pull/920#issuecomment-1283021251

   @mattrpav, I added a test case to the MBeanTest. Hopefully more in line with what you were thinking. 


;18/Oct/22 21:22;githubbot;600","jbonofre commented on PR #920:
URL: https://github.com/apache/activemq/pull/920#issuecomment-1296566972

   LGTM, thanks. I will manually merge to squash the two commits in one.


;31/Oct/22 05:39;githubbot;600","jbonofre closed pull request #920: [AMQ-9107] Add a test for offline durable subscriptions
URL: https://github.com/apache/activemq/pull/920


;01/Nov/22 06:07;githubbot;600","cshannon opened a new pull request, #928:
URL: https://github.com/apache/activemq/pull/928

   
   This new approach just looks matching Subscriptions from the region for the destination which prevents having to store another map and falls back to the old approach if something went wrong.


;01/Nov/22 17:17;githubbot;600","cshannon commented on PR #928:
URL: https://github.com/apache/activemq/pull/928#issuecomment-1298861953

   still a work in progress, need to double check for multiple matching subscriptions


;01/Nov/22 17:21;githubbot;600","mattrpav commented on PR #928:
URL: https://github.com/apache/activemq/pull/928#issuecomment-1298991095

   @cshannon should we have a test for wildcard consumers?


;01/Nov/22 19:12;githubbot;600","cshannon commented on PR #928:
URL: https://github.com/apache/activemq/pull/928#issuecomment-1299090316

   @mattrpav , @jbonofre . @lucastetreault - This is ready for review, see what you think. Part of this commit reverts the previous change and updates with a new test.
   
   Because technically ConsumerInfos can be associated with multiple Subscriptions and because ConsumerInfo objects can change if a durable subscription goes offline and back online I thought it was generally a bad idea to store a map associating them as you'd have to keep it up to date on changes with durables (memory leak in the original PR because of that) and doesn't really work for one to many association of composite destinations even if rarely used.
   
   The new approach here is to just use the existing Regions that already handle all of that and track in a concurrent map consumer ids and subscriptions so all we have to do is look through the region or regions (if composite) to grab the subs and then we are good. We shouldn't need it but I added a fail safe where it falls back on Exception or if it couldn't find a sub using the new method but that shouldn't happen unless something went very wrong.
   
   I would expect performance to still be much better than before and similar to the previous commit as we are still just looking up the subscriptions in concurrent maps vs iterating.


;01/Nov/22 20:20;githubbot;600","cshannon merged PR #928:
URL: https://github.com/apache/activemq/pull/928


;03/Nov/22 10:43;githubbot;600","lucastetreault commented on PR #928:
URL: https://github.com/apache/activemq/pull/928#issuecomment-1304744663

   Hey @cshannon, I had a chance to look at this today. I ran the example app against a build including this change and the performance seems good 👍  
   
   I was trying to understand what I missed in my original changes. I ran the tests you added without your changes to ManagedRegionBroker (e.g.: https://github.com/apache/activemq/compare/main...lucastetreault:activemq:AMQ-9107-test) expecting failures but all the tests are passing even with the addition of checking that `consumerSubscriptionMap` is empty. Can you help me understand what I'm missing? 
   
   As for the memory leak, it seems I missed one spot where I should have been removing from consumerSubscriptionMap in `public void unregisterSubscription(Subscription sub)` around [line 300](https://github.com/apache/activemq/compare/main...lucastetreault:activemq:AMQ-9107-test#diff-17798bd5f1fa8141e349c916704b7f1d7ff660f02bd3582ef696344a5bb3c723R300). I added a quick and dirty test [here](https://github.com/apache/activemq/compare/main...lucastetreault:activemq:AMQ-9107-test#diff-aa152194070293f1fb21ac1c45654d8041aa45cc3a6770aae3b3fd85961db08fR175) that passes now.  


;06/Nov/22 08:17;githubbot;600","cshannon commented on PR #928:
URL: https://github.com/apache/activemq/pull/928#issuecomment-1304835694

   @lucastetreault  - The main issue here was the memory leak with durable subscriptions closing and coming back online with new consumers. This could have been fixed of course and your original fix probably would have been ok to keep. But besides the issue with the memory leak, I went with a different approach for 1 main reason which I thought was important and a secondary reason.
   
   1. The primary reason I decided to go with the new approach is my implementation now avoids having to track duplicate metadata. Since the information is already tracked in the `ManagedRegionBroker` (since it extends `RegionBroker`) in the different `Regions` objects and well tested for a long time it made more sense to me to just use the existing maps so we don't have to worry about the extra logic of trying to track new maps/metadata and verifying things will work and are kept in sync since it's already there and tested. I saw zero benefit of attempting to track something again that we already track and can easily look up and only drawbacks in terms of now something else to keep in sync and update and things like memory leaks which happened.
   2. A more minor secondary thing was you made the assumption that there is always a 1 to 1 mapping of ConsumerInfo to subscriptions. I think this is minor because this is usually the case (and I'd have to check but I think is always be the case now) even with composite destinations which is why the composite destination test works since it shares a subscription. However, in theory, this doesn't have to be which is why the original code was looking through all subscriptions for a matching ConsumerInfo and my approach preserves that by finding all subscriptions that match in the different Regions. The Regions implementation uses a 1 to 1 mapping of consumer id to subs but it also checks each region and if for some reason the code in the different regions ever associated more than one Consumer to subscription the new approach would still work.
   
   In regards to the tests passing, it's because the main issue was the memory leak and my test class of course doesn't try and check the map that had the memory leak (`consumerSubscriptionMap`) since it no longer exists in my PR. If I run my test against your original fix and update the `testDurableConsumerRemoval` test to check that `consumerSubscriptionMap ` is size zero at the end after all consumers close (which it should be), it's not and is still 1000 and the test fails. I assume of course it would be fine if you fixed that memory leak.


;06/Nov/22 16:12;githubbot;600","lucastetreault commented on PR #928:
URL: https://github.com/apache/activemq/pull/928#issuecomment-1304882686

   Thanks for the explanation @cshannon! 


;06/Nov/22 20:06;githubbot;600",,0,13800,,,0,13800,,,,,,,,,,,,,,,,,,,,,,"07/Oct/22 07:12;tetlucas;example.zip;https://issues.apache.org/jira/secure/attachment/13050131/example.zip","07/Oct/22 07:12;tetlucas;image-2022-10-07-00-12-39-657.png;https://issues.apache.org/jira/secure/attachment/13050132/image-2022-10-07-00-12-39-657.png","07/Oct/22 07:17;tetlucas;image-2022-10-07-00-17-30-657.png;https://issues.apache.org/jira/secure/attachment/13050130/image-2022-10-07-00-17-30-657.png",,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 03 10:51:02 UTC 2022,,,,,,,,,,,"0|z19500:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Oct/22 07:31;jbonofre;What transport is used by the client / broker ? TCP, HTTP, ... ?;;;","07/Oct/22 07:35;tetlucas;We're using openwire+ssl. I haven't tested with any other transports. ;;;","13/Oct/22 03:58;jira-bot;Commit 96a011d4b1527590b07d6e74f4c6f9a06dbab409 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=96a011d4b ]

Merge pull request #908 from lucastetreault/AMQ-9107

[AMQ-9107] Remove consumers more efficiently in ManagedRegionBroker;;;","01/Nov/22 06:06;jira-bot;Commit 98b7d3443cca2be964637962f86d265b8375c632 in activemq's branch refs/heads/main from Lucas Tétreault
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=98b7d3443 ]

Add a test for offline durable subscriptions for AMQ-9107
;;;","01/Nov/22 06:06;jira-bot;Commit fb89765fdf19602ba9be4034fa88123b7b127c4a in activemq's branch refs/heads/activemq-5.17.x from Lucas Tétreault
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fb89765fd ]

Add a test for offline durable subscriptions for AMQ-9107

(cherry picked from commit 98b7d3443cca2be964637962f86d265b8375c632)
;;;","01/Nov/22 14:41;cshannon;This doesn't have nearly enough testing around durable subscriptions and this causes a memory leak. ConsumerInfo is not great to use as the key because that object will change every time a consumer goes offline/online for a durable subscription. I just ran a test where I went online/offline several times in a row for a durable and the new map kept growing because the consumer id changed each time.

The performance improvement would be nice but I'm skeptical about using ConsumerInfo as a key here unless a lot more testing is done to prove no memory leaks and things actually work for all edge cases including broker restarts, etc.

Also, by introducing a second map you now have created race conditions because the maps may get out of sync with some weird bug.;;;","01/Nov/22 15:57;cshannon;I'm working on an alternate approach to this and will have a PR ready soon.;;;","01/Nov/22 16:00;jbonofre;I think the current approach is fine, using ConsumerInfo is interesting because it's there. If you have a better approach, that's fine.

By the way, I would like to submit 5.17.3 to vote asap. If you want me to include your change, please let me know. Thanks !;;;","01/Nov/22 16:11;cshannon;The current approach is not fine considering it causes a memory leak.;;;","01/Nov/22 16:17;jbonofre;I don't see where as ConsumerInfo is not store in the subscription. The change only use the ConsumerInfo ""one shot"" afair.

Maybe I'm missing something here. I did some simple tests without issue.

Feel free to propose another way. Do you want me to rollback this change ?;;;","01/Nov/22 16:21;cshannon;I will be pushing up another change in 5 minutes, it causes a memory leak because ConsumerInfo can change when durables go offline and online again. ;;;","01/Nov/22 16:23;tetlucas;[~cshannon] I can have another look this evening. In the meantime, if you want me to revert this to unblock the 5.17.3 vote JB is working on I can do that.

 ;;;","01/Nov/22 16:36;cshannon;Also the other issue is composite destinations (which is why it was looking through all the subscriptions). There might be multiple subscriptions mapped to the same ConsumerInfo. I'm reworking my commit to handle that too.;;;","01/Nov/22 16:37;cshannon;This needs more time, I would say revert it and then we can revisit for 5.17.4 with my new approach;;;","01/Nov/22 17:21;cshannon;I created a draft PR here: https://github.com/apache/activemq/pull/928

I'm still not sure if it will work entirely yet because of the fact that I think multiple subscriptions can be attached to one ConsumerInfo object (different destinations). I covered the composite case but not sure if there's other cases without looking at it more. But the fact that the previous commit was iterating through all subscriptions to find matching ConsumerInfo objects tells me that it's probably not always a 1 to 1 mapping but my assumption is that is only for Composite destinations so this will probably work.

I have to step away for a bit but can look more later today. If you guys get a chance to look let me know what you think and how performance looks to you, etc.;;;","01/Nov/22 20:22;cshannon;PR updated and ready for review;;;","03/Nov/22 10:44;jira-bot;Commit d46b74d674c2a67193bb95384290da266adf9a25 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d46b74d67 ]

AMQ-9107 - rework performance improvement for consumer closing in
managed region broker

This new approach just looks matching Subscriptions from the region for the
destination which prevents having to store another map and falls back to
the old approach if something went wrong.
;;;","03/Nov/22 10:50;jira-bot;Commit 2399c637b50eb867a1c7402eb4f9d4951122fd92 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2399c637b ]

AMQ-9107 - rework performance improvement for consumer closing in
managed region broker

This new approach just looks matching Subscriptions from the region for the
destination which prevents having to store another map and falls back to
the old approach if something went wrong.

(cherry picked from commit d46b74d674c2a67193bb95384290da266adf9a25)
;;;","03/Nov/22 10:51;jira-bot;Commit 8cc7a4545510197fe3074ed598a811bdef6bd5d8 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8cc7a4545 ]

AMQ-9107 - rework performance improvement for consumer closing in
managed region broker

This new approach just looks matching Subscriptions from the region for the
destination which prevents having to store another map and falls back to
the old approach if something went wrong.

(cherry picked from commit d46b74d674c2a67193bb95384290da266adf9a25)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP Proxy Exclusions are not applied to ActiveMQ Connections,AMQ-9102,13484436,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,bsi-swg,bsi-swg,04/Oct/22 12:32,25/Nov/22 17:26,13/Jul/23 08:27,25/Nov/22 17:26,5.16.3,,,,5.17.3,5.18.0,,,,,,,0,,,,,"In [this commit|https://github.com/apache/activemq/commit/1ced34a383c5e3910c582fd3bfd720a8f6fcde32] basic HTTP-Proxy support using the default properties was added to ActiveMQ, however the implementation does not account for the [exclusion list in property ""http.nonProxyHosts""|https://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html], which leads to issues in environments that use a system proxy, but exclude certain targets from proxy usage.

Given the implementation in {{HttpTransportSupport}} (in particular {{{}getProxyHost(){}}}) and {{HttpClientTransport}} (in particular creation of the HTTP Client) there is no way to use ActiveMQ in a mixed non-proxy/proxy environment.",,bsi-swg,jira-bot,,,,,,,,,,"jbonofre commented on PR #942:
URL: https://github.com/apache/activemq/pull/942#issuecomment-1322415505

   @mattrpav not sure we have already tests on HttpConnector proxy support. Let me check.


;21/Nov/22 17:30;githubbot;600","jbonofre commented on PR #942:
URL: https://github.com/apache/activemq/pull/942#issuecomment-1323283452

   @mattrpav I checked and we don't have any test around proxy (getProxyPort() is not actually HTTP proxy, it's just port found locally for the test). I tested manually and it looks good.


;22/Nov/22 08:24;githubbot;600","jbonofre merged PR #942:
URL: https://github.com/apache/activemq/pull/942


;25/Nov/22 17:24;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 25 17:25:26 UTC 2022,,,,,,,,,,,"0|z191uw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Nov/22 17:24;jira-bot;Commit 44a5539afc689f23c63a0d2e1786b48c0e52f3c3 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=44a5539af ]

[AMQ-9102] Add http.nonProxyHost support in HTTP transport
;;;","25/Nov/22 17:24;jira-bot;Commit a530142fd5e5237efa254fd222be52af5bdd8ac3 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a530142fd ]

Merge pull request #942 from jbonofre/AMQ-9102

[AMQ-9102] Add http.nonProxyHost support in HTTP transport;;;","25/Nov/22 17:25;jira-bot;Commit 60e79ed3d5aef3c3d9557d8b86e7a21c5a3ae2a1 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=60e79ed3d ]

[AMQ-9102] Add http.nonProxyHost support in HTTP transport

(cherry picked from commit 44a5539afc689f23c63a0d2e1786b48c0e52f3c3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.17.1: Web Console is not working in KARAF 4.4.1,AMQ-9062,13478591,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,Bayoudh,Bayoudh,25/Aug/22 08:10,21/Mar/23 08:13,13/Jul/23 08:27,21/Mar/23 08:13,5.17.3,,,,,,,OSGi/Karaf,,,,,0,,,,,"Hi there, 

I installed activemq in my karaf container and wanted to use its web console. ActiveMQ is working fine and the whole environment is working well. I only need to get the web-console working. But unfortunatly i got this Error. 

_*""Web-ContextPath manifest header of org.apache.activemq.web-console [135] specifies invalid context path: activemqweb. This bundle will not be processed.""*_

*my activemq.xml contains the following configuration:*


{color:#808080}<{color}{color:#569cd6}beans{color}
{color:#d4d4d4} {color}{color:#9cdcfe}xmlns{color}{color:#d4d4d4}={color}{color:#ce9178}""http://www.springframework.org/schema/beans""{color}
{color:#d4d4d4} {color}{color:#9cdcfe}xmlns:xsi{color}{color:#d4d4d4}={color}{color:#ce9178}""http://www.w3.org/2001/XMLSchema-instance""{color}
{color:#d4d4d4} {color}{color:#9cdcfe}xsi:schemaLocation{color}{color:#d4d4d4}={color}{color:#ce9178}""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd{color}
{color:#ce9178} http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd""{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}import{color}{color:#d4d4d4} {color}{color:#9cdcfe}resource{color}{color:#d4d4d4}={color}{color:#ce9178}""jetty.xml""{color}{color:#808080}/>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}broker{color}{color:#d4d4d4} {color}{color:#9cdcfe}xmlns{color}{color:#d4d4d4}={color}{color:#ce9178}""http://activemq.apache.org/schema/core""{color}
{color:#d4d4d4} {color}{color:#9cdcfe}brokerName{color}{color:#d4d4d4}={color}{color:#ce9178}""${broker-name}""{color}
{color:#d4d4d4} {color}{color:#9cdcfe}dataDirectory{color}{color:#d4d4d4}={color}{color:#ce9178}""${data}""{color}
{color:#d4d4d4} {color}{color:#9cdcfe}start{color}{color:#d4d4d4}={color}{color:#ce9178}""false""{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}destinationPolicy{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}policyMap{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}policyEntries{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}policyEntry{color}{color:#d4d4d4} {color}{color:#9cdcfe}topic{color}{color:#d4d4d4}={color}{color:#ce9178}"">""{color}{color:#d4d4d4} {color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}pendingMessageLimitStrategy{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}constantPendingMessageLimitStrategy{color}{color:#d4d4d4} {color}{color:#9cdcfe}limit{color}{color:#d4d4d4}={color}{color:#ce9178}""1000""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}pendingMessageLimitStrategy{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}policyEntry{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}policyEntries{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}policyMap{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}destinationPolicy{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}managementContext{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}managementContext{color}{color:#d4d4d4} {color}{color:#9cdcfe}createConnector{color}{color:#d4d4d4}={color}{color:#ce9178}""false""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}managementContext{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}persistenceAdapter{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}kahaDB{color}{color:#d4d4d4} {color}{color:#9cdcfe}directory{color}{color:#d4d4d4}={color}{color:#ce9178}""${data}/kahadb""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}persistenceAdapter{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}plugins{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#6a9955}<!--<jaasAuthenticationPlugin configuration=""karaf"" />-->{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}plugins{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}systemUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}systemUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}memoryUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}memoryUsage{color}{color:#d4d4d4} {color}{color:#9cdcfe}percentOfJvmHeap{color}{color:#d4d4d4}={color}{color:#ce9178}""70""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}memoryUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}storeUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}storeUsage{color}{color:#d4d4d4} {color}{color:#9cdcfe}limit{color}{color:#d4d4d4}={color}{color:#ce9178}""100 gb""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}storeUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}tempUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}tempUsage{color}{color:#d4d4d4} {color}{color:#9cdcfe}limit{color}{color:#d4d4d4}={color}{color:#ce9178}""50 gb""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}tempUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}systemUsage{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}systemUsage{color}{color:#808080}>{color}

{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}transportConnectors{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#6a9955}<!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->{color}
{color:#d4d4d4} {color}{color:#808080}<{color}{color:#569cd6}transportConnector{color}{color:#d4d4d4} {color}{color:#9cdcfe}name{color}{color:#d4d4d4}={color}{color:#ce9178}""openwire""{color}{color:#d4d4d4} {color}{color:#9cdcfe}uri{color}{color:#d4d4d4}={color}{color:#ce9178}""tcp://0.0.0.0:61616?maximumConnections=1000{color}{color:#569cd6}&amp;{color}{color:#ce9178}wireFormat.maxFrameSize=104857600""{color}{color:#808080}/>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}transportConnectors{color}{color:#808080}>{color}
{color:#d4d4d4} {color}{color:#808080}</{color}{color:#569cd6}broker{color}{color:#808080}>{color}

{color:#808080}</{color}{color:#569cd6}beans{color}{color:#808080}>{color}
 

 

 ",,Bayoudh,jbonofre,jira-bot,,,,,,,,,"jbonofre merged PR #941:
URL: https://github.com/apache/activemq/pull/941


;22/Nov/22 07:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,"05/Dec/22 13:05;Bayoudh;image-2022-12-05-14-05-20-658.png;https://issues.apache.org/jira/secure/attachment/13053539/image-2022-12-05-14-05-20-658.png","05/Dec/22 13:33;Bayoudh;image-2022-12-05-14-33-39-077.png;https://issues.apache.org/jira/secure/attachment/13053540/image-2022-12-05-14-33-39-077.png",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,english,Tue Mar 21 08:13:25 UTC 2023,,,,,,,,,,,"0|z1825s:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"22/Nov/22 07:56;jira-bot;Commit c563f6e35572d0d4a0b268190c1600c9e2441b62 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c563f6e35 ]

[AMQ-9062] Fix Web-ContextPath with Pax Web 8.0.x
;;;","22/Nov/22 07:56;jira-bot;Commit 75e6c5bddc21c6dc3b4c66fce7d58bbd6fd8dcd3 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=75e6c5bdd ]

Merge pull request #941 from jbonofre/AMQ-9062

[AMQ-9062] Fix Web-ContextPath with Pax Web 8.0.x;;;","22/Nov/22 07:59;jira-bot;Commit b5126f6e7bcd5bee1bfef3e8cee4b7f614cc16d7 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b5126f6e7 ]

[AMQ-9062] Fix Web-ContextPath with Pax Web 8.0.x

(cherry picked from commit c563f6e35572d0d4a0b268190c1600c9e2441b62)
;;;","05/Dec/22 13:03;Bayoudh;I was waiting for 5.17.3 to get the fix on the ui but unfortunatly it's always not working: this is the Backtrace which I am getting when i call [http://localhost:8181/activemqweb/ with message: |http://localhost:8181/activemqweb/]

Exception occurred while processing this request, check the log for more information!


Backtrace: 

12:51:12.007 WARN  [qtp361075209-605] /activemqweb/
javax.servlet.ServletException: org.apache.jasper.JasperException: /index.jsp (line: [23], column: [1]) JSP file [decorators/head.jsp] not found
    at org.ops4j.pax.web.service.jetty.internal.PrioritizedHandlerCollection.handle(PrioritizedHandlerCollection.java:103)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
    at org.eclipse.jetty.server.Server.handle(Server.java:516)
    at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
    at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
    at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
    at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
    at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
    at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
    at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
    at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.apache.jasper.JasperException: /index.jsp (line: [23], column: [1]) JSP file [decorators/head.jsp] not found
    at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:41)
    at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:292)
    at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:98)
    at org.apache.jasper.compiler.Parser.processIncludeDirective(Parser.java:349)
    at org.apache.jasper.compiler.Parser.parseIncludeDirective(Parser.java:384)
    at org.apache.jasper.compiler.Parser.parseDirective(Parser.java:485)
    at org.apache.jasper.compiler.Parser.parseFileDirectives(Parser.java:1802)
    at org.apache.jasper.compiler.Parser.parse(Parser.java:141)
    at org.apache.jasper.compiler.ParserController.doParse(ParserController.java:245)
    at org.apache.jasper.compiler.ParserController.parseDirectives(ParserController.java:128)
    at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:202)
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:391)
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:367)
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:351)
    at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:605)
    at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:399)
    at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
    at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
    at org.ops4j.pax.web.jsp.JspServlet.service(JspServlet.java:58)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedServlet.service(OsgiInitializedServlet.java:102)
    at org.eclipse.jetty.servlet.ServletHolder$NotAsync.service(ServletHolder.java:1459)
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799)
    at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656)
    at org.ops4j.pax.web.service.spi.servlet.OsgiFilterChain.doFilter(OsgiFilterChain.java:100)
    at org.ops4j.pax.web.service.jetty.internal.PaxWebServletHandler.doHandle(PaxWebServletHandler.java:310)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:618)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:229)
    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:81)
    at org.eclipse.jetty.server.ResourceService.sendWelcome(ResourceService.java:440)
    at org.eclipse.jetty.server.ResourceService.doGet(ResourceService.java:257)
    at org.ops4j.pax.web.service.jetty.internal.web.DefaultServlet.doGet(DefaultServlet.java:468)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:497)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedServlet.service(OsgiInitializedServlet.java:102)
    at org.eclipse.jetty.servlet.ServletHolder$NotAsync.service(ServletHolder.java:1459)
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799)
    at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656)
    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedFilter.doFilter(OsgiInitializedFilter.java:176)
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)
    at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedFilter.doFilter(OsgiInitializedFilter.java:176)
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:201)
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)
    at org.ops4j.pax.web.service.spi.servlet.OsgiFilterChain.doFilter(OsgiFilterChain.java:100)
    at org.ops4j.pax.web.service.jetty.internal.PaxWebServletHandler.doHandle(PaxWebServletHandler.java:310)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
    at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:234)
    at org.ops4j.pax.web.service.jetty.internal.PrioritizedHandlerCollection.handle(PrioritizedHandlerCollection.java:96)
    ... 17 more
12:51:18.960 WARN  [qtp361075209-599] /activemqweb/
javax.servlet.ServletException: org.apache.jasper.JasperException: /index.jsp (line: [23], column: [1]) JSP file [decorators/head.jsp] not found
    at org.ops4j.pax.web.service.jetty.internal.PrioritizedHandlerCollection.handle(PrioritizedHandlerCollection.java:103)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
    at org.eclipse.jetty.server.Server.handle(Server.java:516)
    at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
    at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
    at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
    at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
    at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:338)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:315)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:173)
    at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)
    at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:409)
    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
    at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
    at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.apache.jasper.JasperException: /index.jsp (line: [23], column: [1]) JSP file [decorators/head.jsp] not found
    at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:41)
    at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:292)
    at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:98)
    at org.apache.jasper.compiler.Parser.processIncludeDirective(Parser.java:349)
    at org.apache.jasper.compiler.Parser.parseIncludeDirective(Parser.java:384)
    at org.apache.jasper.compiler.Parser.parseDirective(Parser.java:485)
    at org.apache.jasper.compiler.Parser.parseFileDirectives(Parser.java:1802)
    at org.apache.jasper.compiler.Parser.parse(Parser.java:141)
    at org.apache.jasper.compiler.ParserController.doParse(ParserController.java:245)
    at org.apache.jasper.compiler.ParserController.parseDirectives(ParserController.java:128)
    at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:202)
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:391)
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:367)
    at org.apache.jasper.compiler.Compiler.compile(Compiler.java:351)
    at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:605)
    at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:399)
    at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
    at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
    at org.ops4j.pax.web.jsp.JspServlet.service(JspServlet.java:58)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedServlet.service(OsgiInitializedServlet.java:102)
    at org.eclipse.jetty.servlet.ServletHolder$NotAsync.service(ServletHolder.java:1459)
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799)
    at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656)
    at org.ops4j.pax.web.service.spi.servlet.OsgiFilterChain.doFilter(OsgiFilterChain.java:100)
    at org.ops4j.pax.web.service.jetty.internal.PaxWebServletHandler.doHandle(PaxWebServletHandler.java:310)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:618)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:229)
    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:81)
    at org.eclipse.jetty.server.ResourceService.sendWelcome(ResourceService.java:440)
    at org.eclipse.jetty.server.ResourceService.doGet(ResourceService.java:257)
    at org.ops4j.pax.web.service.jetty.internal.web.DefaultServlet.doGet(DefaultServlet.java:468)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:497)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedServlet.service(OsgiInitializedServlet.java:102)
    at org.eclipse.jetty.servlet.ServletHolder$NotAsync.service(ServletHolder.java:1459)
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799)
    at org.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1656)
    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedFilter.doFilter(OsgiInitializedFilter.java:176)
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:193)
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)
    at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
    at org.ops4j.pax.web.service.spi.servlet.OsgiInitializedFilter.doFilter(OsgiInitializedFilter.java:176)
    at org.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:201)
    at org.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1626)
    at org.ops4j.pax.web.service.spi.servlet.OsgiFilterChain.doFilter(OsgiFilterChain.java:100)
    at org.ops4j.pax.web.service.jetty.internal.PaxWebServletHandler.doHandle(PaxWebServletHandler.java:310)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:600)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:505)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)
    at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
    at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:234)
    at org.ops4j.pax.web.service.jetty.internal.PrioritizedHandlerCollection.handle(PrioritizedHandlerCollection.java:96)
    ... 17 more;;;","05/Dec/22 13:05;Bayoudh;!image-2022-12-05-14-05-20-658.png!;;;","05/Dec/22 13:09;jbonofre;Did you purge the data folder ? Just tested on a fresh Karaf 4.4.1 install, it works fine for me. I gonna do a new test. ;;;","05/Dec/22 13:34;Bayoudh;Yep, but unfortunatly it didn't help. I am using also the 4.4.2 Karaf version. 

Maybe it could help you to analyse my set: 
!image-2022-12-05-14-33-39-077.png!;;;","05/Dec/22 14:16;jbonofre;It works out of the box using Karaf 4.4.1 (as soon as you enable user in etc/users.properties).

So, this time, it seems more an issue in Karaf 4.4.2. I tried with Karaf 4.4.3-SNAPSHOT and same issue. Let me investigate and fix (but in Pax Web this time ;)).;;;","10/Jan/23 09:46;Bayoudh;Hey Jean, are there any news ?;;;","13/Mar/23 13:58;jbonofre;I just tried ActiveMQ 5.17.4 and 5.18.0-SNAPSHOT with Karaf 4.4.3 and it works without problem.;;;","17/Mar/23 13:41;Bayoudh;Hi Jean, 

unfortunately this fix also didn't helped us. We are getting always the same exception above. 

As I mentioned in my first comments we are using Karaf 4.4.2. An update to 4.4.3 for us will be possible if there is a Docker Image for it (which is not the case... the latest KARAF_Image is for the version 4.4.2)

Is there any possibility to update some specific features manually on 4.4.2 to get the state of 4.4.3 for i.e pax or jetty ? 

Best Regards, 
Mohamed;;;","17/Mar/23 17:11;jbonofre;[~Bayoudh] oh yes, no problem, I will publish a new Karaf 4.4.3 docker image.;;;","18/Mar/23 05:53;jbonofre;Oh actually the problem is on Docker right ? Please, mention the environment next time (running in docker using the karaf official image).;;;","18/Mar/23 05:55;jbonofre;I tried on Docker and it works fine by the way.;;;","21/Mar/23 08:13;Bayoudh;Thanks Jean it works now. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No OSGi contract requirement generation,AMQ-9057,13477890,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,22/Aug/22 05:17,23/Aug/22 05:46,13/Jul/23 08:27,23/Aug/22 05:46,,,,,5.17.2,5.18.0,,OSGi/Karaf,,,,,0,,,,,,,jbonofre,jira-bot,,,,,,,,,,"jbonofre merged PR #898:
URL: https://github.com/apache/activemq/pull/898


;23/Aug/22 05:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 23 05:46:36 UTC 2022,,,,,,,,,,,"0|z17xvc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Aug/22 05:46;jira-bot;Commit c506d46c09d874ba4b1c96b1804ca43440391362 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c506d46c0 ]

[AMQ-9057] Don't include OSGi contract in activemq-osgi
;;;","23/Aug/22 05:46;jira-bot;Commit 4a03869074d8cea6debc463bb63f6112ed33b8a5 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4a0386907 ]

Merge pull request #898 from jbonofre/AMQ-9057

[AMQ-9057] Don't include OSGi contract in activemq-osgi;;;","23/Aug/22 05:46;jira-bot;Commit 54fd3a1581d8f2c51314a4464ef14e2c06c8c44c in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=54fd3a158 ]

[AMQ-9057] Don't include OSGi contract in activemq-osgi

(cherry picked from commit c506d46c09d874ba4b1c96b1804ca43440391362)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misleading metrics MBeanInfo annotation,AMQ-9049,13476869,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,jbonofre,henrye28,henrye28,15/Aug/22 16:11,18/Aug/22 05:27,13/Jul/23 08:27,18/Aug/22 05:27,,,,,5.16.6,5.17.2,5.18.0,Broker,,,,,0,,,,,"Metrics MBeanInfo annotation in class BrokerViewMBean is misleading

e.g.

@MBeanInfo(""Number of messages that have been acknowledged on the broker."")
long getTotalDequeueCount();

Actually message dequeued count also increase when it gets discarded",,henrye28,jira-bot,,,,,,,,,,"jbonofre merged PR #884:
URL: https://github.com/apache/activemq/pull/884


;18/Aug/22 05:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Aug 18 05:27:37 UTC 2022,,,,,,,,,,,"0|z17rl4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Aug/22 05:26;jira-bot;Commit 7159b4410baea64db104f1e06e70675446b71585 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7159b4410 ]

[AMQ-9049] Mention dicarded messages in getTotalDequeueCount operation of BrokerViewMBean
;;;","18/Aug/22 05:26;jira-bot;Commit 6371bf15e6f780f7bf789120acbabd055ed186f8 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6371bf15e ]

Merge pull request #884 from jbonofre/AMQ-9049

[AMQ-9049] Mention dicarded messages in getTotalDequeueCount operation of BrokerViewMBean;;;","18/Aug/22 05:27;jira-bot;Commit 7ad4c551fd6643ab0881991dadd3d621206cf0b8 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7ad4c551f ]

[AMQ-9049] Mention dicarded messages in getTotalDequeueCount operation of BrokerViewMBean

(cherry picked from commit 7159b4410baea64db104f1e06e70675446b71585)
;;;","18/Aug/22 05:27;jira-bot;Commit 4818cf688cba426a1fd22875ee5153e22434ca29 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4818cf688 ]

[AMQ-9049] Mention dicarded messages in getTotalDequeueCount operation of BrokerViewMBean

(cherry picked from commit 7159b4410baea64db104f1e06e70675446b71585)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ unable to run offline with Karaf,AMQ-9026,13476614,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,gmccone,gmccone,12/Aug/22 21:05,23/Aug/22 05:50,13/Jul/23 08:27,23/Aug/22 05:50,5.17.0,,,,5.17.2,5.18.0,,OSGi/Karaf,,,,,0,,,,,"When trying to start an ActiveMq broker using an XML configuration file in Karaf from an environment that does not have internet access, the broker fails to start because it can not resolve the spring-beans.xsd file.

This is similar to the situation reported in AMQ-7258, but the workaround of loading the spring-legacy feature does not work as result of the upgrade to Spring 5.x done in AMQ-8026.

The root cause is that activemq-osgi bundle's mapping in the spring.schemas file for the http schemalocations do not match the name of the XSDs that are embedded in the spring-beans bundle for spring version 5. It looks like all the version numbers were removed in from the xsd file name for version 5.

Workaround:

To work around this problem without manually modifying the contents of the spring.schemas file within the activemq-osgi bundle (which does work, just to prove this was root cause), is to modify the schema location within the activemq.xml file to use a classpath definition. For example, use the following

xsi:schemaLocation=""http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans.xsd

instead of of the standard

xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd",,gmccone,jira-bot,,,,,,,,,,"jbonofre merged PR #897:
URL: https://github.com/apache/activemq/pull/897


;23/Aug/22 05:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 23 05:49:57 UTC 2022,,,,,,,,,,,"0|z17q0o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Aug/22 05:49;jira-bot;Commit 64ff517f0be8e92620d978ac3c25dc67fa980967 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=64ff517f0 ]

[AMQ-9026] Use Spring 5.x namespace location in activemq-osgi
;;;","23/Aug/22 05:49;jira-bot;Commit c4a3e3b0f1f94390b69b3e798ddac7cd87c6bd81 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c4a3e3b0f ]

Merge pull request #897 from jbonofre/AMQ-9026

[AMQ-9026] Use Spring 5.x namespace location in activemq-osgi;;;","23/Aug/22 05:49;jira-bot;Commit 18608d2196ea755c6fac6c090081635b60b2e36a in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=18608d219 ]

[AMQ-9026] Use Spring 5.x namespace location in activemq-osgi

(cherry picked from commit 64ff517f0be8e92620d978ac3c25dc67fa980967)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EncryptableLDAPLoginModule does not support AES encryption schemes,AMQ-8987,13470594,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,Chenchrl,Chenchrl,07/Jul/22 19:54,17/Aug/22 05:45,13/Jul/23 08:27,17/Aug/22 05:45,5.16.5,5.17.1,,,5.16.6,5.17.2,5.18.0,,,,,,0,,,,,"In EncryptableLDAPLoginModule encryptionAlgorithm field, if we select a more modern PBE algorithms for example: ""PBEWITHHMACSHA256ANDAES_256"", It will throw org.jasypt.exceptions.EncryptionOperationNotPossibleException for encryption password specified in connectionPassword.

Example login.config:
{code:java}
org.apache.activemq.jaas.EncryptableLDAPLoginModule required
        debug=true
        initialContextFactory=com.sun.jndi.ldap.LdapCtxFactory
        connectionURL=""ldap://localhost:1024""
        connectionUsername=""uid=admin,ou=system""
        connectionPassword=""ENC(l3ZDKzR+ADzlmYr2Csd/CBXnFRd5Jk02JGKaraMHc7NRQp5amOxvHbuUCQNUQ0cE)""
        connectionProtocol=s
        authentication=simple
        userBase=""ou=system""
        userSearchMatching=""(uid={0})""
        userSearchSubtree=false
        roleBase=""ou=system""
        roleName=dummyRoleName
        roleSearchMatching=""(uid={1})""
        roleSearchSubtree=false
        encryptionAlgorithm=PBEWITHHMACSHA256ANDAES_256
        encryptionPassword=""activemq""
        ; {code}
The error we got from client is 
{code:java}
Caused by: java.lang.SecurityException: User name [admin] or password is invalid.
    at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:97)
    at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)
    at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
    at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:852)
    at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
    at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:335)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:172)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    at java.lang.Thread.run(Thread.java:750)
Caused by: javax.security.auth.login.LoginException: org.jasypt.exceptions.EncryptionOperationNotPossibleException
    at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1169)
    at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:738)
    at org.jasypt.properties.PropertyValueEncryptionUtils.decrypt(PropertyValueEncryptionUtils.java:72)
    at org.jasypt.properties.EncryptableProperties.decode(EncryptableProperties.java:230)
    at org.jasypt.properties.EncryptableProperties.get(EncryptableProperties.java:209)
    at org.apache.activemq.jaas.LDAPLoginModule.initialize(LDAPLoginModule.java:91)
    at org.apache.activemq.jaas.EncryptableLDAPLoginModule.initialize(EncryptableLDAPLoginModule.java:66)
    at javax.security.auth.login.LoginContext.invoke(LoginContext.java:736)
    at javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)
    at javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)
    at javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)
    at java.security.AccessController.doPrivileged(Native Method)
    at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
    at javax.security.auth.login.LoginContext.login(LoginContext.java:587)
    at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:92)
    at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)
    at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
    at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:852)
    at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
    at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:335)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
    at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:172)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    at java.lang.Thread.run(Thread.java:750)    at javax.security.auth.login.LoginContext.invoke(LoginContext.java:856)
    at javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)
    at javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)
    at javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)
    at java.security.AccessController.doPrivileged(Native Method)
    at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
    at javax.security.auth.login.LoginContext.login(LoginContext.java:587)
    at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:92) {code}",,Chenchrl,jira-bot,,,,,,,,,,"Charlie-chenchrl opened a new pull request, #857:
URL: https://github.com/apache/activemq/pull/857

   … schemes
   
   AMQ-8987
   
   Description of changes:
   Added support for wider password encryption schemes for EncryptableLDAPLoginModule. Similar to https://github.com/apache/activemq/pull/520, set IV generator for PBE-AES-based algorithms.


;09/Jul/22 00:05;githubbot;600","jbonofre commented on PR #857:
URL: https://github.com/apache/activemq/pull/857#issuecomment-1217487452

   LGTM, I'm merging.


;17/Aug/22 05:44;githubbot;600","jbonofre merged PR #857:
URL: https://github.com/apache/activemq/pull/857


;17/Aug/22 05:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,java,Wed Aug 17 05:45:20 UTC 2022,,,,,,,,,,,"0|z16p00:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Aug/22 05:44;jira-bot;Commit 6e3b19bd5931a569abd3a9397438cef6d1301d60 in activemq's branch refs/heads/main from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e3b19bd5 ]

AMQ-8987 EncryptableLDAPLoginModule support wider password encryption schemes
;;;","17/Aug/22 05:44;jira-bot;Commit 8214bb839a73d0d7b0d38c907522ebdffee56c31 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8214bb839 ]

Merge pull request #857 from Charlie-chenchrl/AMQ-8987

AMQ-8987 EncryptableLDAPLoginModule support wider password encryption…;;;","17/Aug/22 05:45;jira-bot;Commit 36973a83c5dcec15f7af07207e4a951d0d6c6f69 in activemq's branch refs/heads/activemq-5.17.x from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=36973a83c ]

AMQ-8987 EncryptableLDAPLoginModule support wider password encryption schemes

(cherry picked from commit 6e3b19bd5931a569abd3a9397438cef6d1301d60)
;;;","17/Aug/22 05:45;jira-bot;Commit 8e0d7eb19e2f658439f0ccbc34137ee1ffa4c9ac in activemq's branch refs/heads/activemq-5.16.x from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8e0d7eb19 ]

AMQ-8987 EncryptableLDAPLoginModule support wider password encryption schemes

(cherry picked from commit 6e3b19bd5931a569abd3a9397438cef6d1301d60)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ActiveMQ OSGI feature, activemq-client, using JMS 2.0 bundle, which fails resolution, from 5.16.3 on",AMQ-8971,13451382,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,artnaseef,artnaseef,20/Jun/22 17:32,28/Jul/22 04:51,13/Jul/23 08:27,28/Jul/22 04:51,,,,,5.17.2,5.18.0,,OSGi/Karaf,,,,,0,,,,,"Building an ActiveMQ client application in OSGI.  Using AMQ versions 5.16.3 through 5.17.1.

After building the application and loading it together with the ActiveMQ feature named {{{}activemq-client{}}}, a resolution error occurs with the following details:

 
{code:java}
osgi.wiring.package; filter:=""(&(osgi.wiring.package=javax.jms)(version>=1.1.0)(!(version>=2.0.0)))"" {code}
Tracking this down, the {{activemq-client}} feature definition contains the following:

 

 
{code:java}
<bundle dependency=""true"">mvn:org.apache.geronimo.specs/geronimo-jms_2.0_spec/1.0-alpha-2</bundle> {code}
Using the karaf console command, package:exports | grep javax.jms, after loading the activemq-client feature, shows that this bundle ONLY exports the 2.0.0 version:

 

 
{code:java}
javax.jms                                              │ 2.0.0       │ 73 │ org.apache.geronimo.specs.geronimo-jms_2.0_spec {code}
 

The same feature in 5.16.2 contains the following definition:

 
{code:java}
<bundle dependency=""true"">mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1</bundle> {code}
 

All of the ACTIVEMQ modules, except for activemq-karaf are using the following dependency:

 
{code:java}
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jms_1.1_spec</artifactId>
    </dependency>{code}
....

In Summary, compiling an ActiveMQ client application using activemq-client from versions 5.16.3 through 5.17.1, the application fails to resovle in Karaf by loading the activemq-client feature.

*STEPS TO REPRODUCE*
 * feature:repo-add mvn:org.apache.activemq/activemq-karaf/5.17.1/xml/features-core
 * feature:install activemq-client
 * bundle:install ...application-bundle...

*EXPECTED RESULTS*
 * Successful load of the application bundle built against version 5.17.1 of ActiveMQ artifacts after loading the activemq-client feature

*ROOT CAUSE*
 * Replacing the JMS 1.0 geronimo specification bundle with the 2.0 one in the activemq-client feature causes this problem.  It also seems very odd since no other internals of ActiveMQ use the JMS 2.0 spec at all.

 ",,artnaseef,jbonofre,jgenender,jira-bot,mattrpav,,,,,,,"artnaseef commented on PR #861:
URL: https://github.com/apache/activemq/pull/861#issuecomment-1193178800

   Note there is a test application at the following github repo that I used to reproduce the problem, and test the solution:
   
     https://github.com/artnaseef/AMQ8971
   
   It only tests with an application using AMQ out-of-the-box (i.e. JMS 1.1).  JMS 2.0 (camel etc) should work, but isn't tested with that repo.  In other words, this update makes the `activemq-client` feature work for both JMS 1.1 and JMS 2.0 applications.


;23/Jul/22 19:43;githubbot;600","artnaseef closed pull request #861: [AMQ-8971] activemq-client karaf feature supporting both JMS 1.1 and JMS 2.0
URL: https://github.com/apache/activemq/pull/861


;28/Jul/22 00:14;githubbot;600","asfgit merged PR #861:
URL: https://github.com/apache/activemq/pull/861


;28/Jul/22 00:20;githubbot;600","jbonofre commented on code in PR #861:
URL: https://github.com/apache/activemq/pull/861#discussion_r931774416


##########
activemq-karaf/src/main/resources/features-core.xml:
##########
@@ -63,4 +63,12 @@
       <bundle dependency=""true"">mvn:com.fasterxml.jackson.core/jackson-databind/${jackson-databind-version}</bundle>
       <bundle dependency=""true"">mvn:com.fasterxml.jackson.core/jackson-annotations/${jackson-version}</bundle>
     </feature>
+
+    <!;28/Jul/22 04:40;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 28 00:29:50 UTC 2022,,,,,,,,,,,"0|z13fso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Jun/22 17:36;artnaseef;I propose the *correct* fix for this is to revert the feature to use the JMS 1.1 spec, since that's was ActiveMQ uses internally, and ""advertises"" to all the applications building against AMQ dependencies.

Anyone that needs 2.0 can do the extra work to make it work.  If we really feel strongly the need to assist, then perhaps one of the following is worth considering:
 * A separate feature (e.g. activemq-client-jms2_spec) that uses the 2.0 spec instead of the 1.0, OR
 * A custom JMS spec bundle that resolves aginst both 1.1 and 2.0;;;","20/Jun/22 18:38;mattrpav;#wontfix

The reason to update to the JMS 2.0 jar is to allow other tools (Camel, etc) to wire up using a 2.0 spec, even though both sides only use the JMS 1.1 methods.

JMS 2.0 implementation is also underway.

Suggested fix: change your app to allow writing to JMS 2.0, or implement your own custom feature to pull in JMS 1.1 spec jar

;;;","20/Jun/22 18:42;artnaseef;100% disagree with this response.

Breaking the common case for an edge case is not right.

Saying 2.0 impl is underway is just a distraction from the current state of affairs.;;;","20/Jun/22 18:42;artnaseef;Please do not take unilateral action on this ticket Matt;;;","21/Jun/22 13:09;jbonofre;See my messages on the mailing list.;;;","23/Jul/22 19:44;artnaseef;PR created [https://github.com/apache/activemq/pull/861.]

Created the PR instead of directly pushing to encourage discussion and additional testing of interested parties.;;;","25/Jul/22 16:08;jgenender;This looks good to me [~artnaseef] ;;;","28/Jul/22 00:20;jira-bot;Commit 2b50b3ff1b4fb145d6dd782def3948c57e6ed4d3 in activemq's branch refs/heads/main from Arthur Naseef
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2b50b3ff1 ]

[AMQ-8971] activemq-client karaf feature supporting both JMS 1.1 and JMS 2.0
;;;","28/Jul/22 00:27;jira-bot;Commit d98939efae0f26741b4cad860fef303d16bdb4d1 in activemq's branch refs/heads/activemq-5.17.x from Arthur Naseef
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d98939efa ]

[AMQ-8971] activemq-client karaf feature supporting both JMS 1.1 and JMS 2.0

(cherry picked from commit 2b50b3ff1b4fb145d6dd782def3948c57e6ed4d3)
;;;","28/Jul/22 00:29;artnaseef;Feature file updated so the bundles will work for both JMS spec versions 1.1 and 2.0.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedeliveryPolicy:Exponential Backoff + NonBlockingRedelivery = too long delays,AMQ-8617,13447584,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,stolsvik,stolsvik,30/May/22 23:46,22/Nov/22 07:56,13/Jul/23 08:27,22/Nov/22 07:56,,,,,5.17.3,5.18.0,,,,,,,0,,,,,"Scenario on client:
 # Employing RedeliveryPolicy with exponential backoff (keeping maximum redeliveries at default 6)
 # Enabled non-blocking redelivery
 # Receiving e.g. 100 consecutive poison messages which are rolled back repeatedly (which eventually should DLQ after max redeliveries)

This will result in massive redelivery delays due to a logic bug.

The reason is that redeliveryDelay is a field variable kept on the ActiveMQMessageConsumer, instead of being a property on the message - or that the redelivery delay was calculated per message based on the redelivery count.

When consecutive messages rollbacks multiple times, the redeliveryDelay field is continuously multiplied by the backoff multiplier, resulting in enormous delays.

Pull Request for fix, including test: https://github.com/apache/activemq/pull/843",,jira-bot,stolsvik,,,,,,,,,,"stolsvik opened a new pull request, #843:
URL: https://github.com/apache/activemq/pull/843

   Scenario on client:
   
   1. Employing RedeliveryPolicy with exponential backoff (keeping maximum
   redeliveries at default 6)
   2. Enabled non-blocking redelivery
   3. Receiving e.g. 100 consecutive poison messages (which eventually
   should DLQ after max redeliveries)
   
   This will result in massive redelivery delays due to a logic bug.
   
   The reason is that redeliveryDelay is a field variable kept on the
   ActiveMQMessageConsumer, instead of being a property on the message - or
   that the redelivery delay was calculated per message based on the
   redelivery count.
   
   When consecutive messages rollbacks multiple times, the redeliveryDelay
   field is continuously multiplied by the backoff multiplier, resulting in
   enormous delays.
   
   Fix: Ditch the field variable, instead calculating the redeliveryDelay
   per delivery from the redelivery count. (This happens to be identical to
   how it is done in afterRollback() in ActiveMQSession:1004.)
   
   Test is added - which fails with the previous code, and passes with
   this. Added a debug log line for the calculated delay.


;30/May/22 23:58;githubbot;600","jbonofre merged PR #843:
URL: https://github.com/apache/activemq/pull/843


;22/Nov/22 07:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 22 07:56:21 UTC 2022,,,,,,,,,,,"0|z12t7k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/Nov/22 07:55;jira-bot;Commit 393a696955cbf97b90576e4a85b3ce1a02268ad7 in activemq's branch refs/heads/main from Endre Stølsvik
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=393a69695 ]

AMQ-8617: RedeliveryPolicy:Exponential Backoff + NonBlockingRedelivery = too long delays

Scenario on client:

1. Employing RedeliveryPolicy with exponential backoff (keeping maximum
redeliveries at default 6)
2. Enabled non-blocking redelivery
3. Receiving e.g. 100 consecutive poison messages (which eventually
should DLQ after max redeliveries)

This will result in massive redelivery delays due to a logic bug.

The reason is that redeliveryDelay is a field variable kept on the
ActiveMQMessageConsumer, instead of being a property on the message - or
that the redelivery delay was calculated per message based on the
redelivery count.

When consecutive messages rollbacks multiple times, the redeliveryDelay
field is continuously multiplied by the backoff multiplier, resulting in
enormous delays.

Fix: Ditch the field variable, instead calculating the redeliveryDelay
per delivery from the redelivery count. (This happens to be identical to
how it is done in afterRollback() in ActiveMQSession:1004.)

Test is added - which fails with the previous code, and passes with
this. Added a debug log line for the calculated delay.
;;;","22/Nov/22 07:55;jira-bot;Commit 9852cf1f4954d0c417b618f2c1a007dbfd0363bb in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9852cf1f4 ]

Merge pull request #843 from stolsvik/main

AMQ-8617: RedeliveryPolicy:Exponential Backoff + NonBlockingRedelivery = too long delays;;;","22/Nov/22 07:56;jira-bot;Commit 2de859f758ac0e9968211248200953a3cbed6f5e in activemq's branch refs/heads/activemq-5.17.x from Endre Stølsvik
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2de859f75 ]

AMQ-8617: RedeliveryPolicy:Exponential Backoff + NonBlockingRedelivery = too long delays

(cherry picked from commit 393a696955cbf97b90576e4a85b3ce1a02268ad7)

Scenario on client:

1. Employing RedeliveryPolicy with exponential backoff (keeping maximum
redeliveries at default 6)
2. Enabled non-blocking redelivery
3. Receiving e.g. 100 consecutive poison messages (which eventually
should DLQ after max redeliveries)

This will result in massive redelivery delays due to a logic bug.

The reason is that redeliveryDelay is a field variable kept on the
ActiveMQMessageConsumer, instead of being a property on the message - or
that the redelivery delay was calculated per message based on the
redelivery count.

When consecutive messages rollbacks multiple times, the redeliveryDelay
field is continuously multiplied by the backoff multiplier, resulting in
enormous delays.

Fix: Ditch the field variable, instead calculating the redeliveryDelay
per delivery from the redelivery count. (This happens to be identical to
how it is done in afterRollback() in ActiveMQSession:1004.)

Test is added - which fails with the previous code, and passes with
this. Added a debug log line for the calculated delay.
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to start ActiveMq 5.17.1,AMQ-8604,13445487,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,ayus,ayus,17/May/22 18:22,18/May/22 12:36,13/Jul/23 08:27,18/May/22 12:36,5.17.1,,,,,,,,,,,,0,,,,,"Hi Team,

Getting error below with ActiveMq 5.17.1. Migrating from 5.16.4 but with 5.16.4, no such issues were seen as it contains insight-log-core-1.2.0.Beta4.jar and insight-log4j-1.2.0.Beta4.jar. These jars are not found in 5.17.1. Below exceptions are raised as above jars are missing in 5.17.1.
Please suggest.

Failed to load: class path resource [activemq.xml], reason: Failed to load type: io.fabric8.insight.log.log4j.Log4jLogQuery. Reason: java.lang.ClassNotFoundException: io.fabric8.insight.log.log4j.Log4jLogQuery; nested exception is java.lang.ClassNotFoundException: io.fabric8.insight.log.log4j.Log4jLogQuery | org.apache.activemq.xbean.XBeanBrokerFactory | main
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to load type: io.fabric8.insight.log.log4j.Log4jLogQuery. Reason: java.lang.ClassNotFoundException: io.fabric8.insight.log.log4j.Log4jLogQuery; nested exception is java.lang.ClassNotFoundException: io.fabric8.insight.log.log4j.Log4jLogQuery",,ayus,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 18 12:36:42 UTC 2022,,,,,,,,,,,"0|z12gc0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/May/22 09:47;robbie;This isnt a bug, per [https://lists.apache.org/thread/gmdpycso6sgysrnqwwwnkw9ypgjrkljd] you need to use 5.17.x appropriate configuration, accounting for the logging impl changing to Log4J 2 in 5.17.x:
{quote}You are using a custom activemq.xml right ?

If you take a look on the activemq.xml provided with ActiveMQ 5.17.x,
you can see that fabric8 insight log has been removed simply because
it supports only log4j 1.x, not log4j 2.x.

So you have to remove the fabric8-insight-log bean from activemq.xml
or ask fabric8 an update to log4j2.
{quote}
and
{quote}Just to be clear: just remove this from your activemq.xml:

<!-- Allows accessing the server log -->
<bean id=""logQuery"" class=""io.fabric8.insight.log.log4j.Log4jLogQuery""
lazy-init=""false"" scope=""singleton""
init-method=""start"" destroy-method=""stop"">
</bean>

You can see the change here:
[https://github.com/apache/activemq/commit/472dcf84979f063a375e5413d794e56117e52a9f]
{quote};;;","18/May/22 09:50;robbie;Also in future you should ask questions like this on the users mailing list ([https://activemq.apache.org/contact)], rather than on Jira.;;;","18/May/22 11:58;ayus;No I am not using custom activemq.xml file. I know 5.17.1 doesn't have fabric8 entry and I didn't add either. I am using as is.  Anything particular library that can cause the conflict from application side ?;;;","18/May/22 12:36;ayus;found the issue ! you are right ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"UpdateVirtualDestinationsTask gives inaccurate log message saying ""Removing virtual destination ... "" after already applied the removal",AMQ-8601,13444474,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,jbonofre,zisding,zisding,11/May/22 18:21,17/Aug/22 05:49,13/Jul/23 08:27,17/Aug/22 05:49,,,,,5.17.2,5.18.0,,,,,,,0,,,,,"Hello,

While viewing the MAPREDUCE-4262, I found that the logging statements might give inaccurate messages. 

I also found that the in the line *93* of the file [UpdateVirtualDestinationsTask|https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/UpdateVirtualDestinationsTask.java#L93], the log messages says ""{_}Removing virtual destination  ""{_}. However, the removing action should already completed in previous code ({*}line 92{*}).
{code:java}
plugin.virtualDestinationRemoved(connectionContext, removedVirtualDest);
LOG.info(""Removing virtual destination: {}"", removedVirtualDest); {code}
Would it be better if we change the verb ""Removing"" to ""Removed"" to indicate the action is completed, which is similar to the previous logging statement?
{code:java}
virtualDestinationInterceptor.setVirtualDestinations(getVirtualDestinations());                
plugin.info(""applied updates to: "" + virtualDestinationInterceptor); {code}
Or can we move the logging statement to the line before {*}92{*}? Since when there was an exception in previous lines, the logging message would not be printed, which may be not good for debugging. 

 

A similar issue is also found in the file [StatisticsBrokerPlugin|https://github.com/apache/activemq/blob/9b1eb96b838957cd60541ca5e057567be3f11990/activemq-broker/src/main/java/org/apache/activemq/plugin/StatisticsBrokerPlugin.java#L47] where it seems that the logging statement it is describing the whole method. Would it be better to move this logging statement to the beginning of the method? 

Especially considering the following logging practices:
 # [https://github.com/apache/activemq/blob/9b1eb96b838957cd60541ca5e057567be3f11990/activemq-broker/src/main/java/org/apache/activemq/plugin/DiscardingDLQBrokerPlugin.java#L56]
 # [https://github.com/apache/activemq/blob/9b1eb96b838957cd60541ca5e057567be3f11990/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/RuntimeConfigurationPlugin.java#L37] 

Thanks.",,jira-bot,zisding,,,,,,,,,,"zisding opened a new pull request, #840:
URL: https://github.com/apache/activemq/pull/840

   Hello,
   
   While viewing the [MAPREDUCE-4262](https://issues.apache.org/jira/browse/MAPREDUCE-4262), I found that the logging statements might give inaccurate messages. 
   
   I also found that the in the line 93 of the file [UpdateVirtualDestinationsTask](https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/UpdateVirtualDestinationsTask.java#L93), the log messages says ""Removing virtual destination  "". However, the removing action should already completed in previous code (line 92).
   ```
   plugin.virtualDestinationRemoved(connectionContext, removedVirtualDest);                            
   LOG.info(""Removing virtual destination: {}"", removedVirtualDest); 
   ```
   Would it be better if we change the verb ""Removing"" to ""Removed"" to indicate the action is completed, which is similar to the previous [logging statement?](https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/UpdateVirtualDestinationsTask.java#L82)
   ```
   virtualDestinationInterceptor                        
    .setVirtualDestinations(getVirtualDestinations());                
   plugin.info(""applied updates to: ""                        
   + virtualDestinationInterceptor); 
   ```
   Or can we move the logging statement to the line before 92? Since when there was an exception in previous lines, the logging message would not be printed, which may be not good for debugging. 
   
   
   A similar issue is also found in the file [StatisticsBrokerPlugin](https://github.com/apache/activemq/blob/9b1eb96b838957cd60541ca5e057567be3f11990/activemq-broker/src/main/java/org/apache/activemq/plugin/StatisticsBrokerPlugin.java#L47) where it seems that the logging statement it is describing the whole method. Would it be better to move this logging statement to the beginning of the method? 
   
   Especially considering the following logging practices:
   
   - https://github.com/apache/activemq/blob/9b1eb96b838957cd60541ca5e057567be3f11990/activemq-broker/src/main/java/org/apache/activemq/plugin/DiscardingDLQBrokerPlugin.java#L56
   - https://github.com/apache/activemq/blob/9b1eb96b838957cd60541ca5e057567be3f11990/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/RuntimeConfigurationPlugin.java#L37 
   
   Thanks.


;11/May/22 18:52;githubbot;600","jbonofre merged PR #840:
URL: https://github.com/apache/activemq/pull/840


;17/Aug/22 05:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 17 05:48:43 UTC 2022,,,,,,,,,,,"0|z12a48:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Aug/22 14:50;zisding;Thanks for checking this report.  We made a PR for this issue.  [https://github.com/apache/activemq/pull/840]

 

Besides, would you mind checking the following cases, there are also some cases that may be improved: (if needed, we can also create another PR. :))

1) *Logging statement:*  [https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/legacy/LegacyStoreReplayer.java/#L117]

 
{code:java}
LOG.info(""Replay of legacy store complate.""); {code}
 

*Suggestion:* Change ""complate""{{ }}to ""has completed.""
*Reason:* 1)Typo;  2)The logging statement is placed at the end of the block indicting the function has been successfully executed.

 

2) *Logging statement:*  [https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java/#L1123]
{code:java}
LOG.info(""Stopping {} because {}"", transport.getRemoteAddress(), reason);{code}
*Suggestion:* Change ""stopping""{{ }}to ""Stopped.""
*Reason:* The logging statement is placed after the function stopAsync() indicting the function has been successfully executed.

 

3) *Logging statement:*  [https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java/#L2159]
{code:java}
LOG.warn(""{} mb - resetting to 70% of maximum available: {}"",                        
         message, (usage.getMemoryUsage().getLimit() / (1024 * 1024)));{code}
*Suggestion:* Change ""resetting""{{ }}to ""reset.""
*Reason:* The logging statement is placed after the function s.setPercentOfJvmHeap(70) indicting the function has been successfully executed.

 

4) *Logging statement:*  [https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-broker/src/main/java/org/apache/activemq/broker/region/cursors/AbstractStoreCursor.java/#L280]
{code:java}
LOG.trace(""{} enabling cache on empty store"", this);{code}
*Suggestion:* Change ""enabling""{{ }}to ""has enabled.""
*Reason:* The logging statement is placed after the function setCacheEnabled(true)  indicting the function has been successfully executed.

 

5) *Logging statement:*  [https://github.com/apache/activemq/blob/b3c2c49f96bebee14b74c6456feb233e0312724b/activemq-broker/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java/#L689]
{code:java}
LOG.debug(""Adding proxy network subscription {} to demand subscription"", newSubInfo);{code}
*Suggestion:* Change ""Adding""{{ }}to ""Added.""
*Reason:* The logging statement is placed after the function add(newSubInfo) indicting the function has been successfully executed.

Thank you.;;;","17/Aug/22 05:48;jira-bot;Commit 2c193ea01d923b8ccde4db55cbe0242c8edfb546 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2c193ea01 ]

Merge pull request #840 from zisding/logrefine

[AMQ-8601] Refine the logging messages;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Active Consumers not being shown post Activmq 5.17.1 upgrade,AMQ-8597,13443397,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,chsingh,chsingh,05/May/22 13:54,22/Jul/22 13:55,13/Jul/23 08:27,22/Jul/22 13:55,5.17.1,,,,5.17.2,5.18.0,,AMQP,,,,,0,,,,,"We are unable to see the Active Consumers post Activemq 5.17.1 upgrade .

 

 

 

!image-2022-05-05-19-23-31-922.png!",,chsingh,jbonofre,jira-bot,,,,,,,,,"lucastetreault opened a new pull request, #838:
URL: https://github.com/apache/activemq/pull/838

   Quoted values fixed the exception when a destination includes a colon but actually broke finding destination mbeans in general. With this change, the console will show active consumers and also supports queues with a colon 👍


;08/May/22 03:01;githubbot;600","jbonofre merged PR #838:
URL: https://github.com/apache/activemq/pull/838


;22/Jul/22 13:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"05/May/22 13:53;chsingh;image-2022-05-05-19-23-31-922.png;https://issues.apache.org/jira/secure/attachment/13043270/image-2022-05-05-19-23-31-922.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 22 13:55:42 UTC 2022,,,,,,,,,,,"0|z123js:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/May/22 06:53;jbonofre;It has been fixed already, but I will double check.;;;","22/Jul/22 13:54;jira-bot;Commit 4cedd80774a91ac14f50ad20d4e32b49bc9f4563 in activemq's branch refs/heads/main from Lucas Tétreault
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4cedd8077 ]

[AMQ-8597] Show active consumers in web console
;;;","22/Jul/22 13:54;jira-bot;Commit e04faac37d4c8b5078c0e66cc53d14353acf0f93 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e04faac37 ]

Merge pull request #838 from lucastetreault/console-consumers

[AMQ-8597] Show active consumers in web console;;;","22/Jul/22 13:55;jira-bot;Commit 9d813f03e5fb06f36f93b5a43ca9333384c125b7 in activemq's branch refs/heads/activemq-5.17.x from Lucas Tétreault
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9d813f03e ]

[AMQ-8597] Show active consumers in web console

(cherry picked from commit 4cedd80774a91ac14f50ad20d4e32b49bc9f4563)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Jolokia-agent - File not found exception,AMQ-8596,13443307,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,j-d-c,j-d-c,05/May/22 08:40,18/Feb/23 06:36,13/Jul/23 08:27,02/Dec/22 19:40,5.17.1,5.17.2,,,5.17.3,,,Web Console,,,,,0,,,,,"Windows server 2019 

I dowloaded ActiveMQ 5.17.1.

I ran   InstallService.bat

I ran:    start-service activemq

There seems to be an issue with the \ in the path for {{jolokia-access.xml}}:
{noformat}
jolokia-agent: Error while accessing access restrictor at [file:D:APPActiveMQapache-activemq-5.17.1binwin64..../conf/jolokia-access.xml|file:///D:/APPActiveMQapache-activemq-5.17.1binwin64..../conf/jolokia-access.xml]. Denying all access to MBeans for security reasons. {noformat}
{noformat}
2022-05-05 10:16:13,469 | INFO  | Using Persistence Adapter: KahaDBPersistenceAdapter[D:\APP\ActiveMQ\apache-activemq-5.17.1\bin\win64\..\..\data\kahadb] | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2022-05-05 10:16:13,614 | INFO  | PListStore:[D:\APP\ActiveMQ\apache-activemq-5.17.1\bin\win64\..\..\data\localhost\tmp_storage] started | org.apache.activemq.store.kahadb.plist.PListStoreImpl | WrapperSimpleAppMain
2022-05-05 10:16:13,733 | INFO  | Apache ActiveMQ 5.17.1 (localhost, ID:HMSSQLP03-52401-1651738573614-0:1) is starting | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2022-05-05 10:16:13,749 | INFO  | Listening for connections at: tcp://HMSSQLP03:61616?maximumConnections=1000&wireFormat.maxFrameSize=104857600 | org.apache.activemq.transport.TransportServerThreadSupport | WrapperSimpleAppMain
2022-05-05 10:16:13,749 | INFO  | Connector openwire started | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Listening for connections at: amqp://HMSSQLP03:5672?maximumConnections=1000&wireFormat.maxFrameSize=104857600 | org.apache.activemq.transport.TransportServerThreadSupport | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Connector amqp started | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Listening for connections at: stomp://HMSSQLP03:61613?maximumConnections=1000&wireFormat.maxFrameSize=104857600 | org.apache.activemq.transport.TransportServerThreadSupport | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Connector stomp started | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Listening for connections at: mqtt://HMSSQLP03:1883?maximumConnections=1000&wireFormat.maxFrameSize=104857600 | org.apache.activemq.transport.TransportServerThreadSupport | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Connector mqtt started | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain
2022-05-05 10:16:13,759 | INFO  | Starting Jetty server | org.apache.activemq.transport.WebTransportServerSupport | WrapperSimpleAppMain
2022-05-05 10:16:13,774 | INFO  | Creating Jetty connector | org.apache.activemq.transport.WebTransportServerSupport | WrapperSimpleAppMain
2022-05-05 10:16:13,806 | WARN  | ServletContext@o.e.j.s.ServletContextHandler@4b8365d9\{/,null,STARTING} has uncovered http methods for path: / | org.eclipse.jetty.security.SecurityHandler | WrapperSimpleAppMain
2022-05-05 10:16:13,859 | INFO  | Listening for connections at ws://HMSSQLP03:61614?maximumConnections=1000&wireFormat.maxFrameSize=104857600 | org.apache.activemq.transport.ws.WSTransportServer | WrapperSimpleAppMain
2022-05-05 10:16:13,859 | INFO  | Connector ws started | org.apache.activemq.broker.TransportConnector | WrapperSimpleAppMain
2022-05-05 10:16:13,859 | INFO  | Apache ActiveMQ 5.17.1 (localhost, ID:HMSSQLP03-52401-1651738573614-0:1) started | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2022-05-05 10:16:13,859 | INFO  | For help or more information please see: [http://activemq.apache.org|http://activemq.apache.org/] | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2022-05-05 10:16:13,859 | WARN  | Store limit is 102400 mb (current store usage is 0 mb). The data directory: D:\APP\ActiveMQ\apache-activemq-5.17.1\bin\win64\..\..\data\kahadb only has 95478 mb of usable space. - resetting to maximum available disk space: 95478 mb | org.apache.activemq.broker.BrokerService | WrapperSimpleAppMain
2022-05-05 10:16:14,251 | INFO  | ActiveMQ WebConsole available at [http://127.0.0.1:8161/] | org.apache.activemq.web.WebConsoleStarter | WrapperSimpleAppMain
2022-05-05 10:16:14,251 | INFO  | ActiveMQ Jolokia REST API available at [http://127.0.0.1:8161/api/jolokia/] | org.apache.activemq.web.WebConsoleStarter | WrapperSimpleAppMain
2022-05-05 10:16:14,427 | WARN  | jolokia-agent: Error while accessing access restrictor at [file:D:APPActiveMQapache-activemq-5.17.1binwin64..../conf/jolokia-access.xml|file:///D:/APPActiveMQapache-activemq-5.17.1binwin64..../conf/jolokia-access.xml]. Denying all access to MBeans for security reasons. Exception: java.io.FileNotFoundException: D:APPActiveMQapache-activemq-5.17.1binwin64....\conf\jolokia-access.xml (The system cannot find the path specified) | org.eclipse.jetty.server.handler.ContextHandler.api | WrapperSimpleAppMain
java.io.FileNotFoundException: D:APPActiveMQapache-activemq-5.17.1binwin64....\conf\jolokia-access.xml (The system cannot find the path specified)
    at java.base/java.io.FileInputStream.open0(Native Method)
    at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
    at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
    at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
    at java.base/sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:86)
    at java.base/sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:189)
    at java.base/java.net.URL.openStream(URL.java:1161)
    at org.jolokia.restrictor.RestrictorFactory.lookupPolicyRestrictor(RestrictorFactory.java:119)
    at org.jolokia.restrictor.RestrictorFactory.createRestrictor(RestrictorFactory.java:50)
    at org.jolokia.http.AgentServlet.createRestrictor(AgentServlet.java:195)
    at org.jolokia.http.AgentServlet.init(AgentServlet.java:135)
    at org.eclipse.jetty.servlet.ServletHolder$Wrapper.init(ServletHolder.java:1345)
    at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:632)
    at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:415)
    at org.eclipse.jetty.servlet.ServletHandler.lambda$initialize$0(ServletHandler.java:731)
    at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
    at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
    at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
    at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
    at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
    at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
    at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:755)
    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:379)
    at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1449)
    at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1414)
    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:916)
    at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:288)
    at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:524)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:117)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:110)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97)
    at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:411)
    at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:417)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:117)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:169)
    at org.eclipse.jetty.server.Server.start(Server.java:423)
    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:110)
    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:97)
    at org.eclipse.jetty.server.Server.doStart(Server.java:387)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
    at org.springframework.util.MethodInvoker.invoke(MethodInvoker.java:283)
    at org.springframework.beans.factory.config.MethodInvokingBean.invokeWithTargetException(MethodInvokingBean.java:123)
    at org.springframework.beans.factory.config.MethodInvokingFactoryBean.afterPropertiesSet(MethodInvokingFactoryBean.java:108)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
    at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:934)
    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
    at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
    at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)
    at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)
    at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
    at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
    at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:63)
    at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154)
    at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:63)
    at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
    at org.apache.activemq.console.Main.runTaskClass(Main.java:262)
    at org.apache.activemq.console.Main.main(Main.java:115)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
    at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
    at java.base/java.lang.Thread.run(Thread.java:833){noformat} ","Windows Server 2019 (64 bit)

PS C:\Windows\System32> [System.Environment]::OSVersion

Platform ServicePack Version      VersionString
-------- ----------- -------      -------------
 Win32NT             10.0.17763.0 Microsoft Windows NT 10.0.17763.0

 

PS C:\Windows\System32> java --version
openjdk 17.0.3 2022-04-19 LTS
OpenJDK Runtime Environment Microsoft-32931 (build 17.0.3+7-LTS)
OpenJDK 64-Bit Server VM Microsoft-32931 (build 17.0.3+7-LTS, mixed mode, sharing)",jbertram,jbonofre,j-d-c,sekaijin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-9126,AMQ-8628,AMQ-9220,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 09 08:18:22 UTC 2023,,,,,,,,,,,"0|z122zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/May/22 06:53;jbonofre;I changed the location of jolokia file (to be in conf instead of WEB-INF). It works for me but without the wrapper. So, it could be related to the wrapper. I will check, thanks for the report.;;;","20/Aug/22 05:01;jbonofre;It seems that the path is not right preserved. A possible workaround is to use the concrete path in webapps/api/WEB-INF/web.xml instead of ${prop:activemq.conf}.

I'm checking if ${prop:activemq.conf} is not ""hook"" by the wrapper.;;;","20/Aug/22 05:02;jbonofre;Does it work if you start ActiveMQ with bin/activemq console for instance, instead of the wrapper ?;;;","20/Aug/22 05:05;jbonofre;I don't reproduce the issue on Linux or MacOS, it's maybe specific to Windows.;;;","26/Oct/22 09:41;sekaijin;Hello
wouldn't it be good to switch to power shell?;;;","02/Dec/22 18:57;jbertram;This is definitely a problem on Windows. I tried a fresh install of 5.17.2 on a fresh Windows 10 VM with Java 17, and it won't start. I unzipped the distro and just ran {{activemq start}}.;;;","02/Dec/22 19:40;jbonofre;[~jbertram] FYI, it's fixed on 5.17.3 currently on vote. It's actually an issue with Jolokia on Windows that needs to use \\ instead of \ in the path.;;;","02/Dec/22 19:58;jbertram;[~jbonofre], thanks for the update. The Jira was still unresolved when I commented previously and there were no commits or PRs associated with it so I concluded the problem was still outstanding.;;;","09/Feb/23 08:18;j-d-c;Just for reference (if somebody stumbles upon this problem):   The workaround is to put the full path in   ""\webapps\api\WEB-INF\web.xml""   with double backslashes

{{ ex:}}

 

{{<init-param>}}
{{            <param-name>policyLocation</param-name>}}
{{            <param-value>[file:d:\\My\\path\\to\\activemq\\config\\jolokia_access.xml|file:///D:/My/path/to/activemq/config/jolokia_access.xml]</param-value>}}
{{        </init-param>}}

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move class ResponseHandler into package protocol,AMQ-8583,13438923,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,Fanyi,Fanyi,11/Apr/22 11:23,20/Apr/22 05:45,13/Jul/23 08:27,20/Apr/22 05:45,5.17.0,,,,5.17.1,5.18.0,,AMQP,,,,,0,,,,,"*Issue Description*

 

Package *_org.apache.activemq.transport.amqp_* is a promiscuous package, and groups together miscellaneous functionalities that might be useful to different subsystems. This means the cohesion between classes in the package is low. However, since the project has grown larger, this package structure is becoming increasingly hard to navigate. We found that Class *_ResponseHandler_* is not used by classes in their package {*}_org.apache.activemq.transport.amqp_{*}{_}.{_} Moreover, there are a lot of dependencies between class *_ResponseHandler_* and classes in the package {*}_org.apache.activemq.transport.amqp.protocol_{*}.

Location: The source file can be found at path File /activemq-amqp/src/main/java/org/apache/activemq/transport/amqp/ResponseHandler.java

*Refactoring suggestions*

 

To avoid making *_org.apache.activemq.transport.amqp_* too big and unmanageable, we suggest to move class *_ResponseHandler_* into package \{_}*org.apache.activemq.transport.amqp.protocol*{_}{*}.{*}

 ",,Fanyi,jbonofre,jira-bot,,,,,,,,,"jbonofre merged PR #831:
URL: https://github.com/apache/activemq/pull/831


;20/Apr/22 05:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,"11/Apr/22 11:20;Fanyi;Activemq-ResponseHandler-java.png;https://issues.apache.org/jira/secure/attachment/13042243/Activemq-ResponseHandler-java.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 20 05:45:00 UTC 2022,,,,,,,,,,,"0|z11cg0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Apr/22 11:27;Fanyi;[~jbonofre] Could you help me review this issue?:P;;;","19/Apr/22 15:38;jbonofre;[~Fanyi] I created PR #831 to propose to move {{ResponseHandler}} in {{org.apache.activemq.transport.amqp.protocol}} package.;;;","20/Apr/22 05:44;jira-bot;Commit 239ddc05b1b18d4ac1384a1cb4a89640036d5d2a in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=239ddc05b ]

[AMQ-8583] Move AMQP ResponseHandler interface into protocol package
;;;","20/Apr/22 05:44;jira-bot;Commit c0927c29378c565207fab4fd602e0786c3701bcc in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c0927c293 ]

Merge pull request #831 from jbonofre/AMQ-8583

[AMQ-8583] Move AMQP ResponseHandler interface into protocol package;;;","20/Apr/22 05:45;jira-bot;Commit c6e5fe5f5029a213f6d86f48291f3b4fee9249ac in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c6e5fe5f5 ]

[AMQ-8583] Move AMQP ResponseHandler interface into protocol package

(cherry picked from commit 239ddc05b1b18d4ac1384a1cb4a89640036d5d2a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
mismatch in activemq-client osgi and pom dependency requirements,AMQ-8569,13437794,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,robbie,robbie,05/Apr/22 09:38,04/May/22 12:24,13/Jul/23 08:27,05/Apr/22 16:51,5.16.2,5.16.3,5.16.4,5.17.0,5.16.5,5.17.1,,JMS client,,,,,0,,,,,"The activemq-client module has a 'provided' dependency on xstream, meaning users do not get that dependency passed on, they need their own dependency on it. The osgi details in the activemq-client manifest however dont list it as optional, so it is required there. This dep and the mismatched requirement wasnt present until 5.16.2.

The details in the activemq-osgi manifest do list xstream as optional. It seems like activemq-client should also.",,jbonofre,jira-bot,robbie,,,,,,,,,"gemmellr opened a new pull request, #811:
URL: https://github.com/apache/activemq/pull/811

   set xstream osgi import optional to align with with its 'provided' dependency declaration


;05/Apr/22 15:54;githubbot;600","gemmellr commented on PR #811:
URL: https://github.com/apache/activemq/pull/811#issuecomment-1088914890

   @jbonofre raising this as I was playing around with it earlier..is this all thats needed?


;05/Apr/22 15:55;githubbot;600","asfgit merged PR #811:
URL: https://github.com/apache/activemq/pull/811


;05/Apr/22 16:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,ARTEMIS-3814,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 06 11:27:35 UTC 2022,,,,,,,,,,,"0|z115k0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Apr/22 09:40;robbie;[~jbonofre]  what do you think?;;;","05/Apr/22 09:54;jbonofre;Good point. It makes sense to have xstream import optional in client as we have in activemq-osgi.;;;","05/Apr/22 10:00;robbie;Just to note, looking closer it is actually more nuanced, the provided dependency wasnt added until 5.16.2 so although the 5.16.x manifest is clearly truncated in 5.16.0 and 5.16.1 that isnt why it wasnt present, it simply didnt exist in the client module before 5.16.2 and later 5.17.0.

https://github.com/apache/activemq/commit/db6098c53a71963cbead57c99156a57349a97866;;;","05/Apr/22 10:04;jbonofre;xstream is really optional as it could depend of the transport and so (http based transports). It's the reason why xstream is an optional dependency AFAIR.;;;","05/Apr/22 16:45;jira-bot;Commit 558bb8cf888189ff0f71304eb40b23232ab4a034 in activemq's branch refs/heads/main from Robbie Gemmell
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=558bb8cf8 ]

AMQ-8569: set xstream osgi import optional to match with its dependency declaration
;;;","05/Apr/22 16:46;jira-bot;Commit 4fdab9fec7d2db5e265ee2b51b0ee6fe7f4f1a8e in activemq's branch refs/heads/activemq-5.17.x from Robbie Gemmell
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4fdab9fec ]

AMQ-8569: set xstream osgi import optional to match with its dependency declaration

(cherry picked from commit 558bb8cf888189ff0f71304eb40b23232ab4a034)
;;;","06/Apr/22 11:27;jira-bot;Commit f86378c7d923d9f35a8236689918c6bf70c2e6c6 in activemq's branch refs/heads/activemq-5.16.x from Robbie Gemmell
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f86378c7d ]

AMQ-8569: set xstream osgi import optional to match with its dependency declaration

Backports 558bb8cf888189ff0f71304eb40b23232ab4a034
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-web doesn't compile,AMQ-8561,13437071,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,jbonofre,jbonofre,jbonofre,31/Mar/22 19:54,06/Apr/22 12:03,13/Jul/23 08:27,06/Apr/22 05:45,5.17.0,5.18.0,,,5.16.5,5.17.1,5.18.0,,,,,,0,,,,,,,jbonofre,jira-bot,robbie,,,,,,,,,"mattrpav commented on PR #809:
URL: https://github.com/apache/activemq/pull/809#issuecomment-1089110580

   @jbonofre can you squash + merge?


;05/Apr/22 17:48;githubbot;600","jbonofre merged PR #809:
URL: https://github.com/apache/activemq/pull/809


;06/Apr/22 05:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 06 12:03:53 UTC 2022,,,,,,,,,,,"0|z11154:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Apr/22 05:43;jira-bot;Commit 2959d800fe8daf15d8a885d43605672ca7e9b81a in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2959d800f ]

[AMQ-8561] Add missing jetty-webapp dependency in activemq-web
;;;","06/Apr/22 05:43;jira-bot;Commit 3f454600e6dcd1a5a435608f73293e8d455ad861 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3f454600e ]

Merge pull request #809 from jbonofre/AMQ-8561

[AMQ-8561] Add missing jetty-webapp dependency in activemq-web;;;","06/Apr/22 05:44;jira-bot;Commit 13232679cfbe1ff0d1daf2f10d0a5ac35e10091e in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=13232679c ]

[AMQ-8561] Add missing jetty-webapp dependency in activemq-web

(cherry picked from commit 2959d800fe8daf15d8a885d43605672ca7e9b81a)
;;;","06/Apr/22 10:43;robbie;Just as a note, the reason this wasnt noticed previously seems to be an issue with Maven. The entire tree does compile with e.g. Maven 3.6.3 *, but fails at activemq-web with e.g. Maven 3.8.5. The CI job is using 'latest' so presumably an upgrade across some intermediate versions (e.g 3.8.4 -> 3.8.5) changed the behaviour and thats why it started being seen in CI.

*Interestingly, re-building the activemq-web module alone after installing everything on a full build, does actually fail with 3.6.3.;;;","06/Apr/22 11:35;robbie;Note the 5.16.x branch is presumably still affected due to the AMQ-7358 changes.;;;","06/Apr/22 11:57;jbonofre;Good point, gonna merge on 5.16.x branch as well.;;;","06/Apr/22 12:03;jira-bot;Commit 3669b90feb2e796a7de465c295eb04e8b6759a71 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3669b90fe ]

[AMQ-8561] Add missing jetty-webapp dependency in activemq-web

(cherry picked from commit 2959d800fe8daf15d8a885d43605672ca7e9b81a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RESTful API: NoClassDefFoundError->ContinuationSupport,AMQ-8554,13436484,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,cshannon,shine,shine,29/Mar/22 17:17,06/Apr/22 13:54,13/Jul/23 08:27,06/Apr/22 05:58,5.17.0,,,,5.16.5,5.17.1,5.18.0,Broker,Connector,,,,0,JAR-files,Jetty,REST,RESTful,"The RESTful API does not work since version 5.17.0. If you send a GET-Request like
{noformat}
http://BROKER-IP:8161/api/message/abc?type=queue&oneShot=true{noformat}
{color:#212121}{color:#212121}{color}You get an error:
{color}
{code:java}
2022-03-29 19:00:14,445 | INFO  | ActiveMQ Jolokia REST API available at http://0.0.0.0:8161/api/jolokia/ | org.apache.activemq.web.WebConsoleStarter | main
2022-03-29 19:01:06,597 | INFO  | Connector vm://localhost started | org.apache.activemq.broker.TransportConnector | qtp1845760645-40
2022-03-29 19:01:06,703 | WARN  | /api/message/abc | org.eclipse.jetty.server.HttpChannel | qtp1845760645-40
java.lang.NoClassDefFoundError: org/eclipse/jetty/continuation/ContinuationSupport
        at org.apache.activemq.web.MessageServlet.doMessages(MessageServlet.java:188)
        at org.apache.activemq.web.MessageServlet.doGet(MessageServlet.java:167)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:799)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:550)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1624)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:233)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1440)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:501)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1594)
        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1355)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:146)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:146)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)
        at org.eclipse.jetty.server.Server.handle(Server.java:516)
        at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:487)
        at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:732)
        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:479)
        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:277)
        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)
        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)
        at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:883)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1034)
        at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.ClassNotFoundException: org.eclipse.jetty.continuation.ContinuationSupport
        at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:476)
        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:589)
        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
        ... 34 more
{code}
 ","Ubuntu 20.04.4 LTS

java --version:
openjdk 11.0.14 2022-01-18
OpenJDK Runtime Environment (build 11.0.14+9-Ubuntu-0ubuntu2.20.04)
OpenJDK 64-Bit Server VM (build 11.0.14+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)

ActiveMQ-Version: 5.17.0 (clean installation)",cshannon,jira-bot,robbie,shine,,,,,,,,"cshannon commented on pull request #803:
URL: https://github.com/apache/activemq/pull/803#issuecomment-1084914902


   @jbonofre and @mattrpav - Does this build for you? For some reason CI is complaining about a compilation error which makes no sense considering i didn't touch the activemq-web module and only updated the assembly. Everything builds and compiles fine for me on my box.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/22 17:42;githubbot;600","jbonofre commented on pull request #803:
URL: https://github.com/apache/activemq/pull/803#issuecomment-1084919061


   Yes I saw that already on main. 5.17.x seems ok. Gonna take a look. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/22 17:46;githubbot;600","jbonofre merged PR #803:
URL: https://github.com/apache/activemq/pull/803


;06/Apr/22 05:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,AMQ-7364,AMQ-7358,AMQ-8461,,,,,,,,,"30/Mar/22 08:58;shine;image-2022-03-30-10-58-20-270.png;https://issues.apache.org/jira/secure/attachment/13041755/image-2022-03-30-10-58-20-270.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 06 13:54:42 UTC 2022,,,,,,,,,,,"0|z10xwg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Mar/22 09:08;shine;hi,

maybe the problem is related with this issue: https://issues.apache.org/jira/browse/AMQ-7358

!image-2022-03-30-10-58-20-270.png!

 

If you upload the file ""Jetty :: Continuation » 9.4.45.v20220203 (jetty-continuation-9.4.45.v20220203.jar)"" from https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-continuation/9.4.45.v20220203 in the %AMQ-BROKER-INST-DIR%/lib/web/ folder the RESTful API works again.

i think the file jetty-continuation-9.4.45.v20220203.jar is missing in the setup package at least.

 ;;;","06/Apr/22 05:56;jira-bot;Commit 291f925601312c62b568876d25992d65d1ce69e6 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=291f92560 ]

AMQ-8554 - Add missing jetty-continuation jar to assembly
;;;","06/Apr/22 05:56;jira-bot;Commit 6b7ed382c3be54d2945f5bf36ee82d9672445018 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6b7ed382c ]

Merge pull request #803 from cshannon/AMQ-8554

AMQ-8554 - Add missing jetty-continuation jar to assembly;;;","06/Apr/22 05:57;jira-bot;Commit 4eb9c33492840410b60cbc4a100a9491a95a39b4 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4eb9c3349 ]

AMQ-8554 - Add missing jetty-continuation jar to assembly

(cherry picked from commit 291f925601312c62b568876d25992d65d1ce69e6)
;;;","06/Apr/22 11:36;robbie;Note the 5.16.x branch is presumably still affected due to the AMQ-7358 changes.;;;","06/Apr/22 13:52;jira-bot;Commit 04e5114e21b8b3932c5d0e35aedc65a75e7ed7b3 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=04e5114e2 ]

AMQ-8554 - Add missing jetty-continuation jar to assembly

(cherry picked from commit 291f925601312c62b568876d25992d65d1ce69e6)
(cherry picked from commit 4eb9c33492840410b60cbc4a100a9491a95a39b4)
;;;","06/Apr/22 13:54;cshannon;[~robbie] - thanks for the heads up, merged into 5.16.x as well;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQSslConnectionFactory: Check for null SSL Keystore and Truststore password,AMQ-8550,13435369,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,andreas.gorges,andreas.gorges,23/Mar/22 14:12,05/Apr/22 17:52,13/Jul/23 08:27,05/Apr/22 17:52,,,,,5.17.1,5.18.0,,JMS client,,,,,0,,,,,"When you assign a Truststore without a password the method {color:#000000}ActiveMQSslConnectionFactory.{color}{color:#00627a}createTrustManager throws a NullPointer exception in Line 135:
{color}

 
{code:java}
trustedCertStore.load(tsStream, trustStorePassword.toCharArray()); {code}
 

{color:#00627a}Please change the code to:{color}
{code:java}
char[] password = null;
if (trustStorePassword != null) {
     password = trustStorePassword.toCharArray();
}
trustedCertStore.load(tsStream, password);
  {code}
 ",,andreas.gorges,cshannon,jira-bot,mattrpav,,,,,,,,"cshannon opened a new pull request, #812:
URL: https://github.com/apache/activemq/pull/812

   Inside ActiveMQSslConnectionFactory the passwords should be checked for
   null so a NPE isn't thrown. Null will be passed to the factories instead
   and the keystore/truststore factories will try and load the keystores
   using null for the password which may or may not work depending on the
   implementation and if password is set.


;05/Apr/22 16:20;githubbot;600","cshannon commented on PR #812:
URL: https://github.com/apache/activemq/pull/812#issuecomment-1089095138

   > LGTM. Good pick up to add the same check for keystore
   
   Thanks, even though the compilation is broken in Jenkins it worked for me so I'm going to go ahead and merge it. 


;05/Apr/22 17:35;githubbot;600","cshannon merged PR #812:
URL: https://github.com/apache/activemq/pull/812


;05/Apr/22 17:36;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 05 17:51:17 UTC 2022,,,,,,,,,,,"0|z10r34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Apr/22 16:23;cshannon;Pull requested created, I also added support for checking for null for keystore password as well and not just truststore password.;;;","05/Apr/22 16:32;mattrpav;This is a handy change. JDK 18 adding password-less truststore support: 

ref: https://seanjmullan.org/blog/2022/03/23/jdk18;;;","05/Apr/22 17:36;jira-bot;Commit b93d58259c86d5e1141d1004cf8d75cf4a4376a6 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b93d58259 ]

AMQ-8550 - Check for null keystore/truststore passwords

Inside ActiveMQSslConnectionFactory the passwords should be checked for
null so a NPE isn't thrown. Null will be passed to the factories instead
and the keystore/truststore factories will try and load the keystores
using null for the password which may or may not work depending on the
implementation and if password is set.
;;;","05/Apr/22 17:36;jira-bot;Commit 4ae145352b4962018b0ccb9b1eb404728523797e in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4ae145352 ]

Merge pull request #812 from cshannon/AMQ-8550

AMQ-8550 - Check for null keystore/truststore passwords;;;","05/Apr/22 17:51;jira-bot;Commit aa10747e941f9e6d26483dc9f56a86892cd36765 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=aa10747e9 ]

AMQ-8550 - Check for null keystore/truststore passwords

Inside ActiveMQSslConnectionFactory the passwords should be checked for
null so a NPE isn't thrown. Null will be passed to the factories instead
and the keystore/truststore factories will try and load the keystores
using null for the password which may or may not work depending on the
implementation and if password is set.

(cherry picked from commit b93d58259c86d5e1141d1004cf8d75cf4a4376a6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"activemq-client, activemq-pool, activemq-jms-pool are unexpectly shaded",AMQ-8533,13432944,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,jbonofre,jbonofre,jbonofre,09/Mar/22 19:35,09/Mar/22 20:36,13/Jul/23 08:27,09/Mar/22 20:36,,,,,5.17.0,,,JMS client,Pool,,,,0,,,,,"Due to a change on the maven-bundle-plugin instructions, activemq-client, activemq-pool and activemq-jms-pool are unexpectly shaded.",,jbonofre,jira-bot,,,,,,,,,,"cshannon merged pull request #799:
URL: https://github.com/apache/activemq/pull/799


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/22 20:34;githubbot;600","jbonofre commented on pull request #799:
URL: https://github.com/apache/activemq/pull/799#issuecomment-1063347262


   @cshannon thx !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/22 20:36;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 09 20:35:56 UTC 2022,,,,,,,,,,,"0|z10c6o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Mar/22 20:35;jira-bot;Commit 9ba7aab24dea5feefcb474374fb02e0dd50e9a83 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9ba7aab ]

[AMQ-8533] Fix maven-bundle-plugin instructions to avoid shading all packages
;;;","09/Mar/22 20:35;jira-bot;Commit 5f9a5162820b1ead4dbff53b39e27a8196e97a4f in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5f9a516 ]

Merge pull request #799 from jbonofre/AMQ-8533

[AMQ-8533] Fix maven-bundle-plugin instructions to avoid shading all packages;;;","09/Mar/22 20:35;jira-bot;Commit 17330be854f917dc5d8ed45acafc3e2367db55f5 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=17330be ]

[AMQ-8533] Fix maven-bundle-plugin instructions to avoid shading all packages

(cherry picked from commit 9ba7aab24dea5feefcb474374fb02e0dd50e9a83)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix integration test failures on main and 5.17.x,AMQ-8528,13432623,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,08/Mar/22 11:52,09/Mar/22 17:55,13/Jul/23 08:27,08/Mar/22 18:34,5.17.0,,,,5.17.0,,,,,,,,0,,,,,"There are various test failures on the latest main run that need to be fixed after re-enabling the unit tests module. We need to figure out which ones apply to 5.17.x as well and if the test failures are real regressions or just issues with the tests. Also we should re-enable the quick tests mode in 5.17.x as part of this (and scale back some of the tests so it's faster)

https://ci-builds.apache.org/job/ActiveMQ/job/ActiveMQ/job/main/115/#showFailuresLink",,cshannon,jira-bot,,,,,,,,,,"cshannon opened a new pull request #795:
URL: https://github.com/apache/activemq/pull/795


   -DurableFiveBrokerNetworkBridgeTest: Fix refactoring mistake
   -SpringTest: Fix Spring xml files


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 11:56;githubbot;600","cshannon commented on pull request #795:
URL: https://github.com/apache/activemq/pull/795#issuecomment-1061701508


   @jbonofre  and @mattrpav - This is a work in progress, I'm going to make more changes and push them up. I'll let you guys know when I'm done.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 11:57;githubbot;600","cshannon commented on pull request #795:
URL: https://github.com/apache/activemq/pull/795#issuecomment-1061875044


   @jbonofre and @mattrpav - Ok I'm all finished, we are good to go to keep going with 5.17.0. There's nothing here that justifies cancelling the vote. There are a couple issues to fix later (notably the JMS 2.0 broken tests in main) and some other flaky tests but nothing that's a real regression.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 15:05;githubbot;600","cshannon commented on pull request #795:
URL: https://github.com/apache/activemq/pull/795#issuecomment-1061897567


   I figure we can merge this into main after CI runs and then backport to 5.17.x for 5.17.1 plus continue on with some of my comments to fix the flaky tests, jms 2.0 issues and genonimo annotation jar.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 15:26;githubbot;600","cshannon commented on pull request #795:
URL: https://github.com/apache/activemq/pull/795#issuecomment-1061947287


   Note I just fixed the JMS 2.0 failures here : https://github.com/apache/activemq/commit/957a2dd9408d22328829a04ce1780406dc7600e4
   
   It was a trivial fix so I just pushed the commit to main


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 16:11;githubbot;600","mattrpav commented on a change in pull request #795:
URL: https://github.com/apache/activemq/pull/795#discussion_r821836816



##########
File path: activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
##########
@@ -146,6 +146,7 @@ public void testNoScheduledRedeliveryOfDuplicates() throws Exception {
 
         PolicyEntry policyEntry = new PolicyEntry();
         policyEntry.setUseCache(false); // disable the cache such that duplicates are not suppressed on send
+        policyEntry.setSendDuplicateFromStoreToDLQ(true);

Review comment:
       Nice catch. This is a good example of how dupe from store can occur as well.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 16:25;githubbot;600","cshannon commented on pull request #795:
URL: https://github.com/apache/activemq/pull/795#issuecomment-1062078689


   I'm going to go ahead and merge this into main and into 5.17.x as I think it should be fine


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 18:29;githubbot;600","cshannon merged pull request #795:
URL: https://github.com/apache/activemq/pull/795


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/22 18:30;githubbot;600",,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 08 18:34:14 UTC 2022,,,,,,,,,,,"0|z10a7k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Mar/22 16:10;jira-bot;Commit 957a2dd9408d22328829a04ce1780406dc7600e4 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=957a2dd ]

AMQ-8528: Fix JMS 2.0 related test failures
;;;","08/Mar/22 18:29;jira-bot;Commit 32e72b0879713bb017bd258efddfa18355504123 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=32e72b0 ]

AMQ-8528: Fix test failures in integration module

-DurableFiveBrokerNetworkBridgeTest: Fix refactoring mistake
-SpringTest: Fix Spring xml files
-BrokerRedeliveryTest: Fix after sendDuplicateFromStoreToDLQ default
changed to false
-AMQ4952Test: Fix after sendDuplicateFromStoreToDLQ default
changed to false
-AMQ3537Test: Add missing package to SERIALIZABLE_PACKAGES
-OfflineDurableSubscriberTimeoutTest: Fix after log4j2 update
-JDBCConcurrentDLQTest: Fix after log4j2 update
;;;","08/Mar/22 18:29;jira-bot;Commit 6f907c46b9f203550cfc69b5c1a11eb8c54760ae in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6f907c4 ]

Merge pull request #795 from cshannon/AMQ-8528

AMQ-8528: Fix test failures in integration module;;;","08/Mar/22 18:34;jira-bot;Commit f25ff1bca268d1ae4dbbb386db3873a362abf607 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f25ff1b ]

AMQ-8528: Fix test failures in integration module

-DurableFiveBrokerNetworkBridgeTest: Fix refactoring mistake
-SpringTest: Fix Spring xml files
-BrokerRedeliveryTest: Fix after sendDuplicateFromStoreToDLQ default
changed to false
-AMQ4952Test: Fix after sendDuplicateFromStoreToDLQ default
changed to false
-AMQ3537Test: Add missing package to SERIALIZABLE_PACKAGES
-OfflineDurableSubscriberTimeoutTest: Fix after log4j2 update
-JDBCConcurrentDLQTest: Fix after log4j2 update

(cherry picked from commit 32e72b0879713bb017bd258efddfa18355504123)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Everybody granted full privileges on /api/* in jetty.xml,AMQ-8522,13431752,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,clanger,clanger,03/Mar/22 15:37,07/Mar/22 10:05,13/Jul/23 08:27,06/Mar/22 06:47,5.16.4,,,,5.16.5,5.17.0,,Web Console,,,,,0,,,,,"Everybody granted full privileges on {{/api/*}} in jetty.xml

Before fixing AMQ-5388, the ContstraintMapping for the ""user"" role contained the path part {{{}""/api/*""{}}}, thus binding any API call to the ""user"" role.


With the fix for AMQ-5388 the path part {{""/api/*""}} was removed. This has the effect that a request to {{""/api/message/...""}} or {{""/api/jolokia/...""}} is allowed to everybody.

IMHO the path part {{""/api/*""}} should be added back to the ContstraintMapping mapping.",,clanger,cshannon,jira-bot,,,,,,,,,"jbonofre commented on pull request #790:
URL: https://github.com/apache/activemq/pull/790#issuecomment-1058254122


   This PR will need to be rebased on #789 when complete.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 16:51;githubbot;600","cshannon commented on pull request #790:
URL: https://github.com/apache/activemq/pull/790#issuecomment-1058293154


   LGTM


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 17:23;githubbot;600","cshannon commented on pull request #790:
URL: https://github.com/apache/activemq/pull/790#issuecomment-1058536609


   @jbonofre - you should be able to rebase this now against main and let the tests run


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 22:02;githubbot;600","jbonofre merged pull request #790:
URL: https://github.com/apache/activemq/pull/790


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/22 06:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,AMQ-5388,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 07 10:05:40 UTC 2022,,,,,,,,,,,"0|z104uw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Mar/22 16:16;cshannon;[~jbonofre] - Can you take a look at this? Looks like you had reviewed/merged in AMQ-5388;;;","06/Mar/22 06:45;jira-bot;Commit a74fe37582dc7cabc77828fda9642f580f4cf857 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a74fe37 ]

[AMQ-8522] Secure /api path on the web console
;;;","06/Mar/22 06:45;jira-bot;Commit 4492cc07e4d2a9b7aaf0f76c5499f4f390b44ed2 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4492cc0 ]

Merge pull request #790 from jbonofre/AMQ-8522

[AMQ-8522] Secure /api path on the web console;;;","06/Mar/22 06:46;jira-bot;Commit f7d94093be784f663029ecb764671119db7f3155 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7d9409 ]

[AMQ-8522] Secure /api path on the web console

(cherry picked from commit a74fe37582dc7cabc77828fda9642f580f4cf857)
;;;","06/Mar/22 06:47;jira-bot;Commit 538d86fbff201da6d4bdac825398ad7073f4b50b in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=538d86f ]

[AMQ-8522] Secure /api path on the web console

(cherry picked from commit a74fe37582dc7cabc77828fda9642f580f4cf857)
;;;","07/Mar/22 10:05;clanger;Thank you very much for this super fast resolution!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default maven build does not build all modules,AMQ-8520,13431320,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,01/Mar/22 16:51,12/Aug/22 05:51,13/Jul/23 08:27,12/Aug/22 05:51,,,,,5.17.2,5.18.0,,,,,,,0,,,,,"There are some optional modules defined under the profile ""full.test"". These modules need to be added by default back to the normal build so they are compiled and installed as there are dependencies on them for other modules. The tests can be skipped by default but the actual modules need to still always be built. This is a problem as now version 5.18 fails to build without old snapshots plus it means all of the testing in CI is using stale snapshots.",,cshannon,jbonofre,jira-bot,robbie,,,,,,,,"cshannon opened a new pull request #787:
URL: https://github.com/apache/activemq/pull/787


   Updates the modules part of the previous full.test profile to always
   build but skip running tests by default.
   
   Also fixed miss dependency updates including log4j and jetty
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 17:24;githubbot;600","cshannon commented on pull request #787:
URL: https://github.com/apache/activemq/pull/787#issuecomment-1055677906


   This is what I have so far but is still broken as there is a lot of Log4j specific stuff that won't compile so need to decide how to fix the tests


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 17:24;githubbot;600","cshannon commented on pull request #787:
URL: https://github.com/apache/activemq/pull/787#issuecomment-1055692049


   There's a ton of places where log4j is used directly and is breaking everything. @mattrpav is taking a look now with a follow on PR to fix it. We can merge this plus the follow on PR and sort out the tree when ready.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 17:41;githubbot;600","cshannon commented on pull request #787:
URL: https://github.com/apache/activemq/pull/787#issuecomment-1055738661


   We should also update CI to run this project as well. For PRs we could activate the smoke tests or quick tests only etc. We could also set up a daily job and run a couple other profiles such as the ctivemq.exclude-broken-tests which should run a lot more tests but take longer.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 18:35;githubbot;600","jbonofre commented on pull request #787:
URL: https://github.com/apache/activemq/pull/787#issuecomment-1057000084


   Testing the PR now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 14:36;githubbot;600","jbonofre commented on a change in pull request #789:
URL: https://github.com/apache/activemq/pull/789#discussion_r817798807



##########
File path: activemq-unit-tests/src/test/java/org/apache/activemq/ProducerFlowControlTest.java
##########
@@ -261,7 +261,7 @@ public void testDisableWarning() throws Exception {
 
         Appender appender = new DefaultTestAppender() {

Review comment:
       Instead of the DefaultTestAppender, you can now use log4j AbstractAppender with var as I did in other modules.

##########
File path: activemq-unit-tests/src/test/java/org/apache/activemq/broker/region/QueuePurgeTest.java
##########
@@ -108,31 +108,30 @@ private void testPurgeLargeQueue(boolean prioritizedMessages) throws Exception {
         QueueViewMBean proxy = getProxyToQueueViewMBean();
         LOG.info(""purging.."");
 
-        org.apache.log4j.Logger log4jLogger = org.apache.log4j.Logger.getLogger(org.apache.activemq.broker.jmx.QueueView.class);
+        org.apache.logging.log4j.core.Logger log4jLogger = (org.apache.logging.log4j.core.Logger)LogManager.getLogger(org.apache.activemq.broker.jmx.QueueView.class);
+        
         final AtomicBoolean gotPurgeLogMessage = new AtomicBoolean(false);
 
         Appender appender = new DefaultTestAppender() {

Review comment:
       Same here




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 15:21;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1057064244


   I'm looking now, we can probably merge my PR first and then rebase and merge in this one to keep the tree clean


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 15:33;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1057086462


   I'm getting compilation failures still when using this commit on top of my other PR and building
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 15:55;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1057093270


   Still lots of classes broken:
   
   AMQ4221Test, AMQ4221Test, AMQ4221Test, AMQ3567Test, AMQ1936Test, AMQ3779Test, Log4JConfigTest.java
   
   And that's just some of them, there's a lot more


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 16:02;githubbot;600","mattrpav commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1057098329


   @cshannon yep. this is WIP


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 16:07;githubbot;600","cshannon merged pull request #787:
URL: https://github.com/apache/activemq/pull/787


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 20:02;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1057330999


   @mattrpav - I merged #787 so you can rebase off of that. Once we are happy with this PR and things are fixed we can cherry-pick the commits to 2.17.x and continue with the release


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/22 20:06;githubbot;600","jbonofre commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1057736165


   Retesting this PR.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 06:59;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1058030112


   It's not letting me push an update to this branch but I fixed two tests with this commit: https://github.com/cshannon/activemq/commit/766743deb1e1b644f29b34f04e15e4741834f22e


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 13:14;githubbot;600","cshannon edited a comment on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1058030112


   It's not letting me push an update to this branch but I fixed two tests with this commit: https://github.com/cshannon/activemq/commit/766743deb1e1b644f29b34f04e15e4741834f22e
   
   This commit fixes AMQ6446Test and JmxAuditLogTest


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 13:27;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1058053870


   https://github.com/cshannon/activemq/tree/AMQ-8520-log4j2
   
   Tests my branch fixes:
   
   org.apache.activemq.store.SharedFileLockerTest
   org.apache.activemq.store.kahadb.KahaDBPersistenceAdapterTest
   org.apache.activemq.usecases.AMQ6446Test
   org.apache.activemq.jmx.JmxAuditLogTest
   
   These tests are already passing for me when I run them in my IDE:
   
   org.apache.activemq.store.kahadb.KahaDBTest
   org.apache.activemq.usecases.ClientRebalanceTest
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 13:43;githubbot;600","cshannon edited a comment on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1058053870


   I pushed up my commit and marked off tests that pass for me on command line so far, still looking at others


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 14:01;githubbot;600","cshannon commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1058486993


   I think we can probably merge this (either just keep both commits or squash, i don't care). Then we need to decide on a profile to run for CI by default and merge stuff into 2.17.x. Last thing would be to set up a daily job to run all tests
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 20:54;githubbot;600","mattrpav commented on pull request #789:
URL: https://github.com/apache/activemq/pull/789#issuecomment-1058493322


   @cshannon agreed. Let's merge and see how it runs on Apache CI and fix up any tests from there.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 21:03;githubbot;600","mattrpav merged pull request #789:
URL: https://github.com/apache/activemq/pull/789


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/22 21:24;githubbot;600",,,,,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 20 17:00:14 UTC 2022,,,,,,,,,,,"0|z1027c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/22 17:10;robbie;Related, that unit tests module it requires hasnt been deployed since Nov 2020 when the changes were made to add the Jenkinsfile and change the profile bits, so every test needing it since will have downloaded that stale snapshot.

 

Separately, the Jenkinsfile doesnt reference the renamed ""main"" branch and so hasnt deployed any 5.17.0-SNAPSHOT since April 2021 when the branch was renamed. It also doesnt yet reference the new 5.17.x branch either yet and so still wont deploy anything for commits there either.;;;","01/Mar/22 17:15;robbie;Although that may not really be a change from 5.16.x and 5.15.x (which should be removed now) previously, since it looks like it possibly only deploys on success of the earlier tests stages for those and so e.g it isnt deploying anything for them either as those always fail. The main bits were running a reduced set though and passing at times, so they should deploy something if it wasnt gated off by the branch ref comparison being wrong.;;;","01/Mar/22 17:20;robbie;Re: the affects/fix versions, I dont think 5.16.x is affected by the main report of this issue, only 5.17.x.;;;","02/Mar/22 12:49;jbonofre;Sorry, jumping late. I think 5.16.x is fine (gonna check anyway). Let me check/test PR.;;;","02/Mar/22 14:35;jbonofre;I confirm that 5.16.x is not impacted, only main/5.17.x. Testing the PR.;;;","02/Mar/22 20:04;jira-bot;Commit f240cb58067636e1b32d17f8748c8028019da262 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f240cb5 ]

AMQ-8520: Re-enable all modules to compile and build by default

Updates the modules part of the previous full.test profile to always
build but skip running tests by default.

Also fixed miss dependency updates including log4j and jetty
;;;","02/Mar/22 20:04;jira-bot;Commit c1b35058d3b3fd388aa714af0726e4063fa9d7e1 in activemq's branch refs/heads/main from Christopher L. Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c1b3505 ]

Merge pull request #787 from cshannon/AMQ-8520

AMQ-8520: Re-enable all modules to compile and build by default;;;","03/Mar/22 21:25;jira-bot;Commit 7ec5254bb59924b09d124fc19c797c2587bceea6 in activemq's branch refs/heads/main from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7ec5254 ]

[AMQ-8520] WIP: Convert activemq-unit-tests to log4j2
;;;","03/Mar/22 21:25;jira-bot;Commit ae30dce4e24ce5e0467d2a3219627cbefef1f0ae in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ae30dce ]

AMQ-8520: Log4j2 test fixes

Also fixes Log4jConfigView
;;;","03/Mar/22 21:59;jira-bot;Commit efe3f5b7d4aefc715e0228452c23d1603b3e2c48 in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=efe3f5b ]

AMQ-8520: Re-enable all modules to compile and build by default

Updates the modules part of the previous full.test profile to always
build but skip running tests by default.

Also fixed miss dependency updates including log4j and jetty

(cherry picked from commit f240cb58067636e1b32d17f8748c8028019da262)
;;;","03/Mar/22 21:59;jira-bot;Commit 4d662648beab43e20331f46ee2b5e30120544c5e in activemq's branch refs/heads/activemq-5.17.x from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4d66264 ]

[AMQ-8520] WIP: Convert activemq-unit-tests to log4j2

(cherry picked from commit 7ec5254bb59924b09d124fc19c797c2587bceea6)
;;;","03/Mar/22 21:59;jira-bot;Commit da9e5276f1a20699bedf4c16229c96d6fc69e00f in activemq's branch refs/heads/activemq-5.17.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=da9e527 ]

AMQ-8520: Log4j2 test fixes

Also fixes Log4jConfigView

(cherry picked from commit ae30dce4e24ce5e0467d2a3219627cbefef1f0ae)
;;;","03/Mar/22 22:03;cshannon;main branch and 5.17.x are now building again.

The last thing we should do is to pick a default profile for activemq-unit-tests to run when tests are run (vs currently skipping all tests) and then we can close this out;;;","20/Apr/22 05:50;jbonofre;I guess this one is fixed right ?;;;","20/Apr/22 08:37;robbie;Looks like there was some more related commits (e.g [https://github.com/apache/activemq/commit/c4d9d70987d1a59868e46837110ff16546c2dbc6] and [https://github.com/apache/activemq/commit/15a2f3de2c87f305f640321ed5d79b31a416d67b)] that closed out the test side yes, even before 5.17.0.

 

I'd note the earliest comments though about stale snapshots, from the issues of tying their deployment to the success of test runs that rarely pass. There have only been three 5.18.0 snapshots deployed in total it seems, with none deployed between March 4th and April 10th despite a variety of commits in that time, and only 1 in the last 9 days despite all the activity. Worse, no 5.17.1 or 5.16.5 snapshot has _ever_ been deployed yet in the several weeks since the prior releases.;;;","20/Apr/22 13:19;jbonofre;I think unit-test should be on a dedicated profile we execute only weekly for instance. The problem right now is that the full build is so long that it times out on Jenkins, preventing to deploy SNAPSHOTs.;;;","20/Apr/22 14:03;robbie;Looking at Jenkins its mostly test failure rather than timeout/abort that stops it deploying.

In any case, wasnt suggesting it needs to run everything every time, the systests are clearly ridiculous for use in that regard. Just noting that the deployment looks like it needs changed as its just useless in its present state. Either e.g move deploy before the tests in that job, or to a seperate job entirely, with just 'if it builds it deploys' behaviour [maybe throwing in the actual unit, not system, tests)...or just stop deploying entirely as it already mostly doesnt do it anyway.;;;","20/Apr/22 14:08;jbonofre;The last builds about PR were timed out (that's true we had build failure up to last week end).

I agree, my preference would be to run and deploy without test, and run tests after (it's what I do on Karaf for instance).;;;","20/Apr/22 15:14;robbie;I was only looking at the main/5.17.x/5.16.x branch jobs that actually do deployments. The PR runs already never deploy anything for obvious reasons.;;;","20/Apr/22 17:00;jbonofre;Yeah for the deploy. But the pr build time out. So if it times out on pr, there’s good chance it times out on main and so no deployment. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE when starting ActiveMQ,AMQ-8518,13430983,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,28/Feb/22 12:08,19/Apr/22 06:30,13/Jul/23 08:27,19/Apr/22 06:30,5.16.4,,,,5.16.5,5.17.1,5.18.0,,,,,,0,,,,,"When upgrading a broker to 5.16.4, I noticed a NPE during startup. This seems to be caused by an incoming STOMP packet at that time.

Here is what has been logged:
{code}
2022-02-28T12:59:33.411+0100 [WrapperSimpleAppMain] INFO BrokerService - Apache ActiveMQ 5.16.4 (broker, broker) started
2022-02-28T12:59:33.411+0100 [WrapperSimpleAppMain] INFO BrokerService - For help or more information please see: http://activemq.apache.org
2022-02-28T12:59:34.084+0100 [ActiveMQ NIO Worker 5] WARN Service - Async error occurred
java.lang.NullPointerException
	at org.apache.activemq.filter.DestinationMapNode.appendMatchingValues(DestinationMapNode.java:238)
	at org.apache.activemq.filter.DestinationMap.findWildcardMatches(DestinationMap.java:194)
	at org.apache.activemq.filter.DestinationMap.findWildcardMatches(DestinationMap.java:187)
	at org.apache.activemq.filter.DestinationMap.unsynchronizedGet(DestinationMap.java:84)
	at org.apache.activemq.broker.region.AbstractRegion.getDestinations(AbstractRegion.java:327)
	at org.apache.activemq.broker.region.RegionBroker.getDestinations(RegionBroker.java:176)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.BrokerFilter.getDestinations(BrokerFilter.java:84)
	at org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor.send(VirtualTopicInterceptor.java:81)
	at org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor.send(VirtualTopicInterceptor.java:73)
	at org.apache.activemq.broker.region.DestinationFilter.send(DestinationFilter.java:138)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:511)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:477)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:295)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:60)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
	at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:226)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
	at org.apache.activemq.broker.util.TimeStampingBrokerPlugin.send(TimeStampingBrokerPlugin.java:132)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:580)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:769)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:335)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:179)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:347)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:237)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOSSLTransport.doConsume(NIOSSLTransport.java:509)
	at org.apache.activemq.transport.stomp.StompNIOSSLTransport.doConsume(StompNIOSSLTransport.java:92)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:119)
	at org.apache.activemq.transport.stomp.StompNIOSSLTransport.processCommand(StompNIOSSLTransport.java:80)
	at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:284)
	at org.apache.activemq.transport.nio.NIOSSLTransport$1.onSelect(NIOSSLTransport.java:176)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2022-02-28T12:59:34.126+0100 [ActiveMQ BrokerService[broker] Task-10] ERROR TaskRunnerFactory - Error in thread 'ActiveMQ BrokerService[broker] Task-10'
java.lang.NullPointerException
	at org.apache.activemq.transport.stomp.StompWireFormat.encodeHeader(StompWireFormat.java:306)
	at org.apache.activemq.transport.stomp.StompWireFormat.marshalHeaders(StompWireFormat.java:85)
	at org.apache.activemq.transport.stomp.StompWireFormat.marshal(StompWireFormat.java:106)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:193)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToStomp(StompTransportFilter.java:108)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToStomp(ProtocolConverter.java:183)
	at org.apache.activemq.transport.stomp.ProtocolConverter.handleException(ProtocolConverter.java:316)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:886)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:72)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1483)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:981)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:1032)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{code}

I then restarted the broker once more and this went fine so I cannot reproduce the problem.

I hope that the stack trace is enough to understand what happened.",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre merged PR #829:
URL: https://github.com/apache/activemq/pull/829


;19/Apr/22 06:28;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Apr 19 06:30:11 UTC 2022,,,,,,,,,,,"0|z1004w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/22 14:27;jbonofre;Thanks for the report, I will take a look.;;;","19/Apr/22 06:28;jira-bot;Commit 0849ae02116b9da3251b026546ce2fb049589dbe in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0849ae021 ]

[AMQ-8518] Avoid NPE if path is null (at startup)
;;;","19/Apr/22 06:28;jira-bot;Commit d09fe4569528891c5d0fdfc0d2bb87be00e0d862 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d09fe4569 ]

Merge pull request #829 from jbonofre/AMQ-8518

[AMQ-8518] Avoid NPE if path is null (at startup);;;","19/Apr/22 06:29;jira-bot;Commit 68bed90c99c09bf96c8944b890022d8ff28ca969 in activemq's branch refs/heads/activemq-5.17.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=68bed90c9 ]

[AMQ-8518] Avoid NPE if path is null (at startup)

(cherry picked from commit 0849ae02116b9da3251b026546ce2fb049589dbe)
;;;","19/Apr/22 06:30;jira-bot;Commit 4b1264fbe821f4d69f3205a19b7d81ba6c77ed4c in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4b1264fbe ]

[AMQ-8518] Avoid NPE if path is null (at startup)

(cherry picked from commit 0849ae02116b9da3251b026546ce2fb049589dbe)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queues do not stop TempStore Usage leading to a memory leak,AMQ-8509,13430205,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,23/Feb/22 12:11,23/Feb/22 12:44,13/Jul/23 08:27,23/Feb/22 12:44,5.16.4,,,,5.16.5,5.17.0,,,,,,,0,,,,,AMQ-7085 updated Queue.start() method to properly start the TempUsage tracking just like StoreUsage and MemoryUsage but the stop() method doesn't call stop on it so there is a memory leak when Queues are now stopped.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7085,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 23 12:43:45 UTC 2022,,,,,,,,,,,"0|z0zvcg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Feb/22 12:26;cshannon;https://github.com/apache/activemq/pull/778;;;","23/Feb/22 12:41;jira-bot;Commit d1e9ba68b3cbea3e9294cf4993d005c3c8ea86f2 in activemq's branch refs/heads/main from Artur Pedroso
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d1e9ba6 ]

AMQ-8509: Fix TempUsage memory leak

If you have an application that creates lots of queues it will eventually
fail with OOM because TempUsage is started on Queue#start but never stopped.

The `systemUsage.getTempUsage().start()` used on the Queue#start
adds elements on a List from TempUsage parent and these elements
are never removed.

To reproduce this issue you need to leave an application
running for a long time creating different queues.

The only way to avoid the leak right now is to stop the BrokerService,
which isn't a solution.
;;;","23/Feb/22 12:41;jira-bot;Commit fb7ae908efea46b9c9ff12ad3727d20a9374ebae in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fb7ae90 ]

Merge branch 'AMQ-8509' into main

This closes #778
;;;","23/Feb/22 12:41;jira-bot;Commit df354fa0237dba309592277e3cfecbe1d55690be in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=df354fa ]

AMQ-8509: Update TempStore Usage test to verify cleanup

Add a unit test to the previous tests added in AMQ-7085 to verify
TempUsage is cleaned up and stopped on Queue.stop()
;;;","23/Feb/22 12:43;jira-bot;Commit 84a28d78f27541b3c9790b3d8d9430566954378b in activemq's branch refs/heads/activemq-5.16.x from Artur Pedroso
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=84a28d7 ]

AMQ-8509: Fix TempUsage memory leak

If you have an application that creates lots of queues it will eventually
fail with OOM because TempUsage is started on Queue#start but never stopped.

The `systemUsage.getTempUsage().start()` used on the Queue#start
adds elements on a List from TempUsage parent and these elements
are never removed.

To reproduce this issue you need to leave an application
running for a long time creating different queues.

The only way to avoid the leak right now is to stop the BrokerService,
which isn't a solution.

(cherry picked from commit d1e9ba68b3cbea3e9294cf4993d005c3c8ea86f2)
;;;","23/Feb/22 12:43;jira-bot;Commit 8674538d617d61f55fe5ef0c80f5f74e75115b77 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8674538 ]

AMQ-8509: Update TempStore Usage test to verify cleanup

Add a unit test to the previous tests added in AMQ-7085 to verify
TempUsage is cleaned up and stopped on Queue.stop()

(cherry picked from commit df354fa0237dba309592277e3cfecbe1d55690be)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix JDBCIOExceptionHandlerTest, AMQ5212Test, JMSMessageTest unit tests compilation",AMQ-8456,13422189,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,12/Jan/22 09:59,12/Jan/22 19:36,13/Jul/23 08:27,12/Jan/22 19:36,,,,,5.17.0,,,Test Cases,,,,,0,,,,,"Some unit tests don't compile:
 * JDBCIOExceptionHandlerTest compilaion fails due com.sun.jndi.rmi.registry is not visible
 * AMQ6122Test compilation fails due ambiguous send method
 * JMSMessageTest compilation fails due to not overrride isBodyAssignableTo(java.lang.Class) 

I'm fixing.",,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 12 19:36:55 UTC 2022,,,,,,,,,,,"0|z0yi5k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Jan/22 19:36;jira-bot;Commit ff134fd135b176c01ee8505265d1d6ac2db74055 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ff134fd ]

[AMQ-8456] Fix unit test compilation
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message URL Host is incorrect,AMQ-8451,13421213,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,varunr10,varunr10,07/Jan/22 06:30,01/Feb/22 10:13,13/Jul/23 08:27,31/Jan/22 16:25,5.16.2,,,,,,,JMS client,,,,,0,,,,,"After I upgraded the Active MQ client version from 5.15.12 to 5.16.2 in our pom.xml, I encounter the below exception for Blob Messages. I tried upgrading to 5.16.3 and find the same problem

*Exception*
_java.io.IOException: The message URL host is incorrect_
    _at org.apache.activemq.blob.DefaultBlobDownloadStrategy.getInputStream(DefaultBlobDownloadStrategy.java:51)_
    _at org.apache.activemq.blob.BlobDownloader.getInputStream(BlobDownloader.java:38)_
    _at org.apache.activemq.command.ActiveMQBlobMessage.getInputStream(ActiveMQBlobMessage.java:132)_ 

The URL host of our message is same for both the versions, however it just gives an exception for the 5.16.2 version.

http://blob-service:8080/blob/ID
ID Masked 

Thanks in advance!

 ",,jbonofre,varunr10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8459,,,,AMQ-8459,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 01 10:13:27 UTC 2022,,,,,,,,,,,"0|z0yc54:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Jan/22 06:34;jbonofre;Can you share a scenario to reproduce ? Thanks;;;","10/Jan/22 05:34;varunr10;Hi Jean,

We have a test scenario where we publish a Blob type message to ActiveMQ queue and wait for a call back response.

when we execute the getInputStream() method of the blob message, we get the following exception 'java.io.IOException: The message URL host is incorrect'

*Code snippet for reference:*
{code:java}
private void onMessageInternal(final Message message) {
CommandInputStream commandInputStream = null;         
try {            
CommandBase command = null;             
if (message instanceof BlobMessage) {                
ActiveMQBlobMessage blobMessage = (ActiveMQBlobMessage) message;                 blobMessage.setBlobDownloader(new BlobDownloader(new BlobTransferPolicy()));       

commandInputStream = new CommandInputStream(blobMessage.getInputStream());         

command = commandInputStream.getCommand();            
} 
else if (message instanceof ObjectMessage) {{code}
*Exception:* 

2022-01-05 17:32:31.493 [ERROR] — [pool-6-thread-6] c.s.f.g.c.dispatcher.Dispatcher     : Error on onMessage().
java.io.IOException: The message URL host is incorrect
    at org.apache.activemq.blob.DefaultBlobDownloadStrategy.getInputStream(DefaultBlobDownloadStrategy.java:51)
    at org.apache.activemq.blob.BlobDownloader.getInputStream(BlobDownloader.java:38)
    at org.apache.activemq.command.ActiveMQBlobMessage.getInputStream(ActiveMQBlobMessage.java:132)
    at c.s.f.g.c.dispatcher.Dispatcher.onMessageInternal(Dispatcher.java:132)
    at c.s.f.g.c.dispatcher.Dispatcher.lambda$returnOnMessage$0(Dispatcher.java:119)
    at c.s.f.g.c.dispatcher.Dispatcher$$Lambda$635/22398831.run(Unknown Source)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)

*pom.xml*
{code:java}
<dependency>
    <groupId>org.apache.activemq</groupId>
    <artifactId>activemq-client</artifactId>
    <version>5.16.2</version>
</dependency>
<dependency>
     <groupId>org.apache.activemq</groupId>
     <artifactId>activemq-broker</artifactId>
     <version>5.16.2</version>
</dependency> {code}
        

Please feel free to let us know if there are any other information required.

 

Thanks

 ;;;","12/Jan/22 05:00;varunr10;Hi [~jbonofre] ,

Can you please let me know if there's any update on this or any info required.

Thanks 

 ;;;","28/Jan/22 04:49;varunr10;[~jbonofre] ,

Can you please let me know if there is an update on this ticket? Or if this issue has been fixed in newer versions?

Thanks;;;","28/Jan/22 05:12;jbonofre;As you can see on target version, I’m still working on it to include in next releases. ;;;","30/Jan/22 15:37;jbonofre;When you send the message, do you set the upload URL ?

On ActiveMQ 5.16.x, we enforce (for security reason) the check of the message. It has been added in commit:
{code:java}
commit 45108a232843ec1b9d678d96af5b9d2ec57c5a04 (github/pr/517)
Author: Colm O hEigeartaigh <coheigea@apache.org>
Date:   Tue Mar 24 14:57:55 2020 +0000


    AMQ-7450 - Put some restrictions on the URLs that are allowed in BlobMessages {code}
Especially, we added:
{code:java}
 +        // Do some checks on the received URL against the transfer policy
+        URL uploadURL = new URL(super.transferPolicy.getUploadUrl());
+        String protocol = message.getURL().getProtocol();
+        if (!protocol.equals(uploadURL.getProtocol())) {
+            throw new IOException(""The message URL protocol is incorrect"");
+        }
+
+        String host = message.getURL().getHost();
+        if (!host.equals(uploadURL.getHost())) {
+            throw new IOException(""The message URL host is incorrect"");
+        }
+
+        int port = message.getURL().getPort();
+        if (uploadURL.getPort() != 0 && port != uploadURL.getPort()) {
+            throw new IOException(""The message URL port is incorrect"");
+        }{code}
So, in your case, you certainly not have set the host on the message URL, or different to what you sent.

I can add a flag to avoid such check but it make sense to have such check. So, can you please check the upload URL of the message you produce.;;;","31/Jan/22 07:34;jbonofre;I don't want to hold 5.16.4 any longer. If you can't update this Jira, let me postpone this Jira for 5.16.5. For me, the ""behavior"" is clear. Just wanting your feedback (if you can share the producer code, it would help). Thanks !;;;","31/Jan/22 08:16;varunr10;Thanks for your suggestion [~jbonofre] 

After setting the upload url to the BlobTransferPolicy, I don't notice the issue anymore. Previously the Upload url was null and hence resulting in incorrect host issue.
{code:java}
if (message instanceof BlobMessage) {
                ActiveMQBlobMessage blobMessage = (ActiveMQBlobMessage) message;
                BlobTransferPolicy blobTransferPolicy = new BlobTransferPolicy();
                blobTransferPolicy.setUploadUrl(""http://blob-service:8080/blob/"");
                blobMessage.setBlobDownloader(new BlobDownloader(blobTransferPolicy));                commandInputStream = new CommandInputStream(blobMessage.getInputStream());
                command = commandInputStream.getCommand(); {code}
Thanks,
Varun;;;","31/Jan/22 16:24;jbonofre;OK, so I consider the issue as ""fixed"" ;) If it's OK for you ;);;;","31/Jan/22 16:25;jbonofre;It works fine if URL is set.;;;","01/Feb/22 10:13;varunr10;It can be closed. Thanks for your support!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Several tests are failing in activemq-stomp due to SecurityException,AMQ-8445,13419317,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,24/Dec/21 06:38,12/Jan/22 10:20,13/Jul/23 08:27,12/Jan/22 10:20,5.16.4,5.17.0,,,5.16.4,5.17.0,,STOMP,,,,,1,,,,,"Several tests are failing in activemq-stomp due to SecurityException, especially:
{code:java}
Caused by: java.lang.SecurityException: Unable to authenticate transport without SSL certificate. {code}
Basically, all tests using SSL are failing.",,bkoehm,jbonofre,jira-bot,,,,,,,,,"jbonofre merged pull request #744:
URL: https://github.com/apache/activemq/pull/744


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jan/22 10:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,AMQ-8275,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 12 10:20:46 UTC 2022,,,,,,,,,,,"0|z0y0gw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Jan/22 07:36;jbonofre;This problem has been introduced by this commit:
{code:java}
34c4e186fe3d71c82866e89afd2706a3619ca2b4 is the first bad commit
commit 34c4e186fe3d71c82866e89afd2706a3619ca2b4
Author: Jonathan Gallimore <jon@jrg.me.uk>
Date:   Tue Sep 14 12:53:35 2021 +0100


    AMQ-8275 eliminate use of reflection for SNI on SslTransport


 .../activemq/transport/tcp/SslTransport.java       | 23 ++++++++++------------
 1 file changed, 10 insertions(+), 13 deletions(-) {code}
I'm investigating why and eventually I will revert this change.;;;","12/Jan/22 10:20;jira-bot;Commit c2e2c818b529ee45ff244564ea52206b81eaf783 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c2e2c81 ]

[AMQ-8445] Fix SSLParameters set in the SSL transport
;;;","12/Jan/22 10:20;jira-bot;Commit 0585a2998d4e2ac048e2d72cf48156103e3016b3 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0585a29 ]

Merge pull request #744 from jbonofre/AMQ-8445

[AMQ-8445] Fix SSLParameters set in the SSL transport;;;","12/Jan/22 10:20;jira-bot;Commit e52b1bd0ede200007c66ada57dd17775d0b3589d in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e52b1bd ]

[AMQ-8445] Fix SSLParameters set in the SSL transport

(cherry picked from commit c2e2c818b529ee45ff244564ea52206b81eaf783)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Validate example camel.xml fails in the assembly,AMQ-8439,13418198,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,17/Dec/21 09:00,19/Dec/21 06:47,13/Jul/23 08:27,19/Dec/21 06:47,,,,,5.15.16,5.16.4,5.17.0,,,,,,0,,,,,,,jbonofre,jira-bot,,,,,,,,,,"jbonofre merged pull request #737:
URL: https://github.com/apache/activemq/pull/737


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/21 06:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Dec 19 06:47:06 UTC 2021,,,,,,,,,,,"0|z0xtkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Dec/21 09:01;jbonofre;{code:java}
[INFO] Running org.apache.activemq.config.ValidateXMLConfigTest
[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 1.462 s <<< FAILURE! - in org.apache.activemq.config.ValidateXMLConfigTest
[ERROR] validateExampleConfig(org.apache.activemq.config.ValidateXMLConfigTest)  Time elapsed: 1.091 s  <<< FAILURE!
java.lang.AssertionError: /home/jbonofre/Workspace/activemq/assembly/target/conf/camel.xml, org.xml.sax.SAXParseException; Premature end of file.
        at org.apache.activemq.config.ValidateXMLConfigTest.validateXML(ValidateXMLConfigTest.java:72)
        at org.apache.activemq.config.ValidateXMLConfigTest.validateExampleConfig(ValidateXMLConfigTest.java:62)
 {code};;;","19/Dec/21 06:46;jira-bot;Commit 359b410ffd9082861cea472fb1c85f8bf8c10ac6 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=359b410 ]

[AMQ-8439] Exclude camel.xml from assembly validateExampleConfig test
;;;","19/Dec/21 06:46;jira-bot;Commit 8a2e8c5e415b4f363e40d098356a2e6e9d6b9497 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8a2e8c5 ]

Merge pull request #737 from jbonofre/AMQ-8439

[AMQ-8439] Exclude camel.xml from assembly validateExampleConfig test;;;","19/Dec/21 06:46;jira-bot;Commit 0a1a0046a35cbf90758d421c5c1956e1c27382f5 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0a1a004 ]

[AMQ-8439] Exclude camel.xml from assembly validateExampleConfig test

(cherry picked from commit 359b410ffd9082861cea472fb1c85f8bf8c10ac6)
;;;","19/Dec/21 06:47;jira-bot;Commit 666b6a72f9d28886ea7604f15d47e00e5250c096 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=666b6a7 ]

[AMQ-8439] Exclude camel.xml from assembly validateExampleConfig test

(cherry picked from commit 359b410ffd9082861cea472fb1c85f8bf8c10ac6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Linux start script doesn't work depending of ps command version,AMQ-8425,13416256,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,09/Dec/21 10:11,15/Jan/22 05:45,13/Jul/23 08:27,15/Jan/22 05:45,5.16.3,,,,5.16.4,5.17.0,,Broker,,,,,0,,,,,"bin/activemq, line 485 reads:

       local RET=""`ps -o ""pid,args"" | grep ""^\s*$activemq_pid\s.*java""`""

The problem is (from ps man page):

""By default, ps selects all processes with the same effective user
ID (euid=EUID) as the current user and associated with the same
terminal as the invoker.""

Thus, the script essentially will ONLY find a running process
that has been started by the SAME LOGIN-SESSION.

I would say, that is rarely (if ever) the case in real-world scenarios.

For example, you login to your app-server and start ActiveMQ, then logout.
At a later point, you login again (new session) and try to stop ActiveMQ.
But unexpectedly, nothing happens 

The fix was simple, in the line above, add the '-e' flag:

       local RET=""`ps -eo ""pid,args"" | grep ""^\s*$activemq_pid\s.*java""`""

ps -e means it will list ALL processes on the host.
Then it works as expected.",,jbonofre,jira-bot,,,,,,,,,,"jbonofre merged pull request #739:
URL: https://github.com/apache/activemq/pull/739


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/22 05:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,AMQ-8411,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jan 15 05:44:09 UTC 2022,,,,,,,,,,,"0|z0xi34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Dec/21 10:12;jbonofre;The following commit changed the start script: https://github.com/apache/activemq/commit/2d78f118d059cbf3fe62d12fb344721820be0f9c;;;","15/Jan/22 05:43;jira-bot;Commit c246e0926c5f803341224000fe4391cdb3f00d76 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c246e09 ]

[AMQ-8425] Get process from any user in bin/activemq script
;;;","15/Jan/22 05:43;jira-bot;Commit ba98a39cefe1a3ea51cb7bd74693afe970940770 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ba98a39 ]

Merge pull request #739 from jbonofre/AMQ-8425

[AMQ-8425] Get process from any user in bin/activemq script;;;","15/Jan/22 05:44;jira-bot;Commit 207591e94d221f3ba56dfc9e93be1c7be4008da2 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=207591e ]

[AMQ-8425] Get process from any user in bin/activemq script

(cherry picked from commit c246e0926c5f803341224000fe4391cdb3f00d76)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unexpected \\r instead of \r in header property in incoming messages,AMQ-8409,13410468,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,mjustin,mjustin,07/Nov/21 10:56,11/Feb/22 06:03,13/Jul/23 08:27,19/Jan/22 17:30,,,,,5.16.4,5.17.0,,STOMP,,,,,0,,,,,"I tested the Stomp acceptor handling of escape sequences as specified in the 1.2 protocol documentation.

With ActiveMQ Artemis 2.19.0, all escape sequences are received according to the 1.2 specification:

!image-2021-11-07-12-04-34-856.png|width=456,height=105!

[https://stomp.github.io/stomp-specification-1.2.html#Value_Encoding]

 

With ActiveMQ ""Classic"" however, there is a difference: when the escape sequence *\r* is used in SEND frame header values, it will be received as *&#92;&#92;r* in incoming MESSAGE frames.
h2. Test with Artemis 2.19.0

The first example uses the Artemis broker. A message with four special escaped characters (backslash, colon, newline and carriage return) is sent to the broker and then received with identical values.

As you can see in the example, the header property {{*keyr*}} in the outgoing {{SEND}} frame has the value *value\r* and is received as *value\r* in the incoming {{MESSAGE}} frame.

Unescaped, this is ""value"" + carriage return

 
{noformat}
CONNECTED
version:1.2
session:be014f64
server:ActiveMQ-Artemis/2.19.0 ActiveMQ Artemis Messaging Engine
 
SEND
destination:queue/TStomp12TestCase.TestEscapes.Q
keyb:value\\
keyc:value\c
keyn:value\n
keyr:value\r
content-type:text/plain
 
Send:Bytes:112
SUBSCRIBE
destination:queue/TStomp12TestCase.TestEscapes.Q
ack:auto
id:{13084522-1FEF-4B8A-802A-4656A77784EA}
 
MESSAGE
subscription:{13084522-1FEF-4B8A-802A-4656A77784EA}
message-id:10737418259
destination:queue/TStomp12TestCase.TestEscapes.Q
expires:0
redelivered:false
priority:4
persistent:false
timestamp:1636280945342
content-type:text/plain
keyn:value\n
keyc:value\c
keyb:value\\
keyr:value\r
{noformat}
 
h2. Test with ActiveMQ 5.16.3

As you can see in the example, the header property {{*keyr*}} in the outgoing {{SEND}} frame has the value *value\r* (as in the first test) but is received as *value&#92;&#92;r* in the incoming {{MESSAGE}} frame. Unescaped, this is not ""value"" + carriage return, but ""value\r"".
{noformat}
CONNECTED
server:ActiveMQ/5.16.3
heart-beat:0,0
session:ID:DESKTOP-3LKMPLS-49926-1636281770555-3:4
version:1.2

SEND
destination:/queue/TStomp12TestCase.TestEscapes.Q
keyb:value\\
keyc:value\c
keyn:value\n
keyr:value\r
content-type:text/plain

SUBSCRIBE
destination:/queue/TStomp12TestCase.TestEscapes.Q
ack:auto
id:{7316E53E-E7C3-43DC-B2EF-75BCFC09D899}

MESSAGE
keyr:value\\r
expires:0
destination:/queue/TStomp12TestCase.TestEscapes.Q
subscription:{7316E53E-E7C3-43DC-B2EF-75BCFC09D899}
priority:4
keyb:value\\
keyc:value\c
message-id:ID\cDESKTOP-3LKMPLS-49926-1636281770555-3\c4\c-1\c1\c1
content-type:text/plain
keyn:value\n
timestamp:1636281794663
{noformat}
 

 

So it seems that ActiveMQ Classic performs either an incorrect unescaping on the incoming message, or an incorrect escaping on the outgoing message.
 ","Broker: ActiveMQ 5.16.3

OS: Windows 10

Client: own implementation",antfsc,jbertram,jbonofre,jira-bot,mjustin,,,,,,,"fscrec closed pull request #730:
URL: https://github.com/apache/activemq/pull/730


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Dec/21 23:28;githubbot;600","mattrpav commented on pull request #730:
URL: https://github.com/apache/activemq/pull/730#issuecomment-984154418


   @fscrec care to share the close reason? ie is this a non-issue?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Dec/21 23:33;githubbot;600","fscrec commented on pull request #730:
URL: https://github.com/apache/activemq/pull/730#issuecomment-984190597


   @mattrpav Hi Matt, I just needed to make a change on the code - the fix is only required for STOMP 1.2 and not for other versions. The new pull request has been already added containing the updated code.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/21 00:48;githubbot;600","mattrpav commented on pull request #731:
URL: https://github.com/apache/activemq/pull/731#issuecomment-985012418


   FYI-- I kicked off new test run on Jenkins


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/21 21:24;githubbot;600","mattrpav commented on pull request #731:
URL: https://github.com/apache/activemq/pull/731#issuecomment-985179693


   @fscrec thanks!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/21 03:12;githubbot;600","fscrec commented on pull request #731:
URL: https://github.com/apache/activemq/pull/731#issuecomment-996279466


   @mattrpav I've created a new pull request #736 for the main branch containing only three commits contained here (but from the main branch as the origin as opposed to 5.16.x I used in this PR). Should this PR be closed?
   
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/21 23:43;githubbot;600","jbonofre commented on pull request #731:
URL: https://github.com/apache/activemq/pull/731#issuecomment-996560078


   For the record, you can squash the commits in one and focus only on `main` branch (then we cherry pick on other branches).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 09:19;githubbot;600","mattrpav commented on pull request #731:
URL: https://github.com/apache/activemq/pull/731#issuecomment-996769585


   @fscrec yep, I'll close this one. Thanks for the PR!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 14:36;githubbot;600","mattrpav closed pull request #731:
URL: https://github.com/apache/activemq/pull/731


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 14:36;githubbot;600","mattrpav edited a comment on pull request #731:
URL: https://github.com/apache/activemq/pull/731#issuecomment-996769585


   @fscrec yep, I'll close this one. Thanks for the PR!
   
   Note: this is replaced by #736 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 14:36;githubbot;600","mattrpav commented on pull request #736:
URL: https://github.com/apache/activemq/pull/736#issuecomment-996778985


   Jenkins build failing due to Infra issue. Tracked here [INFRA-22620](https://issues.apache.org/jira/browse/INFRA-22620)
   
   I'll loop back on this once build goes green


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 14:49;githubbot;600","mattrpav commented on pull request #736:
URL: https://github.com/apache/activemq/pull/736#issuecomment-1011655136


   @fscrec would you kindly rebase this PR? A change was put in that we know all unit tests pass now. 
   
   I'd like to get this into 5.16.4 and 5.17.0
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/22 01:48;githubbot;600","jbonofre commented on pull request #736:
URL: https://github.com/apache/activemq/pull/736#issuecomment-1013620747


   I will do the rebase myself and start some tests.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/22 06:04;githubbot;600","asfgit closed pull request #736:
URL: https://github.com/apache/activemq/pull/736


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/22 17:29;githubbot;600",,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,,"30/Nov/21 01:18;antfsc;AMQ-8409.patch;https://issues.apache.org/jira/secure/attachment/13036787/AMQ-8409.patch","07/Nov/21 11:04;mjustin;image-2021-11-07-12-04-34-856.png;https://issues.apache.org/jira/secure/attachment/13035764/image-2021-11-07-12-04-34-856.png",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 11 06:03:21 UTC 2022,,,,,,,,,,,"0|z0wif4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Nov/21 02:35;antfsc;Hello [~mjustin] ,

I've tried to replicate the issues in many different ways but no joy so far - is there anything that could be shared regarding the client implementation (own implementation)?

Many thanks.

antfsc;;;jira-users","16/Nov/21 19:51;mjustin;Hello [~antfsc] , many thanks for your feedback. I can try to write a test case for ActiveMQ based on the included Stomp test cases. I will then come back later with the test case as soon as I find the time.;;;","21/Nov/21 15:41;mjustin;Here is a test case which reproduces the issue:

 
{code:java}
@Test(timeout = 60000)
public void testFrameHeaderEscapes() throws Exception {
    String connectFrame = ""STOMP\n"" +
            ""login:system\n"" +
            ""passcode:manager\n"" +
            ""accept-version:1.2\n"" +
            ""host:localhost\n"" +
            ""\n"" + Stomp.NULL;
    stompConnection.sendFrame(connectFrame);

    String f = stompConnection.receiveFrame();
    LOG.debug(""Broker sent: "" + f);

    assertTrue(f.startsWith(""CONNECTED""));

    String frame = ""SUBSCRIBE\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +
            ""id:12345\n"" +
            ""ack:auto\n\n"" + Stomp.NULL;
    stompConnection.sendFrame(frame);

    String message = ""SEND\n"" + ""destination:/queue/"" + getQueueName() + ""\n"" +
            ""colon:\\c\n"" +
            ""linefeed:\\n\n"" +
            ""backslash:\\\\\n"" +
            ""carriagereturn:\\r\n"" +
            ""\n"" + Stomp.NULL;
    stompConnection.sendFrame(message);

    frame = stompConnection.receiveFrame();

    LOG.debug(""Broker sent: "" + frame);
    assertTrue(frame.startsWith(""MESSAGE""));
    assertTrue(frame.contains(""colon:\\c\n""));
    assertTrue(frame.contains(""linefeed:\\n\n""));
    assertTrue(frame.contains(""backslash:\\\\\n""));
    assertTrue(frame.contains(""carriagereturn:\\r\n""));
} {code}
It can be added as-is to the unit test source file org.apache.activemq.transport.stomp.Stomp12Test.

 

The last assertion fails because the broker delivers the message with a header line carriagereturn:double backslash+r  instead of carriagereturn:\r

Actual test output is:
{noformat}
MESSAGE
expires:0
carriagereturn:\\r
destination:/queue/org.apache.activemq.transport.stomp.Stomp12Test.testFrameHeaderEscapes
JMSXUserID:system
subscription:12345
priority:4
linefeed:\n
colon:\c
message-id:ID\cDESKTOP-3PRIT8P-55077-1637509195589-5\c1\c-1\c1\c1
backslash:\\
timestamp:1637509196012{noformat};;;","22/Nov/21 01:52;antfsc;Many thanks for the test case [~mjustin] , I'll start working again on this soon.

Anthony

 ;;;","30/Nov/21 02:16;antfsc;Hello [~mjustin],

Thanks for your help - please find below the link to the patch. As soon as all the tests pass here in my local I'll create a pull request if that's ok.

[^AMQ-8409.patch]

Anthony;;;","01/Dec/21 18:00;mjustin;Hi and many thanks!

I see that the patch does not check the Stomp version, only in Stomp 1.2 the CR must be converted to \r and back.

Without checking the protocol version, it would break Stomp 1.1 clients,  which do not convert CR to \r (and back). 

 ;;;","02/Dec/21 01:53;antfsc;Hi [~mjustin],  thanks again for the heads-up. I've updated the fix to consider the protocol version in use - it will only escape the CR on STOMP 1.2 now.

The PR is here: [https://github.com/apache/activemq/pull/731]

Anthony;;;","15/Jan/22 06:05;jbonofre;I'm rebasing and testing the proposed solution. My target is to include a fix for 5.16.4.;;;","19/Jan/22 17:29;jira-bot;Commit d9450cdd74aed1471388058e28c2b777db419e68 in activemq's branch refs/heads/main from Anthony F
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d9450cd ]

[AMQ-8409] Fixed Unexpected \\r instead of \r in header property in incoming messages
;;;","19/Jan/22 17:30;jira-bot;Commit 31a07c11aae8f96172d6aadba221cb0de6634098 in activemq's branch refs/heads/activemq-5.16.x from Anthony F
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=31a07c1 ]

[AMQ-8409] Fixed Unexpected \\r instead of \r in header property in incoming messages

(cherry picked from commit d9450cdd74aed1471388058e28c2b777db419e68)
;;;","10/Feb/22 20:49;jbertram;[~jbonofre], this is marked as an ""Improvement,"" but based on the description it seems more like a bug. Should this be changed?;;;","11/Feb/22 06:03;jbonofre;[~jbertram] good point, thanks !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix JavaSE requirement in activemq-client feature,AMQ-8408,13407920,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,22/Oct/21 09:06,06/Nov/21 06:10,13/Jul/23 08:27,24/Oct/21 15:58,5.17.0,,,,5.17.0,,,OSGi/Karaf,,,,,0,,,,,,,jbonofre,jira-bot,,,,,,,,,,"mattrpav commented on a change in pull request #721:
URL: https://github.com/apache/activemq/pull/721#discussion_r734568361



##########
File path: pom.xml
##########
@@ -116,7 +116,7 @@
 
     <site-repo-url>scpexe://people.apache.org/www/activemq.apache.org/maven/</site-repo-url>
     <source-version>1.8</source-version>
-    <target-version>11</target-version>
+    <target-version>1.8</target-version>

Review comment:
       @jbonofre curious, what caused the need to drop target version back to 1.8?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/21 14:00;githubbot;600","jbonofre commented on a change in pull request #721:
URL: https://github.com/apache/activemq/pull/721#discussion_r734571867



##########
File path: pom.xml
##########
@@ -116,7 +116,7 @@
 
     <site-repo-url>scpexe://people.apache.org/www/activemq.apache.org/maven/</site-repo-url>
     <source-version>1.8</source-version>
-    <target-version>11</target-version>
+    <target-version>1.8</target-version>

Review comment:
       @mattrpav using 11 as target is a mistake IMHO as it blocks the overall usage. I agree to focus/build with JDK 11, but target should still be 1.8 to be compliant with any Karaf version especially.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/21 14:04;githubbot;600","mattrpav commented on a change in pull request #721:
URL: https://github.com/apache/activemq/pull/721#discussion_r734615794



##########
File path: pom.xml
##########
@@ -116,7 +116,7 @@
 
     <site-repo-url>scpexe://people.apache.org/www/activemq.apache.org/maven/</site-repo-url>
     <source-version>1.8</source-version>
-    <target-version>11</target-version>
+    <target-version>1.8</target-version>

Review comment:
       I see. Not a huge deal at this point. Are you thinking we target 5.18.x for source/target JDK 11?  With 8 deprecated and 17 released, I think it makes sense for laying out a plan. 
   
   Loom could be interesting for ActiveMQ, and we probably want a minor for each bump.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/21 14:54;githubbot;600","jbonofre commented on a change in pull request #721:
URL: https://github.com/apache/activemq/pull/721#discussion_r734671743



##########
File path: pom.xml
##########
@@ -116,7 +116,7 @@
 
     <site-repo-url>scpexe://people.apache.org/www/activemq.apache.org/maven/</site-repo-url>
     <source-version>1.8</source-version>
-    <target-version>11</target-version>
+    <target-version>1.8</target-version>

Review comment:
       You know that it's unrelated right ? The most important is the JVM used to build, source/target is there just for backward compatibility.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/21 16:07;githubbot;600","jbonofre merged pull request #721:
URL: https://github.com/apache/activemq/pull/721


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Oct/21 15:58;githubbot;600","gemmellr commented on pull request #721:
URL: https://github.com/apache/activemq/pull/721#issuecomment-950774952


   Changing the target level back seems quite odd.  Especially given it goes against all prior discussion I can think of, and all of that happened even before Java 17 released.
   
   The JVMs used to run and test are the most important. It is only being tested on 11 it seems, so I think that should be the target, and that is was what was discussed multiple times previously I believe.
   
   Its perhaps 2 years since you raised a PR to use a dependency you knew required Java 9, just before intendending to release 5.16.0. You then started a discussion thread on JVM versions after I suggested that seemed like a change worth discussing, given 5.16.0 was forever in the making and was already supposed to have been released by the time of the PR. You concluded that thread with summary that it was agreeed 5.16.0 would continue targeting 8, but 5.17.0+ would target Java 9+. I belive other discussions since did the same.
   
   It was so discussed already that the website was updated several months ago now to say that 5.17.0 requires Java 11.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/21 10:30;githubbot;600","jbonofre commented on pull request #721:
URL: https://github.com/apache/activemq/pull/721#issuecomment-950777365


   I don't understand. We build with jdk 11. No problem to set back target/source to 11 but it's unrelated to the version we are using to build and develop. I will update to 11 anyway, but I don't see the point. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/21 10:33;githubbot;600","jbonofre commented on pull request #721:
URL: https://github.com/apache/activemq/pull/721#issuecomment-950778334


   Ok to update back to target/source to 11. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/21 10:34;githubbot;600","jbonofre commented on pull request #721:
URL: https://github.com/apache/activemq/pull/721#issuecomment-950786101


   Well actually you are right : we announced jdk 11 min for both build and run with ActiveMQ 5.17, so it makes sense to force it. I will set it back to 11 then. Sorry about that.  


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/21 10:44;githubbot;600","gemmellr commented on pull request #721:
URL: https://github.com/apache/activemq/pull/721#issuecomment-950786245


   The discussion was to target 11.
   
   Even if it wasnt, the target version is still quite related to what we build and develop with. If noone is ever testing it works on 8, we simply shouldnt be targetting 8. Especially when the javac 'release' flag isnt being used in the build, meaning it can quite happilly emit bytecode that doesnt even work on the target JVM when cross-compiling.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/21 10:44;githubbot;600",,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Nov 06 06:10:17 UTC 2021,,,,,,,,,,,"0|z0w2ts:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/Oct/21 09:20;jbonofre;{code:java}
Error executing command: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activemq-client; type=karaf.feature; version=""[5.17.0.SNAPSHOT,5.17.0.SNAPSHOT]""; filter:=""(&(osgi.identity=activemq-client)(type=karaf.feature)(version>=5.17.0.SNAPSHOT)(version<=5.17.0.SNAPSHOT))"" [caused by: Unable to resolve activemq-client/5.17.0.SNAPSHOT: missing requirement [activemq-client/5.17.0.SNAPSHOT] osgi.identity; osgi.identity=org.apache.activemq.osgi; type=osgi.bundle; version=""[5.17.0.SNAPSHOT,5.17.0.SNAPSHOT]""; resolution:=mandatory [caused by: Unable to resolve org.apache.activemq.osgi/5.17.0.SNAPSHOT: missing requirement [org.apache.activemq.osgi/5.17.0.SNAPSHOT] osgi.ee; filter:=""(&(osgi.ee=JavaSE)(version=11))""]] {code};;;","22/Oct/21 09:23;jbonofre;I will remove requirement in the OSGi headers, it's useless in the ActiveMQ bundles (in order to work with any Java version).;;;","24/Oct/21 15:58;jira-bot;Commit 66a7d700fb1e7eb1162fda42ab3dc1ba3177daa8 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=66a7d70 ]

[AMQ-8408] Remove JavaSE requirement in ActiveMQ bundles
;;;","24/Oct/21 15:58;jira-bot;Commit a20d7dba326b4bc26e53bee3d006f0d883fa1f28 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a20d7db ]

Merge pull request #721 from jbonofre/AMQ-8408

[AMQ-8408] Remove JavaSE requirement in ActiveMQ bundles;;;","06/Nov/21 06:10;jira-bot;Commit 2647500b3f10e7c57aef8018788158e1b9d3b2c2 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2647500 ]

[AMQ-8408] Add noee on activemq-web-console bundle
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in Transaction.java,AMQ-8400,13405828,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,mattrpav,mattrpav,10/Oct/21 20:07,02/Feb/22 03:34,13/Jul/23 08:27,15/Jan/22 06:07,5.15.15,,,,5.16.4,5.17.0,,Broker,,,,,0,,,,,"With LoggingBrokerPlugin enabled:

{noformat}
2021-10-08T13:21:06,201 | WARN  | ActiveMQ NIO Worker 394 | LocalTransaction                 | 71 - org.apache.activemq.activemq-osgi - 5.15.15 | POST COMMIT FAILED:
java.util.ConcurrentModificationException: null
        at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1043) ~[?:?]
        at java.util.ArrayList$Itr.next(ArrayList.java:997) ~[?:?]
        at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:132) ~[?:?]
        at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:201) ~[?:?]
        at org.apache.activemq.transaction.Transaction$2.call(Transaction.java:59) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1156) ~[?:?]
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1116) ~[?:?]
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:301) ~[?:?]
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:70) ~[?:?]
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.commitTransaction(LoggingBrokerPlugin.java:203) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:538) ~[?:?]
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100) ~[?:?]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336) ~[?:?]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200) ~[?:?]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) ~[?:?]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:77) ~[?:?]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125) ~[?:?]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301) ~[?:?]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport.doConsume(NIOSSLTransport.java:501) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport.processCommand(NIOSSLTransport.java:364) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:279) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport$1.onSelect(NIOSSLTransport.java:175) ~[?:?]
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98) ~[?:?]
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
        at java.lang.Thread.run(Thread.java:829) [?:?]
2021-10-08T13:21:06,202 | WARN  | ActiveMQ NIO Worker 394 | LocalTransaction                 | 71 - org.apache.activemq.activemq-osgi - 5.15.15 | Store COMMIT FAILED:
javax.transaction.xa.XAException: POST COMMIT FAILED xaErrorCode:-3
        at org.apache.activemq.transaction.Transaction.newXAException(Transaction.java:213) ~[?:?]
        at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:206) ~[?:?]
        at org.apache.activemq.transaction.Transaction$2.call(Transaction.java:59) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1156) ~[?:?]
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1116) ~[?:?]
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:301) ~[?:?]
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:70) ~[?:?]
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.util.LoggingBrokerPlugin.commitTransaction(LoggingBrokerPlugin.java:203) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:114) ~[?:?]
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:538) ~[?:?]
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100) ~[?:?]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336) ~[?:?]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200) ~[?:?]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) ~[?:?]
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:77) ~[?:?]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125) ~[?:?]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301) ~[?:?]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport.doConsume(NIOSSLTransport.java:501) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport.processCommand(NIOSSLTransport.java:364) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:279) ~[?:?]
        at org.apache.activemq.transport.nio.NIOSSLTransport$1.onSelect(NIOSSLTransport.java:175) ~[?:?]
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98) ~[?:?]
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
        at java.lang.Thread.run(Thread.java:829) [?:?]
Caused by: java.util.ConcurrentModificationException
        at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1043) ~[?:?]
        at java.util.ArrayList$Itr.next(ArrayList.java:997) ~[?:?]
        at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:132) ~[?:?]
        at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:201) ~[?:?]
        ... 32 more
{noformat}",,jira-bot,mattrpav,,,,,,,,,,"mattrpav opened a new pull request #720:
URL: https://github.com/apache/activemq/pull/720


   …event CME


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 14:20;githubbot;600","jbonofre commented on a change in pull request #720:
URL: https://github.com/apache/activemq/pull/720#discussion_r728136488



##########
File path: activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
##########
@@ -226,4 +232,10 @@ public boolean isRollbackOnly() {
         return rollackOnlyCause != null;
     }
 
+    protected ArrayList<Synchronization> getSynchronizationsCopy() {

Review comment:
       Maybe it's easier/smaller to use `Collections.synchronizedList(new ArrayList<Object>());` instead of a method wrapping with sync ?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 14:40;githubbot;600","cshannon commented on pull request #720:
URL: https://github.com/apache/activemq/pull/720#issuecomment-942380306


   I'm not really a fan of this solution, there's a couple other approaches you could take.
   
   First, If you are going to copy anyways then why not just use a CopyOnWriteArrayList and not have to synchronize and do all the manual copying?
   
   Another option that might be better is just do what JB said and synchronized the list. Then you also need to synchronize when iterating as well and this would avoid the expensive copy as wrapping with with Synchronized doesn't make iterating thread safe. It should be rare for 2 threads to be touching the Transaction object usually so synchronizing should be fine most of the time.
   
   You also may be able to find another collection type that is concurrent that could be used but for list implementations there aren't really any.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 14:45;githubbot;600","mattrpav commented on a change in pull request #720:
URL: https://github.com/apache/activemq/pull/720#discussion_r728150454



##########
File path: activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
##########
@@ -226,4 +232,10 @@ public boolean isRollbackOnly() {
         return rollackOnlyCause != null;
     }
 
+    protected ArrayList<Synchronization> getSynchronizationsCopy() {

Review comment:
       > I'm not really a fan of this solution, there's a couple other approaches you could take.
   > 
   > First, If you are going to copy anyways then why not just use a CopyOnWriteArrayList and not have to synchronize and do all the manual copying?
   > 
   > Another option that might be better is just do what JB said and synchronized the list. Then you also need to synchronize when iterating as well and this would avoid the expensive copy as wrapping with with Synchronized doesn't make iterating thread safe. It should be rare for 2 threads to be touching the Transaction object usually so synchronizing should be fine most of the time.
   > 
   > You also may be able to find another collection type that is concurrent that could be used but for list implementations there aren't really any.
   
   Thanks for the quick review. Agree, not in love with a lot of the approach options. I was hoping to thread the needle around not having to synchronize on all operations, but yeah copies are not great either.
   
   Given the iterator-not-synchronized problem seems that synchronized(synchronizations) {} is best approach forward? 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 14:52;githubbot;600","mattrpav commented on pull request #720:
URL: https://github.com/apache/activemq/pull/720#issuecomment-942387489


   @jbonofre @cshannon Thanks for the quick review. Agree, not in love with a lot of the approach options. I was hoping to thread the needle around not having to synchronize on all operations, but yeah copies are not great either.
   
   Given the iterator-not-synchronized problem seems that synchronized(synchronizations) {} is best approach forward?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 14:53;githubbot;600","cshannon commented on pull request #720:
URL: https://github.com/apache/activemq/pull/720#issuecomment-942390816


   Probably, synchronization is most likely better than copying since that is pretty expensive and synchronizing on the object when it's not contended is not very expensive


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 14:57;githubbot;600","jbonofre commented on a change in pull request #720:
URL: https://github.com/apache/activemq/pull/720#discussion_r728136488



##########
File path: activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
##########
@@ -226,4 +232,10 @@ public boolean isRollbackOnly() {
         return rollackOnlyCause != null;
     }
 
+    protected ArrayList<Synchronization> getSynchronizationsCopy() {

Review comment:
       Maybe it's easier/smaller to use `Collections.synchronizedList(new ArrayList<Object>());` instead of a method wrapping with sync ?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 18:28;githubbot;600","mattrpav opened a new pull request #720:
URL: https://github.com/apache/activemq/pull/720


   …event CME


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 18:34;githubbot;600","mattrpav commented on a change in pull request #720:
URL: https://github.com/apache/activemq/pull/720#discussion_r728150454



##########
File path: activemq-broker/src/main/java/org/apache/activemq/transaction/Transaction.java
##########
@@ -226,4 +232,10 @@ public boolean isRollbackOnly() {
         return rollackOnlyCause != null;
     }
 
+    protected ArrayList<Synchronization> getSynchronizationsCopy() {

Review comment:
       > I'm not really a fan of this solution, there's a couple other approaches you could take.
   > 
   > First, If you are going to copy anyways then why not just use a CopyOnWriteArrayList and not have to synchronize and do all the manual copying?
   > 
   > Another option that might be better is just do what JB said and synchronized the list. Then you also need to synchronize when iterating as well and this would avoid the expensive copy as wrapping with with Synchronized doesn't make iterating thread safe. It should be rare for 2 threads to be touching the Transaction object usually so synchronizing should be fine most of the time.
   > 
   > You also may be able to find another collection type that is concurrent that could be used but for list implementations there aren't really any.
   
   Thanks for the quick review. Agree, not in love with a lot of the approach options. I was hoping to thread the needle around not having to synchronize on all operations, but yeah copies are not great either.
   
   Given the iterator-not-synchronized problem seems that synchronized(synchronizations) {} is best approach forward? 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 18:38;githubbot;600","mattrpav commented on pull request #720:
URL: https://github.com/apache/activemq/pull/720#issuecomment-942387489


   @jbonofre @cshannon Thanks for the quick review. Agree, not in love with a lot of the approach options. I was hoping to thread the needle around not having to synchronize on all operations, but yeah copies are not great either.
   
   Given the iterator-not-synchronized problem seems that synchronized(synchronizations) {} is best approach forward?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 18:40;githubbot;600","cshannon commented on pull request #720:
URL: https://github.com/apache/activemq/pull/720#issuecomment-942380306






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Oct/21 18:42;githubbot;600","mattrpav commented on pull request #720:
URL: https://github.com/apache/activemq/pull/720#issuecomment-974287550


   Internal tests validation:
   500M+ messages sent to 1 queue
   400x producers
   400x consumers
   1-transaction-per-message commit strategy


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Nov/21 17:59;githubbot;600","mattrpav merged pull request #720:
URL: https://github.com/apache/activemq/pull/720


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Dec/21 14:38;githubbot;600",,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Dec 23 13:49:58 UTC 2021,,,,,,,,,,,"0|z0vpy0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Dec/21 14:38;jira-bot;Commit b196e9a88a5e221c96346c5ec23c0029bde0fc91 in activemq's branch refs/heads/main from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b196e9a ]

[AMQ-8400] Add synchronization handling for Transaction to prevent CME (#720)

;;;","23/Dec/21 13:49;jira-bot;Commit f2dbc92743cfacf3b5397f0aae82a24dcfa4b7c1 in activemq's branch refs/heads/activemq-5.16.x from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f2dbc92 ]

[AMQ-8400] Add synchronization handling for Transaction to prevent CME (#720)

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE on Topic SlowConsumerAdvisory,AMQ-8395,13404313,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,mattrpav,mattrpav,30/Sep/21 14:06,25/Oct/21 04:46,13/Jul/23 08:27,25/Oct/21 04:46,5.15.15,,,,5.15.16,5.16.4,5.17.0,,,,,,0,,,,,"{noformat}
AdvisoryBroker                   | 71 - org.apache.activemq.activemq-osgi - 5.15.15 | Failed to fire slow consumer advisory, reason: {}
java.lang.NullPointerException: null
        at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:538) ~[?:?]
        at org.apache.activemq.broker.region.Topic.send(Topic.java:495) ~[?:?]
        at org.apache.activemq.broker.region.DestinationFilter.send(DestinationFilter.java:138) ~[?:?]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:511) ~[?:?]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:459) ~[?:?]
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293) ~[?:?]
        at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:912) ~[?:?]
        at org.apache.activemq.advisory.AdvisoryBroker.slowConsumer(AdvisoryBroker.java:525) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.BrokerFilter.slowConsumer(BrokerFilter.java:361) ~[?:?]
        at org.apache.activemq.broker.region.BaseDestination.slowConsumer(BaseDestination.java:564) ~[?:?]
        at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:674) ~[?:?]
        at org.apache.activemq.broker.region.PrefetchSubscription.onDispatch(PrefetchSubscription.java:755) ~[?:?]
        at org.apache.activemq.broker.region.PrefetchSubscription$3.onSuccess(PrefetchSubscription.java:713) ~[?:?]
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:1004) ~[?:?]
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:1033) ~[?:?]
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133) ~[?:?]
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
        at java.lang.Thread.run(Thread.java:829) [?:?]
{noformat}",,jbonofre,jira-bot,mattrpav,,,,,,,,,"jbonofre merged pull request #719:
URL: https://github.com/apache/activemq/pull/719


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/21 04:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Oct 25 04:45:49 UTC 2021,,,,,,,,,,,"0|z0vglk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Oct/21 08:16;jbonofre;IMHO, your issue is because you don't have transaction context in Karaf. I'm just adding a check in {{doMessageSend}}.;;;","04/Oct/21 13:24;mattrpav;I've only seen one occurrence of this and do not have a reproducible test case.;;;","25/Oct/21 04:44;jira-bot;Commit f74992c1058eb8de051c1ce0779ba4f34ba39ed3 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f74992c ]

[AMQ-8395] Avoid possible NPE when sending advisory message
;;;","25/Oct/21 04:44;jira-bot;Commit 943158555356e8caa1068f6bde02596569b1d391 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9431585 ]

Merge pull request #719 from jbonofre/AMQ-8395

[AMQ-8395] Avoid possible NPE when sending advisory message;;;","25/Oct/21 04:45;jira-bot;Commit 57b1316d213841016f7df26e99b0ffb257133a19 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=57b1316 ]

[AMQ-8395] Avoid possible NPE when sending advisory message

(cherry picked from commit f74992c1058eb8de051c1ce0779ba4f34ba39ed3)
;;;","25/Oct/21 04:45;jira-bot;Commit d109cf0455495146cb6537fd24bc5ef7fdbb6ca6 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d109cf0 ]

[AMQ-8395] Avoid possible NPE when sending advisory message

(cherry picked from commit f74992c1058eb8de051c1ce0779ba4f34ba39ed3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken links in documentation website,AMQ-8389,13402290,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,robbie,Chenchrl,Chenchrl,20/Sep/21 18:18,30/Sep/21 00:35,13/Jul/23 08:27,29/Sep/21 09:25,,,,,,,,website,,,,,0,,,,,"We’ve found the following broken URls on the Apache ActiveMQ “Classic” documentation website and propose fix resolution:
 * [https://activemq.apache.org/hermes-screenshot]
 ** Resolution - The page seems to be missing an image. In the absence of a visual asset on the page, we suggest removing the link from [https://activemq.apache.org/tools].

 * [https://activemq.apache.org/ToolsTools/Tools/hermes-Community/FAQ/jms]
 ** Resolution - replace URl with [https://activemq.apache.org/hermes-jms]",,Chenchrl,jbonofre,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 29 09:22:09 UTC 2021,,,,,,,,,,,"0|z0v44g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Sep/21 11:19;robbie;Fixing the link as proposed seems a bit academic. It immediately links to a HermesJMS site that no longer exists. It then links to Flash (heh..) demo on another site that also doesnt exist. HermesJMS itself also seems dead, so the content should probably just be deleted.

This page is a decent example of why I think going through all the existing doc etc pages and trying to fix all the broken links is poor use of time in general. I think would be better to just curate some new documentation in the component specific area and then nuke the rest of the old pages. Its essentially a huge collection of intertwined unmaintained cruft at this point. Its all version controlled now so if someone does later point out some useful content went away unexpectedly then it can be resurrected.;;;","27/Sep/21 16:45;jbonofre;I would rather cleanup links pointing to something which doesn't exist anymore. +1 for the cleanup definitely.;;;","29/Sep/21 06:07;Chenchrl;updated PR: [[AMQ-8389] fix broken links in /tools page by Charlie-chenchrl · Pull Request #65 · apache/activemq-website (github.com)|https://github.com/apache/activemq-website/pull/65] as suggested;;;","29/Sep/21 09:22;robbie;PR merged with fixup to reference the JIRA, and a followup commit to actually delete the content as suggested.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken links in documentation website Overview page: ActiveMQ Release,AMQ-8386,13401461,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,Chenchrl,Chenchrl,15/Sep/21 20:11,20/Sep/21 18:24,13/Jul/23 08:27,16/Sep/21 12:11,,,,,,,,,,,,,0,,,,,"We’ve identified the following broken URLs on the Apache ActiveMQ “Classic” documentation website Overview Page: [ActiveMQ (apache.org)|https://activemq.apache.org/overview]
 * [ActiveMQ 1.1 Release|https://activemq.apache.org/activemq-11-release]
 * [ActiveMQ 1.2 Release|https://activemq.apache.org/activemq-12-release]
 * [ActiveMQ 1.3 Release|https://activemq.apache.org/activemq-13-release]
 * [ActiveMQ 1.4 Release|https://activemq.apache.org/activemq-14-release]
 * [ActiveMQ 1.5 Release|https://activemq.apache.org/activemq-15-release]
 * [ActiveMQ 2.0 Release|https://activemq.apache.org/activemq-20-release]
 * [ActiveMQ 2.1 Release|https://activemq.apache.org/activemq-21-release]
 * [ActiveMQ 3.0 Release|https://activemq.apache.org/activemq-30-release]
 * [ActiveMQ 3.1 Release|https://activemq.apache.org/activemq-31-release]
 * [ActiveMQ 3.2.1 Release|https://activemq.apache.org/activemq-321-release]
 * [ActiveMQ 3.2.2 Release|https://activemq.apache.org/activemq-322-release]
 * [ActiveMQ 3.2 Release|https://activemq.apache.org/activemq-32-release]
 * [ActiveMQ 4.0.1 Release|https://activemq.apache.org/activemq-401-release]
 * [ActiveMQ 4.0.2 Release|https://activemq.apache.org/activemq-402-release]
 * [ActiveMQ 4.0 M4 Release|https://activemq.apache.org/activemq-40-m4-release]
 * [ActiveMQ 4.0 RC2 Release|https://activemq.apache.org/activemq-40-rc2-release]
 * [ActiveMQ 4.0 Release|https://activemq.apache.org/activemq-40-release]
 * [ActiveMQ 4.1.0 Release|https://activemq.apache.org/activemq-410-release]
 * [ActiveMQ 4.1.1 Release|https://activemq.apache.org/activemq-411-release]
 * [ActiveMQ 4.1.2 Release|https://activemq.apache.org/activemq-412-release]",,Chenchrl,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 16 12:11:47 UTC 2021,,,,,,,,,,,"0|z0uz08:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Sep/21 12:11;robbie;These were probably broken since I removed the ancient < 5.x release entries in [https://github.com/apache/activemq-website/commit/74d732bade7627626395c0e15057cbec4cdd0314] (as the pages were largely useless anyway due to broken links etc and most of them were for stuff that pre-dates the Apache ActiveMQ project being established anyway).

The page clearly isnt well trodden, it hasnt been updated in years, and the docs link on it is also broken too. Given its so stale, and the release content is already much better handled elsewere, I've just removed most of the content but made sure the remaining 2 links work. The page itself should probably just go away with some further cleanup.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ status command - 5.16.2 version,AMQ-8383,13400971,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,sekarsdhana,sekarsdhana,14/Sep/21 09:49,10/Jan/22 16:03,13/Jul/23 08:27,10/Jan/22 16:03,5.16.2,,,,5.16.4,5.17.0,,,,,,,0,,,,,"activeMQ status command is not working as expected in 5.16.2 version

 

Earlier or working version (before 5.16 version)         -> {color:#ff0000}ps -p $ACTIVEMQ_PID]""{color} | grep java

with V5.1.6.2 version command changed like below - > {color:#ff0000}ps -o ""pid,arg""{color} .....

 

as per UNIX ps command documentation ps -o command will show current terminal process only.

 

Problematic scenario: (steps to recreate issue)

 

Step 1 : open UNIX Terminal 1

Step 2 : Start activeMQ from terminal 1, activemq started successfully and status shows correctly (RUNNING) in terminal 1

Step 3 : open UNIX terminal 2

Step 4 : Check status from terminal 2, activemq status command will show as activemq is down.

Step 5 : Can start activemq again from terminal 2, this is causing levedb corruption and other issue because multiple process

 

 ",UNIX,jbonofre,sekarsdhana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Mon Jan 10 16:03:42 UTC 2022,,,,,,,,,,,"0|z0uvzk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Sep/21 05:46;sekarsdhana; anyone else facing same issue ? any update on fix details ?;;;","10/Dec/21 04:08;sekarsdhana;Update please;;;","10/Jan/22 16:03;jbonofre;It's already fixed and it will be included in AMQ 5.16.4.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Download page for 5.16.3 refers to MD5; must not link to Git",AMQ-8357,13395929,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,sebb,sebb,18/Aug/21 15:51,28/Aug/21 15:45,13/Jul/23 08:27,19/Aug/21 09:49,,,,,,,,,,,,,0,,,,,"The download page [1] refers several times to MD5. Such hashes are deprecated, and are not actually used by AMQ any more.

Please update the instructions so that they can be used by downloaders.

Also Git repos must not be linked from download pages, as they contain code that has not been formally released.

Note also that MD5 is not a signature (nor are SHA*) - they are hashes.

The PGP asc file is a signature.

[1] https://activemq.apache.org/activemq-5016003-release",,jbonofre,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Aug 28 15:45:15 UTC 2021,,,,,,,,,,,"0|z0u0vs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Aug/21 09:40;robbie;It also links to the 5.16.2 release notes.;;;","19/Aug/21 09:41;jbonofre;I'm fixing that. The page is generated automatically, I'm updating the template (it contains some mistakes).;;;","19/Aug/21 12:35;sebb;Also, gpg verify should specify the second parameter:
https://www.apache.org/info/verification.html#specify_both

It looks like the page no longer mentions MD5, however it does not mention how to verify a download using a SHA hash either.;;;","19/Aug/21 13:19;jbonofre;[~sebb] ok, I'm adding this as well. Thanks.;;;","19/Aug/21 13:26;jbonofre;Done, it should be online soon.;;;","28/Aug/21 15:45;sebb;Thanks, looks OK now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use posix to deal with long file path in assembly,AMQ-8352,13394351,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,10/Aug/21 05:15,10/Aug/21 05:40,13/Jul/23 08:27,10/Aug/21 05:40,,,,,5.16.3,,,,,,,,0,,,,,"The following commit breaks the assembly build on some environment due to long file path:
{code:java}
commit dce83db7c2444e3e058a6561ea806fe1c3d171c9
Author: Matt Pavlovich <matt@hyte.io>
Date:   Fri Jun 4 09:30:31 2021 -0500    [AMQ-8290] Cleanup assembly warnings and upgrade assembly plugin
    
     - Convert 'attached' to 'single' goal
     - Clean up leading ""/"" in descriptors
    
    (cherry picked from commit 5c9df5db0c4f4682ff489f437eea7ec7da98ba92)
 {code}
I will use {{posix}} instead of {{gnu}} and test on different environment.",,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 10 05:40:02 UTC 2021,,,,,,,,,,,"0|z0tr54:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Aug/21 05:35;jbonofre;FYI, {{main}} branch is already using {{posix}} for {{tarLongFileMode}}.;;;","10/Aug/21 05:40;jira-bot;Commit 6f9ca24dd7a270f8dd7c1c6cd17803a3144a8501 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6f9ca24 ]

[AMQ-8352] Use posix mode for tarLongFileMode in assembly
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual destination consumer advisory messages are inadvertently replayed to all existing advisory consumers,AMQ-8349,13393721,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,05/Aug/21 13:49,05/Aug/21 14:00,13/Jul/23 08:27,05/Aug/21 14:00,5.16.2,,,,5.16.3,5.17.0,,Broker,Network of Brokers,,,,0,,,,,"In order to support AMQ-6027 new Virtual destination consumer advisories were created so that demand could be dynamically created due to composite destination creation across a bridge.

When setting up a broker with several bridges I noticed that the virtual destination consumer advisory messages sent were quite high. I dug into it and it turns out that the issue was that on replay of the advisories when a bridge connected the messages are being inadvertently sent to all the existing advisory consumers again and not just the new consumer.

What should happen is when a new bridge connects it will create a consumer on the virtual destination consumer topic and any advisories that were previously sent should be sent to ONLY that consumer. Existing consumers (usually bridge consumers) already received them so there's no reason to send them again as it causes a ton of extra traffic.

This is how things work already for existing replay of other advisories but was simply missed when adding this feature and is a 1 line fix.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6027,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Aug 05 13:59:55 UTC 2021,,,,,,,,,,,"0|z0tn94:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"05/Aug/21 13:59;jira-bot;Commit 8b99596eeb721666fe0e2bece121aed2dea81075 in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8b99596 ]

AMQ-8349 - Ensure virtual destination consumer advisories are only
replayed to new advisory consumers and not existing
;;;","05/Aug/21 13:59;jira-bot;Commit 2ec4673a59630e29a85718da18b306b1eb8f64ef in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2ec4673 ]

AMQ-8349 - Ensure virtual destination consumer advisories are only
replayed to new advisory consumers and not existing

(cherry picked from commit 8b99596eeb721666fe0e2bece121aed2dea81075)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[AMQ 5.16.1] SubQueueSelectorCacheBrokerPlugin throws Unable to read persisted selector cache...it will be ignored! error,AMQ-8346,13392768,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,adrlulea,adrlulea,30/Jul/21 13:50,06/Aug/21 15:08,13/Jul/23 08:27,06/Aug/21 15:08,5.16.1,5.16.2,,,5.16.3,5.17.0,,Broker,Plugin,,,,0,,,,,"Hello,

We have been using _SubQueueSelectorCacheBrokerPlugin_ plugin for a while now and starting 5.16.0 we are getting an exception (_Unauthorized deserialization attempt_) and the _Unable to read persisted selector cache...it will be ignored!_ error is displayed in the Broker's console/logs.

AMQ is able to start and seems to be working OK despite this error. Is this expected?

We have a client that is concerned about this error and we need to understand if there are any functional implications.

We suspect that lower performance on Virtual Topics functionality (which seems to be related to the plugin) might be one technical implication but we are not sure. Can you please clarify this as well?

+Below information I was able to gather while trying to figure out the issue:+
{panel:title=Call stack from AMQ Broker logs}
jvm 1    | ERROR | Unable to read persisted selector cache...it will be ignored!

jvm 1    | java.io.InvalidClassException: Unauthorized deserialization attempt; [L{color:#de350b}java.util.concurrent.ConcurrentHashMap$Segment{color};

jvm 1    |      at org.apache.activemq.plugin.SubQueueSelectorCacheBroker$SubSelectorClassObjectInputStream.resolveClass(SubQueueSelectorCacheBroker.java:376)

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1886){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1772){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readArray(ObjectInputStream.java:1948){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1588){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2355){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:566){color}

jvm 1    |      at java.base/{color:#de350b}java.util.concurrent.ConcurrentHashMap{color}.readObject(ConcurrentHashMap.java:1448)

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.lang.reflect.Method.invoke(Method.java:566){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1160){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2216){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2087){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1594){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:430){color}

jvm 1    |      at org.apache.activemq.plugin.SubQueueSelectorCacheBroker.readCache(SubQueueSelectorCacheBroker.java:201)

jvm 1    |      at org.apache.activemq.plugin.SubQueueSelectorCacheBroker.<init>(SubQueueSelectorCacheBroker.java:93)

jvm 1    |      at org.apache.activemq.plugin.SubQueueSelectorCacheBrokerPlugin.installPlugin(SubQueueSelectorCacheBrokerPlugin.java:46)

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.addInterceptors(BrokerService.java:2514){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:2374){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:1054){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.getAdminConnectionContext(BrokerService.java:2645){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.startVirtualConsumerDestinations(BrokerService.java:2806){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.startDestinations(BrokerService.java:2636){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:748){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:742){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerService.start(BrokerService.java:645){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.lang.reflect.Method.invoke(Method.java:566){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1{color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1685){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1615){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:756){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867){color}

{color:#c1c7d0}jvm 1    |      at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542){color}

{color:#c1c7d0}jvm 1    |      at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64){color}

{color:#c1c7d0}jvm 1    |      at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:63){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:154){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:63){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.lang.reflect.Method.invoke(Method.java:566){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.Main.runTaskClass(Main.java:262){color}

{color:#c1c7d0}jvm 1    |      at org.apache.activemq.console.Main.main(Main.java:115){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62){color}

{color:#c1c7d0}jvm 1    |      at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.lang.reflect.Method.invoke(Method.java:566){color}

{color:#c1c7d0}jvm 1    |      at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240){color}

{color:#c1c7d0}jvm 1    |      at java.base/java.lang.Thread.run(Thread.java:834){color}

{color:#c1c7d0}jvm 1    |  INFO | Apache ActiveMQ 5.16.1 (localhost, ID:_<somehostnameweblurred>_-57948-1626180862103-0:1) is starting{color}
{panel}
{panel:title=Commit that might have introduced the behavior}
During my research I have stumbled upon this commit [here|https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.mail-archive.com%2Fcommits%40activemq.apache.org%2Fmsg53657.html&data=04%7C01%7CAdrian.Lulea%40finastra.com%7C8f204c58c6284a703be408d94dd1f1ba%7C0b9b90da3fe1457ab340f1b67e1024fb%7C0%7C0%7C637626386377582467%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2Fn6tM1opMbc4Buia6r%2FrTVstigNd5AsffkaFhJVQrmA%3D&reserved=0] ([AMQ-7438|https://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FAMQ-7438&data=04%7C01%7CAdrian.Lulea%40finastra.com%7C8f204c58c6284a703be408d94dd1f1ba%7C0b9b90da3fe1457ab340f1b67e1024fb%7C0%7C0%7C637626386377592470%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=8qMaS%2BQ0XN%2FSCwxJu71oJamCagU4YAlDD1tPVpwKqro%3D&reserved=0]) and I think it is related / caused by the changes done below:
|broker/src/main/java/org/apache/activemq/plugin/SubQueueSelectorCacheBroker.java|
|+        @Override
+        protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
+            if (!(desc.getName().equals(""java.lang.String"") \|\| *desc.getName().startsWith(""java.util."")*)) {
+                throw new InvalidClassException(""Unauthorized deserialization attempt"", desc.getName());
+            }
+            return super.resolveClass(desc);
+        }|

*Disclaimer*: My java skills are quite rusty

I think that the condition may need to be adjusted because the _desc_ showing up in the callstack (_;[Ljava.util.concurrent.ConcurrentHashMap$Segment;_) seems to start with _java.util._ *if you exempt the trails before* and maybe the check should take that into account as well:


|String|Condition|
|;[L*java.util.*concurrent.ConcurrentHashMap$Segment;|desc.getName().startsWith(""*java.util.*"")|

 
{panel}

As far as replication steps are concerned, what we do is:
 # Configure AMQ to have a set of Virtual Topics (attached  _activemq.xml_)
 # Start AMQ
 # Start at least 1 consumer for at least one of the Virtual Topics (we have 1 consumer that connects to all of them - this is customizable, we can have it connect to a subset of them) – that match the _virtualTopic_ setup from _activemq.xml_
 # Stop AMQ
 # Start AMQ again
 # Callstack from above shows up

NOTE: sometime between steps 1 and 5 the file mentioned in _SubQueueSelectorCacheBrokerPlugin_ setup gets generated:


{panel:title=activemq.xml snippet}
<plugins> 
   <bean xmlns=""http://www.springframework.org/schema/beans"" 
                     id=""subQueueSelectorCacheBroker"" 
                 class=""org.apache.activemq.plugin.SubQueueSelectorCacheBrokerPlugin"">
      <property name=""persistFile"" value=""file:${activemq.data}/selectorcache.dat""/>
   </bean>
</plugins>
{panel}
NOTE: this does *not* replicate in *5.15.9*

Kind regards,

Adrian L.",{color:#172b4d}Tested/replicated in Windows Server 2012 R2 but I suspect it is non-OS dependent{color},adrlulea,jbonofre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/21 13:37;adrlulea;activemq.xml;https://issues.apache.org/jira/secure/attachment/13031281/activemq.xml",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,Java,Fri Aug 06 13:59:48 UTC 2021,,,,,,,,,,,"0|z0thds:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"06/Aug/21 08:38;jbonofre;That's probably related to security enforcement we added in 5.15.13 (AMQ-7438), checking the packages allowed for deserialization. As part of AMQ-8117, we re-add {{java.util}} in the allowed package, so it should be fine with 5.16.3-SNAPSHOT (and coming 5.16.3 release). Anyway, I will try to reproduce with 5.16.0/5.16.1 to confirm that the problem is fixed on 5.16.3-SNAPSHOT.;;;","06/Aug/21 09:01;adrlulea;Hi [~jbonofre],

Looking at the two issues (this and AMQ-8117) it seems that they have the same root cause.

Is there a date established for 5.16.3?
(or a way for me to download a preview of this version that contains the fix for AMQ-8117?)

 

Kind regards,

Adrian L.;;;","06/Aug/21 09:12;jbonofre;Hi [~adrlulea]

Actually, I just want to double check your issue before submitting ActiveMQ 5.16.3 to vote ;) ;;;","06/Aug/21 09:12;jbonofre;I can upload 5.16.3-SNAPSHOT if you want to make a try by your side.;;;","06/Aug/21 09:34;adrlulea;Agree with the double-check. I am all for double-checks :D.
If it's not too much trouble, please do.

Kind regards,

Adrian L.;;;","06/Aug/21 10:37;jbonofre;[~adrlulea] I just deployed 5.16.3-SNAPSHOT there: [https://repository.apache.org/content/groups/snapshots/org/apache/activemq/apache-activemq/5.16.3-SNAPSHOT/]

If you wanna make a try ;)

I will test on my side as well.;;;","06/Aug/21 13:15;adrlulea;[~jbonofre] I deployed the 5.16.3-SNAPSHOT version and I confirm that the error / exception is no longer thrown/shown.

So, the issue is fixed in 5.16.3-SNAPSHOT

I assume that there is no official date/period for 5.16.3 announced yet, right? 

Kind regards,

Adrian L.;;;","06/Aug/21 13:30;jbonofre;I will submit the release to vote tonight or tomorrow morning. So we can expect the release officially available next week. ;;;","06/Aug/21 13:59;adrlulea;That is great news!

Thank you and looking forward to the official release :D.

Kind regards,

Adrian L.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve and align versions in Karaf features to avoid cascading refresh,AMQ-8309,13386151,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,28/Jun/21 04:20,03/Aug/21 05:19,13/Jul/23 08:27,03/Aug/21 05:19,,,,,5.16.3,5.17.0,,OSGi/Karaf,,,,,0,,,,,,,jbonofre,jira-bot,,,,,,,,,,"jbonofre opened a new pull request #675:
URL: https://github.com/apache/activemq/pull/675


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/21 05:19;githubbot;600","jbonofre opened a new pull request #676:
URL: https://github.com/apache/activemq/pull/676


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/21 05:31;githubbot;600","jbonofre merged pull request #675:
URL: https://github.com/apache/activemq/pull/675


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 05:11;githubbot;600","jbonofre merged pull request #676:
URL: https://github.com/apache/activemq/pull/676


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 05:19;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 03 05:19:45 UTC 2021,,,,,,,,,,,"0|z0scmg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Aug/21 05:11;jira-bot;Commit 188aafaf9c0a9930ab1237fecf15aae29cfed4ac in activemq's branch refs/heads/main from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=188aafa ]

[AMQ-8309] Fix spring import range, change optional to be more flexible and avoid refresh, support Camel 3 namespace handler
;;;","03/Aug/21 05:11;jira-bot;Commit f4d83cb8202b221cbe5596c8d06b4be604f25d0e in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f4d83cb ]

Merge pull request #675 from jbonofre/AMQ-8309

[AMQ-8309] Fix spring import range, change optional to be more flexible and avoid refresh, support Camel 3 namespace handler;;;","03/Aug/21 05:11;jira-bot;Commit f4d83cb8202b221cbe5596c8d06b4be604f25d0e in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f4d83cb ]

Merge pull request #675 from jbonofre/AMQ-8309

[AMQ-8309] Fix spring import range, change optional to be more flexible and avoid refresh, support Camel 3 namespace handler;;;","03/Aug/21 05:19;jira-bot;Commit 856d37df0ecd163a53a104bfd5b1f683c7fa2fd7 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=856d37d ]

[AMQ-8309] Upgrade features and import to avoid cascading refresh
;;;","03/Aug/21 05:19;jira-bot;Commit 6c4c94bb8d9915b3de63c7eec276e59bb21184de in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6c4c94b ]

Merge pull request #676 from jbonofre/AMQ-8309-516

[AMQ-8309] Upgrade features and import to avoid cascading refresh;;;","03/Aug/21 05:19;jira-bot;Commit 6c4c94bb8d9915b3de63c7eec276e59bb21184de in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6c4c94b ]

Merge pull request #676 from jbonofre/AMQ-8309-516

[AMQ-8309] Upgrade features and import to avoid cascading refresh;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.activemq.transport.tcp.TcpTransport.run() attempts to read from closed stream,AMQ-8304,13384914,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,sdurga,sdurga,21/Jun/21 13:29,04/Jul/21 04:44,13/Jul/23 08:27,04/Jul/21 04:44,5.16.2,,,,5.16.3,5.17.0,,,,,,,0,,,,,"Our problem is as follows:

We have an application which stops broker on its exit using org.apache.activemq.broker.BrokerService.stop() call.

The above stop call stops TransportConnection(s), and in the middle of stopping, org.apache.activemq.transport.tcp.TcpTransport.run() is attempting to read from  closed stream, which is causing following exceptions in our application logs:

================

connectionErrorOccurred called with null
javax.jms.JMSException: java.io.EOFException
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1960)
at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1979)
at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:114)
at org.apache.activemq.transport.ResponseCorrelator.onException(ResponseCorrelator.java:126)
at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:114)
at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:114)
at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:173)
at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:345)
at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:96)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:219)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.EOFException: null
at java.base/java.io.DataInputStream.readInt(DataInputStream.java:397)
at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:240)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:232)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)

================

 

It seems we need to check for !isStopping() as well at following location:

[https://github.com/apache/activemq/blob/activemq-5.16.x/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransport.java#L214]

It seems, we have done the same at [https://github.com/apache/activemq/blob/activemq-5.16.x/activemq-client/src/main/java/org/apache/activemq/transport/tcp/TcpTransportServer.java#L330]

 

 

 

 ",,jira-bot,sdurga,,,,,,,,,,"dvhvsekhar opened a new pull request #672:
URL: https://github.com/apache/activemq/pull/672


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/21 13:44;githubbot;600","dvhvsekhar opened a new pull request #672:
URL: https://github.com/apache/activemq/pull/672


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/21 08:13;githubbot;600","jbonofre merged pull request #672:
URL: https://github.com/apache/activemq/pull/672


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jul/21 04:42;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Jul 04 04:43:44 UTC 2021,,,,,,,,,,,"0|z0s4zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Jun/21 13:49;sdurga;Raised PR with proposed fix https://github.com/apache/activemq/pull/672;;;","04/Jul/21 04:42;jira-bot;Commit 8584b46e762b720d6c6fb27fd2124f0e59cef19c in activemq's branch refs/heads/main from dvhvsekhar
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8584b46 ]

AMQ-8304: Added a check with !isStopping() also before attempting to read input stream (#672)

;;;","04/Jul/21 04:43;jira-bot;Commit f942276c3043465471d5c049f4ff91998e1d57fa in activemq's branch refs/heads/activemq-5.16.x from dvhvsekhar
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f942276 ]

AMQ-8304: Added a check with !isStopping() also before attempting to read input stream (#672)

(cherry picked from commit 8584b46e762b720d6c6fb27fd2124f0e59cef19c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock caused by synchronized on serviceRead() in NIOSSLTransport,AMQ-8287,13381704,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,02/Jun/21 13:33,02/Jun/21 17:55,13/Jul/23 08:27,02/Jun/21 17:55,5.15.15,5.16.2,,,5.16.3,5.17.0,,Broker,,,,,0,,,,,"I ran into a deadlock caused by the fix for AMQ-8169 when using Stomp NIOSSLTransport (but it could probably happen for other nio ssl transports)

The newly added synchronized on the serviceRead() caused a deadlock between the transport and the TransportConnection. One thread acquired a lock on the TransportConnection and was waiting on serviceRead() to acquire the NIOSSLTransport lock. Another thread had was inside serviceRead() so it acquired the NIOSSLTransport lock and was then later waiting for the TransportConnection lock.

The main issue is that processCommand(plain) ends up being protected by the lock and since there's multiple brokers/filters running we run into a deadlock (my current deadlock happened processing a ConsumerInfo command)

To fix this we simply need to narrow the lock as it's too broad. The goal here was to protect the the reading off the channel concurrently (so really the secureRead() method so we can move the lock to secureRead() and not lock the entire serviceRead() call and that should fix the deadlock problem while still solving the initial issue which was demonstrated by the StompNIOSSL failing before this fix. I will open a new Jira shortly and push a fix.
",,cshannon,jira-bot,,,,,,,,,,"cshannon opened a new pull request #666:
URL: https://github.com/apache/activemq/pull/666


   This narrows the lock that was added to serviceRead() to secureRead()
   which prevents processing commands while locked which should solve the
   deadlock issues


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 13:50;githubbot;600","cshannon commented on pull request #666:
URL: https://github.com/apache/activemq/pull/666#issuecomment-853049154


   @jbonofre and @mattrpav - I think this will do the trick. I did some testing and the StompNIOSSLTest is still fixed with this modified fix. It's pretty straight forward as you can see.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 13:55;githubbot;600","cshannon commented on pull request #666:
URL: https://github.com/apache/activemq/pull/666#issuecomment-853258610


   @mattrpav - agreed, there are still thread safety issues to address but narrowing this lock to secureRead() at least fixes the deadlock problem while fixing the StompNIOSSLTest issue still so it's still better than it was. It makes sense to take a look in future Jiras to improve things.
   
   I will go ahead and merge this.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 17:52;githubbot;600","asfgit closed pull request #666:
URL: https://github.com/apache/activemq/pull/666


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 17:53;githubbot;600","mattrpav commented on pull request #666:
URL: https://github.com/apache/activemq/pull/666#issuecomment-853259927


   I think we should consider a v5.15.16 b/c of this. Thoughts?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 17:54;githubbot;600",,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,AMQ-8169,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 02 17:55:09 UTC 2021,,,,,,,,,,,"0|z0rl7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Jun/21 17:53;jira-bot;Commit 2fcf2fd75f7c2a04151a2284595a08bf4c03240b in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2fcf2fd ]

AMQ-8287 - fix NIOSSLTransport deadlock with serviceRead lock

This narrows the lock that was added to serviceRead() to secureRead()
which prevents processing commands while locked which should solve the
deadlock issues
;;;","02/Jun/21 17:53;jira-bot;Commit ac27cc2cda1ac10d01bc87c1f875dcf278a9594f in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ac27cc2 ]

Merge branch 'AMQ-8287' into main

This closes #666
;;;","02/Jun/21 17:55;jira-bot;Commit 0f952f72f798c5626dcd6270c9282e0e8988bd41 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0f952f7 ]

AMQ-8287 - fix NIOSSLTransport deadlock with serviceRead lock

This narrows the lock that was added to serviceRead() to secureRead()
which prevents processing commands while locked which should solve the
deadlock issues

(cherry picked from commit 2fcf2fd75f7c2a04151a2284595a08bf4c03240b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java 16 SSL connection gives an error in the log,AMQ-8275,13379841,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,egordeev,egordeev,21/May/21 19:00,01/Sep/22 18:15,13/Jul/23 08:27,15/Jan/22 05:45,5.16.2,,,,5.16.4,5.17.0,,AMQP,,,,,5,,,,,"2021-05-21 13:53:37.775 ERROR [Row Crops - Integration,,] 449 --- [           main] o.a.activemq.util.IntrospectionSupport   : Could not set property host on Socket[unconnected]2021-05-21 13:53:37.775 ERROR [Row Crops - Integration,,] 449 --- [           main] o.a.activemq.util.IntrospectionSupport   : Could not set property host on Socket[unconnected]
java.lang.reflect.InaccessibleObjectException: Unable to make public void sun.security.ssl.SSLSocketImpl.setHost(java.lang.String) accessible: module java.base does not ""exports sun.security.ssl"" to unnamed module @636b3685 at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357) at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297) at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:199) at java.base/java.lang.reflect.Method.setAccessible(Method.java:193) at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:179) at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:155) at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:140) at org.apache.activemq.transport.tcp.SslTransport.<init>(SslTransport.java:81) at org.apache.activemq.transport.tcp.SslTransportFactory.createTransport(SslTransportFactory.java:122) at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:120) at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:65) at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:331) at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:346) at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:304) at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:244)",,astrey,avermeerbergen,bkoehm,blackstrype,chaas,egordeev,jbonofre,jgallimore,jira-bot,mattrpav,schrepfler,"jgallimore opened a new pull request #711:
URL: https://github.com/apache/activemq/pull/711


   This PR avoids the need to use reflection to explicitly set the hostname on the socket, instead providing the hostname via a SSLParameter. I have tested this using a HAProxy proxy server to route requests from a client to a broker based on the host name.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/21 11:57;githubbot;600","pax95 commented on pull request #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-994328442


   Is there any news any news on this issue since it blocks for update to java 17 ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Dec/21 06:08;githubbot;600","pax95 edited a comment on pull request #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-994328442


   Is there any news on this issue since it blocks for update to java 17 ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Dec/21 07:56;githubbot;600","jbonofre commented on pull request #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-996554606


   FYI, I'm working on it. I'm fixing assembly build and then I will rebase/merge this PR.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 09:11;githubbot;600","pax95 commented on pull request #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-996944648


   @jgallimore @jbonofre Great job taking care of this. Thanks and merry christmas !! 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/21 18:50;githubbot;600","jbonofre merged pull request #711:
URL: https://github.com/apache/activemq/pull/711


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/21 07:01;githubbot;600","iPet commented on pull request #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-1018457917


   @jbonofre Any ideas on when we can expect a new release including this fix?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/22 12:20;githubbot;600","jbonofre commented on pull request #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-1024850069


   @iPet 5.16.4 vote will start soon (hopefully during the week end or early next week).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/22 06:46;githubbot;600","fabiojuniork13 commented on PR #711:
URL: https://github.com/apache/activemq/pull/711#issuecomment-1234624379

   @jbonofre, hello!
   I have the same problem, but I am using the openjdk 18. The lasted version of openjdk.
   Do you know how to solve this problem, please? I think this is because I am using the openjdk, because in another environment with oracle jdk this problem not happen.


;01/Sep/22 18:15;githubbot;600",,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,AMQ-8445,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jan 01 07:37:33 UTC 2022,,,,,,,,,,,"0|z0r9s0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Jun/21 19:20;mattrpav;JDK 11 support is coming in 5.17.0.  This appears to be a module export problem

{noformat}
module java.base does not ""exports sun.security.ssl"" to unnamed module
{noformat}
;;;","14/Sep/21 11:58;jgallimore;I pushed a PR for this issue here: https://github.com/apache/activemq/pull/711;;;","21/Oct/21 10:52;chaas;Note that this also impacts Java 17.  This issue prevents users from upgrading to the latest LTS Java release.;;;","11/Nov/21 08:32;astrey;Today we ran into the same problem. Maybe it is a little bit confusing that an error is logged for something that is only needed for a special case. 
{code:java}
// Lets try to configure the SSL SNI field.  Handy in case your using            
// a single proxy to route to different messaging apps. {code}
The occured Exception will be catched, logged and the connection establishment goes on.

As workaround to avoid the ""error"" we registered a custom TransportFactory for ssl which uses the changes from [~jgallimore]. Thanks for the work.;;;","19/Dec/21 07:01;jira-bot;Commit 34c4e186fe3d71c82866e89afd2706a3619ca2b4 in activemq's branch refs/heads/main from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=34c4e18 ]

AMQ-8275 eliminate use of reflection for SNI on SslTransport
;;;","19/Dec/21 07:01;jira-bot;Commit d2f0eeddb8b7dceb6c148de53129f85113d01f59 in activemq's branch refs/heads/main from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d2f0eed ]

Merge remote-tracking branch 'upstream/main' into AMQ-8275
;;;","19/Dec/21 07:01;jira-bot;Commit 18b231bf9f6f86ce49500ddc4d650e144e3751b1 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=18b231b ]

Merge pull request #711 from jgallimore/AMQ-8275

AMQ-8275 - Java 16 SSL - reflection warning;;;","19/Dec/21 07:07;jira-bot;Commit 369c05fe7783ed39542e63243d0e7f0ebff57f7e in activemq's branch refs/heads/activemq-5.16.x from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=369c05f ]

AMQ-8275 eliminate use of reflection for SNI on SslTransport

(cherry picked from commit 34c4e186fe3d71c82866e89afd2706a3619ca2b4)
;;;","01/Jan/22 07:37;jbonofre;The change cause failure on activemq-stomp SSL tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary stack trace in case of invalid STOMP version,AMQ-8253,13375531,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,28/Apr/21 07:42,15/Jan/22 05:46,13/Jul/23 08:27,15/Jan/22 05:46,5.16.2,,,,5.16.4,5.17.0,,,,,,,0,,,,,"In case of an invalid STOMP version used, we get an unnecessary stack trace:
{code}
2021-04-28T09:17:07.004+0200 [ActiveMQ NIO Worker 0] WARN Transport - Transport Connection to: tcp://10.0.0.1:50938 failed
org.apache.activemq.transport.stomp.ProtocolException: Invalid Protocol version[3.14], supported versions are: [1.2, 1.1, 1.0]
	at org.apache.activemq.transport.stomp.StompCodec.detectVersion(StompCodec.java:151)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:760)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:254)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{code}

This looks very similar to AMQ-8252.",ActiveMQ 5.16.2,lionel.cons,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8252,,,,,,,,,AMQ-8252,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 17 07:10:28 UTC 2021,,,,,,,,,,,"0|z0qj7s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Aug/21 07:10;lionel.cons;I have tested with 5.16.3 and, unfortunately, I still see a stack trace:

{code}
2021-08-17T09:01:26.439+0200 [ActiveMQ NIO Worker 0] WARN Transport - Transport Connection to: tcp://192.168.19.28:57980 failed
org.apache.activemq.transport.stomp.ProtocolException: Invalid Protocol version[3.14], supported versions are: [1.2, 1.1, 1.0]
	at org.apache.activemq.transport.stomp.StompCodec.detectVersion(StompCodec.java:151)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:761)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:254)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary stack trace in case of invalid credentials,AMQ-8252,13375529,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,28/Apr/21 07:39,15/Jan/22 05:47,13/Jul/23 08:27,15/Jan/22 05:47,5.16.2,,,,5.16.4,5.17.0,,STOMP,,,,,0,,,,,"In case an invalid credential is used with STOMP, we get an unnecessary stack trace:
{code}
2021-04-28T09:17:07.020+0200 [ActiveMQ NIO Worker 0] WARN TransportConnection - Failed to add Connection id=ID:foo-29852-1619594148588-1:17, clientId=ID:foo-29852-1619594148588-1:17, clientIP=tcp://10.0.0.1:50940 due to User name [system] or password is invalid.
2021-04-28T09:17:07.020+0200 [ActiveMQ NIO Worker 0] WARN Service - Security Error occurred on connection to: tcp://10.0.0.1:50940, User name [system] or password is invalid.
2021-04-28T09:17:07.029+0200 [ActiveMQ NIO Worker 0] WARN Transport - Transport Connection to: tcp://10.0.0.1:50940 failed
java.io.IOException: User name [system] or password is invalid.
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:40)
	at org.apache.activemq.transport.stomp.ProtocolConverter$3.onResponse(ProtocolConverter.java:785)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:865)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:72)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1480)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:977)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:933)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:202)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:179)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:777)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:254)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.SecurityException: User name [system] or password is invalid.
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:97)
	at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)
	at org.apache.activemq.security.JaasDualAuthenticationBroker.addConnection(JaasDualAuthenticationBroker.java:94)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.plugin.AbstractRuntimeConfigurationBroker.addConnection(AbstractRuntimeConfigurationBroker.java:118)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:848)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:331)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	... 19 more
Caused by: javax.security.auth.login.FailedLoginException: Password does not match
	at org.apache.activemq.jaas.PropertiesLoginModule.login(PropertiesLoginModule.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:755)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:587)
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:92)
	... 30 more
{code}

This seems to be a regression because this problem was fixed as part of AMQ-7303.",ActiveMQ 5.16.2,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre opened a new pull request #695:
URL: https://github.com/apache/activemq/pull/695


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 11:27;githubbot;600","jbonofre merged pull request #695:
URL: https://github.com/apache/activemq/pull/695


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Aug/21 06:24;githubbot;600","jbonofre opened a new pull request #740:
URL: https://github.com/apache/activemq/pull/740


   Introduce stackTraceEnabled flag on transport connector define if the stack trace should be displayed or not in case of WARN messages


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Dec/21 06:27;githubbot;600","jbonofre merged pull request #740:
URL: https://github.com/apache/activemq/pull/740


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/22 05:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,AMQ-8253,,,,,,,,,,AMQ-8253,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jan 15 05:46:48 UTC 2022,,,,,,,,,,,"0|z0qj7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Aug/21 06:24;jira-bot;Commit ceaeaa986b4f9a233fe7b24f0e7b3b5c2dcfa9ec in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ceaeaa9 ]

[AMQ-8252] Doesn't display warn stack trace for stomp (regression compared to 5.15.x)
;;;","04/Aug/21 06:24;jira-bot;Commit f7f52ccc7a7e7b0e95a760a4b63bc4429316b4e8 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7f52cc ]

Merge pull request #695 from jbonofre/AMQ-8252

[AMQ-8252] Doesn't display warn stack trace for stomp (regression compared to 5.15.x);;;","04/Aug/21 06:24;jira-bot;Commit f7f52ccc7a7e7b0e95a760a4b63bc4429316b4e8 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7f52cc ]

Merge pull request #695 from jbonofre/AMQ-8252

[AMQ-8252] Doesn't display warn stack trace for stomp (regression compared to 5.15.x);;;","04/Aug/21 06:24;jira-bot;Commit 6f2d745ce54dafffa181eb608ab2dba82043af57 in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6f2d745 ]

[AMQ-8252] Doesn't display warn stack trace for stomp (regression compared to 5.15.x)

(cherry picked from commit ceaeaa986b4f9a233fe7b24f0e7b3b5c2dcfa9ec)
;;;","17/Aug/21 07:08;lionel.cons;I have tested with 5.16.3 and, unfortunately, I still see a stack trace.

{code}
2021-08-17T09:01:26.452+0200 [ActiveMQ NIO Worker 0] WARN Transport - Transport Connection to: tcp://192.168.19.28:57982 failed
java.io.IOException: User name [system] or password is invalid.
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:40)
	at org.apache.activemq.transport.stomp.ProtocolConverter$3.onResponse(ProtocolConverter.java:787)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:867)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:72)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1485)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:982)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:938)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:202)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:179)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:779)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:254)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.SecurityException: User name [system] or password is invalid.
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:97)
	at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)
	at org.apache.activemq.security.JaasDualAuthenticationBroker.addConnection(JaasDualAuthenticationBroker.java:94)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.plugin.AbstractRuntimeConfigurationBroker.addConnection(AbstractRuntimeConfigurationBroker.java:118)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:853)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	... 19 more
Caused by: javax.security.auth.login.FailedLoginException: Password does not match
	at org.apache.activemq.jaas.PropertiesLoginModule.login(PropertiesLoginModule.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:755)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:587)
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:92)
	... 30 more
{code}
;;;","17/Aug/21 07:40;jbonofre;I will update the condition (STOMP protocol which has been removed on 5.16.x before my fix).;;;","15/Jan/22 05:46;jira-bot;Commit 2f96b4a60c30f1d9a3ce047aa41a94d975324d83 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2f96b4a ]

[AMQ-8252] Introduce stackTraceEnabled flag on transport connector to define if the stack trace should be displayed or not in case of WARN messages
;;;","15/Jan/22 05:46;jira-bot;Commit 8fd13a349f4d49834f3f160034428646eba3728b in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8fd13a3 ]

Merge pull request #740 from jbonofre/AMQ-8252

[AMQ-8252] Introduce stackTraceEnabled flag on transport connector;;;","15/Jan/22 05:46;jira-bot;Commit ec6db10c7e833690600634fa04d3c7d995317aba in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ec6db10 ]

[AMQ-8252] Introduce stackTraceEnabled flag on transport connector to define if the stack trace should be displayed or not in case of WARN messages

(cherry picked from commit 2f96b4a60c30f1d9a3ce047aa41a94d975324d83)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If ActiveMQ was started with low numer PID then activemq cli commands fails to check if ActiveMQ process is running.,AMQ-8226,13372722,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,nevezhyn,nevezhyn,15/Apr/21 19:02,10/Jan/22 10:29,13/Jul/23 08:27,16/Apr/21 06:13,,,,,5.15.15,5.16.2,5.17.0,Command Line Tools,,,,,0,,,,,"h3. State of the world

[This|https://github.com/apache/activemq/commit/1cb94f5e48b9265bd78ec01595d7f4d747d7c8e8] commit introduced a new approach to check if the ActiveMQ process is running.

[The new approach|https://github.com/apache/activemq/commit/1cb94f5e48b9265bd78ec01595d7f4d747d7c8e8#diff-5306708c9411eee811fbf2bbb46578ed8d34abc2e7313d7e2c4d8db12b48b0f3R390] lists all processes with `ps` command and then greps it:
 local RET=""`ps -o ""pid,args"" | grep ""^$activemq_pid\s.*java""`""
h3. Issue

If ActiveMQ process was started with N digit PID and `ps` command returns processes with M digit PID (such that M > N) then `bin/activemq` script won't be able to identify if ActiveMQ is running. 
h3. Example
{noformat}
$ ps -o ""pid,args""
  PID COMMAND
   XX ActiveMQ java PROCESS
  XXX ANOTHER PROCESS 1
 XXXX ANOTHER PROCESS 2
XXXXX ANOTHER PROCESS N
{noformat}

In this example `ActiveMQ java PROCESS` is running with a two-digit PID `XX`.
 `ANOTHER PROCESS N` is running with a five-digit PID `XXXXX`.
 
`ps` command will add additional spaces before the `ActiveMQ java PROCESS` to align it to the five-digit PID of `ANOTHER PROCESS N`.
 
In this case the grep experssion `^$activemq_pid\s.*java` wont be able to identify the `ActiveMQ java PROCESS` with PID `XX`.",,jira-bot,nevezhyn,robbie,sekarsdhana,,,,,,,,"Charlie-chenchrl opened a new pull request #648:
URL: https://github.com/apache/activemq/pull/648


   …mq startup script
   
   ### Description
   - fix for [AMQ-8226](https://issues.apache.org/jira/browse/AMQ-8226). 
   - added `\s*` before `$activemq_pid` to match any amount of spaces in `ps -o` command


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Apr/21 23:14;githubbot;600","jbonofre merged pull request #648:
URL: https://github.com/apache/activemq/pull/648


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/21 06:11;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Mon Jan 10 10:29:45 UTC 2022,,,,,,,,,,,"0|z0q1w8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Apr/21 06:11;jira-bot;Commit f1190f8feddb68e27eb1b7484f2a0928e32996f9 in activemq's branch refs/heads/main from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f1190f8 ]

AMQ-8226 match any amount of spaces before activemq PID in bin/activemq startup script
;;;","16/Apr/21 06:11;jira-bot;Commit bd5af8294427538177381d30e52a4ee83e636b5d in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bd5af82 ]

Merge pull request #648 from Charlie-chenchrl/AMQ-8226

AMQ-8226 match any amount of spaces before activemq PID in bin/active…;;;","16/Apr/21 06:11;jira-bot;Commit bd5af8294427538177381d30e52a4ee83e636b5d in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bd5af82 ]

Merge pull request #648 from Charlie-chenchrl/AMQ-8226

AMQ-8226 match any amount of spaces before activemq PID in bin/active…;;;","16/Apr/21 06:13;jira-bot;Commit ec95c6f9486ffe79b98121cbf3b0d0380c794a03 in activemq's branch refs/heads/activemq-5.16.x from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ec95c6f ]

AMQ-8226 match any amount of spaces before activemq PID in bin/activemq startup script

(cherry picked from commit f1190f8feddb68e27eb1b7484f2a0928e32996f9)
;;;","16/Apr/21 06:13;jira-bot;Commit 4b7b039be8b25fdc1780ca88bd3a48c154b63619 in activemq's branch refs/heads/activemq-5.15.x from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4b7b039 ]

AMQ-8226 match any amount of spaces before activemq PID in bin/activemq startup script

(cherry picked from commit f1190f8feddb68e27eb1b7484f2a0928e32996f9)
;;;","16/Apr/21 11:15;robbie;Clarity note for later context: The affects/fix versions listed look to be a little misleading, as the breaking commit referenced was apparently only pushed/picked into the branches on Mar 22nd 2021 and so was never actually released in any stream prior to this JIRA being raised to fix the issue it introduced following discovery of the problem during the 5.15.15 #2 vote (cancelled as result) and to rectify it before a #3 respin vote. 

(The author timestamp on the original commit introducing the issue is ""Fri Sep 23 10:09:54 2016 +0200"" making it rather difficult to see in the typical git log ordering [but --topo-order works for this particular case though], and it was seemingly added without any JIRA and so the changes wouldnt be visible in the release notes other than through this JIRA)
;;;","10/Jan/22 10:29;sekarsdhana;looks like this enhancement root cause for the issue reported in https://issues.apache.org/jira/browse/AMQ-8383;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compatibility issue of 5.16.1 with Java 16,AMQ-8220,13370356,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jiri.formanek@atos.net,jiri.formanek@atos.net,08/Apr/21 11:16,21/Apr/21 05:11,13/Jul/23 08:27,21/Apr/21 05:11,5.16.1,,,,5.16.2,5.17.0,,,,,,,0,,,,,"After switch to new Java version 16 ActiveMQ stopped to work. Better said broker network stopped to work. Connections to other servers is opened and immediately stopped because of following error (that is repeating again and again);
{quote}2021-04-08 13:11:21,198 | INFO | Network connection between vm://localhost#74736 and HTTP Reader [https://xxxx:1043|https://rsas8.kstm.labornetz.net:1043/] (localhost) has been established. | org.apache.activemq.network.DemandForwardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader [https://xxx:1043|https://rsas8.kstm.labornetz.net:1043/], localBroker= vm://localhost#74736
 2021-04-08 13:11:21,212 | WARN | Network connection between vm://localhost#74736 and HTTP Reader [https://xxx:1043|https://rsas8.kstm.labornetz.net:1043/] shutdown due to a remote error: com.thoughtworks.xstream.converters.ConversionException: No converter available
 ---- Debugging information ----
 message : No converter available
 type : java.util.concurrent.atomic.AtomicLong
 converter : com.thoughtworks.xstream.converters.reflection.ReflectionConverter
 message[1] : Unable to make field private static final long java.util.concurrent.atomic.AtomicLong.serialVersionUID accessible: module java.base does not ""opens java.util.concurrent.atomic"" to unnamed module @29caf222
 ------------------------------- | org.apache.activemq.network.DemandForwardingBridgeSupport | triggerStartAsyncNetworkBridgeCreation: remoteBroker=HTTP Reader [https://xxx:1043|https://rsas8.kstm.labornetz.net:1043/], localBroker= vm://localhost#74736
 2021-04-08 13:11:21,213 | WARN | Network connection between vm://localhost#74736 and HTTP Reader [https://xxx:1043|https://rsas8.kstm.labornetz.net:1043/] shutdown due to a remote error: java.io.IOException: Failed to perform GET on: [https://xxx:1043|https://rsas8.kstm.labornetz.net:1043/] as response was: HttpResponseProxy{HTTP/1.1 500 Internal Server Error [Date: Thu, 08 Apr 2021 11:11:21 GMT, Server: Jetty(9.4.35.v20201120), Strict-Transport-Security: max-age=31536000; includeSubDomains, Vary: Accept-Encoding,User-Agent, X-XSS-Protection: 1; mode=block, X-Frame-Options: DENY, Connection: close, Content-Type: text/html] org.apache.http.client.entity.DecompressingEntity@735e13b5} | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Transport: HTTP Reader [https://xxx:1043|https://rsas8.kstm.labornetz.net:1043/]
 2021-04-08 13:11:21,214 | INFO | Connector vm://localhost stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ BrokerService[localhost] Task-1044
 2021-04-08 13:11:21,214 | INFO | localhost bridge to localhost stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[localhost] Task-1044
{quote}
It seems that is incompatibility with Java 16 especially this message:

{{Unable to make field private static final long java.util.concurrent.atomic.AtomicLong.serialVersionUID accessible: module java.base does not ""opens java.util.concurrent.atomic"" to unnamed module @29caf222}}

 

 

 ",,jbonofre,jgallimore,jira-bot,jiri.formanek@atos.net,,,,,,,,"jgallimore opened a new pull request #650:
URL: https://github.com/apache/activemq/pull/650


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Apr/21 18:54;githubbot;600","jgallimore opened a new pull request #651:
URL: https://github.com/apache/activemq/pull/651


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Apr/21 21:19;githubbot;600","jbonofre commented on pull request #650:
URL: https://github.com/apache/activemq/pull/650#issuecomment-823779294


   Please open the PR only on `main`/`master` branch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 05:06;githubbot;600","jbonofre closed pull request #650:
URL: https://github.com/apache/activemq/pull/650


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 05:06;githubbot;600","jbonofre merged pull request #651:
URL: https://github.com/apache/activemq/pull/651


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 05:10;githubbot;600",,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 21 05:10:59 UTC 2021,,,,,,,,,,,"0|z0pnzc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Apr/21 13:16;jbonofre;It seems a missing {{--add-opens}} in {{bin/activemq}}.;;;","20/Apr/21 18:56;jgallimore;I've reproduced, and opened a PR to add the necessary --add-opens options here: https://github.com/apache/activemq/pull/650;;;","21/Apr/21 05:08;jbonofre;[~jgallimore] thanks, as mentioned on the mailing list, I had already a fix ready, so I revert my change.;;;","21/Apr/21 05:10;jira-bot;Commit d1c48abaca86a896e6064c1f2fcd468b20afab73 in activemq's branch refs/heads/main from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d1c48ab ]

AMQ-8220 add add-opens options for Java 16
;;;","21/Apr/21 05:10;jira-bot;Commit bcb5492f41561b6fe8b7a27069eaeee271073e0b in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bcb5492 ]

Merge pull request #651 from jgallimore/AMQ-8220-master

AMQ-8220 add add-opens options for Java 16;;;","21/Apr/21 05:10;jira-bot;Commit bcb5492f41561b6fe8b7a27069eaeee271073e0b in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bcb5492 ]

Merge pull request #651 from jgallimore/AMQ-8220-master

AMQ-8220 add add-opens options for Java 16;;;","21/Apr/21 05:10;jira-bot;Commit c6838aa45191a2bf18789ca31aeb2247e94e2148 in activemq's branch refs/heads/activemq-5.16.x from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c6838aa ]

AMQ-8220 add add-opens options for Java 16

(cherry picked from commit d1c48abaca86a896e6064c1f2fcd468b20afab73)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Get Error when click on ""Send"" or ""Send to"" in web console",AMQ-8219,13370230,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,Chenchrl,Chenchrl,08/Apr/21 00:08,09/Apr/21 20:06,13/Jul/23 08:27,08/Apr/21 05:08,5.15.15,5.17.0,,,5.15.15,5.16.2,5.17.0,,,,,,0,,,,,"With default config, when click on ""Send"" or ""Send to"" button in ActiveMQ web console, I get Error page: ""Exception occurred while processing this request, check the log for more information!""

The error message I got from log is :
{quote}{{2021-04-07 22:18:06,697 | WARN | /admin/send.jsp | org.eclipse.jetty.server.HttpChannel | qtp1962329560-35}}
{{javax.servlet.ServletException: javax.servlet.ServletException: org.apache.jasper.JasperException: Unable to compile class for JSP:}}{{An error occurred at line: [27] in the jsp file: [/WEB-INF/tags/form/text.tag]}}
{{org.apache.commons.lang.StringEscapeUtils cannot be resolved to a type}}
{{24: if (value == null) {}}
{{25: value = """";}}
{{26: }}}
{{27: value = org.apache.commons.lang.StringEscapeUtils.escapeHtml(value);}}
{{28:}}
{{29: %>}}
{{30: <input type=""text"" name=""${name}"" value=""<%= value %>""/>}}
{{Stacktrace:}}
{{ at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:162)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.server.Server.handle(Server.java:516)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:388)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:633)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:380)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:279)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.ssl.SslConnection$DecryptedEndPoint.onFillable(SslConnection.java:540)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.ssl.SslConnection.onFillable(SslConnection.java:395)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.ssl.SslConnection$2.succeeded(SslConnection.java:161)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:383)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:882)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1036)[jetty-all-9.4.39.v20210325-uber.jar:9.4.39.v20210325]}}
{{ at java.lang.Thread.run(Thread.java:749)[:1.8.0_282]}}{quote}",,Chenchrl,jira-bot,,,,,,,,,,"Charlie-chenchrl opened a new pull request #646:
URL: https://github.com/apache/activemq/pull/646


   … type
   
   ### Changes
   - this issue was caused by upgrade from commons-lang 2.6 to commons-lang 3.12 in https://github.com/apache/activemq/commit/1e2a0de5ccbff057ac0201b335ec30dc266eb0b5. The fix is to change it correct version.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 00:46;githubbot;600","jbonofre merged pull request #646:
URL: https://github.com/apache/activemq/pull/646


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 04:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"08/Apr/21 00:06;Chenchrl;Screen Shot 2021-04-07 at 5.05.36 PM.png;https://issues.apache.org/jira/secure/attachment/13023528/Screen+Shot+2021-04-07+at+5.05.36+PM.png","08/Apr/21 00:07;Chenchrl;Screen Shot 2021-04-07 at 5.06.28 PM.png;https://issues.apache.org/jira/secure/attachment/13023527/Screen+Shot+2021-04-07+at+5.06.28+PM.png","08/Apr/21 00:07;Chenchrl;Screen Shot 2021-04-07 at 5.07.11 PM.png;https://issues.apache.org/jira/secure/attachment/13023526/Screen+Shot+2021-04-07+at+5.07.11+PM.png",,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 09 20:06:16 UTC 2021,,,,,,,,,,,"0|z0pn7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Apr/21 04:54;jira-bot;Commit d48cf3758312a25122508854946c399a2e6f6f69 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d48cf37 ]

Merge pull request #646 from Charlie-chenchrl/AMQ8219

[AMQ-8219] fix org.apache.commons.lang.StringEscapeUtils cannot be resolved to a…;;;","09/Apr/21 20:06;jira-bot;Commit d48cf3758312a25122508854946c399a2e6f6f69 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d48cf37 ]

Merge pull request #646 from Charlie-chenchrl/AMQ8219

[AMQ-8219] fix org.apache.commons.lang.StringEscapeUtils cannot be resolved to a…;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq features break http commands,AMQ-8218,13369452,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,04/Apr/21 04:40,09/Apr/21 20:06,13/Jul/23 08:27,06/Apr/21 04:58,,,,,5.15.15,5.16.2,5.17.0,OSGi/Karaf,,,,,0,,,,,"The ActiveMQ features repo has two issues:
 * as it uses spring-legacy repository range, Karaf can installed and refresh new Spring dependencies, breaking the http commands
 * the activemq-client feature should not installed shell-compat but just aries-blueprint. shell-compat is only required by broker features",,jbonofre,jira-bot,,,,,,,,,,"jbonofre opened a new pull request #645:
URL: https://github.com/apache/activemq/pull/645


   Installing activemq feature can cause several refresh. The user should use spring-legacy from Karaf version instead of the range.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Apr/21 05:44;githubbot;600","jbonofre merged pull request #645:
URL: https://github.com/apache/activemq/pull/645


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/21 04:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 09 20:06:14 UTC 2021,,,,,,,,,,,"0|z0pieg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Apr/21 04:57;jira-bot;Commit ee808b310a69a87aa13f9e76a1d82e35d91032f4 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ee808b3 ]

[AMQ-8218] Installing activemq features breaks http commands and can cause several refresh. The user should use spring-legacy from Karaf version instead of the range.
;;;","06/Apr/21 04:57;jira-bot;Commit 2d812f012c9d6c6fbbc5e1df75eeb35f0dbcade1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2d812f0 ]

Merge pull request #645 from jbonofre/AMQ-8218

[AMQ-8218] Installing activemq features breaks http commands;;;","06/Apr/21 04:57;jira-bot;Commit 2d812f012c9d6c6fbbc5e1df75eeb35f0dbcade1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2d812f0 ]

Merge pull request #645 from jbonofre/AMQ-8218

[AMQ-8218] Installing activemq features breaks http commands;;;","06/Apr/21 04:57;jira-bot;Commit 89ef3e8313996a3bf1c0c792d79eb27059c050ca in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=89ef3e8 ]

[AMQ-8218] Installing activemq features breaks http commands and can cause several refresh. The user should use spring-legacy from Karaf version instead of the range.

(cherry picked from commit ee808b310a69a87aa13f9e76a1d82e35d91032f4)
;;;","06/Apr/21 04:58;jira-bot;Commit 4eed39f370dc437b1d6ee171a180d05f234c10be in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4eed39f ]

[AMQ-8218] Installing activemq features breaks http commands and can cause several refresh. The user should use spring-legacy from Karaf version instead of the range.

(cherry picked from commit ee808b310a69a87aa13f9e76a1d82e35d91032f4)
;;;","09/Apr/21 20:06;jira-bot;Commit ee808b310a69a87aa13f9e76a1d82e35d91032f4 in activemq's branch refs/heads/main from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ee808b3 ]

[AMQ-8218] Installing activemq features breaks http commands and can cause several refresh. The user should use spring-legacy from Karaf version instead of the range.
;;;","09/Apr/21 20:06;jira-bot;Commit 2d812f012c9d6c6fbbc5e1df75eeb35f0dbcade1 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2d812f0 ]

Merge pull request #645 from jbonofre/AMQ-8218

[AMQ-8218] Installing activemq features breaks http commands;;;","09/Apr/21 20:06;jira-bot;Commit 2d812f012c9d6c6fbbc5e1df75eeb35f0dbcade1 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2d812f0 ]

Merge pull request #645 from jbonofre/AMQ-8218

[AMQ-8218] Installing activemq features breaks http commands;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VirtualTopic concurrentSend can break mKahaDB,AMQ-8202,13367284,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,24/Mar/21 15:53,24/Mar/21 16:00,13/Jul/23 08:27,24/Mar/21 16:00,5.16.0,,,,5.17.0,,,,,,,,0,,,,,"With a virtual topic doing concurrent send, if the subscription queues are spread across mKahaDB instances, the tracking of message stores can get out of sync with send completion, leaving dangling messages in the store and missing dispatch.
The issue is lack of thread safety in the mKahadb transaction store. 

the workaround is to disable concurrentSend
{code}
<virtualTopic name=""virtual.>"" prefix=""sub.global.*."" concurrentSend=""false""/>{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 24 15:56:03 UTC 2021,,,,,,,,,,,"0|z0p52o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Mar/21 15:56;jira-bot;Commit 09389d1ef30cb149ef1a6b8c391a8c9172062a3d in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=09389d1 ]

AMQ-8202 - fix concurrency issue on tracking stores in mKahaDB, exposed by virtual topic concurrentSend
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ACK compaction with local transactions,AMQ-8201,13367192,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jgallimore,jgallimore,24/Mar/21 09:29,25/Mar/21 11:43,13/Jul/23 08:27,25/Mar/21 11:43,5.15.14,5.16.1,,,5.15.15,5.16.2,5.17.0,Broker,,,,,0,,,,,"I have a consumer running with transacted sessions, and looking in KahaDB, I can see a KAHA_REMOVE_MESSAGE_COMMAND, with the local transaction ID added to the journal, and then a KAHA_COMMIT_COMMAND after it. Some time later, I see the exact same KAHA_REMOVE_MESSAGE_COMMAND appended to the journal again, with the exact same transaction information, but no corresponding KAHA_COMMIT_COMMAND. This appears to follow a KAHA_REWRITTEN_DATA_FILE_COMMAND.
 
It looks like the ack compaction method is forwarding the acknowledgement, but not the commit - it appears that the commit is only forwarded in the case of an XA transaction.
 
A test and patch is available in the PR here: https://github.com/apache/activemq/pull/636
 ",,jgallimore,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7067,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 25 11:43:42 UTC 2021,,,,,,,,,,,"0|z0p4i8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Mar/21 09:34;jgallimore;This is related to Jira issue AMQ-7067 (https://issues.apache.org/jira/browse/AMQ-7067) - the previous functionality only forwarded the remove message command, and was changed to also forward commits with XA transactions - it looks like local transactions were missed. 

Thank you Chris, Gary and JB for your review and feedback!;;;","25/Mar/21 11:03;jira-bot;Commit edd0515d90d8bdb01e3455bf2c4c132f9a6add29 in activemq's branch refs/heads/master from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=edd0515 ]

AMQ-8201 Forward commit commands for local transactions as well as XA transactions during ACK compaction
;;;","25/Mar/21 11:43;jira-bot;Commit 468cd9c5cc5fc81c4742b3b23cc15ef303e2eb66 in activemq's branch refs/heads/activemq-5.16.x from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=468cd9c ]

AMQ-8201 Forward commit commands for local transactions as well as XA transactions during ACK compaction

(cherry picked from commit 631342d76a0a2cf7aa039db9d34db15f8234559f)
;;;","25/Mar/21 11:43;jira-bot;Commit eaa272e19bb59c57ce36f244b247965fd6ad90b1 in activemq's branch refs/heads/activemq-5.15.x from Jonathan Gallimore
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=eaa272e ]

AMQ-8201 Forward commit commands for local transactions as well as XA transactions during ACK compaction

(cherry picked from commit 631342d76a0a2cf7aa039db9d34db15f8234559f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DuplexAdvisoryRaceTest is failing,AMQ-8190,13365153,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,15/Mar/21 07:10,25/Mar/21 11:52,13/Jul/23 08:27,25/Mar/21 11:52,,,,,5.15.15,5.16.2,5.17.0,Test Cases,,,,,0,,,,,{{DuplexAdvisoryRaceTest}} (in {{activemq-unit-tests}}) is flaky.,,jbonofre,jira-bot,,,,,,,,,,"charlie-cyf opened a new pull request #639:
URL: https://github.com/apache/activemq/pull/639


   ### Description
   - Fix flaky test `DuplexAdvisoryRaceTest` [AMQ-8190](https://issues.apache.org/jira/browse/AMQ-8190). 
   - The test is flaky because time needed for received response greater than numMessagesPerDest * numDests is more than 10 min in CI env. [Failed example](https://github.com/charlie-cyf/activemq/runs/2181716367?check_suite_focus=true#step:9:2557)
   
   ### Test
   This commit is tested on my local Github Actions: https://github.com/charlie-cyf/activemq/runs/2188672418?check_suite_focus=true#step:7:1223


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 03:49;githubbot;600","jbonofre merged pull request #639:
URL: https://github.com/apache/activemq/pull/639


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 11:51;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,AMQ-8191,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 25 11:52:14 UTC 2021,,,,,,,,,,,"0|z0orxc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Mar/21 11:51;jira-bot;Commit 6691e23e4835cdf8b20b30cc0a580d822feed5f6 in activemq's branch refs/heads/master from Charlie Chen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6691e23 ]

AMQ-8190 add wait time & shrink duration for CI test run
;;;","25/Mar/21 11:51;jira-bot;Commit fc0999cc8718e1ebacb1aac6e04cb170a38f8d4b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fc0999c ]

Merge pull request #639 from charlie-cyf/AMQ8190

AMQ-8190 add wait time & shrink duration for CI test run;;;","25/Mar/21 11:51;jira-bot;Commit 9c1849cf62c4b5d5dda7ae88998033bee4e4da7c in activemq's branch refs/heads/activemq-5.16.x from Charlie Chen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9c1849c ]

AMQ-8190 add wait time & shrink duration for CI test run

(cherry picked from commit 6691e23e4835cdf8b20b30cc0a580d822feed5f6)
;;;","25/Mar/21 11:52;jira-bot;Commit 55fa79f555e6837bf0a9317a2035d462152b893c in activemq's branch refs/heads/activemq-5.15.x from Charlie Chen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=55fa79f ]

AMQ-8190 add wait time & shrink duration for CI test run

(cherry picked from commit 6691e23e4835cdf8b20b30cc0a580d822feed5f6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CachedLDAPAuthorizationModuleTest is failing,AMQ-8189,13365152,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,15/Mar/21 07:08,31/Mar/21 13:43,13/Jul/23 08:27,27/Mar/21 06:05,,,,,5.15.15,5.16.2,5.17.0,Test Cases,,,,,0,,,,,"{{CachedLDAPAuthorizationModuleTest}} (in {{activemq-unit-tests}}) is flaky.

 ",,jbonofre,jira-bot,,,,,,,,,,"charlie-cyf opened a new pull request #640:
URL: https://github.com/apache/activemq/pull/640


   ### Description
   - This test is flaky because default 30s wait time is not enough for test run in CI env. [failed example](https://github.com/charlie-cyf/activemq/runs/2181716367?check_suite_focus=true#step:9:2214)
   - changed wait time to maximum 10 min to fix this issue
   
   ### Testing
   Tested on my local Github Actions CI run: https://github.com/charlie-cyf/activemq/runs/2190121520?check_suite_focus=true#step:7:870


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 17:24;githubbot;600","jbonofre commented on pull request #640:
URL: https://github.com/apache/activemq/pull/640#issuecomment-807141143


   @charlie-cyf can you please rebase/squash your two commits ? Thanks !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 17:27;githubbot;600","ehossack-aws commented on a change in pull request #640:
URL: https://github.com/apache/activemq/pull/640#discussion_r601698059



##########
File path: activemq-unit-tests/src/test/java/org/apache/activemq/security/AbstractCachedLDAPAuthorizationMapLegacyTest.java
##########
@@ -322,7 +322,7 @@ public boolean isSatisified() throws Exception {
                     return map.context == null;
                 }
             }
-        });
+        }, 30*60*1000);

Review comment:
       10 minutes seems like an unreasonable amount of time to wait for a single test. The CI build is super long already. Do you think it could be shorter?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 17:27;githubbot;600","Charlie-chenchrl opened a new pull request #641:
URL: https://github.com/apache/activemq/pull/641


   ### Description
   - This test is flaky because default 30s wait time is not enough for test run in CI env. failed example
   - changed wait time to maximum 5 min to fix this issue
   ### Testing
   Tested on my local Github Actions CI run: https://github.com/charlie-cyf/activemq/runs/2190121520?check_suite_focus=true#step:7:870


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 20:10;githubbot;600","Charlie-chenchrl commented on pull request #640:
URL: https://github.com/apache/activemq/pull/640#issuecomment-807399319


   Sure, new PR: https://github.com/apache/activemq/pull/641


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 20:10;githubbot;600","charlie-cyf closed pull request #640:
URL: https://github.com/apache/activemq/pull/640


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 20:12;githubbot;600","jbonofre commented on pull request #640:
URL: https://github.com/apache/activemq/pull/640#issuecomment-807934506


   For the record, you don't have to create a new PR. You can simply update this one with `git rebase -i origin/master` and squash the second commit to the first one, and then you just force push `git push --force charlie-cyf:AMQ8189`.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/21 04:55;githubbot;600","jbonofre commented on pull request #641:
URL: https://github.com/apache/activemq/pull/641#issuecomment-807935203


   The failing test (in `activemq-amqp`) is not related to your change (it's another flaky test ;) ). I'm testing the PR locally with `full.test` profile.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/21 04:58;githubbot;600","jbonofre merged pull request #641:
URL: https://github.com/apache/activemq/pull/641


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 06:04;githubbot;600",,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,AMQ-8191,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 31 13:43:51 UTC 2021,,,,,,,,,,,"0|z0orx4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Mar/21 06:04;jira-bot;Commit 30986e372cd32f7344e972c266adc901885b63d1 in activemq's branch refs/heads/master from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=30986e3 ]

AMQ-8189 add wait time to CachedLDAPAuthorizationModuleTest
;;;","27/Mar/21 06:04;jira-bot;Commit d913cab49eb3b46e721aeb15c83c1748f4ba3c99 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d913cab ]

Merge pull request #641 from Charlie-chenchrl/AMQ-8189

AMQ-8189 add wait time to CachedLDAPAuthorizationModuleTest;;;","27/Mar/21 06:04;jira-bot;Commit d913cab49eb3b46e721aeb15c83c1748f4ba3c99 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d913cab ]

Merge pull request #641 from Charlie-chenchrl/AMQ-8189

AMQ-8189 add wait time to CachedLDAPAuthorizationModuleTest;;;","27/Mar/21 06:04;jira-bot;Commit 84bd96866d95bb3655c5e25e542def6c90ab32ab in activemq's branch refs/heads/activemq-5.16.x from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=84bd968 ]

AMQ-8189 add wait time to CachedLDAPAuthorizationModuleTest

(cherry picked from commit 30986e372cd32f7344e972c266adc901885b63d1)
;;;","31/Mar/21 13:43;jira-bot;Commit df0a3d9a3e1c8488cd4560535d9e7dbde3486687 in activemq's branch refs/heads/activemq-5.15.x from charlie-aws
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=df0a3d9 ]

AMQ-8189 add wait time to CachedLDAPAuthorizationModuleTest

(cherry picked from commit 30986e372cd32f7344e972c266adc901885b63d1)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Setting a maxFrameSize can lead to infinite loop and high cpu usage,AMQ-8183,13363870,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,11/Mar/21 14:55,11/Mar/21 16:15,13/Jul/23 08:27,11/Mar/21 15:04,5.16.1,,,,5.16.2,5.17.0,,Broker,,,,,0,,,,,"There is a regression caused by AMQ-7106 that can lead to an infinite loop and high cpu usage when using the nio+ssl transport if maxFrameSize is configured. The issue shows up when several messages come into the broker that exceed the max frame size. The broker properly detects the error and kills the connection in another thread but the transport thread can get stuck in an infinite loop inside serviceRead() method of NIOSSLTransport.

It's a bit hard to tell what is going on but the issue appears to be due to the fact that the transport has already been stopped but there's no condition being hit to break the loop. The transport logic appears to get into a weird state trying to process a partial frame in a local buffer in the serviceRead() method but the logic just keeps spinning and never tries to re-read from the socket because the currentBuffer in the transport is wasn't allocated due to the async shutdown.

The fix here is pretty simple and that is to check if the transport has been stopped and exit the loop. I have only seen this with OpenWire and nio+ssl but the fix I'm adding will work for all nio+ssl and nio transports.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7106,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 11 16:15:50 UTC 2021,,,,,,,,,,,"0|z0ok48:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Mar/21 15:02;jira-bot;Commit 944ca6c7e1dc4f44b61ce05b77c180c686e2ae76 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=944ca6c ]

AMQ-8183 - prevent infinite loop when maxFrameSize is exceeded

This makes sure the nio transport thread properly terminates if
maxFrameSize is exceeded with OpenWire to prevent an infinite loop that
uses up all the cpu
;;;","11/Mar/21 15:02;jira-bot;Commit 51a4014c54f1f766fd9ea80178c284a7abb2bb97 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=51a4014 ]

AMQ-8183 - prevent infinite loop when maxFrameSize is exceeded

This makes sure the nio transport thread properly terminates if
maxFrameSize is exceeded with OpenWire to prevent an infinite loop that
uses up all the cpu

(cherry picked from commit 944ca6c7e1dc4f44b61ce05b77c180c686e2ae76)
;;;","11/Mar/21 16:15;jira-bot;Commit 2712464b78f76affd34cc0b097a2248f211ea0c7 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2712464 ]

AMQ-8183 - apply maxFrameSize high cpu usage fix to Auto nio transport
also
;;;","11/Mar/21 16:15;jira-bot;Commit 0a099af4c4b9841a4517970fec47c34e3f95c91e in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0a099af ]

AMQ-8183 - apply maxFrameSize high cpu usage fix to Auto nio transport
also

(cherry picked from commit 2712464b78f76affd34cc0b097a2248f211ea0c7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
StompNIOSSLTest test fails with more recent JDK 8 versions,AMQ-8169,13362339,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,mattrpav,mattrpav,04/Mar/21 16:28,02/Jun/21 13:46,13/Jul/23 08:27,09/Mar/21 20:22,5.17.0,,,,5.15.15,5.16.2,5.17.0,,,,,,0,,,,,"The StompNIOSSL test fails during CI/CD tests with certain JDK versions. This blocks PR's from getting a green status

To reproduce:

[x] Fails with jdk1.8.0_281
[x] Passes with jdk1.8.0_211

Suspects:

* The test SSL cert needs to be generated with a newer cipher and/or length 
* The NIOSSLTransport has a bad byte[] read bug",,cshannon,jbonofre,jira-bot,mattrpav,tetlucas,,,,,,,"lucastetreault opened a new pull request #617:
URL: https://github.com/apache/activemq/pull/617


   According to the [SSLEngine docs](https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLEngine.html) ""two threads must not attempt to call the same method (either wrap() or unwrap()) concurrently, because there is no way to guarantee the eventual packet ordering"". 
   
   serviceRead(), the loop that calls unwrap(), was called in doInit() as well in initializeStreams() which intermittently leads to errors such as **javax.crypto.AEADBadTagException: Input too short - need tag** as described in the [associated Jira](https://issues.apache.org/jira/browse/AMQ-8169) as the two threads compete to unwrap network traffic. 
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/21 10:13;githubbot;600","mattrpav commented on pull request #617:
URL: https://github.com/apache/activemq/pull/617#issuecomment-792324680


   Looks like there is a reason for serviceRead() to be in the doInit(). Looks like it was specifically added for the auto+nio+ssl use case and when used for bridges.  Start/Stop
   
   ref: https://github.com/apache/activemq/commit/ed0e786b6002633411037923fb28a075489e442b


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/21 18:01;githubbot;600","lucastetreault closed pull request #617:
URL: https://github.com/apache/activemq/pull/617


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:40;githubbot;600","cshannon commented on pull request #617:
URL: https://github.com/apache/activemq/pull/617#issuecomment-792822781


   There might be a better way than what I did but if I recall auto+nio+ssl was having issues without this change. It's been a long time since i looked at it though


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 15:15;githubbot;600","cshannon opened a new pull request #620:
URL: https://github.com/apache/activemq/pull/620


   This is needed to prevent concurrent access to the SSLEngine during
   initialization. This is a regression from when auto+nio+ssl was added.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 16:41;githubbot;600","jbonofre commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-792893168


   Thanks, I'm testing on my machine as well.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 16:48;githubbot;600","jbonofre commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-792893731


   I guess the same should be applied to AMQ SSL test, I will tackle this if required.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 16:49;githubbot;600","jbonofre commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-793538069


   FYI, when I do:
   
   ```
   mvn clean test -Dtest=Stomp11NIOSSLTest
   ```
   
   I do the same again:
   
   ```
   [ERROR] Failures: 
   [ERROR]   Stomp11NIOSSLTest>Stomp11Test.testDurableSubAndUnSubOnTwoTopics:939
   [INFO]
   [ERROR] Tests run: 31, Failures: 1, Errors: 0, Skipped: 0
   ```
   
   It's what I meant when the test is flaky.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 08:25;githubbot;600","jbonofre commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-793538738


   I'm testing on the PR now.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 08:26;githubbot;600","jbonofre edited a comment on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-793538069


   FYI, when I do:
   
   ```
   mvn clean test -Dtest=Stomp11NIOSSLTest
   ```
   
   it works.
   
   I do the same again:
   
   ```
   [ERROR] Failures: 
   [ERROR]   Stomp11NIOSSLTest>Stomp11Test.testDurableSubAndUnSubOnTwoTopics:939
   [INFO]
   [ERROR] Tests run: 31, Failures: 1, Errors: 0, Skipped: 0
   ```
   
   It's what I meant when the test is flaky.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 08:34;githubbot;600","cshannon commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-793755871


   The main thing I was looking at was StompNIOSSLTest#testDisconnectDoesNotDeadlockBroker was breaking in CI and also locally for me and this PR fixed that at least. That other test you reference has always been flaky even before I was working on the auto transport stuff years ago.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:34;githubbot;600","jbonofre commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-793767278


   OK, so it's what I thought: it's not the same thing, and the build randomly fail (including on Jenkins). I will do a new test on those tests, eventually excluding them (or isolating in a profile).


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:44;githubbot;600","jbonofre commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-794075527


   I ran `activemq-stomp` build several times without failure. So, it seems your change improves the overall situation. I'm doing a set of new run and I will merge.
   
   Thanks !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 15:51;githubbot;600","cshannon commented on pull request #620:
URL: https://github.com/apache/activemq/pull/620#issuecomment-794083837


   Thanks for checking that.  The change seems like it should prevent any more of those errors by preventing concurrent access to the SSL engine. Also generally there won't be any contention after init so there should be very minimal overhead with uncontended locking so I wouldn't expect any noticeable performance hit.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 15:57;githubbot;600","jbonofre merged pull request #620:
URL: https://github.com/apache/activemq/pull/620


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 20:19;githubbot;600",,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,AMQ-8287,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 02 13:46:45 UTC 2021,,,,,,,,,,,"0|z0oaoo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Mar/21 17:03;mattrpav;{noformat}
javax.net.ssl|ERROR|1B|ActiveMQ BrokerService[localhost] Task-3|2021-03-04 01:59:07.137 PST|TransportContext.java:361|Fatal (BAD_RECORD_MAC): Input too short - need tag (
""throwable"" : {
  javax.crypto.AEADBadTagException: Input too short - need tag
  	at java.base/com.sun.crypto.provider.GaloisCounterMode.decryptFinal(GaloisCounterMode.java:564)
  	at java.base/com.sun.crypto.provider.CipherCore.finalNoPadding(CipherCore.java:1118)
  	at java.base/com.sun.crypto.provider.CipherCore.fillOutputBuffer(CipherCore.java:1055)
  	at java.base/com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:943)
  	at java.base/com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:491)
  	at java.base/javax.crypto.CipherSpi.bufferCrypt(CipherSpi.java:794)
  	at java.base/javax.crypto.CipherSpi.engineDoFinal(CipherSpi.java:730)
  	at java.base/javax.crypto.Cipher.doFinal(Cipher.java:2500)
  	at java.base/sun.security.ssl.SSLCipher$T13GcmReadCipherGenerator$GcmReadCipher.decrypt(SSLCipher.java:1930)
  	at java.base/sun.security.ssl.SSLEngineInputRecord.decodeInputRecord(SSLEngineInputRecord.java:240)
  	at java.base/sun.security.ssl.SSLEngineInputRecord.decode(SSLEngineInputRecord.java:197)
  	at java.base/sun.security.ssl.SSLEngineInputRecord.decode(SSLEngineInputRecord.java:160)
  	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:110)
  	at java.base/sun.security.ssl.SSLEngineImpl.decode(SSLEngineImpl.java:736)
  	at java.base/sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:691)
  	at java.base/sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:506)
  	at java.base/sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:482)
  	at java.base/javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:637)
  	at org.apache.activemq.transport.nio.NIOSSLTransport.secureRead(NIOSSLTransport.java:393)
  	at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:261)
  	at org.apache.activemq.transport.stomp.StompNIOSSLTransport.initializeStreams(StompNIOSSLTransport.java:71)
  	at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:543)
  	at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:174)
  	at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:470)
  	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
  	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:64)
  	at org.apache.activemq.transport.stomp.StompTransportFilter.start(StompTransportFilter.java:65)
  	at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:172)
  	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:64)
  	at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:1067)
  	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:223)
  	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
  	at java.base/java.lang.Thread.run(Thread.java:832)}
{noformat};;;","05/Mar/21 15:30;tetlucas;It doesn't seem like a problem with the ssl cert. The old cert is a 2048-bit RSA key and looking at the tls handshake the client and server negotiate on TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 as the cipher suite which appears to be a good, strong cipher according to this: [https://cheatsheetseries.owasp.org/cheatsheets/TLS_Cipher_String_Cheat_Sheet.html]

 

I tried generating a new key pair anyway and the test still fails and the cipher suite used is the same: 
{code:java}
""ServerHello"": {
  ""server version""      : ""TLSv1.2"",
  ""random""              : ""73 63 64 39 98 C8 82 32 8C 68 AC B2 57 F0 C6 E5 E4 39 5F 92 48 91 63 59 44 4F 57 4E 47 52 44 01"",
  ""session id""          : ""44 BE B7 9B A7 A2 ED 93 D6 7F 1C 53 D3 00 D1 FC 31 48 71 FA 51 43 5B 5E D0 BE 47 D0 91 0C D8 0F"",
  ""cipher suite""        : ""TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384(0xC030)"",
  ""compression methods"" : ""00"",
  ""extensions""          : [
    ""extended_master_secret (23)"": {
      <empty>
    },
    ""renegotiation_info (65,281)"": {
      ""renegotiated connection"": [<no renegotiated connection>]
    }
  ]
}
)
javax.net.ssl|FINE|12|ActiveMQ BrokerService[localhost] Task-1|2021-03-04 23:25:35.164 PST|Logger.java:765|Produced server Certificate handshake message (
""Certificates"": [
  ""certificate"" : {
    ""version""            : ""v3"",
    ""serial number""      : ""32 F8 37 03"",
    ""signature algorithm"": ""SHA256withRSA"",
    ""issuer""             : ""CN=localhost, OU=activemq.org, O=activemq.org, L=LA, ST=CA, C=US"",
    ""not before""         : ""2021-03-04 23:16:43.000 PST"",
    ""not  after""         : ""2121-02-08 23:16:43.000 PST"",
    ""subject""            : ""CN=localhost, OU=activemq.org, O=activemq.org, L=LA, ST=CA, C=US"",
    ""subject public key"" : ""RSA"",
    ""extensions""         : [
      {
        ObjectId: 2.5.29.14 Criticality=false
        SubjectKeyIdentifier [
        KeyIdentifier [
        0000: F9 A4 A3 77 25 A6 D8 FE   30 8F CA 53 69 33 AD 76  ...w%...0..Si3.v
        0010: 34 42 E9 C7                                        4B..
        ]
        ]
      }
    ]}
]
)
{code};;;","05/Mar/21 16:02;jbonofre;It's not related to cert: this test is flaky and failing for a while (randomly).

I will check and at least exclude it.;;;","05/Mar/21 22:00;tetlucas;I've been doing some more digging and it appears the intermittent issues we are seeing were introduced in Oracle jdk1.8.0_261. I do not believe this to be a flaky test, but rather a problem with AES GCM. I don't know if it's a JDK bug or if it's an implementation problem.

With Oracle jdk1.8.0_251 the negotiated cipher suite is TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 and I am not able to recreate the test failing.

With Oracle jdk1.8.0_261 the negotiated cipher suite is TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 and I can easily recreate the test failing. The difference in negotiated cipher suite appears to be due to [this change|https://www.oracle.com/java/technologies/javase/8u261-relnotes.html#JDK-8028518] to *Increase the priorities of GCM cipher suites*.;;;","05/Mar/21 22:08;mattrpav;[~tetlucas] interesting the stack and the NIOSSLTransport indicate SSLEngine in use.. I wonder if we need to fix this item (from your JDK changelog notes):

Given all the protocols could share NIOSSLTransport, we should dig in further. Might not be only a STOMP issue.

{noformat}
4. TLS connection issues with applications using javax.net.ssl.SSLEngine

Cause: The internal implementation of the SSLEngine and associated classes has been reworked with the introduction of TLS v1.3 support. Buffer usage has been improved in the SSLEngine area.

Solution: If an SSLEngine application encounters issues after upgrading to JDK 8u261 or later, refer to the Java 8 API to ensure application code is correct. In particular, applications using SSLEngine should not just depend on SSLEngineResult.Status.BUFFER_UNDERFLOW or SSLEngineResult.Status.BUFFER_OVERFLOW results in order to flush pending data. Buffers should always be flushed after an SSLEngine wrap operation if such a call produces data (where SSLEngineResult.Status.OK may be returned).
{noformat};;;","06/Mar/21 00:12;tetlucas;[~mattrpav], I saw that note in there as well and was going to dig in to it some more! **

It seems likely that's the issue. I added *jdk.tls.disabledAlgorithms=GCM* to *$JAVA_HOME/jre/lib/security/java.security* and confirmed that even with TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 jdk1.8.0_261 will fail intermittently so it's not specifically a problem with GCM.;;;","06/Mar/21 00:51;mattrpav;{noformat}
   protected int secureRead(ByteBuffer plain) throws Exception {

        if (!(inputBuffer.position() != 0 && inputBuffer.hasRemaining()) || status == SSLEngineResult.Status.BUFFER_UNDERFLOW) {
            int bytesRead = channel.read(inputBuffer);

            if (bytesRead == 0 && !(sslEngine.getHandshakeStatus().equals(SSLEngineResult.HandshakeStatus.NEED_UNWRAP))) {
                return 0;
            }

            if (bytesRead == -1) {
                sslEngine.closeInbound();
                if (inputBuffer.position() == 0 || status == SSLEngineResult.Status.BUFFER_UNDERFLOW) {
                    return -1;
                }
            }
        }

        plain.clear();

        inputBuffer.flip();
        SSLEngineResult res;
        do {
            res = sslEngine.unwrap(inputBuffer, plain); // <-- exception thrown from this line
        } while (res.getStatus() == SSLEngineResult.Status.OK && res.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_UNWRAP
                && res.bytesProduced() == 0);

        if (res.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.FINISHED) {
            finishHandshake();
        }
      ...
{noformat};;;","06/Mar/21 05:20;jbonofre;Weird, AFAIR, I reproduced the issue with previous JDK 1.8 versions.

Worth to take a look. Anyway, I'm checking with JDK 11 (as I will push the PR about that).;;;","08/Mar/21 15:30;mattrpav;Notes:

1. The secureRead() in the doInit() is needed to maintain connection cycling and connectivity when doing network bridges w/ auto+nio+ssl and other scenarios (see commit history on NIOSSLTransport, confirmed in chat (and his comment to [~tetlucas]'s original PR) w/ @cshannon and unit tests run by [~tetlucas]

2. The secureRead() fail is probably due to multi-threaded access in the not-thread-safe SSLEngine 

-or- 

3. The secureRead() needs improved return code checking out of SSLEngine per the JDK 1.8 updates in item (4) (see comments above);;;","08/Mar/21 15:40;cshannon;I think this might be fixed by simply adding synchronized to serviceRead() or maybe just secureRead();;;","08/Mar/21 15:41;cshannon;I am testing out a fix now but adding synchronized seems to fix it;;;","08/Mar/21 15:48;jbonofre;AFAIR, I already tried this, but the test sometime failed (less often), but it was maybe a coincidence.

I guess it's valid even using JDK11. I'm asking because I'm ready to update/open the PR about cleanup, JDK11 build and related updates.;;;","08/Mar/21 15:55;cshannon;Well either way I think it makes sense to synchronize and not use a countdown latch to prevent concurrent access. I'm working on a PR now to make a small change. It seems to fix the issue for me locally so it should at least make it better.;;;","08/Mar/21 15:58;jbonofre;Yes, I agree, it makes sense. I gonna test/check on my machines as well.;;;","08/Mar/21 16:40;cshannon;Actually I think the countdown latch still makes sense here so I just added the sync and pushed a PR. ;;;","09/Mar/21 20:19;jira-bot;Commit 1654e6c79cfbc1ced5a8fa3f726a9f651560be9d in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1654e6c ]

AMQ-8169: Synchronize on serviceRead inside NIOSSLTransport

This is needed to prevent concurrent access to the SSLEngine during
initialization. This is a regression from when auto+nio+ssl was added.
;;;","09/Mar/21 20:19;jira-bot;Commit f2a3fbda2b1e00d1adbff7bb3b2d0bb9d9c0b719 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f2a3fbd ]

Merge pull request #620 from cshannon/AMQ-8169

AMQ-8169: Synchronize on serviceRead inside NIOSSLTransport;;;","09/Mar/21 20:19;jira-bot;Commit f2a3fbda2b1e00d1adbff7bb3b2d0bb9d9c0b719 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f2a3fbd ]

Merge pull request #620 from cshannon/AMQ-8169

AMQ-8169: Synchronize on serviceRead inside NIOSSLTransport;;;","09/Mar/21 20:20;jira-bot;Commit 8d34120d9310d93c83e9dfcd644331dc42dddd0c in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8d34120 ]

AMQ-8169: Synchronize on serviceRead inside NIOSSLTransport

This is needed to prevent concurrent access to the SSLEngine during
initialization. This is a regression from when auto+nio+ssl was added.

(cherry picked from commit 1654e6c79cfbc1ced5a8fa3f726a9f651560be9d)
;;;","09/Mar/21 20:21;jira-bot;Commit 54bdb7a1e46c280a2d001dee3a0b80c78bf17116 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=54bdb7a ]

AMQ-8169: Synchronize on serviceRead inside NIOSSLTransport

This is needed to prevent concurrent access to the SSLEngine during
initialization. This is a regression from when auto+nio+ssl was added.

(cherry picked from commit 1654e6c79cfbc1ced5a8fa3f726a9f651560be9d)
;;;","02/Jun/21 13:03;cshannon;FYI - I ran into a deadlock after this fix, I created a new Jira to track the issue to fix it: AMQ-8287;;;","02/Jun/21 13:46;mattrpav;[~cshannon] great! this was a troubling issue to have hang out there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Server-side redelivery no longer working with 5.16.1,AMQ-8168,13362296,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lichtin,lichtin,04/Mar/21 13:09,21/Apr/21 06:25,13/Jul/23 08:27,21/Apr/21 05:28,5.16.1,,,,5.16.2,5.17.0,,Broker,,,,,0,,,,,"Server-side redelivery no longer working with 5.16.x

Server-side redeliveries triggered by the redeliveryPlugin can no longer be consumed, as they are (incorrectly) suppressed.

Logs from a test show ""suppressing duplicate delivery on connection, poison acking"":
{noformat}
       RedeliveryPlugin  175 | 40 - org.apache.activemq.activemq-osgi - 5.16.1 | redelivery #1 of: ID:mlipc2-4159-1611768583683-1:15:1:1:41 with delay: 1000, dest: queue://TEST2.msgin
ActiveMQMessageConsumer 1485 | 40 - org.apache.activemq.activemq-osgi - 5.16.1 | ID:mlipc2-4159-1611768583683-1:16:1:1 suppressing duplicate delivery on connection, poison acking: MessageDispatch {commandId = 0, responseRequired = false, consumerId = ID:mlipc2-4159-1611768583683-1:16:1:1, destination = queue://TEST2.msgin, message = ActiveMQTextMessage {commandId = 125, responseRequired = true, messageId = ID:mlipc2-4159-1611768583683-1:15:1:1:41, originalDestination = null, originalTransactionId = null, producerId = ID:mlipc2-4159-1611768583683-1:15:1:1, destination = queue://TEST2.msgin, transactionId = null, expiration = 0, timestamp = 1611768605501, arrival = 0, brokerInTime = 1611768607001, brokerOutTime = 1611768607012, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@5f105a66, marshalledProperties = org.apache.activemq.util.ByteSequence@5b2fd55c, dataStructure = null, redeliveryCounter = 1, size = 0, properties = {redeliveryDelay=1000, scheduledJobId=ID:mlipc2-4159-1611768583683-1:15:1:1:2}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false, text = XXX}, redeliveryCounter = 1}
{noformat}
To reproduce the issue, use existing test ""BrokerRedeliveryTest"" and modify slightly, so it's using a failover connection.
{noformat}
   protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
-        return new ActiveMQConnectionFactory(""vm://localhost"");
+        return new ActiveMQConnectionFactory(""failover:(vm://localhost)"");
   }   @Override{noformat}
After this change to the test, tests start to fail and one sees the symptom logged as:
{noformat}
... suppressing duplicate delivery on connection, poison acking ... {noformat}
See also AMQ-7298",,cshannon,gtully,jbonofre,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7298,,,,,"04/Mar/21 13:11;lichtin;BrokerRedeliveryTest.java;https://issues.apache.org/jira/secure/attachment/13021571/BrokerRedeliveryTest.java",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 21 05:29:32 UTC 2021,,,,,,,,,,,"0|z0oaf4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Mar/21 07:10;jbonofre;Thanks, let me reproduce and investigate.;;;","15/Apr/21 11:23;cshannon;[~gtully] - I haven't looked too much at this yet but any thoughts? This seems like a pretty complex issue because of all the timing stuff with transactions and failover in AMQ-7298. I can also try and take a look next week (i'm out of the office the rest of the week) but was wondering if you had any ideas whenever you had a chance to take a peak since you did the previous fix.;;;","15/Apr/21 11:31;jbonofre;[~cshannon] I also tried a fix, but need more work. My proposal is to revert the commit and more forward with 5.16.2 (as it's an important regression).;;;","16/Apr/21 10:26;gtully;I had a peek this morning, I think there is a workaround. At least for the BrokerRedeliveryTest, disable the checkForDuplicates on the connection.
{code:java}
    return new ActiveMQConnectionFactory(""failover:(vm://localhost)?jms.checkForDuplicates=false"");{code}
the test then run individually, I think the vm transport being failed over causes some problem with the set of tests.

I will try and find the root cause early next week, but I think the crux is that there is some missing call to rollback the duplicate cache on the connection.;;;","16/Apr/21 10:33;gtully;The test works ok with the workaround and tcp
{code:java}
diff --git a/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java b/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
index fbc0212f58..5d432f0a25 100644
--- a/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
+++ b/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
@@ -40,6 +40,7 @@ public class BrokerRedeliveryTest extends org.apache.activemq.TestSupport {
 
     static final Logger LOG = LoggerFactory.getLogger(BrokerRedeliveryTest.class);
     BrokerService broker = null;
+    TransportConnector tcpConnector = null;
 
     final ActiveMQQueue destination = new ActiveMQQueue(""Redelivery"");
     final String data = ""hi"";
@@ -206,6 +207,7 @@ public class BrokerRedeliveryTest extends org.apache.activemq.TestSupport {
         broker = new BrokerService();
         broker.setPersistent(persistent);
         broker.setSchedulerSupport(true);
+        tcpConnector = broker.addConnector(""tcp://localhost:0"");
 
         RedeliveryPlugin redeliveryPlugin = new RedeliveryPlugin();
 
@@ -231,7 +233,7 @@ public class BrokerRedeliveryTest extends org.apache.activemq.TestSupport {
 
     @Override
     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
-        return new ActiveMQConnectionFactory(""vm://localhost"");
+        return new ActiveMQConnectionFactory(""failover:("" + tcpConnector.getPublishableConnectString() + "")?jms.checkForDuplicates=false"");
     }
 
     @Override {code};;;","16/Apr/21 12:12;jira-bot;Commit c4d2ddfce9944cff6ec4003242ce79a2e843aac8 in activemq's branch refs/heads/main from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c4d2ddf ]

AMQ-7298 - fix regression with broker redelivery plugin, fix and test relates to AMQ-8168
;;;","16/Apr/21 12:19;gtully;[~cshannon] [~jbonofre] I have found the problem I think, details in AMQ-7298;;;","16/Apr/21 14:51;jbonofre;[~gtully] thanks ! I'm testing your commit, and I keep you posted.;;;","19/Apr/21 14:33;cshannon;Thanks [~gtully];;;","21/Apr/21 05:28;jbonofre;Tested successfully.;;;","21/Apr/21 05:29;jira-bot;Commit 818d885d6cf5ac4e482888073826d2f41d6cb899 in activemq's branch refs/heads/activemq-5.16.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=818d885 ]

AMQ-7298 - fix regression with broker redelivery plugin, fix and test relates to AMQ-8168

(cherry picked from commit c4d2ddfce9944cff6ec4003242ce79a2e843aac8)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Shiro 1.7.1,AMQ-8159,13361584,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,sishbi,sishbi,01/Mar/21 11:36,09/Mar/21 21:08,13/Jul/23 08:27,09/Mar/21 21:08,5.16.1,,,,5.15.15,5.16.2,5.17.0,Broker,,,,,0,,,,,"Apache ActiveMQ v5.16.1 uses Apache Shiro v1.7.0 which has the following security issues.

I would like to find out when you will be upgrading to Apache Shiro v1.7.1, if ActiveMQ v5.16.2 will include this and if so, when 5.16.2 will be released.
|{color:#000000}*Apache Shiro*{color}|{color:#000000}1.7.0{color}|{color:#000000}org.apache.shiro:shiro-spring:1.7.0{color}|{color:#000000}HIGH{color}|{color:#000000}9.0{color}|{color:#000000}CVE-2020-17523{color}|{color:#000000}2021-02-03T17:15:00.000Z{color}|{color:#000000}Apache Shiro before 1.7.1  when using Apache Shiro with Spring  a specially crafted HTTP request may cause an authentication bypass.{color}|",Linux Bare-Metal and Docker/Kubernetes,sishbi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2021-03-01 11:36:35.0,,,,,,,,,,,"0|z0o614:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing hashes for apache-nms 1.5.0/1.7.0,AMQ-8148,13358736,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,sebb,sebb,16/Feb/21 00:29,18/Apr/22 10:49,13/Jul/23 08:27,18/Apr/22 10:49,,,,,,,,,,,,,0,,,,,"As the subject says, the hashes are missing in the following directories:

https://downloads.apache.org/activemq/apache-nms/1.5.0/
https://downloads.apache.org/activemq/apache-nms/1.7.0/

The corresponding download pages must also have links to the hashes.",,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Apr 18 10:49:00 UTC 2022,,,,,,,,,,,"0|z0np40:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Apr/22 10:49;robbie;Checksums added, links updated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP ProtocolConverter error should include client IP information,AMQ-8138,13356519,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,03/Feb/21 15:26,03/Aug/21 13:14,13/Jul/23 08:27,03/Aug/21 13:14,5.16.1,,,,5.16.3,5.17.0,,STOMP,,,,,0,,,,,"On a broker recently upgraded to 5.16.1, I've seen the following warning:
{code}
2021-02-03 16:21:00,745 [ActiveMQ NIO Worker 9] WARN ProtocolConverter - Exception occurred for client null (null) processing: SEND -> org.apache.activemq.transport.stomp.ProtocolException: Not connected.
{code}

This looks a lot like AMQ-7444.

If possible, it would be good to log client IP information for this warning too.",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre opened a new pull request #696:
URL: https://github.com/apache/activemq/pull/696


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:09;githubbot;600","jbonofre merged pull request #696:
URL: https://github.com/apache/activemq/pull/696


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 13:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Aug 03 13:13:54 UTC 2021,,,,,,,,,,,"0|z0nbfs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Aug/21 09:06;jbonofre;That's easy to have the concrete client IP address in the protocol converter as it's based on the stomp command. If the stomp command is empty (it's your case when the SSL handshake is not complete, that's why you have null for both client ID and client IP address in the log message), we don't have details about client. As a little improvement, I'm adding host in the client IP address (not set for now), it would help a little.;;;","03/Aug/21 13:13;jira-bot;Commit 2e169f0bc3db3e16fe2928ac03b3308c69b5e72a in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2e169f0 ]

[AMQ-8138] Set client IP address with Stomp host header
;;;","03/Aug/21 13:13;jira-bot;Commit 0348938952ccb43ccb3453c2e932124f39decd74 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0348938 ]

Merge pull request #696 from jbonofre/AMQ-8138

[AMQ-8138] Set client IP address with Stomp host header;;;","03/Aug/21 13:13;jira-bot;Commit 0348938952ccb43ccb3453c2e932124f39decd74 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0348938 ]

Merge pull request #696 from jbonofre/AMQ-8138

[AMQ-8138] Set client IP address with Stomp host header;;;","03/Aug/21 13:13;jira-bot;Commit 6bb09feed55a0ffcd53adbe55bc0b1a417c3d2eb in activemq's branch refs/heads/activemq-5.16.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6bb09fe ]

[AMQ-8138] Set client IP address with Stomp host header

(cherry picked from commit 2e169f0bc3db3e16fe2928ac03b3308c69b5e72a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JDBC Store - durable topic with non matching selector can hold message till unsubscribe requires enableMessageExpirationOnActiveDurableSubs,AMQ-8131,13355211,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Jan/21 14:37,01/Feb/21 13:14,13/Jul/23 08:27,01/Feb/21 13:12,5.16.0,,,,5.17.0,,,JDBC,Message Store,,,,0,,,,,"Unmatched messages get an unmatched ack, however this ack is ignored by the topic message store under the assumption that there will be some subsequent ack that will more the cursor forward and allow cleanup to happen. However this may never happen and messages can accumulate till that subscription is removed.
The jdbc topic message store needs to track the unmatched acks in the normal way, however the ack sequence id is linear and any gap in unmatched would potentially ack previous messages of the same priority.

The best we can do without converting to an individual ack table is the have expiry kick in and remove/ack these messages in the normal way.
The caveat being that expiry processing needs to be relatively linear in time. The broker attribute enableMessageExpirationOnActiveDurableSubs enables this feature, off by default.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Feb 01 12:12:10 UTC 2021,,,,,,,,,,,"0|z0n3dk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Jan/21 09:56;jira-bot;Commit e1b3204407e0b51f0811083e77336fd71ad4c500 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e1b3204 ]

AMQ-8131 - track unmatched acks in the acks table
;;;","01/Feb/21 09:52;gtully;need to rethink, I see a failure in org.apache.activemq.usecases.DurableSubscriptionOffline3Test#testOfflineSubscriptionWithSelectorAfterRestart when there is a gap in unacked, pointing to the need to track each ack individually.
It may be that it is best to treat the durable sub that never gets a message as the special case.;;;","01/Feb/21 12:12;jira-bot;Commit 2f40261362bb830899f7f369a731b446f795a627 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2f40261 ]

AMQ-8131 - revert treating unmatched as real acks b/c individual acks are not tracked. make use of enableMessageExpirationOnActiveDurableSubs to ensure unmatched can eventually expire
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Add jaxb-core, istack, ... for runtimeConfigurationPlugin without broker started",AMQ-8123,13352449,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,15/Jan/21 09:58,18/Mar/21 09:30,13/Jul/23 08:27,18/Mar/21 09:28,5.16.1,,,,5.16.2,5.17.0,,Broker,Plugin,,,,1,,,,,"In order to work with any JDK version (JDK8, JDK9, JDK11+), and avoid classloading issue, the runtimeConfigurationPlugin needs jaxb-core and itstack-commons-runtime in the classloader. This is especially required with broker start attribute is false.",,jbonofre,jira-bot,lionel.cons,ruffp,,,,,,,,"jbonofre opened a new pull request #612:
URL: https://github.com/apache/activemq/pull/612


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/21 15:47;githubbot;600","lucastetreault commented on pull request #612:
URL: https://github.com/apache/activemq/pull/612#issuecomment-792579947


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 08:38;githubbot;600","lucastetreault removed a comment on pull request #612:
URL: https://github.com/apache/activemq/pull/612#issuecomment-792579947


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:04;githubbot;600","jbonofre merged pull request #612:
URL: https://github.com/apache/activemq/pull/612


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Mar/21 09:16;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,AMQ-7377,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 18 09:30:39 UTC 2021,,,,,,,,,,,"0|z0mmc8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Mar/21 09:16;jira-bot;Commit f64c9327d7097b2c4d53325d9731ceefa53ba480 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f64c932 ]

[AMQ-8123] Add jaxb-core,istack,activation in lib for RuntimeConfigurationPlugin (with both JDK8 and 11+)
;;;","18/Mar/21 09:16;jira-bot;Commit c92aca0612ec9eb2006eead6241f314ec395d19f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c92aca0 ]

Merge pull request #612 from jbonofre/AMQ-8123

[AMQ-8123] Add jaxb-core,istack,activation in lib for RuntimeConfigurationPlugin (with both JDK8 and 11+);;;","18/Mar/21 09:16;jira-bot;Commit c92aca0612ec9eb2006eead6241f314ec395d19f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c92aca0 ]

Merge pull request #612 from jbonofre/AMQ-8123

[AMQ-8123] Add jaxb-core,istack,activation in lib for RuntimeConfigurationPlugin (with both JDK8 and 11+);;;","18/Mar/21 09:30;jira-bot;Commit aedb4aaf65584db8649ad8a4c8865bb80094e835 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=aedb4aa ]

[AMQ-8123] Add jaxb-core,istack,activation in lib for RuntimeConfigurationPlugin (with both JDK8 and 11+)

(cherry picked from commit f64c9327d7097b2c4d53325d9731ceefa53ba480)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Link to ActiveMQ Exclusive Consumer Documentation is Broken,AMQ-8118,13351261,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,mattrpav,spaleti,spaleti,09/Jan/21 23:22,26/Feb/21 00:39,13/Jul/23 08:27,26/Feb/21 00:39,,,,,5.17.0,,,AMQP,,,,,0,,,,,The link to the exclusive consumer documentation is broken here [https://activemq.apache.org/per-destination-policies] under the property {{allConsumersExclusiveByDefault}},,spaleti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2021-01-09 23:22:16.0,,,,,,,,,,,"0|z0mf0g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VirtualSelectorCacheBrokerPlugin throws false positive exception,AMQ-8117,13350828,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,jbonofre,jvanc,jvanc,07/Jan/21 08:42,04/Jun/21 08:28,13/Jul/23 08:27,04/Jun/21 04:17,5.15.12,5.15.13,5.15.14,5.16.0,5.15.16,5.16.3,5.17.0,Broker,,,,,1,,,,,"Dear,

The VirtualSelectorCacheBrokerPlugin throws an error in the following method:
{code:java}
if (!(desc.getName().equals(""java.lang.String"") || desc.getName().startsWith(""java.util.""))) {
 throw new InvalidClassException(""Unauthorized deserialization attempt"", desc.getName());
 }
{code}
This exception is thrown because there are some lines in the selector cache file that do not match the given ""startsWith(""java.util."")"". The code will throw an exception because of the ""[L"" prefix in front of some java.util. elements in the file:

!image-2021-01-07-09-36-50-044.png!

My activemq.xml and file.data are attached to this ticket.

The selector cache is working fine if I use ActiveMQ version 5.15.11 or below.

I have tried to add jdk.serialFilters for the Concurrent Hashmap, like:

wrapper.java.additional.13=-Djdk.serialFilter=java.util.** (wrapper.conf) and also tried to add this to the java security file, but that did not work.

I hope this issue can be fixed or if it is not a bug, the documentation can be complemented with some notes on how to configure this filters the right way.

Best regards,

Joost",,coheigea,jbonofre,jira-bot,jvanc,simonvalter,,,,,,,"coheigea opened a new pull request #667:
URL: https://github.com/apache/activemq/pull/667


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/21 13:43;githubbot;600","mattrpav commented on pull request #667:
URL: https://github.com/apache/activemq/pull/667#issuecomment-853914429


   Is this causing the amqp test failure on java.util.UUID not serializable?
   
   [PR-665 failing](https://ci-builds.apache.org/blue/organizations/jenkins/ActiveMQ%2FActiveMQ/detail/PR-665/2/pipeline/)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/21 14:29;githubbot;600","coheigea commented on pull request #667:
URL: https://github.com/apache/activemq/pull/667#issuecomment-853923414


   I don't think so...that test passes locally for me on the branch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/21 14:42;githubbot;600","jbonofre commented on pull request #667:
URL: https://github.com/apache/activemq/pull/667#issuecomment-853948464


   @mattrpav no, it's not related. I have a fix for flaky AMQP test due to unserialize.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/21 15:15;githubbot;600","jbonofre merged pull request #667:
URL: https://github.com/apache/activemq/pull/667


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/21 04:15;githubbot;600","mattrpav commented on pull request #667:
URL: https://github.com/apache/activemq/pull/667#issuecomment-853914429


   Is this causing the amqp test failure on java.util.UUID not serializable?
   
   [PR-665 failing](https://ci-builds.apache.org/blue/organizations/jenkins/ActiveMQ%2FActiveMQ/detail/PR-665/2/pipeline/)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/21 08:15;githubbot;600","jbonofre merged pull request #667:
URL: https://github.com/apache/activemq/pull/667


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/21 08:18;githubbot;600","coheigea commented on pull request #667:
URL: https://github.com/apache/activemq/pull/667#issuecomment-853923414


   I don't think so...that test passes locally for me on the branch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/21 08:20;githubbot;600","jbonofre commented on pull request #667:
URL: https://github.com/apache/activemq/pull/667#issuecomment-853948464


   @mattrpav no, it's not related. I have a fix for flaky AMQP test due to unserialize.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/21 08:24;githubbot;600","coheigea opened a new pull request #667:
URL: https://github.com/apache/activemq/pull/667


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Jun/21 08:28;githubbot;600",,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,"07/Jan/21 08:30;jvanc;activemq.xml;https://issues.apache.org/jira/secure/attachment/13018289/activemq.xml","07/Jan/21 08:30;jvanc;file.data;https://issues.apache.org/jira/secure/attachment/13018290/file.data","07/Jan/21 08:36;jvanc;image-2021-01-07-09-36-50-044.png;https://issues.apache.org/jira/secure/attachment/13018288/image-2021-01-07-09-36-50-044.png",,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 04 04:16:54 UTC 2021,,,,,,,,,,,"0|z0mccg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Jan/21 05:19;jbonofre;Let me take a look (to qualify). If a fix is needed (it could be just a documentation concern), I'm not sure I will have time to integrate for 5.16.1/5.15.15.;;;","05/May/21 15:39;simonvalter;[~coheigea] found an existing issue on this.

its reproducible in all versions 5.15.13->5.16.2 and leaves the VirtualSelectorCacheBrokerPlugin unable to read the cache it wrote.

steps to reproduce:

do a clean install.

enable the plugin VirtualSelectorCacheBrokerPlugin

start activemq

stop activemq - cache have now been written.

start active mq and observe exception.;;;","05/May/21 16:26;jbonofre;It seems related to the security enforcement we added.;;;","05/May/21 18:56;simonvalter; ConcurrentHashMap does write a Segments array once serialized and so getName would be  [Ljava.util.concurrent.ConcurrentHashMap$Segment;

my own quickfix i guess can just be to add

|| desc.getName().startsWith(""[Ljava.util."")

 

but i wonder how come this is there in the first place and not just depending on what can be done via jdk.serialFilter as understand it was backported to java 6,7,8 and is pretty much the same or is the reason you have to support older jvm's ?

 

 

 

 ;;;","03/Jun/21 13:44;coheigea;PR submitted: [https://github.com/apache/activemq/pull/667]

 ;;;","04/Jun/21 04:15;jira-bot;Commit 7ca7118a9544fd6b2aac4dd72fd3a6edc3369aca in activemq's branch refs/heads/main from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7ca7118 ]

AMQ-8117 - Allow java.util arrays for deserialization
;;;","04/Jun/21 04:15;jira-bot;Commit c73998477879a7f1cccd371f0254ffd3829aa5ab in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c739984 ]

Merge pull request #667 from coheigea/AMQ-8117

AMQ-8117 - Allow java.util arrays for deserialization;;;","04/Jun/21 04:15;jira-bot;Commit c73998477879a7f1cccd371f0254ffd3829aa5ab in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c739984 ]

Merge pull request #667 from coheigea/AMQ-8117

AMQ-8117 - Allow java.util arrays for deserialization;;;","04/Jun/21 04:16;jira-bot;Commit f3e90aab446bb1fc88feba64e710d80dcc03dab1 in activemq's branch refs/heads/activemq-5.16.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f3e90aa ]

AMQ-8117 - Allow java.util arrays for deserialization

(cherry picked from commit 7ca7118a9544fd6b2aac4dd72fd3a6edc3369aca)
;;;","04/Jun/21 04:16;jira-bot;Commit e5d0abba025cd84c141b7bfdc9084dce912f2308 in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e5d0abb ]

AMQ-8117 - Allow java.util arrays for deserialization

(cherry picked from commit 7ca7118a9544fd6b2aac4dd72fd3a6edc3369aca)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQWildcardPermission with multiple tokens inconsistent with parent WildcardPermission class,AMQ-8116,13350628,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,ikucuze,ikucuze,06/Jan/21 09:38,07/Jan/21 11:32,13/Jul/23 08:27,07/Jan/21 11:32,5.15.14,5.16.0,,,5.15.15,5.16.1,5.17.0,Plugin,,,,,0,,,,,"----
Reminder:
 A permission pattern looks like: A:B:C , A, B and C beoing 'parts' of the permission
 Each 'part' can have one or more 'token', like 'read,write'.
 So a permission with activemq looks like:
 queue:queue1,queue2:read,write
 granting access on queue1 and queue2, for read or write access.
----
WildcardPermission class from Shiro library states that tokens are a list of authorized items, for exemple : newsletter:view,edit,create grants view, edit and create rights uppon newsletter item.

(ref [https://github.com/apache/shiro/blob/master/core/src/main/java/org/apache/shiro/authz/permission/WildcardPermission.java] )

 

ActiveMQWildcardPermission class (in activemq projects), extends this class, by allowing each 'part' to not only be a single wildcard '*', but being a wildcard string.

topic:ActiveMQ.Advisory*  grants all access to the topics starting by the given string.

 

 

For doing so, this class redefines the implies function, but breaks the above requirements.

queue:*:read,create
 should grant read and create access on all queues, but this is not working as 
 queue:testqueue:read
 Will fail to validate

 

Test code:

WildcardPermission permission = new ActiveMQWildcardPermission(""queue:*:read,create"", true);
 WildcardPermission action = new ActiveMQWildcardPermission(""queue:testqueue:read"", true);
 assert(permission .implies(action ));

replacing new ActiveMQWildcardPermission with new WildcardPermission (parent class) will pass this specific assert (but won't match wildcard string like 'test*' , and is not a suitable swap).

 ",,ikucuze,jira-bot,,,,,,,,,,"ikucuze opened a new pull request #602:
URL: https://github.com/apache/activemq/pull/602


   https://issues.apache.org/jira/browse/AMQ-8116
   ActiveMQWildcardPermission with multiple tokens inconsistent with parent
   WildcardPermission class
   
   Update ActiveMQWildcardPermission.java
   
   add testcase


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 10:45;githubbot;600","jbonofre merged pull request #602:
URL: https://github.com/apache/activemq/pull/602


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jan/21 11:30;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jan 07 11:31:52 UTC 2021,,,,,,,,,,,"0|z0mb40:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Jan/21 10:45;ikucuze;correction submitted with testcase under pull request:

https://github.com/apache/activemq/pull/602;;;","07/Jan/21 11:30;jira-bot;Commit 9cf9d20d51590218368f87fb54aeb0505c862461 in activemq's branch refs/heads/master from ikucuze
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9cf9d20 ]

AMQ-8116 ActiveMQWildcardPermission buggy

ActiveMQWildcardPermission with multiple tokens inconsistent with parent
WildcardPermission class

Update ActiveMQWildcardPermission.java

add testcase
;;;","07/Jan/21 11:30;jira-bot;Commit 33635f516f939e4bb4b338068c7406ac7cb0849c in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=33635f5 ]

Merge pull request #602 from ikucuze/master

AMQ-8116 ActiveMQWildcardPermission buggy;;;","07/Jan/21 11:31;jira-bot;Commit b8c58028f0abc4d8f19d77c8b613ea389253b1f3 in activemq's branch refs/heads/activemq-5.16.x from ikucuze
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b8c5802 ]

AMQ-8116 ActiveMQWildcardPermission buggy

ActiveMQWildcardPermission with multiple tokens inconsistent with parent
WildcardPermission class

Update ActiveMQWildcardPermission.java

add testcase

(cherry picked from commit 9cf9d20d51590218368f87fb54aeb0505c862461)
;;;","07/Jan/21 11:31;jira-bot;Commit f3ed1492bed83cf23b5cfefc831d46843b5c57bb in activemq's branch refs/heads/activemq-5.15.x from ikucuze
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f3ed149 ]

AMQ-8116 ActiveMQWildcardPermission buggy

ActiveMQWildcardPermission with multiple tokens inconsistent with parent
WildcardPermission class

Update ActiveMQWildcardPermission.java

add testcase

(cherry picked from commit 9cf9d20d51590218368f87fb54aeb0505c862461)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Pausing queue doesn't work if audit log is turned on,AMQ-8104,13346432,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,nieviezh,nieviezh,16/Dec/20 20:22,28/Dec/20 06:38,13/Jul/23 08:27,28/Dec/20 06:38,5.15.14,5.16.0,,,5.15.15,5.16.1,5.17.0,JMX,Web Console,,,,0,,,,,"If audit log is turned on then Pause Queue doesn't work and causes java.lang.NullPointerException.

*Steps to reproduce:*
 1. Start ActiveMQ normally with audit log turned on: ./activemq start -Dorg.apache.activemq.audit=true
 2. Create a Queue normarlly: [http://127.0.0.1:8161/admin/] > Queues > Enter Queue Name > Create 
 3. Pause newly created queue: Click on `Pause`.

*Expected result:*
 - Queue is paused normally.

*Achieved result:* 
 - Error in web console:
 Error! Exception occurred while processing this request, check the log for more information!
!Screen Shot 2020-12-16 at 9.51.20 AM.png!
 - Error in the `activemq.log`:
{code:java}
 2020-12-16 09:50:41,877 | INFO  | Starting Jetty server | org.apache.activemq.transport.WebTransportServerSupport | main2020-12-16 09:50:41,992 | INFO  | Creating Jetty connector | org.apache.activemq.transport.WebTransportServerSupport | main2020-12-16 09:50:42,124 | WARN  | ServletContext@o.e.j.s.ServletContextHandler@5e4bd84a{/,null,STARTING} has uncovered http methods for path: / | org.eclipse.jetty.security.SecurityHandler | main2020-12-16 09:50:42,199 | INFO  | Listening for connections at ws://3c22fb843faa.ant.amazon.com:61614?maximumConnections=1000&wireFormat.maxFrameSize=104857600 | org.apache.activemq.transport.ws.WSTransportServer | main2020-12-16 09:50:42,201 | INFO  | Connector ws started | org.apache.activemq.broker.TransportConnector | main2020-12-16 09:50:42,203 | INFO  | Apache ActiveMQ 5.15.14 (localhost, ID:3c22fb843faa.ant.amazon.com-55549-1608141041704-0:1) started | org.apache.activemq.broker.BrokerService | main2020-12-16 09:50:42,204 | INFO  | For help or more information please see: http://activemq.apache.org | org.apache.activemq.broker.BrokerService | main2020-12-16 09:50:42,937 | INFO  | ActiveMQ WebConsole available at http://0.0.0.0:8161/ | org.apache.activemq.web.WebConsoleStarter | main2020-12-16 09:50:42,938 | INFO  | ActiveMQ Jolokia REST API available at http://0.0.0.0:8161/api/jolokia/ | org.apache.activemq.web.WebConsoleStarter | main2020-12-16 09:51:04,036 | WARN  | /admin/pauseDestination.action | org.eclipse.jetty.server.HttpChannel | qtp1803093683-37javax.servlet.ServletException: javax.servlet.ServletException: org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.NullPointerException at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:162)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.server.Server.handle(Server.java:516)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:388)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:633)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:380)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:273)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:105)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.io.ChannelEndPoint$1.run(ChannelEndPoint.java:104)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:773)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:905)[jetty-all-9.4.35.v20201120-uber.jar:9.4.35.v20201120] at java.lang.Thread.run(Thread.java:748)[:1.8.0_272]{code}",,jira-bot,nieviezh,,,,,,,,,,"jbonofre commented on pull request #592:
URL: https://github.com/apache/activemq/pull/592#issuecomment-747207164


   @nevezhyn thanks ! For the record, can you please include Jira ID in the commit comment next time ? Thanks again !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/20 05:04;githubbot;600","jbonofre commented on pull request #592:
URL: https://github.com/apache/activemq/pull/592#issuecomment-747207341


   The test failures on Jenkins doesn't seem related to the PR. Let me double check.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/20 05:04;githubbot;600","jbonofre commented on pull request #592:
URL: https://github.com/apache/activemq/pull/592#issuecomment-751598122


   LGTM, the Jenkins failure is not related to your change. Thanks !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Dec/20 06:34;githubbot;600","jbonofre merged pull request #592:
URL: https://github.com/apache/activemq/pull/592


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Dec/20 06:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,"16/Dec/20 20:24;nieviezh;Screen Shot 2020-12-16 at 9.51.20 AM.png;https://issues.apache.org/jira/secure/attachment/13017266/Screen+Shot+2020-12-16+at+9.51.20+AM.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Dec 28 06:38:11 UTC 2020,,,,,,,,,,,"0|z0ll1k:",9223372036854775807,Unit Test Broken,,,,,,,,,,,,,,,,,,,"28/Dec/20 06:34;jira-bot;Commit 651c5ff2cfe72c0de5f4f486c965cdbb80ceba0d in activemq's branch refs/heads/master from Roman Nevezhyn
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=651c5ff ]

- Tests AMQ-8104
- Fixes AMQ-8104
;;;","28/Dec/20 06:34;jira-bot;Commit 651c5ff2cfe72c0de5f4f486c965cdbb80ceba0d in activemq's branch refs/heads/master from Roman Nevezhyn
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=651c5ff ]

- Tests AMQ-8104
- Fixes AMQ-8104
;;;","28/Dec/20 06:34;jira-bot;Commit bdba415b89ee8fbae17ceb22a62e362194141a5e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bdba415 ]

Merge pull request #592 from nevezhyn/master

[AMQ-8104] Tests and fixes NullPointerException when pause queue if audit log is turned on;;;","28/Dec/20 06:37;jira-bot;Commit f71c6674f017579a90c1e2591fdbbbcf898d5e0b in activemq's branch refs/heads/activemq-5.16.x from Roman Nevezhyn
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f71c667 ]

[AMQ-8104] Fix NPE when pausing queue if audit is on

cherry picked from 651c5ff2cfe72c0de5f4f486c965cdbb80ceba0d
;;;","28/Dec/20 06:38;jira-bot;Commit 748ade7deb5d50359e64af8b9a738f3071faa9ef in activemq's branch refs/heads/activemq-5.15.x from Roman Nevezhyn
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=748ade7 ]

[AMQ-8104] Fix NPE when queue pausing with audit log enabled

cherry picked from commit 651c5ff2cfe72c0de5f4f486c965cdbb80ceba0d
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Harden deserialization block xstream ack processing,AMQ-8097,13344327,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,05/Dec/20 05:24,13/Jan/21 17:30,13/Jul/23 08:27,13/Jan/21 17:30,5.15.13,5.16.0,,,5.15.15,5.16.1,5.17.0,Broker,,,,,0,,,,,"Since we improve serialization security (see AMQ-7438), when a message has to be loaded from store and the message is xstream serialized, it fails with:
{code:java}
2020-12-04 16:42:26,107 | WARN  | / | org.eclipse.jetty.server.HttpChannel | qtp1987354705-137568
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : com.thoughtworks.xstream.security.ForbiddenClassException
cause-message       : java.lang.StackTraceElement
class               : [Ljava.lang.StackTraceElement;
required-type       : [Ljava.lang.StackTraceElement;
converter-type      : com.thoughtworks.xstream.converters.collections.ArrayConverter
path                : /org.apache.activemq.command.MessageAck/poisonCause/stackTrace/trace
line number         : 28
class[1]            : java.lang.Throwable
required-type[1]    : java.lang.Throwable
converter-type[1]   : com.thoughtworks.xstream.converters.extended.ThrowableConverter
class[2]            : org.apache.activemq.command.MessageAck
required-type[2]    : org.apache.activemq.command.MessageAck
converter-type[2]   : com.thoughtworks.xstream.converters.reflection.ReflectionConverter
version             : 1.4.11.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:77)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert(AbstractReferenceUnmarshaller.java:72)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:66)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshallField(AbstractReflectionConverter.java:499)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal(AbstractReflectionConverter.java:425)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.extended.ThrowableConverter.unmarshal(ThrowableConverter.java:70)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:72)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert(AbstractReferenceUnmarshaller.java:72)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:66)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshallField(AbstractReflectionConverter.java:499)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doUnmarshal(AbstractReflectionConverter.java:425)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:72)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller.convert(AbstractReferenceUnmarshaller.java:72)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:66)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:50)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:134)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1487)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1467)[xstream-1.4.11.1.jar:1.4.11.1]
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1338)[xstream-1.4.11.1.jar:1.4.11.1]
	at org.apache.activemq.transport.xstream.XStreamWireFormat.unmarshalText(XStreamWireFormat.java:71)[activemq-http-5.15.13.jar:5.15.13]
	at org.apache.activemq.transport.http.HttpTunnelServlet.doPost(HttpTunnelServlet.java:137)[activemq-http-5.15.13.jar:5.15.13]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:763)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:551)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:717)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:602)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:235)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1363)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:188)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:489)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:186)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1278)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:127)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.Server.handle(Server.java:500)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.HttpChannel.lambda$handle$1(HttpChannel.java:383)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:547)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:375)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:273)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:336)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:313)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:171)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:129)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:375)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)[jetty-all-9.4.28.v20200408-uber.jar:9.4.28.v20200408]
	at java.lang.Thread.run(Unknown Source)[:1.8.0_181] {code}",,coheigea,jbonofre,jira-bot,,,,,,,,,"jbonofre opened a new pull request #608:
URL: https://github.com/apache/activemq/pull/608


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jan/21 17:33;githubbot;600","jbonofre commented on pull request #608:
URL: https://github.com/apache/activemq/pull/608#issuecomment-758819740


   @coheigea mind to take a look ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jan/21 17:34;githubbot;600","coheigea commented on a change in pull request #608:
URL: https://github.com/apache/activemq/pull/608#discussion_r556570256



##########
File path: activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java
##########
@@ -40,7 +40,7 @@
     private final ClassLoader inLoader;
 
     static {
-        serializablePackages = System.getProperty(""org.apache.activemq.SERIALIZABLE_PACKAGES"",""org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");
+        serializablePackages = System.getProperty(""java.lang,org.apache.activemq.SERIALIZABLE_PACKAGES"",""org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");

Review comment:
       There's a typo here, it should be: ""java.lang"",""




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 14:43;githubbot;600","coheigea commented on a change in pull request #608:
URL: https://github.com/apache/activemq/pull/608#discussion_r556570256



##########
File path: activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java
##########
@@ -40,7 +40,7 @@
     private final ClassLoader inLoader;
 
     static {
-        serializablePackages = System.getProperty(""org.apache.activemq.SERIALIZABLE_PACKAGES"",""org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");
+        serializablePackages = System.getProperty(""java.lang,org.apache.activemq.SERIALIZABLE_PACKAGES"",""org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");

Review comment:
       There's a typo here, it should be: 
   
   serializablePackages = System.getProperty(""org.apache.activemq.SERIALIZABLE_PACKAGES"",""java.lang,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 14:44;githubbot;600","coheigea commented on a change in pull request #608:
URL: https://github.com/apache/activemq/pull/608#discussion_r556573125



##########
File path: activemq-broker/src/main/java/org/apache/activemq/plugin/SubQueueSelectorCacheBroker.java
##########
@@ -369,7 +369,10 @@ public SubSelectorClassObjectInputStream(InputStream is) throws IOException {
 
         @Override
         protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
-            if (!(desc.getName().equals(""java.lang.String"") || desc.getName().startsWith(""java.util.""))) {
+            if (!(desc.getName().startsWith(""java.lang."")
+                    || desc.getName().startsWith(""com.thoughtworks.xstream"")

Review comment:
       Is there a way to check if xstream is enabled, and if so to include this check, otherwise leave it out?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 14:47;githubbot;600","jbonofre commented on a change in pull request #608:
URL: https://github.com/apache/activemq/pull/608#discussion_r556578792



##########
File path: activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java
##########
@@ -40,7 +40,7 @@
     private final ClassLoader inLoader;
 
     static {
-        serializablePackages = System.getProperty(""org.apache.activemq.SERIALIZABLE_PACKAGES"",""org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");
+        serializablePackages = System.getProperty(""java.lang,org.apache.activemq.SERIALIZABLE_PACKAGES"",""org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"").split("","");

Review comment:
       Oh yes, my bad ;) I'm fixing.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 14:54;githubbot;600","jbonofre commented on a change in pull request #608:
URL: https://github.com/apache/activemq/pull/608#discussion_r556579809



##########
File path: activemq-broker/src/main/java/org/apache/activemq/plugin/SubQueueSelectorCacheBroker.java
##########
@@ -369,7 +369,10 @@ public SubSelectorClassObjectInputStream(InputStream is) throws IOException {
 
         @Override
         protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
-            if (!(desc.getName().equals(""java.lang.String"") || desc.getName().startsWith(""java.util.""))) {
+            if (!(desc.getName().startsWith(""java.lang."")
+                    || desc.getName().startsWith(""com.thoughtworks.xstream"")

Review comment:
       It could be enabled when using HTTP transport connector.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 14:55;githubbot;600","jbonofre commented on a change in pull request #608:
URL: https://github.com/apache/activemq/pull/608#discussion_r556599648



##########
File path: activemq-broker/src/main/java/org/apache/activemq/plugin/SubQueueSelectorCacheBroker.java
##########
@@ -369,7 +369,10 @@ public SubSelectorClassObjectInputStream(InputStream is) throws IOException {
 
         @Override
         protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
-            if (!(desc.getName().equals(""java.lang.String"") || desc.getName().startsWith(""java.util.""))) {
+            if (!(desc.getName().startsWith(""java.lang."")
+                    || desc.getName().startsWith(""com.thoughtworks.xstream"")

Review comment:
       I think it's worth to keep it (just in case for http transport connector). Thoughts ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 15:20;githubbot;600","jbonofre commented on pull request #608:
URL: https://github.com/apache/activemq/pull/608#issuecomment-759518151


   @coheigea I updated the PR, if you mind to do a new pass. Thanks !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 15:21;githubbot;600","jbonofre merged pull request #608:
URL: https://github.com/apache/activemq/pull/608


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 17:28;githubbot;600",,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,AMQ-7399,AMQ-7438,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 13 17:30:12 UTC 2021,,,,,,,,,,,"0|z0l82o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Dec/20 07:49;jbonofre;We also have to update AMQ-7399 allowing back {{java.lang}} to deserialize exception stack trace.;;;","09/Dec/20 10:20;coheigea;To fix the issue I think we should:
 * Add ""java.lang"" (not java.util) back to ClassLoadingAwareObjectInputStream
 * Take  SubSelectorClassObjectInputStream out of MessageDatabaseObjectInputStream, and re-use it in SubQueueSelectorCacheBroker.
 * Also add the xstream namespace to SubSelectorClassObjectInputStream;;;","13/Jan/21 17:28;jira-bot;Commit cbc1baa07a2c3774dcfed288c9f3316dbcd35100 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cbc1baa ]

[AMQ-8097] Deal with deserialization with xstream unmarshal poison ack
;;;","13/Jan/21 17:28;jira-bot;Commit feaa2de87bb89df8e1e5eefa7430ca77c23144e5 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=feaa2de ]

Merge pull request #608 from jbonofre/AMQ-8097

[AMQ-8097] Deal with deserialization with xstream unmarshal poison ack;;;","13/Jan/21 17:28;jira-bot;Commit feaa2de87bb89df8e1e5eefa7430ca77c23144e5 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=feaa2de ]

Merge pull request #608 from jbonofre/AMQ-8097

[AMQ-8097] Deal with deserialization with xstream unmarshal poison ack;;;","13/Jan/21 17:29;jira-bot;Commit 4cc287fcd71318fc459d09fed35f54b0ef0f8231 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4cc287f ]

[AMQ-8097] Deal with deserialization with xstream unmarshal poison ack

(cherry picked from commit cbc1baa07a2c3774dcfed288c9f3316dbcd35100)
;;;","13/Jan/21 17:30;jira-bot;Commit 3c44c60b658513b40ec8644496b44c1b6b7d0b15 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3c44c60 ]

[AMQ-8097] Deal with deserialization with xstream unmarshal poison ack

(cherry picked from commit cbc1baa07a2c3774dcfed288c9f3316dbcd35100)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Illegal reflective access by IntrospectionSupport,AMQ-8093,13343421,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,aj_menteng,aj_menteng,30/Nov/20 23:12,11/Feb/22 12:39,13/Jul/23 08:27,11/Feb/22 12:39,5.15.13,,,,5.16.4,,,Broker,JMS client,,,,0,,,,,"This warning occurred when we try to connect to ActiveMQ using SSL in a springboot application:

 

WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.activemq.util.IntrospectionSupport (file:/C:/Users/user/.m2/repository/org/apache/activemq/activemq-client/5.15.13/activemq-client-5.15.13.jar) to method sun.security.ssl.SSLSocketImpl.setHost(java.lang.String)
WARNING: Please consider reporting this to the maintainers of org.apache.activemq.util.IntrospectionSupport
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release

 
----
 

WARNING: Illegal reflective access by org.apache.activemq.util.IntrospectionSupport (file:/C:/Users/user/.m2/repository/org/apache/activemq/activemq-client/5.15.13/activemq-client-5.15.13.jar) to method sun.security.ssl.SSLSocketImpl.setHost(java.lang.String) at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:181) at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:155) at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:140) at org.apache.activemq.transport.tcp.SslTransport.<init>(SslTransport.java:81) at org.apache.activemq.transport.tcp.SslTransportFactory.createTransport(SslTransportFactory.java:122) at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:120) at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:65) at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:331)",Java 11,aj_menteng,blackstrype,cathodion,jbonofre,scott.leberknight@nearinfinity.com,yongwy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 11 12:39:37 UTC 2022,,,,,,,,,,,"0|z0l2hc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Dec/20 05:49;jbonofre;I guess you are using JDK 11 ?;;;","01/Dec/20 05:52;aj_menteng;Correct. JDK 11.;;;","01/Dec/20 05:56;jbonofre;As reminder, ActiveMQ 5.15.x is not fully JDK 11 compliant at runtime (ActiveMQ 5.16.x is).;;;","01/Dec/20 06:26;aj_menteng;I just tested with ActiveMQ 5.16.0 and got the same warning:

 
{noformat}
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.activemq.util.IntrospectionSupport (file:/C:/Users/user/.m2/repository/org/apache/activemq/activemq-client/5.16.0/activemq-client-5.16.0.jar) to method sun.security.ssl.SSLSocketImpl.setHost(java.lang.String)
WARNING: Please consider reporting this to the maintainers of org.apache.activemq.util.IntrospectionSupport
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release{noformat}
 
{code:java}
WARNING: Illegal reflective access by org.apache.activemq.util.IntrospectionSupport (file:/C:/Users/user/.m2/repository/org/apache/activemq/activemq-client/5.16.0/activemq-client-5.16.0.jar) to method sun.security.ssl.SSLSocketImpl.setHost(java.lang.String) at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:179) at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:155) at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:140) at org.apache.activemq.transport.tcp.SslTransport.<init>(SslTransport.java:81) at org.apache.activemq.transport.tcp.SslTransportFactory.createTransport(SslTransportFactory.java:122) at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:120) at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:65) at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:331){code};;;","01/Dec/20 06:34;jbonofre;Yes, that's just a {{--allow-access}} to add your JVM settings. The client is in your app ?;;;","01/Dec/20 06:35;jbonofre;Just to be clear: my point was on broker side, the stack here is on client side. I guess you are using activemq-client for JMS connection factory in your app right ?;;;","01/Dec/20 06:40;aj_menteng;Yes. The activemq-client is used for JMS connection factory in our app.;;;","02/Dec/20 08:34;jbonofre;OK I will fix that for 5.16.x/5.17.x.;;;","11/Dec/20 13:53;blackstrype;Is this a planned correction in the Client component ? (Still specified as Broker)

Just FYI:
- [https://stackoverflow.com/questions/50251798/what-is-an-illegal-reflective-access]
- [https://openjdk.java.net/jeps/261#Relaxed-strong-encapsulation] ;;;","11/Dec/20 13:58;jbonofre;Yes, 5.16.x and 5.17.x will be JDK 11+ compliant both broker and client side (I'm working on it).;;;","11/Feb/22 12:34;cathodion;Im running version 5.16.3 and still get this warning. Is there any version of ActiveMQ 5 Client where this is solved?;;;","11/Feb/22 12:39;jbonofre;It's fixed in coming 5.16.4 release.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid potential NPE on NetworkInterface.getNetworkInterfaces(),AMQ-8079,13341518,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,19/Nov/20 07:56,21/Nov/20 18:14,13/Jul/23 08:27,21/Nov/20 18:14,,,,,5.15.14,5.16.1,5.17.0,Transport,,,,,0,,,,,,,jbonofre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2020-11-19 07:56:36.0,,,,,,,,,,,"0|z0kqs0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic memory leak on message eviction using UniquePropertyMessageEvictionStrategy,AMQ-8068,13340096,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,fcrossman,fcrossman,12/Nov/20 01:30,23/Nov/20 12:42,13/Jul/23 08:27,23/Nov/20 12:42,5.16.0,,,,5.15.14,5.16.1,5.17.0,Broker,,,,,0,,,,,"The current implementation of UniquePropertyMessageEvictionStrategy does not conform to the expected behaviour of a MessageEvictionStrategySupport implementation resulting in a memory leak.

All MessageEvictionStrategySupport implementations remove from the passed list of MessageReference objects the messages that should be evicted and then returns those items in an array. The calling code expects this to be the case and decrements message reference counters accordingly.

The current implementation of UniquePropertyMessageEvictionStrategy does one of two things depending on the state of the buffered messages:
 # If the buffer already contains a single message per unique property then the oldest message is returned in the array for message removal but is not removed from the passed message list. This leaves a reference to the message intended for removal in the passed message reference list - not intended behaviour. (i.e. intended behaviour is identical to OldestMessageEvictionStrategy)
 # If the buffer contains more than one instance of a message with the same unique property then only the latest messages (largest timestamp) for each of those sets are removed from the passed list of message references. At this point, the passed list of message references contains all the messages we expect to be removed so it is converted to an array and returned. But this list should contain all those messages that should be retained - not intended behaviour.

The patch contains the necessary changes to UniquePropertyMessageEvictionStrategy to prevent this memory leak and an assertion added to the UniquePropertyMessageEvictionStrategyTest.testEviction to demonstrate the memory is correctly freed after applying the fix.",,fcrossman,jbonofre,jira-bot,lionel.cons,,,,,,,,"jbonofre opened a new pull request #583:
URL: https://github.com/apache/activemq/pull/583


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/20 10:55;githubbot;600","jbonofre merged pull request #583:
URL: https://github.com/apache/activemq/pull/583


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 12:41;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"12/Nov/20 01:29;fcrossman;patchfile.txt;https://issues.apache.org/jira/secure/attachment/13015107/patchfile.txt",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Mon Nov 23 12:42:04 UTC 2020,,,,,,,Patch Available,,,,"0|z0ki08:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Nov/20 20:07;fcrossman;If it makes the change easier to discuss I can open this as a GitHub PR. No rush though :);;;","13/Nov/20 04:59;jbonofre;No worries, I will tackle that. Thanks !;;;","23/Nov/20 12:40;jira-bot;Commit 2bc87c2c5f15d03296581b238a41e0fd4235892b in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2bc87c2 ]

[AMQ-8068] Fix topic memory leak on message eviction using UniquePropertyMessageEvictionStrategy
;;;","23/Nov/20 12:40;jira-bot;Commit 4aa298811e04d3d81daee8f0696a2aa2bb3386cb in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4aa2988 ]

Merge pull request #583 from jbonofre/AMQ-8068

[AMQ-8068] Fix topic memory leak on message eviction using UniquePropertyMessageEvictionStrategy;;;","23/Nov/20 12:41;jira-bot;Commit 4aa298811e04d3d81daee8f0696a2aa2bb3386cb in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4aa2988 ]

Merge pull request #583 from jbonofre/AMQ-8068

[AMQ-8068] Fix topic memory leak on message eviction using UniquePropertyMessageEvictionStrategy;;;","23/Nov/20 12:41;jira-bot;Commit d9b2d9309e34c10fe4ddf814ff199f3bce912966 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d9b2d93 ]

[AMQ-8068] Fix topic memory leak on message eviction using UniquePropertyMessageEvictionStrategy

(cherry picked from commit 2bc87c2c5f15d03296581b238a41e0fd4235892b)
;;;","23/Nov/20 12:42;jira-bot;Commit f36a47333c7d377b24eb23cde8dfb7f36160132f in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f36a473 ]

[AMQ-8068] Fix topic memory leak on message eviction using UniquePropertyMessageEvictionStrategy

(cherry picked from commit 2bc87c2c5f15d03296581b238a41e0fd4235892b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Attribute 'allowLinkStealing' is not allowed to appear in element 'transportConnector'.,AMQ-8060,13337895,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,Aleksandr Yaryna,Aleksandr Yaryna,29/Oct/20 15:43,04/Mar/21 10:28,13/Jul/23 08:27,09/Jan/21 06:28,5.16.0,,,,5.16.1,5.17.0,,Broker,,,,,1,,,,,"Hi All,

We are trying to migrate from version 5.15.11 on 5.16.0.

And we have faced with an error with loading the activemq.xml:

2020-10-28 20:27:13,271 | ERROR | Failed to load: class path resource [activemq.xml], reason: Line 126 in XML document from class path resource [activemq.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 126; columnNumber: 163; cvc-complex-type.3.2.2: Attribute 'allowLinkStealing' is not allowed to appear in element 'transportConnector'. | org.apache.activemq.xbean.XBeanBrokerFactory | main
 org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 126 in XML document from class path resource [activemq.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 126; columnNumber: 163; cvc-complex-type.3.2.2: Attribute 'allowLinkStealing' is not allowed to appear in element 'transportConnector'.

As I can see the problem is that we are using XML validation with referring on generic XSD, like this:
{code:xml}
<beans
 xmlns=""http://www.springframework.org/schema/beans""
 xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
 xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
 http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">{code}
And allowLinkStealing attribute is absent in the new versions of the XSD (generic and activemq-core-5.16.0.xsd).

While allowLinkStealing property is still available for Transport configuration why it was excluded from XSD?",Red Hat Linux,Aleksandr Yaryna,jbonofre,jira-bot,,,,,,,,,"jbonofre opened a new pull request #603:
URL: https://github.com/apache/activemq/pull/603


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jan/21 11:29;githubbot;600","jbonofre merged pull request #603:
URL: https://github.com/apache/activemq/pull/603


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/21 06:26;githubbot;600","jbonofre merged pull request #603:
URL: https://github.com/apache/activemq/pull/603


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 04:11;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jan 09 06:27:34 UTC 2021,,,,,,,,,,,"0|z0k4fs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Jan/21 15:03;jbonofre;For the record, allowLinkStealing is allowed on the URI of the transport connector (as it could be specific to a transport). I'm checking the source of XSD change.;;;","07/Jan/21 06:32;jbonofre;It seems that this change has been introduced by the following commit:
{code:java}
cdbddcafa237027599dfd9ae030f42898ec5299c is the first bad commit
commit cdbddcafa237027599dfd9ae030f42898ec5299c
Author: gtully <gary.tully@gmail.com>
Date:   Thu Sep 20 14:58:34 2018 +0100


    AMQ-7057 - support transport connector warnOnRemoteClose to suppress eof warnings on loadbalance or health check socket ping {code}
I'm checking this change in particular.;;;","09/Jan/21 06:26;jira-bot;Commit 0146d5eb3e69e086ec19df1df1b2b7966c644d26 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0146d5e ]

[AMQ-8060] Re add allowLinkStealing on transport connector for backward compatibility
;;;","09/Jan/21 06:26;jira-bot;Commit 05051e2c7af3703364d904120880bc822d82f34b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=05051e2 ]

Merge pull request #603 from jbonofre/AMQ-8060

[AMQ-8060] Re add allowLinkStealing on transport connector for backward compatibility;;;","09/Jan/21 06:26;jira-bot;Commit 05051e2c7af3703364d904120880bc822d82f34b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=05051e2 ]

Merge pull request #603 from jbonofre/AMQ-8060

[AMQ-8060] Re add allowLinkStealing on transport connector for backward compatibility;;;","09/Jan/21 06:27;jira-bot;Commit 737fa4e46e32fd17c2f20ea47845066e0937d2d8 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=737fa4e ]

[AMQ-8060] Re add allowLinkStealing on transport connector for backward compatibility

(cherry picked from commit 0146d5eb3e69e086ec19df1df1b2b7966c644d26)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rename occurences of POSION to POISON,AMQ-8055,13336870,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,jbonofre,graben,graben,23/Oct/20 07:49,10/Nov/20 15:18,13/Jul/23 08:27,10/Nov/20 15:14,5.16.0,,,,5.16.1,5.17.0,,Broker,,,,,0,,,,,Correct a few misspelled poison ack typos across the repository.,,graben,jira-bot,,,,,,,,,,"graben opened a new pull request #568:
URL: https://github.com/apache/activemq/pull/568


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Oct/20 07:52;githubbot;600","jbonofre merged pull request #568:
URL: https://github.com/apache/activemq/pull/568


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 15:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 10 15:18:01 UTC 2020,,,,,,,,,,,"0|z0jy40:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Nov/20 15:14;jira-bot;Commit 054febe0c9f31a46245a4bb71c283533c9ed1199 in activemq's branch refs/heads/activemq-5.16.x from Benjamin Graf
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=054febe ]

AMQ-8055 - rename posion to correct poison

(cherry picked from commit a2e718f25957099ae734b44b9840b4f2a0199320)
;;;","10/Nov/20 15:17;jira-bot;Commit a2e718f25957099ae734b44b9840b4f2a0199320 in activemq's branch refs/heads/master from Benjamin Graf
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a2e718f ]

AMQ-8055 - rename posion to correct poison
;;;","10/Nov/20 15:17;jira-bot;Commit 6cb09e7c0bbc1214324c22774ea66de1603ddf54 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6cb09e7 ]

Merge pull request #568 from graben/AMQ-8055

AMQ-8055 - rename posion to correct poison;;;","10/Nov/20 15:17;jira-bot;Commit 6cb09e7c0bbc1214324c22774ea66de1603ddf54 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6cb09e7 ]

Merge pull request #568 from graben/AMQ-8055

AMQ-8055 - rename posion to correct poison;;;","10/Nov/20 15:17;jira-bot;Commit a2e718f25957099ae734b44b9840b4f2a0199320 in activemq's branch refs/heads/master from Benjamin Graf
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a2e718f ]

AMQ-8055 - rename posion to correct poison
;;;","10/Nov/20 15:17;jira-bot;Commit 6cb09e7c0bbc1214324c22774ea66de1603ddf54 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6cb09e7 ]

Merge pull request #568 from graben/AMQ-8055

AMQ-8055 - rename posion to correct poison;;;","10/Nov/20 15:18;jira-bot;Commit 6cb09e7c0bbc1214324c22774ea66de1603ddf54 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6cb09e7 ]

Merge pull request #568 from graben/AMQ-8055

AMQ-8055 - rename posion to correct poison;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ broker doesn't start with the error : Keystores with multiple certificates are not supported on the base class org.eclipse.jetty.util.ssl.SslContextFactory,AMQ-8048,13334138,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,screpel,screpel,07/Oct/20 09:10,15/Mar/21 06:54,13/Jul/23 08:27,15/Mar/21 06:54,5.16.0,,,,5.15.15,5.16.2,5.17.0,Broker,,,,,0,,,,,"Hello,

After an upgrade of ActiveMq from 5.14.5 version to 5.16.0 we occurred an error during the broker starting : Keystores with multiple certificates are not supported on the base class org.eclipse.jetty.util.ssl.SslContextFactory (I put a screenshot of the full stack)

Our keystore contains one certificate with multiple Subject Alternative Names.

I found a similar issue for Apache Nifi : https://issues.apache.org/jira/browse/NIFI-7730 that was fixed following a Jetty upgrade.

Also, I found this discussion on Jetty project : [https://github.com/eclipse/jetty.project/issues/4385]

Best regards,

 

Sébastien",,Chenchrl,jbonofre,jira-bot,screpel,,,,,,,,"charlie-cyf opened a new pull request #618:
URL: https://github.com/apache/activemq/pull/618


   Changes:
   - broker doesn't start because Jetty 9.4.31.v20200723 deprecated SslContextFactory with SslContextFactory$Server, similar issue: https://issues.apache.org/jira/browse/CALCITE-4095
   - replace replace SslContextFactory with SslContextFactory$Server in jetty-demo.xml
   - fix test BrokerXmlConfigStartTest for activemq-security.xml


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/21 20:01;githubbot;600","charlie-cyf closed pull request #618:
URL: https://github.com/apache/activemq/pull/618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/21 20:01;githubbot;600","charlie-cyf opened a new pull request #619:
URL: https://github.com/apache/activemq/pull/619


   Changes:
   - broker doesn't start because Jetty 9.4.31.v20200723 deprecated SslContextFactory with SslContextFactory$Server, similar issue: https://issues.apache.org/jira/browse/CALCITE-4095
   - replace replace SslContextFactory with SslContextFactory$Server in jetty-demo.xml
   - fix test BrokerXmlConfigStartTest for activemq-security.xml


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/21 20:03;githubbot;600","charlie-cyf commented on pull request #618:
URL: https://github.com/apache/activemq/pull/618#issuecomment-792344484


   submit to wrong branch.. closing


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/21 20:14;githubbot;600","lucastetreault commented on pull request #619:
URL: https://github.com/apache/activemq/pull/619#issuecomment-792579824


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 08:38;githubbot;600","lucastetreault removed a comment on pull request #619:
URL: https://github.com/apache/activemq/pull/619#issuecomment-792579824


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:02;githubbot;600","jbonofre merged pull request #619:
URL: https://github.com/apache/activemq/pull/619


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Mar/21 06:52;githubbot;600",,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,"07/Oct/20 09:05;screpel;image.png;https://issues.apache.org/jira/secure/attachment/13013183/image.png",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 15 06:53:29 UTC 2021,,,,,,,,,,,"0|z0jhag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/Nov/20 19:55;jbonofre;Can you please share your conf/jetty.xml (and conf/activemq.xml as well) ? I guess you are using a SecureConnector in conf/jetty.xml right ?;;;","22/Nov/20 19:57;jbonofre;By the way, the HTTP transport connector already uses SslContextFactory.Server. So, I assume that you use a SecureConnector in etc/jetty.xml (just uncommenting the one provided as example) but your handler is still SslContextFactory (instead of SslContextFactory.Server).;;;","07/Jan/21 13:17;jbonofre;Any update about my first question ?;;;","07/Mar/21 20:10;Chenchrl;Hello, I created a PR for this issue: [https://github.com/apache/activemq/pull/619]

Would be great if you can take a look;;;","15/Mar/21 06:52;jira-bot;Commit 86eda3a6b1541ba71878e31848f6a02e1bba8966 in activemq's branch refs/heads/master from Charlie Chen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=86eda3a ]

AMQ-8048 replace SslContextFactory with SslContextFactory$Server & fix assembly BrokerXmlConfigStartTest activemq-security.xml test
;;;","15/Mar/21 06:52;jira-bot;Commit 3ecce8beea189dffacf66ef97a4fe41df5dcfba2 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3ecce8b ]

Merge pull request #619 from charlie-cyf/master

AMQ-8048 ActiveMQ broker doesn't start with the error : Keystores with multiple certificates are not supported on the base class org.eclipse.jetty.util.ssl.SslContextFactory;;;","15/Mar/21 06:53;jira-bot;Commit 20d822fbb8f67c3297e06d7877fd1b8972f268b8 in activemq's branch refs/heads/activemq-5.16.x from Charlie Chen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=20d822f ]

AMQ-8048 replace SslContextFactory with SslContextFactory$Server & fix assembly BrokerXmlConfigStartTest activemq-security.xml test

(cherry picked from commit 86eda3a6b1541ba71878e31848f6a02e1bba8966)
;;;","15/Mar/21 06:53;jira-bot;Commit b9e1c3b894a834e7d1f113971161c088099eaf7b in activemq's branch refs/heads/activemq-5.15.x from Charlie Chen
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b9e1c3b ]

AMQ-8048 replace SslContextFactory with SslContextFactory$Server & fix assembly BrokerXmlConfigStartTest activemq-security.xml test

(cherry picked from commit 86eda3a6b1541ba71878e31848f6a02e1bba8966)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"documentation mentions ""advisdoryForFastProducers""",AMQ-8044,13328354,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,mattrpav,erwindon3,erwindon3,19/Sep/20 13:20,26/Feb/21 00:12,13/Jul/23 08:27,26/Feb/21 00:12,5.16.0,,,,5.17.0,,,Documentation,,,,,0,,,,,"On page [https://activemq.apache.org/advisory-message.html] , 2 times one of the advisory types are misspelled.

It days ""advisdoryForFastProducers"" instead of ""advisoryForFastProducers"".

Similar defects were reported in AMQ-2170 and AMQ-2223.",,erwindon3,mattrpav,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 26 00:00:33 UTC 2021,,,,,,,,,,,"0|z0iqk0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Feb/21 00:00;mattrpav;Note: there was a type-o in the attribute at one point during development. The setter/getter is still present, but maps to the correct field 'advisoryForFastProducers'. The setter/getter for the misspelled name is still present for backwards compatability.


;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot install activemq on karaf 4.2.9,AMQ-8041,13327382,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,jbonofre,sekaijin,sekaijin,14/Sep/20 08:17,22/Nov/20 13:17,13/Jul/23 08:27,22/Nov/20 13:17,5.15.13,,,,,,,OSGi/Karaf,,,,,0,,,,,"Multiple problems on activemq-broker deployment.
>repo-add activemq 5.15.13
>feature:install activemq-broker

1) 2020-09-14T09:52:28,802 | WARN  | features-3-thread-1 | Activator                        | 205 - org.ops4j.pax.web.pax-web-extender-war - 7.2.16 | Error while creating extension for bundle org.apache.activemq.activemq-web-console [143]
java.lang.NoClassDefFoundError: com/sun/istack/Pool

after install 
>install -s mvn:com.sun.istack/istack-commons-runtime/3.0.11

2) 2020-09-14T09:53:11,244 | ERROR | CM Configuration Updater (ManagedServiceFactory Update: factoryPid=[org.apache.activemq.server]) | configadmin                      | 9 - org.apache.felix.configadmin - 1.9.16 | [org.osgi.service.cm.ManagedServiceFactory, id=401, bundle=14/wrap:mvn:org.apache.activemq/activemq-osgi/5.15.13$overwrite=merge&Import-Package=org.springframework.*;resolution:=optional;version=""[5,6)"",*;resolution:=optional]: Updating configuration org.apache.activemq.server.4fb03afb-a88e-4ae5-9290-fb63275f3228 caused a problem: Cannot start the broker
org.osgi.service.cm.ConfigurationException: null : Cannot start the broker
	at org.apache.activemq.osgi.ActiveMQServiceFactory.updated(ActiveMQServiceFactory.java:147) ~[!/:5.15.13]
	at org.apache.felix.cm.impl.helper.ManagedServiceFactoryTracker.updated(ManagedServiceFactoryTracker.java:159) ~[!/:?]
	at org.apache.felix.cm.impl.helper.ManagedServiceFactoryTracker.provideConfiguration(ManagedServiceFactoryTracker.java:93) [!/:?]
	at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.provide(ConfigurationManager.java:1253) [!/:?]
	at org.apache.felix.cm.impl.ConfigurationManager$ManagedServiceFactoryUpdate.run(ConfigurationManager.java:1197) [!/:?]
	at org.apache.felix.cm.impl.UpdateThread.run0(UpdateThread.java:138) [!/:?]
	at org.apache.felix.cm.impl.UpdateThread.run(UpdateThread.java:105) [!/:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]
Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 24 in XML document from URL [file:/H:/Karaf-distribution/apache-karaf-4.2.9/etc/activemq.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 24; columnNumber: 101; cvc-elt.1 : Déclaration de l'élément 'beans' introuvable.



","Windows 10 
Java 1.8.0_202

I've added Camel 3.4.3 and deployed camel-activemq.
I saw that camel-activemq installs
2020-09-14T09:50:44,547 | INFO | features-3-thread-1 | FeaturesServiceImpl | 11 - org.apache.karaf.features.core - 4.2.9 | *wrap:mvn:org.apache.activemq/activemq-osgi/5.15.13*$overwrite=merge&Import-Package=org.springframework.*;resolution:=optional;version=""[5,6)"",*;resolution:=optional 

That's why I chose version 5.15.13",jbonofre,sekaijin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Nov 22 13:17:03 UTC 2020,,,,,,,,,,,"0|z0ikkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Sep/20 08:32;sekaijin;I tried version 5.16.0 with the same result;;;","10/Nov/20 05:27;jbonofre;Did you add spring-legacy repo before installing activemq ?;;;","11/Nov/20 10:02;sekaijin;Hello no, I only installed camel and activemq.
I did not persevere because on the project the decision to use a stanalone activemq was taken.
I will try to get back in the conditions tomorrow to test.;;;","22/Nov/20 13:17;jbonofre;Probably spring-legacy was missing. I have updated the activemq features to add this repo automatically by default.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB: PageFile  - Unexpected io error on pagefile write NPE,AMQ-8040,13327112,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Sep/20 15:57,11/Sep/20 16:10,13/Jul/23 08:27,11/Sep/20 16:10,5.16.0,,,,5.17.0,,,KahaDB,,,,,0,,,,,"With: 
{code}<kahaDB ... enableIndexWriteAsync=""true"" /> {code}

A large transaction write with pages disk bound can be modified with an update leading to a NPE of the form:
{code}
[aDB Page Writer] - INFO  PageFile  - Unexpected io error on pagefile write of 4000 pages.
[aDB Page Writer] - INFO  PageFile  - Unexpected io error on pagefile write of 4000 pages.
java.io.IOException: Cannot create recovery file. Reason: java.lang.NullPointerException at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:28) at org.apache.activemq.store.kahadb.disk.page.PageFile.writeBatch(PageFile.java:1163) at org.apache.activemq.store.kahadb.disk.page.PageFile.pollWrites(PageFile.java:1117) at org.apache.activemq.store.kahadb.disk.page.PageFile.access$300(PageFile.java:68) at org.apache.activemq.store.kahadb.disk.page.PageFile$3.run(PageFile.java:1323)Caused by: java.lang.NullPointerException at java.util.zip.Adler32.update(Adler32.java:73) at org.apache.activemq.store.kahadb.disk.page.PageFile.writeBatch(PageFile.java:1161)
...
{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 11 16:10:12 UTC 2020,,,,,,,,,,,"0|z0iiww:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Sep/20 16:04;jira-bot;Commit 72146d2daed7d86396a5c9fbb21dbbe555ace914 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=72146d2 ]

AMQ-8040 - ensure state relating to diskbound tmp file pages is preserved on next update, fix and test
;;;","11/Sep/20 16:10;gtully;enableIndexWriteAsync=""false""  works around this issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support authentication over anonymous connection context in LDAPLoginModule,AMQ-8035,13326336,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,gtully,gtully,07/Sep/20 15:57,16/Sep/20 15:55,13/Jul/23 08:27,16/Sep/20 15:55,5.16.0,,,,5.15.14,5.16.1,5.17.0,Security/JAAS,,,,,0,,,,,"if the ldap provider supports anonymous binds, and the ldap login module is configured to make use of those, it should still be possible to verify bind credentials from client connections and revert to anonymous for further mapping work.",,coheigea,gtully,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 16 15:55:01 UTC 2020,,,,,,,,,,,"0|z0ie54:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Sep/20 16:02;jira-bot;Commit 73e291693d59a96c0054fc7e7e09c2c67b192911 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=73e2916 ]

AMQ-8035 - ensure propagated credentials are visible for bind and removed for subsequent mapping operations
;;;","11/Sep/20 14:51;coheigea;[~gtully] - Can you backport to 5.16.x + 5.15.x as well please?;;;","14/Sep/20 08:30;gtully;[~coheigea] unfortunately I don't have the bandwidth to merge/monitor the .x branches at this time.;;;","14/Sep/20 08:34;coheigea;[~jbonofre] Please cherry-pick [~gtully] 's fix back to 5.16.x + 5.15.x.;;;","14/Sep/20 08:38;jbonofre;No problem, I will tackle that. Thanks.;;;","16/Sep/20 15:54;jira-bot;Commit c9f68f4c64b2687eee283b95538753665d2b229b in activemq's branch refs/heads/activemq-5.16.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c9f68f4 ]

AMQ-8035 - ensure propagated credentials are visible for bind and removed for subsequent mapping operations

(cherry picked from commit 73e291693d59a96c0054fc7e7e09c2c67b192911)
;;;","16/Sep/20 15:55;jira-bot;Commit 46a774cdf33938ec7af604e9d6ed2e9b5c86c26f in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=46a774c ]

AMQ-8035 - ensure propagated credentials are visible for bind and removed for subsequent mapping operations

(cherry picked from commit 73e291693d59a96c0054fc7e7e09c2c67b192911)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RuntimeConfigurationPlugin doesn't work with JDK11+,AMQ-8032,13325918,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,03/Sep/20 12:55,10/Jan/21 04:28,13/Jul/23 08:27,09/Jan/21 06:21,5.16.0,,,,5.16.1,5.17.0,,Broker,Plugin,,,,2,,,,,"If the broker configuration contains runtimeConfigurationPlugin like this:
{code:java}
<broker ...>
 ...
         <plugins>
          <runtimeConfigurationPlugin checkPeriod=""1000""/>
        </plugins>
  ...
</broker>{code}
the broker doesn't start due to:
{code:java}
Caused by: java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException
        at org.apache.activemq.plugin.RuntimeConfigurationPlugin.installPlugin(RuntimeConfigurationPlugin.java:38)
        at org.apache.activemq.broker.BrokerService.addInterceptors(BrokerService.java:2505)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:2365)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:1053)
        at org.apache.activemq.broker.BrokerService.getAdminConnectionContext(BrokerService.java:2636)
        at org.apache.activemq.broker.BrokerService.startVirtualConsumerDestinations(BrokerService.java:2797)
        at org.apache.activemq.broker.BrokerService.startDestinations(BrokerService.java:2627)
        at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:747)
        at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:741)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:644)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1748)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1685)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1615)
        ... 27 more
Caused by: java.lang.ClassNotFoundException: javax.xml.bind.JAXBException
        at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:471)
        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:588)
        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
        ... 45 more {code}
The problem is in the JAXB version in use. A simple workaround is to add JAXB (API and Core) in activemq/lib (I'm testing the fix).

So, it could be just a question of documentation to add JAXB jar in ActiveMQ in order to use runtimeConfigurationPlugin.",,jbonofre,jira-bot,kgoerlitz,lionel.cons,wsliwins,,,,,,,"jbonofre opened a new pull request #601:
URL: https://github.com/apache/activemq/pull/601


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 08:23;githubbot;600","jbonofre merged pull request #601:
URL: https://github.com/apache/activemq/pull/601


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/21 06:19;githubbot;600","jbonofre merged pull request #601:
URL: https://github.com/apache/activemq/pull/601


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 04:28;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jan 09 06:20:30 UTC 2021,,,,,,,,,,,"0|z0ibk8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Sep/20 14:16;kgoerlitz;Ran into the same issue.  Does the workaround work?

 ;;;","06/Jan/21 08:13;jbonofre;Yes, workaround is to add javax.xml.bind:jaxb-api:2.2.11 and org.glassfish.jaxb:jaxb-runtime:2.211 in lib folder work. I'm adding it anyway by default.;;;","09/Jan/21 06:19;jira-bot;Commit 9b6a48ad31b2fb4b3a5a129d4ed6119024c6850a in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9b6a48a ]

[AMQ-8032] Add JAXB in lib by default to avoid issue with JDK11
;;;","09/Jan/21 06:19;jira-bot;Commit 6e0e654c675eede828405702e1e590c044d4811c in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e0e654 ]

Merge pull request #601 from jbonofre/AMQ-8032

[AMQ-8032] Add JAXB in lib by default to avoid issue with JDK11;;;","09/Jan/21 06:19;jira-bot;Commit 6e0e654c675eede828405702e1e590c044d4811c in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e0e654 ]

Merge pull request #601 from jbonofre/AMQ-8032

[AMQ-8032] Add JAXB in lib by default to avoid issue with JDK11;;;","09/Jan/21 06:20;jira-bot;Commit a64f399d5416ca221ecd8d81f8e15461b471082c in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a64f399 ]

[AMQ-8032] Add JAXB in lib by default to avoid issue with JDK11

(cherry picked from commit 9b6a48ad31b2fb4b3a5a129d4ed6119024c6850a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ classic - OpenWire transport connector (nio+ssl) does not actively close silent connections,AMQ-8031,13325766,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,lichtin,lichtin,02/Sep/20 15:52,02/Dec/20 10:35,13/Jul/23 08:27,02/Dec/20 10:35,,,,,,,,,,,,,0,,,,,"ActiveMQ classic - OpenWire transport connector (nio+ssl) does not actively close silent connections.

This can be reproduced with an SSL enabled Activemq broker, e.g.

{{<transportConnector name=""openwire-ssl"" uri=""nio+ssl://AMQ-IP:AMQ-PORT?maximumConnections=100"" />}}

Simply opening dummy connections towards this server by using

{{for i in $(seq 200); do echo $i; ncat --recv-only AMQ-IP AMQ-PORT & done}}

will cause the server to eventually run out of connections.

I'd expect ""silent"" connections to be dropped pretty quickly.",,gtully,jbonofre,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Nov 22 12:00:27 UTC 2020,,,,,,,,,,,"0|z0iamg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Sep/20 16:26;gtully;does soTimeout help?

<transportConnector name=""openwire-ssl"" uri=""nio+ssl://AMQ-IP:AMQ-PORT?maximumConnections=100&transport.soTimeout=1000"" />;;;","02/Sep/20 17:02;lichtin;Will try, but I doubt it. the socket timeout seems used only to set the timeout for how long to stay in the accept() call, I believe.

It is in addition used on the client side during an SSL handshake, but that's another situation.;;;","02/Sep/20 20:20;lichtin;Actually, I see this setting works, for exactly this case, and only for the SSL handshake! NIOSSLTransport is used both on client and server-side.
{code:java}
            if (this.status == SSLEngineResult.Status.BUFFER_UNDERFLOW) {
                long now = System.currentTimeMillis();
                if (selector == null) {
                    selector = Selector.open();
                    key = channel.register(selector, SelectionKey.OP_READ);
                } else {
                    key.interestOps(SelectionKey.OP_READ);
                }
                int keyCount = selector.select(this.getSoTimeout());
                if (keyCount == 0 && this.getSoTimeout() > 0 && ((System.currentTimeMillis() - now) >= this.getSoTimeout())) {
                    throw new SocketTimeoutException(""Timeout during handshake"");
                }
                readable = key.isReadable();
            }

{code}
It's triggering the following output in the broker logs:
{code:java}
2020-09-02T22:08:21,593 | WARN  | Service[broker] Task-157 | TransportConnector               | vemq.broker.TransportConnector$1  247 | 72 - org.apache.activemq.activemq-osgi - 5.15.13 | Could not accept connection from null: java.net.SocketTimeoutException: Timeout during handshake (Timeout during handshake)
{code}
So I'll add this to the configuration, many thanks for the hint.

The documentation for ""soTimeout"" seems to be slightly misleading. 
The way I'm reading the code, it's only a ""read"" timeout for exactly above SSL handshake situation.;;;","22/Nov/20 10:48;jbonofre;IMHO {{soTimeout}} just works fine. [~lichtin] can you confirm ? I will close this Jira and update the documentation.;;;","22/Nov/20 12:00;lichtin;Yes can confirm. It's quite an important setting (and only used for nio+ssl, afaics..) so a doc update would be appreciated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Network bridge shutdown, race on MQTT virtual topic clean session and resubscribe",AMQ-8023,13324451,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Aug/20 11:30,28/Aug/20 08:17,13/Jul/23 08:27,28/Aug/20 08:16,5.16.0,,,,5.17.0,,,MQTT,Network of Brokers,,,,0,,,,,"With MQTT clients using virtual topic subscriptions and clean session. In a network of brokers when the remove destination operations are bridged, it is possible for the re-subscribe to beat the removeDestination advisory and cause the remove to fail with an error, causing the bridge to fail. The advisories are in order, but are executed out of order on the remote network bridge, in error.
{code:java}
WARN  | pool-16-thread-1 | Service   | ivemq.broker.TransportConnection  304 | 162 - org.apache.activemq.activemq-osgi | Async error occurred: javax.jms.JMSException: Destination still has an active subscription: queue://Consumer.340601550021719:AT_LEAST_ONCE.VirtualTopic.IMPORTANT.>
INFO  | Task-310 | DemandForwardingBridgeSupport    | rk.DemandForwardingBridgeSupport  908 | 162 - org.apache.activemq.activemq-osgi | Network connection between vm://AMQ1 and ssl:///x.x.x:x shutdown due to a local error: javax.jms.JMSException: Destination still has an active subscription: queue://Consumer.340601550021719:AT_LEAST_ONCE.VirtualTopic.IMPORTANT.>
{code}
 Two necessary config options:
# networkConnector destinationFilter=""ActiveMQ.Advisory.Consumer.Queue.>,ActiveMQ.Advisory.Queue""
# &transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Aug 28 08:17:00 UTC 2020,,,,,,,,,,,"0|z0i2iw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Aug/20 15:57;jira-bot;Commit 0e2b24be3652eb225fb0a758d373f086000fd72b in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0e2b24b ]

AMQ-8023 - serialize sub add with destination removal advisory processing to avoid resub blocking a necessary purge via removal, fix and test via mqtt clean session scenario
;;;","25/Aug/20 16:04;gtully;Use of the serial executor keeps the advisory processing in order, they were already serialised but unordered via the local transport.;;;","26/Aug/20 13:40;jira-bot;Commit c0e6d47121c1fdf81ab86fb4272464219f947141 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c0e6d47 ]

AMQ-8023 - retain sync add call, duplicate sub suppression depends on it, regression in AMQ3274Test
;;;","26/Aug/20 20:09;gtully;There is another problem in AMQ2439Test that suggests the fix for the AMQ3274Test regression is not correct :( - on it.;;;","27/Aug/20 18:09;jira-bot;Commit 5c8086961fb9e052e30a5846e6b738267de7c4a0 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5c80869 ]

AMQ-8023 - rework fix to deal with addSub interleaved with removeDestination advisory processing, serialise add/remove dest such that add is not lost and new sub resubscribes ok, extra verifications in the test
;;;","28/Aug/20 08:17;gtully;dealing with possible addSub before removal works best; leaving add sub sync. However both add/remove dest processing needed to be serialised to ensure add was not lost!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XAConnectionPoolTest fails due to missing conversion support for Boolean types,AMQ-8016,13320430,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,31/Jul/20 15:40,31/Jul/20 15:50,13/Jul/23 08:27,31/Jul/20 15:50,5.16.0,,,,5.16.1,5.17.0,,Pool,,,,,0,,,,,"Changes made in AMQ-7516 expose issue in the JMS Pool IntrospectionSupport when converting String to Boolean which causes the test ""testBindableEnvOverrides"" to fail when it should not. ",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 31 15:50:18 UTC 2020,,,,,,,,,,,"0|z0hdtk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Jul/20 15:43;jira-bot;Commit 742a7f42f0168302c0d1d1ea779fdefa09ade4a0 in activemq's branch refs/heads/master from Timothy Bish
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=742a7f4 ]

AMQ-8016 Fix introspection support not checking Boolean class types

Support class should check both primitive and Object based types for
conversion from String to boolean or Boolean targets;;;","31/Jul/20 15:50;jira-bot;Commit fdf9809d49bfcda32c346eeb34601e60c12b67b3 in activemq's branch refs/heads/activemq-5.16.x from Timothy Bish
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fdf9809 ]

AMQ-8016 Fix introspection support not checking Boolean class types

Support class should check both primitive and Object based types for
conversion from String to boolean or Boolean targets

(cherry picked from commit 742a7f42f0168302c0d1d1ea779fdefa09ade4a0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConcurrentModificationException in SubQueueSelectorCacheBroker,AMQ-8012,13319201,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,mattrpav,mattrpav,mattrpav,24/Jul/20 17:20,29/Aug/20 19:37,13/Jul/23 08:27,24/Jul/20 18:19,5.15.13,5.16.0,,,5.16.1,5.17.0,,,,,,,0,,,,,"Standard info log output:
{noformat}
2020-07-16 01:34:57,349 | WARN  | Async error occurred: java.util.ConcurrentModificationException | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///x.x.x.x:yyyyyy@61616
{noformat}

Debug log output:
{noformat}
java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextNode(HashMap.java:1442)[:1.8.0_161]
        at java.util.HashMap$KeyIterator.next(HashMap.java:1466)[:1.8.0_161]
        at org.apache.activemq.broker.region.virtual.SelectorAwareVirtualTopicInterceptor.tryMatchingCachedSubs(SelectorAwareVirtualTopicInterceptor.java:82)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.region.virtual.SelectorAwareVirtualTopicInterceptor.shouldDispatch(SelectorAwareVirtualTopicInterceptor.java:68)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor.send(VirtualTopicInterceptor.java:114)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor.send(VirtualTopicInterceptor.java:67)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.region.DestinationFilter.send(DestinationFilter.java:132)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:505)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:459)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:226)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:572)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)[activemq-client-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)[activemq-broker-5.15.3.jar:5.15.3]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.15.3.jar:5.15.3]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)[activemq-client-5.15.3.jar:5.15.3]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)[activemq-client-5.15.3.jar:5.15.3]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.15.3.jar:5.15.3]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[activemq-client-5.15.3.jar:5.15.3]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[activemq-client-5.15.3.jar:5.15.3]
        at java.lang.Thread.run(Thread.java:748)[:1.8.0_161]
{noformat}",,cshannon,jira-bot,mattrpav,,,,,,,,,"mattrpav opened a new pull request #553:
URL: https://github.com/apache/activemq/pull/553


    - Remove non-thread-safe method getSelectors()
    - Update all references to use the thread-safe getSelectorsForDestination() method


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 17:25;githubbot;600","cshannon commented on pull request #553:
URL: https://github.com/apache/activemq/pull/553#issuecomment-663662979


   The issue here seems to be that the selector Set itself is synchronized but the lock is not used when iterating. 
   
   https://github.com/apache/activemq/blob/activemq-5.16.0/activemq-broker/src/main/java/org/apache/activemq/plugin/SubQueueSelectorCacheBroker.java#L150
   
   The other method called getSelectorsForDestination() appears to copy into a new HashSet but that method also isn't safe either as it doesn't lock while creating the new HashSet (it will iterate and copy into the new set before returning)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 18:02;githubbot;600","cshannon commented on pull request #553:
URL: https://github.com/apache/activemq/pull/553#issuecomment-663663805


   Also, all the contains key stuff appears to not be threadsafe either. Multiple methods are checking if key exists and then getting but not checking for null.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 18:04;githubbot;600","cshannon commented on pull request #553:
URL: https://github.com/apache/activemq/pull/553#issuecomment-663666273


   I will merge this in and then fix the rest of it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 18:10;githubbot;600","asfgit closed pull request #553:
URL: https://github.com/apache/activemq/pull/553


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 18:15;githubbot;600","mattrpav commented on pull request #553:
URL: https://github.com/apache/activemq/pull/553#issuecomment-663675099


   @cshannon agreed, good catch! I was eyes on the caller and the dupe method that was returning a ref to the internal collection values.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 18:32;githubbot;600",,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 24 20:30:12 UTC 2020,,,,,,,,,,,"0|z0h694:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jul/20 18:15;jira-bot;Commit 083acb9691dba818aae3c0f72e7675c8a39d500a in activemq's branch refs/heads/master from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=083acb9 ]

[AMQ-8012] Fix for ConcurrentModificationException in SubQueueSelectorCacheBroker

 - Remove non-thread-safe method getSelectors()
 - Update all references to use the thread-safe getSelectorsForDestination() method
;;;","24/Jul/20 18:15;jira-bot;Commit 1dcc7d4b2c989c9efa03de42b169686b4c5eb8af in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1dcc7d4 ]

Merge branch 'AMQ-8012'

This closes #553
;;;","24/Jul/20 18:15;jira-bot;Commit 62f5576fe5dc8bc06eefc1e26b8e66a10781fe32 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=62f5576 ]

AMQ-8012 - Improve thread safety of SubQueueSelectorCacheBroker

When returning a copy of the set of selectors we need to synchronize
;;;","24/Jul/20 18:18;jira-bot;Commit dbf6e36e2c5400d920355ed362c231995b1efe61 in activemq's branch refs/heads/activemq-5.16.x from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dbf6e36 ]

[AMQ-8012] Fix for ConcurrentModificationException in SubQueueSelectorCacheBroker

 - Remove non-thread-safe method getSelectors()
 - Update all references to use the thread-safe getSelectorsForDestination() method

(cherry picked from commit 083acb9691dba818aae3c0f72e7675c8a39d500a)
;;;","24/Jul/20 18:18;jira-bot;Commit 795e917cbee3b9fb3101cd40205c0013c10cff28 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=795e917 ]

AMQ-8012 - Improve thread safety of SubQueueSelectorCacheBroker

When returning a copy of the set of selectors we need to synchronize

(cherry picked from commit 62f5576fe5dc8bc06eefc1e26b8e66a10781fe32)
;;;","24/Jul/20 18:19;cshannon;[~mattrpav] - Ok this should be good now. I merged in your fix (thanks btw) and then fixed the thread safety by locking on the synchronized map which is necessary on iteration (which occurs when copying to a new set) plus fixed a couple other methods.;;;","24/Jul/20 20:23;jira-bot;Commit 0a189f833e1041e589ffa9523bdbe2285a678eed in activemq's branch refs/heads/master from Christopher Shannon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0a189f8 ]

AMQ-8012 - Move synchronized block after null check
;;;","24/Jul/20 20:30;jira-bot;Commit 2fa7f09fb958e320e7c458908a5c6310ed0a6a1b in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2fa7f09 ]

AMQ-8012 - Move synchronized block after null check

(cherry picked from commit 0a189f833e1041e589ffa9523bdbe2285a678eed)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL for Web Console is not working,AMQ-8010,13318946,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,silhano,silhano,23/Jul/20 13:13,09/Jan/21 08:30,13/Jul/23 08:27,27/Jul/20 08:41,5.16.0,,,,,,,Web Console,,,,,0,,,,,"After enable SSL SecureConnector in jetty.xml browser return only following error (tested of Google Chrome + FireFox) :

ERR_SSL_VERSION_OR_CIPHER_MISMATCH

In past was working same config with version 5.15.11

example config:

<bean id=""SecureConnector"" class=""org.eclipse.jetty.server.ServerConnector"">
 <constructor-arg ref=""Server"" />
 <constructor-arg>
 <bean id=""handlers"" class=""org.eclipse.jetty.util.ssl.SslContextFactory"">
 <property name=""keyStorePath"" value=""${activemq.home}/ssl/keystore.jks"" />
 <property name=""keyStorePassword"" value=""password"" />
 </bean>
 </constructor-arg>
 <property name=""port"" value=""8162"" />
 </bean>

 ",,silhano,yongwyin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jan 09 08:30:39 UTC 2021,,,,,,,,,,,"0|z0h4og:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Jul/20 08:41;silhano;Sorry, my bad - problem was on my side - wrong *.jks entry (trustedCertEntry instead of PrivateKeyEntry).;;;","09/Jan/21 08:30;yongwyin;Hi, I am having the same issue. 
I copied the .ks file from version 5.15.4 to 5.16.0, but my SSL for web console is not working. It is giving me ERR_SSL_VERSION_OR_CIPHER_MISMATCH. I need help ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XaPooledConnectionFactory fails JCA validation in WildFly,AMQ-7516,13317154,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,16/Jul/20 12:07,24/Jul/20 18:15,13/Jul/23 08:27,16/Jul/20 12:29,5.15.13,5.16.0,,,5.16.1,5.17.0,,Broker,,,,,0,,,,,"The property tmFomJndi needs to be a boxed Boolean to be JCA compliant and fix deployment into WildFly

PR: [https://github.com/apache/activemq/pull/286]",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 24 18:15:41 UTC 2020,,,,,,,,,,,"0|z0gtn4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Jul/20 12:18;jira-bot;Commit 295b3acb9e2ebf0e4ae8a4cfc811f41ef85fc184 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=295b3ac ]

AMQ-7516 - Merge branch

This closes #286
;;;","16/Jul/20 12:18;jira-bot;Commit 6c0cb4143d929b506a26e57267399b606396fbba in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6c0cb41 ]

AMQ-7516 - Fix XAConenctionPoolTest after change to make tmFromJndi an
object
;;;","16/Jul/20 12:27;jira-bot;Commit 6c07033c586e3f956a03b67f5e68953b54395cc8 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6c07033 ]

AMQ-7516 - Fix XAConenctionPoolTest after change to make tmFromJndi an
object
;;;","24/Jul/20 18:15;jira-bot;Commit 6c07033c586e3f956a03b67f5e68953b54395cc8 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6c07033 ]

AMQ-7516 - Fix XAConenctionPoolTest after change to make tmFromJndi an
object
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RAR ServerSessionPool does not reuse sessions, leaks loggers",AMQ-7508,13314920,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Jul/20 15:42,14/Jul/20 11:27,13/Jul/23 08:27,03/Jul/20 15:47,5.15.0,5.16.0,,,5.16.1,5.17.0,,RAR,,,,,0,,,,,"There is an error is the check for a stale session, relates to the fix for AMQ-7000",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7000,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 03 15:47:06 UTC 2020,,,,,,,,,,,"0|z0gfwo:",9223372036854775807,Regression,,,,,,,,,,,,,,,,,,,"03/Jul/20 15:47;jira-bot;Commit a436b2177ed46fe8402e43c7f48ae102bb983e9a in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a436b21 ]

AMQ-7508 - fix session reuse and remove incremental loggers, new test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing license header in some files,AMQ-7505,13313251,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,jbonofre,jbonofre,24/Jun/20 13:12,24/Jun/20 17:22,13/Jul/23 08:27,24/Jun/20 17:22,,,,,5.15.14,5.16.0,,,,,,,0,,,,,"The following files don't contain the license header:

activemq-web/src/main/resources/org/apache/activemq/web/prototype.js
activemq-unit-tests/src/test/java/org/apache/activemq/usecases/QueueBrowsingDisableConcurrentStoreAndDispatchTest.java
activemq-unit-tests/src/test/java/org/apache/activemq/usecases/UsageBlockedDispatchConcurrentStoreAndDispatchFalseTest.java",,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 24 17:21:58 UTC 2020,,,,,,,,,,,"0|z0g5r4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jun/20 17:19;jira-bot;Commit 7c5a4bd9401f54635d4723a11ffe944e1783f10f in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7c5a4bd ]

AMQ-7505 - Fix prototype.js exclusion for apache-rat:check
;;;","24/Jun/20 17:20;jira-bot;Commit 03454466fa38a3872a1d54d8eeef32b9ae17f910 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0345446 ]

AMQ-7505 - Fix prototype.js exclusion for apache-rat:check

(cherry picked from commit 7c5a4bd9401f54635d4723a11ffe944e1783f10f)
;;;","24/Jun/20 17:21;jira-bot;Commit 5901d9a6f0b66f68de75944638f23f4b9676a319 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5901d9a ]

AMQ-7505 - Adding missing license headers to two source files
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR xaResource needs to support reconnect,AMQ-7497,13310973,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Jun/20 18:35,15/Jun/20 09:27,13/Jul/23 08:27,11/Jun/20 18:41,5.10.0,,,,5.16.0,,,RAR,XA,,,,0,,,,,"Inbound MDBs supported by endpoint workers in the RAR support reconnect and failover with maxReconnects=0. In this way the failover transport can support the use of multiple brokers.
The failover url with no reconnects will leave the resource adapter single xaResource connection in an invalid state after disconnect and will cause periodic recovery to fail.
The single RA wide xaResource should reconnect any failed connection on subsequent usage.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4486,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jun 15 09:27:30 UTC 2020,,,,,,,,,,,"0|z0frr4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Jun/20 18:39;jira-bot;Commit ed4110175534f63e0fac834a63a05440d509752c in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ed41101 ]

AMQ-7497 - support reconnect of the single RA xaResource connection
;;;","11/Jun/20 18:58;jira-bot;Commit a7b06c043c34978125b57016a8bd82d9bb2fa6a5 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a7b06c0 ]

AMQ-7497 - tidy up test cleanup for random order runs
;;;","15/Jun/20 09:27;jira-bot;Commit 8cc5386fbbe7a836ac9aef3cffcb56c0b9f65adc in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8cc5386 ]

AMQ-7497 - further test to verify behaviour after ra.stop
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
official website download href is error,AMQ-7494,13309827,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,h45268293,h45268293,06/Jun/20 03:50,08/Jun/20 07:43,13/Jul/23 08:27,08/Jun/20 07:43,5.15.12,,,,,,,,,,,,0,,,,,"!image-2020-06-06-11-41-17-961.png!!image-2020-06-06-11-42-16-441.png!

 [https://mirror.bit.edu.cn/apache/activemq/]  only have 5.15.13 version , but the official website download href point to the 5.15.12,is a 404 page!

Although I can change the url in my browser to point the right version,but maybe other one will think the server has some fault",,h45268293,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"06/Jun/20 03:41;h45268293;image-2020-06-06-11-41-17-961.png;https://issues.apache.org/jira/secure/attachment/13004973/image-2020-06-06-11-41-17-961.png","06/Jun/20 03:42;h45268293;image-2020-06-06-11-42-16-441.png;https://issues.apache.org/jira/secure/attachment/13004972/image-2020-06-06-11-42-16-441.png",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2020-06-06 03:50:44.0,,,,,,,,,,,"0|z0fkow:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Apache Camel 2.25.2,AMQ-7492,13308661,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,arajwade,arajwade,01/Jun/20 08:19,02/Dec/20 12:55,13/Jul/23 08:27,02/Dec/20 12:55,5.15.13,,,,5.15.14,5.16.1,5.17.0,AMQP,,,,,0,security,,,,"CVE-2020-11971 needs AMQ to upgrade to Apache Camel 3.2.0
Refer 
https://www.openwall.com/lists/oss-security/2020/05/14/7 and
https://github.com/apache/camel/pull/3692

Can you please upgrade Apache ActiveMQ to use non vlnerable Apache Camel 3.2.0?


Following is the information from Sonatype Nexus Audior reported issue on AMQ 5.15.13

Description :
Severity :	CVE CVSS 3: 7.5Sonatype CVSS 3: 7.5

Weakness :	CVE CWE: 20

Source :	National Vulnerability Database

Categories :	Data

Description from CVE :	Apache Camels JMX is vulnerable to Rebind Flaw. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.x, 3.0.0 up to 3.1.0 is affected. Users should upgrade to 3.2.0.

Explanation :	This issue has undergone the Sonatype Fast-Track process. For more information, please see the Sonatype Knowledge Base Guide.

Advisories :	Project: https://github.com/apache/camel/pull/3692

CVSS Details :	CVE CVSS 3: 7.5CVSS Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N

CVE : CVE-2020-11971

URL : http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11971

Remediation : This component does not have any non-vulnerable Version. Please contact the vendor to get this vulnerability fixed.

",,arajwade,coheigea,jbonofre,jira-bot,,,,,,,,"jbonofre opened a new pull request #591:
URL: https://github.com/apache/activemq/pull/591


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/20 10:58;githubbot;600","jbonofre merged pull request #591:
URL: https://github.com/apache/activemq/pull/591


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/20 12:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Dec 02 12:55:19 UTC 2020,,,,,,,,,,,"0|z0fdi8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/Jun/20 14:04;jbonofre;That's not as easy. Let me do a first round to evaluate the effort.;;;","22/Nov/20 10:17;jbonofre;Camel 3.x will be update in ActiveMQ 5.17.x.

To address the CVE, I will upgrade to Camel 2.25.1 (easier).;;;","02/Dec/20 12:54;jira-bot;Commit e1b581acb681ba4dcbd2edd31e94aca0085d91c9 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e1b581a ]

[AMQ-7492] Upgrade to Camel 2.25.2
;;;","02/Dec/20 12:54;jira-bot;Commit 15c66a343393723b7d2539f30cbe7b3ee5701634 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=15c66a3 ]

Merge pull request #591 from jbonofre/AMQ-7492

[AMQ-7492] Upgrade to Camel 2.25.2;;;","02/Dec/20 12:54;jira-bot;Commit 15c66a343393723b7d2539f30cbe7b3ee5701634 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=15c66a3 ]

Merge pull request #591 from jbonofre/AMQ-7492

[AMQ-7492] Upgrade to Camel 2.25.2;;;","02/Dec/20 12:54;jira-bot;Commit 38e2bdeedb3bfd6a2cd89d21836aa994914d7c60 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=38e2bde ]

[AMQ-7492] Upgrade to Camel 2.25.2

(cherry picked from commit e1b581acb681ba4dcbd2edd31e94aca0085d91c9)
;;;","02/Dec/20 12:55;jira-bot;Commit 0f6b500a17095f14fe6bd92016ce2ba3ca03b925 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0f6b500 ]

[AMQ-7492] Upgrade to Camel 2.25.2

(cherry picked from commit e1b581acb681ba4dcbd2edd31e94aca0085d91c9)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Corruption to mKahaDB transaction journal can lead to partial transaction completion in error,AMQ-7488,13306171,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/May/20 11:39,20/May/20 11:49,13/Jul/23 08:27,20/May/20 11:48,5.15.0,,,,5.16.0,,,KahaDB,mKahaDB,,,,0,mkahadb,mKahaDB,recovery,XA,"mKahaDB has a transaction journal to track the outcome of local JMS transactions that span kahaDB instances. Ie: send to A and B where each has its own persistence adapter.
To ensure N instances are in sync,  a local 2PC is required
On recovery, if there is an outcome recorded in the txStore journal a commit must be replayed. If the outcome has not been recorded, rollback is assumed.
If the txJournal is corrupt and detected as corrupt the broker fails to start. 
However it is not possible to manually recover via JMX without a live broker.
Each kahaDB instance would need to be restarted in isolation to force heuristic completion.

Deleting the corrupt journal to allow restart is potentially problematic *if* there are pending outcomes. 
It can lead to partial outcomes, as recovery assumes good information, with no information from an empty tx journal, assumes rollback of any relevant pending transaction.

Note: the failure window is very small, but it is present and can lead to message loss once the txStore data is lost, deleted. 

workarond:
Only delete a corrupt txStore journal once there are no recovered XA transactions in play in any of the nested kahaDB instances. This is visible from the recovery logging.
If there are recovered XA transactions with formatId=61616 (the internal id used to identify these local 2pc transactions), then careful recovery of the relevant kahaDB instance directory in standalone mode (without mKahaDB) will be required if the transactions should commit.

solution:
The journal needs to better detect  corruption *and* not do any recovery processing in the absence of correct (non corrupt) information. Leaving pending transactions to be heuristically completed via JMX. ",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 20 11:48:36 UTC 2020,,,,,,,,,,,"0|z0ey7s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/May/20 11:43;jira-bot;Commit cedac472a1f143955c41d9a05baa2d4bf38399a3 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cedac47 ]

[AMQ-7488] mkahadb - detect txStore corruption and suspend recovery, auto recover if no outcomes pending
;;;","20/May/20 11:48;gtully;Enabled checksum for txStore and tidied up journal corruption detection.
In the presence of corruption and pending transactions, heuristic completion will be required via JMX.
If there are no pending transactions, the corruption is resolved automatically.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"RAR managed producer is unaware of timed out transaction; sends non transacted message in error",AMQ-7485,13305198,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/May/20 12:59,06/Oct/22 11:18,13/Jul/23 08:27,15/May/20 14:45,5.15.0,,,,5.16.0,,,RAR,XA,,,,0,RAR,XA,xaresource,,"There is a problem with a RAR managed connection enlisted in a xa transaction that aborts, if that connection is used to produce messages.

getConnection succeeds and enlists the resource, the session is in an xa transaction, all is good. 
If however, the transaction times out and aborts, *before* a producer gets to send(), the send will *not* see a transaction context and will produce a message with no transaction identity in error.
The abort forces an end(fail) and rollback, however this results in the transaction context being unset and the producer session not being aware of the aborted transaction.
The transaction management is external in the case of a managed connection and the default is non transactional in the absence of an external or RAR local transaction. 

Getting a reference to the TransactionManager and doing a transaction status check before send is a workaround, but that should not be necessary.",JEE RAR,fvaleri,gtully,jira-bot,joachim.glink@dematic.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 06 11:18:37 UTC 2022,,,,,,,,,,,"0|z0es7c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/May/20 13:06;gtully;There is an existing rollbackOnly flag that we can check in a producer and flip in the RAR managed connection context. This flag is reset on the next transaction boundary which is what we want.
In this way, any use of a producer on a session with an aborted transaction will fail early and report an illegal state, preventing any spurious non transacted message production in error. ;;;","15/May/20 14:40;jira-bot;Commit 0ebb0f88ef2afc590bf19ba1ec08ed995669a9dc in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0ebb0f8 ]

[AMQ-7485] add check for rollbackonly flag in session send such that failed ended transactions prevent further work till next transaction boundary
;;;","15/May/20 14:45;gtully;Added rollback only check in send and flip the rollback only flag from the managed transaction context when end is called with a failure flag.;;;","16/May/20 12:00;fvaleri;Just for the record, this is an example of the workaround:
{code}
@Resource(mappedName = ""java:/TransactionManager"")
private TransactionManager tm;
...
if (tm.getStatus() != Status.STATUS_ACTIVE) {
    throw new RuntimeException(""TX not active"");
}
producer.send(message);
...
{code};;;","06/Oct/22 11:18;joachim.glink@dematic.com;[~gtully]  I came across this change because I experienced a different behavior in our application after upgrading to AMQ 5.16.x

In the org.apache.activemq.ra.ManagedTransactionContext class you´ve added
{code:java}
public boolean isRollbackOnly() {
    return sharedContext.isRollbackOnly() || super.isRollbackOnly();
} {code}
All the other methods in this class do the call on the sharedContext only in case that the useSharedContext flag is set to true, e.g.
{code:java}
public void commit() throws JMSException {
    if (useSharedTxContext) {
        sharedContext.commit();
    } else {
        super.commit();
    }
} {code}
 

In our environment (Wildfly with AMQ RAR), I have a strange behavior that a Producer#send fails because of a ""transaction marked as rollback only"" even if we do the send without a transaction. (I don´t have a simple reproducer for it and until know I´m only able to reproduce the situation in our full-running system.)

If I reset the AMQ version to 5.14.x or change the ManagedTransactionContext#isRollbackOnly() and do the check on the _sharedContext_ only in case of useSharedContext=true, the message sending works.

So I wonder why the check isn´t done on this method.

Thanks;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Jackson Databind to 2.9.10.4,AMQ-7484,13304552,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,coheigea,coheigea,coheigea,13/May/20 07:51,14/May/20 05:41,13/Jul/23 08:27,14/May/20 05:41,,,,,5.15.13,5.16.0,,,,,,,0,,,,,"This task is to update Jackson Databind to 2.9.10.4, to get rid of another load of CVEs (e.g. https://nvd.nist.gov/vuln/detail/CVE-2020-10672)",,coheigea,jira-bot,,,,,,,,,,"jbonofre merged pull request #532:
URL: https://github.com/apache/activemq/pull/532


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/20 05:40;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 14 05:41:15 UTC 2020,,,,,,,,,,,"0|z0eo7s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/May/20 05:40;jira-bot;Commit ad7c5c61c4cef1bcb7ae46a4071dc0db32b3d232 in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ad7c5c6 ]

AMQ-7484 - Update Jackson Databind to 2.9.10.4
;;;","14/May/20 05:40;jira-bot;Commit c97a943583ce6fa41e24fefea3e9b46d034d787a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c97a943 ]

Merge pull request #532 from coheigea/AMQ-7484

AMQ-7484 - Update Jackson Databind to 2.9.10.4;;;","14/May/20 05:40;jira-bot;Commit c97a943583ce6fa41e24fefea3e9b46d034d787a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c97a943 ]

Merge pull request #532 from coheigea/AMQ-7484

AMQ-7484 - Update Jackson Databind to 2.9.10.4;;;","14/May/20 05:41;jira-bot;Commit 0c6a4d9f933353e37c7a5fa143dffcf34daa5769 in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0c6a4d9 ]

AMQ-7484 - Update Jackson Databind to 2.9.10.4

(cherry picked from commit ad7c5c61c4cef1bcb7ae46a4071dc0db32b3d232)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad CPU type in executable,AMQ-7483,13304106,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,gbuurman,gbuurman,11/May/20 12:27,20/May/20 04:30,13/Jul/23 08:27,20/May/20 04:30,5.15.12,,,,5.15.13,5.16.0,,Broker,,,,,0,wrapper,,,,Working om MacBook Pro Catalina 10.15.4. Trying to start activemq but it wont bevause of error: Bad CPU type in executable line 408. I have tried it with the original activemq and swapper file and the macosx,"Macbook

OSX

Catalina 10.15.4

 ",gbuurman,jbonofre,jira-bot,,,,,,,,,"jbonofre opened a new pull request #534:
URL: https://github.com/apache/activemq/pull/534


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 14:36;githubbot;600","jbonofre merged pull request #534:
URL: https://github.com/apache/activemq/pull/534


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 04:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 20 04:29:58 UTC 2020,,,,,,,,,,,"0|z0elgw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/May/20 04:10;jbonofre;What command are you using ? {{bin/activemq console}} or {{bin/activemq start}} or the wrapper (in {{bin/macosx/activemq}} ?;;;","12/May/20 04:12;jbonofre;OK, it's with the wrapper:
{code:java}
Running ActiveMQ Broker...
./activemq: line 395: /Users/jbonofre/Workspace/activemq/assembly/target/apache-activemq-5.16.0-SNAPSHOT/bin/macosx/wrapper: Bad CPU type in executable
./activemq: line 395: /Users/jbonofre/Workspace/activemq/assembly/target/apache-activemq-5.16.0-SNAPSHOT/bin/macosx/wrapper: Undefined error: 0
{code}
The {{activemq}} directly works fine. The wrapper is Tanuki JSW base. Let me check to fix that.;;;","12/May/20 06:17;gbuurman;Dear Jean-Baptiste,

I made a mistake while using the wrong script. As soon as I tried it with the original script al went weel. So please close/remove the issue. Many thanks for the quick response.

Best Wishes.

Ger Buurman
Integratiespecialist

06-29233911
088 217 08 15
088 217 08 00
ger.buurman@finalist.nl





--
;;;","13/May/20 05:45;jbonofre;[~gbuurman] there's an issue with the wrapper in MacOS anyway. So, either it should be removed or fixed. So, I keep this Jira open for now to see what I can do to avoid confusion.;;;","20/May/20 04:29;jira-bot;Commit 36a4115ea86962dce12073408bc5830bf584e3bc in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=36a4115 ]

[AMQ-7483] Update JSW wrapper for MacOS
;;;","20/May/20 04:29;jira-bot;Commit 7b51233a6985a1ba4b5e03dc3cc2a0a6429aa7d0 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7b51233 ]

Merge pull request #534 from jbonofre/AMQ-7483

[AMQ-7483] Update JSW wrapper for MacOS;;;","20/May/20 04:29;jira-bot;Commit 7b51233a6985a1ba4b5e03dc3cc2a0a6429aa7d0 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7b51233 ]

Merge pull request #534 from jbonofre/AMQ-7483

[AMQ-7483] Update JSW wrapper for MacOS;;;","20/May/20 04:29;jira-bot;Commit 34ff752ee48d3d81e7e815d4d6829c4e0188ea43 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=34ff752 ]

[AMQ-7483] Update JSW wrapper for MacOS

(cherry picked from commit 36a4115ea86962dce12073408bc5830bf584e3bc)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE after XA transaction timeout,AMQ-7480,13303255,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,terjestrand,terjestrand,07/May/20 02:55,21/May/20 07:55,13/Jul/23 08:27,21/May/20 07:55,5.15.12,,,,5.15.13,5.16.0,,Broker,,,,,0,,,,,"Under abnormal conditions, some of our JMS listeners use longer than expected time. The listeners are using XA transactions. If a XA transaction timer is triggered, eventhough the listener successfully processed the message, we get an NPE and jdbc connection leak in the broker. 

The offending stack is:
{quote}2020-05-06 14:01:51,697 [eListenerContainer-1] WARN .x.XAResourceTransaction - XA resource 'xamq': rollback for XID '3139322E3136382E322E3134302E746D313538383739383839393936303030303036:3139322E3136382E322E3134302E746D36' raised -7: the XA resource has become unavailable
javax.transaction.xa.XAException: java.lang.NullPointerException
 at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:803) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:552) ~[activemq-client-5.15.12.jar:5.15.12]
 at com.atomikos.datasource.xa.XAResourceTransaction.rollback(XAResourceTransaction.java:460) [transactions-jta-4.0.6.jar:?]
 at com.atomikos.icatch.imp.RollbackMessage.send(RollbackMessage.java:47) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.RollbackMessage.send(RollbackMessage.java:20) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.PropagationMessage.submit(PropagationMessage.java:67) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.Propagator$PropagatorThread.run(Propagator.java:63) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.Propagator.submitPropagationMessage(Propagator.java:42) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.CoordinatorStateHandler.rollbackFromWithinCallback(CoordinatorStateHandler.java:468) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.ActiveStateHandler$4.doRollback(ActiveStateHandler.java:189) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.CoordinatorStateHandler.rollbackWithAfterCompletionNotification(CoordinatorStateHandler.java:563) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.ActiveStateHandler.prepare(ActiveStateHandler.java:184) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.CoordinatorImp.prepare(CoordinatorImp.java:523) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.CoordinatorImp.terminate(CoordinatorImp.java:687) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.imp.CompositeTransactionImp.commit(CompositeTransactionImp.java:282) [transactions-4.0.6.jar:?]
 at com.atomikos.icatch.jta.TransactionImp.commit(TransactionImp.java:172) [transactions-jta-4.0.6.jar:?]
 at com.atomikos.icatch.jta.TransactionManagerImp.commit(TransactionManagerImp.java:414) [transactions-jta-4.0.6.jar:?]
 at com.atomikos.icatch.jta.UserTransactionImp.commit(UserTransactionImp.java:86) [transactions-jta-4.0.6.jar:?]
 at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1035) [spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743) [spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711) [spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:251) [spring-jms-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1189) [spring-jms-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1179) [spring-jms-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1076) [spring-jms-5.2.4.RELEASE.jar:5.2.4.RELEASE]
 at java.lang.Thread.run(Thread.java:834) [?:?]
Caused by: javax.jms.JMSException: java.lang.NullPointerException
 at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1403) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1436) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:538) ~[activemq-client-5.15.12.jar:5.15.12]
 ... 24 more
Caused by: java.lang.NullPointerException
 at org.apache.activemq.store.jdbc.JdbcMemoryTransactionStore.rollback(JdbcMemoryTransactionStore.java:181) ~[activemq-jdbc-store-5.15.12.jar:5.15.12]
 at org.apache.activemq.transaction.XATransaction.rollback(XATransaction.java:146) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.broker.TransactionBroker.rollbackTransaction(TransactionBroker.java:257) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.broker.BrokerFilter.rollbackTransaction(BrokerFilter.java:149) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.broker.BrokerFilter.rollbackTransaction(BrokerFilter.java:149) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.broker.TransportConnection.processRollbackTransaction(TransportConnection.java:553) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:104) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200) ~[activemq-broker-5.15.12.jar:5.15.12]
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233) ~[activemq-client-5.15.12.jar:5.15.12]
 at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215) ~[activemq-client-5.15.12.jar:5.15.12]
 at java.lang.Thread.run(Thread.java:834) ~[?:?]
{quote}
 

It is believed that this might be related to, or have same underlying root condition as [#AMQ-7424]",,jira-bot,terjestrand,,,,,,,,,,"jbonofre opened a new pull request #535:
URL: https://github.com/apache/activemq/pull/535


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 14:51;githubbot;600","jbonofre merged pull request #535:
URL: https://github.com/apache/activemq/pull/535


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 07:52;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 21 07:54:18 UTC 2020,,,,,,,,,,,"0|z0egj4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/May/20 07:52;jira-bot;Commit ecbeb6d2eb8675832acec243a4e50fea735763e0 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ecbeb6d ]

[AMQ-7480] Avoid NPE if original exception is null
;;;","21/May/20 07:52;jira-bot;Commit 173426c55c043858445a39d4210e001629f08859 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=173426c ]

Merge pull request #535 from jbonofre/AMQ-7480

[AMQ-7480] Avoid NPE if original exception is null;;;","21/May/20 07:52;jira-bot;Commit 173426c55c043858445a39d4210e001629f08859 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=173426c ]

Merge pull request #535 from jbonofre/AMQ-7480

[AMQ-7480] Avoid NPE if original exception is null;;;","21/May/20 07:54;jira-bot;Commit 82f3658ce188090f25152b6ad0d4f99450040693 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=82f3658 ]

[AMQ-7480] Avoid NPE if original exception is null

(cherry picked from commit ecbeb6d2eb8675832acec243a4e50fea735763e0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP client with proxy throws UnsupportedSchemeException,AMQ-7476,13302787,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,05/May/20 05:31,06/May/20 05:55,13/Jul/23 08:27,06/May/20 05:55,5.15.11,,,,5.15.13,5.16.0,,Transport,,,,,0,,,,,"Since the merge of PR #277 ([https://github.com/apache/activemq/pull/277]), when using a proxy, we get:
{code:java}
 I/O exception (org.apache.http.conn.UnsupportedSchemeExce      ption) caught when processing request to ... - http protocol is not supported{code}",,jbonofre,jira-bot,,,,,,,,,,"jbonofre opened a new pull request #526:
URL: https://github.com/apache/activemq/pull/526


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/May/20 05:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 06 05:54:57 UTC 2020,,,,,,,,,,,"0|z0ednc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/May/20 05:54;jira-bot;Commit 910a028fa7dd9659044f4e44392197830d9b463e in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=910a028 ]

[AMQ-7476] Add http schema in the HTTP registry
;;;","06/May/20 05:54;jira-bot;Commit b01406b655cdb1646cc82cd3418ae422f6ba9b78 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b01406b ]

Merge pull request #526 from jbonofre/AMQ-7476

[AMQ-7476] Add http schema in the HTTP registry;;;","06/May/20 05:54;jira-bot;Commit b01406b655cdb1646cc82cd3418ae422f6ba9b78 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b01406b ]

Merge pull request #526 from jbonofre/AMQ-7476

[AMQ-7476] Add http schema in the HTTP registry;;;","06/May/20 05:54;jira-bot;Commit 7427a4dc8648a44964bc2c522a564711c53508fe in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7427a4d ]

[AMQ-7476] Add http schema in the HTTP registry

(cherry picked from commit 910a028fa7dd9659044f4e44392197830d9b463e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Xerver Double Slash Authentication Bypass detected on ActiveMQ directory,AMQ-7465,13297970,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,xvanbha,xvanbha,13/Apr/20 07:53,23/May/20 05:08,13/Jul/23 08:27,23/May/20 05:08,5.14.5,,,,5.15.13,5.16.0,,Security/JAAS,,,,,0,,,,,"Xerver Double Slash Authentication Bypass detected on ActiveMQ directory.

The version of Xerver installed on the remote host is affected by an authentication bypass vulnerability. It is possible to access protected web directories without authentication by prepending the directory with an extra '/'character, as long as the directory is not recursively protected.
A remote, unauthenticated attacker can leverage this issue to gain access to protected web directories.

Nessus was able to reproduce the issue using the following URL :
[https://seliiuapp11022.seli.gic.ericsson.se:8162//admin/]

We have assigned 8162 port for activemq GUI in our applications",,coheigea,jbonofre,jira-bot,xvanbha,,,,,,,,"jbonofre opened a new pull request #537:
URL: https://github.com/apache/activemq/pull/537


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 08:42;githubbot;600","jbonofre merged pull request #537:
URL: https://github.com/apache/activemq/pull/537


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/May/20 04:41;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat May 23 05:08:05 UTC 2020,,,,,,,,,,,"0|z0dk9k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Apr/20 10:17;xvanbha;Above HiGH security alert/vulnerability is detected in our server during the nesus scan. We are using 8162 port in our application.Could you please suggest us how to fix this issue.;;;","21/May/20 08:29;jbonofre;I don't understand the issue. I tried this URL: [http://localhost:8161//admin]

and I got a 404 (which is correct) with ActiveMQ 5.15.13-SNAPSHOT and 5.14.5.

Can you elaborate where is the security issue here ?;;;","21/May/20 08:30;jbonofre;Just a note: there's no ""web directory"" in ActiveMQ console, only jsp and protected. So I don't see any issue there. Do you have an example of URL where you see a problem ?;;;","21/May/20 08:36;jbonofre;Anyway, you can fully protect any URL by doing this change in {{conf/jetty.xml}}:
{code:java}
    <bean id=""securityConstraintMapping"" class=""org.eclipse.jetty.security.ConstraintMapping"">
        <property name=""constraint"" ref=""securityConstraint"" />
        <property name=""pathSpec"" value=""/*,/api/*,/admin/*,*.jsp"" />
    </bean> {code};;;","21/May/20 08:36;jbonofre;I'm doing this change by default just in case.;;;","21/May/20 08:43;jbonofre;See my change on [https://github.com/apache/activemq/pull/537]

I think it's what you are looking for.;;;","23/May/20 04:41;jira-bot;Commit 93c245b8ec16849994f2cd4bb4a4b0bb73086ed1 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=93c245b ]

[AMQ-7465] Protect any webconsole URL by default
;;;","23/May/20 04:41;jira-bot;Commit e97322bddb06523981046f49225160a2b4347c3d in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e97322b ]

Merge pull request #537 from jbonofre/AMQ-7465

[AMQ-7465] Protect any webconsole URL by default;;;","23/May/20 04:41;jira-bot;Commit e97322bddb06523981046f49225160a2b4347c3d in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e97322b ]

Merge pull request #537 from jbonofre/AMQ-7465

[AMQ-7465] Protect any webconsole URL by default;;;","23/May/20 05:08;jira-bot;Commit 9ac781592558cc69ce070b84ff268c48b5ef7981 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9ac7815 ]

[AMQ-7465] Protect any webconsole URL by default

(cherry picked from commit 93c245b8ec16849994f2cd4bb4a4b0bb73086ed1)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ServerSession run does not copy message before dispatch;  rollback delivered ack messageId can get corrupted by direct forward, leading to ""Could not correlate acknowledgment with dispatched message"" JMSException",AMQ-7464,13297078,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,08/Apr/20 13:31,08/Apr/20 13:59,13/Jul/23 08:27,08/Apr/20 13:59,5.15.0,,,,5.16.0,,,JCA Container,JMS client,,,,0,,,,,"An MDB, that directly forwards its message can lead to unmatched acks on rollback.

{code}
.. onMessage(Message m) {
  producer.send(m);
  ..
}{code}
The root cause is ServerSession.run not doing a message copy before up call to the listener.
An unmatched delivered ACK causes a broker error and JMS exception ""Could not correlate acknowledgment with dispatched message"".  
That error closes the connection which prevents normal rollback and redelivery processing.

The fix is to copy, in the same way as a regular message consumer, such that the application is free to do what every it wants to the message.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 08 13:58:44 UTC 2020,,,,,,,,,,,"0|z0derc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Apr/20 13:58;jira-bot;Commit aa03f295f523ab00d2b19d54a36f4140bef18d0b in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=aa03f29 ]

AMQ-7464 - ensure message.copy before server session run dispatch
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ throws concurrentModificationException in failovertransport class,AMQ-7463,13296347,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,jbonofre,KS,KS,05/Apr/20 10:24,15/May/20 04:48,13/Jul/23 08:27,15/May/20 04:48,5.7.0,,,,5.15.13,5.16.0,,JMS client,,,,,0,,,,,"In production server, we are getting concurrent modification exception every 10 minutes

at FailOverTransport class method: connectionIterruptionProcessingComplete

 Other Jira tasks have resolved concurrent Modification exception in different class.

Please help. Attached screenshot of log.

 

Thanks,

Anusha",,jira-bot,KS,,,,,,,,,,"coheigea commented on a change in pull request #522:
URL: https://github.com/apache/activemq/pull/522#discussion_r412335919



##########
File path: activemq-client/src/main/java/org/apache/activemq/state/ConnectionState.java
##########
@@ -46,7 +46,7 @@
     private final List<DestinationInfo> tempDestinations = Collections.synchronizedList(new ArrayList<DestinationInfo>());
     private final AtomicBoolean shutdown = new AtomicBoolean(false);
     private boolean connectionInterruptProcessingComplete = true;
-    private HashMap<ConsumerId, ConsumerInfo> recoveringPullConsumers;
+    private ConcurrentMap<ConsumerId, ConsumerInfo> recoveringPullConsumers;

Review comment:
       Better just to define this as Map




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/20 17:10;githubbot;600","jbonofre commented on a change in pull request #522:
URL: https://github.com/apache/activemq/pull/522#discussion_r412702640



##########
File path: activemq-client/src/main/java/org/apache/activemq/state/ConnectionState.java
##########
@@ -46,7 +46,7 @@
     private final List<DestinationInfo> tempDestinations = Collections.synchronizedList(new ArrayList<DestinationInfo>());
     private final AtomicBoolean shutdown = new AtomicBoolean(false);
     private boolean connectionInterruptProcessingComplete = true;
-    private HashMap<ConsumerId, ConsumerInfo> recoveringPullConsumers;
+    private ConcurrentMap<ConsumerId, ConsumerInfo> recoveringPullConsumers;

Review comment:
       As @coheigea just a `Map` here is better IMHO.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Apr/20 06:24;githubbot;600","jbonofre commented on pull request #522:
URL: https://github.com/apache/activemq/pull/522#issuecomment-624456377


   I'm testing the branch locally.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 05:57;githubbot;600","asfgit closed pull request #522:
URL: https://github.com/apache/activemq/pull/522


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/20 04:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,"05/Apr/20 10:23;KS;activemq.jpg;https://issues.apache.org/jira/secure/attachment/12998976/activemq.jpg",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 15 04:47:47 UTC 2020,,,,,,,,,,,"0|z0dahs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Apr/20 12:13;KS;Please make hashmap as concurrent at line 147, connectionstate.java;;;","10/Apr/20 10:32;KS;Committed code in git. anushaCoder:patch-1;;;","15/May/20 04:47;jira-bot;Commit a5e70fa2d7195f4de12dc3fbc14c9bcf0890d43c in activemq's branch refs/heads/master from anushaCoder
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a5e70fa ]

[AMQ-7463] Use ConcurrentHashMap in client connection state to avoid ConcurrentModificationException
;;;","15/May/20 04:47;jira-bot;Commit 8b58228ca58d7111ce9715b9e8a3cb11cc76bc57 in activemq's branch refs/heads/activemq-5.15.x from anushaCoder
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8b58228 ]

[AMQ-7463] Use ConcurrentHashMap in client connection state to avoid ConcurrentModificationException

(cherry picked from commit a5e70fa2d7195f4de12dc3fbc14c9bcf0890d43c)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Blocking XA Periodic Recovery and Container Operations when deploying ActiveMQ RA 5.15.x to JBoss EAP 6.4,AMQ-7455,13294202,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,chammp,chammp,26/Mar/20 13:34,09/Jun/20 15:13,13/Jul/23 08:27,09/Jun/20 15:13,5.15.11,5.15.12,,,,,,RAR,,,,,0,newbie,performance,,,"*Scenario*: deploy ActiveMQ RA to EAP6.4 with XA enabled DataSources for JDBC and ActiveMQ Artemis as JMS broker in a failover config (active/passive) and run several applications that use JMS and JDBC datasources. (In our scenario, there are 4 XA JDBC DataSources and 42 deployed WAR files). ActiveMQ resource adapter is used as the Artemis one is not compatible to this EAP version.

JBoss EAP and Artemis are running on the same host in the examples below, but this does not matter. Artemis is running with example HA-by-network-replication settings on localhost:61616 and localhost:61617.

The resource adapter settings on JBoss EAP side and on client side (especially properties of the broker URIs for ActiveMQ's connection factory) are exactly as described in [Red Hat's reference documentation for HA config|https://access.redhat.com/documentation/en-us/red_hat_jboss_a-mq/6.1/html-single/integrating_with_jboss_enterprise_application_platform/index]:
 * Add {{?jms.rmIdFromConnectionId=true}} to the connection URI
 * {{<is-same-rm-override>false</is-same-rm-override>}} in standalone.xml

*Observed Symptoms*: On a regular basis, _undeployment of WAR files take minutes (around 10) instead of seconds_, blocking other container management operations during this timeframe. This behavior can be traced back to running ActiveMQ RA and Artemis as JMS broker. If running the same WAR files and same config, but using JBoss EAP's internal HornetQ broker, these delays do not occur and undeployments take mere seconds.

*Further Investigation*: This only affects JavaEE modules that define at least one MDB (message driven bean). During shutdown of the beans, the container management thread is blocked while de-registering the bean's XA Resource, see following stack trace taken while a simple module is being undeployed for reference:
{noformat}
""ServerService Thread Pool -- 277"" #3709 prio=5 os_prio=0 tid=0x000000001d6e0000 nid=0x4df4 in Object.wait() [0x000000007c41e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:502)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule.waitForScanState(XARecoveryModule.java:935)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule.removeXAResourceRecoveryHelper(XARecoveryModule.java:92)
	- locked <0x000000008162bd38> (a java.util.concurrent.atomic.AtomicInteger)
	at com.arjuna.ats.jbossatx.jta.RecoveryManagerService.removeXAResourceRecovery(RecoveryManagerService.java:117)
	at org.jboss.jca.core.tx.jbossts.XAResourceRecoveryRegistryImpl.removeXAResourceRecovery(XAResourceRecoveryRegistryImpl.java:63)
	at org.jboss.jca.core.rar.EndpointImpl.deactivate(EndpointImpl.java:226)
	at org.jboss.as.ejb3.component.messagedriven.MessageDrivenComponent.deactivate(MessageDrivenComponent.java:224)
	at org.jboss.as.ejb3.component.messagedriven.MessageDrivenComponent.stop(MessageDrivenComponent.java:195)
// and a couple of more elements
{noformat}
During these 10 minutes of blocking while the module is supposed to be undeployed, EAP's log is literally spammed with thousands of these lines:
{noformat}
11:19:43,640 INFO  [org.apache.activemq.transport.failover.FailoverTransport] (ActiveMQ Task-1) Successfully connected to tcp://localhost:61616
11:19:43,643 INFO  [org.apache.activemq.transport.failover.FailoverTransport] (ActiveMQ Task-1) Successfully connected to tcp://localhost:61616
11:19:43,647 INFO  [org.apache.activemq.transport.failover.FailoverTransport] (ActiveMQ Task-1) Successfully connected to tcp://localhost:61616
11:19:43,657 INFO  [org.apache.activemq.transport.failover.FailoverTransport] (ActiveMQ Task-1) Successfully connected to tcp://localhost:61616
11:19:43,661 INFO  [org.apache.activemq.transport.failover.FailoverTransport] (ActiveMQ Task-1) Successfully connected to tcp://localhost:61616
11:19:43,664 INFO  [org.apache.activemq.transport.failover.FailoverTransport] (ActiveMQ Task-1) Successfully connected to tcp://localhost:61616
{noformat}
Only after these lines stop to be logged the undeployment process continues.

*What happens during this time in ActiveMQ:* Obviously there are thousands of connections established to Artemis during this time. Tracing back the code path that leads to these calls points to EAP's Periodic XA Resource Recovery thread, see the following full stack trace (taken at the same point in time):
{noformat}
""Periodic Recovery"" #96 prio=5 os_prio=0 tid=0x000000002484a000 nid=0x1b28 waiting for monitor entry [0x0000000028dbe000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:623)
	- locked <0x00000000cc69eeb8> (a java.lang.Object)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:86)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1392)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1486)
	- locked <0x00000000cc69ff10> (a java.lang.Object)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:527)
	at org.apache.activemq.ra.ActiveMQResourceAdapter$2.newConnection(ActiveMQResourceAdapter.java:361)
	at org.apache.activemq.ra.ActiveMQResourceAdapter$2.getResourceManagerId(ActiveMQResourceAdapter.java:278)
	at org.apache.activemq.TransactionContext.isSameRM(TransactionContext.java:666)
	at org.apache.activemq.ra.ActiveMQResourceAdapter$2.isSameRM(ActiveMQResourceAdapter.java:261)
	at org.jboss.jca.core.tx.jbossts.XAResourceWrapperImpl.isSameRM(XAResourceWrapperImpl.java:159)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.RecoveryXids.isSameRM(RecoveryXids.java:143)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.RecoveryXids.updateIfEquivalentRM(RecoveryXids.java:215)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule.refreshXidScansForEquivalentXAResourceImpl(XARecoveryModule.java:796)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule.xaRecoveryFirstPass(XARecoveryModule.java:570)
	at com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule.periodicWorkFirstPass(XARecoveryModule.java:181)
	- locked <0x000000008162ba98> (a com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule)
	at com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery.doWorkInternal(PeriodicRecovery.java:747)
	at com.arjuna.ats.internal.arjuna.recovery.PeriodicRecovery.run(PeriodicRecovery.java:375){noformat}
From this stack trace I want to point out especially this line: {{org.apache.activemq.TransactionContext.isSameRM()}}

This method is part of the XA Resource Contract. Simply put the periodic recovery process iterates over XA Resources and looks for dormant XA transactions that need to be finished in some way or the other. Here it checks different combinations of XA Resources to asses whether they came from the same Resource Manager ({{.isSameRM()}}).
 During this recovery process (which in the stack trace above is still in the phase of gathering basic information and not actually working on XA transactions) the deregistration of the message driven beans is blocked.

*Analysis for the super long duration of recovery process*: The {{XAResource}} instances that periodic recovery works on are created by {{org.apache.activemq.ra.ActiveMQResourceAdapter.getXAResources(ActivationSpec[])}}. The anonymous class that extends {{org.apache.activemq.TransactionContext}} and that is instantiated here does basically the following steps for each invocation of any of the XA Resource contract methods:
 # Replace the current connection to Artemis with a freshly created one
 # Call {{*super*}}
 # Restore the current connection and close the new one

Specifically for {{isSameRM}} this results in the following chain of events:
 # Create a pristine connection to remote Artemis (in our case a FailoverTransport)
 # Call {{*super*.isSameRM(xaresource)}}
 # If {{xaresource}} is {{*null*}} or is not an instance of {{TransactionContext}}, return false ({{org/apache/activemq/TransactionContext.java:658}})
 # Get the current resource manager id and {{xaresource}}'s resource manager id. This effectively calls {{*this*.getResourceManagerId()}}. As noted above, this leads to the following calls:
 # Replace the current connection to Artemis (established in step 1) with a second pristine one
 # Call {{*super*.getResourceManagerId()}}
 # Call {{getResourceManagerId()}} on the connection of step 5
 # In {{org/apache/activemq/ActiveMQConnection.java:1622}}, the resource manager id effectively is the Connection Id in our setup (according to the flag set in the connection URI).
 # This id is _unique for each connection_ (see {{org/apache/activemq/ActiveMQConnection.java:240}})
 # Compare the resulting value with the resource manager id of xaresource and return the result
 # Close the connection to the JMS broker established in step 5 and set the one established in step 1 as ""current"" connection
 # Close the connection established in step 1 and reset current connection to whatever was there before (in my understanding that is always {{*null*}} as the instances are always being freshly created inside {{ActiveMQResourceAdapter.getXAResources}})

This is repeated for each pair of XA Resources, or rather Activation Specs, that the recovery manager encounters. The log spamming stems from steps 1 and 5 because each time a INFO message is logged tht tells us that a new connection has been established to the server.

This also happens when the recovery process wants to know if a JDBC connection to our SQL server (which we have plenty of due to several modules with a connection pooling data source each) is from the same resource manager as a JMS connection to Artemis - which it obviously never is.

*Problematic Aspects of this code*:
 # It doesn't make sense to establish pristine connections to the remote broker for each invocation of one of {{XAResource}}'s methods. The connection setup is expensive with a plain non-failover URI as it is, but even more so with a failover transport - this has been supported by tests and also the code shows this.
 # If there is the option to find an answer to {{isSameRM()}} without having to do any work, this should be done as early as possible.
 # If the connection factory is configured with {{rmIdFromConnectionId}} enabled, then {{isSameRM()}} in my understanding will never return {{*true*}}.

*Possible solutions for each of these aspects*:
 # In order to change the basic pattern of create-connection-then-do-something-then-close-connection that happens inside  {{ActiveMQResourceAdapter.}}{{getXAResources}}{{()}}, a big portion of this code would propably have to be re-written.
 # In the current code base, the instanceof check (see step 3 above) can be extraced and inlined into the anonymous inner class defined inside {{ActiveMQResourceAdapter.}}{{getXAResources}}{{()}}
 # I don't know about the semantic correctness of this, i.e. if this behavior is desired; but if it is, and all the code I read strengthens this assumption, then in this case this is another candidate for short-circuting the expensive connection creation: if this config flag is set on the connection factory, directly return {{*false*}}.

So, basically, the solutions 2 and 3 somewhat mitigate the antipattern(?) described in 1. And only this aspect is addressed by the pull request that is linked to this ticket.",,chammp,gtully,jbonofre,,,,,,,,,"chammp commented on pull request #519: AMQ-7455 Mitigate high connection bootstrap/teardown frequency...
URL: https://github.com/apache/activemq/pull/519
 
 
   ...when running in a EAP6 XA transactional environment.
   More information can be found in https://issues.apache.org/jira/browse/AMQ-7455
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 13:38;githubbot;600","jbonofre commented on pull request #519:
URL: https://github.com/apache/activemq/pull/519#issuecomment-629588650


   I guess it's fixed with AMQ-5790, right ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/20 04:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,AMQ-5790,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat May 16 04:54:56 UTC 2020,,,,,,,,,,,"0|z0cxt4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Mar/20 12:09;gtully;note the latest change for AMQ-5790 that retains a single connection for the rar deployment, this avoids the connection churn.;;;","16/May/20 04:54;jbonofre;I guess it's fixed thanks to AMQ-5790 right ?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid certificate warnings should include client IP information,AMQ-7444,13292400,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,18/Mar/20 08:46,15/Jan/21 07:07,13/Jul/23 08:27,14/Jan/21 05:31,5.15.12,,,,5.15.15,5.16.1,5.17.0,,,,,,0,,,,,"Note: this is a followup of AMQ-7301.

 In ActiveMQ 5.15.12, invalid certificate warnings look like this:

{code}
2020-03-18 09:39:43,977 [ActiveMQ BrokerService[foo.acme.com] Task-23] WARN TransportConnector - Could not accept connection from null: javax.net.ssl.SSLHandshakeException: General SSLEngine problem (unable to find valid certification path to requested target)
{code}

This does not to find the culprit client. ActiveMQ should (also) log the client IP address (and port), like it is done for instance in case of invalid credentials.",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre opened a new pull request #611:
URL: https://github.com/apache/activemq/pull/611


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 10:42;githubbot;600","jbonofre merged pull request #611:
URL: https://github.com/apache/activemq/pull/611


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/21 05:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,AMQ-7301,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 15 07:07:32 UTC 2021,,,,,,,,,,,"0|z0cncg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Jan/21 05:29;jira-bot;Commit 0c1b3e9240dbda0aee0426bfcef5e9cc628af7c7 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0c1b3e9 ]

[AMQ-7444] Fallback to remote location for remote address when socket has not been created yet
;;;","14/Jan/21 05:29;jira-bot;Commit 92120578d971f731dcdfd468abee4ae258c2c27e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9212057 ]

Merge pull request #611 from jbonofre/AMQ-7444

[AMQ-7444] Fallback to remote location for remote address when socket has not been created yet;;;","14/Jan/21 05:29;jira-bot;Commit 92120578d971f731dcdfd468abee4ae258c2c27e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9212057 ]

Merge pull request #611 from jbonofre/AMQ-7444

[AMQ-7444] Fallback to remote location for remote address when socket has not been created yet;;;","14/Jan/21 05:30;jira-bot;Commit c27e27c2c30f6d728d8dc1e6b8ea7c5c8a02c1b0 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c27e27c ]

[AMQ-7444] Fallback to remote location for remote address when socket has not been created yet

(cherry picked from commit 0c1b3e9240dbda0aee0426bfcef5e9cc628af7c7)
;;;","14/Jan/21 05:31;jira-bot;Commit de3cfaca69738964bd24381ee2ca73cde9857822 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=de3cfac ]

[AMQ-7444] Fallback to remote location for remote address when socket has not been created yet

(cherry picked from commit 0c1b3e9240dbda0aee0426bfcef5e9cc628af7c7)
;;;","15/Jan/21 07:04;lionel.cons;FWIW, I have tested the current RC for 5.16.1 and I confirm that the client information now appears. Thanks!;;;","15/Jan/21 07:07;jbonofre;Cool, thanks for the update ! FYI, the problem was the host was null because the connection was not yet establish (handshake). So what I did in that case is to fallback to the registered remote address (client).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prefetch warnings should include client IP information,AMQ-7443,13292396,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,lionel.cons,lionel.cons,18/Mar/20 08:32,15/Jan/21 07:02,13/Jul/23 08:27,14/Jan/21 05:07,5.15.12,,,,5.15.15,5.16.1,5.17.0,Broker,Transport,,,,0,,,,,"In ActiveMQ up to 5.15.12, prefetch warnings look like this:

{code}
2020-03-18 09:25:07,892 [ActiveMQ NIO Worker 7] WARN TopicSubscription - TopicSubscription: consumer=ID:foo.acme.com-7195-1584519807454-1:61:-1:1, destinations=1, dispatched=563, delivered=897, matched=564, discarded=0, prefetchExtension=0, usePrefetchExtension=true: has twice its prefetch limit pending, without an ack; it appears to be slow
{code}

This is not enough to find the culprit client (after the fact). ActiveMQ should (also) log the client IP address (and port). It should ideally be similar to other warnings like:

{code}
2020-03-18 09:18:31,539 [ActiveMQ InactivityMonitor Worker] WARN Transport - Transport Connection to: tcp://192.1.1.1:51550 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>7500) long: tcp://192.1.1.1:51550
{code}
",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre opened a new pull request #610:
URL: https://github.com/apache/activemq/pull/610


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 05:25;githubbot;600","jbonofre merged pull request #610:
URL: https://github.com/apache/activemq/pull/610


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jan/21 05:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 15 07:02:46 UTC 2021,,,,,,,,,,,"0|z0cnbk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Jan/21 05:05;jira-bot;Commit 7339e0516c39fe6736e8afd201bf176bbdd83950 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7339e05 ]

[AMQ-7443] Add connection remote addr in the prefetch warn log message
;;;","14/Jan/21 05:05;jira-bot;Commit 4dc6903c18d75ac72f33aba7ffbb35fb43effbec in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4dc6903 ]

Merge pull request #610 from jbonofre/AMQ-7443

[AMQ-7443] Add connection remote addr in the prefetch warn log message;;;","14/Jan/21 05:05;jira-bot;Commit 4dc6903c18d75ac72f33aba7ffbb35fb43effbec in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4dc6903 ]

Merge pull request #610 from jbonofre/AMQ-7443

[AMQ-7443] Add connection remote addr in the prefetch warn log message;;;","14/Jan/21 05:06;jira-bot;Commit 71be5034478887f49302bdb72eb384346b403fdc in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=71be503 ]

[AMQ-7443] Add connection remote addr in the prefetch warn log message

(cherry picked from commit 7339e0516c39fe6736e8afd201bf176bbdd83950)
;;;","14/Jan/21 05:07;jira-bot;Commit 025b9591be8eb61c15ba8d5fd265a7299f97f932 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=025b959 ]

[AMQ-7443] Add connection remote addr in the prefetch warn log message

(cherry picked from commit 7339e0516c39fe6736e8afd201bf176bbdd83950)
;;;","15/Jan/21 06:24;lionel.cons;FWIW, I have tested the current RC for 5.16.1 and I confirm that the client information now appears. Thanks!;;;","15/Jan/21 07:02;jbonofre;Thanks for the update and confirmation !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AbstractMQTTSocket#getProtocolConverter: Race condition in double-checked locking object initialization,AMQ-7439,13290362,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,pascalschumacher,pascalschumacher,08/Mar/20 10:09,16/May/20 05:26,13/Jul/23 08:27,16/May/20 05:26,5.15.11,,,,5.15.13,5.16.0,,MQTT,,,,,0,,,,,"There is a race condition in AbstractMQTTSocket#getProtocolConverter.

protocolConverter may be visible to other threads before its properties are set.",,jira-bot,pascalschumacher,,,,,,,,,,"PascalSchumacher commented on pull request #503: AMQ-7439: AbstractMQTTSocket#getProtocolConverter: Race condition in …
URL: https://github.com/apache/activemq/pull/503
 
 
   …double-checked locking object initialization
   
   `protocolConverter` may be visible to other threads before its properties are set.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 10:11;githubbot;600","jbonofre merged pull request #503:
URL: https://github.com/apache/activemq/pull/503


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/20 05:25;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat May 16 05:26:15 UTC 2020,,,,,,,,,,,"0|z0cark:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/May/20 05:25;jira-bot;Commit 8fa772c8dee88e0e2ab499ad82f2d3932645b873 in activemq's branch refs/heads/master from Pascal Schumacher
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8fa772c ]

AMQ-7439: AbstractMQTTSocket#getProtocolConverter: Race condition in double-checked locking object initialization

protocolConverter may be visible to other threads before its properties are set.
;;;","16/May/20 05:25;jira-bot;Commit d474580a349aecaa788627b70390721b13c8c440 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d474580 ]

Merge pull request #503 from PascalSchumacher/AbstractMQTTSocket#getProtocolConverter_race_condition

AMQ-7439: AbstractMQTTSocket#getProtocolConverter: Race condition in …;;;","16/May/20 05:26;jira-bot;Commit 5c94d7107a124d3f3a5c7090282e6eb213c8d0da in activemq's branch refs/heads/activemq-5.15.x from Pascal Schumacher
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5c94d71 ]

AMQ-7439: AbstractMQTTSocket#getProtocolConverter: Race condition in double-checked locking object initialization

protocolConverter may be visible to other threads before its properties are set.

(cherry picked from commit 8fa772c8dee88e0e2ab499ad82f2d3932645b873)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vulnerable dependencies in your project.(CVEs),AMQ-7432,13288544,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,XuCY,XuCY,01/Mar/20 13:27,02/Mar/20 17:32,13/Jul/23 08:27,02/Mar/20 17:32,,,,,5.15.12,5.16.0,,AMQP,Broker,LevelDB,MQTT,,0,,,,,"I found your project used some dependencies that contain CVEs. To prevent potential security risks it may cause, I suggest to update the library dependency. Please note the following details.
 
Vulnerable Library Version: org.apache.hadoop : hadoop-core : 1.0.4
  CVE ID: [CVE-2013-2192](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2192)
  Import Path: activemq-leveldb-store/pom.xml
  Suggested Safe Versions: 1.2.1
 
Vulnerable Library Version: io.netty : netty-codec-http : 4.1.43.Final
  CVE ID: [CVE-2019-20444](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20444), [CVE-2020-7238](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7238), [CVE-2019-20445](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20445)
  Import Path: activemq-amqp/pom.xml
  Suggested Safe Versions: 4.1.44.Final, 4.1.45.Final, 5.0.0.Alpha1, 5.0.0.Alpha2
 
Vulnerable Library Version: org.fusesource.mqtt-client : mqtt-client : 1.15
  CVE ID: [CVE-2019-0222](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0222)
  Import Path: activemq-mqtt/pom.xml, activemq-unit-tests/pom.xml
  Suggested Safe Versions: 1.16
 
Vulnerable Library Version: com.fasterxml.jackson.core : jackson-databind : 2.9.10.1
  CVE ID: [CVE-2020-8840](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8840), [CVE-2019-20330](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-20330)
  Import Path: activemq-broker/pom.xml, assembly/pom.xml, activemq-partition/pom.xml, activemq-leveldb-store/pom.xml, activemq-console/pom.xml
  Suggested Safe Versions: 2.10.0, 2.10.1, 2.10.2, 2.9.10.3
",,jira-bot,XuCY,,,,,,,,,,"jbonofre commented on pull request #490: [AMQ-7432] Upgrade to hadoop-core 1.2.1
URL: https://github.com/apache/activemq/pull/490
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 15:17;githubbot;600","jbonofre commented on pull request #491: [AMQ-7432] Upgrade to netty 4.1.45.Final
URL: https://github.com/apache/activemq/pull/491
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 15:30;githubbot;600","jbonofre commented on pull request #492: [AMQ-7432] Upgrade to jackson-databind 2.9.10.3
URL: https://github.com/apache/activemq/pull/492
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 15:38;githubbot;600","jbonofre commented on pull request #493: [AMQ-7432] Upgrade to mqtt-client 1.16
URL: https://github.com/apache/activemq/pull/493
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 16:52;githubbot;600","jbonofre commented on pull request #490: [AMQ-7432] Upgrade to hadoop-core 1.2.1
URL: https://github.com/apache/activemq/pull/490
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 16:57;githubbot;600","jbonofre commented on pull request #491: [AMQ-7432] Upgrade to netty 4.1.45.Final
URL: https://github.com/apache/activemq/pull/491
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 16:58;githubbot;600","jbonofre commented on pull request #492: [AMQ-7432] Upgrade to jackson-databind 2.9.10.3
URL: https://github.com/apache/activemq/pull/492
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 16:59;githubbot;600","jbonofre commented on pull request #493: [AMQ-7432] Upgrade to mqtt-client 1.16
URL: https://github.com/apache/activemq/pull/493
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 17:31;githubbot;600",,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 02 17:32:03 UTC 2020,,,,,,,,,,,"0|z0c1m0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Mar/20 16:57;jira-bot;Commit 088cc4be090f44845a5d88e17b0f691d4a773135 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=088cc4b ]

[AMQ-7432] Upgrade to hadoop-core 1.2.1
;;;","02/Mar/20 16:57;jira-bot;Commit 2e0d1a54c8be09dead430d6219758e32e2a803ad in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2e0d1a5 ]

Merge pull request #490 from jbonofre/AMQ-7432-HADOOP

[AMQ-7432] Upgrade to hadoop-core 1.2.1;;;","02/Mar/20 16:57;jira-bot;Commit 2e0d1a54c8be09dead430d6219758e32e2a803ad in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2e0d1a5 ]

Merge pull request #490 from jbonofre/AMQ-7432-HADOOP

[AMQ-7432] Upgrade to hadoop-core 1.2.1;;;","02/Mar/20 16:58;jira-bot;Commit 88a520a48a85b59962020af0daf180bf1657d3fd in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=88a520a ]

[AMQ-7432] Upgrade to hadoop-core 1.2.1

(cherry picked from commit 088cc4be090f44845a5d88e17b0f691d4a773135)
;;;","02/Mar/20 16:58;jira-bot;Commit a50b42b51a89518b5ee9c8127d554dbafa674c2c in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a50b42b ]

[AMQ-7432] Upgrade to netty 4.1.45.Final
;;;","02/Mar/20 16:58;jira-bot;Commit 9d3ab8b4afb787fad002e9bb412784508528a6a4 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9d3ab8b ]

Merge pull request #491 from jbonofre/AMQ-7432-NETTY

[AMQ-7432] Upgrade to netty 4.1.45.Final;;;","02/Mar/20 16:58;jira-bot;Commit 9d3ab8b4afb787fad002e9bb412784508528a6a4 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9d3ab8b ]

Merge pull request #491 from jbonofre/AMQ-7432-NETTY

[AMQ-7432] Upgrade to netty 4.1.45.Final;;;","02/Mar/20 16:59;jira-bot;Commit 105ff048a25f84791b7fdfbfc350e965c92509f3 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=105ff04 ]

[AMQ-7432] Upgrade to netty 4.1.45.Final

(cherry picked from commit a50b42b51a89518b5ee9c8127d554dbafa674c2c)
;;;","02/Mar/20 17:00;jira-bot;Commit dcd1de927040500fb98215ef6c1323616b27825e in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dcd1de9 ]

[AMQ-7432] Upgrade to jackson-databind 2.9.10.3
;;;","02/Mar/20 17:00;jira-bot;Commit 93e3029abc3a5d25d8313a0d39be01eec256bf4a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=93e3029 ]

Merge pull request #492 from jbonofre/AMQ-7432-JACKSON

[AMQ-7432] Upgrade to jackson-databind 2.9.10.3;;;","02/Mar/20 17:00;jira-bot;Commit 93e3029abc3a5d25d8313a0d39be01eec256bf4a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=93e3029 ]

Merge pull request #492 from jbonofre/AMQ-7432-JACKSON

[AMQ-7432] Upgrade to jackson-databind 2.9.10.3;;;","02/Mar/20 17:00;jira-bot;Commit 09b4a22d432277ccd6f2f8f63d822cca7d6a71a1 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=09b4a22 ]

[AMQ-7432] Upgrade to jackson-databind 2.9.10.3

(cherry picked from commit dcd1de927040500fb98215ef6c1323616b27825e)
;;;","02/Mar/20 17:31;jira-bot;Commit 0b0ab2a03a60b28c57145ccb17c79da50b9d17d7 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0b0ab2a ]

[AMQ-7432] Upgrade to mqtt-client 1.16
;;;","02/Mar/20 17:31;jira-bot;Commit 578051fdeab5d226a97faea7b5f5605260bd0782 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=578051f ]

Merge pull request #493 from jbonofre/AMQ-7432-MQTT

[AMQ-7432] Upgrade to mqtt-client 1.16;;;","02/Mar/20 17:31;jira-bot;Commit 578051fdeab5d226a97faea7b5f5605260bd0782 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=578051f ]

Merge pull request #493 from jbonofre/AMQ-7432-MQTT

[AMQ-7432] Upgrade to mqtt-client 1.16;;;","02/Mar/20 17:32;jira-bot;Commit 84b2c4fed5322008d039e24c1756c78a7558714d in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=84b2c4f ]

[AMQ-7432] Upgrade to mqtt-client 1.16

(cherry picked from commit 0b0ab2a03a60b28c57145ccb17c79da50b9d17d7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Webconsole doesn't deploy on Apache Karaf,AMQ-7431,13288518,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,01/Mar/20 12:29,01/Mar/20 16:41,13/Jul/23 08:27,01/Mar/20 16:41,,,,,5.15.12,5.16.0,,Web Console,,,,,0,,,,,"If broker works fine on Apache Karaf, the deployment of the webconsole fails:
{code:java}
karaf@root()> web:list
ID │ State       │ Web-State   │ Level │ Web-ContextPath │ Name
───┼─────────────┼─────────────┼───────┼─────────────────┼───────────────────────────────────────
59 │ Active      │ Failed      │ 50    │ /activemqweb    │ activemq-web-console (5.16.0.SNAPSHOT) {code}
The cause is:
{code:java}
2020-03-01T13:25:38,256 | ERROR | paxweb-extender-3-thread-1 | HttpServiceStarted               | 153 - org.ops4j.pax.web.pax-web-runtime - 7.2.14 | Exception starting HttpContext registration
java.lang.NullPointerException: null
  at org.apache.xbean.finder.BundleAssignableClassFinder.toASMStylePackageName(BundleAssignableClassFinder.java:257) ~[?:?]
  at org.apache.xbean.finder.BundleAssignableClassFinder.isClassAcceptable(BundleAssignableClassFinder.java:111) ~[?:?]
  at org.apache.xbean.osgi.bundle.util.BundleClassFinder.scanZip(BundleClassFinder.java:280) ~[?:?]
  at org.apache.xbean.osgi.bundle.util.BundleClassFinder.scanBundleClassPath(BundleClassFinder.java:237) ~[?:?]
  at org.apache.xbean.osgi.bundle.util.BundleClassFinder.find(BundleClassFinder.java:112) ~[?:?]
  at org.ops4j.pax.web.utils.ServletContainerInitializerScanner.scanBundles(ServletContainerInitializerScanner.java:118) ~[?:?]
  at org.ops4j.pax.web.service.jetty.internal.JettyServerWrapper.addContext(JettyServerWrapper.java:294) ~[?:?]
  at org.ops4j.pax.web.service.jetty.internal.JettyServerWrapper.getOrCreateContext(JettyServerWrapper.java:219) ~[?:?]
  at org.ops4j.pax.web.service.jetty.internal.JettyServerImpl.getContext(JettyServerImpl.java:312) ~[?:?]
  at org.ops4j.pax.web.service.jetty.internal.ServerControllerImpl$Started.getContext(ServerControllerImpl.java:374) ~[?:?]
  at org.ops4j.pax.web.service.jetty.internal.ServerControllerImpl.getContext(ServerControllerImpl.java:187) ~[?:?]
  at org.ops4j.pax.web.service.internal.HttpServiceStarted.begin(HttpServiceStarted.java:1249) ~[?:?]
  at org.ops4j.pax.web.service.internal.HttpServiceProxy.begin(HttpServiceProxy.java:451) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.RegisterWebAppVisitorWC.visit(RegisterWebAppVisitorWC.java:183) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.model.WebApp.accept(WebApp.java:621) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.register(WebAppPublisher.java:228) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.addingService(WebAppPublisher.java:173) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.addingService(WebAppPublisher.java:129) ~[?:?]
  at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:941) ~[osgi.core-6.0.0.jar:?]
  at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:870) ~[osgi.core-6.0.0.jar:?]
  at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256) ~[osgi.core-6.0.0.jar:?]
  at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183) ~[osgi.core-6.0.0.jar:?]
  at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:318) ~[osgi.core-6.0.0.jar:?]
  at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:261) ~[osgi.core-6.0.0.jar:?]
  at org.ops4j.pax.web.extender.war.internal.WebAppPublisher.publish(WebAppPublisher.java:98) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.WebObserver.deploy(WebObserver.java:217) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.WebObserver$1.doStart(WebObserver.java:172) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.extender.SimpleExtension.start(SimpleExtension.java:59) ~[?:?]
  at org.ops4j.pax.web.extender.war.internal.extender.AbstractExtender.lambda$createExtension$0(AbstractExtender.java:277) ~[?:?]
  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_241]
  at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_241]
  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_241]
  at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_241]
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_241]
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_241]
  at java.lang.Thread.run(Thread.java:748) [?:1.8.0_241]
2020-03-01T13:25:38,262 | ERROR | paxweb-extender-3-thread-1 | WebAppPublisher                  | 149 - org.ops4j.pax.web.pax-web-extender-war - 7.2.14 | Error deploying web application
java.lang.NullPointerException: null
  at org.apache.xbean.finder.BundleAssignableClassFinder.toASMStylePackageName(BundleAssignableClassFinder.java:257) ~[?:?]
  at org.apache.xbean.finder.BundleAssignableClassFinder.isClassAcceptable(BundleAssignableClassFinder.java:111) ~[?:?]
  at org.apache.xbean.osgi.bundle.util.BundleClassFinder.scanZip(BundleClassFinder.java:280) ~[?:?]
  at org.apache.xbean.osgi.bundle.util.BundleClassFinder.scanBundleClassPath(BundleClassFinder.java:237) ~[?:?]
... {code}",,jbonofre,jira-bot,,,,,,,,,,"jbonofre commented on pull request #486: [AMQ-7431] Fix webconsole deployment on Apache Karaf (due to ASM embedded)
URL: https://github.com/apache/activemq/pull/486
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/20 15:43;githubbot;600","jbonofre commented on pull request #486: [AMQ-7431] Fix webconsole deployment on Apache Karaf (due to ASM embedded)
URL: https://github.com/apache/activemq/pull/486
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/20 16:40;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Mar 01 16:41:14 UTC 2020,,,,,,,,,,,"0|z0c1g8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/20 14:53;jbonofre;This is related to the following commit:

[AMQ-7415] Upgrade to ASM 7.3.1;;;","01/Mar/20 16:40;jira-bot;Commit 4864bcedf86e8db50ca7b159f82871210b4980cf in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4864bce ]

[AMQ-7431] Fix webconsole deployment on Apache Karaf (due to ASM embedded)
;;;","01/Mar/20 16:40;jira-bot;Commit 0d65b218ba997c2424f34a6b28ec79f81ef9a56d in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0d65b21 ]

Merge pull request #486 from jbonofre/AMQ-7431

[AMQ-7431] Fix webconsole deployment on Apache Karaf (due to ASM embedded);;;","01/Mar/20 16:40;jira-bot;Commit 0d65b218ba997c2424f34a6b28ec79f81ef9a56d in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0d65b21 ]

Merge pull request #486 from jbonofre/AMQ-7431

[AMQ-7431] Fix webconsole deployment on Apache Karaf (due to ASM embedded);;;","01/Mar/20 16:41;jira-bot;Commit 40aaee5ee2158d51efe87d96c1fa1948d2bd6cb7 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=40aaee5 ]

[AMQ-7431] Fix webconsole deployment on Apache Karaf (due to ASM embedded)

(cherry picked from commit 4864bcedf86e8db50ca7b159f82871210b4980cf)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
spring-expression version is not aligned with other spring artifacts,AMQ-7429,13288498,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,01/Mar/20 10:05,01/Mar/20 15:48,13/Jul/23 08:27,01/Mar/20 15:48,,,,,5.15.12,5.16.0,,Broker,,,,,0,,,,,"The upgrade to Shiro 1.5.x brings Spring 5.1.x but we still use Spring 4.2.x. It's not a problem but spring-expression comes from Shiro and so it's not aligned with other Spring artifacts version.

I'm fixing.",,jbonofre,jira-bot,,,,,,,,,,"jbonofre commented on pull request #485: [AMQ-7429] Align spring-expression version with other spring artifacts
URL: https://github.com/apache/activemq/pull/485
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/20 12:32;githubbot;600","jbonofre commented on pull request #485: [AMQ-7429] Align spring-expression version with other spring artifacts
URL: https://github.com/apache/activemq/pull/485
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/20 15:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Mar 01 15:48:25 UTC 2020,,,,,,,,,,,"0|z0c1bs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/20 15:47;jira-bot;Commit cb23db5c5deb33b2201ba5aa13847d470c2317de in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cb23db5 ]

[AMQ-7429] Align spring-expression version with other spring artifacts
;;;","01/Mar/20 15:47;jira-bot;Commit 34d4bb8c82bb06689f10c149ff0ff4bcedca7d6f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=34d4bb8 ]

Merge pull request #485 from jbonofre/AMQ-7429

[AMQ-7429] Align spring-expression version with other spring artifacts;;;","01/Mar/20 15:47;jira-bot;Commit 34d4bb8c82bb06689f10c149ff0ff4bcedca7d6f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=34d4bb8 ]

Merge pull request #485 from jbonofre/AMQ-7429

[AMQ-7429] Align spring-expression version with other spring artifacts;;;","01/Mar/20 15:48;jira-bot;Commit ea7cc3434b1fe81abe737453fa80ff471424bd67 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ea7cc34 ]

[AMQ-7429] Align spring-expression version with other spring artifacts

(cherry picked from commit cb23db5c5deb33b2201ba5aa13847d470c2317de)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages in journal persistence don't get deleted upon ack,AMQ-7425,13288165,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,ngrondin78@gmail.com,ngrondin78@gmail.com,27/Feb/20 23:44,03/Mar/20 16:16,13/Jul/23 08:27,03/Mar/20 16:16,5.15.11,,,,5.15.12,5.16.0,,JDBC,,,,,0,,,,,"When using a journal JDBC persistence, we noticed that some messages in the DB table (activemq_msgs) don't always get deleted upon the messages being consumed. The adverse effect is that if the broker restarts (hosted in a K8S pod, so local journal files also lost) the broker will consider all non-deleted message as still unconsumed and will offer them up for consumption (this was an issue for us in production)

This seems to be cause by the fact that the persistence adapter does not use the right ID in the SQL statement to delete the line.

This comes from the fact that sometimes, the messageId has a ""futureOrSequenceLong"" of 0 as opposed to the correct ID (from the DB). This is because the ""futureOrSequenceLong"" gets set on that message only at the time the message is being persisted. But in a journal persistence, this happens on a frequency (5 minutes by default).

If a browse action occurs before the message is persisted, then a copy of the message is taken, which also copies of the wrong ""futureOrSequenceLong"". Upon consumption (assuming no restarts of the broker in the meantime), it is this copy of the messageId that is used when comes the time to remove the message from the DB.

The removal code actually caters for the missing ""futureOrSequenceLong"" in JDBCMessageStore [257] with this line:

  {color:#FF0000}   long seq = ack.getLastMessageId().getFutureOrSequenceLong() != null ?     long seq = ack.getLastMessageId().getFutureOrSequenceLong() != null ?                (Long) ack.getLastMessageId().getFutureOrSequenceLong() :                persistenceAdapter.getStoreSequenceIdForMessageId(context, ack.getLastMessageId(), destination)[0];{color}

In which case it will get it from the DB directly.

But the issue is that in the described case, the ""futureOrSequenceLong"" is not null, but has a value of 0L.

This is due to this line in JournalMessageStore.addMessage [142] (called when the message is originally produced)

{color:#FF0000}message.getMessageId().setFutureOrSequenceLong(0l);{color}

I actually think that creating a message on a JournalMessageStore should leave the ""futureOrSequenceLong"" null so that later condition checks can pick it up as such and properly get the sequence from the database.

 ",,jbonofre,jira-bot,ngrondin78@gmail.com,,,,,,,,,"jbonofre commented on pull request #495: [AMQ-7425] Simple fix to be sure to delete message from JDBC message store
URL: https://github.com/apache/activemq/pull/495
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/20 06:37;githubbot;600","jbonofre commented on pull request #495: [AMQ-7425] Simple fix to be sure to delete message from JDBC message store
URL: https://github.com/apache/activemq/pull/495
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/20 16:14;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 03 16:15:36 UTC 2020,,,,,,,,,,,"0|z0bzb4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Mar/20 06:38;jbonofre;As we are very close to ActiveMQ 5.15.12 and 5.16.0 releases, I did a very simple fix to be sure messages are removed from the store.

Please, let me know what you think about this.;;;","03/Mar/20 16:14;jira-bot;Commit 4528b773c6863b7f3994bcdc9772b1fb2a98cfd0 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4528b77 ]

[AMQ-7425] Simple fix to be sure to delete message from JDBC message store
;;;","03/Mar/20 16:14;jira-bot;Commit e20ef34ae0df57527beb84ddd595ca8848d72f71 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e20ef34 ]

Merge pull request #495 from jbonofre/AMQ-7425

[AMQ-7425] Simple fix to be sure to delete message from JDBC message store;;;","03/Mar/20 16:14;jira-bot;Commit e20ef34ae0df57527beb84ddd595ca8848d72f71 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e20ef34 ]

Merge pull request #495 from jbonofre/AMQ-7425

[AMQ-7425] Simple fix to be sure to delete message from JDBC message store;;;","03/Mar/20 16:15;jira-bot;Commit cfdfbc57db3c4162c5fcb5e06c0c30b71e44fa93 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cfdfbc5 ]

[AMQ-7425] Simple fix to be sure to delete message from JDBC message store

(cherry picked from commit 4528b773c6863b7f3994bcdc9772b1fb2a98cfd0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE under very high database load,AMQ-7424,13288123,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,terjestrand,terjestrand,27/Feb/20 18:39,29/Feb/20 06:15,13/Jul/23 08:27,29/Feb/20 06:15,5.15.11,,,,5.15.12,5.16.0,,JDBC,,,,,0,,,,,"Under abnormally heavy database loads we get a lot of transactions timeouts in our application as one would expect. Our application uses XA with Postgres and ActiveMQ. Problem is that after the abnormality goes away, the system does not recover.

 

During these failures, we get a NPE that causes ActiveMQ to lose a database connection and the connection is never returned to the connection pool (Hikari). After the abnormality is removed, and the database is responsive again, the system never recovers as the connection pool is out-of-resources.

 

Through debugging, we believe the following causes the connection leak in ActiveMQs handing:
{quote}Caused by: javax.jms.JMSException: java.lang.NullPointerException
 at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1403) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1436) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:538) ~[activemq-client-5.15.11.jar:5.15.11]
 ... 134 more
 Caused by: java.lang.NullPointerException
 at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitRemove(JDBCPersistenceAdapter.java:795) ~[activemq-jdbc-store-5.15.11.jar:5.15.11]
 at org.apache.activemq.store.jdbc.JdbcMemoryTransactionStore.rollback(JdbcMemoryTransactionStore.java:171) ~[activemq-jdbc-store-5.15.11.jar:5.15.11]
 at org.apache.activemq.transaction.XATransaction.rollback(XATransaction.java:146) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.broker.TransactionBroker.rollbackTransaction(TransactionBroker.java:257) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.broker.BrokerFilter.rollbackTransaction(BrokerFilter.java:149) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.broker.BrokerFilter.rollbackTransaction(BrokerFilter.java:149) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.broker.TransportConnection.processRollbackTransaction(TransportConnection.java:553) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:104) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200) ~[activemq-broker-5.15.11.jar:5.15.11]
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233) ~[activemq-client-5.15.11.jar:5.15.11]
 at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215) ~[activemq-client-5.15.11.jar:5.15.11]
 ... 1 more
{quote}
 

By overloading the method 'commitRemoved(...)' in 'JDBCPersistenceAdapter' and converting the NullPointerException above to an IOException, the connection handling code behaves as expected, we see no connection leak, and the system recovers correctly after the load abnormality has passed.

 

There is a very large number of things going wrong when these NPEs occur and its near impossible for us (not being experts at ActiveMQ) to see what the underlying cause for these exceptions are. However, for us, the most important is that we recover-",,jbonofre,jira-bot,terjestrand,,,,,,,,,"jbonofre commented on pull request #481: [AMQ-7424] Prevent NPE during commitRemove() on JDBC adapter
URL: https://github.com/apache/activemq/pull/481
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 20:25;githubbot;600","jbonofre commented on pull request #481: [AMQ-7424] Prevent NPE during commitRemove() on JDBC adapter
URL: https://github.com/apache/activemq/pull/481
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Feb/20 06:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Feb 29 06:15:04 UTC 2020,,,,,,,,,,,"0|z0bz1s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Feb/20 19:16;jbonofre;Do you have lot of pending messages under load ?;;;","27/Feb/20 19:18;jbonofre;It could be related to AMQ-7368;;;","27/Feb/20 19:39;terjestrand;Never more than approx 250 total across all queues, though the main active queue (3-20 msgs per sec) there is typically 0-10 pending messages. I do not quite see how the NPE is related to the mentioned bug above;;;","27/Feb/20 20:05;jbonofre;You are right, it's not the same. However, I've never seen this issue on my productions. Anyway, let me do a fix to avoid this NPE.;;;","29/Feb/20 06:10;jira-bot;Commit d8ae8734a9f6da41e206d33322048aedf5491e8e in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d8ae873 ]

[AMQ-7424] Prevent NPE during commitRemove() on JDBC adapter
;;;","29/Feb/20 06:10;jira-bot;Commit 80d06fc186ab1b73cced2b949462a120aadcfbf7 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=80d06fc ]

Merge pull request #481 from jbonofre/AMQ-7424

[AMQ-7424] Prevent NPE during commitRemove() on JDBC adapter;;;","29/Feb/20 06:10;jira-bot;Commit 80d06fc186ab1b73cced2b949462a120aadcfbf7 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=80d06fc ]

Merge pull request #481 from jbonofre/AMQ-7424

[AMQ-7424] Prevent NPE during commitRemove() on JDBC adapter;;;","29/Feb/20 06:15;jira-bot;Commit 1daf347f90286c880c160ec136e07d133b424503 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1daf347 ]

[AMQ-7424] Prevent NPE during commitRemove() on JDBC adapter

(cherry picked from commit d8ae8734a9f6da41e206d33322048aedf5491e8e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"AMQ7086Test KahaDB test is failing on ""slow"" machine",AMQ-7421,13287439,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,25/Feb/20 08:03,26/Feb/20 12:12,13/Jul/23 08:27,26/Feb/20 12:12,,,,,5.16.0,,,KahaDB,Test Cases,,,,0,,,,,"KahaDB AMQ7086Test test is failing on ""slow"" machine. It especially impacts our Jenkins:
java.lang.AssertionError: Expected job store data files expected:<1> but was:<2>
	at org.apache.activemq.store.kahadb.scheduler.AMQ7086Test.testGcDoneAtStop(AMQ7086Test.java:68)",,jbonofre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2020-02-25 08:03:21.0,,,,,,,,,,,"0|z0buts:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"QueueZeroPrefetchLazyDispatchPriorityTest unit test is failing on ""slow"" machine",AMQ-7420,13287438,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,25/Feb/20 08:01,26/Feb/20 12:13,13/Jul/23 08:27,26/Feb/20 12:13,,,,,5.15.12,5.16.0,,Test Cases,,,,,0,,,,,"The {{QueueZeroPrefetchLazyDispatchPriorityTest}} is failing on ""slow"" machine. It especially impacts our Jenkins. I'm improving the test.",,jbonofre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2020-02-25 08:01:19.0,,,,,,,,,,,"0|z0butk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Partitioning by queue/topic chooses incorrect target,AMQ-7407,13285847,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,mbrodin,mbrodin,17/Feb/20 20:24,28/Feb/20 06:33,13/Jul/23 08:27,28/Feb/20 06:33,,,,,5.15.12,5.16.0,,,,,,,0,,,,,"This code always returns the latest target, instead of the best target (with the largest score)

[https://github.com/apache/activemq/blob/master/activemq-partition/src/main/java/org/apache/activemq/partition/PartitionBroker.java#L251]

 
{code:java}
// The target with largest score wins..            
if( !targetScores.isEmpty() ) {                
   Target bestTarget = null;                
   int bestScore=0;                
   for (Map.Entry<Target, Score> entry : targetScores.entrySet()) {
     if( entry.getValue().value > bestScore ) {
        bestTarget = entry.getKey();                    
     }
   }
   return bestTarget;
}
{code}",,jira-bot,mbrodin,,,,,,,,,,"jbonofre commented on pull request #482: [AMQ-7407] Fix best target electionfor queue/topic partitioning
URL: https://github.com/apache/activemq/pull/482
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 20:40;githubbot;600","jbonofre commented on pull request #482: [AMQ-7407] Fix best target election for queue/topic partitioning
URL: https://github.com/apache/activemq/pull/482
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 06:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 28 06:33:11 UTC 2020,,,,,,,,,,,"0|z0bl8g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Feb/20 06:32;jira-bot;Commit 5f51b9c084e38f8f10418398dbfe415d4570e325 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5f51b9c ]

[AMQ-7407] Fix best target election for queue/topic partitioning
;;;","28/Feb/20 06:32;jira-bot;Commit 702fb86887dac79ae206c26693ee8fdc88c0e1b5 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=702fb86 ]

Merge pull request #482 from jbonofre/AMQ-7407

[AMQ-7407] Fix best target election for queue/topic partitioning;;;","28/Feb/20 06:32;jira-bot;Commit 702fb86887dac79ae206c26693ee8fdc88c0e1b5 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=702fb86 ]

Merge pull request #482 from jbonofre/AMQ-7407

[AMQ-7407] Fix best target election for queue/topic partitioning;;;","28/Feb/20 06:33;jira-bot;Commit 0c20c4832f331e8b626df3d3efcd26da4a86ceb3 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0c20c48 ]

[AMQ-7407] Fix best target election for queue/topic partitioning

(cherry picked from commit 5f51b9c084e38f8f10418398dbfe415d4570e325)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential PreparedStatement/ResultSet leak in LeaseDatabaseLocker#determineTimeDifference,AMQ-7403,13284662,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,pascalschumacher,pascalschumacher,11/Feb/20 20:10,11/Mar/20 17:33,13/Jul/23 08:27,11/Mar/20 17:33,5.15.11,,,,5.15.12,5.16.0,,JDBC,,,,,0,,,,,"LeaseDatabaseLocker#determineTimeDifference does not close the PreparedStatement and the ResultSet it uses/creates.

This may cause a resource leak.",,jbonofre,jira-bot,pascalschumacher,,,,,,,,,"PascalSchumacher commented on pull request #450: AMQ-7403: Potential PreparedStatement/ResultSet leak in LeaseDatabase…
URL: https://github.com/apache/activemq/pull/450
 
 
   …Locker#determineTimeDifference
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/20 20:13;githubbot;600","jbonofre commented on pull request #450: AMQ-7403: Potential PreparedStatement/ResultSet leak in LeaseDatabase…
URL: https://github.com/apache/activemq/pull/450
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 06:35;githubbot;600","jbonofre commented on pull request #509: [AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion)
URL: https://github.com/apache/activemq/pull/509
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/20 16:00;githubbot;600","jbonofre commented on issue #509: [AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion)
URL: https://github.com/apache/activemq/pull/509#issuecomment-597734570
 
 
   Require fix from #510 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/20 16:29;githubbot;600","jbonofre commented on pull request #509: [AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion)
URL: https://github.com/apache/activemq/pull/509
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/20 17:32;githubbot;600",,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 11 17:33:33 UTC 2020,,,,,,,,,,,"0|z0bdx4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Feb/20 06:35;jira-bot;Commit 26a0f8214c0e5fd290f5ff45d7376d1eae2448fb in activemq's branch refs/heads/master from Pascal Schumacher
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=26a0f82 ]

AMQ-7403: Potential PreparedStatement/ResultSet leak in LeaseDatabaseLocker#determineTimeDifference
;;;","12/Feb/20 06:35;jira-bot;Commit 098fd9c5a90e14268794d1f2982ef19c31b15808 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=098fd9c ]

Merge pull request #450 from PascalSchumacher/possible_db_resource_leak

AMQ-7403: Potential PreparedStatement/ResultSet leak in LeaseDatabase…;;;","12/Feb/20 06:35;jira-bot;Commit 058b7a7b53898d3dbbec2dbbc78598f4b1e9f109 in activemq's branch refs/heads/activemq-5.15.x from Pascal Schumacher
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=058b7a7 ]

AMQ-7403: Potential PreparedStatement/ResultSet leak in LeaseDatabaseLocker#determineTimeDifference

(cherry picked from commit 26a0f8214c0e5fd290f5ff45d7376d1eae2448fb)
;;;","11/Mar/20 14:26;jbonofre;This change breaks {{LeaseDatabaseLockerTest}} unit test. The test has be fixed, simply adding prepare statement close reply on mock.;;;","11/Mar/20 17:32;jira-bot;Commit 3cb8fe87ea1e26f64364e47ac25aab4d77aab4da in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3cb8fe8 ]

[AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion)
;;;","11/Mar/20 17:33;jira-bot;Commit f7ab7203ba0c19f73bb31c97d32f14110e0c9e5b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7ab720 ]

Merge pull request #509 from jbonofre/AMQ-7403

[AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion);;;","11/Mar/20 17:33;jira-bot;Commit f7ab7203ba0c19f73bb31c97d32f14110e0c9e5b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7ab720 ]

Merge pull request #509 from jbonofre/AMQ-7403

[AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion);;;","11/Mar/20 17:33;jira-bot;Commit a320efc79f616bedc30db80a1fdea8123171197a in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a320efc ]

[AMQ-7403] Fix LeaseDatabaseLockerTest unit test (jmock assertion)

(cherry picked from commit 3cb8fe87ea1e26f64364e47ac25aab4d77aab4da)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent synchronization of getter/setter of some classes,AMQ-7402,13284391,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,pascalschumacher,pascalschumacher,10/Feb/20 19:27,14/Feb/20 07:22,13/Jul/23 08:27,14/Feb/20 07:22,5.15.11,,,,5.15.12,5.16.0,,Broker,JMS client,KahaDB,,,0,,,,,"There are some classes where the get method is synchronzied by the set method is not (or the other way around).

Therefore calls may return a inconsistent state for the object.",,jira-bot,pascalschumacher,,,,,,,,,,"PascalSchumacher commented on pull request #449: AMQ-7402: Inconsistent synchronization of getters/setters of some cla…
URL: https://github.com/apache/activemq/pull/449
 
 
   …sses
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/20 19:31;githubbot;600","chughpiyush commented on issue #449: AMQ-7402: Inconsistent synchronization of getters/setters of some cla…
URL: https://github.com/apache/activemq/pull/449#issuecomment-584632292
 
 
   @jbonofre Is anyone working on failing test cases on Jenkins?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/20 13:24;githubbot;600","jbonofre commented on issue #449: AMQ-7402: Inconsistent synchronization of getters/setters of some cla…
URL: https://github.com/apache/activemq/pull/449#issuecomment-585035360
 
 
   @chughpiyush yeah, I fixed some of then but not all, working on it (at least disabling some for now).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 05:22;githubbot;600","coheigea commented on pull request #449: AMQ-7402: Inconsistent synchronization of getters/setters of some cla…
URL: https://github.com/apache/activemq/pull/449#discussion_r378088857
 
 

 ##########
 File path: activemq-client/src/main/java/org/apache/activemq/management/SizeStatisticImpl.java
 ##########
 @@ -87,7 +87,7 @@ public synchronized void setTotalSize(long size) {
     /**
      * @return the maximum size of any step
      */
-    public long getMaxSize() {
+    public synchronized long getMaxSize() {
 
 Review comment:
   For Max + Min Size, I think synchronized should be removed from the setter methods and just make the variables volatile instead.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 08:01;githubbot;600","coheigea commented on pull request #449: AMQ-7402: Inconsistent synchronization of getters/setters of some cla…
URL: https://github.com/apache/activemq/pull/449#discussion_r378089089
 
 

 ##########
 File path: activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/index/HashIndex.java
 ##########
 @@ -383,7 +383,7 @@ int indexFor(Key x, int length) {
     // Property Accessors
     // /////////////////////////////////////////////////////////////////
 
-    public Marshaller<Key> getKeyMarshaller() {
+    public synchronized Marshaller<Key> getKeyMarshaller() {
 
 Review comment:
   Instead remove synchronized from the setter, and make the variable volatile
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 08:01;githubbot;600","jbonofre commented on pull request #449: AMQ-7402: Inconsistent synchronization of getters/setters of some cla…
URL: https://github.com/apache/activemq/pull/449
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/20 07:16;githubbot;600",,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Feb 13 07:18:05 UTC 2020,,,,,,,,,,,"0|z0bc8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Feb/20 07:16;jira-bot;Commit 5356893fac70d9f67a407d836f8cc8260961b792 in activemq's branch refs/heads/master from Pascal Schumacher
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5356893 ]

AMQ-7402: Inconsistent synchronization of getters/setters of some classes

Make synchronization consistent or remove it and declare the field volatile.
;;;","13/Feb/20 07:16;jira-bot;Commit a9d89572efe7d5b570ebce2d0cb0772131100cad in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a9d8957 ]

Merge pull request #449 from PascalSchumacher/setter_getter_synchronization

AMQ-7402: Inconsistent synchronization of getters/setters of some cla…;;;","13/Feb/20 07:18;jira-bot;Commit 0a0b524c9d1afdc3f14445409613a7474760cfb1 in activemq's branch refs/heads/activemq-5.15.x from Pascal Schumacher
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0a0b524 ]

AMQ-7402: Inconsistent synchronization of getters/setters of some classes

Make synchronization consistent or remove it and declare the field volatile.

(cherry picked from commit 5356893fac70d9f67a407d836f8cc8260961b792)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent JMX registry rebind,AMQ-7400,13284062,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,08/Feb/20 06:38,25/Feb/20 10:22,13/Jul/23 08:27,11/Feb/20 20:42,5.15.10,5.15.11,,,5.15.12,5.16.0,,JMX,,,,,0,,,,,,,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ARTEMIS-2632,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Feb 11 20:41:58 UTC 2020,,,,,,,,,,,"0|z0ba7k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Feb/20 20:24;jira-bot;Commit b7dca5e0738639f2bffe7f97b9c782372fc2188e in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b7dca5e ]

[AMQ-7400] Fix OSGi statement about sun.rmi
;;;","11/Feb/20 20:24;jira-bot;Commit 58382283330f7c7b110c7afd8ef4ca2648786532 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5838228 ]

[AMQ-7400] This closes #443
;;;","11/Feb/20 20:41;jira-bot;Commit 359ae4b1985d9d4272411363cefc6308ea0741e0 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=359ae4b ]

[AMQ-7400] Fix OSGi headers for sun.rmi
;;;","11/Feb/20 20:41;jira-bot;Commit 48cd61dda07c1ef212d0e9dce5a4398983faf79d in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=48cd61d ]

[AMQ-7400] This closes #444
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SERIALIZABLE_PACKAGES should exclude java* by default,AMQ-7399,13283826,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,07/Feb/20 04:24,09/Dec/20 07:49,13/Jul/23 08:27,14/Feb/20 07:23,5.15.10,5.15.11,,,5.15.12,5.16.0,,Broker,,,,,0,,,,,"To avoid potential security issue when using {{ObjectMessage}}, {{SERIALIZABLE_PACKAGE}} should be limited by default. Now, it contains {{java.lang, ...}}",,jbonofre,jira-bot,,,,,,,,,,"jbonofre commented on pull request #446: [AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES is now empty by default
URL: https://github.com/apache/activemq/pull/446
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 10:01;githubbot;600","coheigea commented on pull request #446: [AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default
URL: https://github.com/apache/activemq/pull/446#discussion_r376960252
 
 

 ##########
 File path: activemq-client/src/test/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStreamTest.java
 ##########
 @@ -35,6 +35,10 @@
 
 public class ClassLoadingAwareObjectInputStreamTest {
 
+    static {
+        System.setProperty(""org.apache.activemq.SERIALIZABLE_PACKAGES"", ""java.lang,javax.security,java.util,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"");
 
 Review comment:
   Just java.util here fixes the tests in activemq-client
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/20 10:02;githubbot;600","coheigea commented on pull request #446: [AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default
URL: https://github.com/apache/activemq/pull/446#discussion_r376962668
 
 

 ##########
 File path: activemq-http/src/test/java/org/apache/activemq/transport/http/HttpJMSMessagesWithCompressionTest.java
 ##########
 @@ -71,6 +72,7 @@ public void tearDown() throws Exception {
 
     protected ConnectionFactory createConnectionFactory() throws URISyntaxException {
         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(getBrokerURL());
+        factory.setTrustedPackages(Arrays.asList(""java.lang,javax.security,java.util,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"".split("","")));
 
 Review comment:
   java.lang only required here
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/20 10:02;githubbot;600","coheigea commented on pull request #446: [AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default
URL: https://github.com/apache/activemq/pull/446#discussion_r376957963
 
 

 ##########
 File path: activemq-broker/src/test/java/org/apache/activemq/JmsTransactionTestSupport.java
 ##########
 @@ -114,6 +114,7 @@ protected void rollbackTx() throws Exception {
     /**
      */
     protected BrokerService createBroker() throws Exception, URISyntaxException {
+        System.setProperty(""org.apache.activemq.SERIALIZABLE_PACKAGES"", ""java.lang,javax.security,java.util,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper"");
 
 Review comment:
   Just java.util here fixes the tests in activemq-broker
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/20 10:02;githubbot;600","coheigea commented on pull request #446: [AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default
URL: https://github.com/apache/activemq/pull/446#discussion_r376963164
 
 

 ##########
 File path: assembly/src/release/bin/env
 ##########
 @@ -113,3 +113,10 @@ ACTIVEMQ_USER=""""
 # (set JAVACMD to ""auto"" for automatic detection)
 #JAVA_HOME=""""
 JAVACMD=""auto""
+
+# Packages allowed for serialization (when used with ObjectMessage).
+# Packages set is limited to org.apache.activemmq, org.fusesource.hawtbuf and com.thoughtworks.xstream.mapper by default.
+# java* packages are excluded by default for security reason.
+#ACTIVEMQ_OPTS=""-Dorg.apache.activemq.SERIALIZABLE_PACKAGES=org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper""
+# You have explicitely add java* packages and your packages (and probably java* packages):
 
 Review comment:
   I think this could be re-worded - you have to explicitly add java.util + java.lang packages ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/20 10:02;githubbot;600","jbonofre commented on pull request #446: [AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default
URL: https://github.com/apache/activemq/pull/446
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 12:44;githubbot;600","coheigea commented on pull request #453: AMQ-7399 - Adding a unit test
URL: https://github.com/apache/activemq/pull/453
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 14:10;githubbot;600","jbonofre commented on pull request #453: AMQ-7399 - Adding a unit test
URL: https://github.com/apache/activemq/pull/453
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/20 07:43;githubbot;600",,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,AMQ-8097,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 14 07:44:54 UTC 2020,,,,,,,,,,,"0|z0b8r4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Feb/20 12:45;jira-bot;Commit 097506a45837f55e4d010e4094d60a36f6672ebd in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=097506a ]

[AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't include java* by default
;;;","12/Feb/20 12:45;jira-bot;Commit ee16d9df5cba02aeb4fe2929ac593078bbea3764 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ee16d9d ]

Merge pull request #446 from jbonofre/AMQ-7399

[AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default;;;","12/Feb/20 12:45;jira-bot;Commit ee16d9df5cba02aeb4fe2929ac593078bbea3764 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ee16d9d ]

Merge pull request #446 from jbonofre/AMQ-7399

[AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't contain java* by default;;;","12/Feb/20 12:48;jira-bot;Commit c92187d0b7369a0cfdc8f52056773b34bc9d07bf in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c92187d ]

[AMQ-7399] org.apache.activemq.SERIALIZABLE_PACKAGES doesn't include java* by default

(cherry picked from commit 097506a45837f55e4d010e4094d60a36f6672ebd)
;;;","14/Feb/20 07:44;jira-bot;Commit 8cdddde5b47f06d5bc9d1c27e25287bc050799c6 in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8cdddde ]

AMQ-7399 - Adding a unit test
;;;","14/Feb/20 07:44;jira-bot;Commit ea5169d21f5576d21389d56b96fc1f76b4aefce1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ea5169d ]

Merge pull request #453 from coheigea/AMQ-7399

AMQ-7399 - Adding a unit test;;;","14/Feb/20 07:44;jira-bot;Commit ea5169d21f5576d21389d56b96fc1f76b4aefce1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ea5169d ]

Merge pull request #453 from coheigea/AMQ-7399

AMQ-7399 - Adding a unit test;;;","14/Feb/20 07:44;jira-bot;Commit 43be461acefc8484bb069a10625bfda669b015ef in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=43be461 ]

AMQ-7399 - Adding a unit test

(cherry picked from commit 8cdddde5b47f06d5bc9d1c27e25287bc050799c6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"'recovery' of messages does not take into account the PolicyMap/PolicyEntry 'memoryLimit', but takes 200 messages from the store",AMQ-7394,13282213,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,rverheij,rverheij,29/Jan/20 15:19,20/May/20 14:21,13/Jul/23 08:27,03/Mar/20 16:14,5.15.2,,,,5.15.12,5.16.0,,JDBC,,,,,0,,,,,"I believe this affects versions up to 5.15.11 too, since I don't see changes in the related code.

Perhaps this issue is similar to the KahaDB JIRA AMQ-7126 which was fixed in 5.15.9?

At Infor we use activeMQ 5.15.2 currently with the JDBC Persistence Adapter.

When a queue (the tables in the DB for the queue) has many messages of a significant size (e.g. 200 messages of 5 MB) and I start the brokerService then it will 'recover' the messages. The first call will get 400 messages and when consuming and removing those subsequent calls will get 200 messages each *without* taking into account the configured memory limits per-broker or per-queue. So memory consumption is rather unconstrained here.

I believe this is because [JDBCMessageStore.java recoverNextMessages|https://github.com/apache/activemq/blob/master/activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/JDBCMessageStore.java] always returns 'true' (at line 368 currently) without asking {{listener.hasSpace()}} (or rather the new {{canRecoveryNextMessage()}}) {code:java}                @Override
                public boolean recoverMessage(long sequenceId, byte[] data) throws Exception {
                        Message msg = (Message)wireFormat.unmarshal(new ByteSequence(data));
                        msg.getMessageId().setBrokerSequenceId(sequenceId);
                        msg.getMessageId().setFutureOrSequenceLong(sequenceId);
                        msg.getMessageId().setEntryLocator(sequenceId);
                        listener.recoverMessage(msg);
                        trackLastRecovered(sequenceId, msg.getPriority());
                        return true;
                }{code}

... so the resultset iterator in DefaultJDBCAdapter::doRecoverNextMessages never jumps into the else branch to abort loading/recovering messages (at line 1093 currently) {code:java}                while (rs.next() && count < maxReturned) {
                    if (listener.recoverMessage(rs.getLong(1), getBinaryData(rs, 2))) {
                        count++;
                    } else {
                        LOG.debug(""Stopped recover next messages"");
                        break;
                    }
                }{code}

I did a workaround by subclassing the TransactJDBCAdapter and then wrapping the listener to impose my own limit (however this is a separately configured limit; it is not coupled with the memory limits of the broker or the queue, so it is more a workaround than a solution; but it avoids customizing activeMQ code, the workaround is in our own product code.

My suggested improvement is:
* build the listener.hasSpace() (or rather the new {{canRecoveryNextMessage()}}) as was done for KahaDB in AMQ-7126
* AND do statement.cancel() if the listener does not have the space, to avoid performance trouble, see below.

h3. Explanation that leads to the suggestion to do statement.cancel() if listener.hasSpace() (or rather the new {{canRecoveryNextMessage()}}) returns false.
When the recover() produced fewer than requested messages due to size restrictions (e.g. it produced 10 messages instead of 200 because they were large) I noticed delays from consumer perspective of 4 seconds (with local sql server on ssd, so must be higher with clustered SQL server...). It appeared to be taking a long time to close the resultset. The answer is that the resultset needs to be exhausted during rs.close() because otherwise the connection can't be reused later. 

Source: someone asked this on the msft forum in 2009: {quote}I'm encountering a strange issue with the ResultSet.close() command with the new 2.0 jdbc drivers (not the JDBC 4.0 version). 

If I run a query that returns a large result set and just iterate through the first couple of rows and then attempt to call close() on the result set the close() call hangs for quite some time insted of closing almost instantly as past versions of the driver have done with this same code. {quote} and then David Olix responded saying that it's expected behavior in SQL Server driver as of 2.0, and suggested to cancel the sql statement. {quote}Hi,

Thank you for considering the SQL Server JDBC Driver 2.0.  And thank you for your post.  It illustrates a very interesting point about data retrieval with the 2.0 driver...

Short answer:
The behavior you are seeing is expected in the default configuration of the 2.0 driver.  You should be able to revert to the previous behavior by setting the connection property ""responseBuffering=full"".  But read on for why that may not be your best solution...

Long answer:
When SQL Server returns a large number of rows from a SELECT query, the JDBC driver must process all of them to be able to execute the next query on the same connection.  Retrieving those rows from the server can take a substantial amount of time, especially over a slower network connection.  By default, older versions of the driver retrieved all of the rows into memory when the statement was executed.  The 1.2 driver introduced a new optional behavior called adaptive response buffering, which allows the driver to retrieve row data (and other results) from the server as the application accesses/demands it.  The benefit of adaptive buffering is lower client side memory usage -- much lower for large result sets -- with amortized latency across ResultSet accessor methods for apps that process all the result data in the order returned.  The 2.0 driver uses adaptive response buffering by default.  In your case, the app accesses only the first few rows.  So ResultSet.close() takes longer because it must read and discard the rest of the rows.

That raises the question:
If your application is only interested in the first few rows, why does your query return thousands of them?

Performance and client-side memory usage would be much improved if you can structure the query to return only the potentially interesting rows.  Put another way, it's best not to query for data that you're not going to use.

If that is not an option, and you have no other choice but to query for all of the rows, there are other options that may yield improved performance still:

Consider cancelling the statement before closing the ResultSet.  Cancelling tells the driver to notify the server that it is not interested in any execution results (including remaining rows) that haven't already been received.  You have to weigh the cost of cancellation, which incurs a short round trip request/response to the server, against the cost of receiving the rest of the rows when using this technique, but it sounds like it would be a definite win if there are tens of thousands of rows left.

Or consider using a server-side cursor when executing the query.  You can do this by specifying com.microsoft.sqlserver.jdbc.SQLServerResultSet.TYPE_SS_SERVER_CURSOR_FORWARD_ONLY rather than java.sql.ResultSet.TYPE_FORWARD_ONLY for the scrollability parameter to the createStatement()/prepareStatement() call.  Server-side cursors allow the driver to retrieve rows a few at a time.  There's a cost with server cursors too: a round trip to fetch each block of rows.  But closing the ResultSet closes the server cursor at which point no further rows are returned.  But before using a server cursor, make sure the query is cursorable, or SQL Server will just return all the rows anyway...

The last option is the one from the short answer: use full response buffering rather than adaptive response buffering.  This may be the least desirable solution, however, since the app still has to wait for all the rows to be received from the server (in executeQuery() though, rather than ResultSet.close()).  But rather than discarding the uninteresting rows, it has to buffer them, which could lead to an OutOfMemoryError if the result set is large enough.

HTH,
--David Olix [SQL Server]{quote}
Source (not sure if URL is stable, hence the full quote): https://social.msdn.microsoft.com/Forums/security/en-US/7ceee9a8-09d8-4fbd-9918-0ca065fa182e/resultsetclose-hangs-with-new-jdbc-20?forum=sqldataaccess",,jbonofre,jira-bot,rverheij,,,,,,,,,"jbonofre commented on pull request #494: [AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store
URL: https://github.com/apache/activemq/pull/494
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/20 05:22;githubbot;600","jbonofre commented on pull request #494: [AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store
URL: https://github.com/apache/activemq/pull/494
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/20 16:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed May 20 14:21:23 UTC 2020,,,,,,,,,,,"0|z0az3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/20 15:58;jbonofre;Thanks for the detailed report. I won't have time to include a fix for 5.15.12 or 5.16.0. Then, I will work on a fix for the next releases (5.15.13 and 5.16.1).

I do my best if I can implement this quickly.;;;","03/Mar/20 05:23;jbonofre;As we are very close to 5.15.12 and 5.16.0 releases, I did a first very simple and quick fix on the JDBC message store. It's maybe not perfect but it already addresses the memory consumption issue.;;;","03/Mar/20 16:13;jira-bot;Commit dcd3d5db3f14fbdb74d9595360033988405cce79 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dcd3d5d ]

[AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store
;;;","03/Mar/20 16:13;jira-bot;Commit b9426d6c00213383790adf456d51b1e1bb62ec66 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b9426d6 ]

Merge pull request #494 from jbonofre/AMQ-7394

[AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store;;;","03/Mar/20 16:13;jira-bot;Commit b9426d6c00213383790adf456d51b1e1bb62ec66 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b9426d6 ]

Merge pull request #494 from jbonofre/AMQ-7394

[AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store;;;","03/Mar/20 16:13;jira-bot;Commit fef5b079868979ee40762c611a977f5f6d0cc6f1 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fef5b07 ]

[AMQ-7394] Simple first fix to use listener.hasSpace() when recovering message from JDBC message store

(cherry picked from commit dcd3d5db3f14fbdb74d9595360033988405cce79)
;;;","04/Mar/20 06:16;rverheij;Hello [~jbonofre].

Thank you very much for picking this up.

I have two questions, for which the answers may relate to the 'quick fix' which was done now, as opposed to a full fix later.
 # I saw that the code change now has the 'listener.hasSpace()' condition. When I reported this JIRA I was comparing the code to the fix of AMQ-7126, where the method 'canRecoveryNextMessage()' was introduced, which checked for 'parent.hasSpace(90)'. I did not see similar code in this commit for the SQL store for this jira yet.
 # In my report I mentioned that aborted result sets will be fully consumed if you do not do the 'statement.cancel()', leading to a lot of useless network traffic and other resource use. I quoted and successfully used the statement.cancel() to prevent this. I think this is an essential part of the full story of this bug; so the loading of messages must stop in time for the memory limits, and also the statement.cancel() must be done to make the mechanism quick w.r.t. the not-consumed part of the resultset.

Please comment about these two points. If the future work which you referred when you wrote _{{Then, I will work on a fix for the next releases (5.15.13 and 5.16.1).}}_ is covered in another JIRA or 'tasks list' then it is fine too, it may just be my limited understanding of the activeMQ project organisation.

Regards, 
Reinald Verheij;;;","20/May/20 14:16;jira-bot;Commit 96fa8458ce9d2dc23a1cfc429611b3c334ea5194 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=96fa845 ]

[AMQ-7394] use canRecoveryNextMessage to base blocking on shared usage, the existing fix regressed AMQ5266Test
;;;","20/May/20 14:21;jira-bot;Commit 48c6a370946df2bff09407580ec3db4ca6391da9 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=48c6a37 ]

[AMQ-7394] use canRecoveryNextMessage to base blocking on shared usage, the existing fix regressed AMQ5266Test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use correct type for collections retrieval,AMQ-7376,13280601,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,coheigea,coheigea,20/Jan/20 18:34,09/Feb/20 07:39,13/Jul/23 08:27,09/Feb/20 07:39,,,,,5.15.12,5.16.0,,Broker,,,,,0,,,,,"There are a few instances where we are using the wrong (object) type with collections:
 * Queue - browserDispatches.remove(sub) will always fail as the list holds different objects
 * KahaDbStore - storeCache.get(convert(activeMQDestination)) will always fail as the destination needs to be converted to a key first
 * MQTTProtocolConverter - activeMQDestinationMap.get(command.topicName()) - should be using toString() here instead.",,coheigea,jira-bot,,,,,,,,,,"coheigea commented on pull request #428: AMQ-7376 - Use correct type for collections retrieval
URL: https://github.com/apache/activemq/pull/428
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 18:35;githubbot;600","jbonofre commented on issue #428: AMQ-7376 - Use correct type for collections retrieval
URL: https://github.com/apache/activemq/pull/428#issuecomment-583235738
 
 
   It seems that this change is causing issue at least in Spring support. I'm investigating.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 05:03;githubbot;600","jbonofre commented on issue #428: AMQ-7376 - Use correct type for collections retrieval
URL: https://github.com/apache/activemq/pull/428#issuecomment-583235738
 
 
   It seems that this change is causing issue at least in Spring support. I'm investigating.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 05:05;githubbot;600","jbonofre commented on pull request #428: AMQ-7376 - Use correct type for collections retrieval
URL: https://github.com/apache/activemq/pull/428
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/20 07:33;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sun Feb 09 07:39:25 UTC 2020,,,,,,,,,,,"0|z0ap5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Feb/20 07:33;jira-bot;Commit 675fb7bcae3a84c9fcbb1e35506fd688066fc59e in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=675fb7b ]

AMQ-7376 - Use correct type for collections retrieval
;;;","09/Feb/20 07:33;jira-bot;Commit 6417d62f60e4a3522f7369d4c9df574c012fcf45 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6417d62 ]

Merge pull request #428 from coheigea/AMQ-7376

AMQ-7376 - Use correct type for collections retrieval;;;","09/Feb/20 07:33;jira-bot;Commit 6417d62f60e4a3522f7369d4c9df574c012fcf45 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6417d62 ]

Merge pull request #428 from coheigea/AMQ-7376

AMQ-7376 - Use correct type for collections retrieval;;;","09/Feb/20 07:39;jira-bot;Commit ccbc77aae13d16ed505befc7f0fd49337d8fe293 in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ccbc77a ]

AMQ-7376 - Use correct type for collections retrieval

(cherry picked from commit 675fb7bcae3a84c9fcbb1e35506fd688066fc59e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
jolokia-core-1.6.0.jar is vulnerable to CVE-2018-10899,AMQ-7373,13277140,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,hkasarla,hkasarla,02/Jan/20 06:23,22/Jan/20 12:45,13/Jul/23 08:27,22/Jan/20 12:45,5.15.10,5.15.11,5.15.8,5.15.9,5.15.12,5.16.0,,Web Console,,,,,0,,,,,"jolokia-core-1.6.0.jar is vulnerable to CVE-2018-10899

*PATH:*apache-activemq-5.15.11/lib/web/jolokia-core-1.6.0.jar

 

*CVE-2018-10899*
CVSSv3 Score: 8.8
[https://nvd.nist.gov/vuln/detail/CVE-2018-10899] ",,hkasarla,jira-bot,,,,,,,,,,"coheigea commented on pull request #427: AMQ-7373 - Updating Jolokia
URL: https://github.com/apache/activemq/pull/427
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 18:34;githubbot;600","jbonofre commented on pull request #427: AMQ-7373 - Updating Jolokia
URL: https://github.com/apache/activemq/pull/427
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/20 12:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 22 12:45:37 UTC 2020,,,,,,,,,,,"0|z0a4ig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"22/Jan/20 12:45;jira-bot;Commit 08267c4f67426509eacb91993849c0eca07d962c in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=08267c4 ]

AMQ-7373 - Updating Jolokia
;;;","22/Jan/20 12:45;jira-bot;Commit ff525a5fb969d10d79b8f69ffc10df58fda85da8 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ff525a5 ]

Merge pull request #427 from coheigea/AMQ-7373

[AMQ-7373] Updating Jolokia;;;","22/Jan/20 12:45;jira-bot;Commit ff525a5fb969d10d79b8f69ffc10df58fda85da8 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ff525a5 ]

Merge pull request #427 from coheigea/AMQ-7373

[AMQ-7373] Updating Jolokia;;;","22/Jan/20 12:45;jira-bot;Commit 0fc5227c0253be675d64b1f5c3364db295dbf931 in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0fc5227 ]

AMQ-7373 - Updating Jolokia

(cherry picked from commit 08267c4f67426509eacb91993849c0eca07d962ct)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Performance issue on PostgreSQL when we have lot of pending messages,AMQ-7368,13275090,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,17/Dec/19 20:39,29/Feb/20 06:06,13/Jul/23 08:27,29/Feb/20 06:06,5.15.10,5.15.11,5.15.9,,5.15.12,5.16.0,,JDBC,,,,,0,,,,,"In Statements.java, we have the following query:
{code:java}
public String getFindNextMessagesStatement() {
    if (findNextMessagesStatement == null) {
        findNextMessagesStatement = ""SELECT ID, MSG FROM "" + getFullMessageTableName()
                                    + "" WHERE CONTAINER=? AND ID < ? AND ID > ? AND XID IS NULL ORDER BY ID"";
    }
    return findNextMessagesStatement;
} {code}
This statement is used in {{DefaultJDBCAdapter}} in the {{doRecoverNextMessages()}}.

In this method, we do:
{code:java}
s.setMaxRows(Math.min(maxReturned, maxRows)); {code}
{{setMaxRows}} is supposed to limit the number of rows. However, it doesn't seem to prevent the concrete SQL executed on the database side.

It means that we have a huge huge impact on performance (especially with lot of pending messages).



To avoid this performance issue, the findNextMessagesStatement select statement should use limit (with the same value of {{setMaxRows}}).

As it's more ""postgresql"" specific (any database supporting limit should do the same), we can update PostgreSQLJDBCAdapter to use limit.

It's not yet fully clear to me if the issue if about the PostgreSQL JDBC driver (bad ""translation"" of the {{setMaxRows()}}) or just the ActiveMQ select statement should use limit. ",,cshannon,fcurvat,gtully,jbonofre,jira-bot,,,,,,,"jbonofre commented on pull request #480: [AMQ-7368] Add limitQuery in HSQL, MySQL and PostgreSQL JDBC adapters
URL: https://github.com/apache/activemq/pull/480
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 19:35;githubbot;600","jbonofre commented on pull request #480: [AMQ-7368] Add limitQuery in HSQL, MySQL and PostgreSQL JDBC adapters
URL: https://github.com/apache/activemq/pull/480
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Feb/20 06:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,AMQ-6770,,,,,,,,AMQ-6049,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Feb 29 06:06:38 UTC 2020,,,,,,,,,,,"0|z09rvc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Dec/19 20:40;jbonofre;[~gtully] [~cshannon] any thought about this one ? I'm more thinking about an issue on the PostgreSQL JDBC driver, but I would like to have your thoughts.;;;","17/Dec/19 20:42;jbonofre;By the way, with a huge number of messages, it can end with a broker completely stuck as all the time is spent on the SELECT query.;;;","17/Dec/19 21:03;jbonofre;It seems that PostgreSQL driver is doing the ""unlimited"" query and then remove the ""extra"" rows (above max rows) from the result set (so once the query has been executed). In the case of PostgreSQL (at least), we should use the limit clause.;;;","18/Dec/19 08:50;gtully;there was a generic limitQuery statement added in https://issues.apache.org/jira/browse/AMQ-6049 b/c the oracle driver was doing the same thing, fetching and discarding.
It may make sense to use that in this case and override for PostgreSQL

but in general, any database specific sql needs to go in the individual drivers;;;","18/Dec/19 11:09;cshannon;I agree with Gary, probably makes the most sense to override the limitQuery method inside of PostgresqlJDBCAdapter and add a custom limit query for Postgress just like AMQ-6049 did for Oracle;;;","18/Dec/19 13:41;jbonofre;Thanks for the feedback. It's what I already did: settings limit in the JDBC PostgreSQL adapter.;;;","29/Feb/20 06:05;jira-bot;Commit 61bf624c6dd5a999dc9dd1f900bffc6c4feb9fa1 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=61bf624 ]

[AMQ-7368] Add limitQuery in HSQL, MySQL and PostgreSQL JDBC adapters
;;;","29/Feb/20 06:05;jira-bot;Commit 9200f79982b791202729ed522d3d7f25ceaecd4a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9200f79 ]

Merge pull request #480 from jbonofre/AMQ-7368

[AMQ-7368] Add limitQuery in HSQL, MySQL and PostgreSQL JDBC adapters;;;","29/Feb/20 06:05;jira-bot;Commit 9200f79982b791202729ed522d3d7f25ceaecd4a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9200f79 ]

Merge pull request #480 from jbonofre/AMQ-7368

[AMQ-7368] Add limitQuery in HSQL, MySQL and PostgreSQL JDBC adapters;;;","29/Feb/20 06:06;jira-bot;Commit 330b8e8431f68d3c2f77b0d052a7b347543eb72b in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=330b8e8 ]

[AMQ-7368] Add limitQuery in HSQL, MySQL and PostgreSQL JDBC adapters

(cherry picked from commit 61bf624c6dd5a999dc9dd1f900bffc6c4feb9fa1)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update to Pax URL 2.6.2,AMQ-7357,13271260,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,coheigea,coheigea,28/Nov/19 16:05,23/Jan/20 07:14,13/Jul/23 08:27,23/Jan/20 07:14,,,,,5.15.12,5.16.0,,Broker,OSGi/Karaf,,,,0,,,,,"This task is to update Pax URL to get rid of:

pax-url-aether-2.6.1.jar/META-INF/maven/org.codehaus.plexus/plexus-utils/pom.xml (pkg:maven/org.codehaus.plexus/plexus-utils@3.0.17, cpe:2.3:a:plexus-utils_project:plexus-utils:3.0.17:*:*:*:*:*:*:*) : Directory traversal in org.codehaus.plexus.util.Expand, Possible XML Injection",,coheigea,jira-bot,,,,,,,,,,"coheigea commented on pull request #425: AMQ-7357 - Update Pax URL
URL: https://github.com/apache/activemq/pull/425
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Nov/19 16:06;githubbot;600","jbonofre commented on issue #425: AMQ-7357 - Update Pax URL
URL: https://github.com/apache/activemq/pull/425#issuecomment-577533254
 
 
   For the record (and next time ;) ), it would be great to set the target version in the commit comment.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 07:02;githubbot;600","jbonofre commented on pull request #425: AMQ-7357 - Update Pax URL
URL: https://github.com/apache/activemq/pull/425
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 07:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jan 23 07:14:27 UTC 2020,,,,,,,,,,,"0|z0948g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Jan/20 07:13;jira-bot;Commit 0891526c26bd2f549dc6f3271466cd392a752068 in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0891526 ]

AMQ-7357 - Update Pax URL
;;;","23/Jan/20 07:13;jira-bot;Commit 52816ef55d1423461c18e1e04090517714d0ff91 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=52816ef ]

Merge pull request #425 from coheigea/AMQ-7357

[AMQ-7357] Update to Pax URL 2.6.2;;;","23/Jan/20 07:13;jira-bot;Commit 52816ef55d1423461c18e1e04090517714d0ff91 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=52816ef ]

Merge pull request #425 from coheigea/AMQ-7357

[AMQ-7357] Update to Pax URL 2.6.2;;;","23/Jan/20 07:14;jira-bot;Commit 40d5b9131a88e615a424aefeae04101855e9bf74 in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=40d5b91 ]

[AMQ-7357] Update to Pax URL 2.6.2

(cherry picked from commit 0891526c26bd2f549dc6f3271466cd392a752068)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Rare NPE during marshal, killing async dispatch task and potentially leaving un-marshal cache invalid",AMQ-7353,13270759,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Nov/19 16:41,23/Oct/20 09:45,13/Jul/23 08:27,26/Nov/19 17:04,5.15.0,,,,5.16.0,,,Broker,Transport,,,,0,,,,,"On occasion the following NPE occurs:

{code}
Error in thread 'ActiveMQ BrokerService[..] Task-243' Class org.apache.activemq.thread.TaskRunnerFactory$1$1
Method uncaughtException
Throwable java.lang.NullPointerException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.activemq.transport.nio.NIOOutputStream.write(NIOOutputStream.java:113)
	at java.io.DataOutputStream.write(DataOutputStream.java:107)
	at org.apache.activemq.openwire.v10.BaseDataStreamMarshaller.tightMarshalByteSequence2(BaseDataStreamMarshaller.java:431)
	at org.apache.activemq.openwire.v10.MessageMarshaller.tightMarshal2(MessageMarshaller.java:183)
	at org.apache.activemq.openwire.v10.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:89)
	at org.apache.activemq.openwire.v10.ActiveMQBytesMessageMarshaller.tightMarshal2(ActiveMQBytesMessageMarshaller.java:89)
	at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject2(OpenWireFormat.java:417)
	at org.apache.activemq.openwire.v10.BaseDataStreamMarshaller.tightMarshalNestedObject2(BaseDataStreamMarshaller.java:135)
	at org.apache.activemq.openwire.v10.MessageDispatchMarshaller.tightMarshal2(MessageDispatchMarshaller.java:105)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:227)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:175)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:116)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1456)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:966)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:1016)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
	{code}",,gtully,jira-bot,mstratto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7245,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 23 09:45:52 UTC 2020,,,,,,,,,,,"0|z09154:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Nov/19 16:46;gtully;I added the causes relation here to https://issues.apache.org/jira/browse/AMQ-7245 but it could be relates to, however depending on what happens next the client may see a read error or an invalid marshal cache on the next command, leading to ClassCastException etc. The connection may not always terminate due to the NPE in a timely manner and during the working part of the marshal the broker side cache can be populated, but the command never completed, leaving the other end (un marshal cache) out of sync.

If the symptoms of AMQ-7245 have a corresponding error on NPE on the broker side, which is my suspicion, I think this is the root cause.;;;","26/Nov/19 16:59;jira-bot;Commit 5a0c853ba0e2ade0b29fa4319857bd8a557995e4 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5a0c853 ]

AMQ-7353 - fix visibility of marshalledProperties to ensure competing threads don't see partial objects in error. Little test case that demonstrates the problem in isolation
;;;","22/Oct/20 16:00;mstratto;[~gtully] any idea if this fix was backported into a Red Hat GA build of activemq? I am seeing a very similar stack trace in versions 5.11.0.redhat-630371 and 5.11.0.redhat-630475:

```
2020-10-22 11:39:02,815 ERROR [ActiveMQ BrokerService[umb-node0-EaTtvz-001] Task-3] o.a.a.t.TaskRunnerFactory$1$1.uncaughtException:182 - Error in thread 'ActiveMQ BrokerService[umb-node0-EaTtvz-001] Task-3' java.lang.NullPointerException: null at org.apache.activemq.openwire.v10.BaseDataStreamMarshaller.tightMarshalByteSequence2(BaseDataStreamMarshaller.java:430) at org.apache.activemq.openwire.v10.MessageMarshaller.tightMarshal2(MessageMarshaller.java:182) at org.apache.activemq.openwire.v10.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:89) at org.apache.activemq.openwire.v10.ActiveMQTextMessageMarshaller.tightMarshal2(ActiveMQTextMessageMarshaller.java:89) at org.apache.activemq.openwire.OpenWireFormat.tightMarshalNestedObject2(OpenWireFormat.java:417) at org.apache.activemq.openwire.v10.BaseDataStreamMarshaller.tightMarshalNestedObject2(BaseDataStreamMarshaller.java:135) at org.apache.activemq.openwire.v10.MessageDispatchMarshaller.tightMarshal2(MessageDispatchMarshaller.java:105) at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:227) at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:175) at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335) at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317) at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85) at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:116) at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68) at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1456) at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:966) at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:1016) at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133) at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)
```

In particular we are getting this in a unit test for a broker network (broker A <-> broker B) with a topic producer on broker A and a topic consumer on broker B. Both these brokers are running in memory on the same JVM for the purposes of the test. We also tested with both producer and consumer on the same cluster and can reproduce. It also prompted me to check our staging environment where we have our current network of broker configuration sitting for QA (running amq version 5.11.0.redhat-630371), for some reason my logs dont have a stack trace but I am pretty sure this is the same problem since their appearance is correlated to when we switched from a single broker to a network of brokers:

```

2020-10-22T11:21:13.844-0400 ERROR 28028 --- [ActiveMQ BrokerService[HOSTNAME-REDACTED] Task-3498] o.a.activemq.thread.TaskRunnerFactory : Error in thread 'ActiveMQ BrokerService[HOSTNAME-REDACTED] Task-3498' java.lang.NullPointerException: null

```

 

Is this the same issue and its just not fixed in the Red Hat build, or a similar issue maybe that needs to be investigated?;;;","23/Oct/20 09:45;gtully;[~mstratto] that fix would have been back ported for sure. There must be some additional problem at play.

 

Can you share your unit test? Comments on  AMQ-7245 point to topics being necessary which seems to correlate.

 

If there is something that can reproduce the issue it would be a great help.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary stack trace in case of invalid selector,AMQ-7347,13269532,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,lionel.cons,lionel.cons,20/Nov/19 08:31,10/Mar/20 06:21,13/Jul/23 08:27,10/Mar/20 06:21,,,,,5.15.12,5.16.0,,STOMP,,,,,0,,,,,"When using an invalid selector in STOMP, ActiveMQ logs a full stack trace:
{code:java}
2019-11-20 09:23:57,842 [ActiveMQ NIO Worker 26] ERROR TopicRegion - Failed to create TopicSubscription 
javax.jms.InvalidSelectorException: foo.bar = 'good'
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:88)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:58)
	at org.apache.activemq.broker.region.AbstractSubscription.parseSelector(AbstractSubscription.java:75)
	at org.apache.activemq.broker.region.AbstractSubscription.<init>(AbstractSubscription.java:68)
	at org.apache.activemq.broker.region.TopicSubscription.<init>(TopicSubscription.java:73)
	at org.apache.activemq.broker.region.TopicRegion.createSubscription(TopicRegion.java:361)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:188)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:418)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:240)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.security.AuthorizationBroker.addConsumer(AuthorizationBroker.java:183)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:703)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:352)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:177)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:646)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:235)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.activemq.selector.TokenMgrError: Lexical error at line 1, column 5.  Encountered: ""b"" (98), after : "".""
	at org.apache.activemq.selector.SelectorParserTokenManager.getNextToken(SelectorParserTokenManager.java:1053)
	at org.apache.activemq.selector.SelectorParser.jj_scan_token(SelectorParser.java:1271)
	at org.apache.activemq.selector.SelectorParser.jj_3_7(SelectorParser.java:946)
	at org.apache.activemq.selector.SelectorParser.jj_2_7(SelectorParser.java:658)
	at org.apache.activemq.selector.SelectorParser.unaryExpr(SelectorParser.java:458)
	at org.apache.activemq.selector.SelectorParser.multExpr(SelectorParser.java:392)
	at org.apache.activemq.selector.SelectorParser.addExpression(SelectorParser.java:361)
	at org.apache.activemq.selector.SelectorParser.comparisonExpression(SelectorParser.java:213)
	at org.apache.activemq.selector.SelectorParser.equalityExpression(SelectorParser.java:158)
	at org.apache.activemq.selector.SelectorParser.andExpression(SelectorParser.java:137)
	at org.apache.activemq.selector.SelectorParser.orExpression(SelectorParser.java:116)
	at org.apache.activemq.selector.SelectorParser.JmsSelector(SelectorParser.java:107)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:85)
	... 42 more
{code}
First of all, a single line containing the error message ({{javax.jms.InvalidSelectorException: foo.bar = 'good'}}) is enough. The stack trace is not needed.

Then, connection information (e.g. IP address) would be very useful to track down the culprit.",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre commented on pull request #497: [AMQ-7347] Don't log error in case of topic subscription failure (use debug)
URL: https://github.com/apache/activemq/pull/497
 
 
   The error log message iss useless as the JMX exception is thrown and pollute the log. I'm using debug instead.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/20 06:24;githubbot;600","jbonofre commented on pull request #497: [AMQ-7347] Don't log error in case of topic subscription failure (use debug)
URL: https://github.com/apache/activemq/pull/497
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/20 16:56;githubbot;600","jbonofre commented on pull request #506: [AMQ-7347] Fix potential NPE when JMSException doesn't contain linkedException
URL: https://github.com/apache/activemq/pull/506
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 05:24;githubbot;600","jbonofre commented on pull request #506: [AMQ-7347] Fix potential NPE when JMSException doesn't contain linkedException
URL: https://github.com/apache/activemq/pull/506
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 06:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,AMQ-7433,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Mar 10 06:21:11 UTC 2020,,,,,,,,,,,"0|z08tkg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Mar/20 17:40;jbonofre;Fixed with AMQ-7433;;;","04/Mar/20 05:55;jbonofre;I've just tested a STOMP client with a ""bad"" selector, and I can see the following on the log:
{code:java}
WARN | Exception occurred processing: SUBSCRIBE -> javax.jms.InvalidSelectorException: foo.bar = 'good' {code}
So, I can see a single WARN line. It's with the stomp connector (not NIO or SSL), I'm testing with NIO now.;;;","04/Mar/20 05:57;jbonofre;Same with NIO:
{code:java}
 WARN | Exception occurred processing: SUBSCRIBE -> javax.jms.InvalidSelectorException: foo.bar = 'good' {code};;;","04/Mar/20 05:59;jbonofre;I'm able to reproduce the problem when connecting to a topic (I tested with a queue). When connecting to a topic, I have the following in the log:
{code:java}
  WARN | Exception occurred processing: SUBSCRIBE -> javax.jms.InvalidSelectorException: foo.bar = 'good'
ERROR | Failed to create TopicSubscription
javax.jms.InvalidSelectorException: foo.bar = 'good'
        at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:88)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:58)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.AbstractSubscription.parseSelector(AbstractSubscription.java:75)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.AbstractSubscription.<init>(AbstractSubscription.java:68)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.TopicSubscription.<init>(TopicSubscription.java:73)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.TopicRegion.createSubscription(TopicRegion.java:361)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:379)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:188)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:418)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:240)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:131)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:104)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:703)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:352)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)[activemq-broker-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)[activemq-stomp-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:177)[activemq-stomp-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:646)[activemq-stomp-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:235)[activemq-stomp-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)[activemq-stomp-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[activemq-client-5.15.12-SNAPSHOT.jar:5.15.12-SNAPSHOT]
        at java.lang.Thread.run(Thread.java:748)[:1.8.0_241]
 WARN | Exception occurred processing: SUBSCRIBE -> javax.jms.JMSException: Couldn't create TopicSubscription{code}
So, we have the ""correct"" WARN message, but also the error from TopicSubscription.;;;","04/Mar/20 09:14;jbonofre;I'm adding the client IP/port using the TransportContext (PR will be updated) when it's not null.;;;","04/Mar/20 16:58;jira-bot;Commit 3c302dce33500cd8e36f626af333ce208ebc44a0 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3c302dc ]

[AMQ-7347] Don't log error in case of topic subscription failure. It's useless as the JMX exception is thrown and pollute the log.
;;;","04/Mar/20 16:58;jira-bot;Commit 93f8ea1b8b67ba7d286d4c900e6f7feb60e15651 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=93f8ea1 ]

Merge pull request #497 from jbonofre/AMQ-7347

[AMQ-7347] Don't log error in case of topic subscription failure (use debug);;;","04/Mar/20 16:58;jira-bot;Commit 93f8ea1b8b67ba7d286d4c900e6f7feb60e15651 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=93f8ea1 ]

Merge pull request #497 from jbonofre/AMQ-7347

[AMQ-7347] Don't log error in case of topic subscription failure (use debug);;;","04/Mar/20 16:58;jira-bot;Commit 45ddc6630515971769eafa6c19778581aaa75f99 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=45ddc66 ]

[AMQ-7347] Don't log error in case of topic subscription failure. It's useless as the JMX exception is thrown and pollute the log.

(cherry picked from commit 3c302dce33500cd8e36f626af333ce208ebc44a0)
;;;","09/Mar/20 15:15;jbonofre;The fix implemented there can raise a NPE as the linked exception can be null.;;;","10/Mar/20 06:20;jira-bot;Commit 58f5fdb572520a1b0565ab831657a2cba7e5abcb in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=58f5fdb ]

[AMQ-7347] Fix potential NPE when JMSException doesn't contain linkedException
;;;","10/Mar/20 06:20;jira-bot;Commit 80b92d3ae967f2fc39a5275de6a51754bd013470 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=80b92d3 ]

Merge pull request #506 from jbonofre/AMQ-7347

[AMQ-7347] Fix potential NPE when JMSException doesn't contain linkedException;;;","10/Mar/20 06:20;jira-bot;Commit 80b92d3ae967f2fc39a5275de6a51754bd013470 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=80b92d3 ]

Merge pull request #506 from jbonofre/AMQ-7347

[AMQ-7347] Fix potential NPE when JMSException doesn't contain linkedException;;;","10/Mar/20 06:21;jira-bot;Commit d415447a3864c3f447b457015f8220f8d7ca3737 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d415447 ]

[AMQ-7347] Fix potential NPE when JMSException doesn't contain linkedException

(cherry picked from commit 58f5fdb572520a1b0565ab831657a2cba7e5abcb)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary stack trace in DemandForwardingBridgeSupport,AMQ-7346,13269248,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,lionel.cons,lionel.cons,19/Nov/19 06:54,04/Mar/20 20:43,13/Jul/23 08:27,04/Mar/20 20:43,,,,,5.15.12,5.16.0,,Network of Brokers,,,,,0,,,,,"In case the broker at the remote end of a bridge is restarted, ActiveMQ logs:
{code}
2019-11-19 07:20:07,403 [ActiveMQ Transport: ssl://amq148.acme.com/192.161.2.43:6166] WARN DemandForwardingBridgeSupport - Network connection between vm://amq115.acme.com#4 and ssl://amq148.acme.com/192.161.2.43:6166 shutdown due to a remote error: {}
java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:392)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:240)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:232)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
	at java.lang.Thread.run(Thread.java:748)
{code}

This should rather be:
{code}
2019-11-19 07:20:07,403 [ActiveMQ Transport: ssl://amq148.acme.com/192.161.2.43:6166] WARN DemandForwardingBridgeSupport - Network connection between vm://amq115.acme.com#4 and ssl://amq148.acme.com/192.161.2.43:6166 shutdown due to a remote error: java.io.EOFException
{code}",,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre commented on pull request #499: [AMQ-7346] Improve logging of the network connector
URL: https://github.com/apache/activemq/pull/499
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/20 16:55;githubbot;600","jbonofre commented on pull request #499: [AMQ-7346] Improve logging of the network connector
URL: https://github.com/apache/activemq/pull/499
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/20 20:42;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,AMQ-7433,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 04 20:43:39 UTC 2020,,,,,,,,,,,"0|z08rtc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Mar/20 17:06;jbonofre;Fixed with AMQ-7433;;;","03/Mar/20 17:51;jbonofre;Generally speaking, if there's an exception, it makes sense to display the stack trace (it's the only way to investigate an issue).

However, if your issue is related to logstash/filebeat, I now changed to use {{EnhancedPatternLayout}} in {{conf/log4j.properties}}. Thanks to that, you can now use {{ConversionPattern}} like:
{code:java}
log4j.appender.logfile.layour.ConversionPattern=%d | %-5p | %m | %c | %t%n%replace(%throwable){\n}{ } {code};;;","04/Mar/20 20:42;jira-bot;Commit 3c4a644f3d6e5a21dee907928aa611902312df16 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3c4a644 ]

[AMQ-7346] Improve logging of the network connector
;;;","04/Mar/20 20:42;jira-bot;Commit 7435d7b058d5424e9863576d4e02b3511fb4c47b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7435d7b ]

Merge pull request #499 from jbonofre/AMQ-7346

[AMQ-7346] Improve logging of the network connector;;;","04/Mar/20 20:42;jira-bot;Commit 7435d7b058d5424e9863576d4e02b3511fb4c47b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7435d7b ]

Merge pull request #499 from jbonofre/AMQ-7346

[AMQ-7346] Improve logging of the network connector;;;","04/Mar/20 20:43;jira-bot;Commit ae8df4945079108ae5c411216777eb54e8f02d27 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ae8df49 ]

[AMQ-7346] Improve logging of the network connector

(cherry picked from commit 3c4a644f3d6e5a21dee907928aa611902312df16)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ WebConsole doesn't work on Karaf with Jackson 2.10.x,AMQ-7344,13268846,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,16/Nov/19 14:47,27/May/21 13:39,13/Jul/23 08:27,27/May/21 13:39,,,,,5.15.16,5.16.3,,Web Console,,,,,0,,,,,"Installing {{activemq-broker}} feature on Karaf 4.2.7 starts the broker without problem. However the web console deployment failed with the following exception:
{code:java}
15:46:13.572 ERROR [paxweb-extender-2-thread-1] Error deploying web application
java.lang.NullPointerException: null
        at org.apache.xbean.finder.BundleAssignableClassFinder.toASMStylePackageName(BundleAssignableClassFinder.java:257) ~[?:?]
        at org.apache.xbean.finder.BundleAssignableClassFinder.isClassAcceptable(BundleAssignableClassFinder.java:111) ~[?:?]
        at org.apache.xbean.osgi.bundle.util.BundleClassFinder.scanZip(BundleClassFinder.java:280) ~[?:?]
        at org.apache.xbean.osgi.bundle.util.BundleClassFinder.scanBundleClassPath(BundleClassFinder.java:237) ~[?:?]
        at org.apache.xbean.osgi.bundle.util.BundleClassFinder.find(BundleClassFinder.java:112) ~[?:?]
        at org.ops4j.pax.web.utils.ServletContainerInitializerScanner.scanBundles(ServletContainerInitializerScanner.java:118) ~[?:?]
        at org.ops4j.pax.web.service.jetty.internal.JettyServerWrapper.addContext(JettyServerWrapper.java:292) ~[?:?]
        at org.ops4j.pax.web.service.jetty.internal.JettyServerWrapper.getOrCreateContext(JettyServerWrapper.java:217) ~[?:?]
        at org.ops4j.pax.web.service.jetty.internal.JettyServerImpl.getContext(JettyServerImpl.java:312) ~[?:?]
        at org.ops4j.pax.web.service.jetty.internal.ServerControllerImpl$Started.getContext(ServerControllerImpl.java:373) ~[?:?]
        at org.ops4j.pax.web.service.jetty.internal.ServerControllerImpl.getContext(ServerControllerImpl.java:186) ~[?:?]
        at org.ops4j.pax.web.service.internal.HttpServiceStarted.begin(HttpServiceStarted.java:1246) ~[?:?]
        at org.ops4j.pax.web.service.internal.HttpServiceProxy.begin(HttpServiceProxy.java:451) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.RegisterWebAppVisitorWC.visit(RegisterWebAppVisitorWC.java:183) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.model.WebApp.accept(WebApp.java:621) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.register(WebAppPublisher.java:228) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.addingService(WebAppPublisher.java:173) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.WebAppPublisher$WebAppDependencyListener.addingService(WebAppPublisher.java:129) ~[?:?]
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:941) ~[osgi.core-6.0.0.jar:?]
        at org.osgi.util.tracker.ServiceTracker$Tracked.customizerAdding(ServiceTracker.java:870) ~[osgi.core-6.0.0.jar:?]
        at org.osgi.util.tracker.AbstractTracked.trackAdding(AbstractTracked.java:256) ~[osgi.core-6.0.0.jar:?]
        at org.osgi.util.tracker.AbstractTracked.trackInitial(AbstractTracked.java:183) ~[osgi.core-6.0.0.jar:?]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:318) ~[osgi.core-6.0.0.jar:?]
        at org.osgi.util.tracker.ServiceTracker.open(ServiceTracker.java:261) ~[osgi.core-6.0.0.jar:?]
        at org.ops4j.pax.web.extender.war.internal.WebAppPublisher.publish(WebAppPublisher.java:98) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.WebObserver.deploy(WebObserver.java:217) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.WebObserver$1.doStart(WebObserver.java:172) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.extender.SimpleExtension.start(SimpleExtension.java:59) ~[?:?]
        at org.ops4j.pax.web.extender.war.internal.extender.AbstractExtender.lambda$createExtension$0(AbstractExtender.java:277) ~[?:?]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_172]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_172]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_172]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_172]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_172]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_172]
        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_172]
 {code}",,jbonofre,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7320,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 27 13:39:27 UTC 2021,,,,,,,,,,,"0|z08pcg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"06/Apr/21 05:01;jbonofre;This issue is due to xbean version used in Pax Web with JDK 9+ bundles.;;;","06/Apr/21 05:08;jbonofre;xbean 4.19 and upgraded Pax Web version will fix that.;;;","21/Apr/21 05:30;jbonofre;Next Karaf release will fixed that.;;;","27/May/21 13:39;jbonofre;I confirm that Karaf 4.3.2 and coming 4.2.12 don't have any issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Scheduled messages performance degrade,AMQ-7340,13267139,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,daynews,daynews,08/Nov/19 15:57,03/Jun/22 09:09,13/Jul/23 08:27,19/Jan/22 18:02,,,,,5.16.4,5.17.0,,,,,,,0,,,,,"I have sent lot of scheduled messages with 10ms delay between each to see if the broker can cope with high load of scheduled messages. Sending delayed messages to the queue works fine, however I get a problem when those messages need to be put to the main queue when next schedule time is reached. The rate of putting scheduled messages to the main queue drops drastically at around 1500-3000 messages. I tried to search for a potential cause why this happen, but was not able to indicate anything. Even restarting the broker or cleaning the main queue, the rate of putting scheduled messages stays at ~0.5s leaving many scheduled messages behind. 

Does anyone know a potential cause for his problem? Is this performance bottleneck or insufficient resources or badly configured RabitMQ (I've used default settings).

Thanks for the support.

 ","ActiveMQ broker has been started in a docker container, with (most likely) sufficient allocation of resources.",Chenchrl,daynews,jira-bot,mattrpav,xueweijie,,,,,,,"lucastetreault removed a comment on pull request #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-977679810


   Woops, didn't mean to send this yet! 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/21 03:14;githubbot;600","lucastetreault opened a new pull request #728:
URL: https://github.com/apache/activemq/pull/728


   We recently encountered a similar performance degradation as is described here: https://issues.apache.org/jira/browse/AMQ-7340 
   
   A specific example we encountered was with around 20k messages scheduled very quickly where each message adds 100ms delay times with the previous message.
   Example:
   message 1 > delay time 100ms
   message 2 > delay time 200ms
   message 3 > delay time 300ms
   ...
   message 10,000 >> delay time 1000000ms (1000s)
   ...
   message 20,000 >> delay time 2000000ms (2000s)
   
   If delivered on schedule all these messages should be moved to the queue within ~33 minutes but we observed that it took nearly 3 hours for all the messages to be moved to the queue. 
   
   After diving deep on the issue it seems the main loop that processes scheduled messages process them by traversing the B+ Tree index from the root to find the leftmost leaf node which contains the messages with the earliest executionTime. This traversal does a disk read at each branch and unmarshals the raw data before moving to the next branch and is not cached for future reads as far as I can tell. The scheduled jobs in that leaf are processed then we repeat the traversal to find the execution time of the next batch of jobs to calculate how long the loop should sleep for. So for every loop, we find the left most node twice, at the start and end of the loop. It seems like this loop can take a long time and we end up falling behind and not being able to catch up since we're processing one node at a time. 
   
   This change still does the traversal from the root node to the leftmost node at the start of the loop but once it finds that leftmost node it will iterate over the leaf nodes sequentially until it finds a job with an execution time greater than the current time. This means that it will always ""catch up"" on every iteration of the loop. The index is locked for the duration of the iteration so there's probably some risk that scheduled messages can't make it in but in practice it doesn't seem like an issue. I ran 100 connections against a broker scheduling messages as fast as they could with 100ms delays as in the example above and I was able to schedule 120k messages within a couple of seconds without any issues. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/21 03:14;githubbot;600","jbonofre commented on pull request #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1013620467


   I'm doing a new pass/test on this one.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jan/22 06:03;githubbot;600","jbonofre merged pull request #728:
URL: https://github.com/apache/activemq/pull/728


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/22 18:01;githubbot;600","lucastetreault commented on pull request #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1016924723


   Thanks JB! 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/22 22:19;githubbot;600","lovemai073 commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1140719463

   Hi
   
   I would like to know if this issue has been published on a specific version? or not yet published?
   I tested on version 5.16.4 and it doesn't seem to be fixed.
   
   Thank you.


;30/May/22 05:36;githubbot;600","jbonofre commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1140724836

   @lovemai073 it has been fixed on 5.17.0 but not backported on 5.16.4. I can include on 5.16.5 if needed. 


;30/May/22 05:47;githubbot;600","lovemai073 commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1140750181

   Hi @jbonofre
   No problem, just follow your schedule is ok.
   I just confirm if this issue was published.
   
   Thanks.


;30/May/22 06:26;githubbot;600","jbonofre commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1140797386

   @lovemai073 I just double checked and actually, the change is included on 5.16.x:
   
   ```
   commit fc7a68a8bcf24492d3b2fe5426d366103b3e0e8f
   Author: Lucas Tétreault <tetlucas@amazon.com>
   Date:   Wed Nov 24 01:06:47 2021 -0800
   
       Use B+ Tree iterator instead of DFS to find scheduled jobs to be executed
       
       (cherry picked from commit 60859b0b7fa93b001ca2b0ac2f2385386cb2f47d)
   
   ```
   
   So, it's included in ActiveMQ 5.16.4.


;30/May/22 07:25;githubbot;600","lovemai073 commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1140954078

   Hi @jbonofre,
   I am used the same test method with the old version 5.15.8 on currently version 5.16.4 and I see that the test results do not improve the schedule delay problem.


;30/May/22 09:58;githubbot;600","jbonofre commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1141031582

   I'm not the author of the change, neither the reviewer. So let me take a look about the change. 


;30/May/22 11:18;githubbot;600","mattrpav commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1141044932

   @lovemai073 what message volume are you using to test? Ie number of messages and average size?  
   
   For that given volume, how long does it take on your system?
   
   


;30/May/22 11:32;githubbot;600","lovemai073 commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1141167833

   My test scenario is the same as mentioned by @lucastetreault.
   - MQ version: Broker engine version 5.16.4
   - Broker instance type: [mq.m5.large](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-instance-types.html#activemq-broker-instance-types)(vCPU:8 memory:8G) host on AWS MQ service.
   - Test case: Test 500ms and 1000ms delayed messages in the 2 different MQ.
   - send message volume is 100,000
   -message size is a string of consecutive numbers (ex: 000000~099999)
   
   #### 1. 500ms：
   Using 100,000 messages, each message delay is accumulated to 500ms. In this case, the consumer can consume the message in about 500~800ms.
   
   #### [The 30,000th time spent]
   ----------
   [2022-05-25 11:46:46.574] 1 ;30/May/22 13:34;githubbot;600","lucastetreault commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1142595809

   @lovemai073, I ran some tests again today to make sure everything was working as I expected. These are against m5.large brokers with EFS storage running on Amazon MQ. 
   
   ### 5.16.3 Broker - 100k messages, 100ms delays
   It took about 40 seconds to schedule all the message and it seems like it's able to keep up for a little bit then falls behind and slows down to ~1.9 msg/s vs. the 10 msg/s that I expect - the change in behaviour a couple of minutes in could be due to EFS throughput burst balance being exhausted.
   
   ```
   2022/05/31 12:20:36 Producer - Start: 2022-05-31T12:19:56-07:00, End: 2022-05-31T12:20:36-07:00, Diff: 40.005111s, Count: 100000
   2022/05/31 12:20:37 [100] Received message ;31/May/22 20:11;githubbot;600","lovemai073 commented on PR #728:
URL: https://github.com/apache/activemq/pull/728#issuecomment-1145761690

   Hi @lucastetreault,
   Thanks for the tip, I noticed that I was missing a main test case.
   I did the following test again with the new MQ environment.
   
   - MQ version: Broker engine version 5.16.4
   - Broker instance type: mq.m5.large(vCPU:8 memory:8G) with EBS host on AWS MQ service.
   - Test case: Test 100ms delayed messages. This is the main issue in the previous version.
   - send message volume is 100,000 via 1 producer
   - message size is a string of consecutive numbers (ex: 000000~099999)
   - consumer: Use 4 consumers, I noticed that delay time is 100ms, which means that the consumer must get 10+ messages in 1 second.
   
   #### Test-1. 100ms with 4 consumer.
   
   The expected time for the message to be consumed
   
   >((100000*100)/1000) / 60 = 166.67mins
   166.67 / 60 = 2.7H
   
   Actual consumption time
   
   >StartTime: 2022-06-02 14:50:13.276
   EndTime:2022-06-02 17:37:39.99
   Total: 2H 48Mins => 168 mins
   
   
   #### Test-2. 100ms with 4 consumer.
   The expected time for the message to be consumed
   >((100000*100)/1000) / 60 = 166.67mins
   166.67 / 60 = 2.7H
   
   Actual consumption time
   >StartTime: 2022-06-03 04:04:45.827
   EndTime:2022-06-03 06:53:35.489
   Total: 2H 48Mins 49sec => 168 mins
   
   ### Summary
   From the above test results, I can be confirmed that the issue has been fixed and the process performance has been improved in the new version.
   
   Thanks for your help, let me notice the missed test case.
   
   


;03/Jun/22 09:09;githubbot;600",,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,"24/Nov/21 22:11;Chenchrl;ScheduleActiveMQ.zip;https://issues.apache.org/jira/secure/attachment/13036570/ScheduleActiveMQ.zip",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 19 18:01:35 UTC 2022,,,,,,,,,,,"0|z08et4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Dec/20 17:58;xueweijie;I also faced this similar issue, when I send a lot of scheduled messages to broker concurrently , the broker dispatchs messages to the consumer slowly , about 2 - 3 qps , confused on this problem . ;;;","03/Mar/21 17:11;mattrpav;Please provide version of ActiveMQ and the configuration file. Also, please specify the CPU and memory allocation for the Docker or Kubernetes configuration.

Reminder-- Java processes generally should not be configured to use less than 1 CPU and generally should have 2 to 4 CPU for optimal balance of throughput and number of total instances.;;;","24/Nov/21 22:24;Chenchrl;[^ScheduleActiveMQ.zip]

Hi, we are also having this issue. In Active MQ version 5.16.3, when broker attribute schedulerSupport is set to true and put around 3000 messages to scheduled, the speed of message move from scheduled to queue reduced. I've tried on m5.large EC2 instance (2 vCPU, 8 GB memory) and locally on my Mac book, the issue exists. 

 

I've attached an example in C# client. In this example, I create 20 producer thread sending schedule message with 10s delay, after running for a while, we can see messages in scheduled page not moving to queue even the 'next scheduled time' has passed.  We have a solution to fix this, will submit PR shortly.;;;","19/Jan/22 18:01;jira-bot;Commit 70e0b3babf07d708064365c400d37cea8a2bfd4b in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=70e0b3b ]

Merge pull request #728 from lucastetreault/scheduler-performance

[AMQ-7340] Improve scheduled message performance;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-osgi bundle doesn't include Camel ActiveMQ component anymore,AMQ-7329,13264869,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,28/Oct/19 17:44,19/Nov/19 10:23,13/Jul/23 08:27,19/Nov/19 10:23,5.15.10,,,,5.15.11,5.16.0,,OSGi/Karaf,,,,,1,,,,,"Before ActiveMQ 5.15.10 (for instance 5.15.9), activemq-osgi bundle embeds ActiveMQ Camel component.

It's not the case in 5.15.10 and could be considered as a regression by users.",,jbonofre,jira-bot,lichtin,,,,,,,,,"jbonofre commented on pull request #418: [AMQ-7329] Fix exclusion in activemq-osgi
URL: https://github.com/apache/activemq/pull/418
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Nov/19 06:50;githubbot;600","jbonofre commented on pull request #418: [AMQ-7329] Fix exclusion in activemq-osgi
URL: https://github.com/apache/activemq/pull/418
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Nov/19 10:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 19 10:23:43 UTC 2019,,,,,,,,,,,"0|z080so:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Nov/19 06:41;jbonofre;The change has been introduced by the following commit:
{code:java}
fd4e399f7c6f81115d1149975e56e5af50274c84 is the first bad commit
commit fd4e399f7c6f81115d1149975e56e5af50274c84
Author: Colm O hEigeartaigh <coheigea@apache.org>
Date:   Thu Jul 11 16:27:57 2019 +0100    Updating Shiro plus some other minor updates:040000 040000 5741a5024358d775170cf410cb841c8891f48d2b 0def5d74309fdf9c4baf14c615cb34d127cb6a20 M      activemq-osgi
:100644 100644 0d3df0b7faf5eb79e89608b14f172fd92a4d72a5 fdbb87fef08bea6ba13550606c591f48dfd65fa4 M      pom.xml {code};;;","19/Nov/19 06:47;jbonofre;The concrete issue is just exclusion which changed. Removing the {{groupId}} fix the issue:
{code:java}
         <exclusion>
-          <groupId>${project.groupId}</groupId>
           <artifactId>activemq-all</artifactId>
         </exclusion>
 {code};;;","19/Nov/19 10:22;jira-bot;Commit ce0fc359ef6868f3d58cb88a34d0cfb0ec2b668e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ce0fc35 ]

[AMQ-7329] Fix exclusion in activemq-osgi
;;;","19/Nov/19 10:22;jira-bot;Commit d826adf7c314fb7d25b0dbb5947e7f007b806d0e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d826adf ]

Merge pull request #418 from jbonofre/AMQ-7329

[AMQ-7329] Fix exclusion in activemq-osgi;;;","19/Nov/19 10:22;jira-bot;Commit d826adf7c314fb7d25b0dbb5947e7f007b806d0e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d826adf ]

Merge pull request #418 from jbonofre/AMQ-7329

[AMQ-7329] Fix exclusion in activemq-osgi;;;","19/Nov/19 10:23;jira-bot;Commit a152a6c3275d2b546b3fdc9c55c6d1cc7d17b392 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a152a6c ]

[AMQ-7329] Fix exclusion in activemq-osgi

(cherry picked from commit ce0fc359ef6868f3d58cb88a34d0cfb0ec2b668e)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP transport connector doesn't limit the message size using maxFrameSize,AMQ-7327,13264420,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,25/Oct/19 06:29,12/Nov/19 16:35,13/Jul/23 08:27,12/Nov/19 16:35,5.15.10,,,,5.15.11,5.16.0,,Transport,,,,,0,,,,,"The {{ws}} transport connector uses the {{maxFrameSize}} to set binary and text message size limit.
However the {{http}} transport connector doesn't and the user needs a hack on {{jetty.xml}}.
The {{http}} transport connector should directly use the {{maxFrameSize}}.",,jbonofre,jira-bot,,,,,,,,,,"jbonofre commented on pull request #410: [AMQ-7327] Use maxFrameSize to limit HTTP content length
URL: https://github.com/apache/activemq/pull/410
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 10:18;githubbot;600","tabish121 commented on pull request #410: [AMQ-7327] Use maxFrameSize to limit HTTP content length
URL: https://github.com/apache/activemq/pull/410#discussion_r343112507
 
 

 ##########
 File path: activemq-http/src/test/java/org/apache/activemq/transport/http/HttpMaxFrameSizeTest.java
 ##########
 @@ -0,0 +1,64 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the ""License""); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.activemq.transport.http;
+
+import org.apache.activemq.ActiveMQConnectionFactory;
+import org.apache.activemq.broker.BrokerService;
+import org.apache.activemq.command.ActiveMQQueue;
+import org.apache.commons.lang.StringUtils;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import javax.jms.Connection;
+import javax.jms.JMSException;
+import javax.jms.MessageProducer;
+import javax.jms.Session;
+import javax.jms.TextMessage;
+
+public class HttpMaxFrameSizeTest {
+
+    protected BrokerService brokerService;
+
+    @Before
+    public void setup() throws Exception {
+        brokerService = new BrokerService();
+        brokerService.setPersistent(false);
+        brokerService.setUseJmx(false);
+        brokerService.deleteAllMessages();
+        brokerService.addConnector(""http://localhost:8888?wireFormat.maxFrameSize=10"");
+        brokerService.start();
+        brokerService.waitUntilStarted();
+    }
+
+    @After
+    public void teardown() throws Exception {
+        brokerService.stop();
+    }
+
+    @Test(expected = JMSException.class)
 
 Review comment:
   Expecting an JMSException on a test that calls many methods that can throw a JMSException doesn't actually test that the change does what you are expecting it to.  The producer send should be the point of test here so that you confirm that it does indeed fail when to large, but also you need some negative validation (send a smaller message) to test that your configuration doesn't get mistakenly applied to smaller messages.  
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 14:07;githubbot;600","jbonofre commented on pull request #410: [AMQ-7327] Use maxFrameSize to limit HTTP content length
URL: https://github.com/apache/activemq/pull/410#discussion_r343113819
 
 

 ##########
 File path: activemq-http/src/test/java/org/apache/activemq/transport/http/HttpMaxFrameSizeTest.java
 ##########
 @@ -0,0 +1,64 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the ""License""); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.activemq.transport.http;
+
+import org.apache.activemq.ActiveMQConnectionFactory;
+import org.apache.activemq.broker.BrokerService;
+import org.apache.activemq.command.ActiveMQQueue;
+import org.apache.commons.lang.StringUtils;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import javax.jms.Connection;
+import javax.jms.JMSException;
+import javax.jms.MessageProducer;
+import javax.jms.Session;
+import javax.jms.TextMessage;
+
+public class HttpMaxFrameSizeTest {
+
+    protected BrokerService brokerService;
+
+    @Before
+    public void setup() throws Exception {
+        brokerService = new BrokerService();
+        brokerService.setPersistent(false);
+        brokerService.setUseJmx(false);
+        brokerService.deleteAllMessages();
+        brokerService.addConnector(""http://localhost:8888?wireFormat.maxFrameSize=10"");
+        brokerService.start();
+        brokerService.waitUntilStarted();
+    }
+
+    @After
+    public void teardown() throws Exception {
+        brokerService.stop();
+    }
+
+    @Test(expected = JMSException.class)
 
 Review comment:
   @tabish121 thanks Tim, you are right, let me improve a bit the test coverage ;)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 14:10;githubbot;600","jbonofre commented on pull request #410: [AMQ-7327] Use maxFrameSize to limit HTTP content length
URL: https://github.com/apache/activemq/pull/410#discussion_r343182748
 
 

 ##########
 File path: activemq-http/src/test/java/org/apache/activemq/transport/http/HttpMaxFrameSizeTest.java
 ##########
 @@ -0,0 +1,64 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the ""License""); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.activemq.transport.http;
+
+import org.apache.activemq.ActiveMQConnectionFactory;
+import org.apache.activemq.broker.BrokerService;
+import org.apache.activemq.command.ActiveMQQueue;
+import org.apache.commons.lang.StringUtils;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import javax.jms.Connection;
+import javax.jms.JMSException;
+import javax.jms.MessageProducer;
+import javax.jms.Session;
+import javax.jms.TextMessage;
+
+public class HttpMaxFrameSizeTest {
+
+    protected BrokerService brokerService;
+
+    @Before
+    public void setup() throws Exception {
+        brokerService = new BrokerService();
+        brokerService.setPersistent(false);
+        brokerService.setUseJmx(false);
+        brokerService.deleteAllMessages();
+        brokerService.addConnector(""http://localhost:8888?wireFormat.maxFrameSize=10"");
+        brokerService.start();
+        brokerService.waitUntilStarted();
+    }
+
+    @After
+    public void teardown() throws Exception {
+        brokerService.stop();
+    }
+
+    @Test(expected = JMSException.class)
 
 Review comment:
   @tabish121 updated.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 16:06;githubbot;600","jbonofre commented on pull request #410: [AMQ-7327] Use maxFrameSize to limit HTTP content length
URL: https://github.com/apache/activemq/pull/410
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/19 16:31;githubbot;600",,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Nov 12 16:33:55 UTC 2019,,,,,,,,,,,"0|z07y0w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Nov/19 16:31;jira-bot;Commit 50a94cbf12f6a4b9d623b07515b9fd86c53efb13 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=50a94cb ]

[AMQ-7327] Use maxFrameSize to limit HTTP content length
;;;","12/Nov/19 16:31;jira-bot;Commit 397ede661f505eac82cebcd63e40c06925a7889d in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=397ede6 ]

[AMQ-7327] Updated unit test around maxFrameSize support on the http transport connector
;;;","12/Nov/19 16:31;jira-bot;Commit 1846df4863b26e4290359b2bb2d69d6a832dd30f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1846df4 ]

Merge pull request #410 from jbonofre/AMQ-7327

[AMQ-7327] Use maxFrameSize to limit HTTP content length;;;","12/Nov/19 16:31;jira-bot;Commit 1846df4863b26e4290359b2bb2d69d6a832dd30f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1846df4 ]

Merge pull request #410 from jbonofre/AMQ-7327

[AMQ-7327] Use maxFrameSize to limit HTTP content length;;;","12/Nov/19 16:33;jira-bot;Commit 006efab559a63a33a1c53541b7940a5a0a7d4f12 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=006efab ]

[AMQ-7327] Use maxFrameSize to limit HTTP content length

(cherry picked from commit 50a94cbf12f6a4b9d623b07515b9fd86c53efb13)
;;;","12/Nov/19 16:33;jira-bot;Commit a6a83b50e1e6cc7293eaec2eb215da60a6b5c92c in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a6a83b5 ]

[AMQ-7327] Updated unit test around maxFrameSize support on the http transport connector

(cherry picked from commit 397ede661f505eac82cebcd63e40c06925a7889d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MQTTNIOSSLTest is failing,AMQ-7321,13262756,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,17/Oct/19 03:43,05/Feb/20 11:15,13/Jul/23 08:27,05/Feb/20 11:15,5.15.10,5.16.0,,,5.15.12,5.16.0,,Test Cases,,,,,0,,,,,"On {{master}}, the MQTTNIOSSLTest is failing (both on my machine and Jenkins) with:

{code}
[ERROR] Tests run: 55, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 129.141 s <<< FAILURE! - in org.apache.activemq.transport.mqtt.MQTTNIOSSLTest
[ERROR] testReceiveMessageSentWhileOffline(org.apache.activemq.transport.mqtt.MQTTNIOSSLTest)  Time elapsed: 1.402 s  <<< FAILURE!
java.lang.AssertionError: Should have received 202 messages expected:<202> but was:<34>
{code}

I'm fixing that.",,jbonofre,jira-bot,,,,,,,,,,"jbonofre commented on pull request #408: [AMQ-7321] Reduce the number of messages in MQTT SSL offline test to limit timing issue
URL: https://github.com/apache/activemq/pull/408
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/19 13:54;githubbot;600","jbonofre commented on pull request #408: [AMQ-7321] Reduce the number of messages in MQTT SSL offline test to limit timing issue
URL: https://github.com/apache/activemq/pull/408
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/19 14:18;githubbot;600","jbonofre commented on pull request #445: [AMQ-7321] Decrease number of iterations in MQTT test
URL: https://github.com/apache/activemq/pull/445
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 08:55;githubbot;600","jbonofre commented on pull request #445: [AMQ-7321] Decrease number of iterations in MQTT test
URL: https://github.com/apache/activemq/pull/445
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/20 11:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 05 11:14:52 UTC 2020,,,,,,,,,,,"0|z07o88:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Oct/19 04:53;jbonofre;It seems to be a flaky test depending of the load on the machine. I will increase the timeout to gives time to message to be consumed.;;;","31/Oct/19 06:35;jbonofre;I will add more delay in the test to see if it helps.;;;","03/Nov/19 14:19;jira-bot;Commit d340e0902b8abf6c551486306c1db1dbe3562b9b in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d340e09 ]

[AMQ-7321] Reduce the number of messages in MQTT SSL offline test to limit timing issue
;;;","03/Nov/19 14:19;jira-bot;Commit d0b0a6495e1385cc327805c5c2db414baedbdf14 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d0b0a64 ]

Merge pull request #408 from jbonofre/AMQ-7321

[AMQ-7321] Reduce the number of messages in MQTT SSL offline test to limit timing issue;;;","03/Nov/19 14:19;jira-bot;Commit d0b0a6495e1385cc327805c5c2db414baedbdf14 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d0b0a64 ]

Merge pull request #408 from jbonofre/AMQ-7321

[AMQ-7321] Reduce the number of messages in MQTT SSL offline test to limit timing issue;;;","03/Nov/19 14:19;jira-bot;Commit f851abd5d15e6aa35801a0d570648559951e3f00 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f851abd ]

[AMQ-7321] Reduce the number of messages in MQTT SSL offline test to limit timing issue

(cherry picked from commit d340e0902b8abf6c551486306c1db1dbe3562b9b)
;;;","03/Feb/20 16:03;jbonofre;I still have this failure randomly.;;;","05/Feb/20 11:07;jira-bot;Commit cf2c28a7f3dbb4a184996be1ca9c6e51ec67a28a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cf2c28a ]

[AMQ-7321] Decrease number of iterations in MQTT test to speed up build and limit race condition
;;;","05/Feb/20 11:07;jira-bot;Commit ce7eeba6f85a6ec9a6f32f5101ffffcf9c70ef4f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ce7eeba ]

Merge pull request #445 from jbonofre/AMQ-7321

[AMQ-7321] Decrease number of iterations in MQTT test;;;","05/Feb/20 11:07;jira-bot;Commit ce7eeba6f85a6ec9a6f32f5101ffffcf9c70ef4f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ce7eeba ]

Merge pull request #445 from jbonofre/AMQ-7321

[AMQ-7321] Decrease number of iterations in MQTT test;;;","05/Feb/20 11:14;jira-bot;Commit d41a3edf5c2848e5131f1f580cc86272cbbdce13 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d41a3ed ]

[AMQ-7321] Decrease number of iterations in MQTT test to speed up build and limit race condition

(cherry picked from commit cf2c28a7f3dbb4a184996be1ca9c6e51ec67a28a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"virtualSelectorCacheBrokerPlugin fails on ""browse"" action",AMQ-7312,13259523,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,danlek,danlek,29/Sep/19 14:00,18/Oct/19 17:10,13/Jul/23 08:27,18/Oct/19 17:10,5.15.10,,,,5.15.11,5.16.0,,Broker,,,,,0,,,,,"We have a VirtualTopic ""VirtualTopic.multi_dest"" and 2 consumers :
 * Consumer.alpha.VirtualTopic.multi_dest
 * Consumer.beta.VirtualTopic.multi_dest

Message producer send messages on that vTopic with various ""tenant"" header value.

Each consumer use a selector to receive only desired data :
 * tenant='alpha' for Consumer.alpha.VirtualTopic.multi_dest
 * tenant='beta' for Consumer.beta.VirtualTopic.multi_dest

To avoid to get many pending message on each consumer queue, we activated selectorAware=""true"" in broker settings.

To avoid to lose message on temporary consumer deconnection, we activated virtualSelectorCacheBrokerPlugin plugin.

Steps to reproduce bug :
 * launch message producer and both message consumers alpha and beta
 * stop alpha consumer
 * notice on console pending messages on alpha queue increase
 * if we restart alpha consumer, all pending messages are consumed => ok, only messages matching selector were in queue
 * restop alpha consumer
 * go on console and click on ""Browse"" link for alpha consumer queue
 * restart alpha consumer => it will consume pending messages matching selector
 * notice there are other waiting messages that do not match selector, so the consumer queue is fastly full of useless messages => ko
 * even after broker restart, the alpha consumer queue continues to receive message that do not match selectors => ko

 

After code analysis, I notice ""Browse"" action create a new consumer on queue. In virtualSelectorCacheBrokerPlugin, the addConsumer method update ""subSelectorCache"" variable with 'TRUE' selector.

 

A pull request is submitted to fix that issue ([https://github.com/apache/activemq/pull/395]), could you merge it for the next patch 5.15.11 ?

 

 

 ",,danlek,jira-bot,,,,,,,,,,"couclock commented on pull request #395: AMQ-7312 virtualSelectorCacheBrokerPlugin addConsumer issue
URL: https://github.com/apache/activemq/pull/395
 
 
   See details on https://issues.apache.org/jira/browse/AMQ-7312
   
   On ""browse"" action in AMQ console, a consumer is added on related queue.
   When virtualSelectorCacheBrokerPlugin is activated, ""addConsumer"" method add a 'TRUE' selector on that queue that disable previous cached selector.
   
   Could you please merge that PR on next release ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Sep/19 14:21;githubbot;600","jbonofre commented on pull request #395: AMQ-7312 virtualSelectorCacheBrokerPlugin addConsumer issue
URL: https://github.com/apache/activemq/pull/395
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 17:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,AMQ-7051,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 18 17:10:18 UTC 2019,,,,,,,Patch Available,,,,"0|z074og:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/Sep/19 14:01;danlek;Relates to http://activemq.2283324.n4.nabble.com/VirtualTopic-issue-with-virtualSelectorCacheBrokerPlugin-td4751846.html;;;","18/Oct/19 17:09;jira-bot;Commit 86a069ac5db9742ae58e396e162a0b3e2bdc66c3 in activemq's branch refs/heads/master from Dany LECOQ
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=86a069a ]

AMQ-7312 virtualSelectorCacheBrokerPlugin addConsumer issue
;;;","18/Oct/19 17:09;jira-bot;Commit a5f06025057afb927d00c941412d1143c8614098 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a5f0602 ]

Merge pull request #395 from couclock/AMQ-7312

AMQ-7312 virtualSelectorCacheBrokerPlugin addConsumer issue;;;","18/Oct/19 17:09;jira-bot;Commit a5f06025057afb927d00c941412d1143c8614098 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a5f0602 ]

Merge pull request #395 from couclock/AMQ-7312

AMQ-7312 virtualSelectorCacheBrokerPlugin addConsumer issue;;;","18/Oct/19 17:10;jira-bot;Commit 1d8ae314bd8a18ed6ed3c0dea0ced08cadb6d1b8 in activemq's branch refs/heads/activemq-5.15.x from Dany LECOQ
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1d8ae31 ]

AMQ-7312 virtualSelectorCacheBrokerPlugin addConsumer issue

(cherry picked from commit 86a069ac5db9742ae58e396e162a0b3e2bdc66c3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KahaDB XA topic recovered pending ack tracking is store wide, needs to be per subscription key ",AMQ-7311,13258892,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Sep/19 20:18,26/Sep/19 15:13,13/Jul/23 08:27,26/Sep/19 15:13,5.15.0,,,,5.16.0,,,KahaDB,XA,,,,0,,,,,"With two durable subs, one with a recovered prepared ack XA transaction, the second sub cannot access the messages.
The xa recovered_prepared_ack tracking per messageId needs to be per subscriber rather than store wide.
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Sep 26 14:55:19 UTC 2019,,,,,,,,,,,"0|z070s0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Sep/19 14:55;jira-bot;Commit ed5edb03d7fe63ef27269566aaa9a9b501650eb0 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ed5edb0 ]

AMQ-7311 - track recovered prepared ack locations on a per subscriber basis, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Security Vulnerabilities in Tomcat-websocket-api.jar,AMQ-7310,13258748,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,hkasarla,hkasarla,25/Sep/19 09:24,18/Nov/19 20:23,13/Jul/23 08:27,18/Nov/19 20:23,5.15.10,,,,5.15.11,5.16.0,,,,,,,0,,,,,"Activemq has *tomcat-websocket-api-8.0.53.jar* dependency.

This jar is vulnerable to below CVE's: *CVE-2016-5388, CVE-2016-5425,CVE-2017-6056.*

Ref: [https://nvd.nist.gov/vuln/detail/CVE-2016-5388]

This jar needs to be updated to {color:#172b4d}9.0.21 or latest available{color}.",,coheigea,hkasarla,jira-bot,,,,,,,,,"jbonofre commented on pull request #415: [AMQ-7310] Upgrade to Tomcat API 9.0.27
URL: https://github.com/apache/activemq/pull/415
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Nov/19 05:44;githubbot;600","jbonofre commented on pull request #415: [AMQ-7310] Upgrade to Tomcat API 9.0.27
URL: https://github.com/apache/activemq/pull/415
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 20:21;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 18 20:22:42 UTC 2019,,,,,,,,,,,"0|z06zw0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Nov/19 20:21;jira-bot;Commit 43ffe7eac85f7e84f74011c5fbafd57bed3dcfe0 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=43ffe7e ]

[AMQ-7310] Upgrade to Tomcat API 9.0.27
;;;","18/Nov/19 20:21;jira-bot;Commit 1c5b7cc66b9b314a7f2c27bf6231344b10a5c2bc in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1c5b7cc ]

Merge pull request #415 from jbonofre/AMQ-7310

[AMQ-7310] Upgrade to Tomcat API 9.0.27;;;","18/Nov/19 20:21;jira-bot;Commit 1c5b7cc66b9b314a7f2c27bf6231344b10a5c2bc in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1c5b7cc ]

Merge pull request #415 from jbonofre/AMQ-7310

[AMQ-7310] Upgrade to Tomcat API 9.0.27;;;","18/Nov/19 20:22;jira-bot;Commit ac48fa7429142e9bcb6026ae29cc940af051a09b in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ac48fa7 ]

[AMQ-7310] Upgrade to Tomcat API 9.0.27

(cherry picked from commit 43ffe7eac85f7e84f74011c5fbafd57bed3dcfe0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Virtual Topic concurrent send with JMX consumer queue deletion can lead to kahaDb leak,AMQ-7308,13257897,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,20/Sep/19 09:21,20/Sep/19 09:33,13/Jul/23 08:27,20/Sep/19 09:33,5.15.0,,,,5.16.0,,,JMX,KahaDB,,,,0,,,,,"With a fast producer on a virtual topic, a jmx op to remove a consumer queue will succeed but it is possible that an inflight send will recreate the kahadb message store and accept the message, which will never be consumed. This message will subsequently prevent cleanup/gc of kahadb leading to excessive disk usage.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 20 09:33:01 UTC 2019,,,,,,,,,,,"0|z06unc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"20/Sep/19 09:23;jira-bot;Commit 289750d7c9849bd26f19e9116457eb72a3412d05 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=289750d ]

AMQ-7308 - ensure kahadb message add does not auto create the message store in error, expect an existing store. fix and test
;;;","20/Sep/19 09:33;gtully;recovery processing will recreate the message store, otherwise the expectation is that the store exists before a message add, such that an inflight send will get rejected.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unnecessary stack trace in case of invalid credentials,AMQ-7303,13255885,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,10/Sep/19 13:11,04/Mar/20 20:46,13/Jul/23 08:27,04/Mar/20 20:46,5.15.10,,,,5.15.12,5.16.0,,Security/JAAS,,,,,0,,,,,"When connecting via STOMP using invalid credentials, we get a complete stack trace:
{code}
2019-09-10 14:30:16,765 [ActiveMQ NIO Worker 9] WARN Transport - Transport Connection to: tcp://192.168.1.1:50196 failed: java.io.IOException: User name [foo] or password is invalid.
2019-09-10 14:43:56,518 [ActiveMQ NIO Worker 9] WARN TransportConnection - Failed to add Connection id=ID:broker.acme.com-24724-1568103966879-1:1005, clientId=ID:broker.acme.com-24724-1568103966879-1:1005 due to {}
java.lang.SecurityException: User name [foo] or password is invalid.
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:97)
	at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)
	at org.apache.activemq.security.JaasDualAuthenticationBroker.addConnection(JaasDualAuthenticationBroker.java:94)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.plugin.AbstractRuntimeConfigurationBroker.addConnection(AbstractRuntimeConfigurationBroker.java:118)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:849)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:177)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:746)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:240)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: javax.security.auth.login.FailedLoginException: User does exist
	at org.apache.activemq.jaas.PropertiesLoginModule.login(PropertiesLoginModule.java:92)
	at sun.reflect.GeneratedMethodAccessor82.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:755)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:587)
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:92)
	... 30 more
{code}

A single line should be reported, not the full stack trace.",ActiveMQ 5.15.10 as standalone broker,jbonofre,jira-bot,lionel.cons,,,,,,,,,"jbonofre commented on pull request #413: [AMQ-7303] Limit trace to SecurityException in the authentication broker
URL: https://github.com/apache/activemq/pull/413
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 15:58;githubbot;600","jbonofre commented on pull request #413: [AMQ-7303] Limit trace to SecurityException in the authentication broker
URL: https://github.com/apache/activemq/pull/413
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/19 16:30;githubbot;600","jbonofre commented on pull request #500: [AMQ-7303] Improve logging in case of security exception on transport connection
URL: https://github.com/apache/activemq/pull/500
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/20 17:58;githubbot;600","jbonofre commented on pull request #500: [AMQ-7303] Improve logging in case of security exception on transport connection
URL: https://github.com/apache/activemq/pull/500
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/20 20:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,AMQ-7433,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 04 20:46:35 UTC 2020,,,,,,,,,,,"0|z06i8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"12/Nov/19 14:55;jbonofre;I reduce the stack, but I would like to avoid too drastic change around this.;;;","20/Nov/19 08:26;lionel.cons;I have tested the latest snapshot (20191119.121036-35) and the stack trace is the same:
 
{code}
2019-11-20 09:21:29,217 [ActiveMQ NIO Worker 14] WARN TransportConnection - Failed to add Connection id=ID:brk01.acme.com-10714-1574235723379-1:796, clientId=ID:brk01.acme.com-10714-1574235723379-1:796 due to {}
java.lang.SecurityException: User name [null] or password is invalid.
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:97)
	at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)
	at org.apache.activemq.security.JaasDualAuthenticationBroker.addConnection(JaasDualAuthenticationBroker.java:94)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.plugin.AbstractRuntimeConfigurationBroker.addConnection(AbstractRuntimeConfigurationBroker.java:118)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:849)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:177)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:746)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:240)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.stomp.StompCodec.processCommand(StompCodec.java:133)
	at org.apache.activemq.transport.stomp.StompCodec.parse(StompCodec.java:100)
	at org.apache.activemq.transport.stomp.StompNIOTransport.processBuffer(StompNIOTransport.java:136)
	at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:121)
	at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:44)
	at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:73)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:123)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: javax.security.auth.login.FailedLoginException: user name is null
	at org.apache.activemq.jaas.PropertiesLoginModule.login(PropertiesLoginModule.java:87)
	at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:755)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:587)
	at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:92)
	... 30 more

{code};;;","20/Nov/19 08:38;jbonofre;[~lionel.cons] that's normal as the exception is thrown.  It's what I said in my previous comment: the fix would be to catch the exception and just do log, but it's wide change in all transport connectors. I don't want to do this change on a minor release.;;;","20/Nov/19 08:39;jbonofre;I can square the change only on STOMP (not all other transport connectors but it's basically the same).;;;","20/Nov/19 08:59;lionel.cons;The stack trace pollutes the logs and adds nothing since the reason is clear. This is why it should IMHO be removed.

I'm fine with a fix for STOMP only since this is what we use mostly here but a more consistent fix for all transport connectors would probably be better.

If the changes are too important for 5.15.11 then let's push these to a later version...;;;","20/Nov/19 09:08;jbonofre;[~lionel.cons] I fully understand. Let me propose a wider PR.;;;","01/Mar/20 17:06;jbonofre;Fixed with AMQ-7433;;;","03/Mar/20 17:52;jbonofre;Generally speaking, if there's an exception, it makes sense to display the stack trace (it's the only way to investigate an issue).

However, if your issue is related to logstash/filebeat, I now changed to use {{EnhancedPatternLayout}} in {{conf/log4j.properties}}. Thanks to that, you can now use {{ConversionPattern}} like:
{code:java}
log4j.appender.logfile.layour.ConversionPattern=%d | %-5p | %m | %c | %t%n%replace(%throwable){\n}{ } {code};;;","04/Mar/20 20:44;jira-bot;Commit 945cd6b7de20cbc0a092eaa2e6dff5dfacc9acc3 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=945cd6b ]

[AMQ-7303] Improve logging in case of security exception on transport connection
;;;","04/Mar/20 20:44;jira-bot;Commit c0e7949468e0c2089e1d78b7ebd277eef0d7c532 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c0e7949 ]

Merge pull request #500 from jbonofre/AMQ-7303

[AMQ-7303] Improve logging in case of security exception on transport connection;;;","04/Mar/20 20:44;jira-bot;Commit c0e7949468e0c2089e1d78b7ebd277eef0d7c532 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c0e7949 ]

Merge pull request #500 from jbonofre/AMQ-7303

[AMQ-7303] Improve logging in case of security exception on transport connection;;;","04/Mar/20 20:46;jira-bot;Commit bf3891ed0edbc1ec74e9052df8cd0f9df2c7e579 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bf3891e ]

[AMQ-7303] Improve logging in case of security exception on transport connection

(cherry picked from commit 945cd6b7de20cbc0a092eaa2e6dff5dfacc9acc3)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX operation removeMessage(messageID) is not completing and leading to high CPU usage,AMQ-7302,13255845,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Sep/19 10:19,22/Nov/19 16:19,13/Jul/23 08:27,10/Sep/19 10:46,5.15.0,,,,5.16.0,,,JMX,,,,,0,,,,,"JMX queue move/remove/copyTo/retry ops behave badly when a queue is memory constrained. The operations loop over pageIn() but don't check for cursor being full and nothing further being paged into memory. In addition, they allow concurrent operation which thwarts the linear search.
this can lead to excessive looping (high CPU), hanging and NPE depending on the particular JMX op.
The loops need to short-circuit if pageIn blocks as is the norm when the cursor is memory constrained.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Nov 22 16:19:39 UTC 2019,,,,,,,,,,,"0|z06i00:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Sep/19 10:46;jira-bot;Commit 501d55337adaecdad7fb6311afcf618503a9e9b5 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=501d553 ]

AMQ-7302 - make jmx ops that pageIn aware of cursor memory limits to avoid excessive looping, fix and test
;;;","22/Nov/19 16:19;jira-bot;Commit a7bf4fc8043d76d92ab59c622fafba064367af14 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a7bf4fc ]

AMQ-7302 - rename test such that is is run with surefire pattern match
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Expired certificates trigger a full stack trace,AMQ-7301,13255827,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,lionel.cons,lionel.cons,10/Sep/19 09:02,18/Mar/20 08:47,13/Jul/23 08:27,11/Mar/20 16:59,5.15.10,,,,5.15.12,5.16.0,,Security/JAAS,,,,,0,,,,,"When using an expired certificate to authenticate via STOMP, ActiveMQ logs a complete stack trace:
  
{code}
2019-09-10 10:36:07,784 [ActiveMQ BrokerService[broker.acme.com] Task-12] ERROR TransportConnector - Could not accept connection from null : {}
 java.io.IOException: javax.net.ssl.SSLHandshakeException: General SSLEngine problem
 at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:196)
 at org.apache.activemq.transport.stomp.StompNIOSSLTransport.initializeStreams(StompNIOSSLTransport.java:57)
 at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:543)
 at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:174)
 at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:470)
 at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
 at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:64)
 at org.apache.activemq.transport.stomp.StompTransportFilter.start(StompTransportFilter.java:65)
 at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:169)
 at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:64)
 at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:1072)
 at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:218)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at java.lang.Thread.run(Thread.java:748)
 Caused by: javax.net.ssl.SSLHandshakeException: General SSLEngine problem
 at sun.security.ssl.Handshaker.checkThrown(Handshaker.java:1521)
 at sun.security.ssl.SSLEngineImpl.checkTaskThrown(SSLEngineImpl.java:528)
 at sun.security.ssl.SSLEngineImpl.writeAppRecord(SSLEngineImpl.java:1197)
 at sun.security.ssl.SSLEngineImpl.wrap(SSLEngineImpl.java:1165)
 at javax.net.ssl.SSLEngine.wrap(SSLEngine.java:469)
 at org.apache.activemq.transport.nio.NIOOutputStream.write(NIOOutputStream.java:174)
 at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:452)
 at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:164)
 ... 14 more
 Caused by: javax.net.ssl.SSLHandshakeException: General SSLEngine problem
 at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)
 at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1709)
 at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:318)
 at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:310)
 at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1983)
 at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:232)
 at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1037)
 at sun.security.ssl.Handshaker$1.run(Handshaker.java:970)
 at sun.security.ssl.Handshaker$1.run(Handshaker.java:967)
 at java.security.AccessController.doPrivileged(Native Method)
 at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1459)
 at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:448)
 ... 15 more
 Caused by: sun.security.validator.ValidatorException: PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed
 at sun.security.validator.PKIXValidator.doValidate(PKIXValidator.java:362)
 at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:270)
 at sun.security.validator.Validator.validate(Validator.java:262)
 at sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:324)
 at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:279)
 at sun.security.ssl.X509TrustManagerImpl.checkClientTrusted(X509TrustManagerImpl.java:130)
 at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1970)
 ... 22 more
 Caused by: java.security.cert.CertPathValidatorException: validity check failed
 at sun.security.provider.certpath.PKIXMasterCertPathValidator.validate(PKIXMasterCertPathValidator.java:135)
 at sun.security.provider.certpath.PKIXCertPathValidator.validate(PKIXCertPathValidator.java:233)
 at sun.security.provider.certpath.PKIXCertPathValidator.validate(PKIXCertPathValidator.java:141)
 at sun.security.provider.certpath.PKIXCertPathValidator.engineValidate(PKIXCertPathValidator.java:80)
 at java.security.cert.CertPathValidator.validate(CertPathValidator.java:292)
 at sun.security.validator.PKIXValidator.doValidate(PKIXValidator.java:357)
 ... 28 more
 Caused by: java.security.cert.CertificateExpiredException: NotAfter: Thu May 23 12:21:49 CEST 2019
 at sun.security.x509.CertificateValidity.valid(CertificateValidity.java:274)
 at sun.security.x509.X509CertImpl.checkValidity(X509CertImpl.java:629)
 at sun.security.provider.certpath.BasicChecker.verifyValidity(BasicChecker.java:190)
 at sun.security.provider.certpath.BasicChecker.check(BasicChecker.java:144)
 at sun.security.provider.certpath.PKIXMasterCertPathValidator.validate(PKIXMasterCertPathValidator.java:125)
 ... 33 more
{code}
There are several problems here:
 # this should be a {{WARN}} and not an {{ERROR}} (like an invalid password)
 # the IP address and/or certificate DN should be logged
 # a single line should be reported, not the full stack trace",ActiveMQ 5.15.10 as standalone broker,cshannon,jbonofre,jira-bot,lionel.cons,,,,,,,,"jbonofre commented on pull request #488: [AMQ-7301] Display warn in case of STOMP stream initialize error
URL: https://github.com/apache/activemq/pull/488
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 07:04;githubbot;600","jbonofre commented on pull request #488: [AMQ-7301] Display warn in case of STOMP stream initialize error
URL: https://github.com/apache/activemq/pull/488
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 08:23;githubbot;600","jbonofre commented on pull request #501: [AMQ-7301] Improve logging when initialize Stomp NIO SSL connection
URL: https://github.com/apache/activemq/pull/501
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/20 14:03;githubbot;600","jbonofre commented on pull request #501: [AMQ-7301] Improve logging when initialize Stomp NIO SSL connection
URL: https://github.com/apache/activemq/pull/501
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/20 16:22;githubbot;600","jbonofre commented on pull request #507: [AMQ-7301] Propagate the exception in order to close the connection cleanly
URL: https://github.com/apache/activemq/pull/507
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 06:50;githubbot;600","jbonofre commented on pull request #507: [AMQ-7301] Propagate the exception in order to close the connection cleanly
URL: https://github.com/apache/activemq/pull/507
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 06:58;githubbot;600","jbonofre commented on pull request #510: [AMQ-7301] Fix build and using a single log message
URL: https://github.com/apache/activemq/pull/510
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/20 16:22;githubbot;600","jbonofre commented on pull request #510: [AMQ-7301] Fix build and using a single log message
URL: https://github.com/apache/activemq/pull/510
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/20 16:57;githubbot;600",,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,AMQ-7444,,AMQ-7433,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 12 09:54:11 UTC 2020,,,,,,,,,,,"0|z06hw0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/Sep/19 12:14;lionel.cons;FWIW, null certificates trigger a similar stack trace:
{code}
2019-09-30 14:08:05,810 [ActiveMQ BrokerService[broker.acme.com] Task-685] ERROR TransportConnector - Could not accept connection from null : {}
java.io.IOException: javax.net.ssl.SSLHandshakeException: null cert chain
	at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:196)
	at org.apache.activemq.transport.stomp.StompNIOSSLTransport.initializeStreams(StompNIOSSLTransport.java:57)
	at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:543)
	at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:174)
	at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:470)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:64)
	at org.apache.activemq.transport.stomp.StompTransportFilter.start(StompTransportFilter.java:65)
	at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:169)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:64)
	at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:1072)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:218)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: javax.net.ssl.SSLHandshakeException: null cert chain
	at sun.security.ssl.Handshaker.checkThrown(Handshaker.java:1521)
	at sun.security.ssl.SSLEngineImpl.checkTaskThrown(SSLEngineImpl.java:528)
	at sun.security.ssl.SSLEngineImpl.writeAppRecord(SSLEngineImpl.java:1197)
	at sun.security.ssl.SSLEngineImpl.wrap(SSLEngineImpl.java:1165)
	at javax.net.ssl.SSLEngine.wrap(SSLEngine.java:469)
	at org.apache.activemq.transport.nio.NIOOutputStream.write(NIOOutputStream.java:174)
	at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:452)
	at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:164)
	... 14 more
Caused by: javax.net.ssl.SSLHandshakeException: null cert chain
	at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)
	at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1647)
	at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:318)
	at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:306)
	at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1939)
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:232)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1037)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:970)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:967)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1459)
	at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:448)
	... 15 more
{code};;;","12/Nov/19 14:18;jira-bot;Commit 8212b69fa9e379393421eeb51f8d92a420ff5524 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8212b69 ]

[AMQ-7301] Don't display stack trace on connection error, just the cause
;;;","12/Nov/19 14:19;jira-bot;Commit f3f827150368fa8c6d3a39a47f3602a80518630a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f3f8271 ]

[AMQ-7301] Use warn for connection failure instead of error.
;;;","20/Nov/19 09:39;lionel.cons;I have tested the latest snapshot (20191119.121036-35) and the stack trace is now gone but there is still no information about the culprit (DN or IP):

{code}
2019-11-20 10:36:16,984 [ActiveMQ BrokerService[brk@acme.com] Task-204] WARN TransportConnector - Could not accept connection from null : javax.net.ssl.SSLHandshakeException: General SSLEngine problem
{code}

 ;;;","20/Nov/19 09:41;jbonofre;[~lionel.cons] I guess instead of {{null}} right ?;;;","20/Nov/19 09:52;lionel.cons;Indeed.;;;","02/Dec/19 09:38;lionel.cons;One more thing (tested on 5.15.11), the new warning reports only ""General SSLEngine problem"". It would be much better to report the underneath cause, in this case ""PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed"".

In other words, ActiveMQ should log 

{code}
2019-11-20 10:36:16,984 [ActiveMQ BrokerService[brk@acme.com] Task-204] WARN TransportConnector - Could not accept connection from null : sun.security.validator.ValidatorException: PKIX path validation failed: java.security.cert.CertPathValidatorException: validity check failed
{code}

instead of 

{code}
2019-11-20 10:36:16,984 [ActiveMQ BrokerService[brk@acme.com] Task-204] WARN TransportConnector - Could not accept connection from null : javax.net.ssl.SSLHandshakeException: General SSLEngine problem
{code}

(and of course ""null"" should be replaced by the culprit IP address);;;","02/Mar/20 08:23;jira-bot;Commit d11fd05af4db5f3af46e09c9d9c62821c5b66967 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d11fd05 ]

[AMQ-7301] Display warn in case of STOMP stream initialize error
;;;","02/Mar/20 08:23;jira-bot;Commit 0d0131496a805c278373b16771c65caa30419adc in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0d01314 ]

Merge pull request #488 from jbonofre/AMQ-7301

[AMQ-7301] Display warn in case of STOMP stream initialize error;;;","02/Mar/20 08:24;jira-bot;Commit 0d0131496a805c278373b16771c65caa30419adc in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0d01314 ]

Merge pull request #488 from jbonofre/AMQ-7301

[AMQ-7301] Display warn in case of STOMP stream initialize error;;;","02/Mar/20 08:24;jira-bot;Commit 3dd9121a3911a7ae5464e7b9827799d67b18593a in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3dd9121 ]

[AMQ-7301] Display warn in case of STOMP stream initialize error

(cherry picked from commit d11fd05af4db5f3af46e09c9d9c62821c5b66967)
;;;","03/Mar/20 18:11;jbonofre;According to [https://github.com/apache/activemq/blob/activemq-5.15.x/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnector.java#L245] it should already be good.

Here we can see a single line in warn.

Let me setup a STOMP client and use case to try to reproduce.;;;","05/Mar/20 16:22;jira-bot;Commit b60efeaad82c63d4b00eb83285b6701ae3e7a73e in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b60efea ]

[AMQ-7301] Improve logging when initialize Stomp NIO SSL connection
;;;","05/Mar/20 16:22;jira-bot;Commit 4a2881f8ed04111149b33bdf606b168376439e4a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4a2881f ]

Merge pull request #501 from jbonofre/AMQ-7301

[AMQ-7301] Improve logging when initialize Stomp NIO SSL connection;;;","05/Mar/20 16:22;jira-bot;Commit 4a2881f8ed04111149b33bdf606b168376439e4a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4a2881f ]

Merge pull request #501 from jbonofre/AMQ-7301

[AMQ-7301] Improve logging when initialize Stomp NIO SSL connection;;;","05/Mar/20 16:23;jira-bot;Commit 71e6ea21caf2c5c9c0791ff2d6920eafc3adbfd8 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=71e6ea2 ]

[AMQ-7301] Improve logging when initialize Stomp NIO SSL connection

(cherry picked from commit b60efeaad82c63d4b00eb83285b6701ae3e7a73e)
;;;","09/Mar/20 15:13;jbonofre;As discussed on the vote thread, I reopen this Jira with a better solution.;;;","09/Mar/20 15:34;cshannon;[~jbonofre] - The error needs to propagate up because it gets caught inside TransportConnection (the stacktrace shows i at line 1072).  The exception gets caught and sets the status to pending stop which triggers a proper stop in the finally block. https://github.com/apache/activemq/blob/activemq-5.15.11/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnection.java#L1086



The connection won't get closed properly without this;;;","09/Mar/20 15:36;jbonofre;[~cshannon] yeah, I'm working on a better fix. Thanks for the catch !;;;","10/Mar/20 06:58;jira-bot;Commit 08b389c2206f9b3f1a9afc86d6b6a3eab0535e08 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=08b389c ]

[AMQ-7301] Propagate the exception in order to close the connection cleanly
;;;","10/Mar/20 06:58;jira-bot;Commit bbb73ec3fc18890b47bfc0561814367eb6a35902 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bbb73ec ]

Merge pull request #507 from jbonofre/AMQ-7301

[AMQ-7301] Propagate the exception in order to close the connection cleanly;;;","10/Mar/20 06:58;jira-bot;Commit bbb73ec3fc18890b47bfc0561814367eb6a35902 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bbb73ec ]

Merge pull request #507 from jbonofre/AMQ-7301

[AMQ-7301] Propagate the exception in order to close the connection cleanly;;;","10/Mar/20 06:59;jira-bot;Commit c1e2b3019c3e06cd537258851681ce183dba0147 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c1e2b30 ]

[AMQ-7301] Propagate the exception in order to close the connection cleanly

(cherry picked from commit 08b389c2206f9b3f1a9afc86d6b6a3eab0535e08)
;;;","11/Mar/20 09:29;lionel.cons;FWIW, I have tried with the latest snapshot (#111) and I now get:

{code}
2020-03-11 10:19:53,221 [ActiveMQ BrokerService[foo] Task-41] WARN StompNIOSSLTransport - Could not initialize connection from a.b.c.d: javax.net.ssl.SSLHandshakeException: General SSLEngine problem (General SSLEngine problem)
{code}

I guess one of the two ""General SSLEngine problem"" should rather be the root cause: ""validity check failed"".;;;","11/Mar/20 10:31;cshannon;I'm looking at onAcceptError now inside of TransportConnector and I don't think it is right.  It needs to log the root cause which should fix this so I will create a quick update.;;;","11/Mar/20 10:32;jbonofre;Let me check.;;;","11/Mar/20 10:49;jira-bot;Commit 57a1a77abb54e6862d61626d9a2985b84b9975a9 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=57a1a77 ]

AMQ-7301 - TransportConnector errors should log the root cause
;;;","11/Mar/20 10:49;jira-bot;Commit ee61ed69f8ca7ea116014a981225f446d0a05d8a in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ee61ed6 ]

AMQ-7301 - TransportConnector errors should log the root cause

(cherry picked from commit 57a1a77abb54e6862d61626d9a2985b84b9975a9)
;;;","11/Mar/20 10:49;cshannon;[~jbonofre] - i pushed a fix, it should log properly now;;;","11/Mar/20 13:43;jbonofre;[~cshannon] thanks ! Do you mind if I log on a single message (instead of two) as requested by the user ?;;;","11/Mar/20 14:13;cshannon;I don't care either way... I figured the main point was to not show a stack trace, so either is fine with me.;;;","11/Mar/20 14:18;jbonofre;[~cshannon] ok thanks, I'm gathering the two log warn message into a single one.;;;","11/Mar/20 16:09;jbonofre;[~cshannon] by the way, your change doesn't compile:
{code:java}
[ERROR] /Users/jbonofre/Workspace/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnector.java:[29,30] package com.google.common.base does not exist
[ERROR] /Users/jbonofre/Workspace/activemq/activemq-broker/src/main/java/org/apache/activemq/broker/TransportConnector.java:[246,68] cannot find symbol {code}
I'm fixing with my change.;;;","11/Mar/20 16:14;cshannon;Hmm weird, I guess it's only broken on master then because I compiled it on the 5.15.x branch and then cherry picked it to master.;;;","11/Mar/20 16:18;jbonofre;Guava dependency is missing on broker {{pom.xml}}.;;;","11/Mar/20 16:20;cshannon;[~jbonofre]  - Yeah I just noticed that, looks like it was never added but obviously needs to be.;;;","11/Mar/20 16:22;jbonofre;[~cshannon] no problem, I fixed it on [https://github.com/apache/activemq/pull/510];;;","11/Mar/20 16:25;cshannon;Looks good to me;;;","11/Mar/20 16:58;jira-bot;Commit 960bc24d17e955cea854124a3bbaeb5d912746ea in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=960bc24 ]

[AMQ-7301] Fix build and using a single log message
;;;","11/Mar/20 16:58;jira-bot;Commit 8f5d583ad4f0f03b32a527bf46f182499cc0552a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8f5d583 ]

Merge pull request #510 from jbonofre/AMQ-7301

[AMQ-7301] Fix build and using a single log message;;;","11/Mar/20 16:58;jira-bot;Commit 8f5d583ad4f0f03b32a527bf46f182499cc0552a in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8f5d583 ]

Merge pull request #510 from jbonofre/AMQ-7301

[AMQ-7301] Fix build and using a single log message;;;","11/Mar/20 16:59;jira-bot;Commit 9c733328dc4a5f0b191efd9edb23eb5c451dcb3e in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9c73332 ]

[AMQ-7301] Fix build and using a single log message

(cherry picked from commit 960bc24d17e955cea854124a3bbaeb5d912746ea)
;;;","11/Mar/20 17:47;jira-bot;Commit d800f1bdb488deba1080c7689c2004f27da49734 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d800f1b ]

[AMQ-7301] Remove guava dependency to implement own getRootCause() method
;;;","11/Mar/20 17:48;jira-bot;Commit 56e61ca2debb69d7f6c0dde625bac06a2a047f02 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=56e61ca ]

[AMQ-7301] Remove guava dependency to implement own getRootCause() method
;;;","12/Mar/20 08:05;lionel.cons;FYI, using the latest snapshot (#113), here is what I get:

{code}
2020-03-12 08:56:42,178 [ActiveMQ BrokerService[foo] Task-41] WARN TransportConnector - Could not accept connection from from null: javax.net.ssl.SSLHandshakeException: General SSLEngine problem
2020-03-12 08:56:42,228 [ActiveMQ BrokerService[foo] Task-41] WARN TransportConnector - Root cause of connection error: unable to find valid certification path to requested target
{code}

So unfortunately, the source is ""null"". Note also the double ""from from"".;;;","12/Mar/20 09:20;jbonofre;I gonna fix the double from. About null, as already explained, that's not easy as it's during handshake.  So keeping like this for now.;;;","12/Mar/20 09:23;jbonofre;Done for ""double from"".;;;","12/Mar/20 09:31;lionel.cons;[~jbonofre] I've mentioned the null problem because it was working in snapshot #111.

OTOH, I don't want to delay 5.15.12 further. This issue (stack trace) is fixed so you can go ahead with the release.

I will log a separate issue for the missing IP information, to be addressed in 5.15.13...

Thanks!;;;","12/Mar/20 09:36;jbonofre;[~lionel.cons] thanks, I'm fixing the {{remoteHost}} issue as well ;);;;","12/Mar/20 09:54;jbonofre;I would need to change the {{TransportConnector}}. The ""path"" is that it goes via {{onAcceptError(Exception error)}} that call {{onAcceptError(Exception error, String remoteHost)}} with {{remoteHost}} {{null}}.

Let's keep as it is and I will do the change for 5.15.13.;;;"
failover duplicate detection in error with batched local transactions,AMQ-7298,13254685,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,04/Sep/19 11:14,21/Apr/21 05:29,13/Jul/23 08:27,04/Sep/19 11:30,5.15.0,,,,5.16.0,5.17.0,,JMS client,,,,,0,,,,,"Messages can get poisonAcked in error as duplicate deliveries when a local transaction rollback during/after a failover (auto reconnect) event.
The interaction between rollback and failover redelivery has a bunch of timing issues and did create duplicates in-error that resulted in over eager suppression.
There are a bunch of related tests that validate expected behaviour, the related fixes needed to be revisited to better manage the delivered and unconsumed messages in the context of a local transaction and to avoid the real duplication of delivery in the client.
There is an additional new test that demonstrates the additional dlq or duplicates behaviour.

a nice cross section from the unit test suite is:
mvn clean install -Dtest=CloseRollbackRedeliveryQueueTest,AMQ2149Test,JMSQueueRedeliverTest,RedeliveryPolicyTest,FailoverTransactionTest,FailoverDurableSubTransactionTest,JMSConsumerTest,JmsSessionRecoverTest,AMQ2751Test",,davidhilton68,gtully,jbonofre,jira-bot,lichtin,lionel.cons,,,,,,"jbonofre opened a new pull request #649:
URL: https://github.com/apache/activemq/pull/649


   …plicate suppression (and dlq) in error for local transaction batches that failover""
   
   This reverts commit 02548777c2954f5ccad918df8b1280fd601f8fd6.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/21 06:04;githubbot;600","jbonofre commented on pull request #649:
URL: https://github.com/apache/activemq/pull/649#issuecomment-820931867


   @gtully waiting deeper investigation, here's a simple revert of the commit causing redelivery broker plugin issue. Do you have time to investigate or do you want me to do it ? Thanks !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/21 06:05;githubbot;600","jbonofre closed pull request #649:
URL: https://github.com/apache/activemq/pull/649


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/21 14:52;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,AMQ-8168,,,,,AMQ-2751,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Apr 21 05:29:31 UTC 2021,,,,,,,,,,,"0|z06bcw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Sep/19 11:16;gtully;The root cause of AMQ-2751 was duplicate redelivery from rollback delayed redelivery, that has been now revisited;;;","04/Sep/19 11:25;jira-bot;Commit 02548777c2954f5ccad918df8b1280fd601f8fd6 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0254877 ]

AMQ-7298 - rework redelivery message tracking to ensure no duplicate suppression (and dlq) in error for local transaction batches that failover
;;;","04/Sep/19 11:30;gtully;The key observation was that local rollback delayed redelivery (with the default 1s retry delay) could produce duplicates. Messages were visible in the unconsumed list (so could be picked up in error by the async dispatcher) and would get replayed after the delay. Using a non default redeliverypolicy.initialRedeliveryDelay=0 to immediately replay could avoid some of the problems so it may be a sensible workaround.;;;","04/Sep/19 12:06;jira-bot;Commit f155e92e58da5882ff83414cbe31abad6e4e2e26 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f155e92 ]

AMQ-7298 - use final modifier in test to preserve older jdk builds
;;;","27/Jan/21 21:05;lichtin;I assume with this change now merged into 5.16.x, I'm seeing a regression when upgrading from 5.15.14.

Server-side redeliveries triggered by the redeliveryPlugin are no longer coming thru, but are (incorrectly) suppressed.

The output from my test with 5.16.1 shows this:
{noformat}
       RedeliveryPlugin  175 | 40 - org.apache.activemq.activemq-osgi - 5.16.1 | redelivery #1 of: ID:mlipc2-4159-1611768583683-1:15:1:1:41 with delay: 1000, dest: queue://TEST2.msgin
ActiveMQMessageConsumer 1485 | 40 - org.apache.activemq.activemq-osgi - 5.16.1 | ID:mlipc2-4159-1611768583683-1:16:1:1 suppressing duplicate delivery on connection, poison acking: MessageDispatch {commandId = 0, responseRequired = false, consumerId = ID:mlipc2-4159-1611768583683-1:16:1:1, destination = queue://TEST2.msgin, message = ActiveMQTextMessage {commandId = 125, responseRequired = true, messageId = ID:mlipc2-4159-1611768583683-1:15:1:1:41, originalDestination = null, originalTransactionId = null, producerId = ID:mlipc2-4159-1611768583683-1:15:1:1, destination = queue://TEST2.msgin, transactionId = null, expiration = 0, timestamp = 1611768605501, arrival = 0, brokerInTime = 1611768607001, brokerOutTime = 1611768607012, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@5f105a66, marshalledProperties = org.apache.activemq.util.ByteSequence@5b2fd55c, dataStructure = null, redeliveryCounter = 1, size = 0, properties = {redeliveryDelay=1000, scheduledJobId=ID:mlipc2-4159-1611768583683-1:15:1:1:2}, readOnlyProperties = true, readOnlyBody = true, droppable = false, jmsXGroupFirstForConsumer = false, text = XXX}, redeliveryCounter = 1}
{noformat};;;","29/Jan/21 13:28;gtully;[~lichtin] would you have a test case handy? does your scenarion fail on master? there are a bunch of related tests referenced in the description that could provide a start point to create a test.;;;","30/Jan/21 21:21;lichtin;I've a test but the code is embedded in our infrastructure, so it will take a while to extract it.

In general, what I see is unrelated to failover. It's a simple server-side redelivery case, configuring the broker with the redeliveryPlugin.
For example:
{noformat}
      <redeliveryPlugin fallbackToDeadLetter=""true"" sendToDlqIfMaxRetriesExceeded=""true"">
        <redeliveryPolicyMap>
          <redeliveryPolicyMap>
            <redeliveryPolicyEntries>
              <redeliveryPolicy queue=""TEST.>"" maximumRedeliveries=""5"" initialRedeliveryDelay=""2000"" redeliveryDelay=""2000"" />
            </redeliveryPolicyEntries>
          </redeliveryPolicyMap>
        </redeliveryPolicyMap>
      </redeliveryPlugin>
{noformat}
then consuming a message from a 'TEST.abc' queue, the test code throwing an exception to let it go back to server so it gets redelivered after 2 seconds. With 5.16.1 this no longer works, as the re-delivery is for some reason is considered a duplicate and suppressed. Of course it is a duplicate, but JMSRedelivered will be set to true, and another header tells the consumer the redelivery count.;;;","28/Feb/21 16:05;lichtin;To reproduce the issue I'm reporting above, use existing test ""BrokerRedeliveryTest"" and modify slightly, so it's using a failover connection.
{noformat}
 diff --git a/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java b/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
index fbc0212f5..aecc54591 100644
--- a/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
+++ b/activemq-unit-tests/src/test/java/org/apache/activemq/broker/BrokerRedeliveryTest.java
@@ -231,7 +233,7 @@ public class BrokerRedeliveryTest extends org.apache.activemq.TestSupport {   @Override
   protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
-        return new ActiveMQConnectionFactory(""vm://localhost"");
+        return new ActiveMQConnectionFactory(""failover:(vm://localhost)"");
   }   @Override{noformat}
Most of the tests start to fail and you'll see the symptom logged as:
{noformat}
... suppressing duplicate delivery on connection, poison acking ... {noformat};;;","16/Apr/21 10:36;gtully;for a potential workaround:
{code:java}
    return new ActiveMQConnectionFactory(""failover:(....)?jms.checkForDuplicates=false"");{code};;;","16/Apr/21 12:12;jira-bot;Commit c4d2ddfce9944cff6ec4003242ce79a2e843aac8 in activemq's branch refs/heads/main from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c4d2ddf ]

AMQ-7298 - fix regression with broker redelivery plugin, fix and test relates to AMQ-8168
;;;","16/Apr/21 12:16;gtully;there was a missing call to rollback the duplicate id cache, and duplicate detection is enabled only for the failover transport. Hense disabling the duplicate detection makes failover work like a normal client. I think the workaround is sensible b/c the duplicate cache is never 100%. The fix can in 5.17.0;;;","16/Apr/21 14:52;jbonofre;[~gtully] should we cherry pick the commit to 5.16.x branch ? I guess yes.;;;","21/Apr/21 05:29;jira-bot;Commit 818d885d6cf5ac4e482888073826d2f41d6cb899 in activemq's branch refs/heads/activemq-5.16.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=818d885 ]

AMQ-7298 - fix regression with broker redelivery plugin, fix and test relates to AMQ-8168

(cherry picked from commit c4d2ddfce9944cff6ec4003242ce79a2e843aac8)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message body is read-only exception when setting property on Bytes message ,AMQ-7291,13253119,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jeqo,jeqo,26/Aug/19 19:29,21/May/20 09:44,13/Jul/23 08:27,21/May/20 09:44,5.x,,,,5.16.0,,,JMS client,,,,,2,,,,,"In [Zipkin's Brave instrumentation for JMS clients|https://github.com/openzipkin/brave/tree/master/instrumentation/jms], we are currently having issues on adding properties to ActiveMQ BytesMessage <https://github.com/openzipkin/brave/issues/967>

 

 While setting String property on `ActiveMQMessage` works fine, setting String property on `ActiveMQBytesMessage` throws ""Message body is read-only exception"".

 

Checking the source code `ActiveMQMessage` only checks if properties are read-only: [https://github.com/apache/activemq/blob/master/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQMessage.java#L493-L495]

 

While `ActiveMQBytesMessage` check if body is read-only when setting property: [https://github.com/apache/activemq/blob/master/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQBytesMessage.java#L917] calling [https://github.com/apache/activemq/blob/master/activemq-client/src/main/java/org/apache/activemq/command/ActiveMQBytesMessage.java#L834]

 

Would love if someone can clarify if this is actually a bug and how to deal with this scenario if it is not.

 ",,avallen,frederic.kneier,gtully,jbonofre,jeqo,jira-bot,me3x,,,,,"gtully commented on issue #420: AMQ-7291 initialize writing to body not needed to set property
URL: https://github.com/apache/activemq/pull/420#issuecomment-586975314
 
 
   I think the change is good, but the pr would  benefit from a little test to show the  broken existing behaviour
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 12:39;githubbot;600","asfgit commented on pull request #420: AMQ-7291 initialize writing to body not needed to set property
URL: https://github.com/apache/activemq/pull/420
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 13:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 21 09:44:03 UTC 2020,,,,,,,,,,,"0|z0621k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Aug/19 19:32;jeqo;This issue seems related: https://issues.apache.org/jira/browse/AMQ-1457;;;","20/Nov/19 14:21;frederic.kneier;IMHO this definitively is a bug if the  ActiveMQBytesMessage allows to clear properties but not to set them afterwards.

It seems that the code  in ActiveMQBytesMessage.setObjectProperty checks for ""readOnlyBody"" while ActiveMQMessage.clearProperties is setting ""readOnlyProperties"".

 

In this case Zipkin is able to clear the properties but not to set them afterwards.;;;","22/Nov/19 14:05;me3x;Please check this PR: [https://github.com/apache/activemq/pull/420];;;","27/Jan/20 08:52;jbonofre;Just as a reminder, the spec says that the message should be read-only (for the payload). I would like to double check the PR to validate we are compliant with the spec.;;;","19/Feb/20 12:59;gtully;[~jbonofre], I think the properties on a message are different, normally not used on bytes messages but there all the same. I think the fix is good, I have a little test case to demonstrates the incorrect behaviour after clear properties. If you don't mind, I will jump in and fix.;;;","19/Feb/20 13:01;jira-bot;Commit 503416a00167e2910630512426df77ecc32492a2 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=503416a ]

AMQ-7291 - allow setting properties after clearProperties for BytesMessage, closes #420
;;;","24/Feb/20 04:59;jira-bot;Commit b999e2b7787f8b9bd556456b1e6ebf4cbfc0881e in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b999e2b ]

AMQ-7291 - allow setting properties after clearProperties for BytesMessage, closes #420

(cherry picked from commit 503416a00167e2910630512426df77ecc32492a2)
;;;","10/Mar/20 10:03;jbonofre;This change is breaking AMQ6244Test unit test.;;;","10/Mar/20 10:03;jbonofre;I'm fixing the test.;;;","10/Mar/20 10:59;jbonofre;This change also impacts the KahaDB Lease test. Let me revert the change to gives time to fix for 5.15.13.;;;","10/Mar/20 15:16;jira-bot;Commit 6355f507c3b8ad5f38853d11e0ae0da58659d0c6 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6355f50 ]

Revert ""AMQ-7291 - allow setting properties after clearProperties for BytesMessage, closes #420""

This reverts commit 503416a00167e2910630512426df77ecc32492a2.
;;;","10/Mar/20 15:16;jira-bot;Commit 6e75460aab63b222984f73d01145b7c229034824 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e75460 ]

Revert ""AMQ-7291 - allow setting properties after clearProperties for BytesMessage, closes #420""

This reverts commit b999e2b7787f8b9bd556456b1e6ebf4cbfc0881e.
;;;","20/May/20 15:20;gtully;[~jbonofre] I am peeking again at this fix and the compression test failure, AMQ6244Test.
I think the solution is to just check for readOnlyProperties in initialiseWriting when we are dealing with properties rather than skip that call. In that way the change is minimal.
I will run the tests with the change to validate.
I don't see any other related failure, as in the kahadb lease test you references is unaffected.
Are you aware of any other related failure?;;;","20/May/20 15:22;jbonofre;[~gtully] Hey, thanks for your help ! No, I don't think we have other related failure.;;;","21/May/20 09:42;jira-bot;Commit 62cfe83e9d16acd0b466e9fb6b40146394b3792d in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=62cfe83 ]

[AMQ-7291] rework fix to initializeWriting but just with the read only properties check
;;;","21/May/20 09:44;gtully;fix reworked to resolve test regression, still doing intializeWriting but without the readonly body check which was in error.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Security Vulnerabilities in Libraries - jackson-databind-2.9.8.jar, tomcat-servlet-api-8.0.53.jar, tomcat-websocket-api-8.0.53.jar, zookeeper-3.4.6.jar, guava-18.0.jar, jetty-all-9.2.26.v20180806.jar, scala-library-2.11.0.jar",AMQ-7279,13251950,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,vipink,vipink,20/Aug/19 23:00,19/Nov/19 04:23,13/Jul/23 08:27,19/Nov/19 04:23,5.15.9,,,,5.15.11,5.16.0,,,,,,,0,security,security-issue,vulnerabilities,vulnerability,"
||Library||Sev||Description||NewVersion
|jackson-databind-2.9.8.jar|SEV-2|FasterXML contains a flaw in jackson-databind jsontype/impl/SubTypeValidator.java related to EHCache that is triggered as user-supplied JavaScript content is insecurely deserialized. This may allow a remote attacker to potentially execute arbitrary code. - VulnDB-209928|2.9.9.2
|tomcat-servlet-api-8.0.53.jar|SEV-3|Apache Tomcat 7.x through 7.0.70 and 8.x through 8.5.4, when the CGI Servlet is enabled, follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an ""httpoxy"" issue. NOTE: the vendor states ""A mitigation is planned for future releases of Tomcat, tracked as CVE-2016-5388""; in other words, this is not a CVE ID for a vulnerability. - CVE-2016-5388|9.0.22
|tomcat-websocket-api-8.0.53.jar|SEV - 4|Apache Tomcat contains a flaw that is due to the program using insecure default settings for the CORS filter. This may potentially cause a system to be left in an insecure state if these settings have not been changed by an administrator. - VulnDB-180717|9.0.22
|zookeeper-3.4.6.jar|SEV-4|Two four letter word commands ""wchp/wchc"" are CPU intensive and could cause spike of CPU utilization on Apache ZooKeeper server if abused, which leads to the server unable to serve legitimate client requests. Apache ZooKeeper thru version 3.4.9 and 3.5.2 suffer from this issue, fixed in 3.4.10, 3.5.3, and later. - CVE-2017-5637|3.5.5
|zookeeper-3.4.6.jar|SEV-4|No authentication/authorization is enforced when a server attempts to join a quorum in Apache ZooKeeper before 3.4.10, and 3.5.0-alpha through 3.5.3-beta. As a result an arbitrary end point could join the cluster and begin propagating counterfeit changes to the leader. - CVE-2018-8012|3.5.5
|zookeeper-3.4.6.jar|SEV-4|An issue is present in Apache ZooKeeper 1.0.0 to 3.4.13 and 3.5.0-alpha to 3.5.4-beta. ZooKeeper?s getACL() command doesn?t check any permission when retrieves the ACLs of the requested node and returns all information contained in the ACL Id field as plaintext string. DigestAuthenticationProvider overloads the Id field with the hash value that is used for user authentication. As a consequence, if Digest Authentication is in use, the unsalted hash value will be disclosed by getACL() request for unauthenticated or unprivileged users. - CVE-2019-0201|3.5.5
|zookeeper-3.4.6.jar|SEV-4|Apache ZooKeeper contains an overflow condition in the cli_st and cli_mt C client shells that is triggered when handling 'cmd:' batch mode syntax input commands. This may allow a local attacker to cause a buffer overflow and potentially execute arbitrary code. - VulnDB-144410|3.5.5
|zookeeper-3.4.6.jar|SEV-4|Buffer overflow in the C cli shell in Apache Zookeeper before 3.4.9 and 3.5.x before 3.5.3, when using the ""cmd:"" batch mode syntax, allows attackers to have unspecified impact via a long command string. - CVE-2016-5017|3.5.5
|guava-18.0.jar|SEV-4|Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable. - CVE-2018-10237|23.0
|jetty-all-9.2.26.v20180806.jar|SEV-4|In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request. - CVE-2017-7657|??
|jetty-all-9.2.26.v20180806.jar|SEV-4|In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. - CVE-2017-7658|??
|jetty-all-9.2.26.v20180806.jar|SEV-4|In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response. - CVE-2017-7656|??
|jetty-all-9.2.26.v20180806.jar|SEV-4|Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords. - CVE-2017-9735|??
|jetty-all-9.2.26.v20180806.jar|SEV-4|In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system. - CVE-2018-12536|??
|jetty-all-9.2.26.v20180806.jar|SEV-4|In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents. - CVE-2019-10241|??
|jetty-all-9.2.26.v20180806.jar|SEV-4|In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each  - CVE-2019-10247|??
|scala-library-2.11.0.jar|SEV-4|The compilation daemon in Scala before 2.10.7, 2.11.x before 2.11.12, and 2.12.x before 2.12.4 uses weak permissions for private files in /tmp/scala-devel/${USER:shared}/scalac-compile-server-port, which allows local users to write to arbitrary class files and consequently gain privileges. - CVE-2017-15288|2.12.8
",,vipink,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2019-08-20 23:00:04.0,,,,,,,,,,,"0|z05uu8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue's copyMatchingMessages effects maxPageSize in error,AMQ-7270,13249403,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,07/Aug/19 16:39,07/Aug/19 16:53,13/Jul/23 08:27,07/Aug/19 16:53,5.15.0,,,,5.16.0,,,Broker,,,,,0,,,,,"The copyMatchingMessages jmx op toggles the destination maxPageSize attribute. It should not do this b/c it is not thread safe and can effect other paging operations like dispatch and purge.
In addition, concurrent calls to copyMatchingMessages can leave the value at queueDepth.
For large queues, have the maxPageSize == queueDepth means we try and page in the entire queue, leading to an OOM.
For non persistent brokers or where all messages are cached, it is sensible to attempt to reference all of the messages in the queue, however in general respecting the maxPageSize is advisable.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 07 16:51:45 UTC 2019,,,,,,,,,,,"0|z05f94:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Aug/19 16:51;jira-bot;Commit fb2296ac7447c4e2bfba806ad419ec2c2c2ada8d in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fb2296a ]

AMQ-7270 - remove toggle on maxPageSize, request page in of entire queue only when cache is in play or broker is non persistent, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ feature doesn't install on Karaf 4.2.x,AMQ-7254,13247335,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,26/Jul/19 14:29,02/Nov/19 05:29,13/Jul/23 08:27,07/Aug/19 05:39,,,,,5.15.10,5.16.0,,OSGi/Karaf,,,,,0,,,,,"The {{activemq-broker}} feature doesn't install on Karaf 4.2.x due to:

{code}
Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activemq-broker; type=karaf.feature; version=""[5.15.10.SNAPSHOT,5.15.10.SNAPSHOT]""; filter:=""(&(osgi.identity=activemq-broker)(type=karaf.feature)(version>=5.15.10.SNAPSHOT)(version<=5.15.10.SNAPSHOT))"" [caused by: Unable to resolve activemq-broker/5.15.10.SNAPSHOT: missing requirement [activemq-broker/5.15.10.SNAPSHOT] osgi.identity; osgi.identity=activemq; type=karaf.feature; version=""[5.15.10.SNAPSHOT,5.15.10.SNAPSHOT]"" [caused by: Unable to resolve activemq/5.15.10.SNAPSHOT: missing requirement [activemq/5.15.10.SNAPSHOT] osgi.identity; osgi.identity=activemq-client; type=karaf.feature; version=""[5.15.10.SNAPSHOT,5.15.10.SNAPSHOT]"" [caused by: Unable to resolve activemq-client/5.15.10.SNAPSHOT: missing requirement [activemq-client/5.15.10.SNAPSHOT] osgi.identity; osgi.identity=org.apache.activemq.activemq-osgi; type=osgi.bundle; version=""[5.15.10.SNAPSHOT,5.15.10.SNAPSHOT]""; resolution:=mandatory [caused by: Unable to resolve org.apache.activemq.activemq-osgi/5.15.10.SNAPSHOT: missing requirement [org.apache.activemq.activemq-osgi/5.15.10.SNAPSHOT] osgi.wiring.package; filter:=""(osgi.wiring.package=com.google.errorprone.annotations)""]]]]
{code}",,jbonofre,jira-bot,manid,,,,,,,,,"jbonofre commented on pull request #381: [AMQ-7254] Fix OSGi headers
URL: https://github.com/apache/activemq/pull/381
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/19 06:39;githubbot;600","jbonofre commented on pull request #381: [AMQ-7254] Fix OSGi headers
URL: https://github.com/apache/activemq/pull/381
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/19 05:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 07 05:39:14 UTC 2019,,,,,,,,,,,"0|z052ig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"27/Jul/19 05:21;jbonofre;I think it's related to the guava update (from 18.0 to 28.0). The features.xml should be probably updated. I'm tackling that.;;;","04/Aug/19 06:18;jbonofre;This is related to the guava update introduced by this commit:

{code}
commit db5561a9975ade8a9c2eae4b6afa1b21fc8e0b0a (refs/bisect/good-db5561a9975ade8a9c2eae4b6afa1b21fc8e0b0a)
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   Thu Jul 18 08:50:14 2019 -0400

    AMQ-7208 - update Guava to 28.0-jre
    
    (cherry picked from commit e6f4d2f97c720b1e2a98e12794e573d874d75bca)
{code}

I'm checking to update the feature, else I will revert for 5.15.10.;;;","04/Aug/19 06:27;jbonofre;I fixed {{activemq-osgi}} bundle with adding private package. I'm doing the same for {{activemq-client}} bundle.;;;","07/Aug/19 05:38;jira-bot;Commit 7e72fbc98b483bcce19c56f52a2d407260113b23 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7e72fbc ]

[AMQ-7254] Fix OSGi headers
;;;","07/Aug/19 05:38;jira-bot;Commit ef1c17c7def4b4ac76dd87dba3df22164740e5b2 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ef1c17c ]

Merge pull request #381 from jbonofre/AMQ-7254

[AMQ-7254] Fix OSGi headers;;;","07/Aug/19 05:38;jira-bot;Commit ef1c17c7def4b4ac76dd87dba3df22164740e5b2 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ef1c17c ]

Merge pull request #381 from jbonofre/AMQ-7254

[AMQ-7254] Fix OSGi headers;;;","07/Aug/19 05:39;jira-bot;Commit 4399eda62a10fc96b6240b5dc1acfd6b25763c1f in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4399eda ]

[AMQ-7254] Fix OSGi headers
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SEV2 Vulnerabilities: Apache ActiveMQ Server libraries: commons-net-3.6.jar and velocity-1.7.jar,AMQ-7252,13247159,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,vipink,vipink,25/Jul/19 21:58,18/Nov/19 20:20,13/Jul/23 08:27,18/Nov/19 20:20,5.15.9,,,,5.15.11,5.16.0,,,,,,,0,security-issue,vulnerabilities,,,"SEV2 Vulnerabilities: Apache ActiveMQ Server libraries: commons-net-3.6.jar and velocity-1.7.jar

 

commons-net-3.6.jar
 * Apache Commons Net contains a flaw in the changeWorkingDirectory() function in ftpClient.java that is triggered as user-supplied input is not properly sanitized. This may allow a remote attacker to use a newline character in a specially crafted string to execute arbitrary commands.

 

velocity-1.7.jar
 * Apache Commons FileUpload contains flaw that is due to ParametersInterceptor allowing access to the 'class' parameter. This may allow a remote attacker to manipulate the ClassLoader and execute arbitrary Java code.

 
 * Apache Commons Collections contains a flaw in the InvokerTransformer class. This issue is triggered when handling Java code, which may invoke unsafe deserialize calls. This may allow a remote attacker to execute arbitrary code.

 
 * Apache Velocity contains a flaw that allows traversing outside of a restricted path. The issue is due to VelocityLayoutServlet not properly sanitizing user input, specifically path traversal style attacks (e.g. '../') supplied via the 'layout' parameter. With a specially crafted request, a remote attacker can gain access to potentially sensitive information.",,jbonofre,jira-bot,vipink,,,,,,,,,"jbonofre commented on pull request #414: [AMQ-7252] Upgrade to Velocity 2.1
URL: https://github.com/apache/activemq/pull/414
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Nov/19 05:08;githubbot;600","jbonofre commented on pull request #414: [AMQ-7252] Upgrade to Velocity 2.1
URL: https://github.com/apache/activemq/pull/414
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 20:19;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Mon Nov 18 20:20:20 UTC 2019,,,,,,,,,,,"0|z051fc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jul/19 12:43;jbonofre;commons-net 3.6 and velocity 1.7 are the latest releases there. I will update as soon as we have new releases.;;;","15/Aug/19 22:48;vipink;[~jbonofre], I checked the apache velocity project and it appears that 2.1 is available (https://velocity.apache.org/news.html#engine21), could you please see if this can be updated to counter the reported vulnerability? ;;;","18/Nov/19 20:19;jira-bot;Commit 4f07dc5b49fbdc422349abc10c89323fdbdce059 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4f07dc5 ]

[AMQ-7252] Upgrade to Velocity 2.1
;;;","18/Nov/19 20:19;jira-bot;Commit 0829c3efd8273e5768e64c93ab184d08ebf2d64f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0829c3e ]

Merge pull request #414 from jbonofre/AMQ-7252

[AMQ-7252] Upgrade to Velocity 2.1;;;","18/Nov/19 20:19;jira-bot;Commit 0829c3efd8273e5768e64c93ab184d08ebf2d64f in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0829c3e ]

Merge pull request #414 from jbonofre/AMQ-7252

[AMQ-7252] Upgrade to Velocity 2.1;;;","18/Nov/19 20:20;jira-bot;Commit 8434f86de80e062a4b91338f3bbf4b3a3c0b013a in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8434f86 ]

[AMQ-7252] Upgrade to Velocity 2.1

(cherry picked from commit 4f07dc5b49fbdc422349abc10c89323fdbdce059)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Upgrade to Camel 2.24.1 and Jetty 9.4.19,AMQ-7249,13246524,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jbonofre,hkasarla,hkasarla,23/Jul/19 09:12,24/Feb/20 14:04,13/Jul/23 08:27,24/Aug/19 05:24,5.15.9,,,,5.15.10,5.16.0,,Camel,,,,,0,Apache,camel-core,,,"Latest version of ActiveMQ(5.15.9) which has dependent jars has Security Vulnerabilities.

*Below are the jars with Security Vulnerabilities.*

 

*1) camel-core-2.19.5.jar :* To be updated to latest version(camel-core-2.24.1.jar or above).

*Reference* : CVE-2019-0188 

*Path :* org.apache.activemq-5.15.9_1/lib/camel/camel-core-2.19.5.jar

 

*2) apache-jsp-9.2.25.v20180606.jar:* To be updated to latest version (apache-jsp-9.4.19.v20190610.jar) 

*Reference:* CVE-2018-8014 , CVE-2018-8034, CVE-2019-10241, CVE-2019-10247,CVE-2017-6056

 

*Path:* org.apache.activemq-5.15.9_1/lib/web/apache-jsp-8.0.33.jar

        : org.apache.activemq-5.15.9_1/lib/web/apache-jsp-9.2.25.v20180606.jar

 

3) *scala-library-2.11.0.jar:* To be updated to 2.13.0 version. ActiveMQ library has dependency with scala-library.jar

*Path:* org.apache.activemq-5.15.9_1/lib/optional/scala-library-2.11.0.jar

*Reference:*  [https://nvd.nist.gov/vuln/detail/CVE-2017-15288]

Need to upgrade the above jars to the the recommended version or provide an alternative way to replace the existing jar version with the updated versions.

 ",,coheigea,cshannon,hkasarla,jbonofre,jira-bot,,,,,,,"jbonofre commented on pull request #379: [AMQ-7249] jetty, scala and camel upgrades for vulnerabilities fixes
URL: https://github.com/apache/activemq/pull/379
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 14:05;githubbot;600","jbonofre commented on issue #379: [AMQ-7249] jetty, scala and camel upgrades for vulnerabilities fixes
URL: https://github.com/apache/activemq/pull/379#issuecomment-518950389
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/19 05:49;githubbot;600","jbonofre commented on pull request #386: [AMQ-7249] Upgrade to Camel 2.24.1
URL: https://github.com/apache/activemq/pull/386
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/19 05:57;githubbot;600","jbonofre commented on pull request #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/19 05:59;githubbot;600","jbonofre commented on pull request #388: [AMQ-7249] Upgrade to Scala 2.13.0
URL: https://github.com/apache/activemq/pull/388
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/19 06:02;githubbot;600","jbonofre commented on pull request #379: [AMQ-7249] jetty, scala and camel upgrades for vulnerabilities fixes
URL: https://github.com/apache/activemq/pull/379
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/19 06:02;githubbot;600","jbonofre commented on pull request #386: [AMQ-7249] Upgrade to Camel 2.24.1
URL: https://github.com/apache/activemq/pull/386
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/19 11:07;githubbot;600","coheigea commented on issue #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387#issuecomment-520835904
 
 
   @jbonofre I have a fix for the failing tests in the http module. The karaf itests are also failing though.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/19 13:32;githubbot;600","coheigea commented on issue #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387#issuecomment-522606198
 
 
   @jbonofre The karaf itests are failing with:
   
   Caused by: org.apache.felix.resolver.reason.ReasonException: Unable to resolve activemq-broker/5.16.0.SNAPSHOT: missing requirement [activemq-broker/5.16.0.SNAPSHOT] osgi.identity; osgi.identity=activemq; type=karaf.feature; version=""[5.16.0.SNAPSHOT,5.16.0.SNAPSHOT]"" [caused by: Unable to resolve activemq/5.16.0.SNAPSHOT: missing requirement [activemq/5.16.0.SNAPSHOT] osgi.identity; osgi.identity=activemq-karaf; type=osgi.bundle; version=""[5.16.0.SNAPSHOT,5.16.0.SNAPSHOT]""; resolution:=mandatory [caused by: Unable to resolve activemq-karaf/5.16.0.SNAPSHOT: missing requirement [activemq-karaf/5.16.0.SNAPSHOT] osgi.wiring.package; filter:=""(osgi.wiring.package=org.apache.activemq.console.command)"" [caused by: Unable to resolve org.apache.activemq.activemq-osgi/5.16.0.SNAPSHOT: missing requirement [org.apache.activemq.activemq-osgi/5.16.0.SNAPSHOT] osgi.wiring.package; filter:=""(&(osgi.wiring.package=javax.transaction)(version>=1.3.0)(!(version>=2.0.0)))""]]]
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Aug/19 14:42;githubbot;600","jbonofre commented on issue #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387#issuecomment-522668383
 
 
   @coheigea I think I already have a fix. I gonna rebase, squash and push.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Aug/19 17:08;githubbot;600","jbonofre commented on issue #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387#issuecomment-523764014
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Aug/19 06:13;githubbot;600","jbonofre commented on issue #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387#issuecomment-523764014
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Aug/19 06:13;githubbot;600","jbonofre commented on pull request #387: [AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
URL: https://github.com/apache/activemq/pull/387
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Aug/19 05:22;githubbot;600","jbonofre commented on issue #388: [AMQ-7249] Upgrade to Scala 2.13.0
URL: https://github.com/apache/activemq/pull/388#issuecomment-544144586
 
 
   Note: scala is only used in leveldb which is now deprecated. I don't consider this one as a blocker as we should remove leveldb from the codebase.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Oct/19 13:37;githubbot;600","jbonofre commented on pull request #388: [AMQ-7249] Upgrade to Scala 2.13.0
URL: https://github.com/apache/activemq/pull/388
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Feb/20 14:04;githubbot;600",,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Aug 24 05:23:47 UTC 2019,,,,,,,,,,,"0|z04xig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Jul/19 10:16;cshannon;In regards to your comment about providing a way to replace the existing jar....You don't have to wait for a new release for updated libraries as you can always update dependencies yourself (most of the time there won't be issues especially just for bug fix updates.) You can simply just replace them in the lib directory. This is even easier if building your project using Maven.  Also keep in mind just because there's a vulnerability in a 3rd party library that doesn't necessarily mean ActiveMQ uses the library in a way to expose the vulnerability.;;;","24/Jul/19 04:19;hkasarla;Thanks for the update [~cshannon], Will give it a try.;;;","12/Aug/19 11:07;jira-bot;Commit 5cd5b8d884ca1268ac32a09db3974c2a609a942d in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5cd5b8d ]

[AMQ-7249] Upgrade to Camel 2.24.1
;;;","12/Aug/19 11:07;jira-bot;Commit e3cc5ef4bc46a441da43e2d294cd521a89f7bbd6 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e3cc5ef ]

Merge pull request #386 from jbonofre/CAMEL-UPDATE

[AMQ-7249] Upgrade to Camel 2.24.1;;;","12/Aug/19 11:09;jira-bot;Commit 60a4d0732fe34c1b2c336b1c011169a4cbbd8978 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=60a4d07 ]

[AMQ-7249] Upgrade to Camel 2.24.1
;;;","12/Aug/19 13:09;cshannon;[~jbonofre] - I'm getting a compilation failure in activemq-camel in the 5.15.x branch;;;","12/Aug/19 13:51;jbonofre;[~cshannon] hmm, let me check. Thanks for the report (I'm running several builds at same time (master and 5.15.x).;;;","12/Aug/19 13:54;jbonofre;Yeah, it works on {{master}} but not on {{5.15.x}}, I'm fixing.;;;","12/Aug/19 14:10;jbonofre;It's now fixed, sorry for the inconvenience.;;;","20/Aug/19 19:50;jbonofre;The scala update (to 2.13.0) has an important impact (especially on leveldb module). So, I'm postponing the update to 5.15.11.  I'm including the Jetty upgrade.;;;","24/Aug/19 05:22;jira-bot;Commit 973c78cbecd1c0c5eb61c8e16d60979574c9b751 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=973c78c ]

[AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
;;;","24/Aug/19 05:22;jira-bot;Commit 1f410f8685c4b4c9c30eb11aefb4d25e8b3fcbc7 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1f410f8 ]

Merge pull request #387 from jbonofre/JETTY-UPGRADE

[AMQ-7249] Upgrade to Jetty 9.4.19.v20190610;;;","24/Aug/19 05:23;jira-bot;Commit a36c502bff2cfe263d055c4588e8434e8080aace in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a36c502 ]

[AMQ-7249] Upgrade to Jetty 9.4.19.v20190610
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Demand Bridge does not always clean up subscription properly out of remoteId map,AMQ-7238,13243665,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,cshannon,cshannon,cshannon,08/Jul/19 12:38,08/Jul/19 12:40,13/Jul/23 08:27,08/Jul/19 12:40,5.15.9,,,,5.15.10,5.16.0,,,,,,,0,,,,,In the DemandForwardingBridgeSupport class there are two maps to track DemandSubscriptions (tracked by both local and remote consumer Ids). There are a couple of cases where the subscription gets cleared from the local map when demand goes away but the remote map is not cleared leading to a memory leak.,,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 08 12:40:06 UTC 2019,,,,,,,,,,,"0|z04gfs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/Jul/19 12:39;jira-bot;Commit c7eff840588be718da9a985d5c2b8db89b26796d in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c7eff84 ]

AMQ-7238 - Ensure remoteId subscription map is also cleared when local
map is cleared inside DemandForwardingBridgeSupport
;;;","08/Jul/19 12:40;jira-bot;Commit 8a11ab4a1b59693e498f16e629f7e21191445e6f in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8a11ab4 ]

AMQ-7238 - Ensure remoteId subscription map is also cleared when local
map is cleared inside DemandForwardingBridgeSupport

(cherry picked from commit c7eff840588be718da9a985d5c2b8db89b26796d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SEV-1 Security vulnerability in spring-expression-4.3.11.RELEASE.jar (spring framework) and xstream-1.4.10.jar ,AMQ-7236,13243045,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,vipink,vipink,03/Jul/19 17:09,01/Nov/19 07:29,13/Jul/23 08:27,18/Jul/19 12:38,5.15.9,,,,5.15.10,5.16.0,,,,,,,0,,,,,"Security vulnerability in spring-expression-4.3.11.RELEASE.jar (spring framework) can it be upgraded to spring-expression-5.1.6.RELEASE.jar

SEV-1

CVE-2018-1270 (Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.)

CVE-2018-1275 (Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework.)

 

SEV-2

CVE-2018-1199 (Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.)

 

SEV2 - for XStream:1.4.10 

CVE-2013-7285 (Xstream API versions up to 1.4.6 and version 1.4.10, if the security framework has not been initialized, may allow a remote attacker to run arbitrary shell commands by manipulating the processed input stream when unmarshaling XML or any supported format. e.g. JSON.)

 ",Apache ActiveMQ 5.15.9,coheigea,cshannon,jira-bot,vipink,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7288,,,,,,,,,,,AMQ-7315,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 19 15:04:01 UTC 2019,,,,,,,,,,,"0|z04cmw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jul/19 12:37;jira-bot;Commit 61d141d350428819e1c569b2b0b29575e9a2507f in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=61d141d ]

AMQ-7236 - Update Spring and xstream to latest
;;;","18/Jul/19 12:37;jira-bot;Commit d065db5560cd50150f83bef06d658e7abee0ab1a in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d065db5 ]

AMQ-7236 - Update Spring and xstream to latest

(cherry picked from commit 61d141d350428819e1c569b2b0b29575e9a2507f)
;;;","18/Jul/19 12:38;cshannon;spring and xstream updated;;;","19/Jul/19 14:15;vipink;[~cshannon], when will the new versions be out?;;;","19/Jul/19 14:34;cshannon;I'm not sure we don't have a release date yet but you can always update dependencies on your own in the meantime.;;;","19/Jul/19 15:04;vipink;[~cshannon], is there an associated code change for these? or just upgrading the spring and xstream libraries under 5.15.9 is enough?;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Topic flow control with messages in a transaction can loop forever waiting for usage,AMQ-7234,13240895,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Jun/19 15:52,08/Jul/19 10:40,13/Jul/23 08:27,21/Jun/19 16:01,5.15.0,,,,5.15.10,5.16.0,,Broker,,,,,0,,,,,"The memory usage wait(timeout > 0) does not respect the timeout.  Topic pfc loops on that wait to check the connection context, but it never gets to check the status and stays hung even when jmx is used to kill the connection.
If the topic producer uses alwaysSendSync it avoids this code path and can be closes via JMX and the rollback will release resources as expected.
",,davidhilton68,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 08 10:40:46 UTC 2019,,,,,,,,,,,"0|z03zdk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Jun/19 15:55;jira-bot;Commit de3f77063fa579159184d23ac98df97e80d63327 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=de3f770 ]

AMQ-7234 - fix up memory usage wait timeout such that topic pfc in a transaction can see connection context state changes, fix and test
;;;","21/Jun/19 16:01;gtully;Not sure why MemoryUsage must override the wait, wait(timeout) wait high water mark etc from Usage. I was tempted to delegate (ie delete the impls in memory usage) but there must be some good reason for the specialisation.
I have used the same pattern as usage.wait(..) with the MAX_VALUE to signal for ever. It is not ideal but consistent and does fix the root cause.;;;","08/Jul/19 10:40;jira-bot;Commit ede4dbc8649792628b1135db9cdf9b06fd6844df in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ede4dbc ]

AMQ-7234 - fix up memory usage wait timeout such that topic pfc in a transaction can see connection context state changes, fix and test

(cherry picked from commit de3f77063fa579159184d23ac98df97e80d63327)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory  connection close does not delete temp dests if there is an active consumer,AMQ-7233,13240379,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Jun/19 09:26,19/Jun/19 09:30,13/Jul/23 08:27,19/Jun/19 09:30,5.15.0,,,,5.16.0,,,ConnectionPool,JMS client,,,,0,PooledConnectionFactory,,,,"connection.close should delete temp dests and close any sessions etc.. AMQ-2349 sorted this for the pooled connection, however the sessions should have been closed before the temp destination cleanup.
at the moment the temps remain in error and there is an info warn: 
{code}
INFO: failed to delete Temporary Queue ""temp-queue://ID:..."" on closing pooled connection: A consumer is consuming from the temporary destination
{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-2349,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 19 09:30:18 UTC 2019,,,,,,,,,,,"0|z03w7k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Jun/19 09:30;jira-bot;Commit efc857fc1f679631dcb98b9bf6b13317e7a80785 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=efc857f ]

AMQ-7233 - ensure sessions are cleaned up on pooledconnection.close before temp dests to ensure temp dests actually get deleted, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XSS in webconsole,AMQ-7231,13239901,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,coheigea,tobb,tobb,17/Jun/19 10:06,14/May/20 05:26,13/Jul/23 08:27,03/Feb/20 15:17,5.15.6,,,,5.15.12,5.16.0,,Web Console,,,,,0,,,,,"The admin GUI is very much open to XSS, in the view that lists the contents of a queue. 

Using Camel, here is the code required to make the GUI run JavaScript-code:
{code:java}
messageQueue.sendBodyAndHeader(""activemq:hack"", ""body"", ""hack"", ""hello}\""><script>alert('XSS :(');</script>"");
{code}
This also happens when you have a header containing xml, where an element holds an attribute:
{code:java}
messageQueue.sendBodyAndHeader(""activemq:hack"", ""body"", ""hack"", ""<Something something=\""something\"">hello</noe>><script>alert('XSS :(');</script>"");
{code}
Seems to be due to how the title of the message is generated. This last one also messes up the way a message is displayed in the list, since it will start displaying the xml content after the attribute as HTML.",,jira-bot,tobb,,,,,,,,,,"coheigea commented on pull request #429: AMQ-7231 - Fix XSS in WebConsole
URL: https://github.com/apache/activemq/pull/429
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/20 19:15;githubbot;600","jbonofre commented on pull request #429: AMQ-7231 - Fix XSS in WebConsole
URL: https://github.com/apache/activemq/pull/429
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 15:15;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Feb 03 15:16:21 UTC 2020,,,,,,,,,,,"0|z03ta0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Feb/20 15:15;jira-bot;Commit 81bd743eaa243f0cc5dfbb1342cee1fef1fc5df2 in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=81bd743 ]

AMQ-7231 - Fix XSS in WebConsole
;;;","03/Feb/20 15:15;jira-bot;Commit c0e17a35f566e113c6e1c814922527c17a42b4cf in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c0e17a3 ]

Merge pull request #429 from coheigea/AMQ-7231

AMQ-7231 - Fix XSS in WebConsole;;;","03/Feb/20 15:15;jira-bot;Commit c0e17a35f566e113c6e1c814922527c17a42b4cf in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c0e17a3 ]

Merge pull request #429 from coheigea/AMQ-7231

AMQ-7231 - Fix XSS in WebConsole;;;","03/Feb/20 15:16;jira-bot;Commit 7793a952e2b3c002b172fb2c52b84ca5c4febe2d in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7793a95 ]

AMQ-7231 - Fix XSS in WebConsole

(cherry picked from commit 81bd743eaa243f0cc5dfbb1342cee1fef1fc5df2)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Legacy store load failed: java.io.FileNotFoundException scheduleDB.free,AMQ-7227,13239487,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,14/Jun/19 08:58,14/Jun/19 14:34,13/Jul/23 08:27,14/Jun/19 09:08,5.15.0,,,,5.15.10,5.16.0,,Job Scheduler,,,,,0,,,,,"The job scheduler migration moves the old store to a legacy directory for replay. In an effort to filter to just the relevant files, it excludes the db.free file in error.",scheduler store migration from 5.9.x,fvaleri,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 14 14:34:42 UTC 2019,,,,,,,,,,,"0|z03qq0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Jun/19 09:04;jira-bot;Commit 4d5e41ca284d884d0372b489dfa082e8f5d88cb0 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4d5e41c ]

AMQ-7227 - ensure db.free file is moved in scheduler store upgrade process
;;;","14/Jun/19 09:12;gtully;note: it is possible to workaround if the scheduleDB.free is copied to a newly created legacySchedulerStore directory after the broker is stopped and  *before* upgrade.;;;","14/Jun/19 11:53;fvaleri;The {{scheduleDB.free}} file is produced during regular shutdowns only when there are free pages, so no need to apply any workaround if this file is not there after shutdown. It is deleted once it is read and created again on next shutdown.;;;","14/Jun/19 14:34;jira-bot;Commit 996081ec2d4450c38887e47f65bfd9bd9107ab14 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=996081e ]

AMQ-7227 - ensure db.free file is moved in scheduler store upgrade process

(cherry picked from commit 4d5e41ca284d884d0372b489dfa082e8f5d88cb0)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[mKahadb] over eager cleanup processing during recovery,AMQ-7225,13238521,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,10/Jun/19 12:48,14/Jun/19 14:34,13/Jul/23 08:27,10/Jun/19 14:36,5.15.0,,,,5.15.10,5.16.0,,Message Store,,,,,0,,,,,"it is possible to generated a failed recovery (and failed broker start) with:
{code:java}
java.io.IOException: Could not locate data file <..>
 {code} potentially leading to heuristic rollbacks or partially completed transactions.
the cleanup task is kicked off in parallel with recovery which is the root cause of the problem.
",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jun 14 14:34:44 UTC 2019,,,,,,,,,,,"0|z03ksg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Jun/19 14:33;jira-bot;Commit 93e726d6a7ba9ed44f5440369f8f9f1b41f49373 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=93e726d ]

AMQ-7225 - defer cleanup task operation till recovery processing complete, track prepared location in recovered ops to ensure they are retained on recovery failure. Fix and test
;;;","11/Jun/19 11:26;cshannon;[~gtully] - As a heads up it looks like your new test is failing in CI: [https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastCompletedBuild/org.apache.activemq$activemq-unit-tests/testReport/org.apache.activemq.bugs/MKahaDBTxRecoveryTest/testCommitOutcomeDeliveryOnRecovery/];;;","11/Jun/19 11:36;jira-bot;Commit 28a0cc6e5a78adb4b0b0134c860911c921f6a074 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=28a0cc6 ]

AMQ-7225 - fix intermittent failure, avoid gc of partial tx pending commit
;;;","11/Jun/19 11:41;gtully;[~cshannon] thanks. I noticed the same thing. there was another window where cleanup could get in the way, a 100ms interval showed it up reliably. is sorted now.;;;","14/Jun/19 14:34;jira-bot;Commit ef0ec42885dc82bb31f266cc6cfe3c4065438453 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ef0ec42 ]

AMQ-7225 - defer cleanup task operation till recovery processing complete, track prepared location in recovered ops to ensure they are retained on recovery failure. Fix and test

(cherry picked from commit 93e726d6a7ba9ed44f5440369f8f9f1b41f49373)
;;;","14/Jun/19 14:34;jira-bot;Commit 6ff79d85aae0068ede78927b7ea13d2783d9c767 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6ff79d8 ]

AMQ-7225 - fix intermittent failure, avoid gc of partial tx pending commit

(cherry picked from commit 28a0cc6e5a78adb4b0b0134c860911c921f6a074)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ replays journal file on a clean/unclean shutdown with transacted session + Non persistent Messages,AMQ-7219,13236391,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,alanprot,alanprot,30/May/19 03:00,31/May/19 17:14,13/Jul/23 08:27,31/May/19 09:07,5.15.9,,,,5.16.0,,,KahaDB,,,,,0,,,,,"Hi,

 

Sending non persistent messages on a Transacted session is causing activeMQ to keep and replay (on startup) unnecessary journal files. If all messages are in this situation activemq will replay the whole journal file even with a clean shutdown.

 The problem is because is if the transaction has no persistent operation, the metadata.lastUpdate is never updated.

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java#L1400]",,alanprot,gtully,jira-bot,,,,,,,,,"alanprot commented on pull request #363: AMQ-7219 - ActiveMQ replays journal file on a clean/unclean shutdown …
URL: https://github.com/apache/activemq/pull/363
 
 
   …with transacted session + Non persistent Messages
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 03:02;githubbot;600","alanprot commented on issue #363: AMQ-7219 - ActiveMQ replays journal file on a clean/unclean shutdown …
URL: https://github.com/apache/activemq/pull/363#issuecomment-497408290
 
 
   Yeah... @gtully thanks for the heads up! I missed that!
   
   I changed the PR to use the 'processLocation' method -> it locks the index.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 17:14;githubbot;600","gtully commented on pull request #363: AMQ-7219 - ActiveMQ replays journal file on a clean/unclean shutdown …
URL: https://github.com/apache/activemq/pull/363
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/May/19 09:03;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 31 17:14:09 UTC 2019,,,,,,,,,,,"0|z037q0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/May/19 09:03;jira-bot;Commit bce979349ea9be499d1a686582e8638d369251d1 in activemq's branch refs/heads/master from Alan Protasio
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=bce9793 ]

AMQ-7219 - ActiveMQ replays journal file on a clean/unclean shutdown with transacted session + Non persistent Messages
;;;","31/May/19 09:03;jira-bot;Commit f5db964e86fc26bae00118f3342353b396fecf15 in activemq's branch refs/heads/master from Gary Tully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f5db964 ]

Merge pull request #363 from alanprot/fix/empty-transaction

AMQ-7219 - ActiveMQ replays journal file on a clean/unclean shutdown …;;;","31/May/19 09:07;gtully;looks good.

it does beg the question; can we bypass the journal write for the empty commit, maybe that is something for future work. It would not be a trivial change, but maybe something to consider.;;;","31/May/19 17:14;alanprot;Thanks [~gtully]

 

I thought the same about skipping the write of the commit command for empty transactions.. But it would be a larger change... Probably we would have to create another visitor to execute the write and call it [here]([https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java#L1133])

This would be an optimization though..  I can create another Jira and do this if you think it worth!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP: V1.2 client that acks inside a TX can lose ability to ack after TX abort,AMQ-7218,13236338,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,29/May/19 21:13,30/May/19 14:47,13/Jul/23 08:27,30/May/19 14:47,5.15.9,,,,5.15.10,5.16.0,,STOMP,,,,,0,,,,,"When acknowledgement occurs inside a transaction it is valid for the TX to be aborted and the messages to be acknowledged a second time in a new TX or on their own.  The broker currently loses track of the acks that are removed from the pending Acks index as it doesn't recover them on abort and repopulate the pending index. 

There is also a race that occurs on dispatch and ack that allows for loss of ack Ids as the current code clears the full pending index on either boundary when it should only be removing the involved transactionally enlisted messages.",,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7211,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 30 14:46:10 UTC 2019,,,,,,,,,,,"0|z037e8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"29/May/19 21:25;jira-bot;Commit 063d24e6d653bed3dd3c56302758de29143e5e82 in activemq's branch refs/heads/master from Timothy Bish
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=063d24e ]

AMQ-7218 Fix loss of Ack id from tracking after TX commit / abort

Ensure that we properly track Ack IDs across TX commit and abort
operations and only clear out values enlisted in the TX on commit and
re-acquire the Ack Ids on TX abort.;;;","30/May/19 14:46;jira-bot;Commit a6c0e3f99f22a4be8d6d8586185820b3a8b990e6 in activemq's branch refs/heads/activemq-5.15.x from Timothy Bish
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a6c0e3f ]

AMQ-7218 Fix loss of Ack id from tracking after TX commit / abort

Ensure that we properly track Ack IDs across TX commit and abort
operations and only clear out values enlisted in the TX on commit and
re-acquire the Ack Ids on TX abort.

(cherry picked from commit 063d24e6d653bed3dd3c56302758de29143e5e82)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[STOMP] SecurityException stack trace should not be in error frames,AMQ-7209,13233996,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/May/19 15:47,17/May/19 16:07,13/Jul/23 08:27,17/May/19 16:07,5.15.0,,,,5.16.0,,,Broker,STOMP,,,,0,,,,,"The stack trace of all exceptions is returned in the body of error frames. For security exceptions this can leak some information about the implementation and configured plugins which is not sensible.

the stack trace should not be present for any SecurityException, just the exception message.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri May 17 16:06:40 UTC 2019,,,,,,,,,,,"0|z02sxs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/May/19 16:06;jira-bot;Commit 4129c1f6592616ad8731e29c95092634699f96be in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4129c1f ]

AMQ-7209 suppress stack trace in stomp error frame for SecurityExceptions to avoid any implementation detail leakage, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"shebang is missing in the admin script created by ""activemq create""",AMQ-7201,13233006,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,mrbald,mrbald,13/May/19 14:43,19/Aug/19 17:34,13/Jul/23 08:27,19/Aug/19 17:34,5.15.9,,,,5.15.10,5.16.0,,Command Line Tools,,,,,0,patch,usability,,,"SUBJ, when creating a broker instance with `activemq create` the generated admin script bin/<instancename> is missing shebang line.",,jira-bot,mrbald,,,,,,,,,,"mrbald commented on pull request #358: AMQ-7201 added shebang to generated broker admin script
URL: https://github.com/apache/activemq/pull/358
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 14:50;githubbot;600","jbonofre commented on pull request #358: AMQ-7201 added shebang to generated broker admin script
URL: https://github.com/apache/activemq/pull/358
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Aug/19 17:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Aug 19 17:34:03 UTC 2019,,,,,,,,,,,"0|z02mts:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Aug/19 17:32;jira-bot;Commit b11b9aac7515ce897c216b472770bf3cf4734847 in activemq's branch refs/heads/master from mrbald
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b11b9aa ]

AMQ-7201 added shebang to generated broker admin script;;;","19/Aug/19 17:32;jira-bot;Commit 84cc95c7ac80b8f8754758e823c8816240bd31a1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=84cc95c ]

Merge pull request #358 from mrbald/patch-1

AMQ-7201 added shebang to generated broker admin script;;;","19/Aug/19 17:32;jira-bot;Commit a2cdcfb652faf259081e9bced9a46009ffc81713 in activemq's branch refs/heads/revert-358-patch-1 from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a2cdcfb ]

Revert ""AMQ-7201 added shebang to generated broker admin script""
;;;","19/Aug/19 17:34;jira-bot;Commit 5e8f296300c80a9cf4a516286cd5dbce688481f9 in activemq's branch refs/heads/activemq-5.15.x from mrbald
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5e8f296 ]

AMQ-7201 added shebang to generated broker admin script;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
During startup ActiveMq load all the scheduleDB.data on memory causing OOM ,AMQ-7196,13232308,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,alanprot,alanprot,08/May/19 18:59,06/Sep/19 15:53,13/Jul/23 08:27,13/May/19 11:37,5.15.9,5.16.0,,,5.15.10,5.16.0,,KahaDB,,,,,0,,,,,"I had a broker with lots of scheduled messages and I noticed that during startup (clean or unclean) the broker was reading the whole index file and storing it os memory:

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/JobSchedulerImpl.java#L665]

In order to prevent the OOM, I changed this method to return a Iterator<JobLocation> instead of a List<JobLocation> avoiding load all this data into the heap.

 

I also noticed that during the startup we read the index at least 3 times:

 

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/JobSchedulerStoreImpl.java#L829]

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/JobSchedulerStoreImpl.java#L857]

and 

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/JobSchedulerStoreImpl.java#L940]

 

Probably we can optimize this but this should be another Jira (also maybe we dont need to call recover(tx) when its a clean shutdown)

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/JobSchedulerStoreImpl.java#L787]",,alanprot,cshannon,jbonofre,jira-bot,tabish,,,,,,,"alanprot commented on pull request #356: AMQ-7196 - During startup ActiveMq load all the scheduleDB.data on me…
URL: https://github.com/apache/activemq/pull/356
 
 
   …mory causing OOM
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/19 19:03;githubbot;600","asfgit commented on pull request #356: AMQ-7196 - During startup ActiveMq load all the scheduleDB.data on me…
URL: https://github.com/apache/activemq/pull/356
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/May/19 11:36;githubbot;600","jbonofre commented on issue #356: AMQ-7196 - During startup ActiveMq load all the scheduleDB.data on me…
URL: https://github.com/apache/activemq/pull/356#issuecomment-492084856
 
 
   @alanprot FYI, I reviewed the PR and it looks to me, thanks !
   @cshannon sorry, I was busy on Karaf but I was on the review on this PR, I was planning to finalize and merge today.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 05:33;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 06 15:53:24 UTC 2019,,,,,,,,,,,"0|z02ijs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"08/May/19 19:15;jbonofre;It's impacting any broker with `scheduler` enable.;;;","08/May/19 19:52;alanprot;yeah, and the broker cannot startup when it gets in this situation.

 

With this change the broker can at least startup, but it still read the index file at least 3 times (even with a clean shutdown). 

 

 ;;;","10/May/19 18:23;tabish;I took a quick look and this seems like a reasonable change given what the code is doing in this scenario. ;;;","10/May/19 19:33;alanprot;Thanks for your input [~tabish121] :D;;;","11/May/19 17:47;cshannon;I agree with [~tabish121] - makes sense to iterate over the index using the iterator and not load into a list for no reason.

I can take a closer look Monday and merge it;;;","13/May/19 11:36;jira-bot;Commit b56819123b21af1df001cb2a10e77ba88a3b3c95 in activemq's branch refs/heads/master from Alan Protasio
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b568191 ]

AMQ-7196 - During startup ActiveMq load all the scheduleDB.data on memory causing OOM
;;;","13/May/19 11:36;jira-bot;Commit 23f0b1476cf66457e495c370e7869deafc5ed547 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=23f0b14 ]

Merge branch 'AMQ-7196'

This closes #356

Thanks to Alan Protasio for the patch
;;;","13/May/19 11:37;jira-bot;Commit 66e6e1355313c8931bff8ef4d040dbf2a6726dc6 in activemq's branch refs/heads/activemq-5.15.x from Alan Protasio
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=66e6e13 ]

AMQ-7196 - During startup ActiveMq load all the scheduleDB.data on memory causing OOM

(cherry picked from commit b56819123b21af1df001cb2a10e77ba88a3b3c95)
;;;","13/May/19 21:35;alanprot;Thanks [~cshannon]!! :D:D;;;","06/Sep/19 15:53;jira-bot;Commit dc35218a2d766a86a78376bfd4b51e7ae5bda935 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dc35218 ]

AMQ-7196 - fix broken test; recovery not applicable to inmemory store
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
duplex network connector with pending forwards - intermittent NPE on startup,AMQ-7193,13231289,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/May/19 15:20,02/May/19 15:38,13/Jul/23 08:27,02/May/19 15:38,5.15.0,,,,5.16.0,,,Broker,Network of Brokers,,,,0,,,,,"occasional NPE on duplex network bridge start, dispatch during startup issue. NPE
{code:java}
2019-05-02 16:16:25,116 [0.1:53461@53456] - WARN DemandForwardingBridgeSupport - Network connection between vm://B1#10 and tcp:///127.0.0.1:53461@53456 shutdown due to a remote error: {}
java.lang.NullPointerException
 at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:815)
 at org.apache.activemq.network.DemandForwardingBridgeSupport$3.onCommand(DemandForwardingBridgeSupport.java:238)
 at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
 at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
 at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
 at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
 at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
 at java.lang.Thread.run(Thread.java:748)
 {code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 02 15:31:52 UTC 2019,,,,,,,,,,,"0|z02c9s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/May/19 15:31;jira-bot;Commit 7404b43f2d9c5bbf4ab4ec89ae111d5bf1527d82 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7404b43 ]

AMQ-7193 - resolve intermittent NPE on duplex network connector start; wait for start completion before dispatching inbound messages, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"'native' inbound transformer can mishandle AMQP durable field, classify non-durable message as persistent",AMQ-7189,13230291,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,robbie,robbie,robbie,26/Apr/19 11:51,26/Apr/19 12:09,13/Jul/23 08:27,26/Apr/19 12:09,5.15.9,,,,5.15.10,,,AMQP,,,,,0,,,,,"If an AMQP message arrives that has a header section but defaults the durable field within it in (meaning the message is non-durable), the brokers 'native' transformer incorrectly classifies the message as being persistent. The issue is only visible inside the broker, the consumed message correctly indicates it was non-durable. The 'jms' transformer is not affected.

Background: https://lists.apache.org/thread.html/cf8d0f0ca6b232a8a447d984b27edc0fe58a7cc2e5a76f8c7e5e6cca@%3Cusers.qpid.apache.org%3E",,jira-bot,robbie,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 26 12:07:43 UTC 2019,,,,,,,,,,,"0|z02640:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Apr/19 11:55;jira-bot;Commit aff9413cdbe88041552369787d1ba001c2b4ffd4 in activemq's branch refs/heads/master from Robert Gemmell
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=aff9413 ]

AMQ-7189: ensure messages with defauled durable field are internally classed non-persistent by the 'native' transformer
;;;","26/Apr/19 12:07;jira-bot;Commit e09610b16ceeeefb61f5662a570d04b51617b7c2 in activemq's branch refs/heads/activemq-5.15.x from Robert Gemmell
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e09610b ]

AMQ-7189: ensure messages with defauled durable field are internally classed non-persistent by the 'native' transformer

(cherry picked from commit aff9413cdbe88041552369787d1ba001c2b4ffd4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network bridge failing after authentication-plugin use,AMQ-7186,13228793,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,pratibha.patil@siemens.com,pratibha.patil@siemens.com,18/Apr/19 08:22,24/Jun/20 05:53,13/Jul/23 08:27,24/Jun/20 05:53,5.15.8,,,,5.15.8,,,AMQP,,,,,0,,,,,"We are using Apache *ActiveMQ version 5.15.8.*

 

We have created Broker to Broker ActiveMQ  network using ssh tunneling.

*Broker-A is enqueuing messages & messages are getting dequeued at Broker-B end.*

We have added below configuration to restrict the Broker-A from creating new queues other than specified one.

 

*Below is configuration at Broker-B:*
 # Contents added in activemq.xml

|        <plugins>
            <simpleAuthenticationPlugin>
                <users>
                    <authenticationUser username=""admin"" password="" adminpassword"" groups=""admins,all"" />
                    <authenticationUser username=""test"" password=""testpassword "" groups=""admins,all"" />
                </users>
            </simpleAuthenticationPlugin>
            <jaasAuthenticationPlugin configuration=""activemq"" />
            <authorizationPlugin>
              <map>
                <authorizationMap>
                  <authorizationEntries>
                    <authorizationEntry queue=""demo.test "" read=""admins"" write=""admins"" admin=""admins"" />
                    <authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""admins"" write=""admins"" admin=""admins""/>
                  </authorizationEntries>
                </authorizationMap>
              </map>
            </authorizationPlugin>
        </plugins>|

 
 # Contents of users.properties

|admin= adminpassword
test= testpassword|

 
 # Contents of groups.properties

|admins=admin,test
all=admin,test|

 
 # Contents of credentials.properties

|activemq.username=admin
activemq.password= adminpassword|

 
 # Contents of jetty-realm.properties

|admin: adminpassword, admin
test: testpassword, admin|

 

*Below is configuration at Broker-A:*
 # Contents added in activemq.xml

|           <networkConnectors>
            <networkConnector name=""testlinkconnector"" userName=""admin"" password="" adminpassword "" uri=""static:(tcp://127.0.0.1:61618)?connection.useCompression=true"" staticBridge=""true"">
                <staticallyIncludedDestinations>
                   <queue physicalName="" demo.test""/>
                </staticallyIncludedDestinations>
            </networkConnector>|

 

 

If we just add *<simpleAuthenticationPlugin>* plugin in Broker-B configuration then bridge connection is working between Broker-A to Broker-B.

 

But when are adding *<simpleAuthenticationPlugin>, <jaasAuthenticationPlugin>* and *<authorizationPlugin>* Broker-B configuration then bridge connection is not working.

We are getting below error at Broker-A end.

 
|2019-04-18 05:04:20,932 \| INFO  \| localhost bridge to localhost stopped \| org.apache.activemq.network.DemandForwardingBridgeSupport \| ActiveMQ BrokerService[localhost] Task-2263
2019-04-18 05:04:50,930 \| INFO  \| Establishing network connection from vm://localhost to tcp://127.0.0.1:61618 \| org.apache.activemq.network.DiscoveryNetworkConnector \| ActiveMQ Task-2
2019-04-18 05:04:50,973 \| INFO  \| Network connection between vm://localhost#4146 and tcp:///127.0.0.1:61618@37514 (localhost) has been established. \| org.apache.activemq.network.DemandForwardingBridgeSupport \| triggerStartAsyncNetworkBridgeCreation: remoteBroker=tcp:///127.0.0.1:61618@37514, localBroker= vm://localhost#4146
2019-04-18 05:04:50,977 \| ERROR \| Network connection between vm://localhost#4146 and tcp:///127.0.0.1:61618@37514 shutdown due to a remote error: {} \| org.apache.activemq.network.DemandForwardingBridgeSupport \| ActiveMQ Transport: tcp:///127.0.0.1:61618@37514
java.lang.SecurityException: User name [admin] or password is invalid.
        at org.apache.activemq.security.JaasAuthenticationBroker.authenticate(JaasAuthenticationBroker.java:97)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.security.JaasAuthenticationBroker.addConnection(JaasAuthenticationBroker.java:68)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:99)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:843)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)[activemq-client-5.15.8.jar:5.15.8]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)[activemq-broker-5.15.8.jar:5.15.8]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.15.8.jar:5.15.8]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)[activemq-client-5.15.8.jar:5.15.8]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)[activemq-client-5.15.8.jar:5.15.8]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.15.8.jar:5.15.8]
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[activemq-client-5.15.8.jar:5.15.8]
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[activemq-client-5.15.8.jar:5.15.8]
        at java.lang.Thread.run(Thread.java:748)[:1.8.0_191]|

 

*We want that Broker-A can only send messages if it is having proper credentials and Broker-A can only create or sends messages to the specific queue (demo.test)at Broker-B end.*

*Broker-A can only create demo.test queue at Broker-B end if it does not exist. Broker-A should not create or sends messages to any other queue at Broker-B end though it is having proper credentials.*  

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 24 05:53:56 UTC 2020,,,,,,,,,,,"0|z01wxk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jun/20 05:53;pratibha.patil@siemens.com;This resolution has been provided;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA durable sub prepared acks don't block redelivery,AMQ-7185,13228594,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,17/Apr/19 13:21,24/Sep/19 16:34,13/Jul/23 08:27,17/Apr/19 14:36,5.15.0,,,,5.16.0,,,Broker,XA,,,,0,,,,,"If a durable sub acks a message in an XA transaction, on prepare the disk image is updated and on recovery the messages is pending an outcome and won't be redelivered.

however if the durable sub disconnects and reconnects without a broker restart, it can receive the same messages again. Acked and prepared messages should be blocked pending the xa transaction outcome.

This duplicate delivery can result in duplicate acks and early deletion of the message due to the reference count. The end result, another sub may see the message pending but not be able to receive it b/c it has already been removed from the store.

symptom in other words:

durableSub1 and durableStub2 registered, send one message to the topic. The message reference count is 2.
durabelSub1 does receive in xa transaction, prepares and dies. The ack needs recovery and completion via the transaction manager.
durableSub1 reconnects and gets the same message again! commits success. The message reference count is decremented to 1.
the first xa transaction gets recovered and commits, the duplicate ack gets processed; the message reference count is 0 and the message gets deleted in error.
durableSub2 tries to receive, message pending is 1, but it does not get any message!

 

 

 ",,cshannon,davidhilton68,gtully,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 24 16:34:54 UTC 2019,,,,,,,,,,,"0|z01vpc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"17/Apr/19 13:50;jira-bot;Commit 487d4a112e01777ca128c39033a76dd29155e755 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=487d4a1 ]

AMQ-7185 - track durable sub prepared acks in preCommit callback and release/remove on xa outcome, avoid duplicate delivery; fix and test
;;;","04/Sep/19 13:41;davidhilton68;[~gtully]  Do you have any feeling as to when 5.16.x might get released ?;;;","04/Sep/19 14:40;gtully;[~davidhilton68] I think [~jbonofre] is on the job based on the 5.15.10 vote thread, see: https://lists.apache.org/thread.html/810bb99c63ca545210582ad2fa51690f1a83e65402da057960e264a9@%3Cdev.activemq.apache.org%3E;;;","04/Sep/19 14:42;jbonofre;Hi guys, yes, I confirm that now ActiveMQ 5.15.10 is out, I will start triage and working on 5.16.0.;;;","04/Sep/19 19:06;cshannon;5.16.0 can go out whenever, biggest thing is making sure JDK 11 is working ok with everything including OSGi and the main piece I needed help with was the OSGi/Karaf stuff which I think [~jbonofre] will look at;;;","24/Sep/19 16:34;jira-bot;Commit 644b529ef64800ee162ddbd7c46551f2508c4c92 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=644b529 ]

AMQ-7185 - rework to leave tx-inflight messages pending in the cursor to avoid duplicates on completion, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Karaf Features Install SNAPSHOT Karaf Bundles,AMQ-7168,13221949,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jwcarman,jwcarman,15/Mar/19 16:27,29/Aug/20 08:32,13/Jul/23 08:27,29/Aug/20 08:32,5.15.8,,,,,,,OSGi/Karaf,,,,,0,,,,,"When installing the activemq-client 5.15.8 feature in a fresh install of Apache Karaf 4.2.3, the following SNAPSHOT bundles show up:


 * Apache Karaf :: JAAS :: Boot - 4.3.0.SNAPSHOT
 * Apache Karaf :: Shell :: Console - 4.3.0.SNAPSHOT
 * Apache Karaf :: Shell :: Table - 4.3.0.SNAPSHOT

 

Here's a log of what I did:


{noformat}
karaf@root()> mifarjcarman-m1:apache-karaf-4.2.3 jcarman$ rm -fR data
mifarjcarman-m1:apache-karaf-4.2.3 jcarman$ bin/karaf
        __ __                  ____
       / //_/____ __________ _/ __/
      / ,<  / __ `/ ___/ __ `/ /_
     / /| |/ /_/ / /  / /_/ / __/
    /_/ |_|\__,_/_/   \__,_/_/

  Apache Karaf (4.2.3)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or type 'system:shutdown' or 'logout' to shutdown Karaf.

karaf@root()> feature:repo-add activemq 5.15.8
Adding feature url mvn:org.apache.activemq/activemq-karaf/5.15.8/xml/features
karaf@root()> feature:install activemq-client
karaf@root()> list -t 0
START LEVEL 100 , List Threshold: 0
ID │ State    │ Lvl │ Version          │ Name
───┼──────────┼─────┼──────────────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 0 │ Active   │   0 │ 5.6.12           │ System Bundle, Fragments: 1
 1 │ Resolved │   1 │ 4.2.3            │ Apache Karaf :: Features :: Extension, Hosts: 0
 2 │ Active   │   5 │ 1.2.2            │ Apache Felix Metatype Service
 3 │ Active   │   5 │ 4.2.3            │ Apache Karaf :: OSGi Services :: EventAdmin
 4 │ Active   │   5 │ 2.6.1            │ OPS4J Pax Url - mvn:
 5 │ Active   │   8 │ 1.17.1           │ jansi
 6 │ Active   │   8 │ 1.10.1           │ OPS4J Pax Logging - API
 7 │ Active   │   8 │ 1.10.1           │ OPS4J Pax Logging - Log4j v2
 8 │ Active   │   9 │ 1.0.2            │ Apache Felix Coordinator Service
 9 │ Active   │  10 │ 1.9.10           │ Apache Felix Configuration Admin Service
10 │ Active   │  11 │ 3.6.4            │ Apache Felix File Install
11 │ Active   │  15 │ 4.2.3            │ Apache Karaf :: Features :: Core
12 │ Active   │  30 │ 2.9.0            │ Apache ServiceMix :: Specs :: Activation API 1.4
13 │ Active   │  30 │ 1.1.5            │ Apache Aries JMX API
14 │ Active   │  30 │ 1.1.8            │ Apache Aries JMX Core
15 │ Active   │  30 │ 1.2.0            │ Apache Aries Whiteboard support for JMX DynamicMBean services
16 │ Active   │  20 │ 1.1.3            │ Apache Aries Util
17 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Bundle :: Core
18 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: ConfigAdmin :: Core
19 │ Active   │  26 │ 4.2.3            │ Apache Karaf :: Deployer :: Features
20 │ Active   │  24 │ 4.2.3            │ Apache Karaf :: Deployer :: Karaf Archive (.kar)
21 │ Active   │  24 │ 4.2.3            │ Apache Karaf :: Deployer :: Wrap Non OSGi Jar
22 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Diagnostic :: Core
23 │ Active   │  80 │ 4.2.3            │ Apache Karaf :: OSGi Services :: Event
24 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Features :: Command
25 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Instance :: Core
26 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: JAAS :: Command
27 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: JAAS :: Config
28 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: JAAS :: Modules
29 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: KAR :: Core
30 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Log :: Core
31 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Management
32 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Package :: Core
33 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Service :: Core
34 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Shell :: Various Commands
35 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Shell :: Core, Fragments: 62
36 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: Shell :: SSH
37 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: System :: Core
38 │ Active   │  30 │ 0.3.11.1         │ Apache ServiceMix :: Bundles :: not-yet-commons-ssl
39 │ Active   │  30 │ 1.7.0            │ Apache Mina SSHD :: Core
42 │ Active   │  30 │ 3.9.0            │ JLine Terminal, Fragments: 75
44 │ Active   │   5 │ 2.6.1            │ OPS4J Pax Url - wrap:
45 │ Active   │  50 │ 5.15.8           │ activemq-osgi
46 │ Active   │  20 │ 1.0.1            │ Apache Aries Blueprint API
47 │ Active   │  20 │ 1.3.1            │ Apache Aries Blueprint CM
48 │ Active   │  20 │ 1.10.1           │ Apache Aries Blueprint Core, Fragments: 49
49 │ Resolved │  20 │ 1.0.0            │ Apache Aries Blueprint Core Compatiblity Fragment Bundle, Hosts: 48
50 │ Active   │  30 │ 1.2.0            │ Apache Aries JMX Blueprint API
51 │ Active   │  30 │ 1.2.0            │ Apache Aries JMX Blueprint Core
52 │ Active   │  20 │ 1.1.4            │ Apache Aries Proxy Service
53 │ Active   │  50 │ 3.6.0            │ Apache Commons Net
54 │ Active   │  50 │ 2.4.2            │ Apache Commons Pool
55 │ Active   │  50 │ 1.0.1            │ geronimo-j2ee-management_1.1_spec
56 │ Active   │  50 │ 1.1.1            │ geronimo-jms_1.1_spec
57 │ Active   │  50 │ 1.1.1            │ geronimo-jta_1.1_spec
58 │ Active   │  50 │ 3.4.6            │ ZooKeeper Bundle
59 │ Active   │  24 │ 4.2.3            │ Apache Karaf :: Deployer :: Blueprint
60 │ Active   │  30 │ 4.2.3            │ Apache Karaf :: JAAS :: Blueprint :: Config
61 │ Resolved │  80 │ 4.3.0.SNAPSHOT   │ Apache Karaf :: JAAS :: Boot
62 │ Resolved │  30 │ 4.3.0.SNAPSHOT   │ Apache Karaf :: Shell :: Console, Hosts: 35
63 │ Active   │  30 │ 4.3.0.SNAPSHOT   │ Apache Karaf :: Shell :: Table
64 │ Active   │  30 │ 1.0.0.6          │ Apache ServiceMix :: Bundles :: aopalliance
65 │ Active   │  50 │ 2.2.11.1         │ Apache ServiceMix :: Bundles :: jaxb-impl
66 │ Active   │  30 │ 4.3.22.RELEASE_2 │ Apache ServiceMix :: Bundles :: spring-aop
67 │ Active   │  30 │ 4.3.22.RELEASE_2 │ Apache ServiceMix :: Bundles :: spring-beans
68 │ Active   │  30 │ 4.3.22.RELEASE_2 │ Apache ServiceMix :: Bundles :: spring-context
69 │ Active   │  30 │ 4.3.22.RELEASE_2 │ Apache ServiceMix :: Bundles :: spring-context-support
70 │ Active   │  30 │ 4.3.22.RELEASE_2 │ Apache ServiceMix :: Bundles :: spring-core
71 │ Active   │  30 │ 4.3.22.RELEASE_2 │ Apache ServiceMix :: Bundles :: spring-expression
72 │ Active   │  30 │ 3.10.0           │ JLine Builtins
73 │ Active   │  30 │ 3.10.0           │ JLine Reader
74 │ Active   │  30 │ 3.10.0           │ JLine Terminal, Fragments: 75
75 │ Resolved │  30 │ 3.10.0           │ JLine JANSI Terminal, Hosts: 74, 42
76 │ Active   │  50 │ 0.6.4            │ JAXB2 Basics - Runtime
77 │ Active   │  20 │ 7.1.0            │ org.objectweb.asm
78 │ Active   │  20 │ 7.1.0            │ org.objectweb.asm.commons
79 │ Active   │  20 │ 7.1.0            │ org.objectweb.asm.tree
80 │ Active   │  20 │ 7.1.0            │ org.objectweb.asm.tree.analysis
81 │ Active   │  20 │ 7.1.0            │ org.objectweb.asm.util
{noformat}",,coheigea,jwcarman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Oct 18 10:12:02 UTC 2019,,,,,,,,,,,"0|z00r68:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Oct/19 10:12;coheigea;This issue is fixed in Karaf 4.2.4 - I think by this Jira - https://issues.apache.org/jira/browse/KARAF-6151

This Jira can be closed.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IP address is missing from TransportConnector error message,AMQ-7167,13221365,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,gtully,gtully,13/Mar/19 10:19,13/Mar/19 10:26,13/Jul/23 08:27,13/Mar/19 10:26,5.15.0,,,,5.16.0,,,Transport,,,,,0,,,,,"When TLS errors out, the IP address is null in the acceptor error message which limits the value of the log message. This info can be stashed early to ensure it is available before the auto close

eg: {code}
2019-03-11 13:24:27,639 [ActiveMQ BrokerService Task-14] ERROR TransportConnector - Could not accept connection from null: java.io.IOException: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
2019-03-11 13:24:27,639 [ActiveMQ BrokerService Task-14] DEBUG TransportConnector - Reason: java.io.IOException: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
java.io.IOException: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
	at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:177)
	at org.apache.activemq.transport.stomp.StompNIOSSLTransport.initializeStreams(StompNIOSSLTransport.java:49)
	at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:519)
	at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:160)
	at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:448)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.transport.stomp.StompTransportFilter.start(StompTransportFilter.java:65)
	at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:169)
	at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
	at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:1061)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:218)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: javax.net.ssl.SSLException: Inbound closed before receiving peer's close_notify: possible truncation attack?
	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
	at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1666)
	at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1634)
	at sun.security.ssl.SSLEngineImpl.closeInbound(SSLEngineImpl.java:1561)
	at org.apache.activemq.transport.nio.NIOSSLTransport.secureRead(NIOSSLTransport.java:359)
	at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:406)
	at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:146)
	... 14 more{code}
",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 13 10:21:45 UTC 2019,,,,,,,,,,,"0|z00nk0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Mar/19 10:21;jira-bot;Commit 2d394b383cf80681f53e24003cbaed9b1c6c1de6 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=2d394b3 ]

AMQ-7167 - ensure remote IP is visible in acceptor error messages from the transport connector - test and fix
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
failover transport and rebalanceClusterClients=true should fall back to original broker list if no broker on updated cluster information is available,AMQ-7165,13220836,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,11/Mar/19 12:48,05/Apr/19 12:40,13/Jul/23 08:27,12/Mar/19 12:46,5.15.0,,,,5.16.0,,,JMS client,,,,,0,,,,,"The failover transport updates list takes full precedence, but results in the existing static information being ignored. Because the rebalance information is based on the presence of network bridges, when the bridge is down, the information can be a subset of reality, leaving a client using less information than was statically configured.",,gtully,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3685,,,,,,AMQ-4505,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Apr 05 12:40:15 UTC 2019,,,,,,,,,,,"0|z00kb4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Mar/19 12:51;gtully;part of the fix for AMQ-3685 seems to be the root cause. The upshot is that rebalanceClusterClients works best when  randomize=false is on the client failover url. This ensure there is a single broker doing the random allocation and it will be even.;;;","11/Mar/19 13:34;gtully;merging the updated and url list helps with AMQ-4505 also;;;","12/Mar/19 12:24;jira-bot;Commit b9bcd2fcc37837cafa0ff4caa54ae5a04a26ab99 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b9bcd2f ]

AMQ-7165 - ensure failover updated uris are additive such that statically configured uris are respected
;;;","05/Apr/19 12:40;jira-bot;Commit 39047021e74fd13cbb0d37460846b1d5a5c1dce7 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=3904702 ]

AMQ-7165 - randomize needs to be disabled to make test deterministic
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Related to AMQ-7082 - If the broker had an unclean shutdown and number of free pages is Zero after the recovery, the next shutdown will also be ""unclean""",AMQ-7163,13220055,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alanprot,alanprot,06/Mar/19 23:32,08/Mar/19 01:06,13/Jul/23 08:27,07/Mar/19 13:16,,,,,5.15.9,5.16.0,,KahaDB,,,,,0,,,,,"Hi,

This is related to AMQ-7082.

If the broker had an unclean shutdown and the recovery thread didn't find any free pages (newFreePages is empty the recovery), the broker will have a second unclean shutdown - and this will happens to any future restart as long as the number of free pages is = 0 

 

See:

 

[https://github.com/apache/activemq/blob/9e6543551731ef0241967ca545c9a4956876cb86/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L484]

 

[https://github.com/apache/activemq/blob/9e6543551731ef0241967ca545c9a4956876cb86/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L584]

 

[https://github.com/apache/activemq/blob/9e6543551731ef0241967ca545c9a4956876cb86/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L527]

 ",,alanprot,cshannon,jira-bot,,,,,,,,,"alanprot commented on pull request #350: AMQ-7163 - If the broker had an unclean shutdown and number of free p…
URL: https://github.com/apache/activemq/pull/350
 
 
   …ages is Zero after the recovery, the next shutdown will also be 'unclean'
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/19 23:34;githubbot;600","gtully commented on pull request #350: AMQ-7163 - If the broker had an unclean shutdown and number of free p…
URL: https://github.com/apache/activemq/pull/350
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/19 10:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,AMQ-7082,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 08 01:06:30 UTC 2019,,,,,,,,,,,"0|z00fi0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Mar/19 10:07;jira-bot;Commit cd1d5eb785a759d285652551f1984ce9877a1192 in activemq's branch refs/heads/master from Alan Protasio
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cd1d5eb ]

AMQ-7163 - If the broker had an unclean shutdown and number of free pages is Zero after the recovery, the next shutdown will also be 'unclean'
;;;","07/Mar/19 10:07;jira-bot;Commit c96f3d75a803123f842f3d69bff3716f31366ce7 in activemq's branch refs/heads/master from Gary Tully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c96f3d7 ]

Merge pull request #350 from alanprot/AMQ-7163

AMQ-7163 - If the broker had an unclean shutdown and number of free p…;;;","07/Mar/19 10:07;jira-bot;Commit c96f3d75a803123f842f3d69bff3716f31366ce7 in activemq's branch refs/heads/master from Gary Tully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c96f3d7 ]

Merge pull request #350 from alanprot/AMQ-7163

AMQ-7163 - If the broker had an unclean shutdown and number of free p…;;;","07/Mar/19 13:08;cshannon;[~alanprot] - Nice catch, I see Gary merged it but I will also cherry-pick it to 5.15.x for 5.15.9.  I'd like to get 5.16.0 done soon but not sure when that will be.

 ;;;","07/Mar/19 13:16;jira-bot;Commit 83d9bd827a6116820d21ad141c1a5b1e4c2a8476 in activemq's branch refs/heads/activemq-5.15.x from Alan Protasio
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=83d9bd8 ]

AMQ-7163 - If the broker had an unclean shutdown and number of free pages is Zero after the recovery, the next shutdown will also be 'unclean'

(cherry picked from commit cd1d5eb785a759d285652551f1984ce9877a1192)
;;;","08/Mar/19 01:06;alanprot;Thanks again [~cshannon] :D;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network of Brokers: cannot forward messages back to the broker from which they came,AMQ-7162,13220019,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,wangx4,wangx4,06/Mar/19 20:19,07/Mar/19 02:36,13/Jul/23 08:27,07/Mar/19 02:36,5.15.2,,,,,,,Broker,,,,,0,,,,,"Network broker cannot forward the messages back to the broker from which the message came.

Steps to re-produce this problem 

create two brokers A and B with mesh network  connection and replayWhenNoConsumers=""true"" (shown in *Configuration snippet* below )


1. Send a number of messages (e.g. 100) to a queue in broker A 
2. create a consumer connecting to Broker B to consume a message from the queue, 100 
message were successfully forwarded from  broker A to broker B and one 
message was consumed by the consumer, there were 99 pending messages left in 
the queue in broker B 
3. Create another new consumer connected to broker A queue to receive message, but 
no messages were forward from broker B back to broker A, as a result, the 
consumer times out and no message was delivered from broker A. connect to queue in B 
can consume message normally

 

*Configuration snippet*

*Broker A configuration* 
------------------------------------------ 

<policyEntry queue="">"" > 
     ..... 
    <networkBridgeFilterFactory> 
       <conditionalNetworkBridgeFilterFactory *replayWhenNoConsumers=""true""*/> 
     </networkBridgeFilterFactory> 
      .... 
</policyEntry>

...
<networkConnectors> 
    ... 
    <networkConnector name=""bridgeToB"" 
                      uri=""static:(tcp://brokerB-host:61616)"" 
     networkTTL=""2"" 
     decreaseNetworkConsumerPriority=""true"" 
     suppressDuplicateQueueSubscriptions=""true"" /> 
  ... 
</networkConnectors> 
------------------------------------------ 

------------------------------------------ 
*Broker B configuration* 
------------------------------------------ 

 ..... 
<networkBridgeFilterFactory> 
       <conditionalNetworkBridgeFilterFactory *replayWhenNoConsumers=""true""*/> 
     </networkBridgeFilterFactory> 
      .... 
</policyEntry>

...
<networkConnectors> 
    ... 
    <networkConnector name=""bridgeToA"" 
                      uri=""static:(tcp://brokerA-host:61616)"" 
     networkTTL=""2"" 
     decreaseNetworkConsumerPriority=""true"" 
     suppressDuplicateQueueSubscriptions=""true"" /> 
     ... 
</networkConnectors> ",,wangx4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Mar 07 02:36:34 UTC 2019,,,,,,,,,,,"0|z00fa0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Mar/19 02:34;wangx4;in order to make this work needs to set enableAudit=false in policyEntry;;;","07/Mar/19 02:36;wangx4;just need to set enableAudit=false in policyEntry, the message forward works;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
activemq-client using HTTP transport requires Stomp,AMQ-7149,13214360,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,brunobat,brunobat,07/Feb/19 12:53,24/Mar/21 10:38,13/Jul/23 08:27,24/Mar/21 10:38,5.14.6,5.15.8,5.15.9,5.16.0,5.16.2,5.17.0,,JMS client,STOMP,Transport,,,0,httpclient,stomp,,,"Both the Stomp and HTTP connectors use the XStream library for serializing and deserializing objects on the wire (to/from XML). The XStreamSupport class sets up XStream with some configuration on what classes can/can't be deserialized to prevent deserialization vulnerabilities.

 

In order to avoid duplicating that code, it was placed in the stomp module, and then referenced in the http module. This was introduced around 5.13. This can cause a client side class not found exception when using simple http communication:

  
{code:java}
""Exception in thread ""ActiveMQ Transport: HTTP Reader http://localhost:9090/"" java.lang.NoClassDefFoundError: org/apache/activemq/transport/stomp/XStreamSupport

        at org.apache.activemq.transport.xstream.XStreamWireFormat.createXStream(XStreamWireFormat.java:127)

        at org.apache.activemq.transport.xstream.XStreamWireFormat.getXStream(XStreamWireFormat.java:113)

        at org.apache.activemq.transport.xstream.XStreamWireFormat.unmarshalText(XStreamWireFormat.java:66)

        at org.apache.activemq.transport.util.TextWireFormat.unmarshal(TextWireFormat.java:56)

        at org.apache.activemq.transport.http.HttpClientTransport.run(HttpClientTransport.java:199)

...""
{code}
 

The proposed patch places the XStreamSupport class in activemq-client, thus correcting this issue without requiring the inclusion of the optional activemq-stomp library in the client.",,brunobat,cshannon,jbonofre,jira-bot,,,,,,,,"jgallimore commented on pull request #365: AMQ-7149 Remove dependency activemq-http and activemq-stomp
URL: https://github.com/apache/activemq/pull/365
 
 
   This PR moves `XStreamSupport` to `activemq-client`. 
   
   Currently this sits in `activemq-stomp`, thus requiring the ActiveMQ HTTP client to require `activemq-stomp` module on its class path, even if the client isn't using stomp.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jun/19 13:49;githubbot;600","lucastetreault commented on pull request #365:
URL: https://github.com/apache/activemq/pull/365#issuecomment-792580137


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 08:38;githubbot;600","lucastetreault removed a comment on pull request #365:
URL: https://github.com/apache/activemq/pull/365#issuecomment-792580137


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:06;githubbot;600","jbonofre merged pull request #365:
URL: https://github.com/apache/activemq/pull/365


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/21 10:36;githubbot;600",,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,"07/Feb/19 12:54;brunobat;activemq.diff;https://issues.apache.org/jira/secure/attachment/12957886/activemq.diff",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Mar 24 10:36:21 UTC 2021,,,,,,,Patch Available,,,,"0|yi0qw8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Feb/19 12:55;brunobat;XStreamSupport.java should be placed under:

activemq/activemq-client/src/main/java/org/apache/activemq/util/XStreamSupport.java;;;","13/Aug/19 10:33;cshannon;[~jbonofre] This definitely shouldn't be part of any 5.15.x release as it is a breaking change if a class changes to a new jar. It should be 5.16.0 if at all.;;;","13/Aug/19 11:53;jbonofre;Agree, it was a mistake when I changed some jira tickets.;;;","24/Mar/21 10:36;jira-bot;Commit db6098c53a71963cbead57c99156a57349a97866 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=db6098c ]

Merge pull request #365 from jgallimore/master-AMQ-7149

AMQ-7149 Remove dependency activemq-http and activemq-stomp;;;","24/Mar/21 10:36;jira-bot;Commit db6098c53a71963cbead57c99156a57349a97866 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=db6098c ]

Merge pull request #365 from jgallimore/master-AMQ-7149

AMQ-7149 Remove dependency activemq-http and activemq-stomp;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inserting Bouncy Castle Provider Early in Java Security Provider Chain Breaks KeyStore Loading,AMQ-7142,13212286,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,coheigea,nhook,nhook,28/Jan/19 18:07,27/Jan/20 12:43,13/Jul/23 08:27,27/Jan/20 12:43,5.15.2,,,,5.15.12,5.16.0,,Camel,,,,,0,,,,,"The insertion of the Bouncy Castle Provider in the org.apache.activemq.broker.BrokerService class is causing issues with our app that expecting one of the default SunJCE Ciphers to be called, but a Bouncy Castle Cipher is returned instead.

This causes our Spring Security SAML keystores to not be loaded correctly because the Bouncy Castle Cipher thinks that the keystore was tampered with.

 

I believe that the source of the problem is this line in the BrokerService class:

Security.insertProviderAt(bouncycastle, Integer.getInteger(""org.apache.activemq.broker.BouncyCastlePosition"", 2));

Looking at the Java 11 source code there are 6 providers installed by the java.security.Security class in the initializeStatic method:
{code:java}
private static void initializeStatic() {
 props.put(""security.provider.1"", ""sun.security.provider.Sun"");
 props.put(""security.provider.2"", ""sun.security.rsa.SunRsaSign"");
 props.put(""security.provider.3"", ""com.sun.net.ssl.internal.ssl.Provider"");
 props.put(""security.provider.4"", ""com.sun.crypto.provider.SunJCE"");
 props.put(""security.provider.5"", ""sun.security.jgss.SunProvider"");
 props.put(""security.provider.6"", ""com.sun.security.sasl.Provider"");
}{code}
 

If possible it would be great if the org.apache.activemq.broker.BrokerService class would call 

addProvider instead of insertProviderAt.

 

Thank you for your time.","OpenJDK 11 (AdoptOpenJDK).

Mac OS",coheigea,jira-bot,nhook,victorbucutea,,,,,,,,"coheigea commented on pull request #431: AMQ-7142 - Inserting Bouncy Castle Provider Early in Java Security Pr…
URL: https://github.com/apache/activemq/pull/431
 
 
   …ovider Chain Breaks KeyStore Loading
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 10:44;githubbot;600","jbonofre commented on pull request #431: AMQ-7142 - Inserting Bouncy Castle Provider Early in Java Security Pr…
URL: https://github.com/apache/activemq/pull/431
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 12:42;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 27 12:42:58 UTC 2020,,,,,,,,,,,"0|yi0e60:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Dec/19 09:25;victorbucutea;same issue here. Is there a work-around ?;;;","21/Jan/20 13:15;coheigea;[~victorbucutea] - I'll fix this. A workaround is to already install the BouncyCastleProvider at a different position before the AMQ code is called.;;;","27/Jan/20 12:42;jira-bot;Commit 127852d2e7098436e99c573bc7b30e3facdb634b in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=127852d ]

AMQ-7142 - Inserting Bouncy Castle Provider Early in Java Security Provider Chain Breaks KeyStore Loading
;;;","27/Jan/20 12:42;jira-bot;Commit b589b61f2d5154f9a3b3db6f86fc16b4ca5d829e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b589b61 ]

Merge pull request #431 from coheigea/AMQ-7142

AMQ-7142 - Inserting Bouncy Castle Provider Early in Java Security Pr…;;;","27/Jan/20 12:42;jira-bot;Commit b589b61f2d5154f9a3b3db6f86fc16b4ca5d829e in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b589b61 ]

Merge pull request #431 from coheigea/AMQ-7142

AMQ-7142 - Inserting Bouncy Castle Provider Early in Java Security Pr…;;;","27/Jan/20 12:42;jira-bot;Commit dae85b3dcc7cff5c88e4c301cdf56d3db312058f in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dae85b3 ]

AMQ-7142 - Inserting Bouncy Castle Provider Early in Java Security Provider Chain Breaks KeyStore Loading

(cherry picked from commit 127852d2e7098436e99c573bc7b30e3facdb634b)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Illegal reflective access by com.thoughtworks.xstream.core.util.Fields,AMQ-7139,13210720,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,mattrpav,xabhi,xabhi,21/Jan/19 09:55,27/Sep/21 23:14,13/Jul/23 08:27,27/Sep/21 23:14,5.14.4,,,,5.17.0,,,Broker,,,,,0,close-pending,,,,"Hi,

After starting ActiveMQ broker with Java 11, I am seeing below illegal reflective access warnings from xstream. These will become errors in a future release and hence needs to be addressed. There is a github issue logged with xstream regarding this ([https://github.com/x-stream/xstream/issues/101)] but there doesn't seem to be a consensus on how this will be fixed.  Is there a workaround that we can put in ActiveMQ to avoid these warnings? I am not sure what is the right way to fix this for ActiveMQ -  move away from xstream as a long term fix?

+*Logs:*+

WARNING: An illegal reflective access operation has occurred

WARNING: Illegal reflective access by com.thoughtworks.xstream.core.util.Fields (file:/prod/tools/infra/apache/activemq/apache-activemq-5.14.4/lib/optional/xstream-1.4.9.jar) to field java.lang.reflect.Proxy.h

WARNING: Please consider reporting this to the maintainers of com.thoughtworks.xstream.core.util.Fields

WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations

WARNING: All illegal access operations will be denied in a future release

 

 ",,mattrpav,xabhi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Sep 27 23:12:28 UTC 2021,,,,,,,,,,,"0|yi04ig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Jul/21 20:14;mattrpav;This should be resolved with the xstream/xpp dependency upgrades that have already occurred. Please test with 5.16.2 and report back if it is still an issue.

This issue is marked for close in 30 days if there are no further updates.;;;","27/Sep/21 23:12;mattrpav;This has been addressed with 5.17.x (main) here:

https://github.com/apache/activemq/pull/703

Note: 5.14.x is NOT Java JDK 11 compatible;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hardcoded paths to a karaf etc directory in a file features.xml,AMQ-7138,13210326,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,jherkel,jherkel,18/Jan/19 08:35,02/Nov/19 05:30,13/Jul/23 08:27,14/May/19 05:36,5.15.8,,,,5.15.10,5.16.0,,OSGi/Karaf,,,,,0,,,,,There are hardcoded paths to a karaf etc directory in a file features.xml. But these paths should be replaced with placeholder ${karaf.etc},,jherkel,jira-bot,,,,,,,,,,"jbonofre commented on pull request #339: AMQ-7138 Hardcoded paths to a karaf etc directory in a file features.xml
URL: https://github.com/apache/activemq/pull/339
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 05:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue May 14 05:34:49 UTC 2019,,,,,,,,,,,"0|yi0234:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jan/19 08:39;jherkel;see PR https://github.com/apache/activemq/pull/339;;;","14/May/19 05:34;jira-bot;Commit a07e7909e5104c556cc8c9c49d43bdaba2362d61 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a07e790 ]

Merge pull request #339 from jherkel/master

[AMQ-7138] Use karaf.etc in ActiveMQ features XML;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deleting a destination with a large number of page files cause OOM. ,AMQ-7135,13209200,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jgoodyear,heathkesler,heathkesler,12/Jan/19 21:27,28/Jan/19 21:46,13/Jul/23 08:27,14/Jan/19 17:20,5.15.8,,,,5.15.9,5.16.0,,,,,,,0,,,,,"When removing (delete) a destination using the console an error is reported. It appears all the page files are batched into memory.  If you have a large set of page files and a relatively small heap, this will cause the system to run out of memory. 

This can be reproduced by doing the following:

env: heap size: 384MB

1. Create a “test” queue and send more than 2 millions of persistent messages with size of 100KB to the “test”queue (this take some times). 
2. Delete “test” queue by clicking “delete” button on ActiveMQ Console. 
3. Wait and broker will die eventually. 
4. Broker won’t reboot successfully

The observed error below can be seen in the logs. 

{{org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.OutOfMemoryError: GC overhead limit exceeded}}
{{ at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:982)[spring-webmvc-4.3.18.RELEASE.jar:4.3.18.RELEASE]}}",,heathkesler,jgoodyear,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jan 28 21:46:31 UTC 2019,,,,,,,Patch Available,,,,"0|u00s28:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"13/Jan/19 22:39;heathkesler;Here is a link to the PR: https://github.com/apache/activemq/pull/337;;;","14/Jan/19 12:49;heathkesler;Hi [~gtully], [~cshannon] or [~jgoodyear], I’ve made a change…. can you please have a look at it?
This will protect the broker when https://github.com/apache/activemq/blob/activemq-5.15.x/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L1121 tries to read into memory all the pageFiles during a destination delete.  Let me know what you think when you have time.;;;","14/Jan/19 13:31;jgoodyear;Purging a destination before deleting it seems fare. The purge operation for a destination appears to perform the remove message per pageFile instead of reading all pageFiles into memory before taking action (preferable memory wise). 

Looking closer at PageFile, the routine (writeBatch) appears to pick up the PageFiles, do a recovery check for all pageFiles, then process the pageFiles. The only way i see to reduce the memory load would be to stream pageFile by pageFile through or use small batches of the batch... perhaps a bit too much extra complexity (introducing a potential tuning area for delete performance - batch size). ;;;","14/Jan/19 17:19;jgoodyear;I've merged [~heathkesler]'s PR into Activemq-5.15.x and cherry picked it into Master.

Thank you [~heathkesler] for the patch! :);;;","14/Jan/19 17:20;jgoodyear;Thank you Heath Kesler for the patch.;;;","28/Jan/19 21:38;jira-bot;Commit ec9daee6c3e7831ebb851be65feaf93575771265 in activemq's branch refs/heads/master from Jamie Mark Goodyear
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ec9daee ]

[AMQ-7135] Update AMQ2832 unit test expectation post 7135 fix
;;;","28/Jan/19 21:46;jira-bot;Commit fcfb059c878f86c0f00686cd768f0ff3e6454ece in activemq's branch refs/heads/activemq-5.15.x from Jamie Mark Goodyear
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fcfb059 ]

[AMQ-7135] Update AMQ2832 unit test expectation post 7135 fix
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ JMS pool has no borrow timeout causing starvation,AMQ-7131,13208847,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,graben,graben,graben,10/Jan/19 19:18,18/Oct/21 18:03,13/Jul/23 08:27,29/Feb/20 06:09,5.15.8,,,,5.15.12,5.16.0,,Pool,,,,,0,,,,,"A maxPoolSize of 1 can cause starvation during createConnection if the only connection gets evicted concurrently since borrow method of pool has no timeout waiting forever.

Maybe introduce a new variable connectionTimeout with default 30000ms. ",,graben,jbonofre,jira-bot,tabish,,,,,,,,"graben commented on issue #335: AMQ-7131: Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/335#issuecomment-568163337
 
 
   Hi @jbonofre,
   did you find time for review, yet?
   Regards Benjamin 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Dec/19 08:28;githubbot;600","jbonofre commented on issue #335: AMQ-7131: Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/335#issuecomment-568170752
 
 
   @graben I will (I target to include in 5.15.12 and 5.16.0).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Dec/19 10:36;githubbot;600","jbonofre commented on pull request #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 17:57;githubbot;600","jbonofre commented on issue #335: AMQ-7131: Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/335#issuecomment-591559939
 
 
   I took the liberty to create #477 to add a test (and I kept your commit).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 17:59;githubbot;600","jbonofre commented on pull request #335: AMQ-7131: Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/335
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 17:59;githubbot;600","michaelandrepearce commented on issue #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477#issuecomment-591562245
 
 
   @jbonofre is it worth pulling this library into its own repo so it can have its own lifecycle also will avoid having to dupe it all in artemis 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 18:04;githubbot;600","jbonofre commented on issue #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477#issuecomment-591562910
 
 
   @michaelandrepearce I'm not sure I follow you. Here, we fixed in `activemq-jms-pool`, you mean to ""reuse"" artemis connection pool ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 18:06;githubbot;600","jbonofre commented on issue #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477#issuecomment-591563235
 
 
   Ah, I guess you mean that `jms-pool` should be in a shared repository to be used by activemq and artemis, right ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 18:07;githubbot;600","michaelandrepearce commented on issue #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477#issuecomment-591600804
 
 
   Yup exactly 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 19:27;githubbot;600","michaelandrepearce commented on issue #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477#issuecomment-591600804
 
 
   Yup exactly, extract the module into its own repo. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 19:29;githubbot;600","jbonofre commented on issue #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477#issuecomment-591953763
 
 
   @michaelandrepearce you are right: if it's used in both ActiveMQ and Artemis, it makes sense to share it. The question is where ? Do we have to create a new `activemq-share` repo ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 12:49;githubbot;600","jbonofre commented on pull request #477: [AMQ-7131] Add connectionTimeout to avoid starvation
URL: https://github.com/apache/activemq/pull/477
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Feb/20 06:07;githubbot;600","DrMattFaulkner commented on pull request #477:
URL: https://github.com/apache/activemq/pull/477#issuecomment-946026723


   Apologies for digging up an old thread, but i'm a little confused as to how the connection pooling works within the ActiveMQ pool. If the connection pool borrowObject timesout we will be stuck in the while loop until there is a free connect to borrow from the pool no? 
   
   i.e., 
   
   `connection = connectionsPool.borrowObject(key);`
   
   Throws a _Timeout waiting for idle object_ then we will never exit 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/21 18:03;githubbot;600",,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Feb 29 06:09:07 UTC 2020,,,,,,,,,,,"0|u00pw8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Jan/19 21:47;tabish;Blocking and throwing an error seems like the wrong thing to do, if the connection timed out it should be replaced by a new one.  Perhaps not blocking and handling the NoSuchElementException to replenish the pool entry would be a better idea.

Do you have a test for this?;;;","11/Jan/19 07:54;graben;Hi [~tabish121],

actually I only get this tested by manually debugging both threads causing the ""collision"" in the small open window. For me the patch with the connectionTimeout work good. Camel/Spring-jms for example immediately tries to reconnect after exception. I think most consuming frameworks will act like that. In this way a connection get created, too. :)

By the way it seems extremely rare to occur, but it does.

Benjamin;;;","11/Jan/19 07:56;graben;Is the Github integration to AMQ project broken? No link to [PR|https://github.com/apache/activemq/pull/335];;;","11/Jan/19 12:01;graben;Actually thinking about this enhancement. Feels a bit odd.


{code:java}
while (connection == null) {
    try {
        connection = connectionsPool.borrowObject(key);
    } catch (NoSuchElementException ex) {
        if (!""Timeout waiting for idle object"".equals(ex.getMessage())) {
            throw ex;
        }
    }
    if (connection != null) {
        synchronized (connection) {
            if (connection.getConnection() != null) {
                connection.incrementReferenceCount();
                break;
            }

            // Return the bad one to the pool and let if get destroyed as normal.
            connectionsPool.returnObject(key, connection);
            connection = null;
        }
    }
}
{code}
;;;","17/Jan/19 07:54;graben;Hi [~tabish121], any comment to last actions?;;;","17/Jan/19 15:50;tabish;[~graben] while the change looks a bit odd it isn't much worse than some of the other code in there that works around behaviours in the commons pool that clash with how a Connection pool needs to operate so that isn't as bad as one might think.  The connect timeout fix seems more awkward to me because it forces a lengthy wait on something we can know is going to fail and then puts the requirement on the caller to respond appropriately to that failure.  

It doesn't appear there is anything else we can do in the pool configuration to prevent the key from being removed when the entries hit zero due to the single connection being evicted but maybe you want to poke around in there to see for sure. ;;;","17/Jan/19 19:05;graben;Hi [~tabish121],

well, I think it's okay this way. We can also think about your solution from messaginghub, but I'm not 100% convinced that always have a min of 1 and no option to tune is better.

Up to you, merging. :-)

Benjamin
;;;","15/Jun/19 14:17;graben;Hi [~tabish],

long time ago no reponse on this yet.

Benjamin;;;","18/Nov/19 20:57;jbonofre;[~graben] PR looks good to me. [~tabish] any comment ?;;;","29/Feb/20 06:07;jira-bot;Commit 92dec52e1c1ecd26014fa62f5aad7072ecdbb265 in activemq's branch refs/heads/master from Benjamin Graf
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=92dec52 ]

[AMQ-7131] Add connectionTimeout to avoid starvation
;;;","29/Feb/20 06:07;jira-bot;Commit ce6fc913f9cbbc0cb6c2caa54c048153ab82b3ba in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ce6fc91 ]

Merge pull request #477 from jbonofre/AMQ-7131

[AMQ-7131] Add connectionTimeout to avoid starvation;;;","29/Feb/20 06:07;jira-bot;Commit ce6fc913f9cbbc0cb6c2caa54c048153ab82b3ba in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ce6fc91 ]

Merge pull request #477 from jbonofre/AMQ-7131

[AMQ-7131] Add connectionTimeout to avoid starvation;;;","29/Feb/20 06:09;jira-bot;Commit 314d898ebbd41434c95ec337df598b07a9bcd60e in activemq's branch refs/heads/activemq-5.15.x from Benjamin Graf
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=314d898 ]

[AMQ-7131] Add connectionTimeout to avoid starvation

(cherry picked from commit 92dec52e1c1ecd26014fa62f5aad7072ecdbb265)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
bug tracking link is pointing to wrong url,AMQ-7130,13208787,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,shubhamod,shubhamod,10/Jan/19 13:42,18/Oct/19 17:06,13/Jul/23 08:27,18/Oct/19 17:06,5.15.8,,,,5.x,,,Documentation,,,,,0,documentation,,,,"Hello,

I was browsing through the documentation. I landed up in the page-> [https://projects.apache.org/project.html?activemq|https://projects.apache.org/project.html?activemq.]

In the Bug-Tracking: [http://issues.apache.org/activemq/browse/AMQ] , URL is wrong, it gives 404 Page Not Found. I think the correct would be [https://issues.apache.org/jira/projects/AMQ] 

I can take up this task, if someone point to the git location or any other pointers would be good.

Thanks!

Regards,

Shubham Gupta

 ","MacOS High Sierra, 10.13.6

Processor: 2.8 GHz Intel Core i7

Memory: 16 GB 2133 MHz LPDDR3

Graphics: Intel HD Graphics 630 1536 MB

 

 ",jira-bot,shubhamod,,,,,,,,,,"coheigea commented on pull request #399: AMQ-7130 Update AMQ doap
URL: https://github.com/apache/activemq/pull/399
 
 
   https://issues.apache.org/jira/browse/AMQ-7130 is caused by the fact that our doap JIRA link is incorrect. Once this PR is merged then https://projects.apache.org/project.html?activemq will need to be updated to point to git instead of svn.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 09:27;githubbot;600","jbonofre commented on pull request #399: AMQ-7130 Update AMQ doap
URL: https://github.com/apache/activemq/pull/399
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 17:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,604800,603600,1200,0%,604800,603600,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Oct 18 17:06:26 UTC 2019,,,,,,,,,,,"0|u00piw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Oct/19 17:05;jira-bot;Commit d525096cac444189c2d233e1de47342f1916c82d in activemq's branch refs/heads/master from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d525096 ]

AMQ-7130 Update AMQ doap
;;;","18/Oct/19 17:05;jira-bot;Commit dc2f69d96ac59df26e64fc9b5da3577c741d4cee in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=dc2f69d ]

Merge pull request #399 from coheigea/doap.rdf

AMQ-7130 Update AMQ doap;;;","18/Oct/19 17:06;jira-bot;Commit 506ededc32d968a0fcd5560d2d9f27d97b66ebda in activemq's branch refs/heads/activemq-5.15.x from Colm O hEigeartaigh
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=506eded ]

AMQ-7130 Update AMQ doap

(cherry picked from commit d525096cac444189c2d233e1de47342f1916c82d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Durable subscription messages can be orphaned when using individual ack mode with KahaDB,AMQ-7129,13208618,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,09/Jan/19 19:29,16/May/19 11:56,13/Jul/23 08:27,11/Jan/19 11:44,5.15.8,,,,5.15.9,5.16.0,,KahaDB,,,,,0,,,,,"While not a common use case it is possible for a client to use individual acknowledge mode on a durable subscription.  This allows the following scenario:
 # durable subscription is created on a topic
 # 10 messages are published to the topic
 # durable subscription consumes the messages but only acks the 5th message
 # Broker is restarted

What should happen is there should be 9 messages left that are recovered when the subscription comes back online.  What actually happens though is that messages 1-4 are stuck forever because the KahaDB index will not load them on activation. The problem is that the lackAck value that is stored in the index is for message 5 so it starts on message 5 for recovery and ignores messages 1-4 even though those values are still tracked as part of the ackPositions sequence set.

The solution is that when the subscription is loaded to check if there are any ackPositions for that subscription that are earlier than the lastAck value and if they are we need to reset the cursor to the first ackPosition. Then we need to verify on recovery that any message iterated over actually exists as part of the sequence set so we don't load duplicates (this scenario happens if multiple subscriptions exist on the topic)",,cshannon,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5960,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jan 11 15:33:08 UTC 2019,,,,,,,,,,,"0|u00ohs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Jan/19 19:34;jira-bot;Commit 25de20c77ec0bf6cdc699cac2ad50e34ec707453 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25de20c ]

AMQ-7129 - Properly recover messages from KahaDB for a durable when there are
messages to recover before the stored lastAck value

With individual ack mode we need to check the durable ackPosition
sequence set in the KahaDB index on subsription load to see if there are
earlier messages before the lastAck value that still haven't been acked.
While this normally wouldn't happen it is possible in individual ack
mode
;;;","09/Jan/19 19:35;cshannon;[~gtully] - Can you take a look at this to make sure it looks good to you? If there is an issue we can fix it but I went ahead and pushed it against master so Jenkins could run the tests;;;","09/Jan/19 19:39;jira-bot;Commit 703b8cbda39f4a1263e7ecfbb1eb1ec247f91162 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=703b8cb ]

AMQ-7129 - minor junit test fix
;;;","11/Jan/19 11:00;gtully;[~cshannon] I never got a handle on the need for individual ack on a durable sub b/c it is not shared in jms 1.0, for a long time it was only the last ack id that was tracked which meant that this use case did not work historically. With priority support and individual message tracking in the index it is possible now.
There is some redelivery count logic in: org.apache.activemq.broker.region.DurableTopicSubscription#deactivate that will probably break with individual ack if the messages are acked out of order and keepDurableSubsActive is true. In other words, there may be more issues related to this use case b/c it has not been common in the past.
this is forward progress though :-)

Actually - I think in the jdbc store it is just the last ack sequence id per priority that is tracked, so it may be that individual ack on the jdbc store with durable subs won't fly at all b/c there is no separate index.;;;","11/Jan/19 11:39;cshannon;[~gtully] - thanks for the feedback.  I agree that this is not perfect but is a bit of progress that should at least help.  I don't recommend using individual ack mode with durables at all but there are a couple cases where I manage some brokers where a user had done this and messages got stuck like this.  I told them to quit doing that which solved the issue but figured I would at least try and help the recovery case...at least for KahaDB.  

I will also merge the fix into the 5.15.x branch and close this as completed as the CI tests seem to have passed.;;;","11/Jan/19 11:43;jira-bot;Commit 24b5944ecbf315866ce227862fb2d264f5b1654f in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=24b5944 ]

AMQ-7129 - Properly recover messages from KahaDB for a durable when there are
messages to recover before the stored lastAck value

With individual ack mode we need to check the durable ackPosition
sequence set in the KahaDB index on subsription load to see if there are
earlier messages before the lastAck value that still haven't been acked.
While this normally wouldn't happen it is possible in individual ack
mode

(cherry picked from commit 25de20c77ec0bf6cdc699cac2ad50e34ec707453)
;;;","11/Jan/19 11:43;jira-bot;Commit 602e382f1deb52002986ba7e308111088cc249a8 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=602e382 ]

AMQ-7129 - minor junit test fix

(cherry picked from commit 703b8cbda39f4a1263e7ecfbb1eb1ec247f91162)
;;;","11/Jan/19 14:57;jira-bot;Commit fa2daa25e9acd3f37bb1ee0d37717d2383e67a85 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fa2daa2 ]

AMQ-7129 - fix durable message size statistics with individual ack

Make sure that the pending message size for a durable sub only includes
messages part of the ack range
;;;","11/Jan/19 14:58;jira-bot;Commit 0b88dabb40c7c29a1b86d9413a701cf31cc2ceda in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0b88dab ]

AMQ-7129 - fix durable message size statistics with individual ack

Make sure that the pending message size for a durable sub only includes
messages part of the ack range

(cherry picked from commit fa2daa25e9acd3f37bb1ee0d37717d2383e67a85)
;;;","11/Jan/19 14:58;cshannon;The submission of AMQ-7132 made me realize I forgot to make sure the pending size metrics for durables also work properly with individual ack which my latest commit fixes;;;","11/Jan/19 15:32;jira-bot;Commit a16b227808bec2977f1d3323bf29257b3c8ca9f6 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a16b227 ]

AMQ-7129 - code cleanup
;;;","11/Jan/19 15:33;jira-bot;Commit 5acd9303a53cd11f5109bfa96591d8d6dbf853bc in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5acd930 ]

AMQ-7129 - code cleanup

(cherry picked from commit a16b227808bec2977f1d3323bf29257b3c8ca9f6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Prevent OOM when recovering KahaDB and memory space is insufficient to load full page,AMQ-7126,13207370,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,jgoodyear,heathkesler,heathkesler,02/Jan/19 22:14,08/Jan/19 00:55,13/Jul/23 08:27,03/Jan/19 19:18,5.15.8,,,,5.15.9,5.16.0,,,,,,,0,,,,,"We have some brokers that are having OOM issues (on reboot) after having accepted messages without OOM. We investigated the problem and diagnosed that this happens when we attempt to load a full page during recovery.

If we update KahaDBStore recoverNextMessage to use the following:
""if (counter >= maxReturned || !listener.hasSpace())""
To check if we have enough space to load the next message, than our OOM is averted.

AMQ-4495 had the above change that was backed out due to performance concerns, our testing does not show us a degradation - perhaps we could provide an optional parameter to use this code?",,heathkesler,jgoodyear,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Jan/19 22:33;joed;OOM.patch;https://issues.apache.org/jira/secure/attachment/12953540/OOM.patch","03/Jan/19 19:02;jgoodyear;amq7126.patch;https://issues.apache.org/jira/secure/attachment/12953670/amq7126.patch",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jan 08 00:55:48 UTC 2019,,,,,,,,,,,"0|u00gsg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Jan/19 19:11;jira-bot;Commit 2ed15d563c4e7c259deb0748e403030957a6dde3 in activemq's branch refs/heads/activemq-5.15.x from Jamie Mark Goodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ed15d5 ]

[AMQ-7126] Prevent OOM when recovering KahaDB and memory space is insufficient to load full page
;;;","03/Jan/19 19:17;jira-bot;Commit b86c666c4058e2c4ef09e77409044732959eacb6 in activemq's branch refs/heads/master from Jamie Mark Goodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b86c666 ]

[AMQ-7126] Prevent OOM when recovering KahaDB and memory space is insufficient to load full page. Thank you Heath Kesler and Johan Edstrom for investigation and patch.
;;;","03/Jan/19 19:18;jgoodyear;Thank you [~heathkesler] and [~joed] for the investigation and patch supplied for this card.;;;","08/Jan/19 00:51;jira-bot;Commit 9845853b6860619588e50b7a56a2f80af024d28e in activemq's branch refs/heads/activemq-5.15.x from Jamie Mark Goodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9845853 ]

[AMQ-7126] Improvement to perf of 5266Test
;;;","08/Jan/19 00:52;jira-bot;Commit 4a21edc8d544474c477e2b38ac3f939f9873bfee in activemq's branch refs/heads/master from Jamie Mark Goodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a21edc ]

[AMQ-7126] Improvement to perf of 5266Test
;;;","08/Jan/19 00:55;jgoodyear;Performance did indeed appear to be an issue so submitted a change that does not affect performance;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ broker does not send the error frame back to the websocket client when an empty destination is sent with a stomp subscribe frame,AMQ-7125,13207174,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,avi5kdon@gmail.com,avi5kdon@gmail.com,01/Jan/19 15:44,24/Jan/19 16:33,13/Jul/23 08:27,14/Jan/19 15:43,5.15.8,,,,5.16.0,,,STOMP,,,,,0,,,,,"AMQ broker does not send the error frame back to the WebSocket client when an empty destination is sent with a stomp subscribe frame. Only the connection is terminated. 

As per stomp specification:

""If the server cannot successfully create the subscription, the server MUST send the client an ERROR frame and disconnect the client.""

[https://stomp.github.io/stomp-specification-1.1.html#SUBSCRIBE]

 ",,avi5kdon@gmail.com,githubbot,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jan 24 16:33:00 UTC 2019,,,,,,,,,,,"0|u00fl4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Jan/19 16:24;githubbot;GitHub user avi5kdonrh opened a pull request:

    https://github.com/apache/activemq/pull/334

    AMQ-7125 Stomp subscribe empty destination fix

    Fix for: The Broker does not send error frame when an empty destination is specified in a stomp subscribe frame

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/avi5kdonrh/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/334.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #334
    
----
commit a29bf734621eba080eadc63cdf7778c098158704
Author: avi5kdon <avi5kdon@...>
Date:   2019-01-01T16:19:25Z

    AMQ-7125 Broker does not send error frame when an empty destination is sent with a stomp subscribe frame

----
;;;","14/Jan/19 15:40;jira-bot;Commit b10458e2c69aa8743e6606948a13dcf27dca1ccc in activemq's branch refs/heads/master from avi5kdon
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b10458e ]

AMQ-7125 Broker does not send error frame when an empty destination is sent with a stomp subscribe frame
;;;","14/Jan/19 15:43;gtully;[~avi5kdon@gmail.com] I committed a variation of the pr using a protocolException that is already converted into an error response.
Thanks for the fix and test
;;;","24/Jan/19 16:33;avi5kdon@gmail.com;Hi, [~gtully] I initially wrote the same code as your commit (Just throwing the protocolException on empty destination). Although it does

send the error frame back to the client, it does not close the connection. But the specification says that the connection should be closed.

https://stomp.github.io/stomp-specification-1.2.html#SUBSCRIBE;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IntrospectionSupport.setProperty should call method.setAccessible(true),AMQ-7121,13203030,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,ollierob,ollierob,07/Dec/18 12:51,23/Jun/20 04:38,13/Jul/23 08:17,23/Jun/20 04:38,5.15.8,,,,5.16.0,,,,,,,,0,,,,,"We are trying to run a broker in JDK 11 and run into the following exception:
{code:java}
2018-12-07 12:44:41,363 ERROR main o.a.a.u.IntrospectionSupport Could not set property soTimeout on ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=9505]
java.lang.IllegalAccessException: class org.apache.activemq.util.IntrospectionSupport cannot access a member of class sun.nio.ch.ServerSocketAdaptor (in module java.base) with modifiers ""public""
at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)
at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)
at java.base/java.lang.reflect.Method.invoke(Method.java:558)
at org.apache.activemq.util.IntrospectionSupport.setProperty(IntrospectionSupport.java:184)
at org.apache.activemq.util.IntrospectionSupport.setProperties(IntrospectionSupport.java:155)
at org.apache.activemq.transport.tcp.TcpTransportServer.configureServerSocket(TcpTransportServer.java:187)
at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:142)
at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:62)
at org.apache.activemq.transport.TransportFactorySupport.bind(TransportFactorySupport.java:40)
at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:318)
at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:141){code}
Note that we also see
{code:java}
Could not set property reuseAddress ...{code}
These are caused by {{sun.nio.ch.ServerSocketAdaptor}} becoming a non-public class in JDK 11 (if not earlier).

It can be fixed simply by having {{IntrospectionSupport.setProperty}} call {{setter.setAccessible(true)}} before it invokes any methods on it.

Otherwise we find our local broker runs perfectly fine. ",,cshannon,jira-bot,ollierob,,,,,,,,,"jbonofre opened a new pull request #545:
URL: https://github.com/apache/activemq/pull/545


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/20 15:36;githubbot;600","jbonofre merged pull request #545:
URL: https://github.com/apache/activemq/pull/545


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 04:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,120,0,1200,"1,000%",120,0,1200,,,,,,,,,,,,,,,,,AMQ-4428,AMQ-7087,,,,"10/Dec/18 12:45;ollierob;AMQ-7121_Set_accessible.patch;https://issues.apache.org/jira/secure/attachment/12951192/AMQ-7121_Set_accessible.patch",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jun 23 04:38:03 UTC 2020,,,,,,,Patch Available,,,,"0|s01a48:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Dec/18 18:15;cshannon;This can be addressed as part of AMQ-7087;;;","23/Jun/20 04:38;jira-bot;Commit 88525ce650e0843b555b1ef45834435ef719d2f6 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=88525ce ]

[AMQ-7121] Set setter accessible (for JDK 11)
;;;","23/Jun/20 04:38;jira-bot;Commit f4dbb74048b8769e237c05f6f1b8b67c72b9e953 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f4dbb74 ]

Merge pull request #545 from jbonofre/AMQ-7121

[AMQ-7121] Set setter accessible (for JDK 11);;;","23/Jun/20 04:38;jira-bot;Commit f4dbb74048b8769e237c05f6f1b8b67c72b9e953 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f4dbb74 ]

Merge pull request #545 from jbonofre/AMQ-7121

[AMQ-7121] Set setter accessible (for JDK 11);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB store limit can be exceeded with durable subscribers.,AMQ-7118,13201770,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,,jgoodyear,jgoodyear,01/Dec/18 03:56,18/Oct/19 18:49,13/Jul/23 08:27,04/Dec/18 16:34,5.15.8,5.16.0,,,5.15.8,5.16.0,,KahaDB,,,,,0,,,,,"KahaDB store limit can be exceeded with durable subscribers.

AMQ with store limit set, we can observe that the usage continues to increase AFTER PFC is engaged. Given time, this growth stabilizes. The issue of having exceeded the store limit remains.

See below output from KahaDB dump in attachments:

This appears to be caused by checkpointAckMessageFileMap. The log files are not GC'd, and the KAHA_ACK_MESSAGE_FILE_MAP_COMMAND is replicated and the DB log files continue to expand - this can become exponential. Side effect of also not checking storage size in checkpoint update can cause the DB log files to exceed any set limits. The real critical part is the duplicated and leaking Kaha messages which appears to happen with durable subscribers.

 

 

 ",JDK 8,alanprot,githubbot,gtully,heathkesler,jgoodyear,jira-bot,,,,,,"jbonofre commented on issue #326: AMQ-7118: fix issue with the unchanged acknowledgement map.
URL: https://github.com/apache/activemq/pull/326#issuecomment-543885060
 
 
   It has been already applied.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 18:49;githubbot;600","jbonofre commented on pull request #326: AMQ-7118: fix issue with the unchanged acknowledgement map.
URL: https://github.com/apache/activemq/pull/326
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Oct/19 18:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"01/Dec/18 03:58;jgoodyear;kahaCommands.jpg;https://issues.apache.org/jira/secure/attachment/12950267/kahaCommands.jpg",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Sep 20 09:01:08 UTC 2019,,,,,,,,,,,"0|s012g0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Dec/18 11:33;githubbot;GitHub user heathkesler opened a pull request:

    https://github.com/apache/activemq/pull/326

    AMQ-7118: fix issue with the unchanged acknowledgement map.

    If the kahadb ack message file map has not changed, then there is no reason to write it again.  So all the kahadb store tests and activemq unit test suite pass. 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/heathkesler/activemq AMQ7118-ack

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/326.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #326
    
----
commit 7dfecde307e61420b179ed54540953132371d278
Author: hkesler <hkesler@...>
Date:   2018-12-02T03:34:31Z

    AMQ-7118: fix the issue with the unchanged ack continues to get written to the data files

commit 5f4fc0793cec914b8990a567f5fdc48fd2aeb9c8
Author: hkesler <hkesler@...>
Date:   2018-12-02T03:36:04Z

    remove merge file

----
;;;","02/Dec/18 15:52;heathkesler;Yeah, I noticed the same thing, the ackMessageFileMapLocation gets written on every checkpoint, even if it hasnt changed.  I think it should only be written when the file map has changed.  I have attached a PR that does just that and it seems to work great.  It has a unit test and I have run all the unit tests and they pass.  Please let me know what you think or if I should change anything.

 ;;;","02/Dec/18 16:10;jgoodyear;To close the loop from IRC chat:

Heath, this looks good, but I would use AtomicBoolen with lazySet may be a bit cleaner for this.;;;","02/Dec/18 16:20;githubbot;GitHub user heathkesler opened a pull request:

    https://github.com/apache/activemq/pull/327

    AMQ-7118: fix issue where the ackMessageFileMapLocation gets written on every checkpoint

     fix issue where the ackMessageFileMapLocation gets written on every checkpoint, even if it hasnt changed and include the use of the Atomic boolean.  

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/heathkesler/activemq AMQ7118-map

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/327.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #327
    
----
commit 5c08df663de650870d4e4b3f940d7838af96d188
Author: hkesler <hkesler@...>
Date:   2018-12-02T16:17:40Z

    AMQ-7118: fix issue where the ackMessageFileMapLocation gets written on every checkpoint, even if it hasnt changed and include the use of the Atomic boolean

----
;;;","02/Dec/18 16:23;heathkesler;Thanks Jamie for the feedback, I updated the code accordingly. ;;;","02/Dec/18 16:37;jgoodyear;Thanks Heath!  This looks really great.  [~gtully], can you take a gander as well?;;;","03/Dec/18 10:16;gtully;[~heathkesler] verify that the logic around https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java#L1916 still holds. 
That code is tracking modifications to trigger a checkpoint that expects that map to be unconditionally stored.

small note; very often the xml config is not necessary (the broker can be programmatically configure)  and the use of 61616 port can be avoided in favour of the vm transport. It makes the unit test tidier and more self contained and could lead to them being run in parallel. 
In any event, it is great to see a matching test that will protect this change.
.;;;","03/Dec/18 14:25;heathkesler;Hi [~gtully], 

Thanks for the feedback.  I did indeed verify by breakpoint that it hits the mandatory write on 1948 and the flag is set.  The test reads out all the messages… it hits that code in checkpoint pass #4 in my test.  Are you seeing anything different?;;;","04/Dec/18 16:22;jira-bot;Commit d816b738af33ac2b94e2ef6ba0d3085c7eb32728 in activemq's branch refs/heads/activemq-5.15.x from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d816b73 ]

AMQ-7118 This closes #327 - with thanks to Heath Kesler
;;;","04/Dec/18 16:30;jira-bot;Commit 612d4aeeb4025d62f75a301a655112b6e53c7170 in activemq's branch refs/heads/master from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=612d4ae ]

AMQ-7118 This closes #327 - with thanks to Heath Kesler
;;;","04/Dec/18 16:30;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/327
;;;","04/Dec/18 16:34;jgoodyear;Thank you [~heathkesler] for the patch.;;;","05/Jan/19 23:19;alanprot;The Unit test `testCompaction` seems to be failing on master.;;;","06/Jan/19 16:42;jgoodyear;{{I've pulled latest on Master and built locally:}}

{{-------------------------------------------------------}}
 {{ T E S T S}}
 {{-------------------------------------------------------}}
 {{Running org.apache.activemq.bugs.AMQ7118Test}}
 {{Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.474 sec - in org.apache.activemq.bugs.AMQ7118Test}}

{{Results :}}

{{Tests run: 1, Failures: 0, Errors: 0, Skipped: 0}}

{{Can you please supply more information on your environment? }}

{{I've also run the kahadb store tests as well:}}

{{Results :}}

{{Tests run: 140, Failures: 0, Errors: 0, Skipped: 1}};;;","06/Jan/19 18:12;alanprot;I think I just found the problem...

The test is relying in the size of the hostname of your host...

Ex (long hostname):

sudo hostname hostnamehostnamehostname

Running org.apache.activemq.bugs.AMQ7118Test
 Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.483 sec <<< FAILURE! - in org.apache.activemq.bugs.AMQ7118Test
 testCompaction(org.apache.activemq.bugs.AMQ7118Test) Time elapsed: 2.094 sec <<< FAILURE!
 java.lang.AssertionError: expected:<21> but was:<22>
 at org.junit.Assert.fail(Assert.java:88)
 at org.junit.Assert.failNotEquals(Assert.java:834)
 at org.junit.Assert.assertEquals(Assert.java:645)
 at org.junit.Assert.assertEquals(Assert.java:631)
 at org.apache.activemq.bugs.AMQ7118Test.checkFiles(AMQ7118Test.java:193)
 at org.apache.activemq.bugs.AMQ7118Test.testCompaction(AMQ7118Test.java:116)

 

Ex (short hostname):

sudo hostname hostname

Running org.apache.activemq.bugs.AMQ7118Test
 Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 15.718 sec <<< FAILURE! - in org.apache.activemq.bugs.AMQ7118Test
 testCompaction(org.apache.activemq.bugs.AMQ7118Test) Time elapsed: 15.372 sec <<< FAILURE!
 org.junit.ComparisonFailure: expected:<db-3[3].log> but was:<db-3[0].log>
 at org.junit.Assert.assertEquals(Assert.java:115)
 at org.junit.Assert.assertEquals(Assert.java:144)
 at org.apache.activemq.bugs.AMQ7118Test.checkFiles(AMQ7118Test.java:194)
 at org.apache.activemq.bugs.AMQ7118Test.testCompaction(AMQ7118Test.java:135)

 

But the test runs successfully if the hostname is set to ""hostnamehostname""

sudo hostname hostnamehostname

-------------------------------------------------------
 T E S T S
 -------------------------------------------------------
 Running org.apache.activemq.bugs.AMQ7118Test
 Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 23.281 sec - in org.apache.activemq.bugs.AMQ7118Test

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

 

 ;;;","07/Jan/19 18:41;alanprot;Just to clarify, the hostname is changing the message ID and so, changing the number of journal files..

 

CommandType: KAHA_ADD_MESSAGE_COMMAND - TOPIC (DestId: 1:test), MsgId: ID:hostnamehostname-61683-1546886442069-4:2:1:1:1.

 ;;;","08/Jan/19 00:04;jira-bot;Commit a2dccbf8431b881fc95f63a41ce4deb4ae476304 in activemq's branch refs/heads/activemq-5.15.x from Jeff Genender
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a2dccbf ]

AMQ-7118 - Override hostname for naming to allow tests to apss on all
platforms
;;;","08/Jan/19 00:10;jira-bot;Commit 273afef47c9fef5258cc297ae7353b705db3efb6 in activemq's branch refs/heads/master from Jeff Genender
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=273afef ]

AMQ-7118 - Override hostname for naming to allow tests to apss on all
platforms
;;;","20/Sep/19 09:01;jira-bot;Commit e8e27f0b16e099e6774096f5c9adbd404dcd0cc7 in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e8e27f0 ]

AMQ-7118 ensure message size and usage is constant for the test, fix failure
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Deadlock between MQTTInactivityMonitor and BrokerService Threads,AMQ-7115,13201120,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Nov/18 14:22,29/Nov/18 11:51,13/Jul/23 08:27,28/Nov/18 15:06,5.15.0,,,,5.16.0,,,MQTT,,,,,0,,,,,"MQTT with nio+ssl, thread dead lock on concurrent processing socket read error and inactivity monitor exception.

{code}Found one Java-level deadlock:
=============================
""MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@7e51223f[State = -1, empty queue]"":
 waiting to lock monitor 0x00007fd54c06d268 (object 0x00000003f63c3d50, a org.apache.activemq.broker.jmx.ManagedTransportConnection),
 which is held by ""ActiveMQ BrokerService[AMQ2] Task-38733""
""ActiveMQ BrokerService[AMQ2] Task-38733"":
 waiting for ownable synchronizer 0x0000000436d5d458, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
 which is held by ""MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@7e51223f[State = -1, empty queue]""

Java stack information for the threads listed above:
===================================================
""MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@7e51223f[State = -1, empty queue]"":
 at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:870)
 - waiting to lock <0x00000003f63c3d50> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
 at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:73)
 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:326)
 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:190)
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:162)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:181)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onTransportError(MQTTProtocolConverter.java:650)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onException(MQTTInactivityMonitor.java:194)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor$2$1.run(MQTTInactivityMonitor.java:128)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at java.lang.Thread.run(Thread.java:748)
""ActiveMQ BrokerService[AMQ2] Task-38733"":
 at sun.misc.Unsafe.park(Native Method)
 - parking to wait for <0x0000000436d5d458> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
 at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
 at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
 at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
 at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
 at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:43)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:162)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:181)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onTransportError(MQTTProtocolConverter.java:650)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onException(MQTTTransportFilter.java:206)
 at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:96)
 at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:225)
 at org.apache.activemq.transport.mqtt.MQTTNIOSSLTransport.initializeStreams(MQTTNIOSSLTransport.java:48)
 at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:519)
 at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:160)
 at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:412)
 at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
 at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.start(MQTTTransportFilter.java:157)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.start(MQTTInactivityMonitor.java:148)
 at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
 at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:1066)
 - locked <0x00000003f63c3d50> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
 at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:218)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at java.lang.Thread.run(Thread.java:748)\{code}
{code}","<transportConnector name=""mqtt+nio+ssl"" uri=""mqtt+nio+ssl://0.0.0.0:62062?maximumConnections=200000&amp;wireFormat.maxFrameSize=104857600&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions""/>",gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6414,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 29 11:51:34 UTC 2018,,,,,,,,,,,"0|s00yg0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Nov/18 14:25;gtully;The serviceRead with the start lock held can only occur if it wins the race with the async serviceRead introduced via: AMQ-6414 - however it should never be servicing the error twice.;;;","28/Nov/18 14:28;jira-bot;Commit 6d4459a00c2441822297b06221bb107c5843c390 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6d4459a ]

AMQ-7115 - ensure transport error handling is a one shot for a connection - avoid contention and possible dead lock - fix and test
;;;","29/Nov/18 11:51;gtully;TLS session resume avoiding an rtt allows application data to piggyback on handshake completion tcp frames, this change in choreography is the root cause of the difference leading to deadlock. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TransportConnection pendingStop support during start is broken,AMQ-7106,13199803,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/Nov/18 10:19,11/Mar/21 14:55,13/Jul/23 08:27,21/Nov/18 10:30,5.15.0,,,,5.15.9,5.16.0,,Transport,,,,,0,,,,,"If start blocks, the inactivity monitor can kick in. The intent is that it can see the starting state and initiate a pending stop and complete.
 The current synchronization breaks this b/c the start code holds a lock for its duration, which requires the stopAsync code to block in error.
 This means there is a blocked inactivity monitor thread per blocked starting connection...  very quickly too many threads.
 A blocked ssl handshake can demonstrate.
{code:java}
""MQTTInactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@7c1745f4[State = -1, empty queue]"" #4412 daemon prio=5 os_prio=0 tid=0x00007fd524f2c800 nid=0x622d waiting for monitor entry [0x00007fd393776000]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at org.apache.activemq.broker.TransportConnection.stopAsync(TransportConnection.java:1136)
        - waiting to lock <0x00000004dc8059b0> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.stopAsync(ManagedTransportConnection.java:66)
        at org.apache.activemq.broker.TransportConnection.stopAsync(TransportConnection.java:1131)
        at org.apache.activemq.broker.TransportConnection.serviceTransportException(TransportConnection.java:235)
        at org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:206)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)
        at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onException(MQTTInactivityMonitor.java:196)
        at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor$1$1.run(MQTTInactivityMonitor.java:81)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

   Locked ownable synchronizers:
        - <0x00000004d7803c60> (a java.util.concurrent.ThreadPoolExecutor$Worker)
{code}
{code:java}
""ActiveMQ BrokerService[BB] Task-51959"" #4414527 daemon prio=5 os_prio=0 tid=0x00007fd5f83b9800 nid=0x1846 runnable [0x00007fd3873b3000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.EPollArrayWrapper.epollWait(Native Method)
        at sun.nio.ch.EPollArrayWrapper.poll(EPollArrayWrapper.java:269)
        at sun.nio.ch.EPollSelectorImpl.doSelect(EPollSelectorImpl.java:93)
        at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)
        - locked <0x00000004dc805830> (a sun.nio.ch.Util$3)
        - locked <0x00000004dc805820> (a java.util.Collections$UnmodifiableSet)
        - locked <0x00000004dc805840> (a sun.nio.ch.EPollSelectorImpl)
        at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:380)
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:137)
        at org.apache.activemq.transport.mqtt.MQTTNIOSSLTransport.initializeStreams(MQTTNIOSSLTransport.java:46)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:519)
        at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:160)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:412)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.mqtt.MQTTTransportFilter.start(MQTTTransportFilter.java:157)
        at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.start(MQTTInactivityMonitor.java:148)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:1066)
        - locked <0x00000004dc8059b0> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
        at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:218)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

   Locked ownable synchronizers:
        - <0x00000004dc805a78> (a java.util.concurrent.ThreadPoolExecutor$Worker){code}",mqtt nio ssl,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8183,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 21 13:53:23 UTC 2019,,,,,,,,,,,"0|s00qd4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/Nov/18 10:23;jira-bot;Commit 8cc0c5ad6c85381cf6bbeaf179086d451d96650e in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8cc0c5a ]

AMQ-7106 - fix pending stop support by avoiding sync through single shared status var - fix and test
;;;","21/Nov/18 10:30;gtully;The same fix pattern could be applied to the stop/stopping choreography however that problem goes deeper due to the interaction with the service stopper state etc. It gets very involved quickly. This is a small step with specific intent and scope.;;;","12/Dec/18 16:57;jira-bot;Commit 540999654a8d581e2ba7c4c160a522378b318bbf in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5409996 ]

AMQ-7106 - fix pending stop support by avoiding sync through single shared status var - fix and test

(cherry picked from commit 8cc0c5ad6c85381cf6bbeaf179086d451d96650e)
;;;","21/Nov/19 13:53;jira-bot;Commit e4f155f548f63aa9693ae8bbdb9ed3f224ee616e in activemq's branch refs/heads/master from gtully
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e4f155f ]

AMQ-7106 - fix intermittent failure in the test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KahaDB index, recover free pages in parallel with start (Continued)",AMQ-7093,13196926,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jgenender,jgenender,07/Nov/18 20:50,14/Nov/18 15:33,13/Jul/23 08:27,08/Nov/18 11:52,5.15.7,,,,5.15.8,5.16.0,,KahaDB,,,,,0,,,,,AMQ-7082 was implemented to create a concurrent thread to handle the free page recovery.  It was included as a part of 5.15.7.  There was some additional add-on coding that was not a part of that release which had introduced some potential bugs.  This was made to track the additional commits for this.,,alanprot,cshannon,jgenender,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7082,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 14 15:33:19 UTC 2018,,,,,,,,,,,"0|s008ps:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"07/Nov/18 21:18;jgenender;This includes the following commits for 5.15.7:

ca6293b55 AMQ-7082 We should make sure that pages managed during recovery are not recovered in error variation of patch from Alan Protasio <alanprot@gmail.com> closes #317
505200b92 AMQ-7082 - fix compilation after merge
45d7676bd AMQ-7082 - Make sure that the recovery will only mark pages as free if they were created in a previous execution

 

For 5.16.0:

85859fd8d AMQ-7082 We should make sure that pages managed during recovery are not recovered in error variation of patch from Alan Protasio <alanprot@gmail.com> closes #317
81062fde8 Merge branch 'AMQ-7082'
0d3433891 AMQ-7082 - Make sure that the recovery will only mark pages as free if they were created in a previous execution

 

 

 ;;;","07/Nov/18 21:19;jgenender;[~cshannon] and [~gtully], feel free to resolve this if it encompasses all of AMQ-7082 for the fixes.;;;","07/Nov/18 23:04;jgenender;[~cshannon] and [~gtully], based on the impact of 5.15.8 and potential for corruption, I think it may be a good idea to get 5.15.8 out fairly quickly with this in it.  Do you guys agree?;;;","08/Nov/18 11:54;cshannon;I can do a 5.15.8 soon but maybe want to give it at least a week or so to see if anything else pops up that needs to be fixed or should go in.  AMQ-7091 could be a candidate depending on the fix..if it is very involved and ends up requiring an index upgrade then it should probably not go into 5.15.8 but only 5.16.  At some point we should start looking at doing 5.16 but that is going to require a bunch of work such as dependency upgrades and verifying JDK 11 works, etc.;;;","08/Nov/18 15:57;alanprot;Yeah.. seems like a important fix...

About AMQ-7091, it will not require a index upgrade anymore...

The last proposed change will get the information from sd.ackPositions (this is already in the index file nowadays).

I can still have a copy of this data 100% in memory but i think it dont worth as we already read this information when sending messages.;;;","14/Nov/18 15:17;cshannon;[~gtully] - The PageFileTest is failing for me on the 5.15.x branch but it works in master.  I'm wondering if we missed backporting something, there have been a lot of changes.

Specifically the testBackgroundWillNotMarkEaslyPagesAsFree test is not passing this assertion:
{noformat}
assertTrue(""We have 10 free pages"", Wait.waitFor(new Wait.Condition() {
            @Override
            public boolean isSatisified() throws Exception {
                pf2.flush();
                long freePages = pf2.getFreePageCount();
                LOG.info(""free page count: "" + freePages);
                return  freePages == 100100;
            }
        }, 12000000));{noformat};;;","14/Nov/18 15:31;alanprot;[~cshannon]

 

Probably is this change:

https://github.com/apache/activemq/commit/8a1abd9bb2744de70af11053f1755116c40ec55f;;;","14/Nov/18 15:32;cshannon;Nevermind, I figured it out.  We were missing the commit for https://issues.apache.org/jira/browse/AMQ-7084;;;","14/Nov/18 15:33;cshannon;[~alanprot] - Yep, we figured it out at the same time :)  I merged it in so I can continue with the release now;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
O(n) Memory consumption when broker has inactive durable subscribes causing OOM,AMQ-7091,13196142,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alanprot,alanprot,04/Nov/18 22:39,16/May/19 11:57,13/Jul/23 08:27,12/Nov/18 21:57,5.15.7,,,,5.15.8,5.16.0,,KahaDB,,,,,0,,,,,"Hi :D

One of our brokers was bouncing indefinitely due OOM even though the load (TPS) was pretty low.

Getting the memory dump I could see that almost 90% of the memory was being used by [messageReferences|https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java#L2368] TreeMap to keep track of what messages were already acked by all Subscribes in order to delete them.

This seems to be a problem as if the broker has an inactive durable subscribe, the memory footprint increase proportionally (O) with the number of messages sent to the topic in question, causing the broker to die due OOM sooner or later (the high memory footprint continue even after a restart).

You can find attached (memoryAllocation.jpg) a screen shot showing my broker using 90% of the memory to keep track of those messages, making it barely usable.

Looking at the code, I could do a change to change the messageReferences to use a BTreeIndex:

final TreeMap<Long, Long> messageReferences = new TreeMap<>();
 + BTreeIndex<Long, Long> messageReferences;

Making this change, the memory allocation of the broker stabilized and the broker didn't run OOM anymore.

Attached you can see the code that I used to reproduce this scenario, also the memory utilization (HEAP and GC graphs) before and after this change.

Before the change the broker died in 5 minutes and I could send 480000. After then change the broker was still pretty healthy after 5 minutes and i could send 2265000 to the topic (almost 5x more due high GC pauses).

 

All test are passing: mvn clean install -Dactivemq.tests=all",,alanprot,githubbot,gtully,jgenender,jgoodyear,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5960,,,,,"04/Nov/18 22:40;alanprot;After.png;https://issues.apache.org/jira/secure/attachment/12946841/After.png","04/Nov/18 22:40;alanprot;Before.png;https://issues.apache.org/jira/secure/attachment/12946842/Before.png","04/Nov/18 22:41;alanprot;InactiveDurableSubscriberTest.java;https://issues.apache.org/jira/secure/attachment/12946843/InactiveDurableSubscriberTest.java","04/Nov/18 22:39;alanprot;memoryAllocation.jpg;https://issues.apache.org/jira/secure/attachment/12946840/memoryAllocation.jpg",,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 12 21:56:08 UTC 2018,,,,,,,,,,,"0|s003w8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Nov/18 22:49;githubbot;GitHub user alanprot opened a pull request:

    https://github.com/apache/activemq/pull/315

    AMQ-7091 - O(n) Memory consumption when broker has inactive durable s…

    …ubscribes causing OOM

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alanprot/activemq AMQ-7091

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/315.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #315
    
----
commit 29dde9fa81be3bd20fd840daa178259e74cc032e
Author: Alan Protasio <alanprot@...>
Date:   2018-11-04T06:22:32Z

    AMQ-7091 - O(n) Memory consumption when broker has inactive durable subscribes causing OOM

----
;;;","06/Nov/18 14:50;jgoodyear;The patch looks good to me - thank you Alan.;;;","06/Nov/18 14:53;gtully;that info does not need to be persisted, it is duplicate info. I would like to understand the tradeoff - that in mem reference map was introduced as on optimisation via: https://issues.apache.org/jira/browse/AMQ-3467 in 2011 but is in memory only to be fast. It may be possible to squash that map to a sequenceSet of offsets that share a reference count which would address the mem usage without the need to persist to disk.

 

The implications of additional page writes on every add/ack may be significant for the simple fanout (when users keep up) case. Typically the broker has plenty of memory for this sort of thing.

 ;;;","06/Nov/18 14:56;jgoodyear;[~cshannon], [~gtully]

I've reviewed Alan's patch and it looks good.

The bump in KahaDB version to 7 on Master would open the door to us doing some more changes to KahaDB/MessageDatabase (perhaps some gentle refactoring). 

I'd like to know what you think.;;;","06/Nov/18 14:59;jgoodyear;Thanks Gary.;;;","06/Nov/18 17:09;jgoodyear;Hi [~alanprot], 

After some conversation with the community, the SeuqnceSet in AMQ is good to use for this scenario, because then we can control the sizes and toss them when memory is short: 
https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/util/SequenceSet.java

Please have a look at the above, and lets update your PR.;;;","06/Nov/18 18:37;alanprot;Cool! Thanks guys to looking into that...

I will change my PR! :D

 

Thanks again!!! :D;;;","07/Nov/18 00:54;alanprot;Hi Guys....

 

I changed my PR to use the SequenceSets that already exists in the index...

[https://github.com/apache/activemq/pull/315]

I'm running all the tests now...

 

Thanks;;;","07/Nov/18 18:21;alanprot;[~gtully] [~jgoodyear] Seems that all tests succeed! 

If you guys think that getting this from the ListIndex<String, SequenceSet> ackPositions is expensive I can create a TreeMap<String, SequenceSet> to keep it in memory.. but I think having this duplicate information can be error prone. And also we are already accessing this index in the code... the only overhead is when you ack a message instead o getting the sequenceSet only for the subscriber that is acking we have to get the sequenceSet for all subscribers..

See ""isSequenceReferenced"" method.;;;","07/Nov/18 21:23;gtully;[~alanprot] you have to ask the computer to see if there is any negative performance impact. This reference count in memory is an optimisation introduced for a performance issue, probably a typical fanout case with lots of subs. See the linked issue. This issue is about that cache being unbounded in terms of memory usage, the solution is to have the data in the pageFile and pageCache such that it can get flushed from memory at the cost of accessing from pages in normal operation.

I would like to see the actual trade off in publish/ack latency quantified. It may well be negligible; but we need to respect the original use case to verify.

In addition, if this warrants a version update, the auto migration path needs to be validated.;;;","07/Nov/18 22:11;alanprot;Hi [~gtully]

Thanks again! haha :D

 
{quote}the solution is to have the data in the pageFile and pageCache such that it can get flushed from memory at the cost of accessing from pages in normal operation.
{quote}
Did you see my last proposed change? This change does not requite new index version (kahadb) and will not write anything new to the index.

I dont know why the bot didn't add the comment (updated the PR) here but i'm not adding a new Btree Index anymore... I'm reusing the data that is already there:

[https://github.com/apache/activemq/pull/315/commits/98d1be6acaee79f9acd72d2c7c2bdb2358638e18]

We already have this information in other format in the ListIndex<String, SequenceSet> ackPositions; So i'm using it.

My comment before was.... nowadays to discover if one message is referenced by one subscribe we only do a sd.messageReferences.get(sequenceId) and check if the reference count is 0.

With my change,  we will do when acking a message something similar with that we already do when sending a message.

See:

[https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java#L2924]

and

[https://github.com/apache/activemq/pull/315/commits/98d1be6acaee79f9acd72d2c7c2bdb2358638e18#diff-e3b8fff8c2133dfd70999705bbb558b3R2935]

  

 

 

 ;;;","08/Nov/18 16:32;jgenender;This looks good to me...the additional writes are gone.  [~gtully], since you are the resident expert in this area, please let us know what you think?;;;","08/Nov/18 19:53;alanprot;[~gtully] [~jgenender]

I did some performance tests before and after the change:

The test scenarios were:

1, 10, 100 Consumers

Producing and consuming messages in parallel

Producing all message before starting the consumers 

The results are here:

[https://github.com/alanprot/activemq/blob/master/AMQ-7091.md]

 

I used KahaDBDurableTopicTest as base for this test.

 

Seems that this change does not have impact performance wise.;;;","12/Nov/18 15:18;gtully;[~tabish121] Hi tim, you added the messageReferences cache way back in https://github.com/apache/activemq/commit/943db3c3cb12b4c4504b4966135cf9a0cc69f0ba - this PR proposed to remove that cache b/c it can grow unlimited with the number of pending messages, even it is a just two Longs per message it can be significant.
Can you recall the use case that caused that cache to be introduced? I ask b/c it is under threat with this change.
It may be that the need for the cache is offset by the changes to what is in the index , or it may be that with the change to what is stored, the cache is more important. 
My guess is that if it is important you may recall, hense the redirect.;;;","12/Nov/18 15:44;jgenender;[~gtully], what if the change was a configuration property? i.e. you can have the cache or you can set the property to do what is being proposed here?  So for those strapped for memory, they can just disable the cache?;;;","12/Nov/18 16:15;tabish;[~gtully] I'm afraid I don't recall any longer what the context was for that work. ;;;","12/Nov/18 16:57;gtully;[~tabish121] thanks. [~jgenender] Probably no need for any config option then. let it run as is.;;;","12/Nov/18 21:21;jira-bot;Commit 9012a7871b77da6ecdc403f6b44ef0221345bfb7 in activemq's branch refs/heads/master from [~alanprot]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9012a78 ]

AMQ-7091 - O(n) Memory consumption when broker has inactive durable subscribes causing OOM
;;;","12/Nov/18 21:23;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/315
;;;","12/Nov/18 21:32;jira-bot;Commit 71ce081157a0c4bd007cdf58d68e2e0784f87956 in activemq's branch refs/heads/activemq-5.15.x from [~alanprot]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=71ce081 ]

AMQ-7091 - O(n) Memory consumption when broker has inactive durable subscribes causing OOM

(cherry picked from commit 9012a7871b77da6ecdc403f6b44ef0221345bfb7)
;;;","12/Nov/18 21:56;jgoodyear;Thank you Alan Protasio for the PR :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 mqtt deadlock on creation/removal of destinations (virtual topic),AMQ-7088,13195591,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,01/Nov/18 09:17,01/Nov/18 10:15,13/Jul/23 08:27,01/Nov/18 10:15,5.15.0,,,,5.16.0,,,Broker,MQTT,,,,0,,,,,"{code}
""ActiveMQ NIO Worker 7"" waiting for ownable synchronizer 0x0000000405d1fce0, (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync),
 which is held by ""ActiveMQ NIO Worker 5""

""ActiveMQ NIO Worker 5"": waiting to lock monitor 0x00007fdfd001d3e8 (object 0x0000000405231968, a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor),
 which is held by ""ActiveMQ NIO Worker 7""
{code}

Here are the stack traces:

{code}
""ActiveMQ NIO Worker 7"":
 at sun.misc.Unsafe.park(Native Method)
 - parking to wait for <0x0000000405d1fce0> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
 at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
 at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
 at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
 at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:943)
 at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:132)
 at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:348)
 at org.apache.activemq.broker.region.virtual.VirtualTopic.create(VirtualTopic.java:100)
 at org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.create(VirtualDestinationInterceptor.java:83)
 - locked <0x0000000405231968> (a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor)
 at org.apache.activemq.broker.region.CompositeDestinationInterceptor.create(CompositeDestinationInterceptor.java:52)
 at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:423)
 at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:243)
 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:103)
 at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:130)
 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:103)
 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:103)
 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:103)
 at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:108)
 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:103)
 at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:103)
 at org.apache.activemq.security.AuthorizationBroker.addConsumer(AuthorizationBroker.java:183)
 at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:108)
 at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:696)
 at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:352)
 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:326)
 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:190)
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:162)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:181)
 at org.apache.activemq.transport.mqtt.strategy.AbstractMQTTSubscriptionStrategy.doSubscribe(AbstractMQTTSubscriptionStrategy.java:210)
 at org.apache.activemq.transport.mqtt.strategy.MQTTVirtualTopicSubscriptionStrategy.onSubscribe(MQTTVirtualTopicSubscriptionStrategy.java:118)
 at org.apache.activemq.transport.mqtt.strategy.AbstractMQTTSubscriptionStrategy.onSubscribe(AbstractMQTTSubscriptionStrategy.java:118)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onSubscribe(MQTTProtocolConverter.java:362)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:212)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:94)
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
 at org.apache.activemq.transport.nio.NIOSSLTransport.doConsume(NIOSSLTransport.java:440)
 at org.apache.activemq.transport.mqtt.MQTTCodec$1.onFrame(MQTTCodec.java:65)
 at org.apache.activemq.transport.mqtt.MQTTCodec.processCommand(MQTTCodec.java:90)
 at org.apache.activemq.transport.mqtt.MQTTCodec.access$400(MQTTCodec.java:26)
 at org.apache.activemq.transport.mqtt.MQTTCodec$4.parse(MQTTCodec.java:213)
 at org.apache.activemq.transport.mqtt.MQTTCodec$3.parse(MQTTCodec.java:179)
 at org.apache.activemq.transport.mqtt.MQTTCodec$2.parse(MQTTCodec.java:138)
 at org.apache.activemq.transport.mqtt.MQTTCodec.parse(MQTTCodec.java:76)
 at org.apache.activemq.transport.mqtt.MQTTNIOSSLTransport.processCommand(MQTTNIOSSLTransport.java:57)
 at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:221)
 at org.apache.activemq.transport.nio.NIOSSLTransport$2.onSelect(NIOSSLTransport.java:176)
 at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
 at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:118)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at java.lang.Thread.run(Thread.java:748)

""ActiveMQ NIO Worker 5"":
 at org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.remove(VirtualDestinationInterceptor.java:89)
 - waiting to lock <0x0000000405231968> (a org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor)
 at org.apache.activemq.broker.region.CompositeDestinationInterceptor.remove(CompositeDestinationInterceptor.java:46)
 at org.apache.activemq.broker.region.AbstractRegion.removeDestination(AbstractRegion.java:230)
 at org.apache.activemq.broker.jmx.ManagedQueueRegion.removeDestination(ManagedQueueRegion.java:62)
 at org.apache.activemq.broker.region.RegionBroker.removeDestination(RegionBroker.java:363)
 at org.apache.activemq.broker.region.RegionBroker.removeDestinationInfo(RegionBroker.java:376)
 at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:268)
 at org.apache.activemq.advisory.AdvisoryBroker.removeDestinationInfo(AdvisoryBroker.java:322)
 at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:268)
 at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:268)
 at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:268)
 at org.apache.activemq.broker.MutableBrokerFilter.removeDestinationInfo(MutableBrokerFilter.java:274)
 at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:268)
 at org.apache.activemq.broker.BrokerFilter.removeDestinationInfo(BrokerFilter.java:268)
 at org.apache.activemq.security.AuthorizationBroker.removeDestinationInfo(AuthorizationBroker.java:144)
 at org.apache.activemq.broker.MutableBrokerFilter.removeDestinationInfo(MutableBrokerFilter.java:274)
 at org.apache.activemq.broker.TransportConnection.processRemoveDestination(TransportConnection.java:611)
 at org.apache.activemq.command.DestinationInfo.visit(DestinationInfo.java:124)
 at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:326)
 at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:190)
 at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
 at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:162)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:181)
 at org.apache.activemq.transport.mqtt.strategy.MQTTVirtualTopicSubscriptionStrategy.onUnSubscribe(MQTTVirtualTopicSubscriptionStrategy.java:159)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onUnSubscribe(MQTTProtocolConverter.java:389)
 at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:215)
 at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:94)
 at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
 at org.apache.activemq.transport.nio.NIOSSLTransport.doConsume(NIOSSLTransport.java:440)
 at org.apache.activemq.transport.mqtt.MQTTCodec$1.onFrame(MQTTCodec.java:65)
 at org.apache.activemq.transport.mqtt.MQTTCodec.processCommand(MQTTCodec.java:90)
 at org.apache.activemq.transport.mqtt.MQTTCodec.access$400(MQTTCodec.java:26)
 at org.apache.activemq.transport.mqtt.MQTTCodec$4.parse(MQTTCodec.java:213)
 at org.apache.activemq.transport.mqtt.MQTTCodec$3.parse(MQTTCodec.java:179)
 at org.apache.activemq.transport.mqtt.MQTTCodec$2.parse(MQTTCodec.java:138)
 at org.apache.activemq.transport.mqtt.MQTTCodec.parse(MQTTCodec.java:76)
 at org.apache.activemq.transport.mqtt.MQTTNIOSSLTransport.processCommand(MQTTNIOSSLTransport.java:57)
 at org.apache.activemq.transport.nio.NIOSSLTransport.serviceRead(NIOSSLTransport.java:221)
 at org.apache.activemq.transport.nio.NIOSSLTransport$2.onSelect(NIOSSLTransport.java:176)
 at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:98)
 at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:118)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at java.lang.Thread.run(Thread.java:748)
{code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 01 10:11:30 UTC 2018,,,,,,,,,,,"0|s000i0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"01/Nov/18 10:11;jira-bot;Commit f2cde24a62d61fb1015b15d0ce25801353db0621 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f2cde24 ]

AMQ-7088 - fix deadlock on remove add interaction from mqtt virtual topic sub use case
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB - optionally perform expensive gc run on shutdown,AMQ-7086,13194120,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Oct/18 11:11,31/Oct/18 14:35,13/Jul/23 08:27,31/Oct/18 14:35,5.15.0,,,,5.16.0,,,KahaDB,,,,,0,,,,,"when looking at the speed of broker.stop with kahadb and the scheduler store. There is a full gc run, which can be expensive as the whole index needs to be traversed.

Fast stop/restart is important for fast failover. Leaving gc for runtime, where it has an effect on latency in the normal way, rather than availability, is better.

 

I am wondering if there is a use case for gc only at shutdown if the cleanupInterval <= 0, indicating that there were no gc at runtime. The alternative is adding another boolean to the config or adding that back in if the need arises.

I am leaning towards just removing the gc call during shutdown.

 

Note: matching the indexCacheSize to the index file size, trading off with memory, does help to speed up the index (read) traversal.",,gtully,jgenender,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-3646,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Oct 31 14:35:28 UTC 2018,,,,,,,,,,,"0|i3zmp3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Oct/18 12:01;gtully;The checkpoint=0 use case is from: AMQ-3646

disabling gc on shutdown will need to be configurable I think.;;;","25/Oct/18 15:20;jgenender;[~gtully] my .02 is making it configurable is the way to go.;;;","31/Oct/18 14:29;jira-bot;Commit bf8eb08acaeec653d04daa0b8b6dd889ef990bed in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bf8eb08 ]

AMQ-7086 - make kahadb gc/cleanup on shutdown optional to trade availability over disk usage for fast failover
;;;","31/Oct/18 14:35;gtully;new kahaDB boolean attribute: 

cleanupOnStop - default to true as before.

When disabled, the gc/cleanup iteration on broker stop won't happen, which will speed up shutdown.

Use case is with really large db or scheduler db where total index traversal is not cheap.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue.start() does not call systemUsage.start() so TempStore usage is not handled correctly,AMQ-7085,13193696,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,sits,sits,23/Oct/18 22:04,23/Feb/22 12:43,13/Jul/23 08:27,17/Jan/19 13:03,5.15.6,,,,5.15.9,5.16.0,,Broker,,,,,0,,,,,"I have an application using ActiveMQ and have a situation where a producer is blocked with this log message due to the temp usage limit being hit:
{noformat}
[ActiveMQ Transport: tcp:///aaa.bbb.ccc.ddd:65119@64759] 82567721 INFO  org.apache.activemq.broker.region.Queue - Usage(Main:temp:queue://aaabbb:temp) percentUsage=99%, usage=61771109932, limit=61771104256, percentUsageMinDelta=1%;Parent:Usage(Main:temp) percentUsage=100%, usage=61771109932, limit=61771104256, percentUsageMinDelta=1%: Temp Store is Full (99% of 61771104256). Stopping producer (ID:aaaaa-3:1:1:1) to prevent flooding queue://aaabbb. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 8512s){noformat}
In the past I have been able to use JConsole and update the broker's TempLimit value to a higher value to allow things to continue.
 
However on this occasion, the messages above when output again show that the parent's temp limit has updated however the child's limit (the queue) is unchanged.  So it seems the broker's TempUsage does not know about the queue's TempUsage. 
 
In looking at the code.. it seems a child Usage class has to call start() in order for this parent -> children link to be established and for parent limit changes to be propagated down to children.  However the Queue start() method doesn't call systemUsage.getTempUsage().start() for some reason (or even just systemUsage.start()).
 
Is this a bug?
 
DestinationView sadly does not expose setTempLimit() either so this wasn't an option either.
 
From Queue:
{code:java}
    @Override
    public void start() throws Exception {
        if (started.compareAndSet(false, true)) {
            if (memoryUsage != null) {
                memoryUsage.start();
            }
            if (systemUsage.getStoreUsage() != null) {
                systemUsage.getStoreUsage().start();
            }
            systemUsage.getMemoryUsage().addUsageListener(this);
            messages.start();
            if (getExpireMessagesPeriod() > 0) {
                scheduler.executePeriodically(expireMessagesTask, getExpireMessagesPeriod());
            }
            doPageIn(false);
        }
    }{code}
   ",,cshannon,gtully,jira-bot,sits,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8509,,,,,"19/Nov/18 09:14;sits;AQM-7085.patch;https://issues.apache.org/jira/secure/attachment/12948679/AQM-7085.patch",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,Patch,,,,,,,,9223372036854775807,,,,Wed Feb 23 12:43:46 UTC 2022,,,,,,,Patch Available,,,,"0|i3zk3r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Oct/18 23:43;sits;Hi - just curious if there is any feedback for this issue?  Thanks. ;;;","06/Nov/18 08:57;gtully;[~sits] even for a small change, it is best to include a test case to validate the use case and to protect your change into the future. It also makes it easy to integrate b/c the bug becomes trivial to understand with the test case in code.;;;","19/Nov/18 09:12;sits;Fair enough.. I've added two tests which demonstrate the fix.  Many thanks.
;;;","17/Jan/19 03:52;sits;Hi - what else is required to get this committed?  I submitted a patch with a test case almost two months ago.
;;;","17/Jan/19 12:33;cshannon;[~sits] - sorry for the delay, I will take a look now.;;;","17/Jan/19 13:01;jira-bot;Commit daea192eefe683a8cba63b5136dc8c2b39722cfe in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=daea192 ]

AMQ-7085 - Properly start TempUsage inside Queue start

This fix allows temp usage changes to the broker temp usage to propagate
properly to a Queue's temp usage settings

Patch applied with thanks to David Sitsky
;;;","17/Jan/19 13:02;jira-bot;Commit db814982c782505c2ce754d5c3a1e8a08c2e6369 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=db81498 ]

AMQ-7085 - Properly start TempUsage inside Queue start

This fix allows temp usage changes to the broker temp usage to propagate
properly to a Queue's temp usage settings

Patch applied with thanks to David Sitsky

(cherry picked from commit daea192eefe683a8cba63b5136dc8c2b39722cfe)
;;;","17/Jan/19 13:03;cshannon;[~sits] - Patch looks good to me, thanks.  I have applied it with a couple of minor tweaks to both 5.15.x and 5.16.x (master) branches;;;","17/Jan/19 21:32;sits;Excellent - thank you.
;;;","23/Feb/22 12:41;jira-bot;Commit df354fa0237dba309592277e3cfecbe1d55690be in activemq's branch refs/heads/main from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=df354fa ]

AMQ-8509: Update TempStore Usage test to verify cleanup

Add a unit test to the previous tests added in AMQ-7085 to verify
TempUsage is cleaned up and stopped on Queue.stop()
;;;","23/Feb/22 12:43;jira-bot;Commit 8674538d617d61f55fe5ef0c80f5f74e75115b77 in activemq's branch refs/heads/activemq-5.16.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8674538 ]

AMQ-8509: Update TempStore Usage test to verify cleanup

Add a unit test to the previous tests added in AMQ-7085 to verify
TempUsage is cleaned up and stopped on Queue.stop()

(cherry picked from commit df354fa0237dba309592277e3cfecbe1d55690be)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Kahadb pagefile, allocated and unused pages from read only transactions are leaked",AMQ-7084,13193597,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,23/Oct/18 14:58,14/Nov/18 15:32,13/Jul/23 08:27,23/Oct/18 15:03,5.15.0,,,,5.15.8,5.16.0,,KahaDB,,,,,0,,,,,"The work in AMQ-7080 to checkpoint the free list has identified a case where the free list is not updated to reflect the disk state of an allocated free page. This can lead to a free page leak in error. In practice this pattern of usage is not widely used, but it is relevant when the free page list is being tracked and failure can be arbitrary. It is important that an accurate reflection of the current state is being checkpointed.",,gtully,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7080,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 14 15:31:15 UTC 2018,,,,,,,,,,,"0|i3zjhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Oct/18 15:01;jira-bot;Commit 8a1abd9bb2744de70af11053f1755116c40ec55f in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8a1abd9 ]

AMQ-7084 - ensure allocated and unused free pages are visible to subsequent transactions, fix and test with test updates to reflect proper usage
;;;","14/Nov/18 15:31;jira-bot;Commit deb87353c41a4bef41346d27b8c7ad4c1ab21bef in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=deb8735 ]

AMQ-7084 - ensure allocated and unused free pages are visible to subsequent transactions, fix and test with test updates to reflect proper usage

(cherry picked from commit 8a1abd9bb2744de70af11053f1755116c40ec55f)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"KahaDB index, recover free pages in parallel with start",AMQ-7082,13192835,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,19/Oct/18 12:42,07/Mar/19 13:07,13/Jul/23 08:27,07/Nov/18 21:03,5.15.0,,,,5.15.7,5.16.0,,KahaDB,,,,,1,,,,,"AMQ-6590 fixes free page loss through recovery. The recover process can be timely, which prevents fast failover, doing recovery on shutdown is preferable, but it is still not ideal b/c it will hold onto the kahadb lock. It also can stall shutdown unexpectedly.

AMQ-7080 is going to tackle checkpointing the free list. This should help avoid the need for recovery but it may still be necessary. If the perf hit is significant this may need to be optional.

There will still be the need to walk the index to find the free list.

It is possible to run with no free list and grow, and we can do that while we recover the free list in parallel, then merge the two at a safe point. This we can do at startup.

In cases where the disk is the bottleneck this won't help much, but it will help failover and it will help shutdown, with a bit of luck the recovery will complete before we stop.

 

Initially I thought this would be too complex, but if we concede some growth while we recover, ie: start with an empty free list, it is should be straight forward to merge with a recovered one.",,alanprot,alvinlin123,cshannon,githubbot,gtully,jbonofre,jeromeinsf,jgenender,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7093,,,,,,,,AMQ-6590,AMQ-7163,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 07 21:03:23 UTC 2018,,,,,,,,,,,"0|i3zetb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Oct/18 15:00;jira-bot;Commit 79c74998dc1efb72b05d32f920052a1df4b6dd8e in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=79c7499 ]

AMQ-7082 - recover index free pages in parallel with start, merge in flush, clean shutdown if complete. follow up on AMQ-6590
;;;","19/Oct/18 15:10;gtully;The recovery is now back in the start phase, if it completes we are good. Otherwise we try again the next time.

 

[~jgoodyear] - this is a take on the parallel approach, I think it makes good sense.

[~alanprot] - there is still a good case for checkpointing which will reduce the full replay window, but the perf impact will the be key determinant on that I think.

It would be good to gauge the impact of the second reader in your case over NFS, there may be need to slow down the recovery thread such that it does not hog the disk or cpu.

 ;;;","19/Oct/18 15:45;jira-bot;Commit efa4e683bc9f4fc458ce80125304f20a742a7907 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=efa4e68 ]

AMQ-7082 - fix final ref in test
;;;","19/Oct/18 15:45;alanprot;This is amazing!!!!!! :D:D:D:D:D:D:D:D

Maybe we can do a small change to synchronize the newFreePages and use is as soon as it has recovered values... no?

 

Something like this:

https://github.com/alanprot/activemq/commit/a9354e330e41cf4bf7e6fa21b57490a3ef22609b;;;","19/Oct/18 15:58;gtully;I did not want to block normal work with sync on what the recovery thread is doing. I think it will be constant churn there.

Typically all operations on the pageFile hold the index lock, so it can be mostly sync free (the exception being the optional async writer thread).

it may be worth a test though to validate :)

 ;;;","19/Oct/18 16:03;cshannon;Nice work [~gtully], this should work nicely to prevent the shutdown issue. When I'm back at the office Monday I will take a look at all of this in more depth and do some testing (I've been traveling for work all week);;;","19/Oct/18 16:03;alanprot;So, we can lock only if the recoveredFreeList is not empty AND freeList is empty then ... no? This is a good trade off... we only have this hit during the recovery AND we need more free pages.... Imagine that probably allocate new pages will take more time than this sync...

Would be amazing to have this free pages as soon we know about them... -Maybe with this we AMQ-7080 stop making sense at all...-  (AMQ-7080 can still have the potential to avoid lots of read - On a NFS we can have a limited throughout - mb/s - So maybe this still good) ;;;","19/Oct/18 17:00;alanprot;This is what I meant...

[https://github.com/alanprot/activemq/commit/9b96e590de8b180815bd85dc701e8d0a8f28b031]

:D;;;","21/Oct/18 04:18;jbonofre;Just reopen this one to include in next 5.15.7 release.;;;","21/Oct/18 17:29;jira-bot;Commit c6103415b9a185776ebc16343c6574f7ff884806 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c610341 ]

AMQ-7082 - recover index free pages in parallel with start, merge in flush, clean shutdown if complete. follow up on AMQ-6590
;;;","21/Oct/18 17:29;jgenender;[~gtully], I love the merge...this makes sense and is a quick combination.  Since the flush() happens in the checkpointUpdate, that makes this thread safe.  Nice thinking about merging, that was a nice solution outside the box.

This definitely needs to go into 5.15.7.  I went ahead and did that as this closes the loop on any delays from freeList scanning.

 ;;;","22/Oct/18 12:56;cshannon;[~gtully] - I took a look at the patch, it looks ok to me although I think the variable {{needsFreePageRecovery}} needs to be marked as volatile because it's updated async in the new free page recovery thread that kicks off.;;;","22/Oct/18 14:16;jira-bot;Commit fb1e642c15fa842e5e25b80d89293d0bb03225c0 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fb1e642 ]

AMQ-7082 - ensure flush sees free list, use lazySet to avoid store barrier, thanks cshannon
;;;","22/Oct/18 14:21;gtully;[~cshannon] yep, good catch thanks. it is the lazySet semantic I was after, but I can't avoid calling it!;;;","22/Oct/18 14:46;jira-bot;Commit a9b81ace623d62e92b75ddc31c424c0ed4cae9d1 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a9b81ac ]

AMQ-7082 - ensure flush sees free list, use lazySet to avoid store barrier, thanks cshannon
;;;","06/Nov/18 10:29;gtully;[~alanprot] pointed out an issue that can cause the concurrent free page recovery to walk on newly allocated and freed pages or pages in the process of being used.

The recovery processing needs to terminate at the nextFreePage id that exists at start. Everything after that is not recoverable, it is in use!;;;","06/Nov/18 10:30;gtully;The window is small, however with something like message expiry, and all messages expiring while the broker is down, there can be alot of page file churn immediately after start. In addition if the recovery is very long, the window gets larger.;;;","06/Nov/18 12:12;cshannon;[~gtully] -  is the issue that was found something that is critical (ie we have to release a 5.15.8 update soon) or could it wait for more fixes before a new release?;;;","06/Nov/18 12:21;alvinlin123;[~cshannon] I do believe the issue is kind of critical (thus warrants 5.15.8 update soon) as it will lead to many mysterious behavior.;;;","06/Nov/18 12:52;githubbot;GitHub user alanprot opened a pull request:

    https://github.com/apache/activemq/pull/316

    AMQ-7082 - Make sure that the recovery will only mark pages as free i…

    …f they were created in a previous execution

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alanprot/activemq AMQ-7082

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/316.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #316
    
----
commit 0d34338919edee863bd71693ee30999d9d9d6ce9
Author: Alan Protasio <alanprot@...>
Date:   2018-11-06T09:13:18Z

    AMQ-7082 - Make sure that the recovery will only mark pages as free if they were created in a previous execution

----
;;;","06/Nov/18 12:55;alanprot;Hi guys...

I just created a PR with the tests...

Thanks! :D;;;","06/Nov/18 13:16;cshannon;[~alanprot] - this looks good to me, I will merge it, thanks.;;;","06/Nov/18 13:25;jira-bot;Commit 0d34338919edee863bd71693ee30999d9d9d6ce9 in activemq's branch refs/heads/master from [~alanprot]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0d34338 ]

AMQ-7082 - Make sure that the recovery will only mark pages as free if they were created in a previous execution
;;;","06/Nov/18 13:25;jira-bot;Commit 81062fde88eeb5fa970e70fd851b49d442a7116a in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=81062fd ]

Merge branch 'AMQ-7082'

This closes #316

Thanks to Alan Protasio for the patch
;;;","06/Nov/18 13:25;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/316
;;;","06/Nov/18 13:26;jira-bot;Commit 45d7676bd95a7e4594a80b025994ea3242c94586 in activemq's branch refs/heads/activemq-5.15.x from [~alanprot]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=45d7676 ]

AMQ-7082 - Make sure that the recovery will only mark pages as free if they were created in a previous execution

(cherry picked from commit 0d34338919edee863bd71693ee30999d9d9d6ce9)
;;;","06/Nov/18 13:27;alanprot;Thanks [~cshannon] :D:D:D;;;","06/Nov/18 13:27;cshannon;[~gtully] - I merged the fix can you take a quick look to make sure it looks good to you before we close this again?;;;","06/Nov/18 14:43;jira-bot;Commit 505200b92a0d72666b6665f6026a97a8f215d895 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=505200b ]

AMQ-7082 - fix compilation after merge
;;;","06/Nov/18 15:00;gtully;Fix is good, thanks [~alanprot];;;","06/Nov/18 22:38;githubbot;GitHub user alanprot opened a pull request:

    https://github.com/apache/activemq/pull/317

    AMQ-7082 We should make sure that pages that is being recovered canno…

    …t be reused

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alanprot/activemq AMQ-7082-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/317.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #317
    
----
commit af4b52a426f35c3c01058c5f49e40baa9fd6d771
Author: Alan Protasio <alanprot@...>
Date:   2018-11-06T22:28:32Z

    AMQ-7082 We should make sure that pages that is being recovered cannot be reused

----
;;;","06/Nov/18 22:44;alanprot;[~gtully] [~cshannon]

Sorry guys... but there is one more case that this can happen... 

Imagine that you have a 1000 page in the file...

T1 -> 1000 occupied pages

T2 -> page 100 is freed (and so added to the freeList)

T3 -> Background thread see the 100 page as free and so, add to the recoveryList

T3 -> We need one more page and we allocate page 100 (as it was marked as free in the freeList).

T4 -> background thread finish and mark 100 as free again...

I did a PR there to prevent this... I did everything in a way that we dont need synchronization... 

I think now we pretty much got all the cases... 

 ;;;","07/Nov/18 10:26;gtully;peeking at the latest additions to the fix.;;;","07/Nov/18 11:33;jira-bot;Commit 85859fd8dc22e3251de294c23d84c12b29d4fe81 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=85859fd ]

AMQ-7082 We should make sure that pages managed during recovery are not recovered in error
variation of patch from Alan Protasio <alanprot@gmail.com> closes #317
;;;","07/Nov/18 11:33;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/317
;;;","07/Nov/18 11:38;gtully;[~alanprot] I added an additional condition the the end of your new test to verify that newly freed pages could be reused and reworked to fix.

This ensures that there is no need for further growth while recovery is in progress which is better. I think we are finally good.;;;","07/Nov/18 15:01;alanprot;[~gtully] Makes lots of sense....

If the page was freed after the restart, they should be removed from recoveredFreeList before merging as they are already tracked in freeList. This will prevent them to came back at the end of the recovery..

Sound really good for me!;;;","07/Nov/18 17:46;jira-bot;Commit ca6293b55ce49f2d0851e901d2abd62a3d6d82b6 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ca6293b ]

AMQ-7082 We should make sure that pages managed during recovery are not recovered in error
variation of patch from Alan Protasio <alanprot@gmail.com> closes #317

(cherry picked from commit 85859fd8dc22e3251de294c23d84c12b29d4fe81)
;;;","07/Nov/18 19:59;jeromeinsf;[~gtully] What is the strategy wrt ActiveMQ 5.15.7 version in such a case?

5.15.7 provides a fix for critical bug AMQ-7067 but the original fix for this particular bug (AMQ-7082) introduced another bug that could be considered as critical by certain given this type of comments: https://issues.apache.org/jira/browse/AMQ-7082?focusedCommentId=16676687&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16676687  

 ;;;","07/Nov/18 20:16;jgenender;[~jeromeinsf] - You have a valid point.  This Jira should have been left at 5.15.7 since it was resolved, and a new Jira should have been opened to track 5.15.8 with the additional changes that were submitted. [~gtully], Do you think that we set this back to the fix in 5.15.7, and get the changes for 5.15.8 in a new Jira to track this more clearly?;;;","07/Nov/18 20:29;cshannon;Yeah, just create a new Jira and link this one with the new Jira (I think there is a caused by association to say this one caused a bug).  That makes more sense to me as it will be easier to follow.  I will set this back to 5.15.7.;;;","07/Nov/18 21:03;jgenender;Reopened and closed - continued with AMQ-7093;;;",,,,,,,,
Using abortSlowAckConsumerStrategy aborts slow consumer even though it has disconnected,AMQ-7079,13192513,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,gtully,simmel,simmel,18/Oct/18 11:39,18/Oct/18 15:57,13/Jul/23 08:27,18/Oct/18 15:56,,,,,5.16.0,,,Broker,,,,,0,,,,,"When testing AMQ-7077 I noticed that if an consumer gets tagged as slowConsumer and then the consumer disconnects ActiveMQ will abort the slow consumer (even though it already has disconnected).
  
 Somewhere in between of 13:09:10 and 13:09:42 the consumer disconnects.
{code:java}
2018-10-18 13:09:10,735 | INFO  | sub: ID:kaka.it.su.se-51120-1539860894594-1:1:1:1 is no longer slow | org.apache.activemq.broker.region.policy.AbortSlowAckConsumerStrategy | ActiveMQ Broker[localhost] Scheduler
2018-10-18 13:09:42,836 | INFO  | aborting slow consumer: ID:kaka.it.su.se-51120-1539860894594-1:1:1:1 for destination:queue://su.it.linfra.simlu | org.apache.activemq.broker.region.policy.AbortSlowConsumerStrategy | ActiveMQ Broker[localh
{code}
Configuration:
{code:xml}
[…]
                <policyEntry queue=""su.it.linfra.simlu"">
                  <slowConsumerStrategy>
                    <abortSlowAckConsumerStrategy checkPeriod=""1000"" maxTimeSinceLastAck=""3000"" />
                  </slowConsumerStrategy>
                </policyEntry>
[…]
{code}",,jira-bot,simmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6421,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 18 15:50:04 UTC 2018,,,,,,,,,,,"0|i3zctr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Oct/18 15:50;jira-bot;Commit 9dd751149f7489f99d430d3f1240f2bfa2e70c69 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9dd7511 ]

AMQ-7079 AMQ-7077 AMQ-6421 - check for consumers that have been destroyed
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue subscriber view slowConsumer flag set in error,AMQ-7077,13191938,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,16/Oct/18 14:15,18/Oct/18 15:57,13/Jul/23 08:27,17/Oct/18 10:09,5.15.0,,,,5.16.0,,,,,,,,0,,,,,"For queue subscribers, the broker dispatches prefetch num messages and stops. The subscription is considered full.

There is currently logic in PrefetchSubscription that flags the consumer as slow on the success full dispatch of the last message in a prefetch batch. this flag remains set till there are more messages to dispatch, which happens on the first ack.

The consumer is considered slow, till it acks (which seems wrong) and in the case that there are no more message to dispatch, it remains slow.

 

Interestingly, there are some tests for this functionality that only validate topics in error.

 

From my investigation, it seems that for queue consumers, it is really only possible to gauge slowness due to the frequency of acks, which is what the AbortAckSlowConsumerPolicy does.

It makes sense that that code flags a consumer as slow once it is detected as such.",,gtully,jira-bot,simmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6421,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Oct 18 15:50:05 UTC 2018,,,,,,,,,,,"0|i3z9af:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Oct/18 14:17;gtully;If the abortSlowAck policy is responsible for setting the flag, it can also fire the advisory. https://issues.apache.org/jira/browse/AMQ-6421;;;","17/Oct/18 09:31;simmel;As I said on IRC, to be able to configure the criteria that ActiveMQ uses to mark a consumer as slow would be awesome. maxTimeSinceLastAck is probably what we would use.;;;","17/Oct/18 10:05;jira-bot;Commit 4dee173962a08dbcb88e33f61ec281209c0b9156 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4dee173 ]

AMQ-7077 AMQ-6421 - tie queue consumer slow flag detection to abort slow consumer policy, fire advisory when set.
;;;","17/Oct/18 10:09;gtully;[~simmel] with the abort slow ack policy and 

_maxTimeSinceLastAck_ you can now control when the advisory and slow flag is set.;;;","18/Oct/18 15:50;jira-bot;Commit 9dd751149f7489f99d430d3f1240f2bfa2e70c69 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9dd7511 ]

AMQ-7079 AMQ-7077 AMQ-6421 - check for consumers that have been destroyed
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Features repository should refer the spring-legacy one,AMQ-7076,13191619,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,15/Oct/18 14:56,22/Nov/18 16:08,13/Jul/23 08:27,22/Nov/18 16:08,5.15.6,,,,5.15.9,5.16.0,,OSGi/Karaf,,,,,0,,,,,,,githubbot,jbonofre,jira-bot,lichtin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Nov 22 16:08:41 UTC 2018,,,,,,,,,,,"0|i3z7br:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Oct/18 15:38;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/activemq/pull/310

    [AMQ-7076] Fix and update features to fully support Karaf 4.2.x

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/activemq AMQ-7076

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/310.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #310
    
----
commit 87a7da20920c8608bf7207910251d6cc8b21cd76
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2018-10-15T15:37:38Z

    [AMQ-7076] Fix and update features to fully support Karaf 4.2.x

----
;;;","16/Oct/18 19:40;jira-bot;Commit 5f1b6a1fc21fe2d4bd5f52579983a1a4818fedb7 in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5f1b6a1 ]

[AMQ-7076] Fix and update features to fully support Karaf 4.2.x
;;;","16/Oct/18 19:40;jira-bot;Commit 79d07a396eeab4bb2cf32bdb3f2d1db17c54c8f9 in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=79d07a3 ]

[AMQ-7076] This closes #310
;;;","16/Oct/18 19:40;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/310
;;;","16/Oct/18 19:41;jira-bot;Commit 6f2b651ffd3b0e3778004dc90f248b5c8f6d6ece in activemq's branch refs/heads/activemq-5.15.x from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6f2b651 ]

[AMQ-7076] Fix and update features to fully support Karaf 4.2.x
;;;","30/Oct/18 14:29;lichtin;Hmm, this seems to have broken use of ActiveMQ for Karaf 4.0.x?
{noformat}
[ERROR] Failed to execute goal org.apache.karaf.tooling:karaf-maven-plugin:4.0.10:features-add-to-repository (features-add-to-repository) on project my-project: Error populating repository: Can't resolve artifact org.apache.karaf.features:spring-legacy:xml:features:[4,5): Could not find artifact org.apache.karaf.features:spring-legacy:xml:features:[4,5) in m<-repo (http://repo.my.domain/repo){noformat};;;","22/Nov/18 08:09;jbonofre;Unfortunately, if this change works fine for Karaf 4.2.x, it introduced issues with Karaf 4.0.x and 4.1.x.

I'm updating ActiveMQ features XML to support any karaf version (even if the user would need to add other repo by hand).;;;","22/Nov/18 08:29;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/activemq/pull/319

    [AMQ-7076] Does not define spring-legacy repository by default in Act…

    …iveMQ Karaf features repo, and let the user add it

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/activemq AMQ-7076

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/319.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #319
    
----
commit 44d79afa46db3c27101143e2d93448d6f9e36f6d
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2018-11-22T08:27:09Z

    [AMQ-7076] Does not define spring-legacy repository by default in ActiveMQ Karaf features repo, and let the user add it

----
;;;","22/Nov/18 08:40;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/activemq/pull/320

    [AMQ-7076] Does not define spring-legacy repository by default in Act…

    …iveMQ Karaf features repo, and let the user add it

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/activemq AMQ-7076-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/320.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #320
    
----
commit c16da2442bfd66f82960900a05d016ac753be337
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2018-11-22T08:27:09Z

    [AMQ-7076] Does not define spring-legacy repository by default in ActiveMQ Karaf features repo, and let the user add it

----
;;;","22/Nov/18 16:07;jira-bot;Commit 57e38509e529def1f870d811f26145d21f7ac57e in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=57e3850 ]

[AMQ-7076] Does not define spring-legacy repository by default in ActiveMQ Karaf features repo, and let the user add it
;;;","22/Nov/18 16:07;jira-bot;Commit 097f82a246df80b0bac43b714bc0f0a8f2be71d7 in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=097f82a ]

[AMQ-7076] This closes #320
;;;","22/Nov/18 16:07;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/320
;;;","22/Nov/18 16:08;jira-bot;Commit 50e24c523ca256dd2ac0a62771011e1b87033051 in activemq's branch refs/heads/activemq-5.15.x from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=50e24c5 ]

[AMQ-7076] Does not define spring-legacy repository by default in ActiveMQ Karaf features repo, and let the user add it
;;;","22/Nov/18 16:08;jira-bot;Commit 8aeb634bbfaf9cbf8f5a172867b728ac94c9c69f in activemq's branch refs/heads/activemq-5.15.x from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8aeb634 ]

[AMQ-7076] This closes #319
;;;","22/Nov/18 16:08;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/319
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Camel tests failure,AMQ-7075,13191532,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,jbonofre,jbonofre,15/Oct/18 09:15,15/Mar/19 10:29,13/Jul/23 08:27,15/Oct/18 13:30,,,,,5.15.9,5.16.0,,Camel,,,,,0,,,,,"Couple of Camel tests are failing:

{code}
  ActiveMQComponentFactoryUserNamePasswordTest>CamelTestSupport.setUp:279->CamelSpringTestSupport.doPreSetup:80->CamelSpringTestSupport.doCreateApplicationContext:90->createApplicationContext:30 » BeanCreation
  ActiveMQComponentUserNamePasswordTest>CamelTestSupport.setUp:279->CamelSpringTestSupport.doPreSetup:80->CamelSpringTestSupport.doCreateApplicationContext:90->createApplicationContext:30 » BeanCreation
{code}",,githubbot,jbonofre,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 15 10:29:44 UTC 2019,,,,,,,,,,,"0|i3z6sf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Oct/18 09:32;githubbot;GitHub user jbonofre opened a pull request:

    https://github.com/apache/activemq/pull/309

    [AMQ-7075] Fix Camel test (userName instead of username)

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jbonofre/activemq AMQ-7075

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/309.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #309
    
----
commit e22703edc6974f705d29f1f88ff5fd879e3a9fe9
Author: Jean-Baptiste Onofré <jbonofre@...>
Date:   2018-10-15T09:31:43Z

    [AMQ-7075] Fix Camel test (userName instead of username)

----
;;;","15/Oct/18 13:26;jira-bot;Commit e22703edc6974f705d29f1f88ff5fd879e3a9fe9 in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e22703e ]

[AMQ-7075] Fix Camel test (userName instead of username)
;;;","15/Oct/18 13:26;jira-bot;Commit 085dd4e6e1ca62f355547094e212bda13d8d0f57 in activemq's branch refs/heads/master from [~jb@nanthrax.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=085dd4e ]

[AMQ-7075] This closes #309
;;;","15/Oct/18 13:27;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/309
;;;","15/Mar/19 10:29;jira-bot;Commit 714662161a0fc302592a96f3f956a381ad190b31 in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=7146621 ]

[AMQ-7075] Fix Camel test (userName instead of username)

(cherry picked from commit e22703edc6974f705d29f1f88ff5fd879e3a9fe9)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HTTP client don't handle XStream deserialization exception,AMQ-7069,13190642,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,amarkevich,amarkevich,10/Oct/18 13:57,17/Nov/19 16:44,13/Jul/23 08:27,17/Nov/19 16:44,5.15.6,,,,5.15.11,5.16.0,,Transport,,,,,0,http,,,,"XStreamException is RuntimeException and cause error when shutting down ExecutorService [^before.log].
",,amarkevich,githubbot,jira-bot,,,,,,,,,"jbonofre commented on pull request #305: AMQ-7069 HTTP client don't handle XStream deserialization exception
URL: https://github.com/apache/activemq/pull/305
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Nov/19 16:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,"10/Oct/18 13:56;amarkevich;after.log;https://issues.apache.org/jira/secure/attachment/12943245/after.log","10/Oct/18 13:56;amarkevich;before.log;https://issues.apache.org/jira/secure/attachment/12943244/before.log",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Sun Nov 17 16:44:46 UTC 2019,,,,,,,,,,,"0|i3z1br:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"10/Oct/18 14:01;githubbot;GitHub user amarkevich opened a pull request:

    https://github.com/apache/activemq/pull/305

    AMQ-7069 HTTP client don't handle XStream deserialization exception

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/amarkevich/activemq AMQ-7069

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/305.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #305
    
----
commit b830894e690d317ba32019c00d7d4db01eadcc5d
Author: amarkevich <amarkevich@...>
Date:   2018-10-10T13:57:49Z

    AMQ-7069 HTTP client don't handle XStream deserialization exception

----
;;;","17/Nov/19 16:43;jira-bot;Commit b830894e690d317ba32019c00d7d4db01eadcc5d in activemq's branch refs/heads/master from amarkevich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b830894 ]

AMQ-7069 HTTP client don't handle XStream deserialization exception;;;","17/Nov/19 16:43;jira-bot;Commit f7b08713f3e37ffe952595ffb3e010437c3fbea5 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7b0871 ]

Merge pull request #305 from amarkevich/AMQ-7069

AMQ-7069 HTTP client don't handle XStream deserialization exception;;;","17/Nov/19 16:43;jira-bot;Commit f7b08713f3e37ffe952595ffb3e010437c3fbea5 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f7b0871 ]

Merge pull request #305 from amarkevich/AMQ-7069

AMQ-7069 HTTP client don't handle XStream deserialization exception;;;","17/Nov/19 16:44;jira-bot;Commit b1ba57503744edf407d287b0fc81689283d54edc in activemq's branch refs/heads/activemq-5.15.x from amarkevich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=b1ba575 ]

AMQ-7069 HTTP client don't handle XStream deserialization exception

(cherry picked from commit b830894e690d317ba32019c00d7d4db01eadcc5d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KahaDB Recovery can experience a dangling transaction when prepare and commit occur on different data files.,AMQ-7067,13189438,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,jgoodyear,jgoodyear,04/Oct/18 14:28,24/Mar/21 14:22,13/Jul/23 08:27,17/Oct/18 17:18,5.15.6,,,,5.15.7,5.16.0,,KahaDB,XA,,,,0,,,,,"KahaDB Recovery can experience a dangling transaction when prepare and commit occur on different data files.

Scenario:

A XA Transaction is started, message is prepared and sent into Broker.

We then send into broker enough messages to file page file (100 message with 512 * 1024 characters in message payload). This forces a new data file to be created.

Commit the XA transaction. Commit will land on the new data file.

Restart the Broker.

Upon restart a KahaDB recovery is executed.

The prepare in PageFile 1 is not matched to Commit on PageFile 2, as such, it will appear in recovered message state.

Looking deeper into this scenario, it appears that the commit message is GC'd, hence the prepare & commit can not be matched.

The MessageDatabase only checks the following for GC:

{color:#808080}// Don't GC files referenced by in-progress tx{color}{color:#cc7832}if {color}(inProgressTxRange[{color:#6897bb}0{color}] != {color:#cc7832}null{color}) {
 {color:#cc7832}for {color}({color:#cc7832}int {color}pendingTx=inProgressTxRange[{color:#6897bb}0{color}].getDataFileId(){color:#cc7832}; {color}pendingTx <= inProgressTxRange[{color:#6897bb}1{color}].getDataFileId(){color:#cc7832}; {color}pendingTx++) {
 gcCandidateSet.remove(pendingTx){color:#cc7832};{color} }
 }

We need to become aware of where the prepare & commits occur in pagefiles with respect to GCing files.",,cshannon,githubbot,gtully,jbonofre,jgenender,jgoodyear,jira-bot,tmielke,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-8201,,,,,"04/Oct/18 21:36;jgoodyear;amq7067test.patch;https://issues.apache.org/jira/secure/attachment/12942458/amq7067test.patch",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Wed Oct 24 12:56:03 UTC 2018,,,,,,,Patch Available,,,,"0|i3ytzj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"04/Oct/18 15:52;jgoodyear;Please see the amq7067 unit test.

This patch is for AMQ 5.15.x branch.

You can execute using the following command:
 mvn -Dtest=AMQ7067Test test


Keeping original comment for history:

I've attached a stand alone test case to reproduce the issue.

Here's how to use the test case:

0. Setup AMQ 5.15.6 broker on local system. Use default configuration, no special settings required. Start broker.
 1. Extract AMQ7067 zip file.
 2. Run XATransactionTest while Broker is live using :  mvn clean compile exec:java -Dexec.mainClass=""XATransactionTest""

The test case will output:

[INFO] — exec-maven-plugin:1.6.0:java (default-cli) @ transaction —
 SLF4J: Class path contains multiple SLF4J bindings.
 SLF4J: Found binding in [jar:file:/Users/icbts/.m2/repository/org/apache/activemq/activemq-all/5.15.6/activemq-all-5.15.6.jar!/org/slf4j/impl/StaticLoggerBinder.class]
 SLF4J: Found binding in [jar:file:/Users/icbts/.m2/repository/org/slf4j/slf4j-log4j12/1.6.1/slf4j-log4j12-1.6.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]
 SLF4J: See [http://www.slf4j.org/codes.html#multiple_bindings] for an explanation.
 SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
 createDanglingTransaction txid: XID:[55,globalId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1,branchId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1]
 createXATransaction txid: XID:[55,globalId=000015333ec,branchId=000015333ec]
 Pending Transactions 1: [XID:[55,globalId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1,branchId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1]]
  INFO | I/O exception (org.apache.http.NoHttpResponseException) caught when processing request to {}->[http://localhost:8161:] The target server failed to respond
  INFO | Retrying request to {}->[http://localhost:8161|http://localhost:8161/]
 Pending Transactions 2: [XID:[55,globalId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1,branchId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1], XID:[55,globalId=000015333ec,branchId=000015333ec]]
 [INFO] ------------------------------------------------------------------------

In the Broker log you'll see:

 INFO | KahaDB is version 6
  INFO | Recovering from the journal @1:741
  INFO | Recovery replayed 429 operations from the journal in 0.081 seconds.
  WARN | Recovered prepared XA TX: [XID:[55,globalId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1,branchId=ffffffffffffffffffffffffffffffffffffffe9ffffffb8fffffff7ffffffa1]]
  WARN | Recovered prepared XA TX: [XID:[55,globalId=000015333ec,branchId=000015333ec]]
  
 On JConsole you'll see two messages in org.apache.activemq > Broker > RecoveredXaTransaction MBean.

Given we commit the transaction, I'd expect there to not be a message in Recovered state.

Note:  If we do not send additional messages to force a new page file, than we do not see the message in Recovered state after broker restart.

It appears to be that the prepared statement in db-1.log,. and commit in db-2.log will result in the commit getting GC'd (hence no pare to match) and having the message being seen as being in prepared state, and hence getting recovered.;;;","05/Oct/18 16:45;githubbot;GitHub user jgoodyear opened a pull request:

    https://github.com/apache/activemq/pull/302

    [AMQ-7067] KahaDB Recovery can experience a dangling transaction when…

    [AMQ-7067] KahaDB Recovery can experience a dangling transaction when prepare and commit occur on different pagefiles.
    
    Test cases added for Commit and Rollback on XA and Non-XA transactions.
    
    Executed kahadb-store tests, activemq-unit-tests, and ran full build.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgoodyear/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/302.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #302
    
----
commit 2dabd858240dc3dc4341cceb1d28a61e5f440d1a
Author: jgoodyear <jamie.goodyear@...>
Date:   2018-10-05T16:34:21Z

    [AMQ-7067] KahaDB Recovery can experience a dangling transaction when prepare and commit occur on different pagefiles.

----
;;;","08/Oct/18 12:29;gtully;[~jgoodyear] I think the patch is on the right track but I think it needs some small mod.

 

The ack message file map can do what we need but I think it has to track the association between the prepare record location and the outcome (commit/rollback) location rather than the actual message or ack commands.

ie: all of the transaction commands could be in one data file, the prepare in another and the outcome in a third. Tracking the link between the third and the first is not sufficient in this case. It should be possible to validate that with another test scenario.

I think the prepare record location needs to be tracked in the in memory tx representation in some way to make it available to the outcome processor.;;;","08/Oct/18 16:05;jgoodyear;Hi Gary,

The crux of this patch is to prevent the GC of the PageFile such that on recovery  Commit/Rollback can be processed as per existing logic.  No changes to the existing processors is required. 

Please note, the problem was happening with Non-XA transactions as well, hence the addition of non-xa unit tests. The commit/rollback would get lost via GC, by updating the code to mark those index to not be GC'd the behavoir is fixed for both XA and Non-XA transactions. Adding in a new structure and logic to track the TX lifeCycle would not touch the Non-XA transaction case.;;;","08/Oct/18 16:35;gtully;In the xa case, I don't think the prepare record location is tracked, so it can get lost, leaving updates and a commit/rollback - which will barf. I am suggesting tracking the outcome record with the prepare location, and possibly with all of the updates.

I had not considered the non xa case, in that case, the commit is all that is needed b/c the default will be to rollback. The commit outcome location needs to be linked to each of the update commands in turn.;;;","08/Oct/18 17:02;gtully;I see that losing a prepare record after an outcome is still recoverable, once all of the updates are present.

However I think that a prepare record needs to be tracked in case it falls outside of the current txRange or current write file.;;;","08/Oct/18 23:21;jgoodyear;I've updated the PR after our discussion on IRC.

All locations are updated on commit/rollback/prepare.;;;","09/Oct/18 11:08;gtully;[~jgoodyear] I have pushed your changes and some additional test tidy up and a prepare variant. Thank you.

 

[https://github.com/apache/activemq/commit/57c7939534a927bfc2d1b0454aac7ef8d804532b]

 

I think ack compaction will need some follow on work b/c it won't be aware that the ackMessageFileMap now also has transaction locations, it will only move acks and I think will leave the journals candidates for gc again. 

As it stands ackCompaction should be disabled for this fix to be effective, until that is proven not to be the case or it is fixed.

 

There are some ackCompaction tests that can be combined with the recovery checks to validate. 

This issue should remain open till we get a resolution to that.;;;","09/Oct/18 11:17;cshannon;Shouldn't we just record the reference location update inside of the pageFile.tx() for the KahaCommitCommand case? This would do it under the write lock and also prevent having to iterate again plus then the change gets commited to the index in the transaciton.  Ie, change: 

  
{code:java}
    final List<Operation> messagingTx = inflightTx;
    indexLock.writeLock().lock();
    try {
        pageFile.tx().execute(new Transaction.Closure<IOException>() {
            @Override
            public void execute(Transaction tx) throws IOException {
                for (Operation op : messagingTx) {
                    op.execute(tx);
                }
            }
        });
        metadata.lastUpdate = location;
    } finally {
        indexLock.writeLock().unlock();
    }
    for (Operation op: inflightTx) {
        recordAckMessageReferenceLocation(location, op.getLocation());
    }    
{code}

to:

{code:java}
final List<Operation> messagingTx = inflightTx;
    indexLock.writeLock().lock();
    try {
        pageFile.tx().execute(new Transaction.Closure<IOException>() {
            @Override
            public void execute(Transaction tx) throws IOException {
                for (Operation op : messagingTx) {
                    op.execute(tx);
                    recordAckMessageReferenceLocation(location, op.getLocation());
                }
            }
        });
        metadata.lastUpdate = location;
    } finally {
        indexLock.writeLock().unlock();
    }
{code};;;","09/Oct/18 11:31;gtully;[~cshannon] yes, good catch. I should be under that lock. The map does not get updated in the pagefile tx, just during checkpoints, but it does need to be protected from concurrent access.;;;","09/Oct/18 11:55;cshannon;[~gtully] - and I guess that means we should also add a pageFile.tx() to do the updates in for the KahaPrepareCommand and KahaRollbackCommand as well right?

And I think you are right that the Ack compaction stuff needs updating..the easiest thing is probably to just change the task so that it doesn't remove the forwarded journal file from the ackMessageFileMap if it contains a transaction command (normal GC should remove it if there are no open transactions remaining on that file)..this probably reduces the usefullness of ack compaction but I don't see a better way without expanding to rewrite all the other commands as well;;;","09/Oct/18 12:21;cshannon;I think maybe something like this would work for ack compaction but would need to test it out...I don't see any current tests for ack compaction

https://github.com/cshannon/activemq/commit/bb28cd0b647c52e8dc84b1740ab4d5ef1ca6198a;;;","09/Oct/18 12:22;gtully;[~cshannon] We just need the lock for protection, no tx, b/c the index is not updated.

On the compaction, I think that is the simplest approach.

Ideally we would have some sort of reference count on the referenced ids in the ackMessageFileMap - allowing each ack and outcome to be recorded and having some way to know there are just non ack references remaining.

We don't need to retain everything. i.e.: the prepare record can go if there is an outcome, and if the outcome is rollback then both the prepare and rollback can go b/c recovery will default to rollback. For commit, both xa and non xa, it needs to be retained as long as the updates (add/ack commands).

It will get complex fast however.

Getting it correct first will suffice, which means retaining the transaction related commands. I will see if I can wrangle a test to reproduce to get the full context.;;;","09/Oct/18 12:25;cshannon;[~gtully] - ok sounds good, having a test case to reproduce everything first will make it easier to validate any changes to ack compaction

And you are right about the index not being updated, I just realized the ackMessageFileMap is marked as transient (i was thinking it was stored to disk during index updates)

Also, based on your comment I'm not sure my sample I linked above is good enough for the commit case. (we might end up removing those files if acks are moved and the transaction is commited and not in flight but the message add or commit commands exist not sure). So again having some tests will help tremendously to validate;;;","09/Oct/18 12:57;jgoodyear;The following test case can be inserted into the AMQ7067Test file:
 [https://gist.github.com/jgoodyear/f3c716aec99c066894047ed996cdcdc9]

Its a non-completing test, it just allows us to setup the scenario, load up a lot of db page files, than let compaction occur.

In my IDEA environment i can watch the data folder populate:
{code:java}
icbts-2:activemq-unit-tests icbts$ ls target/data/kahadb/
db-1.log        db-115.log      db-131.log      db-148.log      db-164.log      db-180.log      db-197.log      db-212.log      db-229.log      db-245.log      db-261.log      db-278.log      db-4.log        db-56.log       db-72.log       db-89.log
db-10.log       db-116.log      db-132.log      db-149.log      db-165.log      db-181.log      db-198.log      db-213.log      db-23.log       db-246.log      db-262.log      db-279.log      db-40.log       db-57.log       db-73.log       db-9.log
db-100.log      db-117.log      db-133.log      db-15.log       db-166.log      db-182.log      db-199.log      db-214.log      db-230.log      db-247.log      db-263.log      db-28.log       db-41.log       db-58.log       db-74.log       db-90.log
db-101.log      db-118.log      db-134.log      db-150.log      db-167.log      db-183.log      db-2.log        db-215.log      db-231.log      db-248.log      db-264.log      db-280.log      db-42.log       db-59.log       db-75.log       db-91.log
db-102.log      db-119.log      db-135.log      db-151.log      db-168.log      db-184.log      db-20.log       db-216.log      db-232.log      db-249.log      db-265.log      db-281.log      db-43.log       db-6.log        db-76.log       db-92.log
db-103.log      db-12.log       db-136.log      db-152.log      db-169.log      db-185.log      db-200.log      db-217.log      db-233.log      db-25.log       db-266.log      db-282.log      db-44.log       db-60.log       db-77.log       db-93.log
db-104.log      db-120.log      db-137.log      db-153.log      db-17.log       db-186.log      db-201.log      db-218.log      db-234.log      db-250.log      db-267.log      db-29.log       db-45.log       db-61.log       db-78.log       db-94.log
db-105.log      db-121.log      db-138.log      db-154.log      db-170.log      db-187.log      db-202.log      db-219.log      db-235.log      db-251.log      db-268.log      db-3.log        db-46.log       db-62.log       db-79.log       db-95.log
db-106.log      db-122.log      db-139.log      db-155.log      db-171.log      db-188.log      db-203.log      db-22.log       db-236.log      db-252.log      db-269.log      db-30.log       db-47.log       db-63.log       db-8.log        db-96.log
db-107.log      db-123.log      db-14.log       db-156.log      db-172.log      db-189.log      db-204.log      db-220.log      db-237.log      db-253.log      db-27.log       db-31.log       db-48.log       db-64.log       db-80.log       db-97.log
db-108.log      db-124.log      db-140.log      db-157.log      db-173.log      db-19.log       db-205.log      db-221.log      db-238.log      db-254.log      db-270.log      db-32.log       db-49.log       db-65.log       db-81.log       db-98.log
db-109.log      db-125.log      db-141.log      db-158.log      db-174.log      db-190.log      db-206.log      db-222.log      db-239.log      db-255.log      db-271.log      db-33.log       db-5.log        db-66.log       db-82.log       db-99.log
db-11.log       db-126.log      db-142.log      db-159.log      db-175.log      db-191.log      db-207.log      db-223.log      db-24.log       db-256.log      db-272.log      db-34.log       db-50.log       db-67.log       db-83.log       db.data
db-110.log      db-127.log      db-143.log      db-16.log       db-176.log      db-192.log      db-208.log      db-224.log      db-240.log      db-257.log      db-273.log      db-35.log       db-51.log       db-68.log       db-84.log       db.redo
db-111.log      db-128.log      db-144.log      db-160.log      db-177.log      db-193.log      db-209.log      db-225.log      db-241.log      db-258.log      db-274.log      db-36.log       db-52.log       db-69.log       db-85.log       lock
db-112.log      db-129.log      db-145.log      db-161.log      db-178.log      db-194.log      db-21.log       db-226.log      db-242.log      db-259.log      db-275.log      db-37.log       db-53.log       db-7.log        db-86.log
db-113.log      db-13.log       db-146.log      db-162.log      db-179.log      db-195.log      db-210.log      db-227.log      db-243.log      db-26.log       db-276.log      db-38.log       db-54.log       db-70.log       db-87.log
db-114.log      db-130.log      db-147.log      db-163.log      db-18.log       db-196.log      db-211.log      db-228.log      db-244.log      db-260.log      db-277.log      db-39.log       db-55.log       db-71.log       db-88.log
{code}
Than reduce to the below after GC:
{code:java}
icbts-2:activemq-unit-tests icbts$ ls target/data/kahadb/
db-318.log      db.data         db.redo         lock
{code};;;","09/Oct/18 12:58;jgoodyear;I'll note that I ran the full unit test suite through using the patch with out breaking existing test cases.;;;","09/Oct/18 14:14;jgoodyear;Are the changes we're making to MessageDatabase small enough such that we could back port the fix to 5.15.x line?;;;","09/Oct/18 14:17;cshannon;I was going to backport all commits from this patch to 5.15.x as I don't know when 5.16.0 will go out and this seems like an important fix;;;","09/Oct/18 14:22;jgoodyear;Thank you :);;;","10/Oct/18 14:27;cshannon;[~jgoodyear] - i cherry-picked the existing 3 commits into the 5.15.x branch...I will also move anymore from master after the ack compaction case is sorted so we can do a 5.15.7 release soon as this is an important fix;;;","11/Oct/18 14:04;jbonofre;Hi, I would like to start ActiveMQ 5.15.6 release pretty soon. What's the current status of this one ? Thanks !;;;","11/Oct/18 14:28;cshannon;I assume you mean 5.15.7 as 5.15.6 is already out.

There is still no test case yet to validate the ack compaction stuff and I'm out of town next week so probably won't be a release until the following week at least.  I don't want to release (and [~gtully] i'm sure agrees) until we make sure we don't break other stuff with compaction.  ;;;","12/Oct/18 13:58;gtully;I pushed an update, that goes some of the way, at least there is one test and a fix.
The test is just for a prepare record, ack compaction will still move once the there are outcomes and that will break the reference. that will need a commit test in the same vein.
[~jgoodyear] flip: [https://github.com/apache/activemq/commit/7c890d477663d91aef518e30d60cf3c13827877a#diff-e3b8fff8c2133dfd70999705bbb558b3R2094] to false to see the new test fail to get suck in
I think the solution is to forward commit records, but more tests are needed to verify the problem and the fix;;;","16/Oct/18 01:26;jbonofre;Thanks for the update guys. I'm fixing AMQ-7076 and AMQ-7073 on my side.

Please let me know when I can start 5.15.7 release. Thanks !;;;","17/Oct/18 17:13;jira-bot;Commit ed727d22e1f22a13813d61dba3908408fcd3cd36 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ed727d2 ]

AMQ-7067 - track xa commit outcomes in ack compaction such that there are no dangling prepared tx on full recovery, fix and test
;;;","17/Oct/18 17:18;gtully;I think this is now sorted, the ack compaction will still work and not get in the way.;;;","17/Oct/18 17:24;jgoodyear;I see the commit message for master, are we putting this on 5.15 too?;;;","17/Oct/18 17:35;jira-bot;Commit f7ff4c25e13133132c3103141a5179c93e43b536 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f7ff4c2 ]

AMQ-7067 - track xa commit outcomes in ack compaction such that there are no dangling prepared tx on full recovery, fix and test
;;;","17/Oct/18 17:35;jgenender;Done.  Thanks.;;;","17/Oct/18 17:55;cshannon;Awesome thanks [~gtully] 

I’m actually out of the office the rest of the week but when I get back Monday I can do the work for the 5.15.7 release if no one else gets around to it;;;","21/Oct/18 19:14;githubbot;Github user jgoodyear closed the pull request at:

    https://github.com/apache/activemq/pull/302
;;;","24/Oct/18 12:56;jira-bot;Commit 8e5d539665519629139633e324a672b0a415d4b2 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8e5d539 ]

AMQ-7067 - add missing license header
;;;",,,,,,,,,,,,,,,,,,
AMQP: Update Qpid JMS to latest 0.37.0,AMQ-7065,13188950,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,tabish,tabish,02/Oct/18 19:12,02/Oct/18 19:23,13/Jul/23 08:27,02/Oct/18 19:23,5.15.6,,,,5.15.7,5.16.0,,AMQP,,,,,0,,,,,Update Qpid JMS to latest version,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Oct 02 19:22:38 UTC 2018,,,,,,,,,,,"0|i3yqzr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Oct/18 19:20;jira-bot;Commit ac1e709dc4ed419c8d789fc29e970fde6b796ed1 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ac1e709 ]

AMQ-7065 Update to Qpid JMS v0.37.0

Update to latest client release, adds some tests for split framed
message send / receive;;;","02/Oct/18 19:22;jira-bot;Commit 4e627d28fe6d4ce6cd7bed439e4ec8662a517b2f in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4e627d2 ]

AMQ-7065 Update to Qpid JMS v0.37.0

Update to latest client release, adds some tests for split framed
message send / receive

(cherry picked from commit ac1e709dc4ed419c8d789fc29e970fde6b796ed1)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RedeliverPlugin can loop on duplicate detection sending to dlq,AMQ-7062,13187365,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,25/Sep/18 16:57,26/Sep/18 10:50,13/Jul/23 08:27,26/Sep/18 10:50,5.15.0,,,,5.16.0,,,Broker,,,,,0,,,,,"When brokers ""RedeliveryPlugin"" is configured with maximumRedeliveries=""-1"" (deliver forever) and a ""duplicate message from store"" is detected, the duplicate message never makes it to the DLQ and keeps getting redelivered to the original queue.
{code:java}
WARN  | JobScheduler:JMS | AbstractStoreCursor              | gion.cursors.AbstractStoreCursor  116 | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@13044dcb:MYQUEUEXXX,batchResetNeeded=false,size=0,cacheEnabled=true,maxBatchSize:3,hasSpace:true,pendingCachedIds.size:1,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:ID:MYID2XXX-41992-1537343117867-33:1:1:1:31,lastAsyncCachedId-seq:34164,store=permits:9999,sd=nextSeq:34228,lastRet:MessageOrderCursor:[def:0, low:0, high:0],pending:0 - cursor got duplicate send ID:MYIDXXX1536652818855-25:1:2:1:4 seq: org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask$InnerFutureTask@26c9ffc9
WARN  | JobScheduler:JMS | Queue                            | mq.broker.region.BaseDestination  853 | duplicate message from store ID:MYIDXXX1536652818855-25:1:2:1:4, redirecting for dlq processing
TRACE | JobScheduler:JMS | RedeliveryPlugin                 | emq.broker.util.RedeliveryPlugin  173 | redelivery #31514 of: ID:MYIDXXX1536652818855-25:1:2:1:4 with delay: 10000, dest: queue://MYQUEUEXXX
WARN  | JobScheduler:JMS | AbstractStoreCursor              | gion.cursors.AbstractStoreCursor  116 | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@13044dcb:MYQUEUEXXX,batchResetNeeded=false,size=0,cacheEnabled=true,maxBatchSize:3,hasSpace:true,pendingCachedIds.size:1,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:ID:MYID2XXX-41992-1537343117867-33:1:1:1:31,lastAsyncCachedId-seq:34164,store=permits:9999,sd=nextSeq:34229,lastRet:MessageOrderCursor:[def:0, low:0, high:0],pending:0 - cursor got duplicate send ID:MYIDXXX1536652818855-25:1:2:1:4 seq: org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask$InnerFutureTask@7be7d7d7
WARN  | JobScheduler:JMS | Queue                            | mq.broker.region.BaseDestination  853 | duplicate message from store ID:MYIDXXX1536652818855-25:1:2:1:4, redirecting for dlq processing
TRACE | JobScheduler:JMS | RedeliveryPlugin                 | emq.broker.util.RedeliveryPlugin  173 | redelivery #31515 of: ID:MYIDXXX1536652818855-25:1:2:1:4 with delay: 10000, dest: queue://MYQUEUEXXX
WARN  | JobScheduler:JMS | AbstractStoreCursor              | gion.cursors.AbstractStoreCursor  116 | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@13044dcb:MYQUEUEXXX,batchResetNeeded=false,size=0,cacheEnabled=true,maxBatchSize:3,hasSpace:true,pendingCachedIds.size:1,lastSyncCachedId:null,lastSyncCachedId-seq:null,lastAsyncCachedId:ID:MYID2XXX-41992-1537343117867-33:1:1:1:31,lastAsyncCachedId-seq:34164,store=permits:9999,sd=nextSeq:34230,lastRet:MessageOrderCursor:[def:0, low:0, high:0],pending:0 - cursor got duplicate send ID:MYIDXXX1536652818855-25:1:2:1:4 seq: org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask$InnerFutureTask@17f4d783
WARN  | JobScheduler:JMS | Queue                            | mq.broker.region.BaseDestination  853 | duplicate message from store ID:MYIDXXX1536652818855-25:1:2:1:4, redirecting for dlq processing
TRACE | JobScheduler:JMS | RedeliveryPlugin                 | emq.broker.util.RedeliveryPlugin  173 | redelivery #31516 of: ID:MYIDXXX1536652818855-25:1:2:1:4 with delay: 10000, dest: queue://MYQUEUEXXX
{code}
 
  ",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Sep 26 10:25:21 UTC 2018,,,,,,,,,,,"0|i3yh8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Sep/18 10:25;jira-bot;Commit 5246151288873d05e2a892afe7d42f3ee0e44275 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5246151 ]

AMQ-7062 - have redelivery plugin ignore messages detected as duplicates
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage incorrectly increases when selectors are used in JMX operations,AMQ-7035,13179107,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,15/Aug/18 15:03,15/Aug/18 15:33,13/Jul/23 08:27,15/Aug/18 15:26,5.15.0,,,,5.16.0,,,JMX,,,,,0,,,,,"The default MessageEvaluationContext does referencing counting and requires a usage pattern that ends in a call to clear(), this pattern has not been applied in a few places in error. The fix for AMQ-6465 works around the non use of the pattern.

The JMX operations that use a selector do not use that pattern and hence can leak a reference count.

The NonCachedMessageEvaluation context does away with the reference count and this is used in most places. I think it should be used everywhere, the whole selector cache idea never got completed.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6465,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 15 15:33:08 UTC 2018,,,,,,,,,,,"0|i3x2on:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Aug/18 15:22;jira-bot;Commit 50d27e7e545d30bc0d35f8dd8baf15b33522c33a in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=50d27e7 ]

AMQ-7035 - use NonCachedMessageEvaluationContext in place of MessageEvaluationContext to avoid unnecessary reference count management and subsequent leaks. Rework AMQ-6465 with additional JMX related tests
;;;","15/Aug/18 15:33;jira-bot;Commit 4a99103e706653f395e44d4b43a545b80ef664d9 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a99103 ]

AMQ-7035 - use NonCachedMessageEvaluationContext in place of MessageEvaluationContext to avoid unnecessary reference count management and subsequent leaks. Rework AMQ-6465 with additional JMX related tests

(cherry picked from commit 50d27e7e545d30bc0d35f8dd8baf15b33522c33a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unhandled CancellationException in cursor duplicate detection logic,AMQ-7030,13176427,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,02/Aug/18 13:37,02/Aug/18 13:47,13/Jul/23 08:27,02/Aug/18 13:47,5.15.0,,,,5.16.0,,,Broker,KahaDB,,,,0,,,,,"With concurrentStoreAndDispatchQueues true, a CancellationException can bubble up to pageIn in error.

 
{code:java}
Failed to page in more queue messages
java.util.concurrent.CancellationException
at java.util.concurrent.FutureTask.report(FutureTask.java:121)
at java.util.concurrent.FutureTask.get(FutureTask.java:192)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.gotToTheStore(AbstractStoreCursor.java:136)
at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1993) 
at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2177)
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1627)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
at  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748){code}",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Aug 02 13:46:02 UTC 2018,,,,,,,,,,,"0|i3wmfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"02/Aug/18 13:46;jira-bot;Commit bdfa3394adddd011c7d978d5a086fa3bcdaf1b41 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bdfa339 ]

AMQ-7030 - trap exceptions on future.get, fix and test
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.15.4 jolokia.jar which has one high severity CVE against it.,AMQ-7019,13173951,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,ABakerIII,ABakerIII,23/Jul/18 23:05,28/Jul/18 02:33,13/Jul/23 08:27,27/Jul/18 12:18,5.15.4,,,,5.15.5,5.16.0,,Web Console,,,,,0,,,,,"ActiveMQ 5.15.4 jolokia.jar which has one high severity CVE against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

CVE-2015-5182 Severity:High  CVSS Score: 6.8 
allows Cross-site request forgery (CSRF) vulnerability in the jolokia API in A-MQ. 
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=1248809 CONFIRM","Customer environment is a mix of Linux and Windows, Gig-LAN (Medical & Finacial services).  Will not accept the risk of having even one high severity CVE in thier environment. The cost of (SOX/HIPPA) insurence is too high to allow even one CVE with newly deployed systems.",ABakerIII,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jul 28 02:33:31 UTC 2018,,,,,,,,,,,"0|i3w767:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"24/Jul/18 10:43;cshannon;JBoss AMQ is not ActiveMQ.  You seem to be confusing the products. AMQ is based on ActiveMQ but is not the same thing and a CVE reported against AMQ does not necessarily mean it is also valid for ActiveMQ.

Furthermore, please stop posting suspected security issues on a public forum (in this case Jira).  This is not the appropriate place.  Please follow these instructions for any future issues: https://www.apache.org/security/committers.html;;;","26/Jul/18 22:09;ABakerIII;Doesnt matter that AMQ is not ActiveMQ.  Jolokia is jalokia and is in both projects. Jalokia is the problem. Re-Open the issue, and fix the real issue. Jalokia is the issue.  Update the ActiveMQ pom.xml to point to the newer version of Jalokia that is fixed.   If no new/fixed version of jalokia exists, keep the ticket open.;;;","26/Jul/18 22:35;cshannon;Oops I misread that this was about Jolokia and not the AMQ console, I can update the dependency tomorrow ;;;","26/Jul/18 22:48;jira-bot;Commit 2ebea251cdf58ddf0a29f41ccb6c6aadcfdb9b95 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ebea25 ]

AMQ-7019 Update Jolokia to latest version

Updates version to v1.6.0
;;;","26/Jul/18 22:49;jira-bot;Commit 972b3fa6cf928e5ae7e008fa263e96c5ab71bf72 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=972b3fa ]

AMQ-7019 Update Jolokia to latest version

Updates version to v1.6.0

(cherry picked from commit 2ebea251cdf58ddf0a29f41ccb6c6aadcfdb9b95)
;;;","28/Jul/18 02:33;ABakerIII;Thanks Christopher :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProducerBrokerExchange.getPercentageBlocked() throws ArithmeticException (divide by zero),AMQ-7017,13173614,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Trivial,Fixed,cshannon,mstratto,mstratto,21/Jul/18 17:52,27/Jul/18 11:41,13/Jul/23 08:27,27/Jul/18 11:41,5.15.4,,,,5.15.5,5.16.0,,Broker,,,,,0,patch,,,,"I found this when testing a broker plugin for tracking messages sent (including some stats like getPercentageBlocked). When there have been no blocked messages an ArithmeticException is thrown due to an unchecked divide by zero. 

I fixed it and added a couple unit tests.",,cshannon,jira-bot,mstratto,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Jul/18 17:16;mstratto;fix-producer-exchange-divide-by-zero.txt;https://issues.apache.org/jira/secure/attachment/12932564/fix-producer-exchange-divide-by-zero.txt",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Fri Jul 27 11:41:30 UTC 2018,,,,,,,Patch Available,,,,"0|i3w53b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/Jul/18 10:44;cshannon;Seems like there might be more to fix here.  Checking for 0 is a good idea however it doesn't make sense that you would run into this condition in the first place...It seems odd you would have a positive number for sends blocked but have 0 for total sends;;;","23/Jul/18 12:41;mstratto;Perhaps, but I think it may just be an extreme edge case.

The plugin I wrote[1] logs message information for audit purposes and happens before authentication even happens to ensure we get information regardless of the outcome of the operation. It is including percentage blocked regardless of send count or block count. The unit test for the plugin instantiates a new broker and a new connection to that broker, so the first time this plugin fires on the connection, the send count is zero. If I move the log statement to after calling `super.send(producerExchange, messageSend);` the test does not throw the ArithmeticException. There are plenty of ways to work around it in the plugin.

[1]- [https://gist.github.com/macgregor/c108f1ca5051e6d9b08ab388d17d0126];;;","27/Jul/18 11:41;jira-bot;Commit b79fcd0a768e5c7d45a7f68febf447d8379cbaf4 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b79fcd0 ]

AMQ-7017 - Prevent ArithmeticException in ProducerBrokerExchange

Check for zero to prevent divide by zero error inside
getPercentageBlocked() method

Thank you to Matthew Stratton for the patch
;;;","27/Jul/18 11:41;jira-bot;Commit e3f76e169325f4741c4ddf0c38c10ca65fa1c385 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3f76e1 ]

AMQ-7017 - Prevent ArithmeticException in ProducerBrokerExchange

Check for zero to prevent divide by zero error inside
getPercentageBlocked() method

Thank you to Matthew Stratton for the patch

(cherry picked from commit b79fcd0a768e5c7d45a7f68febf447d8379cbaf4)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XATransactionID hash function may generate duplicates.,AMQ-7013,13172927,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jgoodyear,jgoodyear,18/Jul/18 13:58,18/Jul/18 21:16,13/Jul/23 08:27,18/Jul/18 16:43,,,,,5.15.5,5.16.0,,,,,,,0,,,,,"XATransactionID hash function may generate duplicates.

Scenario:

XID formatId, GlobalTransaction, and BranchQualifier values are identical for many entries. We need to use a better hash function to avoid populating a map with many entries in the same bucket (results in bucket having O(n) performance on recovery).

Example using existing Hash Function:
2018-07-18 06:13:29,866 | INFO  | Recovering from the journal @1:28 | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 06:23:04,070 | INFO  | @2:484592, 100000 entries recovered .. | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 06:23:04,099 | INFO  | Recovery replayed 100453 operations from the journal in 574.233 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main 

Using JenkinsHash:
2018-07-18 10:58:43,713 | INFO  | Recovering from the journal @1:28 | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 10:58:51,302 | INFO  | @2:484592, 100000 entries recovered .. | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 10:58:51,329 | INFO  | Recovery replayed 100453 operations from the journal in 7.618 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main",,alvinlin123,jgenender,jgoodyear,jira-bot,trevdyck,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jul 18 21:16:33 UTC 2018,,,,,,,,,,,"0|i3w0vb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jul/18 15:43;jgoodyear;Please see PR'd unit test:
[https://github.com/apache/activemq/pull/288]

The hash function was bad, returning 131077.

After discussing with Chrino on apache-activemq IRC room, decided to try JenkinsHash to perform hash generation.
Now we get unique hashes in this scenario.;;;","18/Jul/18 16:37;jira-bot;Commit 3f83bfcae25dc807a929a5135a5631729493aeb8 in activemq's branch refs/heads/activemq-5.15.x from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3f83bfc ]

[AMQ-7013] Introduce JenkinsHash to XATransactionID
;;;","18/Jul/18 16:37;jira-bot;Commit 7ba7bfd9cd9d070840a35ed71422eb4d6e60ab1e in activemq's branch refs/heads/activemq-5.15.x from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7ba7bfd ]

[AMQ-7013] Adding unit test
;;;","18/Jul/18 16:37;jira-bot;Commit 87065f5019b5b363aa3e60b2d76f0127c8e89dc8 in activemq's branch refs/heads/activemq-5.15.x from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=87065f5 ]

[AMQ-7013] This closes #288
;;;","18/Jul/18 16:43;jira-bot;Commit e9a64b1c72cf77b09f57f89f120b8995d3ed525b in activemq's branch refs/heads/master from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e9a64b1 ]

[AMQ-7013] Introduce JenkinsHash to XATransactionID
;;;","18/Jul/18 16:43;jira-bot;Commit 063d21f88062a09b7efc1669608cbbacdeb11aac in activemq's branch refs/heads/master from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=063d21f ]

[AMQ-7013] Adding unit test
;;;","18/Jul/18 16:43;jgenender;Great patch, thanks Jamie!;;;","18/Jul/18 21:13;jira-bot;Commit 7313d72c6b67968d84959f6aac186bfead17d6a2 in activemq's branch refs/heads/activemq-5.15.x from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7313d72 ]

[AMQ-7013] Added final for thread safety
;;;","18/Jul/18 21:16;jira-bot;Commit 7f4851f31c718ec076a51e296766c796d4809df6 in activemq's branch refs/heads/master from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7f4851f ]

[AMQ-7013] Added final for thread safety
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Misleading error in org.apache.activemq.transport.stomp.ProtocolConverter,AMQ-7012,13172586,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,alvinlin123,alvinlin123,17/Jul/18 08:19,20/Jul/18 08:30,13/Jul/23 08:27,19/Jul/18 21:32,5.15.4,,,,5.15.5,,,,,,,,0,,,,,"From time to time I see the following log line for STOMP: 

 

{{2018-07-17 07:31:22,204 | WARN  | Exception occurred processing: <Unknown> -> org.apache.activemq.transport.stomp.ProtocolException: No subscription matched. | org.apache.activemq.transport.stomp.ProtocolConverter | ActiveMQ NIO Worker 1186}}

 

 

The misleading part is ""<Unknown>"", the unknown is suppose to be the STOMP's action word (SEND, SUBSCRIBE etc). 

The problem seems to be 
{code:java}
 org.apache.activemq.transport.stomp.ProtocolConverter.safeGetAction(){code}
that is comparing the STOMP action word with constants defined in 
{code:java}
org.apache.activemq.transport.stomp.ProtocolConverter.Stomp.Commands{code}
But for subscribe and unsubscribe the constants are defined as ""SUB"" and ""UNSUB"" which does not match the actual STOMP action verbs.

 ",,alvinlin123,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 20 08:30:47 UTC 2018,,,,,,,,,,,"0|i3vyrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Jul/18 21:31;jira-bot;Commit 5fb470478f8511619ddf9f0725ce000756536843 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5fb4704 ]

AMQ-7012 Fix STOMP protocol handler to log correct command names

Ensure Commands are logged correctly by the protocol converter.;;;","19/Jul/18 21:32;jira-bot;Commit ed3c4fec89269de48130537b0ad544b272f2cfe3 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ed3c4fe ]

AMQ-7012 Fix STOMP protocol handler to log correct command names

Ensure Commands are logged correctly by the protocol converter.
(cherry picked from commit 5fb470478f8511619ddf9f0725ce000756536843)
;;;","20/Jul/18 08:30;alvinlin123;Ah, thanks for taking care of this. I was going submit a pull request myself. Thanks again!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq 5.15.4 Stomp protocol allowed to enter deadlock via dispatch sync,AMQ-7011,13172266,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,jgoodyear,jgoodyear,15/Jul/18 17:47,18/Nov/19 14:31,13/Jul/23 08:27,16/Jul/18 02:23,,,,,5.15.5,5.16.0,,,,,,,0,,,,,"Activemq 5.15.4 Stomp protocol allowed to enter deadlock via dispatch sync.

Scenario:

Stomp client setting the following:
header.put(""id"", subId);
header.put(""activemq.dispatchAsync"", ""false"");

The setup of locks between TopicSubscription and MutexTransport while using Stomp in sync mode can result in a Deadlock as found below (Add and Destroy calls processing), each lock is identified by a + or * to show lock order in each stack trace.

  Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp:///127.0.0.1:58303@61613"":
  waiting to lock monitor 0x00007f9c565d4d28 (object 0x00000007acc44708, a java.lang.Object),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:58302@61613""
""ActiveMQ Transport: tcp:///127.0.0.1:58302@61613"":
  waiting for ownable synchronizer 0x00000007ac872730, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:58303@61613""
Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: tcp:///127.0.0.1:58303@61613"":
++++++  at org.apache.activemq.broker.region.TopicSubscription.destroy(TopicSubscription.java:757)
    - waiting to lock <0x00000007acc44708> (a java.lang.Object)
    at org.apache.activemq.broker.region.AbstractRegion.destroySubscription(AbstractRegion.java:488)
    at org.apache.activemq.broker.jmx.ManagedTopicRegion.destroySubscription(ManagedTopicRegion.java:52)
    at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:480)
    at org.apache.activemq.broker.region.TopicRegion.removeConsumer(TopicRegion.java:206)
    at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:429)
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.removeConsumer(ManagedRegionBroker.java:258)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:352)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:729)
    at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:768)
    at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:879)
    - locked <0x00000007ac999f00> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
    at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:73)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)
*****   at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
    at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:202)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompDisconnect(ProtocolConverter.java:838)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:267)
    at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    at java.lang.Thread.run(Thread.java:748)
""ActiveMQ Transport: tcp:///127.0.0.1:58302@61613"":
    at sun.misc.Unsafe.park(Native Method)
    - parking to wait for  <0x00000007ac872730> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
    at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
    at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
*****   at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
    at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1486)
    at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:971)
    at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:927)
    at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:715)
+++++   at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:121)
    - locked <0x00000007acc44708> (a java.lang.Object)
    at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
    at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:775)
    at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:556)
    - locked <0x00000007acbd4e08> (a org.apache.activemq.broker.region.Topic)
    at org.apache.activemq.broker.region.Topic.send(Topic.java:484)
    at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:505)
    at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:459)
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
    at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:572)
    at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
    at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:202)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:345)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:248)
    at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    at java.lang.Thread.run(Thread.java:748)


In reviewing how MQTT and AMQP were handled, both set ""consumerInfo.setDispatchAsync(true);""

AMQPSession line 376
MQTTDefualtSubscriptionStrategy line 61

For MQTT fix see the below cards:

ENTMQ-1504
https://issues.jboss.org/browse/ENTMQ-1504?_sscc=t

AMQ-5290
https://issues.apache.org/jira/browse/AMQ-5290 https://github.com/apache/activemq/blame/master/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/strategy/MQTTDefaultSubscriptionStrategy.java#L61 

I believe we can fix this for Stomp in ProtocolConverter, line 614, by also setting consumerInfo.setDispatchAsync(true); This would bring Stomp into alignment with the other protocols and how they were fixed.

I'll be providing a patch with the above change shortly.",,githubbot,jgenender,jgoodyear,jira-bot,,,,,,,,"jbonofre commented on issue #287: [AMQ-7011] Override dispatch to always set dispatchAsync true
URL: https://github.com/apache/activemq/pull/287#issuecomment-554849551
 
 
   @jgoodyear according to the Jira, it seems to have been merged already. Can you double check if we can close this PR ? Thanks.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 04:49;githubbot;600","jgoodyear commented on issue #287: [AMQ-7011] Override dispatch to always set dispatchAsync true
URL: https://github.com/apache/activemq/pull/287#issuecomment-555009299
 
 
   Yes, we can close it.
   
   On Mon, Nov 18, 2019 at 1:19 AM Jean-Baptiste Onofré <
   notifications@github.com> wrote:
   
   > @jgoodyear <https://github.com/jgoodyear> according to the Jira, it seems
   > to have been merged already. Can you double check if we can close this PR ?
   > Thanks.
   >
   > —
   > You are receiving this because you were mentioned.
   > Reply to this email directly, view it on GitHub
   > <https://github.com/apache/activemq/pull/287?email_source=notifications&email_token=AADCKIMPTO5ONALK2PADX6DQUINFDA5CNFSM4FKBN4G2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEEJFKDY#issuecomment-554849551>,
   > or unsubscribe
   > <https://github.com/notifications/unsubscribe-auth/AADCKILJCINTMVFMJ332CZLQUINFDANCNFSM4FKBN4GQ>
   > .
   >
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 13:13;githubbot;600","jbonofre commented on pull request #287: [AMQ-7011] Override dispatch to always set dispatchAsync true
URL: https://github.com/apache/activemq/pull/287
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 14:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Jul 16 02:36:31 UTC 2018,,,,,,,,,,,"0|i3vwsf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"15/Jul/18 19:28;githubbot;GitHub user jgoodyear opened a pull request:

    https://github.com/apache/activemq/pull/287

    [AMQ-7011] Override dispatch to always set dispatchAsync true

    AMQ-7011 Override dispatch to always set dispatchAsync true.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgoodyear/activemq AMQ7011

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/287.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #287
    
----
commit a5fe89577c26e61ecb5d594e0fdd62ad1e8ebb6a
Author: jgoodyear <jamie.goodyear@...>
Date:   2018-07-15T17:50:45Z

    [AMQ-7011] Override dispatch to always set dispatchAsync true

----
;;;","15/Jul/18 19:29;jgoodyear;I'm made a PR for this card:
[https://github.com/apache/activemq/pulls]
https://github.com/apache/activemq/pull/287;;;","16/Jul/18 02:11;jira-bot;Commit 46160c7b7f66d9d5dda05d2e2dc45e993d3cc48e in activemq's branch refs/heads/master from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=46160c7 ]

[AMQ-7011] Override dispatch to always set dispatchAsync true
;;;","16/Jul/18 02:14;jira-bot;Commit 43fd31c1054408c2b77919a18e5c7b7681f45fd5 in activemq's branch refs/heads/activemq-5.15.x from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=43fd31c ]

[AMQ-7011] Override dispatch to always set dispatchAsync true
;;;","16/Jul/18 02:23;jgenender;Fixed.  Thanks Jamie for the contribution.  This follows the MQTT and AMQP way of handling this issue.;;;","16/Jul/18 02:36;jira-bot;Commit a1e5b970d81d21daed277a08098f7fddf017c606 in activemq's branch refs/heads/activemq-5.15.x from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a1e5b97 ]

[AMQ-7011] Override dispatch to always set dispatchAsync true

This closes #287
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ stop delivering messages,AMQ-7009,13171170,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Critical,Fixed,gtully,nezih,nezih,10/Jul/18 14:50,14/Nov/18 14:23,13/Jul/23 08:27,14/Nov/18 14:23,5.15.4,,,,5.16.0,,,,,,,,1,,,,,"We have a problem with ActiveMQ 5.15.4, it stop deliver messages to clients.

This happens completely randomly and we are not able to give a test case that reproduce the problem

Activemq is configured to use the « memoryPersistenceAdapter »

 

When examining memory dumps, we identified incoherent situation in the class MemoryMessageStore that can lead to stop delivering messages. When :
 - MemoryMessageStore.recoverNextMessages(...) is called

 - « lastBatchId » is not null

 - « messageTable » does not contains any entry with « lastBatchId » as key

no messages are recovered

 

We added logs to try to understand how it is possible to have a non null « lastBatchId » and «  messageTable » with no entry having « lastBatchId » as key.

 

We noticed that the method setBatch is called with a non null « messageId » parameter, but no message with this id is inserted in « messageTable ». After that, when the method MemoryMessageStore.recoverNextMessages(...) is called, it does nothing and no messages are recoverd. And the system go in a what looks like an endless loop.

 

We are testing a temporary solution by resetting « lastBatchId » to null when the incoherent situation is detected.

 

Can you help us resolving the problem at the source and not just get around.

I joined modified source code of the class MemoryMessageStore and an extract of the log file.",,gtully,jira-bot,nezih,realitix,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Jul/18 14:34;nezih;MemoryMessageStore.java;https://issues.apache.org/jira/secure/attachment/12931803/MemoryMessageStore.java","26/Jul/18 09:29;nezih;MemoryMessageStoreQueueCursorTest.java;https://issues.apache.org/jira/secure/attachment/12933171/MemoryMessageStoreQueueCursorTest.java","16/Jul/18 15:16;nezih;activemq.log;https://issues.apache.org/jira/secure/attachment/12931809/activemq.log",,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Nov 14 14:23:21 UTC 2018,,,,,,,,,,,"0|i3vq8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"11/Jul/18 12:43;tabish;The version you are using is old an not a supported release, please upgrade to the latest release and then report back if the problem persists.;;;","16/Jul/18 14:44;nezih;We have done the upgrade to the latest version 5.15.4 and the problem does persist. So I updated the description of the problem above.

In attachement, the new version of the class modified to generate some helpful logs.

[^MemoryMessageStore.java];;;","16/Jul/18 15:27;realitix;Hello [~tabish121],

I encounter the same problem as Nezih on the last version too.

Thanks,
Jean-Sébastien;;;","16/Jul/18 15:32;tabish;You should work on providing a unit test to reproduce the issue. ;;;","17/Jul/18 08:23;nezih;Hello [~tabish121],

Unfortunately, we already spent a lot of time trying to understand why AMQ stop deliver messages, and we don't have resources and time to do more analysis (The problam has began 3 years ago).

We should get by, by uncommenting the line 135 of the method ""recoverNextMessages(...)"".

 

Thanks,

Nezih

 ;;;","25/Jul/18 14:21;nezih;In attachment, a unit test reproducing the issue.[^MemoryMessageStoreQueueCursor.java].

To make the memoryMessageStore more robust we can modify methods setBatch and recoverNextMessages as follow :

    @Override
    public void setBatch(MessageId messageId) {
        synchronized (messageTable) {
            lastBatchId = messageId;
            if(!messageTable.containsKey(lastBatchId)) {
                lastBatchId = null;
            }
        }
    }

 

    @Override
    public void recoverNextMessages(int maxReturned, MessageRecoveryListener listener) throws Exception {
        synchronized (messageTable) {
            boolean containsLastBatchId = messageTable.containsKey(lastBatchId);
            if(!containsLastBatchId) {
                lastBatchId = null;
            }
            
            boolean pastLackBatch = lastBatchId == null;
            for (Map.Entry<MessageId, Message> entry : messageTable.entrySet()) {
                if (pastLackBatch) {
                    Object msg = entry.getValue();
                    lastBatchId = entry.getKey();
                    if (msg.getClass() == MessageId.class) {
                        listener.recoverMessageReference((MessageId) msg);
                    } else {
                        listener.recoverMessage((Message) msg);
                    }
                } else {
                    pastLackBatch = entry.getKey().equals(lastBatchId);
                }
            }
        }
    };;;","26/Jul/18 09:20;nezih;Explanation :
when activating TRACE level logs for the class ""AbstractStoreCursor"", I noticed the next two lines in the log file :

2018-07-18 12:02:06,136 | TRACE | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@3a5f8f9a:retour.event.box4,batchResetNeeded=false,size=0,cacheEnabled=true,maxBatchSize:1,hasSpace:false,pendingCachedIds.size:0,lastSyncCachedId:ID:vhqve41.pprod.helios.cp-54155-1531902423423-1:10:2:1:282,lastSyncCachedId-seq:75,lastAsyncCachedId:null,lastAsyncCachedId-seq:null,store=org.apache.activemq.store.memory.MemoryMessageStore@349876a1 - disabling cache on add ID:vhqve41.pprod.helios.cp-54155-1531902423423-1:3:1:1:370 76 | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Transport: tcp:///174.4.111.217:35610@6666
2018-07-18 12:02:06,136 | WARN  | @@@NBF@@@ setBatch called with param messageId : (ID:vhqve41.pprod.helios.cp-54155-1531902423423-1:10:2:1:282). lastBatchId : (null) the new lastBatchId : (ID:vhqve41.pprod.helios.cp-54155-1531902423423-1:10:2:1:282) is NOT in messageTable | org.apache.activemq.store.memory.MemoryMessageStore | ActiveMQ Transport: tcp:///174.4.111.217:35610@6666

The second line shows that setBatch is called with a parameter ""messageId"" corresponding to a probably old message that is already removed from store.
The first line shows that just befor calling setBatch, we had (hasSpace:false while size=0) which mean : there is no messages in the queue but there is no free space too !!!.
It seems like messages are consumed but their space is not rendered or not yet rendered at that moment.;;;","14/Nov/18 14:21;jira-bot;Commit bc8c78cd32b27dd1806fe2246c21241ab68a1fde in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bc8c78c ]

AMQ-7009 - apply fix to memorymessagestore setBatch with thanks to Nezih BEN FREDJ for test and suggestion
;;;","14/Nov/18 14:23;gtully;Thanks for the test case and suggested fix. A little tweak to the test case to better manage memory usage made it clear that your fix is good.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"STOMP protocol converter tracks pending ACKS in Client mode but doesn't remove all ACK'd IDs, just the one submitted.",AMQ-7006,13169695,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,Avikash Mishra,Avikash Mishra,03/Jul/18 04:52,19/Jul/18 21:02,13/Jul/23 08:27,19/Jul/18 21:02,5.15.3,,,,5.15.5,,,STOMP,,,,,0,,,,,The patch referenced in AMQ-5423 only addressed the memory leak for Client-Individual mode. Client mode is still affected as multiple messages are acknowledged with a single ACK.  The single ACK is removed from memory but all the rest remain which grows over time until AMQ crashes or until the client session ends and all the pending ACKs are cleaned up at that point.  At the moment we are having to regularly restart our STOMP clients to prevent the memory leak from causing a crash.,,Avikash Mishra,cshannon,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-6975,,,,,,,,,,,,,,,,,,"17/Jul/18 01:03;Avikash Mishra;AMQ-7006_Remove_all_pending_acks_that_have_been_dispatched.patch;https://issues.apache.org/jira/secure/attachment/12931869/AMQ-7006_Remove_all_pending_acks_that_have_been_dispatched.patch",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 19 20:59:50 UTC 2018,,,,,,,Patch Available,,,,"0|i3vh7r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Jul/18 11:44;cshannon;This patch looks ok to me but for the logging you should use the SLF4J logger and not System.out.println statements.  In general it's also good to add a test or two (if possible, might be tricky to verify in this case because the behavior is not broken just a memory leak) to show the patch works and to prevent future issues.

[~tabish121] - Before I merge does since you worked on AMQ-5423 can you take a quick look and make sure this looks good to you as well?;;;","16/Jul/18 21:01;Avikash Mishra;Hi [~cshannon]

I have had trouble writing unit tests for this patch. We have it running on our test environment for a few weeks with no issues so far. ;;;","16/Jul/18 21:25;tabish;The patch on the surface looks ok as it does seem we are not properly cleaning up.  The cleanUpPendingAcks method seems a bit off as it's comparing every value in the pending map to the values to be removed instead of just trying to remove the values given and reporting the removal if successful which would probably be more performant in the presence of many subscriptions. 

You might be able to write a test that show you can send an ack for something that should have been ack'd already and compare the ERROR response to see if the message matches expectations as before the fix the message Ack IDs seems to be retained so I'd expect a difference error before and after the fix. 

The code should be updated to follow the style of the surrounding code instead of introducing your own style and the logging should use the SLF4J loggers and not System.out calls. ;;;","17/Jul/18 00:57;Avikash Mishra;Hi [~tabish121]

I did think of looping through the values just given. But at the point where I am adding elements to my removeMessageIds I don't have access to the 'ackId' which is the key for the pedingAcks array. So all I have is the messageId which is a property of ActEntry. ActEntry is the value of the pedingAcks array. 

For the unit tests I did try to check against different ERROR responses. The issue is line 445 in ProtocolConverter.java. The method call to pendingAck.onMessageAck(activemqTx); always returns null if we are 'acking' a message that as already been acked because inside that method it checks whether the message is in the dispatchedMessage array (which it isn't because it removes it correctly). So the response always returns 'Unexpected ACK received for message-id 123'

If you have any other ideas of how to write a unit test for this let me know. 

I have just updated the patch with the logging changes. Please review as we would like to push this to our prod environment in the next release. 

 ;;;","19/Jul/18 20:59;jira-bot;Commit 9abbe826ecc47596fb43fd42e094d403c56b158d in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9abbe82 ]

AMQ-7006 Remove STOMP pending acks after client acknowledge

Reworked patch from Avikash Mishra to remove tracked pending acks from a
STOMP subscription that has acked.;;;","19/Jul/18 20:59;jira-bot;Commit 4bcc991d72c6b8bccc764ce2a704324ec9544803 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4bcc991 ]

AMQ-7006 Remove STOMP pending acks after client acknowledge

Reworked patch from Avikash Mishra to remove tracked pending acks from a
STOMP subscription that has acked.
(cherry picked from commit 9abbe826ecc47596fb43fd42e094d403c56b158d)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq SchedulerBroker doSchedule can schedule duplicate jobIds leading to runtime exception ,AMQ-7002,13168372,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,jgoodyear,jgoodyear,26/Jun/18 14:24,27/Jun/18 16:42,13/Jul/23 08:27,27/Jun/18 16:42,5.15.4,,,,5.15.5,5.16.0,,Broker,Job Scheduler,,,,0,,,,,"Under load we've observed that SchedulerBroker will attempt to schedule jobs using the same JobId.

When JobScheduleView attempts to process these jobs we'll encounter an exception during the below put call:

{color:#bbb529}@Override{color}{color:#cc7832}public {color}TabularData {color:#ffc66d}getAllJobs{color}() {color:#cc7832}throws {color}Exception {
 OpenTypeFactory factory = OpenTypeSupport.getFactory(Job.{color:#cc7832}class{color}){color:#cc7832};{color} CompositeType ct = factory.getCompositeType(){color:#cc7832};{color} TabularType tt = {color:#cc7832}new {color}TabularType({color:#6a8759}""Scheduled Jobs""{color}{color:#cc7832}, {color}{color:#6a8759}""Scheduled Jobs""{color}{color:#cc7832}, {color}ct{color:#cc7832}, new {color}String[] { {color:#6a8759}""jobId"" \{color}});{color} TabularDataSupport rc = {color:#cc7832}new {color}TabularDataSupport(tt){color:#cc7832};{color} List<Job> jobs = {color:#cc7832}this{color}.{color:#9876aa}jobScheduler{color}.getAllJobs(){color:#cc7832};{color}{color:#cc7832} for {color}(Job job : jobs) {
 rc.put({color:#cc7832}new {color}CompositeDataSupport(ct{color:#cc7832}, {color}factory.getFields(job))){color:#cc7832};{color} }
 {color:#cc7832}return {color}rc;
 \{color}}

This can be triggered by clicking on the Schduled tab in the webconsole.

The error only occurs due to duplicate JobIds.

Debugging this error, we can see that two jobs with different payloads have the same JobId - this should not be allowed to occur.

We need to ensure that JobIds are unique.


Note:

In test scenario virtual topics are in use, with two consumers.
Redelivery plugin is also in use on the Broker.

<plugins>
            <redeliveryPlugin fallbackToDeadLetter=""false"" sendToDlqIfMaxRetriesExceeded=""false"">
                <redeliveryPolicyMap>
                    <redeliveryPolicyMap>
                        <defaultEntry>
                            <redeliveryPolicy backOffMultiplier=""2"" initialRedeliveryDelay=""60000"" maximumRedeliveries=""20"" maximumRedeliveryDelay=""300000"" useExponentialBackOff=""true""/>
                        </defaultEntry>
                    </redeliveryPolicyMap>
                </redeliveryPolicyMap>
            </redeliveryPlugin>
        </plugins>","Java 8
AMQ 5.15.4",gtully,jgoodyear,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Jun/18 15:52;jgoodyear;AMQ7002-messageId.patch;https://issues.apache.org/jira/secure/attachment/12929430/AMQ7002-messageId.patch","27/Jun/18 12:52;jgoodyear;amq7002-master.patch;https://issues.apache.org/jira/secure/attachment/12929402/amq7002-master.patch",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 27 16:41:39 UTC 2018,,,,,,,,,,,"0|i3v92n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jun/18 14:28;gtully;running the scheduled package: org.apache.activemq.broker.scheduler - from activemq-unit-tests would mostly verify if there is any code that depends on the messageId being the jobId;;;","27/Jun/18 13:02;jgoodyear;[^amq7002-master.patch]

Please find attached a patch for AMQ-7002.

The code change is to start using ID_GENERATOR to set JobId when scheduling a job instead of using messageId.

The test suits in Broker, unit tests & use cases all pass with this change in place.

A unit test, AMQ7002Test, has been created to exercise this code.

In short the unit test configures a broker with redelivery plugin installed, and send a message to a virtual topic with two consumers.
The consumers will perform a rollback operation, this causes the scheduler to come into play.
When then check that the jobs in the scheduler have unique IDs.

If we do not have the ID_GENERATOR in play than this test case fails, with the ID_GENERATOR we get the unique IDs we require.

JobIDs need to be unique in the scheduler. Under the existing code its possible for a race condition in which two or more jobs get the same JobID while having different payloads, the ID_GENERATOR resolves this issue by ensuring each job ID is unique.

Please review this patch for both the AMQ 5.15.x and 5.16.x (master) branches. 

I'd like to thank jgenender, joed, hkesler, and gtully for helping in identifying the issue and how to test/exercise the fix.;;;","27/Jun/18 13:14;jira-bot;Commit e0aa091d9ef16fb3f2a570a95bbd4326abc58941 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e0aa091 ]

AMQ-7002 - ensure uniqueue jobids, fix and test via patch from Jamie goodyear applied with thanks
;;;","27/Jun/18 13:17;jira-bot;Commit 4cbb913271c6c41196c425dd9c32050d6a3d7030 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4cbb913 ]

AMQ-7002 - ensure uniqueue jobids, fix and test via patch from Jamie goodyear applied with thanks

(cherry picked from commit e0aa091d9ef16fb3f2a570a95bbd4326abc58941)
;;;","27/Jun/18 13:20;gtully;patch applied, thanks!;;;","27/Jun/18 13:23;tabish;-1

No regression testing added for existing store, please revert and provide tests.;;;","27/Jun/18 15:33;gtully;I don't see any issue with the change in the format of the job id string.

the generator is already used in the code base:

https://github.com/apache/activemq/blob/57795bafcea290c6879bb288822435c480a9212d/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/scheduler/JobSchedulerImpl.java#L753

 ;;;","27/Jun/18 15:54;jgoodyear;[^AMQ7002-messageId.patch]

Hi [~tabish121], [~gtully], please see the above update patch.

This patch ensures that MessageID format is honored.;;;","27/Jun/18 16:30;jira-bot;Commit 76490a2c7f3a95c3861bb2dec76c4cc16f5dae3c in activemq's branch refs/heads/master from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=76490a2 ]

AMQ-7002 - Change jobid identifier to messageid format
;;;","27/Jun/18 16:41;jira-bot;Commit 3397a972139214720faa93d8e900ac4b9ac851b7 in activemq's branch refs/heads/activemq-5.15.x from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3397a97 ]

AMQ-7002 - Change jobid identifier to messageid format
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Contention on message properties with amqp jms transfromer and kahadb concurrentStoreAndDispatch,AMQ-7001,13168345,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,tabish,gtully,gtully,26/Jun/18 13:12,01/Aug/18 22:34,13/Jul/23 08:27,01/Aug/18 22:15,5.15.0,,,,5.15.5,,,AMQP,,,,,0,,,,,"Openwire to AMQP

Send can fail with ConcurrentModificationException. Stack trace:

{code:java}
javax.jms.JMSException: java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException
at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)
at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1403)
at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1436)
at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1323)
at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1976)
at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:288)
at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:223)
at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
at org.apache.activemq.transport.amqp.interop.OpenWireToAmqpConcurrentStoreAndDispatchTest$2.run(OpenWireToAmqpConcurrentStoreAndDispatchTest.java:158)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.Throwable: java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException
at java.util.concurrent.FutureTask.report(FutureTask.java:122)
at java.util.concurrent.FutureTask.get(FutureTask.java:192)
at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:924)
at org.apache.activemq.broker.region.Queue.send(Queue.java:767)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:505)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:477)
at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:295)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:572)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)
at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
... 1 more
Caused by: java.util.ConcurrentModificationException
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1437)
at java.util.HashMap$KeyIterator.next(HashMap.java:1461)
at org.apache.activemq.util.MarshallingSupport.marshalPrimitiveMap(MarshallingSupport.java:61)
at org.apache.activemq.command.Message.beforeMarshall(Message.java:261)
at org.apache.activemq.openwire.v11.MessageMarshaller.looseMarshal(MessageMarshaller.java:281)
at org.apache.activemq.openwire.v11.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
at org.apache.activemq.openwire.v11.ActiveMQBytesMessageMarshaller.looseMarshal(ActiveMQBytesMessageMarshaller.java:111)
at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:162)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:537)
at org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1513)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
... 1 more{code}",,gtully,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Aug 01 22:34:51 UTC 2018,,,,,,,,,,,"0|i3v8wn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jun/18 14:26;jira-bot;Commit ed8860000f6d9c0dcd71206309ba27a34db2c606 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ed88600 ]

AMQ-7001 - amqp jms transformer - always copy message if properties need to be modified, fix and long running test that is disabled
;;;","26/Jun/18 14:33;jira-bot;Commit 19cb5d7c8b11123b884eb23b0f0624d90fcb205c in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=19cb5d7 ]

AMQ-7001 - amqp jms transformer - always copy message if properties need to be modified, fix and long running test that is disabled

(cherry picked from commit ed8860000f6d9c0dcd71206309ba27a34db2c606)
;;;","03/Jul/18 20:18;jira-bot;Commit 83514ef799cb71c3ed1ee1f81553d87383f2cd42 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=83514ef ]

AMQ-7001 - ensure cursor pending cached id list is pruned of futures that end in an exception, fix and test
;;;","01/Aug/18 17:05;tabish;The change here needs to be reverted and an alternate solution found.  The current change causes message bodies to be garbled for certain types and the conversion back to AMQP fails leads to dropped messages for some AMQP receivers;;;","01/Aug/18 22:14;jira-bot;Commit 9ec6ee43b146736fdf635090b2829a0c621a00f3 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9ec6ee4 ]

AMQ-7001 Resolve issues with encode failures on copied messages

Ensure that messages are copied to avoid contention on message content
when concurrent store and dispatch is enabled and better handle the AMQP
message type value.  Adds an AMQP Encoder for UTF8Buffer to encode down
to AMQP String encodings to allow for encoded OpenWire messages such as
MapMessage which can contain UTF8Buffer instances for String keys and
values.;;;","01/Aug/18 22:14;jira-bot;Commit ad0ae74f3b432f96aba17957bbb6dca0e0bdf8f5 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ad0ae74 ]

AMQ-7001 Resolve issues with encode failures on copied messages

Ensure that messages are copied to avoid contention on message content
when concurrent store and dispatch is enabled and better handle the AMQP
message type value.  Adds an AMQP Encoder for UTF8Buffer to encode down
to AMQP String encodings to allow for encoded OpenWire messages such as
MapMessage which can contain UTF8Buffer instances for String keys and
values.

(cherry picked from commit 9ec6ee43b146736fdf635090b2829a0c621a00f3)
;;;","01/Aug/18 22:34;jira-bot;Commit ba7934e91adf1c068db7107a6353b867e276affb in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ba7934e ]

AMQ-7001 Remove now unnecessary check for UTF8Buffer type

Remove the now unneeded checks for UTF8Buffer on the outbound converter
as the Codec now can encode those to the correct string AMQP types
without need for any help.;;;","01/Aug/18 22:34;jira-bot;Commit 77e584f05700dd6b2f7cf1eb3f63423b6eaa6393 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=77e584f ]

AMQ-7001 Remove now unnecessary check for UTF8Buffer type

Remove the now unneeded checks for UTF8Buffer on the outbound converter
as the Codec now can encode those to the correct string AMQP types
without need for any help.

(cherry picked from commit ba7934e91adf1c068db7107a6353b867e276affb)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RAR - occasional hang on graceful server shutdown,AMQ-7000,13168302,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,26/Jun/18 09:25,03/Jul/20 15:43,13/Jul/23 08:27,26/Jun/18 10:20,5.15.0,,,,5.16.0,,,RAR,,,,,0,,,,,"Active sessions getting closed on shutdown/release of the RAR endpoints can occasionally get back into the active pool in error, preventing the server session pool close process from completing.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7508,AMQ-5038,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jun 27 12:07:15 UTC 2018,,,,,,,,,,,"0|i3v8n3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jun/18 10:17;jira-bot;Commit 5ebee0ace7e5e4d70ea476b93ac091bd452f04ab in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5ebee0a ]

AMQ-7000 - ensure server sessions with closed active sessions get removed from the pool on stop, fix and test
;;;","27/Jun/18 12:07;jira-bot;Commit 8fd107559ce3d6d3f49f5ecda6ed3b971b7ff70e in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8fd1075 ]

AMQ-7000 - remove unnecessary time dependent assertion from test, breaks ci
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.15.4 xercesImpl-2.11.0.jar which has one high severity CVE against it.,AMQ-6996,13166405,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,ABakerIII,ABakerIII,15/Jun/18 15:18,24/Jul/18 01:56,13/Jul/23 08:27,23/Jul/18 15:26,5.15.4,,,,5.15.5,5.16.0,,Broker,Web Console,,,,0,,,,,"ActiveMQ 5.15.4 xercesImpl-2.11.0.jar which has one high severity CVE against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

CVE-2012-0881 Severity:High  CVSS Score: 7.8 (AV:N/AC:L/Au:N/C:N/I:N/A:C)
CWE: CWE-399 Resource Management Errors
Apache Xerces2 Java allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=787104
MLIST - [oss-security] 20140708 Summer bug cleaning - some Hash DoS stuff
Vulnerable Software & Versions:
cpe:/a:apache:xerces2_java:2.11.0 and all previous versions","Environment: Customer environment is a mix of Linux and Windows, Gig-LAN (Medical & Finacial services).  Will not accept the risk of having even one high severity CVE in thier environment. The cost of (SOX/HIPPA) insurence is too high to allow even one CVE with newly deployed systems.",ABakerIII,githubbot,jgenender,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jul 24 01:56:23 UTC 2018,,,,,,,,,,,"0|i3ux6n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Jun/18 05:21;ABakerIII;Upgrade to fixed version 2.12 is a no-go.

2.12 is not available in maven central seerelated issue

https://issues.apache.org/jira/browse/XERCESJ-1696;;;","18/Jun/18 14:19;ABakerIII;2.12 exists here :

[http://apache.mirrors.hoobly.com//xerces/j/binaries/Xerces-J-bin.2.12.0.tar.gz]

Its unclear if replacing 2.11 w/ 2.12 will pass the build tests.

Its unclear if there may be other weird inter-depencecy issues within the rest of the libraries.

I would hope that the ActiveMQ team took these thrd party dependency issues on instead of every user having to patch the build.;;;","29/Jun/18 13:42;ABakerIII;xercesImpl-2.12.0.jar has been uploaded to maven central

[https://mvnrepository.com/artifact/xerces/xercesImpl/2.12.0]

It can be integrated into the dev branch.

 ;;;","22/Jul/18 18:36;githubbot;GitHub user jgoodyear opened a pull request:

    https://github.com/apache/activemq/pull/291

    [AMQ-6996] Update AMQ to use Xerces 2.12.0

    Update targeted for master (5.16.x).

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgoodyear/activemq AMQ-6996

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/291.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #291
    
----
commit 38a9c00f51597d7814939a2b423eeb657add3a3d
Author: jgoodyear <jamie.goodyear@...>
Date:   2018-07-22T18:32:09Z

    [AMQ-6996] Update AMQ to use Xerces 2.12.0

----
;;;","22/Jul/18 18:48;githubbot;Github user jgoodyear closed the pull request at:

    https://github.com/apache/activemq/pull/291
;;;","22/Jul/18 18:49;githubbot;GitHub user jgoodyear opened a pull request:

    https://github.com/apache/activemq/pull/292

    [AMQ-6996] Update AMQ to use Xerces 2.12.0

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgoodyear/activemq AMQ-6996

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/292.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #292
    
----
commit 38a9c00f51597d7814939a2b423eeb657add3a3d
Author: jgoodyear <jamie.goodyear@...>
Date:   2018-07-22T18:32:09Z

    [AMQ-6996] Update AMQ to use Xerces 2.12.0

----
;;;","22/Jul/18 18:50;githubbot;Github user jgoodyear closed the pull request at:

    https://github.com/apache/activemq/pull/292
;;;","22/Jul/18 18:57;githubbot;GitHub user jgoodyear opened a pull request:

    https://github.com/apache/activemq/pull/293

    AMQ-6996 Update Xerces to 2.12.0

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/jgoodyear/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/293.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #293
    
----
commit 97b7cf60a7ab585cb6d8305cec1da1ee91d8485e
Author: jgoodyear <jamie.goodyear@...>
Date:   2018-07-22T18:54:49Z

    [AMQ-6996] Update to Xerces 2.12.0

commit f6e2239b7eb3b837327f7ca7213d69b144e92a06
Author: Jamie Goodyear <jamie.goodyear@...>
Date:   2018-07-22T18:55:55Z

    Merge pull request #2 from jgoodyear/AMQ6996
    
    [AMQ-6996] Update to Xerces 2.12.0

----
;;;","23/Jul/18 15:14;jira-bot;Commit 97b7cf60a7ab585cb6d8305cec1da1ee91d8485e in activemq's branch refs/heads/master from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=97b7cf6 ]

[AMQ-6996] Update to Xerces 2.12.0
;;;","23/Jul/18 15:14;jira-bot;Commit f6e2239b7eb3b837327f7ca7213d69b144e92a06 in activemq's branch refs/heads/master from Jamie Goodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f6e2239 ]

Merge pull request #2 from jgoodyear/AMQ6996

[AMQ-6996] Update to Xerces 2.12.0;;;","23/Jul/18 15:14;jira-bot;Commit aa717e0bbbedad801e13c4b3fe3d28ddbefad62c in activemq's branch refs/heads/master from [~jgenender]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=aa717e0 ]

AMQ-6996 This closes #293
;;;","23/Jul/18 15:14;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/293
;;;","23/Jul/18 15:26;jgenender;Thanks for the patch Jamie!;;;","23/Jul/18 15:27;jira-bot;Commit a70e25c2d850dd4c122c7c4c5fda4563ef2cb11a in activemq's branch refs/heads/activemq-5.15.x from jgoodyear
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a70e25c ]

[AMQ-6996] Update to Xerces 2.12.0
;;;","24/Jul/18 01:56;ABakerIII;Thnak you Jamie !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.15.4 tomcat-servlet-api-8.0.24.jar  which has four high severity CVEs against it.,AMQ-6994,13166402,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,,ABakerIII,ABakerIII,15/Jun/18 15:12,26/Jul/18 22:14,13/Jul/23 08:27,24/Jul/18 16:37,5.15.4,,,,5.15.5,,,Web Console,,,,,0,,,,,"ActiveMQ 5.15.4 tomcat-servlet-api-8.0.24.jar  which has four high severity CVEs against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

Referenced In Projects/Scopes:
ActiveMQ :: Assembly:compile
ActiveMQ :: Web:provided
ActiveMQ :: Web Console:provided

CVE-2016-3092 Severity:High CVSS Score: 7.8 (AV:N/AC:L/Au:N/C:N/I:N/A:C)
CWE: CWE-20 Improper Input Validation
The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before
9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.
BID - 91453
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743480
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743722
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743738
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743742
CONFIRM - http://tomcat.apache.org/security-7.html
CONFIRM - http://tomcat.apache.org/security-8.html
CONFIRM - http://tomcat.apache.org/security-9.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
CONFIRM - http://www.oracle.com/technetwork/topics/security/bulletinjul2016-3090568.html
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=1349468
CONFIRM - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05204371
CONFIRM - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05289840
CONFIRM - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05324759
DEBIAN - DSA-3609
DEBIAN - DSA-3611
DEBIAN - DSA-3614
GENTOO - GLSA-201705-09
JVN - JVN#89379547
JVNDB - JVNDB-2016-000121
MLIST - [dev] 20160621 CVE-2016-3092: Apache Commons Fileupload information disclosure vulnerability
REDHAT - RHSA-2016:2068
REDHAT - RHSA-2016:2069
REDHAT - RHSA-2016:2070
REDHAT - RHSA-2016:2071
REDHAT - RHSA-2016:2072
REDHAT - RHSA-2016:2599
REDHAT - RHSA-2016:2807
REDHAT - RHSA-2016:2808
REDHAT - RHSA-2017:0455
REDHAT - RHSA-2017:0456
REDHAT - RHSA-2017:0457
SECTRACK - 1036427
SECTRACK - 1036900
SECTRACK - 1037029
SECTRACK - 1039606
SUSE - openSUSE-SU-2016:2252
UBUNTU - USN-3024-1
UBUNTU - USN-3027-1
Vulnerable Software & Versions: (show all)
cpe:/a:apache:tomcat:8.0.24

CVE-2016-5425  Severity:High CVSS Score: 7.2 (AV:L/AC:L/Au:N/C:C/I:C/A:C)
CWE: CWE-264 Permissions, Privileges, and Access Controls
The Tomcat package on Red Hat Enterprise Linux (RHEL) 7, Fedora, CentOS, Oracle Linux, and possibly other Linux distributions uses weak permissions for /usr/lib
/tmpfiles.d/tomcat.conf, which allows local users to gain root privileges by leveraging membership in the tomcat group.
BID - 93472
CONFIRM - http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2016-3090545.html
EXPLOIT-DB - 40488
MISC - http://legalhackers.com/advisories/Tomcat-RedHat-Pkgs-Root-PrivEsc-Exploit-CVE-2016-5425.html
MISC - http://packetstormsecurity.com/files/139041/Apache-Tomcat-8-7-6-Privilege-Escalation.html
MLIST - [oss-security] 20161010 CVE-2016-5425 - Apache Tomcat packaging on RedHat-based distros - Root Privilege Escalation (affecting CentOS, Fedora,
OracleLinux, RedHat etc.)
REDHAT - RHSA-2016:2046
SECTRACK - 1036979
Vulnerable Software & Versions:
cpe:/a:apache:tomcat


CVE-2016-6325   Severity:High  CVSS Score: 7.2 (AV:L/AC:L/Au:N/C:C/I:C/A:C)
CWE: CWE-264 Permissions, Privileges, and Access Controls
The Tomcat package on Red Hat Enterprise Linux (RHEL) 5 through 7, JBoss Web Server 3.0, and JBoss EWS 2 uses weak permissions for (1) /etc/sysconfig/tomcat and
(2) /etc/tomcat/tomcat.conf, which allows local users to gain privileges by leveraging membership in the tomcat group.
BID - 93478
CONFIRM - http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2016-3090545.html
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=1367447
REDHAT - RHSA-2016:2045
REDHAT - RHSA-2016:2046
REDHAT - RHSA-2017:0455
REDHAT - RHSA-2017:0456
REDHAT - RHSA-2017:0457
Vulnerable Software & Versions:
cpe:/a:apache:tomcat:-


CVE-2016-8735 Severity:High CVSS Score: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P)
CWE: CWE-284 Improper Access Control
Remote code execution is possible with Apache Tomcat before 6.0.48, 7.x before 7.0.73, 8.x before 8.0.39, 8.5.x before 8.5.7, and 9.x before 9.0.0.M12 if
JmxRemoteLifecycleListener is used and an attacker can reach JMX ports. The issue exists because this listener wasn't updated for consistency with the CVE-2016-3427
Oracle patch that affected credential types.
BID - 94463
CONFIRM - http://seclists.org/oss-sec/2016/q4/502
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767644
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767656
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767676
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767684
CONFIRM - http://tomcat.apache.org/security-6.html
CONFIRM - http://tomcat.apache.org/security-7.html
CONFIRM - http://tomcat.apache.org/security-8.html
CONFIRM - http://tomcat.apache.org/security-9.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
CONFIRM - https://security.netapp.com/advisory/ntap-20180607-0001/
DEBIAN - DSA-3738
REDHAT - RHSA-2017:0455
REDHAT - RHSA-2017:0456
REDHAT - RHSA-2017:0457
SECTRACK - 1037331
Vulnerable Software & Versions: (show all)","Environment: Customer environment is a mix of Linux and Windows, Gig-LAN (Medical & Finacial services).  Will not accept the risk of having even one high severity CVE in thier environment. The cost of (SOX/HIPPA) insurence is too high to allow even one CVE with newly deployed systems.",ABakerIII,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 26 22:14:23 UTC 2018,,,,,,,,,,,"0|i3ux5z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jun/18 14:24;ABakerIII;9.0.8 exists in maven central :

[http://mvnrepository.com/artifact/org.apache.tomcat/tomcat-servlet-api/9.0.8]

But its unclear if there are other incompatible dependencies across the other libs & AMQ with that version.;;;","24/Jul/18 16:36;jira-bot;Commit b4513004bcb925788e49ff9a067a120abf226d37 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b451300 ]

AMQ-6994 Update tomcat API version to laetst 8.0.x series

Updates version to 8.0.53 to bring in fixes;;;","24/Jul/18 16:36;jira-bot;Commit 3ec0831b05c11489c6cae51e27a3d67ab3afbe85 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3ec0831 ]

AMQ-6994 Update tomcat API version to laetst 8.0.x series

Updates version to 8.0.53 to bring in fixes

(cherry picked from commit b4513004bcb925788e49ff9a067a120abf226d37)
;;;","26/Jul/18 22:14;ABakerIII;Thanks Timothy !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.15.4 jackson-databind-2.9.4.jar which has one high severity CVEs against it.,AMQ-6992,13166395,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,cshannon,ABakerIII,ABakerIII,15/Jun/18 14:59,26/Jul/18 22:15,13/Jul/23 08:27,24/Jul/18 10:30,5.15.4,,,,5.15.5,5.16.0,,LevelDB,,,,,0,,,,,"ctiveMQ 5.15.4 jackson-databind-2.9.4.jar which has one high severity CVEs against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

CVE-2018-7489 Severity:High     CVSS Score: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P)
CWE: CWE-184 Incomplete Blacklist
FasterXML jackson-databind before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525
deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the
c3p0 libraries are available in the classpath.
BID - 103203
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html
CONFIRM - https://github.com/FasterXML/jackson-databind/issues/1931
CONFIRM - https://security.netapp.com/advisory/ntap-20180328-0001/
DEBIAN - DSA-4190
REDHAT - RHSA-2018:1447
REDHAT - RHSA-2018:1448
REDHAT - RHSA-2018:1449
REDHAT - RHSA-2018:1450
REDHAT - RHSA-2018:1451
REDHAT - RHSA-2018:1786
SECTRACK - 1040693
Vulnerable Software & Versions: (show all)
cpe:/a:fasterxml:jackson-databind:2.9.4","Environment: Customer environment is a mix of Linux and Windows, Gig-LAN (Medical & Finacial services).  Will not accept the risk of having even one high severity CVE in thier environment. The cost of (SOX/HIPPA) insurence is too high to allow even one CVE with newly deployed systems.",ABakerIII,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu Jul 26 22:15:33 UTC 2018,,,,,,,,,,,"0|i3ux4f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jun/18 14:28;ABakerIII;2.9.6 is the latest version in maven central :

[http://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind]

But its unclear if there are incompatabilities btween this library and other libs &| AMQ;;;","24/Jul/18 10:30;jira-bot;Commit 4a67dde130169f20a8b85fd145cf1e1431eed167 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4a67dde ]

AMQ-6992 - Update Jackson to latest version
;;;","24/Jul/18 10:30;jira-bot;Commit 4f79ba3220c0132dd1fa8b26b8b5a4038650289e in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4f79ba3 ]

AMQ-6992 - Update Jackson to latest version

(cherry picked from commit 4a67dde130169f20a8b85fd145cf1e1431eed167)
;;;","26/Jul/18 22:15;ABakerIII;Thanks Christopher;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ 5.15.4 commons-beanutils-core-1.8.0.jar which has one high severity CVE against it.,AMQ-6990,13166389,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Blocker,Fixed,cshannon,ABakerIII,ABakerIII,15/Jun/18 14:51,28/Jul/18 02:32,13/Jul/23 08:27,27/Jul/18 15:31,5.15.4,,,,5.15.5,5.16.0,,Web Console,,,,,0,,,,,"ActiveMQ 5.15.4 commons-beanutils-core-1.8.0.jar which has one high severity CVE against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

CVE-2014-0114 Severity:High CVSS Score: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P)
CWE: CWE-20 Improper Input Validation
Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils
through 1.9.2, does not suppress the class property, which allows remote attackers to ""manipulate"" the ClassLoader and execute arbitrary code via the class parameter, as
demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.
BID - 67121
BUGTRAQ - 20141205 NEW: VMSA-2014-0012 - VMware vSphere product updates address security vulnerabilities
CONFIRM - http://advisories.mageia.org/MGASA-2014-0219.html
CONFIRM - http://commons.apache.org/proper/commons-beanutils/javadocs/v1.9.2/RELEASE-NOTES.txt
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21674128
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21674812
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21675266
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21675387
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21675689
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21675898
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21675972
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21676091
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21676110
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21676303
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21676375
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21676931
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg21677110
CONFIRM - http://www-01.ibm.com/support/docview.wss?uid=swg27042296
CONFIRM - http://www.ibm.com/support/docview.wss?uid=swg21675496
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuoct2016-2881722.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
CONFIRM - http://www.oracle.com/technetwork/topics/security/cpujan2015-1972971.html
CONFIRM - http://www.oracle.com/technetwork/topics/security/cpujul2014-1972956.html
CONFIRM - http://www.oracle.com/technetwork/topics/security/cpuoct2014-1972960.html
CONFIRM - http://www.vmware.com/security/advisories/VMSA-2014-0008.html
CONFIRM - http://www.vmware.com/security/advisories/VMSA-2","Environment: Customer environment is a mix of Linux and Windows, Gig-LAN (Medical & Finacial services).  Will not accept the risk of having even one high severity CVE in thier environment. The cost of (SOX/HIPPA) insurence is too high to allow even one CVE with newly deployed systems.",ABakerIII,cshannon,jgoodyear,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Jul/18 00:14;jgoodyear;AMQ-6990-AMQ-5.15.x.patch;https://issues.apache.org/jira/secure/attachment/12932793/AMQ-6990-AMQ-5.15.x.patch","24/Jul/18 00:28;jgoodyear;AMQ-6990-AMQ-master.patch;https://issues.apache.org/jira/secure/attachment/12932797/AMQ-6990-AMQ-master.patch",,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Sat Jul 28 02:32:44 UTC 2018,,,,,,,,,,,"0|i3ux33:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"18/Jun/18 14:36;ABakerIII;1.8.3 is available in maven central

[http://mvnrepository.com/artifact/commons-beanutils/commons-beanutils-core]

Please update the AQM pom to use 1.8.3;;;","23/Jul/18 23:31;jgoodyear;AMQ itself does not import commons-beanutil, however it is present as a transitive dep:

[INFO] +- org.apache.hadoop:hadoop-core:jar:1.0.0:compile
 [INFO] | - commons-configuration:commons-configuration:jar:1.6:compile
 [INFO] | +- commons-collections:commons-collections:jar:3.2.2:compile
 [INFO] | +- commons-logging:commons-logging:jar:1.2:compile
 [INFO] | +- commons-digester:commons-digester:jar:1.8:compile
 [INFO] | | - commons-beanutils:commons-beanutils:jar:1.9.3:compile
 [INFO] | - commons-beanutils:commons-beanutils-core:jar:1.8.0:compile

 

[INFO] | \- org.apache.hadoop:hadoop-core:jar:1.0.0:compile
[INFO] |    \- commons-configuration:commons-configuration:jar:1.6:compile
[INFO] |        +- commons-digester:commons-digester:jar:1.8:compile
[INFO] |        |   \- commons-beanutils:commons-beanutils:jar:1.9.3:compile
[INFO] |        \- commons-beanutils:commons-beanutils-core:jar:1.8.0:compile;;;","23/Jul/18 23:34;jgoodyear;We need a release of hadoop which does not include the commons-beanutil 1.8.0;;;","24/Jul/18 00:01;jgoodyear;Upon closer examination, hadoop is being used by the scala unit tests in activemq-leveldb-store.

Adding an exclusion:

{color:#e8bf6a}<exclusion>
{color}{color:#e8bf6a} <groupId>{color}commons-beanutils{color:#e8bf6a}</groupId>
{color}{color:#e8bf6a} <artifactId>{color}commons-beanutils-core{color:#e8bf6a}</artifactId>
{color}{color:#e8bf6a}</exclusion>{color}

To the hadoop dependency removed commons-beanutils-core 1.8.0 from ActiveMQ build.;;;","24/Jul/18 01:54;ABakerIII;Thank You !;;;","27/Jul/18 14:17;cshannon;[~jgoodyear] - are you still working on this?;;;","27/Jul/18 14:21;jgoodyear;I attached patch files 3 days ago :);;;","27/Jul/18 14:31;cshannon;Ah ok cool, I will apply them, thanks.;;;","27/Jul/18 15:31;jira-bot;Commit 7e50428495b5e57a5b612a68c3beab4e09ce9d6d in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7e50428 ]

AMQ-6990 - Exclude commons-beanutils-core

Thank you to Jamie Goodyear for the patch
;;;","27/Jul/18 15:31;jira-bot;Commit 528eb3beb27d376062bc962e64f068ac344b4e21 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=528eb3b ]

AMQ-6990 - Exclude commons-beanutils-core

Thank you to Jamie Goodyear for the patch

(cherry picked from commit 7e50428495b5e57a5b612a68c3beab4e09ce9d6d)
;;;","28/Jul/18 02:32;ABakerIII;Thanks Jamie & Christopher.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
consumer message pull timeout being effected by long running scheduled tasks,AMQ-6979,13162856,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,30/May/18 09:51,01/Jun/18 12:00,13/Jul/23 08:17,01/Jun/18 12:00,5.15.0,,,,5.16.0,,,JMS client,Message Store,,,,0,,,,,"The messagePull timeout, used for prefetch=0 consumers with consumer.receive(timeout) is not reliable in the event that the broker scheduler timer task is busy with long running tasks.

If an existing task exceeds the timeout then the pull response is delayed.

In the main, scheduled tasks should be short lived and in the case of message expiry processing for topic durable subs, they may not be, depending on the amount of durable subs and their backlog.

 

The expiryProcessing scheduler task should simply signal the start of the task such that it can return and leave the real work to the taskExecutor",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5129,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 31 12:44:12 UTC 2018,,,,,,,,,,,"0|i3ub13:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"30/May/18 09:56;gtully;I had a quick peek at giving the existing TimerThread based scheduler a pool via ScheduledThreadPoolExecutor but b/c that pool is fixed, it still can have the same problem and changing that implementation detail may have more unintentional side effects.

The solution is to keep the scheduler task short lived, in the case of expiry processing - treat it as a signal generator.;;;","30/May/18 13:07;gtully;Linking in AMQ-5129 which has a patch for replacing the timerThread with the schedule executor. It will still have a sizing issue b/c the core pool size is fixed.

Ensuring that any long running tasks are triggered by the scheduler rather than executed by it is the better solution. ;;;","30/May/18 21:04;jira-bot;Commit cdb38b32756d70bf7ae149e994abcccc9adca5ae in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cdb38b3 ]

AMQ-6979 - use scheduler as trigger task - do heavy lifting via the task runner executor, take care to trap errors to keep scheduler timer alive AMQ-5129
;;;","31/May/18 12:12;jira-bot;Commit 4521f47e3691320251e85e886074e3c2a97ae10a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4521f47 ]

AMQ-6979 - fix test regression dependent on serial excution of expiry processing across destinations
;;;","31/May/18 12:44;jira-bot;Commit 6d14e4e85bcf4ba37eb3c60d68773788e2cb19e1 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6d14e4e ]

AMQ-6979 - fix test regression, avoid gc during shutdown such that the error check on the logging remains valid
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"STOMP protocol converter tracks pending ACKS in Client mode but doesn't remove all ACK'd IDs, just the one submitted.",AMQ-6975,13161645,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,MarkWakefield,MarkWakefield,24/May/18 01:37,24/Jul/18 16:44,13/Jul/23 08:27,24/Jul/18 16:44,5.15.3,,,,,,,STOMP,,,,,0,,,,,The patch referenced in AMQ-5423 only addressed the memory leak for Client-Individual mode. Client mode is still affected as multiple messages are acknowledged with a single ACK.  The single ACK is removed from memory but all the rest remain which grows over time until AMQ crashes or until the client session ends and all the pending ACKs are cleaned up at that point.  At the moment we are having to regularly restart our STOMP clients to prevent the memory leak from causing a crash.,,MarkWakefield,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-7006,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2018-05-24 01:37:04.0,,,,,,,,,,,"0|i3u3l3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SSL config-params are not propagated inside rar correctly,AMQ-6970,13161303,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,flavia.rainone,flavia.rainone,23/May/18 05:52,27/Jul/18 11:28,13/Jul/23 08:27,27/Jul/18 11:28,5.15.4,,,,5.15.5,5.16.0,,RAR,,,,,1,,,,,"When trying to configure the SSL config-properties (such as key store), they are not propagated throughout the rar correctly and an error to connect to the server occurs.

The stack trace below shows an attempt to run the rar deployed in a Wildfly server instance (notice that the error is the same you would see if you failed to configure the config-properties)

16:57:22,081 WARN  [org.jboss.jca.core.connectionmanager.pool.strategy.OnePool] (default task-1) IJ000604: Throwable while attempting to get a new connection: null: javax.resource.ResourceException: Could not create connection.
     at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.createManagedConnection(ActiveMQManagedConnectionFactory.java:210)
     at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreConcurrentLinkedDequeManagedConnectionPool.createConnectionEventListener(SemaphoreConcurrentLinkedDequeManagedConnectionPool.java:1326)
     at org.jboss.jca.core.connectionmanager.pool.mcp.SemaphoreConcurrentLinkedDequeManagedConnectionPool.getConnection(SemaphoreConcurrentLinkedDequeManagedConnectionPool.java:499)
     at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getSimpleConnection(AbstractPool.java:632)
     at org.jboss.jca.core.connectionmanager.pool.AbstractPool.getConnection(AbstractPool.java:604)
     at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.getManagedConnection(AbstractConnectionManager.java:624)
     at org.jboss.jca.core.connectionmanager.tx.TxConnectionManagerImpl.getManagedConnection(TxConnectionManagerImpl.java:430)
     at org.jboss.jca.core.connectionmanager.AbstractConnectionManager.allocateConnection(AbstractConnectionManager.java:789)
     at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:95)
     at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:67)
     at org.jboss.as.quickstarts.servlet.HelloWorldMDBServletClient.doGet(HelloWorldMDBServletClient.java:98)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
     at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
     at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
     at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:67)
     at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
     at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
     at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
     at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
     at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
     at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
     at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
     at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
     at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
     at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
     at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
     at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
     at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
     at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
     at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
     at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
     at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
     at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
     at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
     at org.wildfly.extension.undertow.security.SecurityContextThreadSetupAction.lambda$create$0(SecurityContextThreadSetupAction.java:105)
     at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1514)
     at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1514)
     at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1514)
     at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1514)
     at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
     at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
     at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
     at io.undertow.server.Connectors.executeRootHandler(Connectors.java:360)
     at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)
     at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
     at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985)
     at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487)
     at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1349)
     at java.lang.Thread.run(Thread.java:748)
 Caused by: javax.jms.JMSException: Could not connect to broker URL: ssl://localhost:61617. Reason: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:36)
     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:374)
     at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:252)
     at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:89)
     at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:70)
     at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.createManagedConnection(ActiveMQManagedConnectionFactory.java:208)
     ... 53 more
 Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
     at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)
     at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1959)
     at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:328)
     at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:322)
     at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1614)
     at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216)
     at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1052)
     at sun.security.ssl.Handshaker.process_record(Handshaker.java:987)
     at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1072)
     at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1385)
     at sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:938)
     at sun.security.ssl.AppInputStream.read(AppInputStream.java:105)
     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
     at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:634)
     at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:59)
     at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:619)
     at java.io.DataInputStream.readInt(DataInputStream.java:387)
     at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268)
     at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:240)
     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:232)
     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
     ... 1 more
 Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
     at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:397)
     at sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:302)
     at sun.security.validator.Validator.validate(Validator.java:260)
     at sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:324)
     at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:229)
     at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124)
     at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1596)
     ... 17 more
 Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
     at sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141)
     at sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126)
     at java.security.cert.CertPathBuilder.build(CertPathBuilder.java:280)
     at sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:392)
     ... 23 more",,flavia.rainone,jira-bot,mschmid,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/May/18 05:55;flavia.rainone;patchFile.txt;https://issues.apache.org/jira/secure/attachment/12924692/patchFile.txt",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,,9223372036854775807,,,,Fri Jul 27 11:28:26 UTC 2018,,,,,,,Patch Available,,,,"0|i3u1hb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"23/May/18 05:57;flavia.rainone;I'm attaching a patch to this Jira, with that patch applied, the activemq rar shows no problem when connecting to an SSL-enabled Apache ActiveMQ server if the parameters are set properly.;;;","13/Jul/18 13:10;mschmid;Any workaround (except patching activemq-ra by our own) for this issue as we got stock due to this?;;;","27/Jul/18 11:28;jira-bot;Commit e39db5693496d48f0d704f9f14f8e2c9b6a153cf in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e39db56 ]

AMQ-6970 - Adding SSL params for RAR

Fixing missing ssl parameters when configuring rar. Also fixing
configuration logic of inproper null checks inside
ActiveMQManagedConnectionFactory

Thank you to Flavia Rainone for the patch
;;;","27/Jul/18 11:28;jira-bot;Commit 887db9e2f2736b8869df8f987d7a6918b65d01c9 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=887db9e ]

AMQ-6970 - Adding SSL params for RAR

Fixing missing ssl parameters when configuring rar. Also fixing
configuration logic of inproper null checks inside
ActiveMQManagedConnectionFactory

Thank you to Flavia Rainone for the patch

(cherry picked from commit e39db5693496d48f0d704f9f14f8e2c9b6a153cf)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect error can be thrown from method that receives a security exception,AMQ-6968,13160799,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,tabish,tabish,tabish,21/May/18 19:36,21/May/18 20:41,13/Jul/23 08:27,21/May/18 20:41,5.15.4,,,,5.15.5,5.16.0,,JMS client,,,,,0,,,,,If a client side operation receives an SecurityException as am ErrorResponse and the client closes the connection from the JMS ExceptionListener when the listener is triggered by that exception the Connection ExecutorService could throw a RejectedExecutionException and the client code will pass along that error instead of the originally intended JMSSecurityException,,jira-bot,tabish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon May 21 20:40:50 UTC 2018,,,,,,,,,,,"0|i3tyq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/May/18 20:40;jira-bot;Commit db8c771b2a37ad16d789f546507b6329221f4c7a in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=db8c771 ]

AMQ-6968 Ensure that the correct exception is thrown

Allow the original exception that triggered the failure to be thrown
from the packet send methods;;;","21/May/18 20:40;jira-bot;Commit 5403ad2e826048d021f8feee888015c45c979514 in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5403ad2 ]

AMQ-6968 Ensure that the correct exception is thrown

Allow the original exception that triggered the failure to be thrown
from the packet send methods
(cherry picked from commit db8c771b2a37ad16d789f546507b6329221f4c7a)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Periodic expiry with no consumers fails to page in messages if cache has flipped,AMQ-6967,13160697,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,21/May/18 13:20,27/Jul/18 12:12,13/Jul/23 08:27,27/Jul/18 11:40,5.15.0,,,,5.15.5,5.16.0,,Message Store,,,,,0,,,,,"when there are no consumers on a queue and message sends push the cursor to the default 70% memory limit, message expiry can fail to page in messages.

The logic respects the cursor memory limit but fails to account for never having done a page in for browse/expiry or dispatch",,cshannon,gtully,jira-bot,tnarake,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-4930,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 27 12:12:04 UTC 2018,,,,,,,,,,,"0|i3ty47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"21/May/18 13:27;jira-bot;Commit 026c6f4403ea2a53426b507c6d991672942046b7 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=026c6f4 ]

AMQ-6967 - ensure there are some messages paged in for periodic expiry check if non are in memory
;;;","27/Jul/18 11:29;cshannon;[~gtully] - is this finished?;;;","27/Jul/18 11:40;gtully;complete.;;;","27/Jul/18 12:12;jira-bot;Commit cdae25ecfb8ff67fab9acb5b4a5669a6c36805a6 in activemq's branch refs/heads/activemq-5.15.x from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cdae25e ]

AMQ-6967 - ensure there are some messages paged in for periodic expiry check if non are in memory

(cherry picked from commit 026c6f4403ea2a53426b507c6d991672942046b7)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Queue page on web console displays URL parameter without proper encoding,AMQ-6954,13155809,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,artnaseef,artnaseef,artnaseef,27/Apr/18 21:49,04/Sep/18 10:38,13/Jul/23 08:27,25/Jul/18 11:23,5.15.3,,,,5.15.6,5.16.0,,Web Console,,,,,0,,,,,"Using a URL with the parameter, QueryFilter, the value of that parameter is included in the output page without proper encoding.",,artnaseef,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5976,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Sep 04 10:38:06 UTC 2018,,,,,,,,,,,"0|i3t4gn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"25/Jul/18 11:22;gtully;resolved with: https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d25de5d;;;","07/Aug/18 21:42;jira-bot;Commit d8c80a98212ee5d73a281483a2f8b3f517465f62 in activemq's branch refs/heads/master from artnaseef
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d8c80a9 ]

[AMQ-6954] encode the QueueFilter field value also
;;;","07/Aug/18 21:43;artnaseef;Additional update to resolve: [https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=d8c80a98212ee5d73a281483a2f8b3f517465f62]

 ;;;","04/Sep/18 10:38;jira-bot;Commit 2373aa1320dec90a60d69001adcb0ce856d61d10 in activemq's branch refs/heads/activemq-5.15.x from artnaseef
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2373aa1 ]

[AMQ-6954] encode the QueueFilter field value also

(cherry picked from commit d8c80a98212ee5d73a281483a2f8b3f517465f62)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SocketTimeoutException when using HTTP transport connector,AMQ-6949,13153621,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,samuel.ueltschi@bsi-software.com,samuel.ueltschi@bsi-software.com,19/Apr/18 08:28,26/Jul/19 09:26,13/Jul/23 08:27,26/Jul/19 09:26,5.15.3,,,,5.15.10,5.16.0,,Broker,,,,,1,,,,,"Java clients that connect to the ActiveMQ broker over the HTTP transport connector loose the conection after 30 seconds with the following exception:

 
{code:java}
WARN | Transport (http://localhost:8866) failed , attempting to automatically reconnect: {}
java.io.IOException: Failed to perform GET on: http://localhost:8866 Reason: Read timed out
 at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:34)
 at org.apache.activemq.transport.http.HttpClientTransport.run(HttpClientTransport.java:208)
 at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketTimeoutException: Read timed out
 at java.net.SocketInputStream.socketRead0(Native Method)
 at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 at java.net.SocketInputStream.read(SocketInputStream.java:171)
 at java.net.SocketInputStream.read(SocketInputStream.java:141)
 at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
 at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
 at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
 at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
 at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
 at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
 at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
 at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
 at org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:207)
 at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
 at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
 at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
 at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
 at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
 at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
 at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
 at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
 at org.apache.activemq.transport.http.HttpClientTransport.run(HttpClientTransport.java:180)
 ... 1 more
 

{code}
 

This happens on the default 5.15.3 distribution on Windows and on Ubuntu with the following transport connector:

 
{code:java}
<transportConnector name=""http"" uri=""http://0.0.0.0:8866?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>{code}
 

There are no errors in the borker log that could explain the problem.

 

This is the sample program that I used:

 
{code:java}
import javax.jms.Connection;
import javax.jms.JMSException;
import org.apache.activemq.ActiveMQConnectionFactory;
public class TestConnect {
 public static void main(String[] args) throws JMSException {
 System.out.println(""Connecting:"");
 ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""failover:(http://localhost:8866)?randomize=false&jms.prefetchPolicy.queuePrefetch=1"");
 Connection connection = connectionFactory.createConnection(""admin"", ""admin"");
 connection.start();
 }
}{code}
 

NOTE:

 

In the meantime I found the cause for the problem. A default socket timeout of 30 secods for the HTTP client was introduced with the following ticket: https://issues.apache.org/jira/browse/AMQ-6397

This timeout somewhow seems to conflict with the keep alive requests that stays open for arround 30 seconds. I increased the default timeout to 90 seconds and this seems to resolve the problem (see attached version of HttpClientTransport.java).

 

 

 

 

 ",,jira-bot,rogier.oudshoorn,samuel.ueltschi@bsi-software.com,,,,,,,,,"suem commented on pull request #362: AMQ-6949: SocketTimeoutException when using HTTP transport connector
URL: https://github.com/apache/activemq/pull/362
 
 
   I reported and fixed AMQ-6949 roughly a year ago and have been running my fix without any issues ever since.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 13:31;githubbot;600","jbonofre commented on pull request #362: AMQ-6949: SocketTimeoutException when using HTTP transport connector
URL: https://github.com/apache/activemq/pull/362
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 09:25;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"23/Apr/18 06:45;samuel.ueltschi@bsi-software.com;HttpClientTransport.java;https://issues.apache.org/jira/secure/attachment/12920236/HttpClientTransport.java","19/Apr/18 08:27;samuel.ueltschi@bsi-software.com;TestConnect.java;https://issues.apache.org/jira/secure/attachment/12919770/TestConnect.java","19/Apr/18 08:27;samuel.ueltschi@bsi-software.com;activemq.xml;https://issues.apache.org/jira/secure/attachment/12919769/activemq.xml","19/Apr/18 08:36;samuel.ueltschi@bsi-software.com;amqtest.zip;https://issues.apache.org/jira/secure/attachment/12919771/amqtest.zip",,,,4.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Jul 26 09:26:37 UTC 2019,,,,,,,,,,,"0|i3sr47:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"19/Apr/18 08:36;samuel.ueltschi@bsi-software.com;I added a sample maven project with my exact setup;;;","19/Apr/18 09:21;samuel.ueltschi@bsi-software.com;I tested the problem on different versions:

 

problem happens on:
 * 5.15.3
 * 5.14.2

no problem (so far) on:
 * 5.13.4
 * 5.12.2;;;","12/Jul/19 09:17;rogier.oudshoorn;I  have the same problem, i need to use http transport and the timeouts in http world are usually longer ...;;;","26/Jul/19 09:25;jira-bot;Commit ea0bcc12f77594228bb270f199ba54b5dc3ce453 in activemq's branch refs/heads/master from suem
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ea0bcc1 ]

AMQ-6949: SocketTimeoutException when using HTTP transport connector

A default socket timeout of 30 secods for the HTTP client was introduced with the following ticket: https://issues.apache.org/jira/browse/AMQ-6397

This timeout somewhow seems to conflict with the keep alive requests that stays open for arround 30 seconds. I increased the default timeout to 90 seconds and this seems to resolve the problem.;;;","26/Jul/19 09:25;jira-bot;Commit 32ddadc7abe714dd40a0603b53f5709c5eafcaa4 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=32ddadc ]

Merge pull request #362 from suem/master

AMQ-6949: SocketTimeoutException when using HTTP transport connector;;;","26/Jul/19 09:26;jira-bot;Commit 8e8041c69aaf1bcc99d352c777c248b6d5c6d0c5 in activemq's branch refs/heads/activemq-5.15.x from suem
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=8e8041c ]

AMQ-6949: SocketTimeoutException when using HTTP transport connector

A default socket timeout of 30 secods for the HTTP client was introduced with the following ticket: https://issues.apache.org/jira/browse/AMQ-6397

This timeout somewhow seems to conflict with the keep alive requests that stays open for arround 30 seconds. I increased the default timeout to 90 seconds and this seems to resolve the problem.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Significant memory footprint increase from 5.8.0 to 5.15.3,AMQ-6940,13148529,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,johno,johno,28/Mar/18 10:21,30/Mar/18 16:02,13/Jul/23 08:27,29/Mar/18 13:02,5.15.3,,,,5.15.4,5.16.0,,Broker,,,,,0,,,,,"Recently we upgraded from 5.8.0 to 5.15.3 on one of our environments and found the broker running out of memory with the old broker configurations.

I suspect this may be related to the new inflight message size calculation but haven't been able to create a reproducer just yet.

Broker JVM running with opts 

{code:java}
-Xss256k -Xms600m -Xmx600m -Xmn128m -Dfile.encoding=ISO-8859-1 -Dlog4j.watchDelay=60000 -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintPromotionFailure -XX:PrintFLSStatistics=1 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+PrintClassHistogram -verbose:gc -Dsun.rmi.dgc.client.gcInterval=7200000 -Dsun.rmi.dgc.server.gcInterval=7200000
{code}","Java jdk1.8.0_144

OS Linux 4.4.19-29.55.amzn1.x86_64",cshannon,jira-bot,johno,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/18 10:20;johno;activemq.xml;https://issues.apache.org/jira/secure/attachment/12916586/activemq.xml","29/Mar/18 17:18;johno;amq-testing.tar.xz;https://issues.apache.org/jira/secure/attachment/12916860/amq-testing.tar.xz","29/Mar/18 17:02;johno;amq_5.16.0-SNAPSHOT.png;https://issues.apache.org/jira/secure/attachment/12916857/amq_5.16.0-SNAPSHOT.png","29/Mar/18 17:02;johno;amq_5.8.0.png;https://issues.apache.org/jira/secure/attachment/12916856/amq_5.8.0.png","28/Mar/18 15:32;johno;amq_heap2.png;https://issues.apache.org/jira/secure/attachment/12916635/amq_heap2.png","28/Mar/18 10:20;johno;messageid_analysis.png;https://issues.apache.org/jira/secure/attachment/12916585/messageid_analysis.png",,6.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Important,,,,,,,,,9223372036854775807,,,,Fri Mar 30 16:02:00 UTC 2018,,,,,,,,,,,"0|i3rvtz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Mar/18 13:05;johno;Still leaking after removing the vmcursors as suggested by dejanb.;;;","28/Mar/18 15:37;johno;I created a canary build of the broker and removed the dispatched array from org.apache.activemq.broker.region.TopicSubscription , the heap has more or less dropped to the old baseline but I will follow up later as it still may be too early to tell. The dispatched array is cleaned via org.apache.activemq.broker.region.TopicSubscription#updateStatsOnAck(org.apache.activemq.command.MessageAck) which is invoked every x thousand messages, the problem here is that in our cluster we have roughly 7300 consumers and 900 producers which is clearly not going to scale as well as it did in 5.8.0..;;;","28/Mar/18 21:36;johno;Confirmed the regression is caused by https://issues.apache.org/jira/browse/AMQ-5837;;;","28/Mar/18 22:39;cshannon;The reason why this has never come up is because you are running on a very small JVM for the number of consumers and producers you have.  600 megabytes of memory is pretty small given the number of producers and consumers is over 8000.  So yes the feature is not going to scale without proper memory allocation. The short term solution is to simply increase your heap size.

A more permanent fix is to add a flag to the policy configuration to disable the inflight statistics on TopicSubscription so that the dispatched array doesn't collect objects anymore (basically what you already did).  This is something that can be added for the next patch release so you can disable the statistics.

 

 ;;;","28/Mar/18 23:24;johno;I strongly disagree that 600 megabytes of memory is too little for over 8k producers and consumers, prior to 5.15.3 the JVM took an average of 100mb of heap (150mb max).

To be brutally honest I believe the implementation is broken, apart from it taking so much memory, it should not be storing the actual messages and their payloads for so long (or even at all for that matter) even if it is a non persistent topic, the consumer is not slow and the messages have been delivered the messages remain in the dispatched array until updateStatsOnAck is invoked which is seldom..;;;","29/Mar/18 10:10;johno;In addition, how are the inflight stats even remotely accurate if the broker keeps processed messages in memory..? They should be removed immediately to be usable.;;;","29/Mar/18 10:46;cshannon;In flight messages by definition are messages that have not been processed but have simply been dispatched to a consumer.  Messages are not ""processed"" until a consumer acknowledges the message so the broker does not drop a message until then.  

This dispatched list is not new.  It is only new for a TopicSubscription.  It has been used for 10 years for Queue subscriptions and Durable subscriptions to track in flight messages.  See https://github.com/apache/activemq/blame/master/activemq-broker/src/main/java/org/apache/activemq/broker/region/PrefetchSubscription.java#L217;;;","29/Mar/18 10:47;cshannon;The other option that should reduce the amount of messages in that list would be to lower your prefetch configuration for your consumers.;;;","29/Mar/18 11:11;johno;{quote}In flight messages by definition are messages that have not been processed but have simply been dispatched to a consumer. Messages are not ""processed"" until a consumer acknowledges the message so the broker does not drop a message until then.{quote}

So based on your definition shouldn't updateStatsOnAck be invoked in here? (just a shot in the dark haven't had time to test it)

org.apache.activemq.broker.region.TopicSubscription#acknowledge

{code:java}
} else if (ack.isDeliveredAck()) {
    // Message was delivered but not acknowledged: update pre-fetch counters.
    expandPrefetchExtension(ack.getMessageCount());
    // missing call to updateStatsOnAck?
} else if (ack.isRedeliveredAck()) {
{code};;;","29/Mar/18 11:39;cshannon;No because that method is only updating stats when the ack signals the message is being dropped because it was handled properly which means either a standard/individual ack (consumer processed it) or expired ack (broker is dropping it because it expired).  For delivered acks it's just saying that a client received it but is acking later so the inflight stats are not processed (as the message is still in flight and not actually acked) and only the prefetch is adjusted.  I think that happens when using acknowledge batch mode.

I'm working on a patch now to disable tracking of those messages in the pendingList because it's not necessary for TopicSubscriptions except for the metrics case so it can be optionally disabled.;;;","29/Mar/18 12:04;johno;Given the only thing the dispatched list is used for is metrics why not just store the message id and payload size?  ;;;","29/Mar/18 12:47;cshannon;I think that should be doable.  I think we would need to include the Destination as well but basically could store a list of a new type of object for dispatched messages and that new object would just contain the message id, size, and destination reference (which is already tracked in memory in another map).  I'll work on a patch.;;;","29/Mar/18 12:52;cshannon;Also it's only going to be possible for now TopicSubscriptions.  For Queue and Durable subscriptions the message reference is used in a lot more cases from that dispatched list and is not going to be simple to remove it.  But since this is only a problem for you in the TopicSubscription case that should be ok.;;;","29/Mar/18 13:02;jira-bot;Commit f69fd6f0020290752a7424479821c22d94f9b8b7 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f69fd6f ]

AMQ-6940 - Reduce memory footprint for inflight statistics

For the TopicSubscription case we can reduce the inflight statistics
memory footprint by not storing the entire message reference for in
flight messages and instead just a subset of the information needed.
;;;","29/Mar/18 13:02;jira-bot;Commit cae382063eb296eb6aef6e0952f691aa80c33031 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=cae3820 ]

AMQ-6940 - Reduce memory footprint for inflight statistics

For the TopicSubscription case we can reduce the inflight statistics
memory footprint by not storing the entire message reference for in
flight messages and instead just a subset of the information needed.

(cherry picked from commit f69fd6f0020290752a7424479821c22d94f9b8b7)
;;;","29/Mar/18 13:36;johno;[~cshannon] I think that makes sense, we heavily use TopicSubscription for highspeed pubsub and this performance regression is blocking us from upgrading.;;;","29/Mar/18 13:37;johno;Now that we've determined the actual cause I will try and create a standalone reproducer to verify the patch works as expected or if we also require the config to disable inflight stats.;;;","29/Mar/18 13:39;cshannon;[~johno] - Sounds good, hopefully this patch reduces the memory usage enough for your use case.  Otherwise I have a patch I created to disable the stats tracking that I can also commit.;;;","29/Mar/18 16:59;johno;[~cshannon] could I trouble you for the patch so I can test that too? Unfortunately even with the latest changes to reduce the inflight statistics memory footprint the memory is not ideal.;;;","29/Mar/18 17:03;johno;I attached the reproducer and yourkit profiler screenshots showing the heap usage.;;;","29/Mar/18 17:25;jira-bot;Commit 65b0f2ad0d48845ad54681ac0eff832de122e2a9 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=65b0f2a ]

AMQ-6940 - Add flag to disable TopicSubscription in flight stats

To save memory usage in some use cases add a new flag to PolicyEntry
called useTopicSubscriptionInflightStats to allow disabling the
inflight stats
;;;","29/Mar/18 17:26;jira-bot;Commit 21a594c8e817ebb2090c1de016c5bb1f4f905e08 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=21a594c ]

AMQ-6940 - Add flag to disable TopicSubscription in flight stats

To save memory usage in some use cases add a new flag to PolicyEntry
called useTopicSubscriptionInflightStats to allow disabling the
inflight stats

(cherry picked from commit 65b0f2ad0d48845ad54681ac0eff832de122e2a9)
;;;","29/Mar/18 17:27;cshannon;There's a new flag on a policy that you can set called useTopicSubscriptionInflightStats.  It defaults to true but if you set it to false then it will not store those objects in the dispatched list and skip that metric.;;;","29/Mar/18 17:30;johno;-Does the xsd need to be updated too or is that generated automatically?- I'll create another snapshot and check it out.;;;","29/Mar/18 17:35;cshannon;It gets generated automatically during the maven build.;;;","29/Mar/18 17:39;johno;[~cshannon] confirmed disabling inflight stats does the trick, thanks for the quick fix!;;;","29/Mar/18 17:42;johno;Do you have a rough idea of when 5.15.4 will be cut?;;;","29/Mar/18 17:52;cshannon;There's not really a definitive date but there's enough fixes that we could probably do one in the next week or two.;;;","30/Mar/18 09:16;johno;[~cshannon] looks like an extra bracket snuck into PolicyEntry (line 1104) and missing closing bracket for setUseTopicSubscriptionInflightStats on the activemq-5.15.x branch which causes a compile error.;;;","30/Mar/18 10:30;jira-bot;Commit 9346fb3638f293b585560051cd57ef7e513c0d4a in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9346fb3 ]

AMQ-6940 - Fix compilation
;;;","30/Mar/18 10:31;jira-bot;Commit a0a240372fda05675055cc29f35cb60a4a0311af in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a0a2403 ]

AMQ-6940 - fix compilation attempt 2
;;;","30/Mar/18 10:35;jira-bot;Commit 84126d8a7a7eb9faf44bef687dcf647e84173f22 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=84126d8 ]

AMQ-6940 - test fix for AMQ6477 test

Need to remove the portion of the test that looks at the dispatched list
for TopicSubscription as that class no longer tracks message references
;;;","30/Mar/18 10:36;jira-bot;Commit 9683ae3f5dacdbcde470e9bc8cbb5263e465560c in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9683ae3 ]

AMQ-6940 - test fix for AMQ6477 test

Need to remove the portion of the test that looks at the dispatched list
for TopicSubscription as that class no longer tracks message references

(cherry picked from commit 84126d8a7a7eb9faf44bef687dcf647e84173f22)
;;;","30/Mar/18 10:36;cshannon;[~johno] - Should be fixed now, Jenkins also caught a test failure that I fixed that was a side effect from the path;;;","30/Mar/18 16:02;johno;[~cshannon] thanks again!;;;",,,,,,,,,,,,,,,
StoreDurableSubscriberCursor does not timeout properly on non-persistent message send,AMQ-6924,13143883,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,09/Mar/18 12:38,09/Mar/18 12:41,13/Jul/23 08:27,09/Mar/18 12:41,5.15.3,,,,5.15.4,5.16.0,,Broker,,,,,0,,,,,"I found an issue today on a broker when the temporary store was full and a non-persistent message was trying to be added to a durable subscription.  Analysis showed that the broker was stuck in a loop trying to add the non-persistent message to the temporary store because the maxWaitTime value is not properly used inside of StoreDurableSubscriberCursor. Instead of honoring a timeout value and failing, the waitForSpace() method call on the temporary store was stuck in a loop waiting indefinitely for free space.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Mar 09 12:41:49 UTC 2018,,,,,,,,,,,"0|i3r3o7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"09/Mar/18 12:41;jira-bot;Commit 5e2adc0ed7dfe2e827bdef878f1c8cde12ff5773 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5e2adc0 ]

AMQ-6924 - Fix StoreDurableSubscriberCursor non-persistent message add

StoreDurableSubscriberCursor now properly uses a timeout value when
attempting to add to the temporary store for non-persistent messages to
prevent an indefinite wait on free space
;;;","09/Mar/18 12:41;jira-bot;Commit 2ca46c561b3954c7065e09be92bf05e128357a73 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ca46c5 ]

AMQ-6924 - Fix StoreDurableSubscriberCursor non-persistent message add

StoreDurableSubscriberCursor now properly uses a timeout value when
attempting to add to the temporary store for non-persistent messages to
prevent an indefinite wait on free space

(cherry picked from commit 5e2adc0ed7dfe2e827bdef878f1c8cde12ff5773)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent authorization in web console,AMQ-6908,13141985,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,alvinlin123,alvinlin123,02/Mar/18 04:02,18/Nov/19 16:00,13/Jul/23 08:27,18/Nov/19 16:00,5.15.0,5.15.1,5.15.2,5.15.3,5.15.11,5.16.0,,Web Console,,,,,0,,,,,"Looking at org.apache.activemq.web.WebClient#createWebClient we can actually configure the connectionFactory in webconsle-embedded.xml to use the credential in the HTTP Authorization header to connect to the core ActiveMQ broker by setting the username and password to null.

But when I do that, the browse in console feature stops working if I have authentication enabled, because org.apache.activemq.web.QueueBrowseQuery requires the given connectionFactory to be configured with non-null username and password. ",,alvinlin123,githubbot,jira-bot,,,,,,,,,"jbonofre commented on pull request #280: AMQ-6908 Use WebClient in QueueBrowseQuery
URL: https://github.com/apache/activemq/pull/280
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 15:59;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 18 16:00:29 UTC 2019,,,,,,,,,,,"0|i3qryf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Mar/18 19:08;githubbot;GitHub user alvinlin123 opened a pull request:

    https://github.com/apache/activemq/pull/280

    AMQ-6908 Use WebClient in QueueBrowseQuery

    `org.apache.activemq.web.controller.SendMessage` uses `org.apache.activemq.web.WebClient`, which can be configured to use console login credential instead of system user credential (by setting the connection factory username and password to `null`). This allows seamless per-user based authorization for operations through the web console. 
    
    `org.apache.activemq.web.QueueBrowseQuery` was not using the `org.apache.activemq.web.WebClient` so it was impossible to setup authorization on per-user basis for browsing messages of a queue through web console. 
    
    This change migrates `org.apache.activemq.web.QueueBrowseQuery` to use `org.apache.activemq.web.WebClient`.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/alvinlin123/activemq amq-6908

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/280.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #280
    
----
commit 822cf6203437f06a58e8e442de87b8416ad232e6
Author: Alvin Lin <alvinlin@...>
Date:   2018-03-16T18:30:05Z

    AMQ-6908 allow use of ActiveMQ console login credential (for authorization) when browsing messages through the console

----
;;;","16/Mar/18 19:10;alvinlin123;I submitted a pull request to fix this issue

 

https://github.com/apache/activemq/pull/280;;;","18/Nov/19 16:00;jira-bot;Commit 822cf6203437f06a58e8e442de87b8416ad232e6 in activemq's branch refs/heads/activemq-5.15.x from Alvin Lin
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=822cf62 ]

AMQ-6908 allow use of ActiveMQ console login credential (for authorization) when browsing messages through the console
;;;","18/Nov/19 16:00;jira-bot;Commit a393b8c106ca3c832cde25650b7752f142ead9ed in activemq's branch refs/heads/activemq-5.15.x from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a393b8c ]

Merge pull request #280 from alvinlin123/amq-6908

AMQ-6908 Use WebClient in QueueBrowseQuery;;;","18/Nov/19 16:00;jira-bot;Commit e7b7334e42d8709fdf69e5c8d929f6ad25dd27ec in activemq's branch refs/heads/master from Alvin Lin
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=e7b7334 ]

AMQ-6908 allow use of ActiveMQ console login credential (for authorization) when browsing messages through the console

(cherry picked from commit 822cf6203437f06a58e8e442de87b8416ad232e6)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA JDBC rolled back recovered ack messages pending till restart when cache disabled,AMQ-6906,13141522,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,28/Feb/18 13:28,31/May/18 09:26,13/Jul/23 08:27,28/Feb/18 16:00,5.15.0,,,,5.16.0,,,JDBC,XA,,,,0,,,,,"When a prepared xa transaction with acks is rolledback after recovery, the message in the store is available for redelivery however it may have been skipped and the cursor will ignore till restart.
When the cache is disabled and there are further message sends it is possible to reproduce.","JDBC message store, XA recovery",gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Thu May 31 09:26:29 UTC 2018,,,,,,,,,,,"0|i3qp3z:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"28/Feb/18 13:31;jira-bot;Commit efaf9cd77e35e1f811708a7a38bab348b003eeef in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=efaf9cd ]

[AMQ-6906] jdbc store; ensure rolled back prepared ack messages are recovered asap
;;;","03/May/18 10:32;jira-bot;Commit bd45d931ba273be4d94bf213c6befd116f99dcc8 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=bd45d93 ]

[AMQ-6906] tidy up cleanup on jdbc error and combine updates in single completion to avoid prepared sequence update on non transacted add with error. More jdbc error related tests
;;;","31/May/18 09:26;jira-bot;Commit 51ec4590eba2fc379cd4665ae3bf993298b92d5b in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=51ec459 ]

[AMQ-6906] exclude test from leveldb scenario dependent on tracked recovered acks
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Resource Adapter clientId ActivationConfigProperty does conform to API document ,AMQ-6905,13141259,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,dmerrittESP,dmerrittESP,27/Feb/18 15:38,18/Nov/19 16:50,13/Jul/23 08:27,18/Nov/19 16:50,5.15.3,,,,5.15.11,5.16.0,,RAR,,,,,0,,,,,"According to the following page [http://activemq.apache.org/activation-spec-properties.html]

The clientId default is set by the resource adapter. This is not the case in the code.

When defining the MDB to be Durable via subscriptionDurability, if the clientId is not configured an validation error is thrown stating ""clientId must be set since durable subscription was requested"".

Looking at the code, if the documentation is correct, the ActiveMQActivationSpec validation method should no longer validate the clientId. The ActiveMQConnection makeConnection should change

String clientId = activationSpec.getClientId();

to

String clientId = defaultValue(activationSpec.getClientId(), getInfo().getClientid());

 ",,dmerrittESP,githubbot,jira-bot,,,,,,,,,"jbonofre commented on pull request #278: AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation
URL: https://github.com/apache/activemq/pull/278
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Nov/19 16:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,"03/Mar/18 19:19;asutosh_pandya;AMQ-6905.patch;https://issues.apache.org/jira/secure/attachment/12912891/AMQ-6905.patch",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Nov 18 16:50:09 UTC 2019,,,,,,,,,,,"0|i3qnhz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Mar/18 19:19;githubbot;GitHub user asutosh936 opened a pull request:

    https://github.com/apache/activemq/pull/278

    AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/asutosh936/activemq AMQ-6905

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/278.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #278
    
----
commit a1f15f45111aacdde2ff883116d32aa8c14e4adc
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-03T19:18:39Z

    AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation

----
;;;","18/Nov/19 16:48;jira-bot;Commit a1f15f45111aacdde2ff883116d32aa8c14e4adc in activemq's branch refs/heads/master from asutosh936
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a1f15f4 ]

AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation
;;;","18/Nov/19 16:48;jira-bot;Commit f5b1800b0ecbe045e4b4749ea7c13cfa22b83f85 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f5b1800 ]

Merge pull request #278 from asutosh936/AMQ-6905

AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation;;;","18/Nov/19 16:48;jira-bot;Commit f5b1800b0ecbe045e4b4749ea7c13cfa22b83f85 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=f5b1800 ]

Merge pull request #278 from asutosh936/AMQ-6905

AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation;;;","18/Nov/19 16:50;jira-bot;Commit 86e09813ae13e93fa16858c9c7e4661ebdf3f4d5 in activemq's branch refs/heads/activemq-5.15.x from asutosh936
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=86e0981 ]

AMQ-6905 : Upgraded ActivationConfigProperty as per API Documentation

(cherry picked from commit a1f15f45111aacdde2ff883116d32aa8c14e4adc)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Destination with wildcard may not have correct policy applied if multiple wildcard policies exist,AMQ-6901,13139063,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,cshannon,cshannon,cshannon,16/Feb/18 15:38,31/May/18 09:38,13/Jul/23 08:27,16/Feb/18 15:44,5.15.3,,,,5.15.4,5.16.0,,Broker,,,,,0,,,,,"Back in AMQ-6109 I fixed an issue where the wrong policy was being applied to a destination. when there were wildcards.  It turns out that this was only a partial fix and there is another edge case where if there are multiple wild card policies (and some are children) , it is possible for the wrong child card policy to be applied to a destination at a higher parent level which is incorrect.",,cshannon,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AMQ-5875,AMQ-6109,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Feb 16 19:36:09 UTC 2018,,,,,,,,,,,"0|i3q9zj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"16/Feb/18 15:42;jira-bot;Commit 2ce1c1352fb64ecf1d3018e2b0f7cabeba99b589 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2ce1c13 ]

AMQ-6901 - Make sure proper policy is used to configure a destination

When multiple wildcard policies exist in a hierarchy it was possible for
the wrong policy to be selected when configuring a destination
;;;","16/Feb/18 15:43;jira-bot;Commit 3c2d5a3015db444de6500dcbe08299d50ce74824 in activemq's branch refs/heads/activemq-5.15.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3c2d5a3 ]

AMQ-6901 - Make sure proper policy is used to configure a destination

When multiple wildcard policies exist in a hierarchy it was possible for
the wrong policy to be selected when configuring a destination

(cherry picked from commit 2ce1c1352fb64ecf1d3018e2b0f7cabeba99b589)
;;;","16/Feb/18 19:36;cshannon;Added [https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=703b7b151017fe117363e5598146e157bad78265] to fix a NPE;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Runtime Configuration Plugin throwing NPE at startup,AMQ-6899,13138383,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,jbonofre,pberkman,pberkman,14/Feb/18 00:40,04/Dec/20 18:38,13/Jul/23 08:27,02/Dec/20 16:28,5.13.3,,,,5.15.14,5.16.1,5.17.0,Plugin,,,,,0,,,,,"NOTE: running in Karaf

 

Here is the plugin declaration from activemq.xml - note: have tried by with and without the checkPeriod - both throw the same NPE:
{code:java}
<plugins>
     <runtimeConfigurationPlugin />
 </plugins>
<plugins>
    <runtimeConfigurationPlugin checkPeriod=""2000"" />
</plugins>
{code}
The configuration seems to load fine, but this exception is thrown on every startup.

 

 
{code:java}
20180213 16:34:25.556 [INFO ] Broker Starting Thread | 150:org.apache.activemq.activemq-osgi | org.apache.activemq.plugin.AbstractRuntimeConfigurationBroker | Unexpected exception during load of: URL [file:/D:/Nextgate/products/ngs/etc/activemq.xml]
java.lang.NullPointerException
 at org.apache.activemq.plugin.RuntimeConfigurationBroker.getSchema(RuntimeConfigurationBroker.java:232)[150:org.apache.activemq.activemq-osgi:5.13.3]
 at org.apache.activemq.plugin.RuntimeConfigurationBroker.loadConfiguration(RuntimeConfigurationBroker.java:178)[150:org.apache.activemq.activemq-osgi:5.13.3]
 at org.apache.activemq.plugin.RuntimeConfigurationBroker.start(RuntimeConfigurationBroker.java:82)[150:org.apache.activemq.activemq-osgi:5.13.3]
 at org.apache.activemq.broker.BrokerService$6.start(BrokerService.java:2324)[150:org.apache.activemq.activemq-osgi:5.13.3]
 at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:732)[150:org.apache.activemq.activemq-osgi:5.13.3]
 at org.apache.activemq.broker.BrokerService.access$300(BrokerService.java:139)[150:org.apache.activemq.activemq-osgi:5.13.3]
 at org.apache.activemq.broker.BrokerService$3.run(BrokerService.java:711)[150:org.apache.activemq.activemq-osgi:5.13.3]
20180213 16:34:25.568 [INFO ] Broker Starting Thread | 150:org.apache.activemq.activemq-osgi | org.apache.activemq.transport.TransportServerThreadSupport | Listening for connections at: tcp://127.0.0.1:8206?transport.threadName&transport.maximumConnections=1000&wireFormat.maxFrameSize=104857600
 
{code}
 ","Karaf

both Windows and Linux (CentOS 7)",gtully,jbonofre,jira-bot,mattrpav,pberkman,,,,,,,"jbonofre opened a new pull request #590:
URL: https://github.com/apache/activemq/pull/590


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/20 10:26;githubbot;600","jbonofre merged pull request #590:
URL: https://github.com/apache/activemq/pull/590


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/20 16:27;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Fri Dec 04 18:38:17 UTC 2020,,,,,,,,,,,"0|i3q5sn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"14/Feb/18 11:12;gtully;there is a test for this feature in karaf that may help reproduce or diagnose (by comparison):
see: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=blob;f=activemq-karaf-itest/src/test/java/org/apache/activemq/karaf/itest/ActiveMQBrokerRuntimeConfigTest.java;h=d34bf4ea3fdee7cfd33a1a9eba6c2f560ec45a69;hb=HEAD

;;;","30/Oct/20 14:15;mattrpav;This is caused by the spring-beans.xsd not being present in the activemq-osgi jar here:

https://github.com/apache/activemq/blob/master/activemq-runtime-config/src/main/java/org/apache/activemq/plugin/RuntimeConfigurationBroker.java#L236

{noformat}
schemas.add(new StreamSource(getClass().getResource(""/org/springframework/beans/factory/xml/spring-beans-3.0.xsd"").toExternalForm()));
{noformat};;;","30/Nov/20 15:01;jbonofre;That's not a problem anymore with the new features XML. The problem was for people using Spring 5 (instead of Spring 4) in Karaf. I've updated the features XML to ""force"" use of Spring 4 (via spring legacy).;;;","30/Nov/20 15:02;jbonofre;However, about the runtime plugin, we have an issue on JDK 11 that I fixed.;;;","02/Dec/20 09:30;jbonofre;By the way, runtimePlugin is useless in the context of Karaf (it's possible to automatically reload the configuration when you have changes with fileinstall in Karaf).;;;","02/Dec/20 16:27;jira-bot;Commit c83f7e9aa8fa23b6ce86b5ee48969836d8b3e5d0 in activemq's branch refs/heads/master from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=c83f7e9 ]

[AMQ-6899] Use generic spring schema name (working with any Spring version) in RuntimeConfigurationPlugin
;;;","02/Dec/20 16:27;jira-bot;Commit 6e2854789b2387ae3305e5f6986713b34a0d96c1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e28547 ]

Merge pull request #590 from jbonofre/AMQ-6899

[AMQ-6899] Use generic spring schema name (working with any Spring version) in RuntimeConfigurationPlugin;;;","02/Dec/20 16:27;jira-bot;Commit 6e2854789b2387ae3305e5f6986713b34a0d96c1 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=6e28547 ]

Merge pull request #590 from jbonofre/AMQ-6899

[AMQ-6899] Use generic spring schema name (working with any Spring version) in RuntimeConfigurationPlugin;;;","02/Dec/20 16:28;jira-bot;Commit 1bc1b6d5028114c8fc97e138d4d588b87293b403 in activemq's branch refs/heads/activemq-5.16.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1bc1b6d ]

[AMQ-6899] Use generic spring schema name (working with any Spring version) in RuntimeConfigurationPlugin

(cherry picked from commit c83f7e9aa8fa23b6ce86b5ee48969836d8b3e5d0)
;;;","02/Dec/20 16:28;jira-bot;Commit 247836a4f70af5d4b8f770cf81a77647775000b3 in activemq's branch refs/heads/activemq-5.15.x from jbonofre
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=247836a ]

[AMQ-6899] Use generic spring schema name (working with any Spring version) in RuntimeConfigurationPlugin

(cherry picked from commit c83f7e9aa8fa23b6ce86b5ee48969836d8b3e5d0)
;;;","04/Dec/20 15:54;mattrpav;[~jbonofre] what do you mean by ""runtimePlugin is useless in the context of Karaf""? We have the runtimeConfigPlugin running in Karaf and we see ActiveMQ update settings accordingly.;;;","04/Dec/20 15:59;jbonofre;[~mattrpav] I mean that it's useful when using spring schema, but if you use blueprint, runtimeConfigPlugin is useless as blueprint detects and updates the running broker.;;;","04/Dec/20 18:38;mattrpav;Got it-- good clarification, thank you.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Excessive number of connections by failover transport with priorityBackup,AMQ-6894,13134777,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,jbonofre,ashakirin,ashakirin,30/Jan/18 14:53,22/Mar/21 05:04,13/Jul/23 08:27,22/Mar/21 05:04,5.14.5,,,,5.15.15,5.16.2,5.17.0,Broker,,,,,1,,,,,"My clients connect to AMQ with this connection string:

(tcp://amq1:61616,tcp://amq2:61616)?randomize=false&priorityBackup=true

 It works - for some time. But sooner or later my AMQ server becomes unresponsive because the host it runs on runs out of resources (threads).

Suddenly AMQ Server log explodes with the messages like:

{code}
2018-01-26 09:26:16,909 | WARN  | Failed to register MBean org.apache.activemq :type=Broker,brokerName=activemq-vm-primary,connector=clientConnectors,connect

orName=default,connectionViewType=clientId,connectionName=ID_ca8f70e115d0-3708

7-1516883370639-0_22 | org.apache.activemq.broker.jmx.ManagedTransportConnecti

on | ActiveMQ Transport: tcp:///172.10.7.56:55548@61616

2018-01-26 09:26:21,375 | WARN  | Ignoring ack received before dispatch; result of failover with an outstanding ack. Acked messages will be replayed if present on this broker. Ignored ack: MessageAck \{commandId = 157, responseRequired = false, ackType = 2, consumerId = ID:ca8f70e115d0-37087-1516883370639-1:22:10:1, firstMessageId = ID:a95345a9c0df-33771-1516883685728-1:17:5:1:23, lastMessageId = ID:a95345a9c0df-33771-1516883685728-1:17:5:1:23, destination = queue://MY_QUEUE_OUT, transactionId = null, messageCount = 1, poisonCause = null} | org.apache.activemq.broker.region.PrefetchSubscription | ActiveMQ Transport: tcp:///172.16.6.56:55464@61616

2018-01-26 09:26:39,211 | WARN  | Transport Connection to: tcp://172.10.6.56:55860 failed: java.net.SocketException: Connection reset | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ InactivityMonitor Worker

2018-01-26 09:26:47,175 | WARN  | Transport Connection to: tcp://172.10.6.56:57012 failed: java.net.SocketException: Broken pipe (Write failed) | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ InactivityMonitor Worker
{code}

After short period of time AMQ server comes out of resources with ""java.lang.OutOfMemoryError: unable to create new native thread"" error. The AMQ service process in this case has a huge number of threads (some thousands)

 

The client side log contains a lot of reconnection attempts messages like:

{code}
2018-01-26 00:10:31,387 WARN    [\{{bundle.name,org.apache.activemq.activemq-osgi}{bundle.version,5.14.1}\{bundle.id,181}}]     [null]  org.apache.activemq.transport.failover.FailoverTransport      Failed to connect to [tcp://activemq-vm-primary:61616, tcp://activemq-vm-secondary:61616] after: 810 attempt(s) continuing to retry.
{code}

It seems that client creates a huge number of connections by failover retry and after some time kills the server.

Issue looks very similar to described in https://issues.apache.org/jira/browse/AMQ-6603, however server isn't configured with access control settings.

I found the description of similar problem into [http://activemq.2283324.n4.nabble.com/ActiveMQ-5-2-OutOfMemoryError-unable-to-create-new-native-thread-td2366585.html],  but without concrete suggestion.

 

Part of server log is attached",,ashakirin,githubbot,jbonofre,jira-bot,,,,,,,,"lucastetreault commented on pull request #274:
URL: https://github.com/apache/activemq/pull/274#issuecomment-792580384


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 08:39;githubbot;600","lucastetreault removed a comment on pull request #274:
URL: https://github.com/apache/activemq/pull/274#issuecomment-792580384


   Can one of the admins verify this patch?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 09:07;githubbot;600","jbonofre merged pull request #274:
URL: https://github.com/apache/activemq/pull/274


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/21 05:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,"30/Jan/18 14:56;ashakirin;activemq-part.zip;https://issues.apache.org/jira/secure/attachment/12908346/activemq-part.zip",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Mon Mar 22 05:03:55 UTC 2021,,,,,,,,,,,"0|i3pjkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"31/Jan/18 15:30;jbonofre;Thanks, gonna take a look.;;;","31/Jan/18 16:16;ashakirin;Thanks JB,

I have one more founding on client side.
There is an exception:
{code}
org.apache.activemq.transport.failover.FailoverTransport	Transport (tcp://activemq-vm-primary:61616) failed , attempting to automatically reconnect: java.io.IOException: Encountered a String value that is too long to encode.
{code}

It could be the case that client tries to inject long binary property into JMS message, receives IOException and trying to reconnect. After some time, unlimited re-connections kills the server.

I am not 100% sure that is the cause, but perhaps it helps to your analyse;;;","04/Feb/18 12:33;ashakirin;The following client code configured with failover transport will kill the server after some time:

{code}
public void onMessage(Message message) {
...
 StringBuffer bigBuffer = new StringBuffer(Short.MAX_VALUE);
 for(int i = 1; i < Short.MAX_VALUE; i++) { 
   bigBuffer.append(""1""); 
 }
 throw new RuntimeException(bigBuffer.toString());
}
{code}

I see two AMQ problems here:
1) Exception message have to be controlled and limited before set in dlqDeliveryFailureCause: some exceptions coming from thirdparty and not under client handler control. Following code in ActiveMQMessageConsumer.rollback() have to be fixed:
{code}
  ack.setPoisonCause(new Throwable(""Exceeded redelivery policy limit:"" + redeliveryPolicy
      + "", cause:"" + lastMd.getRollbackCause(), lastMd.getRollbackCause()));
{code}
It is necessary to check length of lastMd.getRollbackCause().toString() and cut to reasonable length


2) Failover reconnection by EVERY IOException is IMO very dangerous;;;","07/Feb/18 18:28;githubbot;GitHub user ashakirin opened a pull request:

    https://github.com/apache/activemq/pull/274

    AMQ-6894: limit poison exception message to 1024

    AMQ-6894: Limit poison exception message to 1024 to avoid IOException be encoding

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ashakirin/activemq master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/274.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #274
    
----
commit d0dab2e88b44702d26dd0883c9940b97ee03fdeb
Author: Andrei Shakirin <andrei.shakirin@...>
Date:   2018-02-07T18:28:55Z

    AMQ-6894: limit poison exception message to 1024

----
;;;","22/Mar/21 05:02;jira-bot;Commit d0dab2e88b44702d26dd0883c9940b97ee03fdeb in activemq's branch refs/heads/master from Andrei Shakirin
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=d0dab2e ]

AMQ-6894: limit poison exception message to 1024
;;;","22/Mar/21 05:02;jira-bot;Commit ea5b2d88130d96d260ca28570ed77d48cd433624 in activemq's branch refs/heads/master from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=ea5b2d8 ]

Merge pull request #274 from ashakirin/master

AMQ-6894: limit poison exception message to 1024;;;","22/Mar/21 05:03;jira-bot;Commit 9c64c63c7b2609d732a63ad6c3413c2712525e02 in activemq's branch refs/heads/activemq-5.16.x from Andrei Shakirin
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=9c64c63 ]

AMQ-6894: limit poison exception message to 1024

(cherry picked from commit d0dab2e88b44702d26dd0883c9940b97ee03fdeb)
;;;","22/Mar/21 05:03;jira-bot;Commit 1bf603d90f993868414ac6313c730123c0aca9c3 in activemq's branch refs/heads/activemq-5.15.x from Andrei Shakirin
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=1bf603d ]

AMQ-6894: limit poison exception message to 1024

(cherry picked from commit d0dab2e88b44702d26dd0883c9940b97ee03fdeb)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Duplicated message in JMS transaction, when jdbc persistence fails (Memory leak on Queue)",AMQ-6891,13133738,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,rkraus,rkraus,25/Jan/18 16:21,30/Jan/18 10:53,13/Jul/23 08:27,30/Jan/18 10:53,5.15.2,,,,5.16.0,,,Broker,,,,,0,,,,,"I have following scenario (see attached test case):
 # Send 1 message in JMS transaction
 # Enable database problem simulation (throw {{SQLException}} in {{TransactionContext.executeBatch()}} method - the similar situation should happen, when commit fails)
 # Attempt to send 2 messages in one JMS transaction, send operation fails as is expected (only 1 message is in database from first send operation)
 # Disable database problem simulation ({{SQLException}} is not thrown from now)
 # Repeat the attempt to send ""the same"" 2 messages in one JMS transaction, send operation is successful now, how is expected (3 messages are in database)
 # Attempt to receive 3 messages 1, 2, 3, but 5 messages are received 1, 2, 3, 2, 3.

I have suspicion, that problem is in {{org.apache.activemq.broker.region.Queue}}. It seems that reason is {{indexOrderedCursorUpdates}} list. The {{Queue.onAdd(MessageContext)}} method is invoked for each message by {{JDBCMessageStore.addMessage(ConnectionContext, Message) method}}, which adds {{MessageContext}} into this list. The added {{MessageContext}} is processed (and removed) in {{Queue.doPendingCursorAdditions()}} method, which is invoked only from ""afterCommit synchronization"" ({{Queue.CursorAddSync.afterCommit()}} method). But when commit operation fails, then ""afterCommit"" method is not invoked (but {{afterRollback}} method is invoked) and {{MessageContext}} entries stays in {{indexOrderedCursorUpdates}} list.

Personaly I would expect, that some ""remove"" operation should be done in {{Queue.CursorAddSync.afterRolback()}} method. Probably the similar operation should be done in {{Queue.doMessageSend()}} method on place, where {{Exception}} from ""addMessage"" is handled in case when JMS transaction is not used. Or some different ""completion"" operation should be introduced, because {{MessageContext}} is only add into the list,  but don't removed in case of failure.

When I tried to register (and use) {{LeaseLockerIOExceptionHandler}} IOExceptionHandler, the transports was successfully restarted, but my ""client"" code was blocked in {{ActiveMQSession.commit()}} method. Is it expected behavior?

When I tried to add following code into {{Queue.CursorAddSync.afterRollback()}}, I received only 3 expected messages (when JMS transaction is used), but it was only blind shot, sorry, because I don't understand the whole logic here.
{code:java}
@Override
public void afterRollback() throws Exception {
  synchronized(indexOrderedCursorUpdates) {
    for(int i = indexOrderedCursorUpdates.size() - 1; i >= 0; i--) {
      MessageContext mc = indexOrderedCursorUpdates.get(i);
        if(mc.message.getMessageId().equals(messageContext.message.getMessageId())) {
        indexOrderedCursorUpdates.remove(mc);
        if(mc.onCompletion != null) {
          mc.onCompletion.run();
        }
        break;
      }
    }
  }
  messageContext.message.decrementReferenceCount();
}
{code}
 ",,gtully,jira-bot,rkraus,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 10:29;rkraus;JmsTransactionCommitFailureTest.java;https://issues.apache.org/jira/secure/attachment/12907847/JmsTransactionCommitFailureTest.java",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Tue Jan 30 10:53:10 UTC 2018,,,,,,,,,,,"0|i3pd6f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jan/18 10:28;rkraus;The test case, which should demonstrate the {{Queue}} memory leak on {{indexOrderedCursorUpdates}} list, is added into attached {{JmsTransactionCommitFailureTest}} class (only java reflection is used for acquiring list size after unsuccessful send operations). Usage of {{LeaseLockerIOExceptionHandler}} has still same effect - {{ActiveMQsession.commit()}} is blocked.;;;","26/Jan/18 12:44;gtully;[~rkraus] thanks for the great test and analysis. I think you have identified the problem being the lack of work on the sync rollback. Am just wondering if the hash/equals of messageContext should be implemented such that indexOrderedCursorUpdates.remove() would be sufficient and am wondering about calling the completion in the rollback case, but it may be necessary for cleanup.
I will investigate some more. thanks again for the great bug report :-)
;;;","26/Jan/18 13:18;jira-bot;Commit f96a20e831755505b31df2e14fd3266f74d5a149 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f96a20e ]

[AMQ-6891] apply fix and test from Radek Kraus with thanks. Pending cursor adds are now dropped on rollback
;;;","26/Jan/18 13:24;gtully;It think your fix is on the money and the completion should be run. Thanks.;;;","26/Jan/18 16:39;rkraus;Thank you for your time and confirmation my issue. Thanks for your great reaction time. 
But unfortunately, I think, that problem is more complex. IMHO the invocation of \{{rollbackPendingCursorAdditions(MessageContext)}} method only from \{{afterRollback()}} solves problem when JMS transaction is used - it is great. But the similar problem (entry is not removed from list) occurs even when JMS transaction is not used (I noted it in issue description too). The problem is, that in this situation the ""rollback"" method is not invoked at all. In this case exception handling in \{{doMessageSend(ProducerBrokerExchange, Message)}} doesn't contains remove action too. In normal flow (no exception), the method \{{tryOrderedCursorAdd()}} is invoked and remove operation is finally done by ""standard"" \{{doPendingCursorAdditions()}} method. 

{code}
void doMessageSend(final ProducerBrokerExchange producerExchange, final Message message) throws IOException,
  ...
  try {
    //AMQ-6133 - don't store async if using persistJMSRedelivered
    //This flag causes a sync update later on dispatch which can cause a race
    //condition if the original add is processed after the update, which can cause
    //a duplicate message to be stored
    if (messages.isCacheEnabled() && !isPersistJMSRedelivered()) {
      result = store.asyncAddQueueMessage(context, message, isOptimizeStorage());
      result.addListener(new PendingMarshalUsageTracker(message));
    } else {
      store.addMessage(context, message);
    }
  } catch (Exception e) {
    // we may have a store in inconsistent state, so reset the cursor
    // before restarting normal broker operations
    resetNeeded = true;
    pendingSends.decrementAndGet();
    // !!! 
    // Here should be remove operation too, probably?
    //rollbackPendingCursorAdditions(messageContext);
    // !!!
    throw e;
  }

  ...

  if(tryOrderedCursorAdd(message, context)) {
    break;
  }
{code}

Yes it is my fault, because I didn't provide test case for this situation (send message without JMS transaction), sorry. I can extend my test class for this test case too. Sorry again.;;;","26/Jan/18 17:11;gtully;the non transacted case has this issue also. Most often store IOErrors would result in the broker stop. However there are cases where we want to let these error bubble back to the producers and in that case we still have leak in the non transacted case.;;;","30/Jan/18 10:52;jira-bot;Commit dd2572bcb1c3793a8a2fa19cc4fc88cc8481f96e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dd2572b ]

[AMQ-6891] test and fix non tx variant of this leak
;;;","30/Jan/18 10:53;gtully;fixed up the non transacted path and reused the leak test, thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ documentation typo,AMQ-6889,13132718,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,,pfyuit,pfyuit,22/Jan/18 13:54,22/Jan/18 14:33,13/Jul/23 08:27,22/Jan/18 14:33,,,,,,,,Documentation,,,,,0,,,,,"Access [http://activemq.apache.org/virtual-destinations.html,]

This paragraph: 

_Another added benefit of having physical queues for each logical topic subscriber is we can {color:#FF0000}them{color} monitor the queue depths via [JMX|http://activemq.apache.org/jmx.html] to monitor system performance together with being able to browse these physical queues._

The word ""them"" should be ""then"", please feel free to fix it.",,pfyuit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2018-01-22 13:54:27.0,,,,,,,,,,,"0|i3p6wf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Activemq Non,AMQ-6887,13132097,Bug,Closed,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,,futianshi1314,futianshi1314,19/Jan/18 06:38,19/Jan/18 06:46,13/Jul/23 08:27,19/Jan/18 06:46,5.15.0,,,,NEEDS_REVIEW,,,Broker,KahaDB,,,,0,,,,,"    _We has a queue ,it is full of the tempUsage becaouse the queue has a producer send quickly,but has no consumers,we config the <tempUsage limit=""20 gb""/>_

     _When we purge all the message on this queue, stop the producer,and restart the broker,we find that the dir size of ""tmp_storage"" increase also,the tmp.data db-num.log and db.redo also increase,but have no any queue on the broker(we has stop the consumer and delete the queue) ,note that we have many topic on this broker,it like broker write the topic message to the temp dir.The memory is used 35 percent ,we try to delete the dir of ""tmp_storage"" and restart broker,has resolved ,the ""tempUsage"" don't appear again._

_So i have two questions:_

_1.if topic out of memory will cursor to the temp dir? note:topic_

_2:the Non-persistent message out of the memory that we config and cursor to the temp,if we purge or consume the message but don't delete the dir of ""tmp_storage"" and restart, will the broker also write the message to the dir of ""tmp_storage""?_","System:centos6.5

network-brokers: has three brokers",futianshi1314,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,2018-01-19 06:38:37.0,,,,,,,,,,,"0|i3p3mv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configuration issue if service wrapper is used,AMQ-6883,13129476,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Minor,Fixed,mattrpav,alprausch77,alprausch77,09/Jan/18 09:39,23/Feb/22 17:33,13/Jul/23 08:27,23/Feb/22 17:33,5.15.14,,,,5.16.5,5.17.0,,,,,,,1,,,,,"The documentation 
(http://activemq.apache.org/how-do-i-configure-10s-of-1000s-of-queues-in-a-single-broker-.html) 
states that the DedicatedTaskRunner is disabled by default from 5.6 onwards. 
This is true if the ActiveMQ is started directly, e.g. with ""activemq.bat 
start"". 

But if the ActiveMQ is started as a windows service from the wrapper.exe the 
DedicatedTaskRunner is still activated because the wrapper.conf has 
following entry: 
wrapper.java.additional.8=-Dorg.apache.activemq.UseDedicatedTaskRunner=true 


Please make the default configuration of AMQ similar across all start-ups.


see mailing list entry: http://activemq.2283324.n4.nabble.com/UseDedicatedTaskRunner-configuration-td4734704.html",,alprausch77,jira-bot,mattrpav,spraja,,,,,,,,"mattrpav opened a new pull request #772:
URL: https://github.com/apache/activemq/pull/772


   … bin/*.bat file for memory and dedicatedTaskRunner


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/22 20:25;githubbot;600","jbonofre merged pull request #772:
URL: https://github.com/apache/activemq/pull/772


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: gitbox-unsubscribe@activemq.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/22 17:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,"26/Jan/18 17:02;spraja;JIRA_AMQ_6883.patch;https://issues.apache.org/jira/secure/attachment/12907904/JIRA_AMQ_6883.patch",,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Feb 23 17:33:03 UTC 2022,,,,,,,,,,,"0|i3oocf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"26/Jan/18 17:01;spraja;Hello,

I have created a patch for modifying the wrapper configurations for all operating systems to be consistent with the JIRA(https://issues.apache.org/jira/browse/AMQ-3667).

Surya;;;","16/Feb/22 20:28;mattrpav;Updated wrappers for macos, win32, win64, linux-32 and linux-64.

* -Xms=1024
* dedicatedTaskRunner=false;;;","23/Feb/22 17:32;jira-bot;Commit cb27fd06ee642eda58ce99f3c30a375e73ba2099 in activemq's branch refs/heads/main from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=cb27fd0 ]

[AMQ-6883] Update wrapper confs to be consistent memory and dedicatedTaskRunner
;;;","23/Feb/22 17:32;jira-bot;Commit 4715a01877ad304ae3ce4a006b8d66d56a17acb8 in activemq's branch refs/heads/main from Jean-Baptiste Onofré
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=4715a01 ]

Merge pull request #772 from mattrpav/AMQ-6883

[AMQ-6883] Update windows wrapper confs to be consistent with windows…;;;","23/Feb/22 17:33;jira-bot;Commit 5fe6854b62c0f9c66e220c7a79d9725ab25c19d0 in activemq's branch refs/heads/activemq-5.16.x from Matt Pavlovich
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5fe6854 ]

[AMQ-6883] Update wrapper confs to be consistent memory and dedicatedTaskRunner

(cherry picked from commit cb27fd06ee642eda58ce99f3c30a375e73ba2099)
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect comparison behaviour in TransportConnector.isMatchesCluster with Tokenised Filter,AMQ-6880,13128263,Bug,Resolved,AMQ,ActiveMQ,software,bsnyder,"<a href=""http://activemq.apache.org/"">Apache ActiveMQ</a> is the most popular and powerful open source Message Broker. Apache ActiveMQ is fast, supports many <a href=""http://activemq.apache.org/cross-language-clients.html"">Cross Language Clients and Protocols</a> and many <a href=""http://activemq.apache.org/features.html"">advanced features<a> while fully supporting JMS 1.1 and J2EE 1.4. Apache ActiveMQ is released under the Apache 2.0 License",http://activemq.apache.org/,Major,Fixed,gtully,gtully,gtully,03/Jan/18 16:02,03/Jan/18 16:18,13/Jul/23 08:27,03/Jan/18 16:14,5.15.0,,,,5.16.0,,,Broker,,,,,0,,,,,"the clusterFilter should support a comma-delimited list of filter expressions.
Consider a use case where we have brokers with prefixes, like east and west and we have specified a broker filter of ""east.\*,west.\*""
We add a new broker to the network, called ""west-broker2."" Looking at the code, this expression will fail out on the first test (against the ""east.\*"" filter token), setting result to false and failing to add the broker.
Similarly, if we add a new broker called ""east-broker2,"" the name will successfully test against the first filter token of ""east.\*"", then will subsequently fail against the following token of ""west.\*"" instead of breaking out.

When a filter is set, we need to check for a match against all of the tokens in the filter.",,gtully,jira-bot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Wed Jan 03 16:07:45 UTC 2018,,,,,,,,,,,"0|i3ogwv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,"03/Jan/18 16:07;jira-bot;Commit 8c77e9553eaf2062b937c68737a5128d0f9a4347 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8c77e95 ]

[AMQ-6880] fix filter match logic when transport connector updateClusterFilter is in play
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
