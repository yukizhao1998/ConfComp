Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocked),Inward issue link (Blocker),Outward issue link (Blocker),Outward issue link (Blocker),Inward issue link (Completes),Outward issue link (Completes),Outward issue link (Completes),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Incorporates),Outward issue link (Incorporates),Inward issue link (Problem/Incident),Outward issue link (Problem/Incident),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Inward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Reference),Outward issue link (Regression),Inward issue link (Required),Inward issue link (Required),Inward issue link (Supercedes),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Affects version (Component)),Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Estimated Complexity),Custom field (Evidence Of Open Source Adoption),Custom field (Evidence Of Registration),Custom field (Evidence Of Use On World Wide Web),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Fix version (Component)),Custom field (Flags),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (Hadoop Flags),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Language),Custom field (Last public comment date),Custom field (Level of effort),Custom field (Machine Readable Info),Custom field (Mentor),Custom field (New-TLP-TLPName),Custom field (Original story points),Custom field (Parent Link),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Release Note),Custom field (Review Date),Custom field (Reviewer),Custom field (Severity),Custom field (Severity),Custom field (Skill Level),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Start Date),Custom field (Tags),Custom field (Tags),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Test and Documentation Plan),Custom field (Testcase included),Custom field (Tester),Custom field (Workaround),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Persistent node loss,ZOOKEEPER-4694,13536363,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,zhaoxinxin,zhaoxinxin,16/May/23 06:15,19/May/23 01:50,13/Jul/23 09:07,19/May/23 01:50,3.4.6,,,,,,,,,,,,,,,,,,0,,,"When the client uses version 3.3.1 of the jar package, and the server uses version 3.4.6 of the application, when the scheduled task registration is implemented with Quartz, the created persistent node suddenly disappears, and a log is added before the delete method of the jar package, which is not printed, so it is speculated that it is not a client-initiated delete operation

This phenomenon is an occasional situation, it may not occur for a week, or it may occur twice a day, we tried to upgrade the client and server versions to 3.4.14, and it is still the same problem, is there anything wrong with Quartz",,zhaoxinxin,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri May 19 01:50:10 UTC 2023,,,,,,,,,,"0|z1hx54:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/23 08:45;zhaoxinxin;This phenomenon is an occasional situation, it may not occur for a week, or it may occur twice a day, we tried to upgrade the client and server versions to 3.4.14, and it is still the same problem, is there anything wrong with Quartz;;;","19/May/23 01:50;zhaoxinxin;The problem has been resolved. The asynchronous notification of the watch has been delayed. We thought that the node was deleted after application A created it. Actually, the B application received the watch asynchronous notification too late and determined that the node does not exist;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client tests don't pass on CI,ZOOKEEPER-4674,13524485,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,ztzg,eolivelli,eolivelli,13/Feb/23 14:18,05/Jul/23 16:40,13/Jul/23 09:08,13/Feb/23 15:27,,,,,,,,,,3.6.5,3.7.2,3.8.2,3.9.0,,c client,tests,,,0,pull-request-available,,,,eolivelli,,,,,,,,,,,,,,,,,,,"eolivelli commented on PR #1983:
URL: https://github.com/apache/zookeeper/pull/1983#issuecomment-1428036387

   Assuming that @ztzg agrees with the patch, as he is the original author, I will merge the patch to all the active branches in order to unlock CI


;13/Feb/23 14:30;githubbot;600","ztzg commented on PR #1983:
URL: https://github.com/apache/zookeeper/pull/1983#issuecomment-1428124392

   > Assuming that @ztzg agrees with the patch, as he is the original author, I will merge the patch to all the active branches in order to unlock CI
   
   I haven't /tested/ this patch, but it looks like what we came up with before, just with a proper ticket and description.  LGTM!


;13/Feb/23 15:19;githubbot;600","eolivelli merged PR #1983:
URL: https://github.com/apache/zookeeper/pull/1983


;13/Feb/23 15:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2023-02-13 14:18:56.0,,,,,,,,,,"0|z1fw74:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java classpath should contain libs about metrics providers,ZOOKEEPER-4671,13523166,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,liguoxiong,liguoxiong,06/Feb/23 07:29,17/Mar/23 07:01,13/Jul/23 09:08,17/Mar/23 07:01,,,,,,,,,,,,,,,,,,,0,pull-request-available,,"When developing zookeeper, we often start or debug it by using the current source code instead of the built package. So it is good to add the classes about metrics providers to the classpath to avoid ClassNotFound exception. This ClassNotFound exception happens when we use the config {{metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider}} to start zookeeper.",,liguoxiong,tison,,,,,,,,,,,,,,,,,,"lgxbslgx commented on PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908#issuecomment-1418645312

   > 1. Thanks for this contribution. It's better to create a [JIRA](https://issues.apache.org/jira/projects/ZOOKEEPER/) issue (sign up JIRA if you don't have an account) to bind this PR to a JIRA-ID. ZooKeeper uses the GitHub workflow. The contributor guideline is [here](https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute)
   
   Thanks for your guide. I created the issue and edited the title of this PR just now.
   
   > 2. This issue also exists in the `window` OS? and we also need to update the `zkEnv.cmd` shell?
   
   The `zkEnv.cmd` may have such similar problem. But my dev enviroment is linux and I don't have `windows` OS now, so I can't verify it and provide the right patch to solve it. I need some help. Or can someone else who uses `windows` system provide another patch to solve this issue?


;06/Feb/23 07:45;githubbot;600","maoling commented on PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908#issuecomment-1446398606

   @eolivelli PTAL


;27/Feb/23 14:15;githubbot;600","lgxbslgx commented on PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908#issuecomment-1446578968

   Thanks for the review. What should I do now? Just wait this patch to be integrated by someone with commit privilege?


;27/Feb/23 15:52;githubbot;600","eolivelli commented on PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908#issuecomment-1446625305

   we need another reviewer to review and sponsor the patch.
   if you want you could advertise about it on dev@zookeeper.apache.org
   
   let me tag a few people
   @tisonkun @maoling @ztzg @symat @anmolnar 


;27/Feb/23 16:17;githubbot;600","lgxbslgx commented on PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908#issuecomment-1473254437

   Thanks for the review. Could I get your help to sponsor this patch?


;17/Mar/23 06:43;githubbot;600","tisonkun commented on PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908#issuecomment-1473269946

   Merging...
   
   Thanks for your contribnution @lgxbslgx!


;17/Mar/23 07:01;githubbot;600","tisonkun merged PR #1908:
URL: https://github.com/apache/zookeeper/pull/1908


;17/Mar/23 07:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Mar 17 07:01:47 UTC 2023,,,,,,,,,,"0|z1fo28:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/23 07:01;tison;master via e50a0bbae1bc0b812ac2656f5ba3f9eab7c3d62e;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix C client test compilation error in Util.cc.,ZOOKEEPER-4654,13514277,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,cnauroth,cnauroth,cnauroth,16/Dec/22 21:08,30/Jan/23 07:57,13/Jul/23 09:08,18/Dec/22 17:40,,,,,,,,,,3.6.4,3.7.2,3.8.1,3.9.0,,c client,,,,0,pull-request-available,,"{{Util.cc}} has started to fail in compilation due to undeclared symbol {{nanosleep}}:

{code}
     [exec] /usr/local/google/home/cnauroth/zookeeper/apache-zookeeper-3.6.4/zookeeper-client/zookeeper-client-c/tests/Util.cc: In function ‘void millisleep(int)’:
     [exec] /usr/local/google/home/cnauroth/zookeeper/apache-zookeeper-3.6.4/zookeeper-client/zookeeper-client-c/tests/Util.cc:32:5: error: ‘nanosleep’ was not declared in this scope
     [exec]    32 |     nanosleep(&ts,0);
     [exec]       |     ^~~~~~~~~
     [exec] make[1]: *** [Makefile:1580: zktest_st-Util.o] Error 1
     [exec] make: *** [Makefile:2143: check-am] Error 2
{code}

As per the [nanosleep(2)|https://man7.org/linux/man-pages/man2/nanosleep.2.html] man page, this is declared in time.h. We can fix this by including the header.
",,cnauroth,symat,,,,,,,,,,,,,,,,,,"symat commented on PR #1967:
URL: https://github.com/apache/zookeeper/pull/1967#issuecomment-1356842848

   merging now to all active branches


;18/Dec/22 17:36;githubbot;600","asfgit closed pull request #1967: ZOOKEEPER-4654: Fix C client test compilation error in Util.cc.
URL: https://github.com/apache/zookeeper/pull/1967


;18/Dec/22 17:38;githubbot;600","symat commented on PR #1967:
URL: https://github.com/apache/zookeeper/pull/1967#issuecomment-1356843435

   I merged the fix to all branches (3.6+). Thank you for the fox @cnauroth !


;18/Dec/22 17:41;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Dec 18 17:40:26 UTC 2022,,,,,,,,,,"0|z1e5oo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Dec/22 21:18;cnauroth;[https://github.com/apache/zookeeper/pull/1967];;;","18/Dec/22 17:40;symat;Issue resolved by pull request 1967
[https://github.com/apache/zookeeper/pull/1967];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Tests don't pass on JDK20 because we try to mock InetAddress,ZOOKEEPER-4647,13513164,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,eolivelli,eolivelli,eolivelli,12/Dec/22 11:07,05/Jul/23 16:40,13/Jul/23 09:08,15/Feb/23 07:39,,,,,,,,,,3.8.2,3.9.0,,,,,,,,0,pull-request-available,,"This test fails on JDK20-Ea



org.apache.zookeeper.test.StaticHostProviderTest.testEmptyResolution



Mockito cannot mock this class: class java.net.InetAddress. Mockito can only mock non-private & non-final classes. If you're not sure why you're getting this error, please report to the mailing list.

if I try to upgrade  Mockito to 4.9.0  the error is

org.mockito.exceptions.base.MockitoException: 

Cannot mock/spy class java.net.InetAddress

Mockito cannot mock/spy because :

 - sealed class

 

 at org.apache.zookeeper.test.StaticHostProviderTest.testReResolvingSingle(StaticHostProviderTest.jav",,cnauroth,eolivelli,,,,,,,,,,,,,,,,,,"eolivelli opened a new pull request, #1959:
URL: https://github.com/apache/zookeeper/pull/1959

   Some tests do not pass on latest JDK20 (and also in JDK19) because we are trying to mock InetAddress.
   
   More context here
   https://issues.apache.org/jira/browse/ZOOKEEPER-4647
   
   Unfortunately upgrading Mockito doesn't help


;12/Dec/22 11:09;githubbot;600","eolivelli commented on PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#issuecomment-1385045432

   @li4wang @tisonkun @anmolnar @symat @cnauroth PTAL


;17/Jan/23 08:55;githubbot;600","cnauroth commented on code in PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#discussion_r1072845647


##########
zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java:
##########
@@ -148,9 +156,6 @@ public void testServerHostnameVerificationWithHostnameVerificationDisabled() thr
         X509Certificate[] certificateChain = createSelfSignedCertifcateChain(IP_ADDRESS, HOSTNAME);
         zkTrustManager.checkServerTrusted(certificateChain, null, mockSocket);
 
-        verify(mockInetAddress, times(0)).getHostAddress();

Review Comment:
   These `verify` calls are used to assert for expected behavior of hostname verification in various use cases. Without the `verify` calls, we would lose some test coverage, and I think several of these tests would all be testing the same thing.
   
   I'm not familiar with the new burningwave library. Do you know if there are any options it offers for intercepting these calls so that we could try to preserve this test coverage?



;17/Jan/23 21:29;githubbot;600","eolivelli commented on code in PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#discussion_r1073546869


##########
zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java:
##########
@@ -148,9 +156,6 @@ public void testServerHostnameVerificationWithHostnameVerificationDisabled() thr
         X509Certificate[] certificateChain = createSelfSignedCertifcateChain(IP_ADDRESS, HOSTNAME);
         zkTrustManager.checkServerTrusted(certificateChain, null, mockSocket);
 
-        verify(mockInetAddress, times(0)).getHostAddress();

Review Comment:
   I knew that we are going to lose these assertions, the problem is that the tests verified that these two methods were not called (or called N times).
   We cannot spy the InetAddress object anymore.
   
   we could create two ""versions"" of this test, if we are on JDK19+ we do it this way, and if we are on older JDKs we keep the mock and run the test the same way as before.
   I don't think that there will be short term plans to abandon older JDKs soon (years)
   
   



;18/Jan/23 13:39;githubbot;600","cnauroth commented on code in PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#discussion_r1074016629


##########
zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java:
##########
@@ -148,9 +156,6 @@ public void testServerHostnameVerificationWithHostnameVerificationDisabled() thr
         X509Certificate[] certificateChain = createSelfSignedCertifcateChain(IP_ADDRESS, HOSTNAME);
         zkTrustManager.checkServerTrusted(certificateChain, null, mockSocket);
 
-        verify(mockInetAddress, times(0)).getHostAddress();

Review Comment:
   Here is another potential idea. I believe the intent of these tests is not necessarily to confirm that we called `InetAddress#getHostAddress()` or `getHostName()`, but rather to confirm that we performed hostname verification in the right circumstances. Therefore, we could try a refactoring as follows:
   
   1. The `ZKTrustManager` constructor currently calls `new ZKHostnameVerifier()` directly. Change it to use dependency injection, with the constructor receiving an instance of the `HostnameVerifier` interface.
       1. Alternative: if this ends up being too large of a change, keep the existing constructor and add a new one annotated `VisibleForTesting` that accepts the `HostnameVerifier`.
   2. Keep the existing tests using `ZKHostnameVerifier` so that we're still fully covering that code path, using the new Burning Wave setup, even though we can't do complete assertions on it.
   3. Remove all existing checks on `InetAddress#getHostAddress()` and `getHostName()`, just like you've already done.
   4. Add a few new similar tests that mock and verify the `HostnameVerifier` instead of `InetAddress`. We should be able to keep mocking `HostnameVerifier` across all JDK versions.
   
   @eolivelli , let me know your thoughts. Thanks!



##########
zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java:
##########
@@ -85,20 +106,7 @@ public static void removeBouncyCastleProvider() throws Exception {
     public void setup() throws Exception {
         mockX509ExtendedTrustManager = mock(X509ExtendedTrustManager.class);
 
-        mockInetAddress = mock(InetAddress.class);

Review Comment:
   We are still left with a `mockInetAddress` member variable, which could cause some confusion since it's not really a mock anymore.
   
   Can the member variable be removed completely? (Maybe not. Maybe it's still needed to return from the mock socket.)
   
   If we still need it, then I suggest renaming it to `inetAddress` so that it's clearer that it's not really a mock.



;18/Jan/23 20:00;githubbot;600","eolivelli commented on code in PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#discussion_r1092863933


##########
zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKTrustManagerTest.java:
##########
@@ -85,20 +106,7 @@ public static void removeBouncyCastleProvider() throws Exception {
     public void setup() throws Exception {
         mockX509ExtendedTrustManager = mock(X509ExtendedTrustManager.class);
 
-        mockInetAddress = mock(InetAddress.class);

Review Comment:
   we don't need it anymore, removed



;01/Feb/23 07:50;githubbot;600","eolivelli commented on PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#issuecomment-1428311031

   @cnauroth any other comments ?
   I would like to merge the patch as soon as CI passes


;13/Feb/23 17:04;githubbot;600","eolivelli merged PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959


;15/Feb/23 07:36;githubbot;600","eolivelli commented on PR #1959:
URL: https://github.com/apache/zookeeper/pull/1959#issuecomment-1481986604

   @cnauroth no worries. You are welcome.
   Glad to have fixed this problem the best way thanks to your feedback


;23/Mar/23 22:17;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jan 17 08:56:39 UTC 2023,,,,,,,,,,"0|z1dyu0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Jan/23 08:56;eolivelli;In the linked PR I have upgrade Mockito and I had to introduce  this tool (Burningwave tools)
[https://dev.to/jjbrt/how-to-configure-hostname-resolution-to-use-a-universal-custom-hostname-resolver-in-java-14p0]

 

 

Tests now pass;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Config watch path get truncated abnormally and fail chroot zookeeper client,ZOOKEEPER-4565,13469082,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,kezhuw,kezhuw,kezhuw,29/Jun/22 11:06,19/Apr/23 06:29,13/Jul/23 09:08,26/Jul/22 07:40,3.6.3,3.7.1,3.8.0,,,,,,,3.7.2,3.8.1,3.9.0,,,java client,,,,0,pull-request-available,,"{{ClientCnxn}} strips off {{chrootPath}} for notifications. This strip could break ""/zookeeper/config"" to illegal zookeeper path(aka. not start with ""/"") and fail zookeeper client due to index out of bound exception in {{PathParentIterator.next}}.

{code:java}
                // convert from a server path to a client path
                if (chrootPath != null) {
                    String serverPath = event.getPath();
                    if (serverPath.compareTo(chrootPath) == 0) {
                        event.setPath(""/"");
                    } else if (serverPath.length() > chrootPath.length()) {
                        event.setPath(serverPath.substring(chrootPath.length()));
                     } else {
                         LOG.warn(""Got server path {} which is too short for chroot path {}."",
                             event.getPath(), chrootPath);
                     }
                }
{code}

I think we could make this strip similar to c client version {{sub_string}} and warns only for not ""/zookeeper"" nodes.

I found this issue in reproducing CURATOR-593 and CURATOR-611. And the consequences are different in 3.6.3 and before.

* Before 3.6.3(exclusive), watcher of {{getConfig}} will receive event with illegal path.
* After 3.6.3(inclusive), the client will disconnect due to exception from {{ZKWatchManager.addPersistentWatches}} which calls {{PathParentIterator.forAll}}. See codes from [3.6.3|https://github.com/apache/zookeeper/blob/release-3.6.3/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java#L627] and [3.7+|https://github.com/apache/zookeeper/blob/release-3.7.0/zookeeper-server/src/main/java/org/apache/zookeeper/ZKWatchManager.java#L450].",,kezhuw,symat,,,,,,,,,,,,,,,,,,"kezhuw opened a new pull request, #1899:
URL: https://github.com/apache/zookeeper/pull/1899

   ```java
   if (serverPath.length() > chrootPath.length()) {
       event.setPath(serverPath.substring(chrootPath.length()));
   }
   ```
   
   Currently, chroot strip code listed above could result in illegal path
   (aka. path not start with ""/""). This will disconnect zookeeper client
   due to `StringIndexOutOfBoundsException` from `PathParentIterator.next`
   in event handling.


;29/Jun/22 14:15;githubbot;600","kezhuw commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1170773182

   One shortcoming of this fix and current design(aka. `ClientCnxn.chroot`) is that it does not work well with chroot `/zookeeper`.
   * If we strip `chroot` first, then watcher from `getConfig` will get `/config` while it should be `/zookeeper/config`.
   * If we match `/zookeeper` first, then watcher from `getData` will get `/zookeeper/config` while it should be `/config`.
   
   Basically, I think it is a design flaw in client side(aka. `ZooKeeper`, `ClientCnxn` and `Watcher`). It might be better to store and strip `chroot` in `Watcher` and let `ClientCnxn` pass through server path directly to `Watcher`. But this requires major refactor, I guess it might not be worth.
   
   PS. I made similar mistake(in outcoming's perspective) in [zookeeper-client-rust](https://github.com/kezhuw/zookeeper-client-rust/pull/5/files). But the fix to that project should cover above situations as strip is done [inside `Watcher`](https://github.com/kezhuw/zookeeper-client-rust/blob/f89b5bcbc03bb2d78c6afb36c5beccc8416badd0/src/client/watcher.rs#L50).


;30/Jun/22 05:15;githubbot;600","symat commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1188763956

   Thanks @kezhuw , I like your fix!
   I think we should make sure we don't break e.g. curator. We had some automated tests for that AFAIR... @eolivelli , what do you think?
   
   > One shortcoming of this fix and current design(aka. ClientCnxn.chroot) is that it does not work well with chroot /zookeeper.
   
   it is true... although I wouldn't consider this a very big issue. This is a special case which can be handled if needed. Doing the larger refactor would definitely break backward compatibility.
   
   


;19/Jul/22 08:36;githubbot;600","kezhuw commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1188893150

   I found this in reproducing [CURATOR-593](https://issues.apache.org/jira/browse/CURATOR-593) and [CURATOR-611](https://issues.apache.org/jira/browse/CURATOR-611). Curator [EnsembleTracker](https://github.com/apache/curator/blob/master/curator-framework/src/main/java/org/apache/curator/framework/imps/EnsembleTracker.java) uses [getConfig](https://github.com/apache/curator/blob/master/curator-framework/src/main/java/org/apache/curator/framework/imps/EnsembleTracker.java#L157) to track zookeeper ensemble changes. It [ignores](https://github.com/apache/curator/blob/master/curator-framework/src/main/java/org/apache/curator/framework/imps/EnsembleTracker.java#L113) illegal path event from buggy stripping. But after ZooKeeper [3.6.3](https://github.com/apache/zookeeper/blob/release-3.6.3/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java#L627), the illegal path causes exception inside ZooKeeper client and hence disconnection. CURATOR-593/CURATOR-611 are blocked by this as `getConfig` watcher will not receive event from chroot client.
   
   > This is a special case which can be handled if needed. Doing the larger refactor would definitely break backward compatibility.
   
   I agree. I think we can intercept `getConfig` watcher to pass ""/zookeeper/config"" to original watcher. This is a breaking change to old behavior though probably not by design. I guess it might be an opportunity to define and document semantics of `getConfig` watcher.
   
   Anyway, semantics of `getConfig` watcher could be a separate issue. And this pr should not break anything.


;19/Jul/22 10:38;githubbot;600","symat commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1188972846

   > I found this in reproducing [CURATOR-593](https://issues.apache.org/jira/browse/CURATOR-593) and [CURATOR-611](https://issues.apache.org/jira/browse/CURATOR-611).
   
   I see! thanks for the context!
   
   > Anyway, semantics of getConfig watcher could be a separate issue. And this pr should not break anything.
   
   agree... I'll try and find a second reviewer.


;19/Jul/22 12:09;githubbot;600","eolivelli commented on code in PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#discussion_r924426897


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java:
##########
@@ -855,6 +855,18 @@ class SendThread extends ZooKeeperThread {
         private boolean isFirstConnect = true;
         private volatile ZooKeeperSaslClient zooKeeperSaslClient;
 
+        private String stripChroot(String serverPath) {

Review Comment:
   nit: static ?



;19/Jul/22 12:21;githubbot;600","kezhuw commented on code in PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#discussion_r924503457


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java:
##########
@@ -855,6 +855,18 @@ class SendThread extends ZooKeeperThread {
         private boolean isFirstConnect = true;
         private volatile ZooKeeperSaslClient zooKeeperSaslClient;
 
+        private String stripChroot(String serverPath) {

Review Comment:
   It uses `ClientCnxn.chrootPath` which is a non-static member.



;19/Jul/22 13:28;githubbot;600","symat commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1195118748

   I'm merging this to master, thanks for the contribution @kezhuw  and for the review @eolivelli !


;26/Jul/22 07:37;githubbot;600","asfgit closed pull request #1899: ZOOKEEPER-4565: Refine chroot strip to accommodate /zookeeper/ subtree
URL: https://github.com/apache/zookeeper/pull/1899


;26/Jul/22 07:40;githubbot;600","kezhuw commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1195466388

   I guess we should backport this to all maintaining branches (aka. 3.6, 3.7 and 3.8) otherwise clients will get unexpected disconnected due to `getConfig` in chroot `ZooKeeper`. @symat @eolivelli 


;26/Jul/22 13:12;githubbot;600","symat commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1199420221

   yes, I think it make sense. I'll try and cherry-pick this to the active branches.


;29/Jul/22 14:39;githubbot;600","symat commented on PR #1899:
URL: https://github.com/apache/zookeeper/pull/1899#issuecomment-1199439278

   I pushed to branch-3.8 and branch-3.7.
   
   On branch-3.6 the cherry-pick failed as we have some conflict there. I'm not sure how important this fix is, but if you think its worth the time, then please submit a new PR against branch-3.6.


;29/Jul/22 14:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,CURATOR-593,CURATOR-611,,,,,,,,,,,,ZOOKEEPER-4601,,,,ZOOKEEPER-838,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 26 07:40:22 UTC 2022,,,,,,,,,,"0|z16gn4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/22 01:59;kezhuw;I presented a possible solution in [pr#1899|https://github.com/apache/zookeeper/pull/1899]. But I think there are subtle situations that we should aware of. What happen if the chroot is ""/zookeeper"" ?

The currently behaviors(pr#1899 keeps this) is that:
 * Both {{getData}} and {{getConfig}} will issue event with path ""/config"" for ""/zookeeper/config"".

It sounds a bit surprising that {{getConfig}} behaves different due to chroot. Personally, I prefer to:
 * {{getConfig}} always get events with path ""/zookeeper/config"".
 * {{getData}} and others get events with path stripped by chroot.

I think we chould intercept {{watcher}} in {{getConfig}} to achieve this.

But this might be a breaking change to old behavior though probably not by design.

What do you think ? [~eolivelli] [~symat] [~maoling] [~Tison];;;","26/Jul/22 07:40;symat;Issue resolved by pull request 1899
[https://github.com/apache/zookeeper/pull/1899];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"I'm trying to use the zookeeper c++ library file, but I'm getting an error when making it",ZOOKEEPER-4550,13447290,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,chrisluna,chrisluna,28/May/22 00:31,28/May/22 03:09,13/Jul/23 09:08,28/May/22 01:53,3.4.12,,,,,,,,,,,,,,build,,,,0,,,,,chrisluna,tison,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/May/22 01:04;chrisluna;image-2022-05-28-09-03-37-295.png;https://issues.apache.org/jira/secure/attachment/13044291/image-2022-05-28-09-03-37-295.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat May 28 03:09:36 UTC 2022,,,,,,,,,,"0|z12re8:",9223372036854775807,"
",,,,,,,,,,,,,,,,,,,,"28/May/22 03:09;tison;Copy from [~chrisluna]'s comment: ""I've solved it,I've changed the size of the buffer.""

It should not be a release note, though :);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ProviderRegistry may be repeatedly initialized,ZOOKEEPER-4549,13446965,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,lan_ok,lan_ok,26/May/22 07:58,01/Jul/22 06:31,13/Jul/23 09:08,17/Jun/22 11:31,,,,,,,,,,3.9.0,,,,,server,,,,0,pull-request-available,,"We run two ZooKeeperServerEmbedded in one JVM and find that ProviderRegistry was initialized repeatedly.
",,kezhuw,lan_ok,,,,,,,,,,,,,,,,,,"lanicc opened a new pull request, #1888:
URL: https://github.com/apache/zookeeper/pull/1888

   We run two ZooKeeperServerEmbedded in one JVM and find that ProviderRegistry was initialized repeatedly.


;26/May/22 08:02;githubbot;600","maoling closed pull request #1888: ZOOKEEPER-4549: ProviderRegistry may be repeatedly initialized
URL: https://github.com/apache/zookeeper/pull/1888


;17/Jun/22 09:32;githubbot;600","lanicc opened a new pull request, #1888:
URL: https://github.com/apache/zookeeper/pull/1888

   We run two ZooKeeperServerEmbedded in one JVM and find that ProviderRegistry was initialized repeatedly.


;17/Jun/22 09:32;githubbot;600","asfgit closed pull request #1888: ZOOKEEPER-4549: ProviderRegistry may be repeatedly initialized
URL: https://github.com/apache/zookeeper/pull/1888


;17/Jun/22 11:30;githubbot;600","maoling commented on PR #1888:
URL: https://github.com/apache/zookeeper/pull/1888#issuecomment-1158780232

   @lanicc 
   Thanks for your contribution.


;17/Jun/22 11:30;githubbot;600","maoling commented on PR #1888:
URL: https://github.com/apache/zookeeper/pull/1888#issuecomment-1159733920

   - @lanicc  Oops, the PR had caused this flaky test (https://github.com/apache/zookeeper/runs/6935237282?check_suite_focus=true) after I merged it. Cc @eolivelli  @tisonkun 
   - Strangely, why I don't have seen this obvious flaky test when I re-trigger the CI?


;19/Jun/22 13:58;githubbot;600","tisonkun commented on PR #1888:
URL: https://github.com/apache/zookeeper/pull/1888#issuecomment-1159741299

   @maoling yeah..That's a mistake since this is not a singleton pattern.
   
   I think we should revert this change.


;19/Jun/22 14:29;githubbot;600","lanicc commented on PR #1888:
URL: https://github.com/apache/zookeeper/pull/1888#issuecomment-1159766386

   > * @lanicc  Oops, the PR had caused this flaky test (https://github.com/apache/zookeeper/runs/6935237282?check_suite_focus=true) after I merged it. Cc @eolivelli  @tisonkun
   > * Strangely, why I don't have seen this obvious flaky test when I re-trigger the CI?
   
    Each zkServer should hold a single ProviderRegistry object instead of sharing one. It's right? @maoling @tisonkun 


;19/Jun/22 16:07;githubbot;600","lanicc opened a new pull request, #1888:
URL: https://github.com/apache/zookeeper/pull/1888

   We run two ZooKeeperServerEmbedded in one JVM and find that ProviderRegistry was initialized repeatedly.


;20/Jun/22 04:30;githubbot;600","eolivelli commented on PR #1888:
URL: https://github.com/apache/zookeeper/pull/1888#issuecomment-1160253752

   in tests we start multiple ZK servers.
   using static variables makes it a mess to run such kinds of tests.
   we should git revert this patch and find a different fix
   
   @maoling 


;20/Jun/22 10:16;githubbot;600","lanicc commented on PR #1888:
URL: https://github.com/apache/zookeeper/pull/1888#issuecomment-1171987739

   @maoling How should we deal with this problem?


;01/Jul/22 06:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-05-26 07:58:09.0,,,,,,,,,,"0|z12pg8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race between SyncThread and CommitProcessor thread,ZOOKEEPER-4537,13443700,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,jithingirish,jithingirish,06/May/22 18:18,30/Jan/23 07:57,13/Jul/23 09:08,17/May/22 11:46,,,,,,,,,,3.6.4,3.7.2,3.8.1,3.9.0,,server,,,,0,pull-request-available,,"Zookeeper server can get stuck when it has just one client and the only way it recovers is due to a socket timeout or another client commit request.

Details:

We have a system where a system manager app (SM) launches all the other applications based on some config criteria.  When system boots up, SM connects to zookeeper and is the only client talking to zookeeper until all other apps are launched. SM does a bunch of sync create() calls to zookeeper, before it starts up all the other apps. So at this point zookeeper server has got just one connection, which is from SM. 1 out of 3 times during system startup, SM gets stuck at a random create calls and there are only two ways this gets unwedged.
1. The socket has to time out and we get ZOPERATIONTIMEOUT
2. If we start another connection to zookeeper (I used zkCli.sh to do this), this unwedges the exiting connection to SM.
 
From strace I can see that there is a race between SyncThread and CommitProcessor thread.
 
Sync thread
class CommitProcessor {
run() {
            int requestsToProcess = 0;
            boolean commitIsWaiting = false;
            do {
                commitIsWaiting = !committedRequests.isEmpty(); <<<<< we are checking if there are more messages to process here
                requestsToProcess = queuedRequests.size();
                // Avoid sync if we have something to do
                if (requestsToProcess == 0 && !commitIsWaiting) {
                    // Waiting for requests to process
                    synchronized (this) {
                        while (!stopped && requestsToProcess == 0 && !commitIsWaiting) { <<<<< and acting on the information read above inside the sync block
                            wait(); <<<<<< wait here
                            commitIsWaiting = !committedRequests.isEmpty();
                            requestsToProcess = queuedRequests.size();
                        }
                    }
                }
 
 
Commit thread
    public void commit(Request request) {
        if (stopped || request == null) {
            return;
        }
        LOG.debug(""Committing request:: {}"", request);
        request.commitRecvTime = Time.currentElapsedTime();
        ServerMetrics.getMetrics().COMMITS_QUEUED.add(1);
        committedRequests.add(request); <<<<<< enqueue messages here
        wakeup();
    }
 
    @SuppressFBWarnings(""NN_NAKED_NOTIFY"")
    private synchronized void wakeup() { <<<<< wakeup call is synchronized
        notifyAll();
    }
 
 
Now lets consider the following scenario
  1. Sync thread reads commitIsWaiting and there are no commits pending.
  2. This thread gets scheduled out
  3. We got a commit request – CommitProcessor thread adds the request to committedRequests and calls wakeup
  4. CommitProcessor goes ahead and does a notifyAll().
  5. Since the sync thread has not reached the wait() yet, there is no one to wake up.
  6. Sync thread gets scheduled back in.
  7. It goes ahead and does a wait() but since there are no other connections or new commit requests no one does a wakeup(). So this thread waits here until the socket is timed out.
     7a. Or if another commit is made where we endup calling notifyAll() which wakes up the waiting thread.
 
I modified the CommitProcessor::run() like this
            do {
                /*
                 * Since requests are placed in the queue before being sent to
                 * the leader, if commitIsWaiting = true, the commit belongs to
                 * the first update operation in the queuedRequests or to a
                 * request from a client on another server (i.e., the order of
                 * the following two lines is important!).
                 */
                    synchronized (this) { <<<<<
                            commitIsWaiting = !committedRequests.isEmpty(); <<<<< moved the queue checks inside the sync block to ensure we don’t have the race condition
                            requestsToProcess = queuedRequests.size();
                            // Avoid sync if we have something to do
                            if (requestsToProcess == 0 && !commitIsWaiting) {
                                    // Waiting for requests to process
                                    while (!stopped && requestsToProcess == 0 && !commitIsWaiting) {
                                            wait();
                                            commitIsWaiting = !committedRequests.isEmpty();
                                            requestsToProcess = queuedRequests.size();
                                    }
                            }
                    }
 
This seems to have fixed the issue. ",,jithingirish,kfirlevari,shralex,symat,,,,,,,,,,,,,,,,"jithin23 opened a new pull request, #1877:
URL: https://github.com/apache/zookeeper/pull/1877

   Zookeeper server can get stuck when it has just one client and the only way it recovers is due to a socket timeout or another client commit request.
   Sync thread reads commitIsWaiting outside of a sync block and acts on this information in a sync block later. The actual status of commitIsWaiting can change between the time where commitIsWaiting is read and acted upon because commit thread updates it outside a sync block. 
   Fix here is to ensure that we read and process commitIsWaiting inside a sync block.


;16/May/22 20:30;githubbot;600","eolivelli commented on PR #1877:
URL: https://github.com/apache/zookeeper/pull/1877#issuecomment-1128109540

   Good catch.
   Do you have some stack traces dump to demonstrate the problem?


;16/May/22 20:34;githubbot;600","symat commented on PR #1877:
URL: https://github.com/apache/zookeeper/pull/1877#issuecomment-1128473595

   I think this race bug was introduced by [ZOOKEEPER-2024](https://issues.apache.org/jira/browse/ZOOKEEPER-2024) in 3.6.0, it would be important to cherrypick this to branch-3.6, branch-3.7, and branch-3.8 too.


;17/May/22 06:40;githubbot;600","eolivelli commented on PR #1877:
URL: https://github.com/apache/zookeeper/pull/1877#issuecomment-1128476660

   @symat can you please merge to all the active branches ?


;17/May/22 06:44;githubbot;600","symat commented on PR #1877:
URL: https://github.com/apache/zookeeper/pull/1877#issuecomment-1128478253

   sure, I'll merge it later today. thanks for the review!


;17/May/22 06:46;githubbot;600","asfgit closed pull request #1877: ZOOKEEPER-4537: Race between SyncThread and CommitProcessor thread
URL: https://github.com/apache/zookeeper/pull/1877


;17/May/22 11:44;githubbot;600","symat commented on PR #1877:
URL: https://github.com/apache/zookeeper/pull/1877#issuecomment-1128769654

   merge is done, thank you @jithin23 for the contribution!


;17/May/22 11:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 17 18:47:50 UTC 2022,,,,,,,,,,"0|z125e8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/May/22 16:41;symat;nice catch!

Thank you for reporting this issue and thanks for your investigation!

Which ZooKeeper version did you face this issue?

(I only had a quick look on the code, but I think this bug is present even on the current master branch);;;","09/May/22 16:46;symat;I think this bug might have been introduced by ZOOKEEPER-2024 (in 3.6.0);;;","09/May/22 17:05;symat;what do you think [~shralex] ? I think you were working on these parts (optimizing the Commit Processor in ZOOKEEPER-2024).

I think the solution from [~jithingirish] looks OK, but I am a bit afraid of the cost of synchronisation. But I'm not sure if this can be avoided.;;;","09/May/22 18:34;shralex;actually [~kfirlevari] was working on 2024. Kfir, can you take a look ?

 ;;;","09/May/22 19:00;jithingirish;I am using 3.6.0 but the bug exists on master branch as well. I was able to repro the issue on 3.8.0 as well. ;;;","09/May/22 19:13;kfirlevari;Nice catch Jithin!
Based on the code that you shared here, your solution looks right to me and should be merged in order to deal with this corner case. 
Specifically, I don't see a reason from the correctness perspective not to call the sync before looking at the queues, given that we already doing it a few lines later. I.e., we're not introducing here a new order between sync operation and reading the queues, so I don't see why calling it earlier will danger the rest of the code, even the parts that you didn't share here.
I don't believe performance is an issue - but If the 1 extra sync cost in terms of performance is noticeable, I guess we can consider avoiding syncs altogether, and move to a busy-wait approach (i.e., use bounded wait instead of unbounded).;;;","13/May/22 15:17;symat;{quote}If the 1 extra sync cost in terms of performance is noticeable, I guess we can consider avoiding syncs altogether, and move to a busy-wait approach (i.e., use bounded wait instead of unbounded).
{quote}
Hmm... I really like this approach...

on the other hand, I never dug deep into this part. And changing to busy-wait approach would require (at least for me) to really follow through the life of these queues in the code. Unfortunately I don't have much time for it right now... So unless someone can spend the time, I propose to go forward with the simpler solution from  [~jithingirish] .

[~jithingirish] , would you like to make a PR with your proposed fix? If you don't have the time for it, I can make one. I just don't want to take the credit from you. ;)

 ;;;","16/May/22 19:17;jithingirish;I will initiate a PR :)  I was running a few more tests in our test deployments and the fix looks good.;;;","16/May/22 20:32;jithingirish;I have initiated the PR;;;","17/May/22 11:46;symat;Issue resolved by pull request 1877
[https://github.com/apache/zookeeper/pull/1877];;;","17/May/22 11:48;symat;I submitted the fix to all active branches (except 3.5, where this issue is not present).

Thank you [~jithingirish] for raising and solving this issue!;;;","17/May/22 18:47;jithingirish;More than happy to contribute ;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper - jackson-databind vulnerability ,ZOOKEEPER-4523,13440583,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,noneblah,noneblah,20/Apr/22 06:35,20/Feb/23 07:08,13/Jul/23 09:08,20/Feb/23 07:08,3.8.0,,,,,,,,,,,,,,,,,,1,,,"Hello, 

According to [https://github.com/hapifhir/hapi-fhir/issues/3467|https://github.com/hapifhir/hapi-fhir/issues/3467] and [https://github.com/advisories/GHSA-57j2-w4cx-62h2] all versions of com.fasterxml.jackson.core:jackson-databind up to version 2.13.2 are vulnerable to CVE-2020-36518.

Would it be possible to update the package in Zookeeper?",,noneblah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Feb 20 07:08:14 UTC 2023,,,,,,,,,,"0|z11mag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Aug/22 13:34;noneblah;Are there any updates on this?;;;","20/Feb/23 07:08;noneblah;Issue is fixed by: https://issues.apache.org/jira/browse/ZOOKEEPER-4644 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
checkstyle:check  is failing,ZOOKEEPER-4516,13438563,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,08/Apr/22 10:22,08/Apr/22 16:53,13/Jul/23 09:08,08/Apr/22 16:51,,,,,,,,,,3.6.4,3.7.1,,,,,,,,0,pull-request-available,,checkstyle:check is failing on branch-3.7 and branch-3.6,,arshad.mohammad,,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request, #1857:
URL: https://github.com/apache/zookeeper/pull/1857

   1. Copied CertificatesToPlayWith.java from master branch as the checkstyle was already fixed there
   2. Corrected import order in ZKUtilTest.java


;08/Apr/22 11:23;githubbot;600","arshadmohammad opened a new pull request, #1858:
URL: https://github.com/apache/zookeeper/pull/1858

   Corrected imports and done simple formatting


;08/Apr/22 11:52;githubbot;600","arshadmohammad commented on PR #1858:
URL: https://github.com/apache/zookeeper/pull/1858#issuecomment-1093084431

   Merged.


;08/Apr/22 16:52;githubbot;600","arshadmohammad closed pull request #1858: ZOOKEEPER-4516: checkstyle:check  is failing
URL: https://github.com/apache/zookeeper/pull/1858


;08/Apr/22 16:52;githubbot;600","arshadmohammad commented on PR #1857:
URL: https://github.com/apache/zookeeper/pull/1857#issuecomment-1093084535

   Merged


;08/Apr/22 16:52;githubbot;600","arshadmohammad closed pull request #1857: ZOOKEEPER-4516: checkstyle:check  is failing
URL: https://github.com/apache/zookeeper/pull/1857


;08/Apr/22 16:52;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Apr 08 16:53:03 UTC 2022,,,,,,,,,,"0|z11a8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/22 11:03;arshad.mohammad;mvn clean install checkstyle:check -DskipTests on branch-3.7 fails with following errors

{noformat}
[ERROR] src\test\java\org\apache\zookeeper\common\CertificatesToPlayWith.java:[564,90] (whitespace) OperatorWrap: '+' should be on a new line.
[ERROR] src\test\java\org\apache\zookeeper\common\CertificatesToPlayWith.java:[565,62] (whitespace) OperatorWrap: '+' should be on a new line.
[ERROR] src\test\java\org\apache\zookeeper\ZKUtilTest.java:[31,1] (imports) ImportOrder: Extra separation in import group before 'org.apache.zookeeper.data.Stat'
................
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.1:check (default-cli) on project zookeeper: You have 438 Checkstyle violations. -> [Help 1]
[ERROR]
{noformat}


;;;","08/Apr/22 11:43;arshad.mohammad;branch-3.6 error

{noformat}
[ERROR] src\test\java\org\apache\zookeeper\KerberosTicketRenewalTest.java:[220,7] (whitespace) WhitespaceAround: 'if' is not followed by whitespace.
[ERROR] src\test\java\org\apache\zookeeper\server\quorum\auth\MiniKdcTest.java:[26,8] (imports) UnusedImports: Unused import: java.util.HashMap
...................
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check (default-cli) on project zookeeper: You have 8 Checkstyle violations. -> [Help 1]

{noformat}
;;;","08/Apr/22 16:51;arshad.mohammad;Issue resolved by pull request 1858
[https://github.com/apache/zookeeper/pull/1858];;;","08/Apr/22 16:53;arshad.mohammad;Thanks [~symat] for the review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZK Cli quit command always logs error,ZOOKEEPER-4515,13438559,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,08/Apr/22 10:18,30/Jan/23 07:57,13/Jul/23 09:08,09/Apr/22 17:44,,,,,,,,,,3.6.4,3.7.1,3.8.1,3.9.0,,,,,,0,pull-request-available,," !image-2022-04-08-15-47-04-325.png! 

* When connection is in closing state, this log warning is entirely useless, change this log to debug.
* When JVM exiting with 0 log info instead of error",,arshad.mohammad,,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request, #1856:
URL: https://github.com/apache/zookeeper/pull/1856

   1. For connection closing state scenario, changed the log level to debug
   2. When JVM exiting with code 0, then logging info instead of error


;08/Apr/22 10:50;githubbot;600","tisonkun commented on code in PR #1856:
URL: https://github.com/apache/zookeeper/pull/1856#discussion_r846131093


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java:
##########
@@ -1284,10 +1284,11 @@ public void run() {
                 } catch (Throwable e) {
                     if (closing) {
                         // closing so this is expected
-                        LOG.warn(
-                            ""An exception was thrown while closing send thread for session 0x{}."",
-                            Long.toHexString(getSessionId()),
-                            e);
+                        if (LOG.isDebugEnabled()) {
+                            LOG.debug(
+                                ""An exception was thrown while closing send thread for session 0x{}."",
+                                Long.toHexString(getSessionId()), e);
+                        }

Review Comment:
   IIUC `LOG.debug` already contains a call to `LOG.isDebugEnabled`.



##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/ServiceUtils.java:
##########
@@ -39,7 +39,14 @@ private ServiceUtils() {
      */
     @SuppressFBWarnings(""DM_EXIT"")
     public static final Consumer<Integer> SYSTEM_EXIT = (code) -> {
-        LOG.error(""Exiting JVM with code {}"", code);

Review Comment:
   I'd prefer to change `LOG_ONLY` below also. Here is my diff:
   
   ```diff
   diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/util/ServiceUtils.java b/zookeeper-server/src/main/java/org/apache/zookeeper/util/ServiceUtils.java
   index 544e13d7f..09c45e93f 100644
   -;08/Apr/22 13:50;githubbot;600","arshadmohammad commented on code in PR #1856:
URL: https://github.com/apache/zookeeper/pull/1856#discussion_r846251275


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java:
##########
@@ -1284,10 +1284,11 @@ public void run() {
                 } catch (Throwable e) {
                     if (closing) {
                         // closing so this is expected
-                        LOG.warn(
-                            ""An exception was thrown while closing send thread for session 0x{}."",
-                            Long.toHexString(getSessionId()),
-                            e);
+                        if (LOG.isDebugEnabled()) {
+                            LOG.debug(
+                                ""An exception was thrown while closing send thread for session 0x{}."",
+                                Long.toHexString(getSessionId()), e);
+                        }

Review Comment:
   It is not a core code flow. So for me it is ok to go either way. 
   I have put debug enable check to void unnecessary toHexString call.
   shall we keep as it is or shall it change it?



;08/Apr/22 15:32;githubbot;600","arshadmohammad commented on code in PR #1856:
URL: https://github.com/apache/zookeeper/pull/1856#discussion_r846294591


##########
zookeeper-server/src/main/java/org/apache/zookeeper/util/ServiceUtils.java:
##########
@@ -39,7 +39,14 @@ private ServiceUtils() {
      */
     @SuppressFBWarnings(""DM_EXIT"")
     public static final Consumer<Integer> SYSTEM_EXIT = (code) -> {
-        LOG.error(""Exiting JVM with code {}"", code);

Review Comment:
   good catch. included it.



;08/Apr/22 16:23;githubbot;600","tisonkun commented on code in PR #1856:
URL: https://github.com/apache/zookeeper/pull/1856#discussion_r846554629


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java:
##########
@@ -1284,10 +1284,11 @@ public void run() {
                 } catch (Throwable e) {
                     if (closing) {
                         // closing so this is expected
-                        LOG.warn(
-                            ""An exception was thrown while closing send thread for session 0x{}."",
-                            Long.toHexString(getSessionId()),
-                            e);
+                        if (LOG.isDebugEnabled()) {
+                            LOG.debug(
+                                ""An exception was thrown while closing send thread for session 0x{}."",
+                                Long.toHexString(getSessionId()), e);
+                        }

Review Comment:
   Thanks for your explanation. Then we can keep as is.



;09/Apr/22 01:03;githubbot;600","eolivelli commented on PR #1856:
URL: https://github.com/apache/zookeeper/pull/1856#issuecomment-1093818549

   Please chery pick to all active branches


;09/Apr/22 08:42;githubbot;600","asfgit closed pull request #1856: ZOOKEEPER-4515: ZK Cli quit command always logs error
URL: https://github.com/apache/zookeeper/pull/1856


;09/Apr/22 17:42;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,ZOOKEEPER-4376,,,,,,,,,,SOLR-15968,,,,"08/Apr/22 10:17;arshad.mohammad;image-2022-04-08-15-47-04-325.png;https://issues.apache.org/jira/secure/attachment/13042152/image-2022-04-08-15-47-04-325.png","08/Apr/22 10:43;arshad.mohammad;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13042155/screenshot-1.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Apr 09 17:47:21 UTC 2022,,,,,,,,,,"0|z11a80:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/22 10:43;arshad.mohammad;After fix:
 !screenshot-1.png! 
;;;","09/Apr/22 17:44;arshad.mohammad;Issue resolved by pull request 1856
[https://github.com/apache/zookeeper/pull/1856];;;","09/Apr/22 17:47;arshad.mohammad;Thanks [~Tison], [~eolivelli] for the review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ClientCnxnSocketNetty throwing NPE,ZOOKEEPER-4514,13438320,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,07/Apr/22 07:57,30/Jan/23 07:57,13/Jul/23 09:08,08/Apr/22 16:43,,,,,,,,,,3.5.10,3.6.4,3.7.1,3.8.1,3.9.0,,,,,0,pull-request-available,,"ClientCnxnSocketNetty throwing NPE. This mainly happens when any of the server is in restarting state and client tries to connect.

 !image-2022-04-07-13-27-13-068.png! ",,arshad.mohammad,,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request, #1854:
URL: https://github.com/apache/zookeeper/pull/1854

   Moved channel object null check to sendPkt method to cover all calling scenarios


;07/Apr/22 10:17;githubbot;600","sonatype-lift[bot] commented on code in PR #1854:
URL: https://github.com/apache/zookeeper/pull/1854#discussion_r844976406


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:
##########
@@ -374,9 +377,6 @@ private void doWrite(Queue<Packet> pendingQueue, Packet p, ClientCnxn cnxn) {
 
     @Override
     void sendPacket(ClientCnxn.Packet p) throws IOException {
-        if (channel == null) {
-            throw new IOException(""channel has been closed"");
-        }
         sendPktAndFlush(p);

Review Comment:
   *THREAD_SAFETY_VIOLATION:*  Read/Write race. Non-private method `ClientCnxnSocketNetty.sendPacket(...)` indirectly reads without synchronization from `this.channel`. Potentially races with write in method `ClientCnxnSocketNetty.cleanup()`.
    Reporting because another access to the same memory occurs on a background thread, although this access may not.
   
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)



;07/Apr/22 10:29;githubbot;600","arshadmohammad commented on code in PR #1854:
URL: https://github.com/apache/zookeeper/pull/1854#discussion_r845018961


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:
##########
@@ -374,9 +377,6 @@ private void doWrite(Queue<Packet> pendingQueue, Packet p, ClientCnxn cnxn) {
 
     @Override
     void sendPacket(ClientCnxn.Packet p) throws IOException {
-        if (channel == null) {
-            throw new IOException(""channel has been closed"");
-        }
         sendPktAndFlush(p);

Review Comment:
   @sonatype-lift ignore



;07/Apr/22 11:23;githubbot;600","sonatype-lift[bot] commented on code in PR #1854:
URL: https://github.com/apache/zookeeper/pull/1854#discussion_r845019001


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:
##########
@@ -374,9 +377,6 @@ private void doWrite(Queue<Packet> pendingQueue, Packet p, ClientCnxn cnxn) {
 
     @Override
     void sendPacket(ClientCnxn.Packet p) throws IOException {
-        if (channel == null) {
-            throw new IOException(""channel has been closed"");
-        }
         sendPktAndFlush(p);

Review Comment:
   I've recorded this as ignored for this pull request. If you change your mind, just comment `@sonatype-lift unignore`.



;07/Apr/22 11:23;githubbot;600","arshadmohammad commented on code in PR #1854:
URL: https://github.com/apache/zookeeper/pull/1854#discussion_r845019231


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java:
##########
@@ -374,9 +377,6 @@ private void doWrite(Queue<Packet> pendingQueue, Packet p, ClientCnxn cnxn) {
 
     @Override
     void sendPacket(ClientCnxn.Packet p) throws IOException {
-        if (channel == null) {
-            throw new IOException(""channel has been closed"");
-        }
         sendPktAndFlush(p);

Review Comment:
   There is no new code added which is related to THREAD_SAFETY_VIOLATION



;07/Apr/22 11:23;githubbot;600","arshadmohammad commented on PR #1854:
URL: https://github.com/apache/zookeeper/pull/1854#issuecomment-1092735104

   Thanks @symat for the review. I will merge it.


;08/Apr/22 10:52;githubbot;600","asfgit closed pull request #1854: ZOOKEEPER-4514: ClientCnxnSocketNetty throwing NPE
URL: https://github.com/apache/zookeeper/pull/1854


;08/Apr/22 16:39;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Apr/22 07:57;arshad.mohammad;image-2022-04-07-13-27-13-068.png;https://issues.apache.org/jira/secure/attachment/13042109/image-2022-04-07-13-27-13-068.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Apr 08 16:44:52 UTC 2022,,,,,,,,,,"0|z118qw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Apr/22 10:10;arshad.mohammad;NPE is thrown because channel object is null in ClientCnxnSocketNetty#sendPkt(Packet p, boolean doFlush) method.
We should do null check same like the null check done in sendPacket(ClientCnxn.Packet p) method. 

As sendPacket is delegating the call to sendPkt method, better we can move the null check to sendPkt method to handle all scenarios.;;;","08/Apr/22 16:44;arshad.mohammad;Thanks [~symat] for the review.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky test: FileTxnSnapLogMetricsTest.testFileTxnSnapLogMetrics,ZOOKEEPER-4511,13437878,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,kezhuw,kezhuw,kezhuw,05/Apr/22 13:27,15/Feb/23 02:25,13/Jul/23 09:08,24/Jun/22 13:44,,,,,,,,,,3.7.2,3.8.1,3.9.0,,,tests,,,,0,pull-request-available,,"* https://github.com/kezhuw/zookeeper/runs/5830250287?check_suite_focus=true
* https://github.com/apache/zookeeper/runs/5759834147?check_suite_focus=true


{code:none}
org.opentest4j.AssertionFailedError: expected: <1> but was: <0>
	at org.apache.zookeeper.server.persistence.FileTxnSnapLogMetricsTest.testFileTxnSnapLogMetrics(FileTxnSnapLogMetricsTest.java:86)
{code}

This test tries to write some txns to trigger snapshot with remaning txns in txn log. But snapshot taking is asynchronous, thus all txns could be written to snapshot. So in restarting, it is possible that no txns to load after snapshot restored. This will fail assertion.",,kezhuw,maoling,symat,,,,,,,,,,,,,,,,,"kezhuw opened a new pull request, #1852:
URL: https://github.com/apache/zookeeper/pull/1852

   This test writes txns to trigger snapshot and expects some txns remain
   in txn log. But snapshot taking is asynchronous, thus all txns could be
   written to snapshot. So in restarting, it is possible that no txns to
   load after snapshot restored. This will fail assertion.
   
   This commit solves this by disable automic snapshot taking by
   `SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE)`.
   


;05/Apr/22 13:57;githubbot;600","eolivelli commented on code in PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#discussion_r843073437


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogMetricsTest.java:
##########
@@ -43,38 +40,20 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLogMetricsTest.class);
 
-    CountDownLatch allCreatedLatch;
-
-    private class MockWatcher implements Watcher {
-
-        @Override
-        public void process(WatchedEvent e) {
-            LOG.info(""all nodes created"");
-            allCreatedLatch.countDown();
-        }
-
-    }
-
     @Test
     public void testFileTxnSnapLogMetrics() throws Exception {
-        SyncRequestProcessor.setSnapCount(100);
+        // disable automatic snapshot taking to leave writes in txn log
+        SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE);
 

Review Comment:
   We should reset this in a finally block.
   That was a pre existing problem 



;05/Apr/22 17:09;githubbot;600","eolivelli commented on code in PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#discussion_r843073938


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogMetricsTest.java:
##########
@@ -43,38 +40,20 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLogMetricsTest.class);
 
-    CountDownLatch allCreatedLatch;
-
-    private class MockWatcher implements Watcher {
-
-        @Override
-        public void process(WatchedEvent e) {
-            LOG.info(""all nodes created"");
-            allCreatedLatch.countDown();
-        }
-
-    }
-
     @Test
     public void testFileTxnSnapLogMetrics() throws Exception {
-        SyncRequestProcessor.setSnapCount(100);
+        // disable automatic snapshot taking to leave writes in txn log
+        SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE);
 
         QuorumUtil util = new QuorumUtil(1);
         util.startAll();
 
-        allCreatedLatch = new CountDownLatch(1);
-
         byte[] data = new byte[500];
-        // make sure a snapshot is taken and some txns are not in a snapshot
         ZooKeeper zk = ClientBase.createZKClient(util.getConnString());
         for (int i = 0; i < 150; i++) {
             zk.create(""/path"" + i, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
         }
 
-        if (null == zk.exists(""/path149"", new MockWatcher())) {

Review Comment:
   Why are we removing this part?



;05/Apr/22 17:09;githubbot;600","kezhuw commented on code in PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#discussion_r843373366


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogMetricsTest.java:
##########
@@ -43,38 +40,20 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLogMetricsTest.class);
 
-    CountDownLatch allCreatedLatch;
-
-    private class MockWatcher implements Watcher {
-
-        @Override
-        public void process(WatchedEvent e) {
-            LOG.info(""all nodes created"");
-            allCreatedLatch.countDown();
-        }
-
-    }
-
     @Test
     public void testFileTxnSnapLogMetrics() throws Exception {
-        SyncRequestProcessor.setSnapCount(100);
+        // disable automatic snapshot taking to leave writes in txn log
+        SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE);
 
         QuorumUtil util = new QuorumUtil(1);
         util.startAll();
 
-        allCreatedLatch = new CountDownLatch(1);
-
         byte[] data = new byte[500];
-        // make sure a snapshot is taken and some txns are not in a snapshot
         ZooKeeper zk = ClientBase.createZKClient(util.getConnString());
         for (int i = 0; i < 150; i++) {
             zk.create(""/path"" + i, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
         }
 
-        if (null == zk.exists(""/path149"", new MockWatcher())) {

Review Comment:
   `zk.create` above is synchronous. `zk.exists` will return non null stat if I understand correct.



;06/Apr/22 00:52;githubbot;600","kezhuw commented on code in PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#discussion_r843376225


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogMetricsTest.java:
##########
@@ -43,38 +40,20 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLogMetricsTest.class);
 
-    CountDownLatch allCreatedLatch;
-
-    private class MockWatcher implements Watcher {
-
-        @Override
-        public void process(WatchedEvent e) {
-            LOG.info(""all nodes created"");
-            allCreatedLatch.countDown();
-        }
-
-    }
-
     @Test
     public void testFileTxnSnapLogMetrics() throws Exception {
-        SyncRequestProcessor.setSnapCount(100);
+        // disable automatic snapshot taking to leave writes in txn log
+        SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE);
 

Review Comment:
   Not sure, but I think almost all tests run and should run in dedicated jvm(aka. false `reuseForks` in `zookeeper-server` module). This test is not an exception. Restoring a primitive value has no means in this case.



;06/Apr/22 01:00;githubbot;600","eolivelli commented on PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#issuecomment-1160388021

   @maoling @symat @ztzg PTAL


;20/Jun/22 12:28;githubbot;600","symat commented on code in PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#discussion_r901700884


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogMetricsTest.java:
##########
@@ -43,38 +40,20 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLogMetricsTest.class);
 
-    CountDownLatch allCreatedLatch;
-
-    private class MockWatcher implements Watcher {
-
-        @Override
-        public void process(WatchedEvent e) {
-            LOG.info(""all nodes created"");
-            allCreatedLatch.countDown();
-        }
-
-    }
-
     @Test
     public void testFileTxnSnapLogMetrics() throws Exception {
-        SyncRequestProcessor.setSnapCount(100);
+        // disable automatic snapshot taking to leave writes in txn log
+        SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE);
 

Review Comment:
   I'm not exactly sure how we run the tests... sometimes I even run them in IntelliJ during development. I think usually setting back all ""static stuff"" we changed in a test is a good practice.



;20/Jun/22 14:06;githubbot;600","kezhuw commented on PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#issuecomment-1161553240

   @symat I think you are right about what the test try to express. But the original test does not assert that ""we have a snapshot""(aka. ""cnt_snapshottime""). That is why this fix pass. I think we could utilize `ZKTestCase.waitFor` to wait a snapshot and `FileSnap.close` to logs more txns after snapshot paused. I will push a fixup commit soon.


;21/Jun/22 10:20;githubbot;600","kezhuw commented on code in PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#discussion_r902455844


##########
zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogMetricsTest.java:
##########
@@ -43,38 +40,20 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(FileTxnSnapLogMetricsTest.class);
 
-    CountDownLatch allCreatedLatch;
-
-    private class MockWatcher implements Watcher {
-
-        @Override
-        public void process(WatchedEvent e) {
-            LOG.info(""all nodes created"");
-            allCreatedLatch.countDown();
-        }
-
-    }
-
     @Test
     public void testFileTxnSnapLogMetrics() throws Exception {
-        SyncRequestProcessor.setSnapCount(100);
+        // disable automatic snapshot taking to leave writes in txn log
+        SyncRequestProcessor.setSnapCount(Integer.MAX_VALUE);
 

Review Comment:
   Cleanup is always a complicated problem. No ones run in identical environment. 
   
   > setting back all ""static stuff"" we changed in a test is a good practice.
   
   It is actually hard to follow. Given `SyncRequestProcessor.setSnapCount` as an example, there are 20+ usages in test, only `RecoveryTest.testRecovery` restores.
   
   Personally, I treat all tests as oneshot and resort to junit's `@Rule`(eg. `@TempDir`) or similars to cleanup persistent resources.
   
   Anyway, I will add a `@AfterEach` to restore it back in next fixup. 😄 



;21/Jun/22 10:43;githubbot;600","kezhuw commented on PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#issuecomment-1162954259

   Ci fails due to unrelated flaky test [ZOOKEEPER-4308](https://issues.apache.org/jira/browse/ZOOKEEPER-4308)(#1851).


;22/Jun/22 11:00;githubbot;600","symat commented on PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#issuecomment-1164039781

   I really like your solution @kezhuw - you improved this test a lot. Thanks!
   
   I think we are good to merge this. We should have the flaky test fixed in older branches too, if the patch applies smoothly. I'm a bit overloaded today. @eolivelli feel free to merge this. Otherwise I'll try to do it tomorrow. Thanks!!


;23/Jun/22 07:13;githubbot;600","asfgit closed pull request #1852: ZOOKEEPER-4511: Fix flaky test FileTxnSnapLogMetricsTest.testFileTxnSnapLogMetrics
URL: https://github.com/apache/zookeeper/pull/1852


;24/Jun/22 13:42;githubbot;600","symat commented on PR #1852:
URL: https://github.com/apache/zookeeper/pull/1852#issuecomment-1165591879

   thanks @kezhuw for fixing this test!!
   I pushed it to master, branch-3.8 and branch-3.7. The cherry-pick on branch-3.6 wasn't clean, so we will need a separate PR there, if we want to push this to branch-3.6.


;24/Jun/22 13:45;githubbot;600","kezhuw opened a new pull request, #1900:
URL: https://github.com/apache/zookeeper/pull/1900

   This test writes txns to trigger snapshot and expects some txns remain
   in txn log. But snapshot taking is asynchronous, thus all txns could be
   written to snapshot. So in restarting, it is possible that no txns to
   load after snapshot restored. This will fail assertion.
   
   This commit solves this by:
   * Uses `ZKTestCase.waitFor` to wait for snapshot to be taken.
   * Logs more txns after snapshot paused(aka. `FileSnap.close`).
   
   In addition, this commit adds assertions for metric `SNAPSHOT_TIME`.
   
   Author: Kezhu Wang <kezhuw@gmail.com>
   
   Reviewers: Enrico Olivelli <eolivelli@apache.org>, Mate Szalay-Beko <symat@apache.org>
   
   Closes #1852 from kezhuw/ZOOKEEPER-4511-FileTxnSnapLogMetricsTest-testFileTxnSnapLogMetrics
   
   (cherry picked from commit b34e1716e8fa430690252288f2e15c38fe65f325)


;29/Jun/22 15:01;githubbot;600","kezhuw commented on PR #1900:
URL: https://github.com/apache/zookeeper/pull/1900#issuecomment-1170094577

   @eolivelli @symat Seems that travis is [not enabled](https://github.com/apache/zookeeper/blob/branch-3.6/.travis.yml) for branch 3.6 ?


;29/Jun/22 15:02;githubbot;600","symat commented on PR #1900:
URL: https://github.com/apache/zookeeper/pull/1900#issuecomment-1180060316

   > Seems that travis is [not enabled](https://github.com/apache/zookeeper/blob/branch-3.6/.travis.yml) for branch 3.6 ?
   
   yeah, it looks the case... we should fix this.
   although I don't think it would block this PR.


;11/Jul/22 07:29;githubbot;600","kezhuw commented on PR #1900:
URL: https://github.com/apache/zookeeper/pull/1900#issuecomment-1430662400

   3.6 is end of life.


;15/Feb/23 02:25;githubbot;600","kezhuw closed pull request #1900: ZOOKEEPER-4511: Fix flaky test FileTxnSnapLogMetricsTest.testFileTxnSnapLogMetrics
URL: https://github.com/apache/zookeeper/pull/1900


;15/Feb/23 02:25;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jun 24 13:44:04 UTC 2022,,,,,,,,,,"0|z1162o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Jun/22 07:48;maoling;URL: [https://github.com/apache/zookeeper/runs/6961077060?check_suite_focus=true.] Let's fix this test;;;","24/Jun/22 13:44;symat;thanks [~kezhuw] for fixing this issue!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CVE-2020-36518 - Upgrade jackson databind to 2.13.2.1,ZOOKEEPER-4505,13436427,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,edwin092,edwin092,29/Mar/22 12:43,30/Jan/23 07:57,13/Jul/23 09:08,31/Mar/22 18:24,,,,,,,,,,3.6.4,3.7.1,3.8.1,3.9.0,,,,,,0,pull-request-available,security,"*CVE-2020-36518* vulnerability affects jackson-databind in Zookeeper (see [https://github.com/advisories/GHSA-57j2-w4cx-62h2]).

Upgrading to jackson-databind version *2.13.2.1* should address this issue.",,arshad.mohammad,edwin092,,,,,,,,,,,,,,,,,,"edwin092 opened a new pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842


   CVE-2020-36518 vulnerability affects jackson-databind in Zookeeper (see https://github.com/advisories/GHSA-57j2-w4cx-62h2).
   
   Upgrading to jackson-databind version 2.13.2.1 should address this issue.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/22 12:55;githubbot;600","maoling commented on pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842#issuecomment-1082652848


   - If no other concerns, I'll merge it at this weekend(04-03).
   - This PR can apply to branch 3.7 and 3.8 well except branch-3.6, please create another PR @edwin092 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 05:59;githubbot;600","edwin092 commented on pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842#issuecomment-1082679344


   > * If no other concerns, I'll merge it at this weekend(04-03).
   > * This PR can apply to branch 3.7 and 3.8 well except branch-3.6, please create another PR @edwin092
   
   Sure thing! I'll raise the 2 PRs.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 06:33;githubbot;600","edwin092 opened a new pull request #1844:
URL: https://github.com/apache/zookeeper/pull/1844


   CVE-2020-36518 vulnerability affects jackson-databind in Zookeeper (see https://github.com/advisories/GHSA-57j2-w4cx-62h2).
   
   Upgrading to jackson-databind version 2.13.2.1 should address this issue.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 06:36;githubbot;600","edwin092 opened a new pull request #1845:
URL: https://github.com/apache/zookeeper/pull/1845


   CVE-2020-36518 vulnerability affects jackson-databind in Zookeeper (see https://github.com/advisories/GHSA-57j2-w4cx-62h2).
   
   Upgrading to jackson-databind version 2.13.2.1 should address this issue.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 06:39;githubbot;600","eolivelli commented on pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842#issuecomment-1082907740


   > If no other concerns, I'll merge it at this weekend(04-03).
   
   There are already 2 binding +1s, so you can merge it now


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 10:26;githubbot;600","arshadmohammad commented on pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842#issuecomment-1083503735


   jackson-databind-2.13.2.2 is released but I don't see any manful change in this release compared to 2.13.2.1 . we can go ahead with jackson-databind-2.13.2.1 release itself.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 18:54;githubbot;600","asfgit closed pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 18:57;githubbot;600","arshadmohammad commented on pull request #1842:
URL: https://github.com/apache/zookeeper/pull/1842#issuecomment-1083513393


   Merged to master, branch-3.8 and branch-3.7. @edwin092 please raise PR on branch-3.6


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 19:02;githubbot;600","arshadmohammad commented on pull request #1845:
URL: https://github.com/apache/zookeeper/pull/1845#issuecomment-1083514888


   (https://github.com/apache/zookeeper/pull/1842) was merged to branch-3.8 also


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 19:03;githubbot;600","arshadmohammad closed pull request #1845:
URL: https://github.com/apache/zookeeper/pull/1845


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 19:03;githubbot;600","arshadmohammad commented on pull request #1844:
URL: https://github.com/apache/zookeeper/pull/1844#issuecomment-1083515315


   (https://github.com/apache/zookeeper/pull/1842) was merged to branch-3.7 also


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 19:04;githubbot;600","arshadmohammad closed pull request #1844:
URL: https://github.com/apache/zookeeper/pull/1844


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 19:04;githubbot;600","edwin092 opened a new pull request #1846:
URL: https://github.com/apache/zookeeper/pull/1846


   CVE-2020-36518 vulnerability affects jackson-databind in Zookeeper (see https://github.com/advisories/GHSA-57j2-w4cx-62h2).
   
   Upgrading to jackson-databind version 2.13.2.1 should address this issue.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/22 06:25;githubbot;600","arshadmohammad closed pull request #1846:
URL: https://github.com/apache/zookeeper/pull/1846


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/22 18:30;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Mar 31 18:24:08 UTC 2022,,,,,,,,,,"0|z10xk0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Mar/22 12:55;edwin092;https://github.com/apache/zookeeper/pull/1842;;;","31/Mar/22 18:24;arshad.mohammad;Issue resolved by pull request 1846
[https://github.com/apache/zookeeper/pull/1846];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZKUtil#deleteRecursive causing deadlock in HDFS HA functionality,ZOOKEEPER-4504,13436389,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,29/Mar/22 10:01,30/Jan/23 07:57,13/Jul/23 09:08,06/Apr/22 08:29,,,,,,,,,,3.6.4,3.7.1,3.8.1,3.9.0,,,,,,0,pull-request-available,,"*Problem and Analysis:*
After integrating ZooKeeper 3.6.3 we observed deadlock in HDFS HA functionality as shown in below thread dumps.
{code:java}
""main-EventThread"" #33 daemon prio=5 os_prio=0 tid=0x00007f9c017f1000 nid=0x101b waiting for monitor entry [0x00007f9bda8a6000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.hadoop.ha.ActiveStandbyElector.processWatchEvent(ActiveStandbyElector.java:603)
	- waiting to lock <0x00000000c17986c0> (a org.apache.hadoop.ha.ActiveStandbyElector)
	at org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef.process(ActiveStandbyElector.java:1193)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:626)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:582)
{code}
{code:java}
""main"" #1 prio=5 os_prio=0 tid=0x00007f9c00060000 nid=0xea3 waiting on condition [0x00007f9c06404000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00000000c1b383c8> (a java.util.concurrent.Semaphore$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:838)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:999)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1306)
	at java.util.concurrent.Semaphore.acquire(Semaphore.java:467)
	at org.apache.zookeeper.ZKUtil.deleteInBatch(ZKUtil.java:122)
	at org.apache.zookeeper.ZKUtil.deleteRecursive(ZKUtil.java:64)
	at org.apache.zookeeper.ZKUtil.deleteRecursive(ZKUtil.java:76)
	at org.apache.hadoop.ha.ActiveStandbyElector$1.run(ActiveStandbyElector.java:386)
	at org.apache.hadoop.ha.ActiveStandbyElector$1.run(ActiveStandbyElector.java:383)
	at org.apache.hadoop.ha.ActiveStandbyElector.zkDoWithRetries(ActiveStandbyElector.java:1103)
	at org.apache.hadoop.ha.ActiveStandbyElector.zkDoWithRetries(ActiveStandbyElector.java:1095)
	at org.apache.hadoop.ha.ActiveStandbyElector.clearParentZNode(ActiveStandbyElector.java:383)
	- locked <0x00000000c17986c0> (a org.apache.hadoop.ha.ActiveStandbyElector)
	at org.apache.hadoop.ha.ZKFailoverController.formatZK(ZKFailoverController.java:290)
	at org.apache.hadoop.ha.ZKFailoverController.doRun(ZKFailoverController.java:227)
	at org.apache.hadoop.ha.ZKFailoverController.access$000(ZKFailoverController.java:66)
	at org.apache.hadoop.ha.ZKFailoverController$1.run(ZKFailoverController.java:186)
	at org.apache.hadoop.ha.ZKFailoverController$1.run(ZKFailoverController.java:182)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:360)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1741)
	at org.apache.hadoop.security.SecurityUtil.doAsLoginUserOrFatal(SecurityUtil.java:498)
	at org.apache.hadoop.ha.ZKFailoverController.run(ZKFailoverController.java:182)
	at org.apache.hadoop.hdfs.tools.DFSZKFailoverController.main(DFSZKFailoverController.java:220)
{code}
org.apache.hadoop.ha.ActiveStandbyElector#clearParentZNode is instance synchronized and calls ZKUtil.deleteRecursive(zk, pathRoot)

ZKUtil.deleteRecursive is making async delete API call with MultiCallback as it callback.
As processWatchEvent is being processed, pathRoot or one of the child paths must have set watcher for delete notification.

When delete API is called, notification comes first to client then the actual delete response.
In this case both notification and delete response are processed through callback and through common waitingEvents queue one by one.

First notification is processed, but it cannot complete as it cannot take lock on processWatchEvent() method as lock is already taken by another thread while calling clearParentZNode()
As delete notification cannot be processed, MultiCallback is not taken from queue for processing. It stays there in the queue forever.

 

*Why this problem was not happening with earlier versions (3.5.x)?*

In earlier ZK versions, ZKUtil.deleteRecursive was using sync delete API. So delete response was processed directly not though the callback. 
Sot both clearParentZNode and processWatchEvent were completing independently. 


*Proposed Fix:*
There are two approaches to fix this problem. 
1. We can fix the problem in HDFS, modify the HDFS code to avoid the deadlock. But we may get similar bugs in other projects.
2. Fix the problem in ZK. Make the API behavior same as the old behavior(use sync API to delete the ZK node) and provide new overloaded API with new behavior(use async API to delete the ZK node)

I propose to fix the problem with 2nd approach.",,arshad.mohammad,ctubbsii,eolivelli,symat,tamaas,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1843:
URL: https://github.com/apache/zookeeper/pull/1843


   Make ZKUtil#deleteRecursive API fully compatible with older versions


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/22 16:57;githubbot;600","eolivelli commented on PR #1843:
URL: https://github.com/apache/zookeeper/pull/1843#issuecomment-1089246829

   Do we have test cases that cover the two modes? Batch = 0 and batch > 0?


;05/Apr/22 19:42;githubbot;600","eolivelli commented on PR #1843:
URL: https://github.com/apache/zookeeper/pull/1843#issuecomment-1089897760

   we should cherry-pick this to all the active branches (3.6, 3.7, 3.8)


;06/Apr/22 07:04;githubbot;600","asfgit closed pull request #1843: ZOOKEEPER-4504: ZKUtil#deleteRecursive causing deadlock in HDFS HA functionality
URL: https://github.com/apache/zookeeper/pull/1843


;06/Apr/22 07:57;githubbot;600","arshadmohammad commented on PR #1843:
URL: https://github.com/apache/zookeeper/pull/1843#issuecomment-1089994744

   Thanks @eolivelli, @symat for the reviews. Merged to master, branch-3.8, branch-3.7 and branch-3.6


;06/Apr/22 08:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Apr 06 08:32:36 UTC 2022,,,,,,,,,,"0|z10xbk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Mar/22 11:01;eolivelli;{noformat}
2. Fix the problem in ZK. Make the API behavior same as the old behavior(use sync API to delete the ZK node) and provide new overloaded API with new behavior(use async API to delete the ZK node){noformat}
Makes sense to me.

We should then cut a release, it looks like a bad regression

 ;;;","29/Mar/22 11:02;eolivelli;are you sure that the problem is not about the fact that we have this semaphore ? 
java.util.concurrent.Semaphore.acquire(Semaphore.java:467)
probably the number of permits is too low;;;","29/Mar/22 11:39;arshad.mohammad;yes, I am sure problem is not because of low value of rateLimit. If it was because of low concurrency, call would have taken bit longer but not stuck forever. Also the call was not deleting a lot of znode, so there was no need to submit multiple batches, one batch was sufficient. ;;;","29/Mar/22 15:06;ctubbsii;I agree the behavior should be fixed (option 2), but before creating the async API, it would be good to ensure it isn't vulnerable to the same deadlock. Can an async version be created that avoids the deadlock? It's not clear from the discussion above what the actual cause was.

The above description of the issue implied that a fix could be applied to HDFS to avoid the issue there (option 1). If there is a known workaround with the existing buggy version, it would be great to document that here, for anybody using the existing version.;;;","29/Mar/22 16:57;arshad.mohammad;There is no need to create new sync or asyc API. There was already one attempt in ZOOKEEPER-3763 to make deleteRecursive API compatible to older version. but that patch missed changing  delete api invocation from async to sync. In this jira we can handle that part and make deleteRecursive API fully compatible with older versions

bq. It's not clear from the discussion above what the actual cause was.
Please refer the analysis along with the hdfs code, hope that will give better clarity on the root cause.  


;;;","29/Mar/22 17:00;ctubbsii;""Please refer the analysis along with the hdfs code, hope that will give better clarity on the root cause.""

Which analysis, specifically? Which hdfs code, specifically? If the root cause is known, can somebody provide a brief summary here for context? I just want to make sure to avoid the issue in my own projects.;;;","29/Mar/22 17:10;arshad.mohammad;Analysis is put into the issue description, hdfs code org.apache.hadoop.ha.ActiveStandbyElector;;;","29/Mar/22 17:55;ctubbsii;Okay yeah, so I've read that, but sorry, it's still not entirely clear. From the description, it seems like this problem is either caused by a poorly written callback that synchronizes in a way it shouldn't. Or that this ZK delete function synchronizes on the callback instance when it shouldn't. I'm looking for clarity, as a user of ZK, on what the right thing to do is in general, and what should be avoided in order to avoid similar problems as this bug. The code and analysis of this specific manifestation is useful for the developers to troubleshoot the problem, but it's not very helpful for a user who is just trying to understand the high level view in order to avoid encountering a similar issue. I'm looking for the high level summary, so I know what to avoid as a user of the ZK API.;;;","05/Apr/22 08:29;arshad.mohammad;Hi [~ctubbsii]
I have added few more details in description, Pls have a look.
bq. It seems like this problem is either caused by a poorly written callback that synchronizes in a way it shouldn't.
I observed this issue when I upgraded from zk 3.5.6 to zk 3.6.3 in my cluster, HDFS code remained same before and after upgrade. So at high level it is not an issue of poorly written callback. It is an issue of impact of changed behavior in ZKUtil.deleteRecursive API.

Also please have a look on the proposed change in the PR. May be it is helpful in understanding the context 



;;;","06/Apr/22 08:29;arshad.mohammad;Issue resolved by pull request 1843
[https://github.com/apache/zookeeper/pull/1843];;;","06/Apr/22 08:32;arshad.mohammad;Thanks [~eolivelli] and [~symat] for the reviews.
Merged to master, branch-3.8, branch-3.7 and branch-3.6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Single Kerberos ticket renewal failure can prevent all future renewals since Java 9,ZOOKEEPER-4477,13430119,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,symat,vgrivel,vgrivel,23/Feb/22 07:25,30/Jan/23 07:57,13/Jul/23 09:08,01/Mar/22 15:41,3.5.9,3.6.3,3.7.0,,,,,,,3.5.10,3.6.4,3.7.1,3.8.1,3.9.0,kerberos,,,,0,pull-request-available,,"Zookeeper refresh thread for Kerberos have the same problem in the reLogin() [https://github.com/apache/zookeeper/blob/release-3.5.5/zookeeper-server/src/main/java/org/apache/zookeeper/Login.java#L413]  function as describe in https://issues.apache.org/jira/browse/KAFKA-12730
{quote}The refresh thread for Kerberos performs re-login by logging out and then logging in again. If login fails, we retry after a backoff. Every iteration of the loop performs loginContext.logout() and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to work, but from Java 9 onwards, this results in a NullPointerException due to [https://bugs.openjdk.java.net/browse/JDK-8173069]. We should check if logout is required before attempting logout.
{quote}
 

A NPE is throw if multiple logout() is invoke multiple times: 
{code:java}
2022-02-14 18:38:11,899 ERROR org.apache.zookeeper.Login: Failed to refresh TGT: refresh thread exiting now.
javax.security.auth.login.LoginException: java.lang.NullPointerException: invalid null input(s)
    at java.base/java.util.Objects.requireNonNull(Objects.java:246)
    at java.base/javax.security.auth.Subject$SecureSet.remove(Subject.java:1172)
    at java.base/java.util.Collections$SynchronizedCollection.remove(Collections.java:2043)
    at jdk.security.auth/com.sun.security.auth.module.Krb5LoginModule.logout(Krb5LoginModule.java:1202)
    at java.base/javax.security.auth.login.LoginContext.invoke(LoginContext.java:732)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:665)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:663)
    at java.base/java.security.AccessController.doPrivileged(Native Method)
    at java.base/javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:663)
    at java.base/javax.security.auth.login.LoginContext.logout(LoginContext.java:613)
    at org.apache.zookeeper.Login.reLogin(Login.java:413)
    at org.apache.zookeeper.Login.access$500(Login.java:49)
    at org.apache.zookeeper.Login$1.run(Login.java:240)
    at java.base/java.lang.Thread.run(Thread.java:834)
    at java.base/javax.security.auth.login.LoginContext.invoke(LoginContext.java:821)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:665)
    at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:663)
    at java.base/java.security.AccessController.doPrivileged(Native Method)
    at java.base/javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:663)
    at java.base/javax.security.auth.login.LoginContext.logout(LoginContext.java:613)
    at org.apache.zookeeper.Login.reLogin(Login.java:413)
    at org.apache.zookeeper.Login.access$500(Login.java:49)
    at org.apache.zookeeper.Login$1.run(Login.java:240)
    at java.base/java.lang.Thread.run(Thread.java:834) {code}",,elserj,eolivelli,symat,vgrivel,zhangzs,,,,,,,,,,,,,,,"symat opened a new pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828


   This bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.
   
   Our Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If
   login fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()
   and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to
   work in older Java versions, but from Java 9 onwards, this results in a NullPointerException due
   to https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before
   attempting logout.
   
   I fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to
   reproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()
   which (before the fix) failed with Java13 but succeeded with Java8.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:17;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1051042297


   I plan to cherry-pick this to all active branches. (expecting that we will need some minor change on branch-3.5, due to the different JUnit version)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:19;githubbot;600","eolivelli commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814962149



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,271 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  public static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {

Review comment:
       We are missing to clear the Jaas system properties 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:34;githubbot;600","symat commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814965484



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,271 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  public static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {

Review comment:
       yes, we clear the whole ""testTempDir"", which contains the jaas config file and also a subfolder for the current KDC cluster. I'll add a comment to clarify.
   (and the testTempDir is created with the standard ""ClientBase.createTmpDir();"" method)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:38;githubbot;600","eolivelli commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814974800



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,273 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented
+ * in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  private static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {
+    System.clearProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY);
+    stopMiniKdc();
+    if (testTempDir != null) {
+      // the testTempDir contains the jaas config file and also the
+      // working folder of the currently running KDC server
+      FileUtils.deleteQuietly(testTempDir);
+    }
+  }
+
+  @AfterEach
+  public void tearDownTest() throws Exception {
+    if (login != null) {
+      login.shutdown();
+      login.logout();
+    }
+  }
+
+
+  /**
+   * We extend the regular Login class to be able to properly control the
+   * ""sleeping"" between the retry attempts of ticket refresh actions.
+   */
+  private static class TestableKerberosLogin extends Login {
+
+    private AtomicBoolean refreshFailed = new AtomicBoolean(false);
+    private CountDownLatch continueRefreshThread = new CountDownLatch(1);
+
+    public TestableKerberosLogin() throws LoginException {
+      super(JAAS_CONFIG_SECTION, (callbacks) -> {}, new ZKConfig());
+    }
+
+    @Override
+    protected void sleepBeforeRetryFailedRefresh() throws InterruptedException {
+      refreshFailed.set(true);
+      continueRefreshThread.await(10, TimeUnit.SECONDS);
+    }
+
+    public void assertRefreshFailsEventually(Duration timeout) {
+      assertEventually(timeout, () -> refreshFailed.get());
+    }
+
+    public void continueWithRetryAfterFailedRefresh() {
+      continueRefreshThread.countDown();
+    }
+  }
+
+
+  @Test
+  public void shouldLoginUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  @Test
+  public void shouldRenewTicketUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    long initialLoginTime = login.getLastLogin();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+    assertTrue(initialLoginTime < login.getLastLogin());
+  }
+
+
+  @Test
+  public void shouldRecoverIfKerberosNotAvailableForSomeTime() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    stopMiniKdc();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    // the very next ticket renewal should fail (as KDC is offline)
+    login.assertRefreshFailsEventually(Duration.ofSeconds(5));
+
+    // now the ticket thread is ""sleeping"", it will retry the refresh later
+
+    // we restart KDC, then terminate the ""sleeping"" and expecting
+    // that the next retry should succeed
+    startMiniKdcAndAddPrincipal();
+    login.continueWithRetryAfterFailedRefresh();
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  private void assertPrincipalLoggedIn() {
+    assertEquals(PRINCIPAL, login.getUserName());
+    assertNotNull(login.getSubject());
+    assertEquals(1, login.getSubject().getPrincipals().size());
+    Principal actualPrincipal = login.getSubject().getPrincipals().iterator().next();
+    assertEquals(PRINCIPAL, actualPrincipal.getName());
+  }
+
+  private void assertTicketRefreshHappenedUntil(Duration timeout) {
+    long lastLoginTime = login.getLastLogin();
+    assertEventually(timeout, () -> login.getLastLogin() != lastLoginTime);
+  }
+
+  private static void assertEventually(Duration timeout, Supplier<Boolean> test) {
+    assertTimeout(timeout, () -> {
+      while (true) {
+        if (test.get()) {
+          return;
+        }
+        Thread.sleep(100);
+      }
+    });
+  }
+
+  public static void startMiniKdcAndAddPrincipal() throws Exception {
+    kdcWorkDir = createTmpDirInside(testTempDir);
+
+    Properties conf = MiniKdc.createConf();
+    conf.setProperty(MAX_TICKET_LIFETIME, TICKET_LIFETIME);
+    conf.setProperty(MIN_TICKET_LIFETIME, TICKET_LIFETIME);
+
+    kdc = new MiniKdc(conf, kdcWorkDir);
+    kdc.start();
+
+    String principalName = PRINCIPAL.substring(0, PRINCIPAL.lastIndexOf(""@""));
+    kdc.createPrincipal(new File(KerberosTestUtils.getKeytabFile()), principalName);
+  }
+
+  private static void stopMiniKdc() {
+    if (kdc != null) {
+      kdc.stop();
+      kdc = null;
+    }
+    if (kdcWorkDir != null) {
+      FileUtils.deleteQuietly(kdcWorkDir);
+      kdcWorkDir = null;
+    }
+  }
+
+  private static File createTmpDirInside(File parentDir) throws IOException {
+    File tmpFile = File.createTempFile(""test"", "".junit"", parentDir);
+    // don't delete tmpFile - this ensures we don't attempt to create
+    // a tmpDir with a duplicate name
+    File tmpDir = new File(tmpFile + "".dir"");
+    // never true if tmpfile does it's job
+    assertFalse(tmpDir.exists());
+    assertTrue(tmpDir.mkdirs());
+    return tmpDir;
+  }
+
+  private static void setupJaasConfig(String jaasEntries) {
+    try {
+      File saslConfFile = new File(testTempDir, ""jaas.conf"");
+      FileWriter fwriter = new FileWriter(saslConfFile);
+      fwriter.write(jaasEntries);
+      fwriter.close();
+      System.setProperty(""java.security.auth.login.config"", saslConfFile.getAbsolutePath());

Review comment:
       Sorry I wasn't clear.
   It looks to me we are not clearing this system property 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:51;githubbot;600","symat commented on a change in pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#discussion_r814979402



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/KerberosTicketRenewalTest.java
##########
@@ -0,0 +1,273 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MAX_TICKET_LIFETIME;
+import static org.apache.zookeeper.server.quorum.auth.MiniKdc.MIN_TICKET_LIFETIME;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+import static org.junit.jupiter.api.Assertions.assertTimeout;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.security.Principal;
+import java.time.Duration;
+import java.util.Properties;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.function.Supplier;
+import javax.security.auth.login.Configuration;
+import javax.security.auth.login.LoginException;
+import org.apache.commons.io.FileUtils;
+import org.apache.commons.io.FilenameUtils;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.quorum.auth.KerberosTestUtils;
+import org.apache.zookeeper.server.quorum.auth.MiniKdc;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.jupiter.api.AfterAll;
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeAll;
+import org.junit.jupiter.api.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * This test class is mainly testing the TGT renewal logic implemented
+ * in the org.apache.zookeeper.Login class.
+ */
+public class KerberosTicketRenewalTest {
+
+
+  private static final Logger LOG = LoggerFactory.getLogger(KerberosTicketRenewalTest.class);
+  private static final String JAAS_CONFIG_SECTION = ""ClientUsingKerberos"";
+  private static final String TICKET_LIFETIME = ""2000"";
+  private static File testTempDir;
+  private static MiniKdc kdc;
+  private static File kdcWorkDir;
+  private static String PRINCIPAL = KerberosTestUtils.getClientPrincipal();
+
+  TestableKerberosLogin login;
+
+  @BeforeAll
+  public static void setupClass() throws Exception {
+    // by default, we should wait at least 1 minute between subsequent TGT renewals.
+    // changing it to 500ms.
+    System.setProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY, ""500"");
+
+    testTempDir = ClientBase.createTmpDir();
+    startMiniKdcAndAddPrincipal();
+
+    String keytabFilePath = FilenameUtils.normalize(KerberosTestUtils.getKeytabFile(), true);
+
+    // note: we use ""refreshKrb5Config=true"" to refresh the kerberos config in the JVM,
+    // making sure that we use the latest config even if other tests already have been executed
+    // and initialized the kerberos client configs before)
+    String jaasEntries = """"
+      + ""ClientUsingKerberos {\n""
+      + ""  com.sun.security.auth.module.Krb5LoginModule required\n""
+      + ""  storeKey=\""false\""\n""
+      + ""  useTicketCache=\""false\""\n""
+      + ""  useKeyTab=\""true\""\n""
+      + ""  doNotPrompt=\""true\""\n""
+      + ""  debug=\""true\""\n""
+      + ""  refreshKrb5Config=\""true\""\n""
+      + ""  keyTab=\"""" + keytabFilePath + ""\""\n""
+      + ""  principal=\"""" + PRINCIPAL + ""\"";\n""
+      + ""};\n"";
+    setupJaasConfig(jaasEntries);
+  }
+
+  @AfterAll
+  public static void tearDownClass() {
+    System.clearProperty(Login.MIN_TIME_BEFORE_RELOGIN_CONFIG_KEY);
+    stopMiniKdc();
+    if (testTempDir != null) {
+      // the testTempDir contains the jaas config file and also the
+      // working folder of the currently running KDC server
+      FileUtils.deleteQuietly(testTempDir);
+    }
+  }
+
+  @AfterEach
+  public void tearDownTest() throws Exception {
+    if (login != null) {
+      login.shutdown();
+      login.logout();
+    }
+  }
+
+
+  /**
+   * We extend the regular Login class to be able to properly control the
+   * ""sleeping"" between the retry attempts of ticket refresh actions.
+   */
+  private static class TestableKerberosLogin extends Login {
+
+    private AtomicBoolean refreshFailed = new AtomicBoolean(false);
+    private CountDownLatch continueRefreshThread = new CountDownLatch(1);
+
+    public TestableKerberosLogin() throws LoginException {
+      super(JAAS_CONFIG_SECTION, (callbacks) -> {}, new ZKConfig());
+    }
+
+    @Override
+    protected void sleepBeforeRetryFailedRefresh() throws InterruptedException {
+      refreshFailed.set(true);
+      continueRefreshThread.await(10, TimeUnit.SECONDS);
+    }
+
+    public void assertRefreshFailsEventually(Duration timeout) {
+      assertEventually(timeout, () -> refreshFailed.get());
+    }
+
+    public void continueWithRetryAfterFailedRefresh() {
+      continueRefreshThread.countDown();
+    }
+  }
+
+
+  @Test
+  public void shouldLoginUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  @Test
+  public void shouldRenewTicketUsingKerberos() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    long initialLoginTime = login.getLastLogin();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+    assertTrue(initialLoginTime < login.getLastLogin());
+  }
+
+
+  @Test
+  public void shouldRecoverIfKerberosNotAvailableForSomeTime() throws Exception {
+    login = new TestableKerberosLogin();
+    login.startThreadIfNeeded();
+
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    stopMiniKdc();
+
+    // ticket lifetime is 2sec, so we will trigger ticket renewal in each ~1.5 sec
+    // the very next ticket renewal should fail (as KDC is offline)
+    login.assertRefreshFailsEventually(Duration.ofSeconds(5));
+
+    // now the ticket thread is ""sleeping"", it will retry the refresh later
+
+    // we restart KDC, then terminate the ""sleeping"" and expecting
+    // that the next retry should succeed
+    startMiniKdcAndAddPrincipal();
+    login.continueWithRetryAfterFailedRefresh();
+    assertTicketRefreshHappenedUntil(Duration.ofSeconds(5));
+
+    assertPrincipalLoggedIn();
+  }
+
+
+  private void assertPrincipalLoggedIn() {
+    assertEquals(PRINCIPAL, login.getUserName());
+    assertNotNull(login.getSubject());
+    assertEquals(1, login.getSubject().getPrincipals().size());
+    Principal actualPrincipal = login.getSubject().getPrincipals().iterator().next();
+    assertEquals(PRINCIPAL, actualPrincipal.getName());
+  }
+
+  private void assertTicketRefreshHappenedUntil(Duration timeout) {
+    long lastLoginTime = login.getLastLogin();
+    assertEventually(timeout, () -> login.getLastLogin() != lastLoginTime);
+  }
+
+  private static void assertEventually(Duration timeout, Supplier<Boolean> test) {
+    assertTimeout(timeout, () -> {
+      while (true) {
+        if (test.get()) {
+          return;
+        }
+        Thread.sleep(100);
+      }
+    });
+  }
+
+  public static void startMiniKdcAndAddPrincipal() throws Exception {
+    kdcWorkDir = createTmpDirInside(testTempDir);
+
+    Properties conf = MiniKdc.createConf();
+    conf.setProperty(MAX_TICKET_LIFETIME, TICKET_LIFETIME);
+    conf.setProperty(MIN_TICKET_LIFETIME, TICKET_LIFETIME);
+
+    kdc = new MiniKdc(conf, kdcWorkDir);
+    kdc.start();
+
+    String principalName = PRINCIPAL.substring(0, PRINCIPAL.lastIndexOf(""@""));
+    kdc.createPrincipal(new File(KerberosTestUtils.getKeytabFile()), principalName);
+  }
+
+  private static void stopMiniKdc() {
+    if (kdc != null) {
+      kdc.stop();
+      kdc = null;
+    }
+    if (kdcWorkDir != null) {
+      FileUtils.deleteQuietly(kdcWorkDir);
+      kdcWorkDir = null;
+    }
+  }
+
+  private static File createTmpDirInside(File parentDir) throws IOException {
+    File tmpFile = File.createTempFile(""test"", "".junit"", parentDir);
+    // don't delete tmpFile - this ensures we don't attempt to create
+    // a tmpDir with a duplicate name
+    File tmpDir = new File(tmpFile + "".dir"");
+    // never true if tmpfile does it's job
+    assertFalse(tmpDir.exists());
+    assertTrue(tmpDir.mkdirs());
+    return tmpDir;
+  }
+
+  private static void setupJaasConfig(String jaasEntries) {
+    try {
+      File saslConfFile = new File(testTempDir, ""jaas.conf"");
+      FileWriter fwriter = new FileWriter(saslConfFile);
+      fwriter.write(jaasEntries);
+      fwriter.close();
+      System.setProperty(""java.security.auth.login.config"", saslConfFile.getAbsolutePath());

Review comment:
       Oh, I see. Nice catch, thanks!
   (you were clear, I just didn't get it ;) )




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 17:58;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1052698713


   hmm... one of my KerberosTicketRenewalTest failed on java11. (I tested locally on java8 and java13) I'll have to dig into the problem.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/22 22:16;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1052722864


   interesting... it constantly passed for me with some older java 11 versions, but it is flaky on the java 11.0.14 we use in CI. The fix itself should be harmless, I think we have some timing issue. (in this particular test I stop and restart KDC to trigger failed ticket renewal, while using 2sec ticket lifetime - I think KDC can not start quick enough to make the second renewal pass) I'll try to make the test more robust. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/22 22:36;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1052744746


   I increased a timeout, now the 5 sec ticket lifetime should hopefully give plenty of time to restart the KDC. Also I made my renewal assertion more clever, I think this was the actual issue behind the failures (now I assert that the renewal not only started but actually succeeded). This way the test run for me now 115 times without any error. Previously it failed once about each 3-4 execution on my laptop. I hope this will be robust enough for the CI.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/22 22:54;githubbot;600","symat opened a new pull request #1830:
URL: https://github.com/apache/zookeeper/pull/1830


   This is the ZOOKEEPER-4477 patch for branch-3.5. Similar to the same fix on newer branches
   but using junit 4 in the tests (the junit upgrade happened in ZooKeeper 3.6).
   
   This bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.
   
   Our Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If
   login fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()
   and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to
   work in older Java versions, but from Java 9 onwards, this results in a NullPointerException due
   to https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before
   attempting logout.
   
   I fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to
   reproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()
   which (before the fix) failed with Java13 but succeeded with Java8.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 10:50;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1054182166


   only unrelated C client test fail


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 11:57;githubbot;600","eolivelli commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1054231577


   I have restarted the job


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 12:59;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1054316417


   now c++ tests passing, but some Java tests failes (none of them SASL related):
   
   ```
   [ERROR] Failures: 
   [ERROR]   RequestThrottlerTest.testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled:338 expected: <3> but was: <4>
   [ERROR]   RequestThrottlerTest.testLargeRequestThrottling:297 expected: <2> but was: <1>
   [ERROR]   Zab1_0Test.testNormalFollowerRunWithDiff:706->testFollowerConversation:445 expected: <4294967298> but was: <0>
   [INFO] 
   [ERROR] Tests run: 2979, Failures: 3, Errors: 0, Skipped: 4
   ```
   
   I don't know if we should wait for a CI run where both C++ and Java tests succeed.  Our CI is very flaky nowadays :(


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/22 14:31;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055290047


   yeee! (I restarted again a few hours before and now we just had a fully green run)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 10:44;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055439439


   @eolivelli , can I merge this change? I don't think the flaky CI failures were related this case (after commit da8aebc which was actually fixing the flakiness in the new tests I added)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:24;githubbot;600","eolivelli commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055440194


   CI passed.
   I am merging this patch.
   should we merge this to branch-3.7 as well ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:24;githubbot;600","symat commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055443605


   thanks! I think we should merge this to all active branches (this is not a new feature, but a bugfix which can potentially affect any ZooKeeper version running on Java9+). I already created a separate PR (https://github.com/apache/zookeeper/pull/1830) for branch-3.5 (same changes, but using junit4).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:28;githubbot;600","eolivelli closed pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:30;githubbot;600","eolivelli commented on pull request #1828:
URL: https://github.com/apache/zookeeper/pull/1828#issuecomment-1055446491


   committed to master, branch-3.8 and branch-3.7.
   
   branch-3.6 is still on junit4 and the patch does not apply


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 13:32;githubbot;600","symat commented on pull request #1830:
URL: https://github.com/apache/zookeeper/pull/1830#issuecomment-1055478734


   thanks!
   I'll merge this and also test the patch on branch-3.6. (looks I remembered wrong, junit4 was introduced in 3.7 and not in 3.6 as I remembered)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 14:06;githubbot;600","symat opened a new pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833


   This is the ZOOKEEPER-4477 patch for branch-3.5. Similar to the same fix on newer branches
   but using junit 4 in the tests (the junit upgrade happened in ZooKeeper 3.6).
   
   This bug is similar to the one fixed in https://issues.apache.org/jira/browse/KAFKA-12730.
   
   Our Kerberos ticket refresh thread performs re-login by logging out and then logging in again. If
   login fails, we retry after some sleep. Every reLogin() operation performs loginContext.logout()
   and loginContext.login(). If login fails, we end up with two consecutive logouts. This used to
   work in older Java versions, but from Java 9 onwards, this results in a NullPointerException due
   to https://bugs.openjdk.java.net/browse/JDK-8173069. We should check if logout is required before
   attempting logout.
   
   I fixed the issue and added a new unit test to test some ticket renewal scenarios. I managed to
   reproduce the problem in KerberosTicketRenewalTest.shouldRecoverIfKerberosNotAvailableForSomeTime()
   which (before the fix) failed with Java13 but succeeded with Java8.
   
   (cherry picked from commit 73ea6aaffc7a29a31df9007244f96d8d67fef953)
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:05;githubbot;600","symat commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055556674


   This is similar to https://github.com/apache/zookeeper/pull/1828 and https://github.com/apache/zookeeper/pull/1830 just on top of branch-3.6. I mainly submitted this as a separate PR to trigger a CI run.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:20;githubbot;600","eolivelli commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055575588


   merging


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:39;githubbot;600","eolivelli commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055576908


   committed


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:41;githubbot;600","eolivelli closed pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:41;githubbot;600","symat commented on pull request #1833:
URL: https://github.com/apache/zookeeper/pull/1833#issuecomment-1055582132


   thank you!!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 15:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,15600,,,0,15600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Mar 02 09:32:51 UTC 2022,,,,,,,,,,"0|z0zutc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Feb/22 08:25;eolivelli;This is interesting I have been running zookeeper with kerberos as soon as java9 was released and I had never seen this problem.

 

Would you like to send a PR?;;;","25/Feb/22 07:21;symat;I have seen this exception already with ZK 3.5.5 on java 11.
The TGT renewal thread seems to retry the TGT renewal a few times (waiting 10 seconds between retries). I'm not exactly sure what will happen after the TGT renewal thread finally exit? (maybe the client will start a new Login? Or this had to be done by the application or e.g. curator?)

Anyway, the problem seems valid, and the patch applied by https://issues.apache.org/jira/browse/KAFKA-12730 seems reasonable and safe. I'll prepare a fix for this. I think the same problem appears even on master branch in ZooKeeper.;;;","25/Feb/22 07:27;symat;[~vgrivel] please let me know if you are already working on the patch, otherwise I'll create one soon.;;;","25/Feb/22 07:30;symat;bq. I had never seen this problem.

I heard someone reproduced this by decreasing TGT expiration time during tests. But I guess other kerberos problem (KDC overload, temporary network problems, etc) can trigger this also in normal production systems.;;;","25/Feb/22 09:21;vgrivel;[~symat] I'm not working on a patch so I will let you do it if it is good. 
We start seeing this issue by doing an extensive test of KDC failures and resiliency of Kafka. For that we simulate KDC failure while decreasing the TGT validity to few minutes. 

Linked to that issue, we also raised a JDK enhancement request: [https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8282223] as currently only a SocketTimeoutException trigger the retry mechanism to connect to the KDC.;;;","25/Feb/22 17:21;symat;PR created against the master branch, any comments are welcomed :)
https://github.com/apache/zookeeper/pull/1828;;;","01/Mar/22 15:41;eolivelli;Issue resolved by pull request 1833
[https://github.com/apache/zookeeper/pull/1833];;;","02/Mar/22 09:32;vgrivel;Thanks for the work and the fix!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent recursive watcher got NodeChildrenChanged event,ZOOKEEPER-4475,13429906,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,kezhuw,kezhuw,kezhuw,22/Feb/22 10:43,22/Feb/23 09:35,13/Jul/23 09:08,22/Feb/23 09:23,3.6.3,3.7.0,,,,,,,,3.9.0,,,,,,,,,0,pull-request-available,,"Currently, {{NodeChildrenChanged}} events are sent to all persistent watchers unconditionally in client. This requires server to never deliver {{NodeChildrenChanged}} for node's descendants. It can not be true. So we need to filter {{NodeChildrenChanged}} for persistent recursive watchers.

Splits from ZOOKEEPER-4466.",,kezhuw,,,,,,,,,,,,,,,,,,,"kezhuw opened a new pull request #1820:
URL: https://github.com/apache/zookeeper/pull/1820


   Cause:
   * Events are delivered to recursive watcher unconditionally.
   * Client could receive `NodeChildrenChanged` due to child watcher on recursive watching node's descendants.
   
   Changes: Filter out `NodeChildrenChanged` events for recursive watcher in client side.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/22 11:24;githubbot;600","kezhuw commented on pull request #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1050906697


   Ping @eolivelli @Randgalt for review.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/22 14:35;githubbot;600","kezhuw commented on pull request #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1062512959






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/22 03:16;githubbot;600","kezhuw removed a comment on pull request #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1062512959


   Another ping @eolivelli @Randgalt  @symat @maoling for review.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/22 03:16;githubbot;600","kezhuw commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1089664822

   @eolivelli @Randgalt @symat @maoling @arshadmohammad @anmolnar Anyone have time capacity to review this pr ? I think @Randgalt has confirmed this as bug in [ZOOKEEPER-4466](https://issues.apache.org/jira/browse/ZOOKEEPER-4466).


;06/Apr/22 02:06;githubbot;600","tisonkun commented on code in PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#discussion_r908656704


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ZKWatchManager.java:
##########
@@ -442,10 +442,13 @@ public Set<Watcher> materialize(
         return result;
     }
 
-    private void addPersistentWatches(String clientPath, Set<Watcher> result) {
+    private void addPersistentWatches(String clientPath, Watcher.Event.EventType type, Set<Watcher> result) {
         synchronized (persistentWatches) {
             addTo(persistentWatches.get(clientPath), result);
         }
+        if (type == Watcher.Event.EventType.NodeChildrenChanged) {

Review Comment:
   A comment about reason to filter `NodeChildrenChanged` event helps - it's not quite straightforward.



##########
zookeeper-server/src/test/java/org/apache/zookeeper/test/PersistentRecursiveWatcherTest.java:
##########
@@ -114,6 +114,23 @@ public void testRemoval()
         }
     }
 
+    @Test
+    public void testNoChildEvents() throws Exception {
+        try (ZooKeeper zk = createClient()) {
+            zk.create(""/a"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            zk.addWatch(""/"", persistentWatcher, PERSISTENT_RECURSIVE);
+
+            zk.getChildren(""/a"", true);
+
+            zk.create(""/a/b"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            zk.create(""/a/b/c"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b"");
+            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b/c"");

Review Comment:
   You may assert no outstanding event here.



;28/Jun/22 15:57;githubbot;600","tisonkun commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1168917833

   Some other concerns:
   
   1. The description in this patch is different from JIRA's content:
   
   > This requires server to never deliver NodeChildrenChanged for node's descendants.
   
   In this patch we filter event on the client side, which has nothing to do with server side logics.
   
   2. Do you have a real world workload needs this patch? I'm glad to see a concrete use case for PersistentRecursiveWatch and how the behavior changed here affects the application logic.


;28/Jun/22 16:07;githubbot;600","kezhuw commented on code in PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#discussion_r909147525


##########
zookeeper-server/src/test/java/org/apache/zookeeper/test/PersistentRecursiveWatcherTest.java:
##########
@@ -114,6 +114,23 @@ public void testRemoval()
         }
     }
 
+    @Test
+    public void testNoChildEvents() throws Exception {
+        try (ZooKeeper zk = createClient()) {
+            zk.create(""/a"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            zk.addWatch(""/"", persistentWatcher, PERSISTENT_RECURSIVE);
+
+            zk.getChildren(""/a"", true);
+
+            zk.create(""/a/b"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            zk.create(""/a/b/c"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b"");
+            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b/c"");

Review Comment:
   Add `assertTrue(events.isEmpty())` to assert that no more events in queue.



;29/Jun/22 02:41;githubbot;600","kezhuw commented on code in PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#discussion_r909147878


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ZKWatchManager.java:
##########
@@ -442,10 +442,13 @@ public Set<Watcher> materialize(
         return result;
     }
 
-    private void addPersistentWatches(String clientPath, Set<Watcher> result) {
+    private void addPersistentWatches(String clientPath, Watcher.Event.EventType type, Set<Watcher> result) {
         synchronized (persistentWatches) {
             addTo(persistentWatches.get(clientPath), result);
         }
+        if (type == Watcher.Event.EventType.NodeChildrenChanged) {

Review Comment:
   Add comments to explain why this is necessary and why this must be done in client side.



;29/Jun/22 02:42;githubbot;600","kezhuw commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1169484691

   @tisonkun Thank you for reviews. I have pushed fixup commit to resolve your comments. Regarding your concerns, I try to reply them here:
   1. The next sentence after the quoted one is ""It can not be true."". From server's perspective, it is valid to attach standard child watches on descendants of node which is being watched in persistent recursive mode. So, basically, server is innocent to this. It has to be solved in client side. I explains this in code comments in fixup commit also.
   2. No. I observed this in writing tests for [zookeeper-client-rust](https://github.com/kezhuw/zookeeper-client-rust). In the first place, I observed quirk behaviors in situations where standard watches and persistent watches are attached on overlapping paths([ZOOKEEPER-4466](https://issues.apache.org/jira/browse/ZOOKEEPER-4466)). After discussion with @Randgalt in ZOOKEEPER-4466, I split out [ZOOKEEPER-4475](https://issues.apache.org/jira/browse/ZOOKEEPER-4475) as a bug report and ZOOKEEPER-4466 remains more like a feature request.


;29/Jun/22 03:07;githubbot;600","eolivelli commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1171232303

   @tisonkun would you have time to test if Curator still works well with this change ? like running all the tests of Curator


;30/Jun/22 13:38;githubbot;600","eolivelli commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1171233287

   > I'm glad to see a concrete use case for PersistentRecursiveWatch
   @tisonkun for instance Apache Pulsar relies heavily on PersistentRecursiveWatch since version 2.8.0
   you can take a look to Pulsar code


;30/Jun/22 13:39;githubbot;600","tisonkun commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1171373111

   @eolivelli I'll try to do a local test this week. Ping me if I miss it :)


;30/Jun/22 15:38;githubbot;600","tisonkun commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1171394562

   @eolivelli since Curator doesn't support ZK 3.7+, I'm trying to pick this commit to 3.6.4-SNAPSHOT and run tests. However, I get a compile error when build with 3.6.4:
   
   ```
   [ERROR] Bundle org.apache.zookeeper:zookeeper-jute:jar:3.6.4-SNAPSHOT : The default package '.' is not permitted by the Import-Package syntax.
    This can be caused by compile errors in Eclipse because Eclipse creates
   valid class files regardless of compile errors.
   The following package(s) import from the default package [org.apache.zookeeper.data, org.apache.zookeeper.proto, org.apache.zookeeper.server.persistence, org.apache.zookeeper.server.quorum, org.apache.zookeeper.txn]
   ```


;30/Jun/22 15:56;githubbot;600","kezhuw commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1173216578

   Hi @eolivelli, I have done a test based on #1859(which is a superset of this pr) and apache/curator#426 on branch-3.7. Follow is the verify progress copied from my shell. From my observation, there are flakes, but not failures.
   
   PS: How the community share test report ?
   
   ```
   > mvn -DforkCount=1C verify
   [INFO] Scanning for projects...
   [INFO] ------------------------------------------------------------------------
   [INFO] Reactor Build Order:
   [INFO]
   [INFO] Apache Curator                                                     [pom]
   [INFO] Curator Testing                                                    [jar]
   [INFO] Curator Client                                                  [bundle]
   [INFO] Curator Framework                                               [bundle]
   [INFO] Curator Recipes                                                 [bundle]
   [INFO] Curator Service Discovery                                       [bundle]
   [INFO] Curator Async                                                      [jar]
   [INFO] Curator Examples                                                   [jar]
   [INFO] Curator Service Discovery Server                                [bundle]
   [INFO] curator-test-zk35                                                  [jar]
   [INFO]
   [INFO] -----------------< org.apache.curator:apache-curator >------------------
   [INFO] Building Apache Curator 5.2.2-SNAPSHOT                            [1/10]
   [INFO] --------------------------------[ pom ]---------------------------------
   [INFO]
   [INFO] -;04/Jul/22 00:51;githubbot;600","sonatype-lift[bot] commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1272702074

   :warning: **52 God Classes** were detected by Lift in this project. [Visit the Lift web console](https://lift.sonatype.com/results/github.com/apache/zookeeper/01GEZRZMT28QANDXC96XDG458K?tab=technical-debt&utm_source=github.com&utm_campaign=lift-comment&utm_content=apache\%20zookeeper) for more details.


;10/Oct/22 01:54;githubbot;600","kezhuw commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1280951230

   cc @eolivelli @Randgalt @symat @maoling @arshadmohammad @anmolnar for reviews.


;17/Oct/22 14:28;githubbot;600","kezhuw commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1439304526

   cc @eolivelli @Randgalt @symat @maoling @arshadmohammad @anmolnar @ztzg for reviews.


;22/Feb/23 01:19;githubbot;600","tisonkun commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1439673181

   Pending to merge if no more objection this week.


;22/Feb/23 09:15;githubbot;600","eolivelli commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1439681974

   @tisonkun in ZooKeeper we do not allow to merge this kind of changes if there are not at least 2 sponsors.
   
   Unfortunately currently there are not many active reviewers, but please always wait for a second approval before merging non trivial patches


;22/Feb/23 09:21;githubbot;600","tisonkun commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1439683369

   @eolivelli OK.


;22/Feb/23 09:22;githubbot;600","eolivelli merged PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820


;22/Feb/23 09:23;githubbot;600","tisonkun commented on PR #1820:
URL: https://github.com/apache/zookeeper/pull/1820#issuecomment-1439701418

   @eolivelli I agree that it changes the event delivered and am OK to deliver it on 3.9.0, while it can be regarded as a bug fix since in 3.6.0 release notes we write:
   
   > Note that NodeChildrenChanged events are not triggered for persistent recursive watches as it would be redundant.


;22/Feb/23 09:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,13800,,,0,13800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2022-02-22 10:43:10.0,,,,,,,,,,"0|z0ztj4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zooInspector create root node fail with path validate,ZOOKEEPER-4473,13429807,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,iamgd67,iamgd67,22/Feb/22 03:08,30/Jan/23 07:57,13/Jul/23 09:08,04/Mar/22 13:58,3.6.2,3.7.0,,,,,,,,3.8.1,3.9.0,,,,contrib,,,,0,pull-request-available,,"create root node using zoo inspector will fail with an exception, 
{code:java}
java.lang.IllegalArgumentException: Invalid path string ""//test"" caused by empty node name specified @1
{code}
and what's worse is the UI will be updated, even creation failed",master branch,brentwritescode,iamgd67,symat,,,,,,,,,,,,,,,,,"iamgd67 closed pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/22 03:49;githubbot;600","iamgd67 opened a new pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818


   zooInspector root child creates fail with path validate fix.
   create node update UI only if creation success, if fail show message dialog about the reason.
   add basic ZooInspectorManagerImpl tests using mocked zookeeper client.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/22 03:49;githubbot;600","iamgd67 commented on pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818#issuecomment-1047444782


   CPP unit test failed, should be unrelated


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/22 05:42;githubbot;600","iamgd67 commented on pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818#issuecomment-1049376686


   @eolivelli are we waiting for more reviews?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Feb/22 00:57;githubbot;600","iamgd67 commented on pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818#issuecomment-1054929299


   ping @symat for review


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/22 02:44;githubbot;600","iamgd67 commented on pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818#issuecomment-1059030825


   @eolivelli are we going to merge this?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/22 10:21;githubbot;600","symat commented on pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818#issuecomment-1059178826


   I'll merge this to master, and branch-3.8 (will be released in 3.8.1, as the release of 3.8.0 is finished already)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/22 13:50;githubbot;600","asfgit closed pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/22 13:57;githubbot;600","symat commented on pull request #1818:
URL: https://github.com/apache/zookeeper/pull/1818#issuecomment-1059186043


   merged, thanks for the contribution!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/22 13:59;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Mar 04 13:59:11 UTC 2022,,,,,,,,,,"0|z0zsx4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Feb/22 03:09;iamgd67;will soon create a pr at GitHub;;;","25/Feb/22 17:25;brentwritescode;[~iamgd67] Were you able to figure out the problem here?  If not, I can take a look.;;;","01/Mar/22 02:57;iamgd67;[~brentwritescode] already created a PR at GitHub, [pr-1818|https://github.com/apache/zookeeper/pull/1818] ;;;","01/Mar/22 05:22;brentwritescode;Oh great!  I was only asking because I think it was a bug I introduced.  Thank you for fixing it!;;;","04/Mar/22 13:58;symat;Issue resolved by pull request 1818
[https://github.com/apache/zookeeper/pull/1818];;;","04/Mar/22 13:59;symat;Merged, thanks for the contribution!!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove WatcherType.Children break persistent watcher's child events,ZOOKEEPER-4471,13429617,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,kezhuw,kezhuw,kezhuw,21/Feb/22 04:05,14/Jun/23 03:22,13/Jul/23 09:08,13/Jun/23 13:35,3.6.3,3.7.0,,,,,,,,3.9.0,,,,,server,,,,0,pull-request-available,,"{{AddWatchMode.PERSISTENT}} was divided as data and child watch in server side. When remove {{WatcherType.Children}}, child part of {{AddWatchMode.PERSISTENT}} is removed but not its data part. This could introduce trick usage of persistent data watch while there is no official api for this. It is better forbid this by dedicate {{WatcherType.Children}} to standard child watch only.

I [commits|https://github.com/kezhuw/zookeeper/commit/f7a996646074114830bdc2361e8ff679d08c00bc] a modified {{RemoveWatchesTest.testRemoveAllChildWatchesOnAPath}} in my local repo to reproduce this.

I think it is better to support {{removeWatches}} for two persistent watchers too. But it might be a separate issue.",,kezhuw,,,,,,,,,,,,,,,,,,,"kezhuw opened a new pull request, #1998:
URL: https://github.com/apache/zookeeper/pull/1998

   Before ZOOKEEPER-1416, `WatcherType.Children` was used to remove watchers attached through `ZooKeeper.getChildren`. `WatcherType.Data` was used to remove watchers attached through `ZooKeeper.getData` and `ZooKeeper.exists`.
   
   ZOOKEEPER-1416 adds `AddWatchMode.PERSISTENT`. This watcher could be completed remove using `WatcherType.Any`. But when removing through `WatcherType.Data` or `WatcherType.Children`, part of `AddWatchMode.PERSISTENT` will be left behind. And we get persistent children or data watchers.
   
   We are never claiming to support these type of watchers. So fix it.
   
   In rare chance, we are going to support persistent data or children watchers in future, I think we probably don't want to do such ""magic"" thing in ZooKeeper. So fix it.
   
   This is a step towards ZOOKEEPER-4472 which proposed to support `WatcherType.Persistent` and `WatcherType.PersistentRecursive` to remove persistent watchers.


;06/May/23 14:17;githubbot;600","kezhuw commented on PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998#issuecomment-1538695645

   We are approaching [ZOOKEEPER-4472][].
   
   * [ZOOKEEPER-4466][](#1859) enables multiple modes on one path.
   * [ZOOKEEPER-4471][] forbids partially watcher removing in server side. These is no such ""partial removing"" in client side.
   * [ZOOKEEPER-4472][] proposed to individual `WatcherType`s for persistent watches.
   
   Combine them all, we will have orthogonal watcher modes for clients. Watching or un-watching a path in one mode will not break other watching modes on same path.
   
   [ZOOKEEPER-4466]: https://issues.apache.org/jira/browse/ZOOKEEPER-4466
   [ZOOKEEPER-4471]: https://issues.apache.org/jira/browse/ZOOKEEPER-4471
   [ZOOKEEPER-4472]: https://issues.apache.org/jira/browse/ZOOKEEPER-4472
   
   cc @eolivelli @tisonkun @Randgalt @symat @maoling @cnauroth


;08/May/23 16:32;githubbot;600","kezhuw commented on PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998#issuecomment-1588600215

   Failure test case run reported at [ZOOKEEPER-4512](https://issues.apache.org/jira/browse/ZOOKEEPER-4512).


;13/Jun/23 06:04;githubbot;600","kezhuw closed pull request #1998: ZOOKEEPER-4471: Match removing WatcherType to standard, persistent modes
URL: https://github.com/apache/zookeeper/pull/1998


;13/Jun/23 06:04;githubbot;600","kezhuw opened a new pull request, #1998:
URL: https://github.com/apache/zookeeper/pull/1998

   Before ZOOKEEPER-1416, `WatcherType.Children` was used to remove watchers attached through `ZooKeeper.getChildren`. `WatcherType.Data` was used to remove watchers attached through `ZooKeeper.getData` and `ZooKeeper.exists`.
   
   ZOOKEEPER-1416 adds `AddWatchMode.PERSISTENT`. This watcher could be completed remove using `WatcherType.Any`. But when removing through `WatcherType.Data` or `WatcherType.Children`, part of `AddWatchMode.PERSISTENT` will be left behind. And we get persistent children or data watchers.
   
   We are never claiming to support these type of watchers. So fix it.
   
   In rare chance, we are going to support persistent data or children watchers in future, I think we probably don't want to do such ""magic"" thing in ZooKeeper. So fix it.
   
   This is a step towards ZOOKEEPER-4472 which proposed to support `WatcherType.Persistent` and `WatcherType.PersistentRecursive` to remove persistent watchers.


;13/Jun/23 06:04;githubbot;600","kezhuw commented on PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998#issuecomment-1589069167

   Great! Thank you for reviewing! @tisonkun @eolivelli 
   
   The cpp tests hang, I will reopen this pr for another ci run.


;13/Jun/23 10:59;githubbot;600","kezhuw closed pull request #1998: ZOOKEEPER-4471: Match removing WatcherType to standard, persistent modes
URL: https://github.com/apache/zookeeper/pull/1998


;13/Jun/23 10:59;githubbot;600","kezhuw opened a new pull request, #1998:
URL: https://github.com/apache/zookeeper/pull/1998

   Before ZOOKEEPER-1416, `WatcherType.Children` was used to remove watchers attached through `ZooKeeper.getChildren`. `WatcherType.Data` was used to remove watchers attached through `ZooKeeper.getData` and `ZooKeeper.exists`.
   
   ZOOKEEPER-1416 adds `AddWatchMode.PERSISTENT`. This watcher could be completed remove using `WatcherType.Any`. But when removing through `WatcherType.Data` or `WatcherType.Children`, part of `AddWatchMode.PERSISTENT` will be left behind. And we get persistent children or data watchers.
   
   We are never claiming to support these type of watchers. So fix it.
   
   In rare chance, we are going to support persistent data or children watchers in future, I think we probably don't want to do such ""magic"" thing in ZooKeeper. So fix it.
   
   This is a step towards ZOOKEEPER-4472 which proposed to support `WatcherType.Persistent` and `WatcherType.PersistentRecursive` to remove persistent watchers.


;13/Jun/23 10:59;githubbot;600","kezhuw commented on PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998#issuecomment-1589071434

   This is the link to previous ci run, the cpp tests hang for almost 5 hours.
   
   https://github.com/apache/zookeeper/actions/runs/5251856628/jobs/9487231863


;13/Jun/23 11:00;githubbot;600","kezhuw commented on PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998#issuecomment-1589280448

   All checks are green. Can we merge this and move forward to #2006 ? @eolivelli @tisonkun 


;13/Jun/23 13:08;githubbot;600","tisonkun commented on PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998#issuecomment-1589289550

   I think it's good to go. Merging...
   
   Thanks for your contribution @kezhuw!


;13/Jun/23 13:13;githubbot;600","tisonkun merged PR #1998:
URL: https://github.com/apache/zookeeper/pull/1998


;13/Jun/23 13:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,ZOOKEEPER-4472,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jun 12 07:19:24 UTC 2023,,,,,,,,,,"0|z0zrrc:",9223372036854775807,"Previously, removing WatcherType::Data or WatcherType::Children from AddWatchMode::Persistent will succeed in server side and part of AddWatchMode.PERSISTENT will be left behind. And we get persistent children or data watchers. We are never claiming to support these type of watchers and neither intend to do such ""compute"" in server side, so we decide to forbid this behavior. Such operation resulted in NOWATCHER in Java client anyway.",,,,,,,,,,,,,,,,,,,,"09/Jun/23 16:28;kezhuw;The test commit was constructed incorrectly. I commit another two to demonstrate the problem.
* One [commit before|https://github.com/kezhuw/zookeeper/commit/741fafdcdd2e0e4600d16b8f152e5736bbdce92c] ZOOKEEPER-4466.
* One [commit after|https://github.com/kezhuw/zookeeper/commit/ff2288ee17e5cfd42d95970dc6e2bffb50cc0d73] ZOOKEEPER-4466.

Their diffs are same, only the rebase commits are different. ;;;","12/Jun/23 07:19;kezhuw;Mark as blocker as discussion in https://lists.apache.org/thread/dgnt1xnlf5n9tzt7m4otbodg2qdx3fz4.

As a bug, it doesn't deserve to be a blocker but ZOOKEEPER-4472 depends on this for comprehensive tests.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support different watch modes on same path,ZOOKEEPER-4466,13427917,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,kezhuw,kezhuw,kezhuw,11/Feb/22 04:09,14/Jun/23 03:36,13/Jul/23 09:08,05/May/23 07:59,3.6.3,3.6.4,3.7,,,,,,,3.9.0,,,,,java client,server,,,0,pull-request-available,,"I used to think watchers of different modes are orthogonal. I found there are not, when I wrote tests for unfinished rust client. And I wrote [test cases|https://github.com/kezhuw/zookeeper/commit/79b05a95d2669a4acd16a4d544f24e2083a264f2#diff-8d31d27ea951fbc1f4fbda48d45748318f7124502839d825b77ad3fb8551bf43L152] in java and confirmed.

I copied test case here for evaluation. You also clone from [my fork|https://github.com/kezhuw/zookeeper/tree/watch-overlapping-path-with-different-modes-test-case].

{code:java}
    // zookeeper-server/src/test/java/org/apache/zookeeper/test/PersistentRecursiveWatcherTest.java

    @Test
    public void testPathOverlapWithStandardWatcher() throws Exception {
        try (ZooKeeper zk = createClient(new CountdownWatcher(), hostPort)) {
            CountDownLatch nodeCreated = new CountDownLatch(1);
            zk.addWatch(""/a"", persistentWatcher, PERSISTENT_RECURSIVE);
            zk.exists(""/a"", event -> nodeCreated.countDown());

            zk.create(""/a"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
            zk.create(""/a/b"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
            zk.delete(""/a/b"", -1);
            zk.delete(""/a"", -1);

            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a"");
            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b"");
            assertEvent(events, Watcher.Event.EventType.NodeDeleted, ""/a/b"");
            assertEvent(events, Watcher.Event.EventType.NodeDeleted, ""/a"");

            assertTrue(nodeCreated.await(5, TimeUnit.SECONDS));
        }
    }

    @Test
    public void testPathOverlapWithPersistentWatcher() throws Exception {
        try (ZooKeeper zk = createClient(new CountdownWatcher(), hostPort)) {
            zk.addWatch(""/a"", persistentWatcher, PERSISTENT_RECURSIVE);
            zk.addWatch(""/a/b"", event -> {}, PERSISTENT);
            zk.create(""/a"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
            zk.create(""/a/b"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
            zk.create(""/a/b/c"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
            zk.delete(""/a/b/c"", -1);
            zk.delete(""/a/b"", -1);
            zk.delete(""/a"", -1);
            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a"");
            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b"");
            assertEvent(events, Watcher.Event.EventType.NodeCreated, ""/a/b/c"");
            assertEvent(events, Watcher.Event.EventType.NodeDeleted, ""/a/b/c"");
            assertEvent(events, Watcher.Event.EventType.NodeDeleted, ""/a/b"");
            assertEvent(events, Watcher.Event.EventType.NodeDeleted, ""/a"");
        }
    }
{code}

I skimmed the code and found two possible causes:
# {{ZKWatchManager.materialize}} materializes all persistent watchers(include recursive ones) for {{NodeChildrenChanged}} event.
# {{WatcherModeManager}} trackes only one watcher mode.",,eolivelli,kezhuw,randgalt,tison,,,,,,,,,,,,,,,,"kezhuw opened a new pull request, #1859:
URL: https://github.com/apache/zookeeper/pull/1859

   Currently, in server side, there is only one watcher mode per path. This
   will destroy and corrupt old watch when client watch a watching path.


;09/Apr/22 07:52;githubbot;600","sonatype-lift[bot] commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846598219


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java:
##########
@@ -305,13 +322,12 @@ public synchronized WatchesSummary getWatchesSummary() {
     @Override
     public void shutdown() { /* do nothing */ }
 
-    @Override
-    public int getRecursiveWatchQty() {
-        return watcherModeManager.getRecursiveQty();
+    int getRecursiveWatchQty() {
+        return recursiveWatchQty;

Review Comment:
   *THREAD_SAFETY_VIOLATION:*  Read/Write race. Non-private method `WatchManager.getRecursiveWatchQty()` reads without synchronization from `this.recursiveWatchQty`. Potentially races with write in method `WatchManager.addWatch(...)`.
    Reporting because another access to the same memory occurs on a background thread, although this access may not.
   
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)



;09/Apr/22 08:04;githubbot;600","eolivelli commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846598942


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {

Review Comment:
   final?



##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {
+    /**
+     * Stats that have no watchers attached.
+     *
+     * <p>This could be used as start point to compute new stats using {@link #addMode(WatcherMode)}.
+     */
+    public static final WatchStats NONE = new WatchStats(0);
+
+    static final WatchStats[] WATCH_STATS;

Review Comment:
   Using static variables makes it vary hard to write tests that start multiple nodes.
   
   Can we get rid of this static variable? Maybe you can create a wrapper class that contains the array



##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java:
##########
@@ -305,13 +322,12 @@ public synchronized WatchesSummary getWatchesSummary() {
     @Override
     public void shutdown() { /* do nothing */ }
 
-    @Override
-    public int getRecursiveWatchQty() {
-        return watcherModeManager.getRecursiveQty();
+    int getRecursiveWatchQty() {

Review Comment:
   Missing synchronised here



;09/Apr/22 08:15;githubbot;600","kezhuw commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846606935


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java:
##########
@@ -305,13 +322,12 @@ public synchronized WatchesSummary getWatchesSummary() {
     @Override
     public void shutdown() { /* do nothing */ }
 
-    @Override
-    public int getRecursiveWatchQty() {
-        return watcherModeManager.getRecursiveQty();
+    int getRecursiveWatchQty() {

Review Comment:
   Done. But I think it is not necessary as it is visible for testing. It is only accessed in `getPathParentIterator` which has been moved under `synchronized`. Anyway, it is not harm.



##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {

Review Comment:
   Done.



;09/Apr/22 09:37;githubbot;600","kezhuw commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846609327


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {
+    /**
+     * Stats that have no watchers attached.
+     *
+     * <p>This could be used as start point to compute new stats using {@link #addMode(WatcherMode)}.
+     */
+    public static final WatchStats NONE = new WatchStats(0);
+
+    static final WatchStats[] WATCH_STATS;

Review Comment:
   Not sure whether I have got what you mean.
   
   But both `WatchStats.flag` and `WatchStats.WATCH_STATS` are final. I tried to make `WatchStats` immutable and create all possible combinations upfront to avoid potential massive equal objects in case of large number of watches. Old implementation uses single `WatcherMode`. Not sure whether it is worth or not. But I think we have two options:
   * Use fixed number(aka. eight) of `WatchStats` objects.
   * Make `WatchStats` mutable and create one per session path.
   
   I am ok with either.



;09/Apr/22 10:04;githubbot;600","eolivelli commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846609558


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {
+    /**
+     * Stats that have no watchers attached.
+     *
+     * <p>This could be used as start point to compute new stats using {@link #addMode(WatcherMode)}.
+     */
+    public static final WatchStats NONE = new WatchStats(0);
+
+    static final WatchStats[] WATCH_STATS;

Review Comment:
   sorry, I misunderstood the meaning of this class.
   it really looks like a enum.
   
   I believe that the current design works.
   
   but, why aren'y you using a enum ?



;09/Apr/22 10:06;githubbot;600","kezhuw commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846614408


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {
+    /**
+     * Stats that have no watchers attached.
+     *
+     * <p>This could be used as start point to compute new stats using {@link #addMode(WatcherMode)}.
+     */
+    public static final WatchStats NONE = new WatchStats(0);
+
+    static final WatchStats[] WATCH_STATS;

Review Comment:
   * The enum names might look like a mess. `StandardAndPersistentAndPersistentRecursive` and so on.
   * There is not direct access to some mebers from outside. For example `StandardAndPersistent` should only be generated from `WatchStats.addMode` or `WatchStats.removeMode` but not outside.



;09/Apr/22 10:26;githubbot;600","eolivelli commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r846618287


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchStats.java:
##########
@@ -0,0 +1,105 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ * <p>
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * <p>
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.watch;
+
+/**
+ * Statistics for multiple different watches on one node.
+ */
+public class WatchStats {
+    /**
+     * Stats that have no watchers attached.
+     *
+     * <p>This could be used as start point to compute new stats using {@link #addMode(WatcherMode)}.
+     */
+    public static final WatchStats NONE = new WatchStats(0);
+
+    static final WatchStats[] WATCH_STATS;

Review Comment:
   Makes sense.
   Thanks
   
   Your proposal sounds like a good design



;09/Apr/22 11:04;githubbot;600","eolivelli commented on PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#issuecomment-1093910536

   We need more eyes on this patch


;09/Apr/22 11:04;githubbot;600","kezhuw commented on PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#issuecomment-1446319319

   Could you please take a look at this ? @tisonkun @eolivelli @Randgalt @symat @maoling @arshadmohammad @anmolnar @ztzg @lvfangmin @breed


;27/Feb/23 13:23;githubbot;600","tisonkun commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r1119902283


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java:
##########
@@ -684,7 +684,9 @@ public String getMaxPrefixWithQuota(String path) {
     public void addWatch(String basePath, Watcher watcher, int mode) {
         WatcherMode watcherMode = WatcherMode.fromZooDef(mode);
         dataWatches.addWatch(basePath, watcher, watcherMode);
-        childWatches.addWatch(basePath, watcher, watcherMode);
+        if (watcherMode != WatcherMode.PERSISTENT_RECURSIVE) {
+            childWatches.addWatch(basePath, watcher, watcherMode);
+        }

Review Comment:
   IIRC we filter out child watch events for PRESISTENT_RECURSIVE in https://github.com/apache/zookeeper/pull/1820.
   
   Do changes in this file optimize the server-side logic while it's not user-visible and has nothing to do with ""Support different watch modes on same path""?



;28/Feb/23 11:06;githubbot;600","kezhuw commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r1120020783


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java:
##########
@@ -684,7 +684,9 @@ public String getMaxPrefixWithQuota(String path) {
     public void addWatch(String basePath, Watcher watcher, int mode) {
         WatcherMode watcherMode = WatcherMode.fromZooDef(mode);
         dataWatches.addWatch(basePath, watcher, watcherMode);
-        childWatches.addWatch(basePath, watcher, watcherMode);
+        if (watcherMode != WatcherMode.PERSISTENT_RECURSIVE) {
+            childWatches.addWatch(basePath, watcher, watcherMode);
+        }

Review Comment:
   No. For sole `WatcherMode.PERSISTENT_RECURSIVE`, there is no `EventType.NodeChildrenChanged` delivered as old code do filter in `WatcherManager#triggerWatch`.
   
   https://github.com/apache/zookeeper/blob/de8768807fc7a3fcabc9762b033cf59e695cf14b/zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java#L137-L141
   
   The above changes do such filter in first place to reduce coding burden in `triggerWatch` phase.



;28/Feb/23 12:55;githubbot;600","tisonkun commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r1125239144


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java:
##########
@@ -232,49 +249,49 @@ public synchronized void dumpWatches(PrintWriter pwriter, boolean byPath) {
 
     @Override
     public synchronized boolean containsWatcher(String path, Watcher watcher) {
-        WatcherMode watcherMode = watcherModeManager.getWatcherMode(watcher, path);
-        PathParentIterator pathParentIterator = getPathParentIterator(path);
-        for (String localPath : pathParentIterator.asIterable()) {
-            Set<Watcher> watchers = watchTable.get(localPath);
-            if (!pathParentIterator.atParentPath()) {
-                if (watchers != null) {
-                    return true;    // at the leaf node, all watcher types match
-                }
-            }
-            if (watcherMode.isRecursive()) {
-                return true;
-            }
-        }
-        return false;
+        Set<Watcher> list = watchTable.get(path);

Review Comment:
   @kezhuw Can you explain a bit why this change is correct?
   
   It seems that previously, `containsWatcher (path, watcher)` will be `true` if any parent of the path has a persistent recursive watch.



;04/Mar/23 02:45;githubbot;600","kezhuw commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r1125290082


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java:
##########
@@ -232,49 +249,49 @@ public synchronized void dumpWatches(PrintWriter pwriter, boolean byPath) {
 
     @Override
     public synchronized boolean containsWatcher(String path, Watcher watcher) {
-        WatcherMode watcherMode = watcherModeManager.getWatcherMode(watcher, path);
-        PathParentIterator pathParentIterator = getPathParentIterator(path);
-        for (String localPath : pathParentIterator.asIterable()) {
-            Set<Watcher> watchers = watchTable.get(localPath);
-            if (!pathParentIterator.atParentPath()) {
-                if (watchers != null) {
-                    return true;    // at the leaf node, all watcher types match
-                }
-            }
-            if (watcherMode.isRecursive()) {
-                return true;
-            }
-        }
-        return false;
+        Set<Watcher> list = watchTable.get(path);

Review Comment:
   > It seems that previously, containsWatcher (path, watcher) will be true if any parent of the path has a persistent recursive watch.
   
   It is no true though it might intend to do so. Two cases for old code:
   * If there is a watch for (watcher, path), the first `return true` will hold.
   * If there is no watch for (watcher, path), `watcherMode` will be `WatcherMode.STANDARD`, no `return true` will hold:
      * First `return true` will not hold as it only apply for leaf node where there is no such watch.
      * Second `return true` will not hold as `WatcherMode.STANDARD` is no recursive.
   
   So my change has same behavior as old code and also same to when it was introduced. I think this behavior meets what [`OpCode.checkWatches`](https://issues.apache.org/jira/browse/ZOOKEEPER-1910) expects which is the [sole client visible call to this method](https://github.com/apache/zookeeper/blob/de8768807fc7a3fcabc9762b033cf59e695cf14b/zookeeper-server/src/main/java/org/apache/zookeeper/server/FinalRequestProcessor.java#L507). Disregard [cheating behaviour of `ZooKeeper.removeWatches`](https://issues.apache.org/jira/browse/ZOOKEEPER-4625), removing sub nodes from recursive watching sounds quirk as similar one I saw in [ZOOKEEPER-4471](https://issues.apache.org/jira/browse/ZOOKEEPER-4471).
   
   



;04/Mar/23 03:54;githubbot;600","tisonkun commented on code in PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#discussion_r1125318797


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/watch/WatchManager.java:
##########
@@ -232,49 +249,49 @@ public synchronized void dumpWatches(PrintWriter pwriter, boolean byPath) {
 
     @Override
     public synchronized boolean containsWatcher(String path, Watcher watcher) {
-        WatcherMode watcherMode = watcherModeManager.getWatcherMode(watcher, path);
-        PathParentIterator pathParentIterator = getPathParentIterator(path);
-        for (String localPath : pathParentIterator.asIterable()) {
-            Set<Watcher> watchers = watchTable.get(localPath);
-            if (!pathParentIterator.atParentPath()) {
-                if (watchers != null) {
-                    return true;    // at the leaf node, all watcher types match
-                }
-            }
-            if (watcherMode.isRecursive()) {
-                return true;
-            }
-        }
-        return false;
+        Set<Watcher> list = watchTable.get(path);

Review Comment:
   Thanks for your explanation! I get it now :)



;04/Mar/23 04:22;githubbot;600","tisonkun commented on PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#issuecomment-1454473221

   Cc @Randgalt @lvfangmin @breed if you can take a look also.


;04/Mar/23 05:29;githubbot;600","kezhuw commented on PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#issuecomment-1525464574

   Shall we merge this ? Or we need more eyeballs on this? @eolivelli @tisonkun @Randgalt @lvfangmin @breed @cnauroth @symat @maoling 
   
   I guess lazy consensus could apply here if no more comments.


;27/Apr/23 10:52;githubbot;600","tisonkun commented on PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859#issuecomment-1535878119

   Merging...
   
   Thanks for your contribution @kezhuw!


;05/May/23 07:57;githubbot;600","tisonkun merged PR #1859:
URL: https://github.com/apache/zookeeper/pull/1859


;05/May/23 07:58;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,11400,,,0,11400,,,,,,,,,,,,,,,,,ZOOKEEPER-4472,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri May 05 07:59:17 UTC 2023,,,,,,,,,,"0|z0zhbc:",9223372036854775807,"Previously, there is only one watch mode per path and session. Later watch will ruin existing watch. For example, getData after AddWatchMode::Persistent will result in one-time data watch and persistent children watch. This is not our intend and it fears clients from arbitrary watch. So we decide to support multiple different watch modes on one path in one session. This way, users of client can watch whatever paths in whatever modes. They will not ruin each other.",,,,,,,,,,,,,,,,,,,,"21/Feb/22 01:55;kezhuw;Hi [~eolivelli], could you assign this ticket to me ? I think we can solve this by changes:

# Don't materialize {{ZKWatchManager.persistentRecursiveWatches}} for {{NodeChildrenChanged}} in client side.
# Count different {{WatcherMode}} for watcher's path. Since there are only three modes, the cost is small if we use bitwise flags to accumulate them to {{int}}.

What do you think ?

You can check my [github patch|https://github.com/kezhuw/zookeeper/commit/9b7cb811c3a0d8cb51809776749c69ab019246b1] if desired before official github pull request. ;;;","21/Feb/22 21:06;eolivelli;One important thing is that we don't break compatibility with current behaviour.

Otherwise we will break applications.

If we introduce a behaviour change then we have to add a configuration flag.

 

Tagging [~randgalt] who is the original designer of persistent watches.;;;","21/Feb/22 21:10;eolivelli;So basically you say that if you set a persistent watch we are missing to send notifications to regular watches?

 

In this case if we implement the expected behaviour then we are not breaking compatibility (we will be sending more notifications, not fewer);;;","21/Feb/22 21:43;randgalt;I'm -1 on this. This breaks the contract for persistent recursive watchers. I didn't spend a lot of time reading this but as I understand it it adds child events to persistent recursive watches. I specifically did not have that in my original change as the the ZNodes generate their own events - everything under the root receives an event - the child events end up as duplicates and make uses of persistent recursive watches more complicated.;;;","22/Feb/22 02:07;kezhuw;[~randgalt] No, It does not adds child events to persistent recursive watches.

Actually, it fixed one situation that child event were delivered to persistent recursive watcher. I give an example here:
# Add {{PERSISTENT_RECURSIVE}} to node ""/a"".
# Add {{PERSISTENT}} to node ""/a/b"" which is a child of above node.

Then child events will be delivered to ""/a/b""({{NodeChildrenChanged}}), which will be delivered to {{PERSISTENT_RECURSIVE}} watchers in client unconditionally. This is the cause#1 I listed in description.

[~eolivelli] [~randgalt] I try to make different modes coexist with each other on same path and session. I list the combinations here for evaluation:
# Add {{PERSISTENT}} after {{STANDARD}} watcher. No changes as {{PERSISTENT}} includes all {{STANDARD}} watch events.
# Add {{PERSISTENT_RECURSIVE}} after {{STANDARD}} or {{PERSISTENT}} watcher. There will be not child event in old behavior. In new behavior, child event will be delivered to {{STANDARD}} or {{PERSISTENT}} watcher but not {{PERSISTENT_RECURSIVE}}.
# Add {{STANDARD}} after {{PERSISTENT}} or {{PERSISTENT_RECURSIVE}}. Things go weird in old behavior as server watchers are override by {{STANDARD}} watcher but not client side. The results are complicated to describe depends on different combinations in this case. In new behavior, them work independent with no interference.

The combination#2 deliver missing child notification to standard and persistent watcher. The combination#3, deliver missing persistent notifications.

For short, there are more notifications in new behavior and no child events for recursive watcher.

> So basically you say that if you set a persistent watch we are missing to send notifications to regular watches?
No. {{PERSISTENT}} are super set of regular watches. I hope the combinations listed above answer your question.

> we will be sending more notifications, not fewer
Yes.;;;","22/Feb/22 10:17;randgalt;I see - so there is a PERSISTENT watcher below a PERSISTENT_RECURSIVE watcher. In that case I take back my comment. That sounds like a bug. I apologize but I don't have much time to spend on this however I'd be happy to review any PRs.;;;","22/Feb/22 10:35;kezhuw;I guess I should split this issue to two:

1. To filter {{NodeChildrenChanged}} in client side for {{PERSISTENT_RECURSIVE}}.
2. For support different watcher modes on same path within one session.

The discussion and review might concentrate more on #2 as #1 sounds like a bug but #2 sounds like feature request.;;;","22/Feb/22 10:50;kezhuw;Hi [~randgalt] [~eolivelli], I have split #1 to ZOOKEEPER-4475. I will fix that first.

For #2, I think we can continue discuss on pr reviewing. We could gain more confidences in reviewing real code with more tests to assert that no child is delivered to recursive watchers.;;;","05/May/23 07:59;tison;master via a64dbf5b06ca1a73dc2ad6c7d31e679e312082aa;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
zooinspector logback pattern config add escape for '(' and ')',ZOOKEEPER-4465,13427625,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,iamgd67,iamgd67,10/Feb/22 01:20,15/Feb/22 18:54,13/Jul/23 09:08,15/Feb/22 11:31,3.6.2,,,,,,,,,3.8.0,,,,,contrib,,,,0,pull-request-available,,"zooinspect logback config file logback.xml currently use a pattern of this

 
{code:java}
<pattern>%5p [%t] (%F:%L) - %m%n</pattern> {code}
which not escape the '(' and ')', cause logback to ignore parts after ')'.

 

 

according to logback documents, '(' and ')' is used for grouping, need escape by '\' if used as normal char

[https://logback.qos.ch/manual/layouts.html#grouping|https://logback.qos.ch/manual/layouts.html#grouping] 

 

will create pr update it to 
{code:java}
<pattern>%5p [%t] \(%F:%L\) - %m%n</pattern> {code}
 

 ",,iamgd67,symat,,,,,,,,,,,,,,,,,,"iamgd67 opened a new pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814


   zooinspect logback config file `logback.xml` currently use a pattern of this 
   `<pattern>%5p [%t] (%F:%L) - %m%n</pattern> `
   which not escape the '(' and ')', cause logback to ignore parts after ')'. 
   
   according to logback documents, '(' and ')' is used for grouping, need escape by '\' if used as normal char
   https://logback.qos.ch/manual/layouts.html#grouping  
   
   this pr update it to (add '\' to escape)
   `<pattern>%5p [%t] \(%F:%L\) - %m%n</pattern> `


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/22 01:28;githubbot;600","iamgd67 commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1038579742


   @symat could you please review this?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/22 03:07;githubbot;600","iamgd67 commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1038943461


   @anmolnar likelly the broken is from #1807 which  change log4j to logback, can you review this fix?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Feb/22 10:58;githubbot;600","iamgd67 commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1039878828


   @eolivelli could you please review this?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 05:37;githubbot;600","symat commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1039961028


   cool, thanks @iamgd67 for the contribution! This would be great to land in 3.8.0 where we will migrate to logback.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 07:52;githubbot;600","symat commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1039962424


   @anmolnar can you take a look?
   (we should merge this to master, branch-3.8 and branch-3.8.0)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 07:53;githubbot;600","symat commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1040087920


   we had one java unit test failure (all c++ tests passed this time).
   ```
   [ERROR]   EagerACLFilterTest.testCreate2Fail:171->assertTransactionState:115 Server State: OBSERVING Check Enabled: true Transaction state on Leader after failed create2 ==> expected: <4294967298> but was: <4294967299>
   ```
   
   I don't see how this test failure could connect to the PR, but to be on the safe side I re-triggered CI. I will merge if the CI is green (or at least this single failing test become green).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 10:10;githubbot;600","symat commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1040160580


   CI failed again, but with different test failure this time:
   ```
   [ERROR] Failures: 
   [ERROR]   ReconfigRollingRestartCompatibilityTest.testRollingRestartWithExtendedMembershipConfig:263 waiting for server 2 being up ==> expected: <true> but was: <false>
   [INFO] 
   [ERROR] Tests run: 2976, Failures: 1, Errors: 0, Skipped: 4
   ```
   
   we have many flaky tests apparently... anyway, I'm merging this PR now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 11:26;githubbot;600","asfgit closed pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 11:29;githubbot;600","symat commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1040166011


   @iamgd67, thanks for the contribution again!
   PR merged to branches:
   - master
   - branch-3.8
   - branch-3.8.0


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 11:32;githubbot;600","iamgd67 commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1039878828


   @eolivelli could you please review this?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 18:35;githubbot;600","asfgit closed pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 18:36;githubbot;600","symat commented on pull request #1814:
URL: https://github.com/apache/zookeeper/pull/1814#issuecomment-1039961028






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/22 18:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Feb 15 11:33:05 UTC 2022,,,,,,,,,,"0|z0zfig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/22 11:31;symat;Issue resolved by pull request 1814
[https://github.com/apache/zookeeper/pull/1814];;;","15/Feb/22 11:33;symat;[~iamgd67] thanks for the contribution!
PR merged to branches:
- master
- branch-3.8
- branch-3.8.0;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumPeer overrides Thread.getId with different semantics,ZOOKEEPER-4460,13425338,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,cnauroth,AlanBateman,AlanBateman,28/Jan/22 08:13,30/Jan/23 07:57,13/Jul/23 09:08,03/Nov/22 06:06,,,,,,,,,,3.7.2,3.8.1,,,,server,,,,0,pull-request-available,,"In OpenJDK, Project Loom has significantly re-implemented java.lang.Thread. One part of this is using some of the bits in the thread identifier for non-exposed purposes. Sadly, Thread::getId is not final and it's possible that sub-classes of Thread have overridden getId to have different semantics. The JDK can defend against this but there may be 3rd party libraries that make use of Thread::getId. A corpus search of Maven central found only one class: org.apache.zookeeper.server.quorum.QuorumPeer. Does this project know why getId has been overridden to return something that is not the thread identifier?",,AlanBateman,cnauroth,dhoard,,,,,,,,,,,,,,,,,"cnauroth opened a new pull request, #1942:
URL: https://github.com/apache/zookeeper/pull/1942

   …ntics.


;02/Nov/22 05:27;githubbot;600","cnauroth commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1299598419

   @eolivelli , @symat or @anmolnar , would you please review?
   
   As discussed in JIRA issue [ZOOKEEPER-4460](https://issues.apache.org/jira/browse/ZOOKEEPER-4460), the ZooKeeper codebase currently contains an override of `Thread#getId()`, which will be incompatible with OpenJDK Project Loom, targeted to Java 19. I've taken the approach of renaming `QuorumPeer#getId()` to `QuorumPeer#getMyId()`, consistent with documented terminology for the ID assigned to a peer in a quorum. From what I can tell, it was never intentional to override `Thread#getId()`. It was just a logical choice for a method name in a class that coincidentally also `extends Thread`.
   
   `QuorumPeer` is a server-side class that isn't part of a public API, so we don't need to preserve backward compatibility. As a safety measure, I reviewed the code for [Apache Curator](https://github.com/apache/curator), where I suspected there might be a deeper integration with ZooKeeper internals for testing infrastructure. Even in Curator, I didn't find any calls to `QuorumPeer#getId()`.


;02/Nov/22 05:34;githubbot;600","sonatype-lift[bot] commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1299601080

   :warning: **52 God Classes** were detected by Lift in this project. [Visit the Lift web console](https://lift.sonatype.com/results/github.com/apache/zookeeper/01GGVCXE6YD5J4DMW6NQ80YQMF?tab=technical-debt&utm_source=github.com&utm_campaign=lift-comment&utm_content=apache\%20zookeeper) for more details.


;02/Nov/22 05:37;githubbot;600","sonatype-lift[bot] commented on code in PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#discussion_r1011213870


##########
zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java:
##########
@@ -510,12 +510,12 @@ private boolean startConnection(Socket sock, Long sid) throws IOException {
         }
 
         // If lost the challenge, then drop the new connection
-        if (sid > self.getId()) {
-            LOG.info(""Have smaller server identifier, so dropping the connection: (myId:{} --> sid:{})"", self.getId(), sid);
+        if (sid > self.getMyId()) {
+            LOG.info(""Have smaller server identifier, so dropping the connection: (myId:{} --> sid:{})"", self.getMyId(), sid);

Review Comment:
   *RESOURCE_LEAK:*  resource of type `java.io.DataInputStream` acquired by call to `new()` at line 498 is not released after line 514.
   
   ---
   
   <details><summary><b>ℹ️ Learn about @sonatype-lift commands</b></summary>
   
   You can reply with the following commands. For example, reply with ***@sonatype-lift ignoreall*** to leave out all findings.
   | **Command** | **Usage** |
   | -----------;02/Nov/22 05:37;githubbot;600","cnauroth commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1299612003

   The sonatype-lift warnings are potentially interesting, but unrelated to code changed by this patch.


;02/Nov/22 05:51;githubbot;600","eolivelli commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1299635251

   I think that we should port this to the active branches, at least 3.8


;02/Nov/22 06:21;githubbot;600","cnauroth commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1301489569

   Thanks for the review, @eolivelli ! I've confirmed that this patch backports cleanly to branch-3.8 and branch-3.7, so I'll plan on committing to those branches. (Going back any further than that will hit merge conflicts.)


;02/Nov/22 23:30;githubbot;600","cnauroth commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1301517081

   There was one test failure, which appears to be unrelated.
   
   ```
   [ERROR] Tests run: 5, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 25.109 s <<< FAILURE! - in org.apache.zookeeper.server.ConnectionMetricsTest
   [ERROR] testRevalidateCount  Time elapsed: 1.195 s  <<< ERROR!
   java.lang.NullPointerException
   	at org.apache.zookeeper.test.QuorumUtil.getConnectionStringForServer(QuorumUtil.java:343)
   	at org.apache.zookeeper.server.ConnectionMetricsTest.testRevalidateCount(ConnectionMetricsTest.java:65)
   ```
   


;03/Nov/22 00:23;githubbot;600","cnauroth merged PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942


;03/Nov/22 05:50;githubbot;600","cnauroth commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1301683143

   I have merged this to master, branch-3.8 and branch-3.7. @eolivelli , thank you for reviewing!


;03/Nov/22 06:05;githubbot;600","li4wang commented on PR #1942:
URL: https://github.com/apache/zookeeper/pull/1942#issuecomment-1308116154

   The test failure `ConnectionMetricsTest.testRevalidateCount` is related to the changes in this PR. 
   
   ` int follower1 = (int) util.getFollowerQuorumPeers().get(0).getId()`
   
   The test calls getId() to get the server id. Since getId()  was changed to getMyId, the super class Thread.getId() is called and the thread id was returned. There is no corresponding peer associated to the thread id, that's why NPE is thrown.
   
   The test passed after changing getId() to getMyId(). I will open a JIRA to check in the fix. It would great if @eolivelli can do a quick review and get it merged. Thanks.
   
   https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/test/java/org/apache/zookeeper/server/ConnectionMetricsTest.java#L60-L65
   
   
   


;09/Nov/22 02:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Nov 03 06:06:23 UTC 2022,,,,,,,,,,"0|z0z1jc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Oct/22 21:39;cnauroth;Hello [~AlanBateman] . Thank you for notifying us about this. I reviewed the referenced {{QuorumPeer}} class here:

https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java

I didn't find any occurrence of overriding {{Thread#getId()}}. There is a subclass of {{Thread}} in that code, and there is a declaration of a {{public long getId()}} method, but it's not part of the {{Thread}} subclass.

I also did a more exhaustive review of all {{Thread}} subclasses in the ZooKeeper codebase. I didn't find any overrides of {{getId()}}.

* Is it possible that this is a false positive?
* If not, then did your search identify a specific version of the ZooKeeper codebase? Perhaps this impacted an older version, but the code has since been changed?
* I believe Loom is targeted to Java 19? Assuming a future of ZooKeeper running on Java 19+ at some point, what kinds of problems would we see if we had an override of {{getId()}} that I failed to find?

Thanks again!;;;","31/Oct/22 09:32;AlanBateman;The static analysis was >100k artifacts from Maven Central so I assume it analyzed many different versions. Sorry I didn't retain the results of the search but I think this was it:

[https://zookeeper.apache.org/doc/r3.8.0/apidocs/zookeeper-server/org/apache/zookeeper/server/quorum/QuorumPeer.html#getId--]

Code doing, for example, Thread.currentThread().getId() should expect to get the thread identifier so this is why overriding getId() is problematic. We deprecated the method in Java 19 and added a new final method threadId().

 

 ;;;","31/Oct/22 15:59;cnauroth;[~AlanBateman] , thanks for the reply. I was misreading the {{QuorumPeer}} code, because it has 2 different {{getId()}} methods thanks to a nested class. It looks like we will have to address this. I'm not even sure that overriding the thread ID was intentional so much as {{getId()}} was a natural method name to use in this class that happens to extend {{{}Thread{}}}. (There is no {{@Override}} annotation indicating intent.) I'll investigate if we can safely change this.;;;","02/Nov/22 05:46;cnauroth;I've sent in a pull request and asked a few other committers for review. The approach is to rename {{QuorumPeer#getId()}} to {{{}QuorumPeer#getMyId(){}}}, which is consistent with ZooKeeper terminology. This is a server-side implementation detail, not a public API, so I expect the change is safe. To be cautious, I reviewed code in Apache Curator, where I suspected a tighter integration with ZooKeeper internals for testing infrastructure. I didn't find any calls into {{QuorumPeer#getId()}} there though.;;;","03/Nov/22 06:06;cnauroth;I have merged the fix to branch-3.8 and branch-3.7. [~eolivelli] , thank you for reviewing. [~AlanBateman] , thank you for the bug report.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Log4j 1.X CVE-2022-23302/5/7 vulnerabilities,ZOOKEEPER-4452,13424702,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,eolivelli,dominique,dominique,25/Jan/22 14:24,29/Mar/22 07:43,13/Jul/23 09:08,29/Mar/22 07:42,,,,,,,,,,3.6.4,3.7.1,3.8.0,,,security,,,,1,,,"Some log4j 1.x vulnerabilities have been disclosed recently:   
 * CVE-2022-23302: [https://nvd.nist.gov/vuln/detail/CVE-2022-23302]    
 * CVE-2022-23305 : [https://nvd.nist.gov/vuln/detail/CVE-2022-23305]    
 * CVE-2022-23307 : [https://nvd.nist.gov/vuln/detail/CVE-2022-23307]

We would like to know if zookeeper is affected by these vulnerabilities ?",,ctubbsii,dominique,eolivelli,joschi,Steven Rand,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4427,,,,ZOOKEEPER-4455,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 29 07:42:56 UTC 2022,,,,,,,,,,"0|z0yxmg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jan/22 19:58;ctubbsii;For current ZK releases under maintenance, it might be a good idea to switch to https://reload4j.qos.ch/ to replace log4j1.x
For the next release line, ZOOKEEPER-4427 is already addressing migration away from log4j1.;;;","29/Mar/22 07:42;eolivelli;Resolved for 3.7.x and 3.6.x with ZOOKEEPER-4455

Resolved for 3.8.x with the move to LogBack;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
branch-3.6 txnLogCountTest use wrong version of Junit Assert import,ZOOKEEPER-4446,13423510,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,phang98,phang98,19/Jan/22 13:20,13/Dec/22 17:44,13/Jul/23 09:08,13/Dec/22 17:44,3.6.4,,,,,,,,,3.6.4,,,,,server,,,,0,pull-request-available,,"The issue is due to [https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java]
{code:java}
import static org.junit.jupiter.api.Assertions.assertEquals; {code}
Cause the compilation error, since Junit 4 still in used.
{code:java}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:testCompile (default-testCompile) on project zookeeper: Compilation failure: Compilation failure: 

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[21,36] package org.junit.jupiter.api does not exist

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[21,1] static import only from classes and interfaces

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[49,9] cannot find symbol

  

  
    
    [ERROR]   symbol:   method assertEquals(int,int)

  

  
    
    [ERROR]   location: class org.apache.zookeeper.server.TxnLogCountTest

  

  
    
    [ERROR] /home/runner/work/zookeeper/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java:[52,9] cannot find symbol

  

  
    
    [ERROR]   symbol:   method assertEquals(int,int)

  

  
    
    [ERROR]   location: class org.apache.zookeeper.server.TxnLogCountTest

  

  
    
    [ERROR] -> [Help 1] {code}
 

 ",,devale11,phang98,symat,,,,,,,,,,,,,,,,,"phang98 opened a new pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797


   This PR mean to fix the invalid import static for junit Assert that only available in Junit 5.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/22 13:26;githubbot;600","symat commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021278958


   sorry, I just merged ZooKeeper 3988 to branch 3.6, and fixed this issue together with the similar junit issue in that PR to make it work. I was not aware that this was already discovered and you already prepared a separate PR for txnLogCountTest.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 15:04;githubbot;600","symat commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021278958


   sorry, I just merged ZooKeeper 3988 to branch 3.6, and fixed this issue together with the similar junit issue in that PR to make it work. I was not aware that this was already discovered and you already prepared a separate PR for txnLogCountTest.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:45;githubbot;600","phang98 commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021778314


   no worry, anyone who trying to build branch-3.6 will notice anyway. I was just surprise this is broken for quite sometime when I try to build to validate this branch with latest jetty server. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 01:49;githubbot;600","phang98 edited a comment on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021778314


   no worry, anyone who trying to build branch-3.6 will notice anyway. I was just surprise this is broken for quite sometime when I try to build to validate this branch with latest jetty server. May be we can closed this PR now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 01:50;githubbot;600","maoling closed pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 08:32;githubbot;600","maoling commented on pull request #1797:
URL: https://github.com/apache/zookeeper/pull/1797#issuecomment-1021975222


   @phang98 Thanks for your contribution. Since this issue had been fixed by [this](https://github.com/apache/zookeeper/commit/357e88c1438780e28d36bf54784937e18547e136#diff-9d42ebb7cb61ecb8e3014f10e256fab1af0e93005a62a0ff97a8d5046dd5f2d1L21), let me close this PR


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/22 08:33;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,ZOOKEEPER-4445,,,,,,ZOOKEEPER-4362,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,Java,Tue Dec 13 17:44:23 UTC 2022,,,,,,,,,,"0|z0yqag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Dec/22 17:44;symat;resolved in this commit:

https://github.com/apache/zookeeper/commit/357e88c1438780e28d36bf54784937e18547e136#diff-9d42ebb7cb61ecb8e3014f10e256fab1af0e93005a62a0ff97a8d5046dd5f2d1L21;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-2872 for branch-3.5 (Interrupted snapshot sync causes data loss),ZOOKEEPER-4433,13419975,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ananysin,ananysin,ananysin,30/Dec/21 06:48,18/May/22 12:46,13/Jul/23 09:08,08/Feb/22 15:51,3.5.9,,,,,,,,,3.5.10,,,,,,,,,0,pull-request-available,,,,ananysin,arshad.mohammad,,,,,,,,,,,,,,,,,,"AnanyaSingh2121 commented on pull request #1790:
URL: https://github.com/apache/zookeeper/pull/1790#issuecomment-1002910720


   @nkalmar , @eolivelli  could you please take a look at this.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Dec/21 07:49;githubbot;600","brahmareddybattula commented on pull request #1790:
URL: https://github.com/apache/zookeeper/pull/1790#issuecomment-1003106733


   @AnanyaSingh2121  Changes lgtm . +1 (non-binding). @lvfangmin can you check once as you committed to master.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Dec/21 16:53;githubbot;600","nkalmar commented on pull request #1790:
URL: https://github.com/apache/zookeeper/pull/1790#issuecomment-1010873440


   LGTM, also contains ZOOKEEPER-3595 fix, +1


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jan/22 10:08;githubbot;600","arshadmohammad closed pull request #1790:
URL: https://github.com/apache/zookeeper/pull/1790


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/22 15:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2872,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Feb 08 16:13:08 UTC 2022,,,,,,,,,,"0|z0y4io:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/22 15:51;arshad.mohammad;Issue resolved by pull request 1790
[https://github.com/apache/zookeeper/pull/1790];;;","08/Feb/22 16:02;arshad.mohammad;Thanks [~ananysin] for submitting the PR.
Added you as ZK contributor;;;","08/Feb/22 16:13;ananysin;Thank you [~arshad.mohammad] .;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix the znode type for Barrier implementation in the zookeeperTutorial.md,ZOOKEEPER-4406,13409306,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,maoling,maoling,31/Oct/21 05:41,31/Oct/21 06:08,13/Jul/23 09:08,31/Oct/21 06:08,,,,,,,,,,3.8.0,,,,,documentation,,,,0,pull-request-available,,,,maoling,,,,,,,,,,,,,,,,,,,"asfgit closed pull request #1738:
URL: https://github.com/apache/zookeeper/pull/1738


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Oct/21 06:07;githubbot;600","maoling commented on pull request #1738:
URL: https://github.com/apache/zookeeper/pull/1738#issuecomment-955643095


   @yuMoyu 
   Thanks for your contribution.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Oct/21 06:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-10-31 05:41:56.0,,,,,,,,,,"0|z0wbds:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Problem to connect to zookeeper in FIPS mode,ZOOKEEPER-4393,13405604,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,edipesh19,edipesh19,08/Oct/21 11:17,02/Jul/23 13:54,13/Jul/23 09:08,15/Jun/23 12:13,3.6.3,,,,,,,,,3.8.2,3.9.0,,,,security,,,,0,pull-request-available,,"In my environment zookeeper is running in fips mode of 3 node cluster. My service is also running in fips mode with security provider org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider

And from the my service when I am trying to connect to zookeeper I am getting the below error.
{code:java}
2021-10-06 17:14:52,645 [nioEventLoopGroup-5-1] WARN  io.netty.channel.ChannelInitializer - opc.request.id=none - Failed to initialize a channel. Closing: [id: 0xa129ece9] -
org.apache.zookeeper.common.X509Exception$SSLContextException: java.security.KeyManagementException: FIPS mode: only SunJSSE TrustManagers may be used
	at org.apache.zookeeper.common.X509Util.createSSLContextAndOptionsFromConfig(X509Util.java:386)
	at org.apache.zookeeper.common.X509Util.createSSLContextAndOptions(X509Util.java:328)
	at org.apache.zookeeper.common.X509Util.createSSLContext(X509Util.java:256)
{code}
The reason is the zookeeper has its own trust manager implementation which is 
{code:java}
public class ZKTrustManager extends X509ExtendedTrustManager
{code}
and jdk also provide a trust manager implementation as below.
{code:java}
X509TrustManagerImpl extends X509ExtendedTrustManager implements X509TrustManager
{code}
Because of this hierarchy in SSLContextImpl::chooseTrustManager() method the below instance check become false and hence it falls to the exception block.
{code:java}
if (SunJSSE.isFIPS() && !(var1[var2] instanceof X509TrustManagerImpl)) {
    throw new KeyManagementException(""FIPS mode: only SunJSSE TrustManagers may be used"");
}
{code}
 

 ",,andor,edipesh19,kezhuw,liguoxiong,nilendra_jain,symat,tamaas,that_guy,,,,,,,,,,,,"anmolnar opened a new pull request, #2008:
URL: https://github.com/apache/zookeeper/pull/2008

   Proposed fix for FIPS-enablement, details have been discussed on the ticket and the mailing list.
   
   Includes:
   - Choose built-in `X509TrustManagerImpl` for trust manager if FIPS-mode is enabled,
   - Turn-on hostname verification in Netty stack (client-server comm only),
   - unit tests,
   - code cleanup.
   
   ps. JUnit 5 parameterized tests are a nightmare. What happened to the original impl...?
   
   cc @eolivelli @symat @phunt @ctubbsii 


;14/Jun/23 11:42;githubbot;600","eolivelli merged PR #2008:
URL: https://github.com/apache/zookeeper/pull/2008


;15/Jun/23 11:58;githubbot;600","anmolnar opened a new pull request, #2015:
URL: https://github.com/apache/zookeeper/pull/2015

   Target branches: master, branch-3.8


;19/Jun/23 15:36;githubbot;600","anmolnar opened a new pull request, #2016:
URL: https://github.com/apache/zookeeper/pull/2016

   (no comment)


;19/Jun/23 15:39;githubbot;600","anmolnar commented on PR #2016:
URL: https://github.com/apache/zookeeper/pull/2016#issuecomment-1597551215

   @eolivelli All true, I was thinking about it too. Most tests should be independent from this setting, since it only affects encryption in server-server and client-server comm. Those tests which are affected have already been extended with this setting (I hope).
   
   That said, an accurate review is always welcome. Not sure if @symat is around for instance... ;)


;19/Jun/23 17:57;githubbot;600","eolivelli commented on code in PR #2015:
URL: https://github.com/apache/zookeeper/pull/2015#discussion_r1234484138


##########
zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md:
##########
@@ -1834,6 +1834,14 @@ and [SASL authentication for ZooKeeper](https://cwiki.apache.org/confluence/disp
 
     This parameter has no effect, unless you enable the MultiAddress feature by setting *multiAddress.enabled=true*.
 
+* *fips-mode* :
+    (Java system property: **zookeeper.fips-mode**)
+    **New in 3.8.2:**
+    Enable FIPS compatibility mode in ZooKeeper. If enabled, the custom trust manager (`ZKTrustManager`) that is used for 
+    hostname verification will be disabled in order to comply with FIPS requirements. As a consequence, hostname verification is not
+    available in the Quorum protocol, but still can be set in client-server communication. Default: **true** (3.9.0+), 

Review Comment:
   This sentence looks scary: aren't we really validating dns hostnames? My understanding was that we enabled the https validation in Netty.
   
   I wonder if FIPS may allow that hostname verification is disabled.
   
   Cc @michealmarshall



##########
zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md:
##########
@@ -1834,6 +1834,14 @@ and [SASL authentication for ZooKeeper](https://cwiki.apache.org/confluence/disp
 
     This parameter has no effect, unless you enable the MultiAddress feature by setting *multiAddress.enabled=true*.
 
+* *fips-mode* :
+    (Java system property: **zookeeper.fips-mode**)
+    **New in 3.8.2:**
+    Enable FIPS compatibility mode in ZooKeeper. If enabled, the custom trust manager (`ZKTrustManager`) that is used for 
+    hostname verification will be disabled in order to comply with FIPS requirements. As a consequence, hostname verification is not
+    available in the Quorum protocol, but still can be set in client-server communication. Default: **true** (3.9.0+), 

Review Comment:
   This sentence looks scary: aren't we really validating dns hostnames? My understanding was that we enabled the https validation in Netty.
   
   I wonder if FIPS may allow that hostname verification is disabled.
   
   Cc @michealmarshal



;19/Jun/23 21:20;githubbot;600","eolivelli commented on code in PR #2015:
URL: https://github.com/apache/zookeeper/pull/2015#discussion_r1234484138


##########
zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md:
##########
@@ -1834,6 +1834,14 @@ and [SASL authentication for ZooKeeper](https://cwiki.apache.org/confluence/disp
 
     This parameter has no effect, unless you enable the MultiAddress feature by setting *multiAddress.enabled=true*.
 
+* *fips-mode* :
+    (Java system property: **zookeeper.fips-mode**)
+    **New in 3.8.2:**
+    Enable FIPS compatibility mode in ZooKeeper. If enabled, the custom trust manager (`ZKTrustManager`) that is used for 
+    hostname verification will be disabled in order to comply with FIPS requirements. As a consequence, hostname verification is not
+    available in the Quorum protocol, but still can be set in client-server communication. Default: **true** (3.9.0+), 

Review Comment:
   This sentence looks scary: aren't we really validating dns hostnames? My understanding was that we enabled the https validation in Netty.
   
   I wonder if FIPS may allow that hostname verification is disabled.
   
   



;19/Jun/23 21:20;githubbot;600","anmolnar commented on code in PR #2015:
URL: https://github.com/apache/zookeeper/pull/2015#discussion_r1234485053


##########
zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md:
##########
@@ -1834,6 +1834,14 @@ and [SASL authentication for ZooKeeper](https://cwiki.apache.org/confluence/disp
 
     This parameter has no effect, unless you enable the MultiAddress feature by setting *multiAddress.enabled=true*.
 
+* *fips-mode* :
+    (Java system property: **zookeeper.fips-mode**)
+    **New in 3.8.2:**
+    Enable FIPS compatibility mode in ZooKeeper. If enabled, the custom trust manager (`ZKTrustManager`) that is used for 
+    hostname verification will be disabled in order to comply with FIPS requirements. As a consequence, hostname verification is not
+    available in the Quorum protocol, but still can be set in client-server communication. Default: **true** (3.9.0+), 

Review Comment:
   > but still can be set in client-server communication. 
   
   I'm referring that we enabled the HTTPS verification in Netty. Hostname verification is not part of the SSL/TLS standard, so it should be implemented in the quorum protocol. Can FIPS enforce such thing?



;19/Jun/23 21:23;githubbot;600","anmolnar commented on code in PR #2015:
URL: https://github.com/apache/zookeeper/pull/2015#discussion_r1234485053


##########
zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md:
##########
@@ -1834,6 +1834,14 @@ and [SASL authentication for ZooKeeper](https://cwiki.apache.org/confluence/disp
 
     This parameter has no effect, unless you enable the MultiAddress feature by setting *multiAddress.enabled=true*.
 
+* *fips-mode* :
+    (Java system property: **zookeeper.fips-mode**)
+    **New in 3.8.2:**
+    Enable FIPS compatibility mode in ZooKeeper. If enabled, the custom trust manager (`ZKTrustManager`) that is used for 
+    hostname verification will be disabled in order to comply with FIPS requirements. As a consequence, hostname verification is not
+    available in the Quorum protocol, but still can be set in client-server communication. Default: **true** (3.9.0+), 

Review Comment:
   > but still can be set in client-server communication. 
   
   I'm referring that we enabled the HTTPS verification in Netty. Hostname verification is not part of the SSL/TLS standard, so it should be implemented in the quorum protocol. Can FIPS enforce such thing?
   
   > aren't we really validating dns hostnames?
   
   We don't in the quorum protocol if Fips is enabled: both sides verifies each other certificates and if it's in the trust db, the connection can be established. We don't verify whether the hostname in the certificate matches the peer's hostname.



;19/Jun/23 21:24;githubbot;600","eolivelli merged PR #2016:
URL: https://github.com/apache/zookeeper/pull/2016


;20/Jun/23 08:28;githubbot;600","anmolnar merged PR #2015:
URL: https://github.com/apache/zookeeper/pull/2015


;02/Jul/23 13:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 04 06:24:20 UTC 2023,,,,,,,,,,"0|z0vok0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Oct/21 06:52;symat;just after a few glances, looks like we are using the custom trust manager to perform some extra host verification:


{code:java}
/**
 * A custom TrustManager that supports hostname verification via org.apache.http.conn.ssl.DefaultHostnameVerifier.
 *
 * We attempt to perform verification using just the IP address first and if that fails will attempt to perform a
 * reverse DNS lookup and verify using the hostname.
 */
public class ZKTrustManager extends X509ExtendedTrustManager {
{code}

I think we could make the trust manager class configurable and add multiple trust managers. E.g.:
* having the current ZKTrustManager
* having a new trust manager that extends X509TrustManagerImpl and adds the host verification
* having SunJSSE default X509TrustManagerImpl;;;","12/Oct/21 06:48;edipesh19;Extending X509TrustManagerImpl is not possible as this is a final class.

 

One way for Zookeeper to do this ""extra validation"" will be to use AOP ""afterMethod"" interceptor or use Java java.lang.reflect.Proxy class.;;;","13/Oct/21 09:57;symat;true...
sorry, I wanted, but it looks I won't have time to work on this in the next week. Open for anyone to pick it up. 
(I'll also ask around in my team if someone can do it);;;","20/Jan/22 09:42;nilendra_jain;Hi,

 

Any updates on this issue. Even I am facing the same issue while using bc-fips jar in FIPS mode with Kafka and zookeeper. 

 

Please let me know, if there is a workaround available for this issue.;;;","24/Jan/22 03:24;edipesh19;Hi [~nilendra_jain],

If you do not want to use ZKTrustManager you can replace the below line with return tm; in [X509Util.java.|https://github.com/apache/zookeeper/pull/1780/files#diff-fac34f7da2a9463c894ab6758e3f316c2acc513c3666c0e8fc66cc2e1613abcc]
{code:java}
return new ZKTrustManager((X509ExtendedTrustManager) tm, serverHostnameVerificationEnabled, clientHostnameVerificationEnabled);{code};;;","25/Apr/22 18:29;that_guy;[~edipesh19], I checked out your PR and noticed it fails a bunch of unit tests. Do you have an update that fixes those or adds a unit test showing this fix working?;;;","14/Apr/23 13:44;andor;[~edipesh19] Since you abandoned the ticket and the PR for a while, let me take this over and introduce a different approach.

I'm going to introduce a new ZooKeeper variable {{fips_mode}} which will be off by default and if turned on, we'll use the built-in TrustManager without our extra validations. I believe this is the intention of FIPS mode and the Sun check cited in the description.

Will create a new PR soon.;;;","14/Apr/23 14:54;andor;[~nilendra_jain] [~edipesh19] [~symat] 

How do you run ZooKeeper in FIPS-mode? (which triggers the error);;;","14/Apr/23 15:57;symat;{quote}How do you run ZooKeeper in FIPS-mode? (which triggers the error)
{quote}
good question... I only tried it on proprietary distributions / ZooKeeper versions in my previous workplace, where we had test systems and docker or AMI images already configured with fips. But I never saw this particular error message in our production environment back then. Of course, there are many security configurations and it is likely that [~edipesh19] used a more strict one than what we had. Dipesh, can you maybe share your security configs, if it is not sensitive?

 

Btw, it would be nice to make a fips compliant docker image for zookeeper testing. If it is possible... Or just give some pointers in the ZooKeeper documentation.;;;","03/May/23 14:29;andor;[~symat] [~edipesh19] 

I was trying to reproduce this issue in-house on a FIPS-enabled cluster with ZooKeeper 3.5, but I don't see the error happening and exception to be thrown.

Although your analysis is quite clear and I can create a patch to select between ZK's custom and Sun's built-in trustmanager. Unfortunately I don't see a way to validate it on a FIPS-cluster and make sure the error message is gone.;;;","04/May/23 06:24;symat;Strange...

if this code is executed
{code:java}
if (SunJSSE.isFIPS() && !(var1[var2] instanceof X509TrustManagerImpl)) { throw new KeyManagementException(""FIPS mode: only SunJSSE TrustManagers may be used"");
} {code}
and we can not reproduce the issue, then it means that `SunJSSE.isFIPS()` is false in our tests, while for [~edipesh19] it is true. I wonder why... 

btw, SunJSSE.isFIPS is set true here: [https://github.com/frohoff/jdk8u-dev-jdk/blob/master/src/share/classes/sun/security/ssl/SunJSSE.java|https://github.com/frohoff/jdk8u-dev-jdk/blob/da0da73ab82ed714dc5be94acd2f0d00fbdfe2e9/src/share/classes/sun/security/ssl/SunJSSE.java#L117]

I wonder where this SunJSSE class is instantiated. Because it is called with different constructor in your case than in our tests. (or maybe in our case, it is not even set... isFIPS is checking a static Boolean and returns null when uninitialized)

Maybe it would be good to see the whole stack-trace, [~edipesh19] , could you share it? I see the last exception in ZK is thrown at this line: [https://github.com/apache/zookeeper/blob/6401e4ad2087061bc6b9f80dec2d69f2e3c8660a/zookeeper-server/src/main/java/org/apache/zookeeper/common/X509Util.java#L386] - but it would be good to see the whole ""caused by"" chain. Maybe SunJSSE class is instantiated somewhere around that chain? I am really not familiar with these code parts.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-4337 for branch-3.5 and branch-3.6,ZOOKEEPER-4390,13403701,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ananysin,ananysin,ananysin,28/Sep/21 05:15,01/Aug/22 08:25,13/Jul/23 09:08,01/Aug/22 08:25,3.5.9,,,,,,,,,,,,,,security,,,,0,pull-requests-available,,"Our security tool raised the following security flaws on zookeeper 3.5.9: 

CVE-2021-28163: [https://nvd.nist.gov/vuln/detail/CVE-2021-28163|https://nvd.nist.gov/vuln/detail/CVE-2021-21295]

CVE-2021-28169: [https://nvd.nist.gov/vuln/detail/CVE-2021-28169|https://nvd.nist.gov/vuln/detail/CVE-2021-21295]

CVE-2021-34428: [https://nvd.nist.gov/vuln/detail/CVE-2021-34428|https://nvd.nist.gov/vuln/detail/CVE-2021-21295]

 

It is a vulnerability related to jar jetty-http-9.4.35.v20201120.jar",,ananysin,brahmareddy,dominique,volcano,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4337,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 30 16:04:23 UTC 2021,,,,,,,,,,"0|z0vctk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Sep/21 14:01;volcano;Hi, is there any solution to this problem?;;;","30/Sep/21 16:04;brahmareddy;[~ananysin] thanks for reporting,Yes, we need to backport to branch-3.5 and branch-3.6.

 

[~volcano] PR is raised, please check the following link for same(same is linked in the jira).

https://github.com/apache/zookeeper/pull/1768/commits/f33d71b329fe08ad179b731141ffb753fc879073;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KeeperException.create has NullPointerException when low version client requests the high version server,ZOOKEEPER-4377,13401013,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,maoling,maoling,maoling,14/Sep/21 12:40,17/May/22 10:58,13/Jul/23 09:08,17/Oct/21 07:10,3.8.0,,,,,,,,,3.5.10,3.7.1,3.8.0,,,server,,,,0,pull-request-available,,"{code:java}
blishment complete on server localhost/127.0.0.1:2180, sessionid = 0x1000278adba0129, negotiated timeout = 30000blishment complete on server localhost/127.0.0.1:2180, sessionid = 0x1000278adba0129, negotiated timeout = 30000java.lang.NullPointerException at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) at org.apache.zookeeper.KeeperException.create(KeeperException.java:54) at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1538) at site.ycsb.db.zookeeper.ZKClient.insert(ZKClient.java:131) at site.ycsb.DBWrapper.insert(DBWrapper.java:227) at site.ycsb.workloads.CoreWorkload.doInsert(CoreWorkload.java:621) at site.ycsb.ClientThread.run(ClientThread.java:135) at java.lang.Thread.run(Thread.java:748)java.lang.NullPointerExceptionjava.lang.NullPointerException
 at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) at org.apache.zookeeper.KeeperException.create(KeeperException.java:54) at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1538)
{code}",,maoling,zhangzs,,,,,,,,,,,,,,,,,,"maoling opened a new pull request #1764:
URL: https://github.com/apache/zookeeper/pull/1764


   - When low version client accessed the high version server which has some new added error code, the client will get a NPE:
   ```
    java.lang.NullPointerException 
   at org.apache.zookeeper.KeeperException.create(KeeperException.java:94) 
   at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)
   at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1538)
   ```
   - How to reproduce this issue？For example: 
   ```
   the client version we using is 3.6.0, and server version we using is 3.7.0 which has a new added error code QUOTAEXCEEDED(-125), 
   we set quota at server side and use the client to create znodes which exceeds the quota,
   the client will get a NPE
   ```
   - Apply this patch, we will get the following:
   ```
    java.lang.IllegalArgumentException: The current client version cannot lookup this code:-125
    at org.apache.zookeeper.KeeperException$Code.get(KeeperException.java:449)
    at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:1347)
   ```
   - we should backport this PR to all branches, making the client has upward compatibility
   - more details in the [ZOOKEEPER-4377](https://issues.apache.org/jira/browse/ZOOKEEPER-4377)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/21 12:38;githubbot;600","asfgit closed pull request #1764:
URL: https://github.com/apache/zookeeper/pull/1764


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Oct/21 07:08;githubbot;600","maoling commented on pull request #1764:
URL: https://github.com/apache/zookeeper/pull/1764#issuecomment-945062703


   Commit to the following branches:
   [master ](https://github.com/apache/zookeeper/tree/master)
   [branch-3.7](https://github.com/apache/zookeeper/tree/branch-3.7)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Oct/21 07:10;githubbot;600","maoling opened a new pull request #1805:
URL: https://github.com/apache/zookeeper/pull/1805


   Backport [ZOOKEEPER-4377](https://github.com/apache/zookeeper/pull/1764) to Branch 3.5 to make the client has upward compatibility


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/22 11:20;githubbot;600","maoling opened a new pull request #1806:
URL: https://github.com/apache/zookeeper/pull/1806


   Backport [ZOOKEEPER-4377](https://github.com/apache/zookeeper/pull/1764) to Branch 3.6 to make the client has upward compatibility
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/22 11:23;githubbot;600","maoling commented on PR #1805:
URL: https://github.com/apache/zookeeper/pull/1805#issuecomment-1120585570

   Since `branch-3.5` will EOL, so let me close this PR


;09/May/22 03:00;githubbot;600","maoling closed pull request #1805: Backport ZOOKEEPER-4377 to Branch 3.5
URL: https://github.com/apache/zookeeper/pull/1805


;09/May/22 03:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-09-14 12:40:02.0,,,,,,,,,,"0|z0uw8w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper lock recipe doesn't parse negative sequence numbers correctly,ZOOKEEPER-4372,13400335,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,colinmcintosh,colinmcintosh,09/Sep/21 21:50,02/Oct/21 06:00,13/Jul/23 09:08,02/Oct/21 06:00,,,,,,,,,,3.8.0,,,,,recipes,,,,0,pull-request-available,,"According to the Zookeeper docs ZNode sequence numbers will rollover to -2147483648 after reaching 2147483647 (I've also confirmed this is the case in practice):

[https://zookeeper.apache.org/doc/r3.7.0/zookeeperProgrammers.html#Sequence+Nodes+–+Unique+Naming|https://zookeeper.apache.org/doc/r3.7.0/zookeeperProgrammers.html#Sequence+Nodes+%E2%80%93+Unique+Naming]

 

When this rollover happens the negative symbol is incorrectly stripped off the sequence number in ZNodeName due to this code searching for the last index of ""-"", thus the sequence number parsed is always the absolute value:
[https://github.com/apache/zookeeper/blob/1e74a3395a9c3c4d67093f9a073bffb5a176916c/zookeeper-recipes/zookeeper-recipes-lock/src/main/java/org/apache/zookeeper/recipes/lock/ZNodeName.java#L54]

 

This results in any subsequently created sequence numbers being considered the ""lowest"" due to the absolute value decrementing until reaching 0. It also looks like there is no test to check parsing of negative sequence numbers.

 

For context, this same issue arose in the unofficial Golang client recipe and there is a proposed fix there: [https://github.com/go-zookeeper/zk/pull/65]",,colinmcintosh,,,,,,,,,,,,,,,,,,,"colinmcintosh opened a new pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751


   I took a stab at fixing this and adding a simple case to one of the existing unit tests to check for negative sequence numbers. This is my first time working in the ZK Java implementation so please let me know if I need to make any adjustments. I updated the code to check if there is a prior ""-"" character in the index before the last ""-"" and move the index back one if there is.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Sep/21 22:14;githubbot;600","maoling commented on pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751#issuecomment-930075089


   @colinmcintosh  LGTM. If no other concerns, I'll merge it at this weekend(10-03).
   Think further, using ""_"" is better than ""-"" to avoid the confusion between separator and minus sign


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Sep/21 11:06;githubbot;600","colinmcintosh commented on pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751#issuecomment-930396060


   Thanks! Yes, I agree using ""_"" would probably be better than ""-"" but my intent was to maintain compatibility for anyone using the existing lock recipe directly which would require checking for ""-"".


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Sep/21 17:39;githubbot;600","colinmcintosh commented on pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751#issuecomment-930396060


   Thanks! Yes, I agree using ""_"" would probably be better than ""-"" but my intent was to maintain compatibility for anyone using the existing lock recipe directly which would require checking for ""-"".


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Sep/21 00:36;githubbot;600","maoling commented on pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751#issuecomment-930075089


   @colinmcintosh  LGTM. If no other concerns, I'll merge it at this weekend(10-03).
   Think further, using ""_"" is better than ""-"" to avoid the confusion between separator and minus sign


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Sep/21 00:39;githubbot;600","maoling closed pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Oct/21 03:45;githubbot;600","colinmcintosh opened a new pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751


   I took a stab at fixing this and adding a simple case to one of the existing unit tests to check for negative sequence numbers. This is my first time working in the ZK Java implementation so please let me know if I need to make any adjustments. I updated the code to check if there is a prior ""-"" character in the index before the last ""-"" and move the index back one if there is.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Oct/21 03:45;githubbot;600","asfgit closed pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Oct/21 05:58;githubbot;600","maoling commented on pull request #1751:
URL: https://github.com/apache/zookeeper/pull/1751#issuecomment-932689342


   @colinmcintosh 
   Thanks for your contribution.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Oct/21 05:59;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-09-09 21:50:35.0,,,,,,,,,,"0|z0us28:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper#Login thread leak in case of Sasl AuthFailed.,ZOOKEEPER-4367,13399018,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,,shahrs87,shahrs87,02/Sep/21 20:08,20/Oct/21 07:36,13/Jul/23 09:08,27/Sep/21 15:49,3.4.13,,,,,,,,,3.5.10,3.7.1,3.8.0,,,java client,kerberos,,,0,pull-request-available,,"We are seeing 1000's of Zookeeper#Login threads leak in our production clusters.
[ZooKeeperSaslClient#createSaslClient|https://github.com/apache/zookeeper/blob/branch-3.4.13/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java#L205] creates Login thread.
[ZooKeeperSaslClient#createSaslToken |https://github.com/apache/zookeeper/blob/branch-3.4.13/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java#L310] throws SaslException which propagates all the way back to [ClientCnxn#SendThread#run|https://github.com/apache/zookeeper/blob/branch-3.4.13/src/java/main/org/apache/zookeeper/ClientCnxn.java#L1074] method.

[ClientCnxn#SendThread#run|https://github.com/apache/zookeeper/blob/branch-3.4.13/src/java/main/org/apache/zookeeper/ClientCnxn.java#L1075-L1078] handles SaslException by changing setting state to AUTH_FAILED, queueing the eventOfDeath for EventThread and exiting/cleaning up the SendThread but we DON'T close the zookeeperSaslClient which in turns shutDown the Login thread.

Logs are added below for one failed connection.
{noformat}
`20210831053800.393 jute.maxbuffer value is 4194304 Bytes
`20210831053800.393 Initiating client connection, connectString=<zookeeper-ensemble string> sessionTimeout=4000 watcher=org.apache.curator.ConnectionState@7b974f93

`20210831053800.401 zookeeper.request.timeout value is 10000. feature enabled=
`20210831053800.404 Client successfully logged in.
`20210831053800.405 Client will use GSSAPI as SASL mechanism.
`20210831053800.405 TGT refresh sleeping until: Wed Sep 01 00:59:06 GMT 2021
`20210831053800.405 TGT refresh thread started.
`20210831053800.405 TGT valid starting at:        Tue Aug 31 05:38:00 GMT 2021
`20210831053800.405 TGT expires:                  Wed Sep 01 05:38:00 GMT 2021

`20210831053800.407 Opening socket connection to server <zookeeper-server-1>. Will attempt to SASL-authenticate using Login Context section 'Client'

`20210831053800.419 Socket connection established to <zookeeper-server-1>, initiating session

`20210831053800.435 Session establishment complete on server <zookeeper-server-1>, sessionid = 0x1000004066cc52b, negotiated timeout = 6000

`20210831053800.438 An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - UNKNOWN_SERVER)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. This may be caused by Java's being unable to resolve the Zookeeper Quorum Member's hostname correctly. You may want to try to adding '-Dsun.net.spi.nameservice.provider.1=dns,sun' to your client's JVMFLAGS environment. Zookeeper Client will go to AUTH_FAILED state.

`20210831053800.438 EventThread shut down for session: 0x1000004066cc52b

`20210831053800.438 SASL authentication with Zookeeper Quorum member failed: javax.security.sasl.SaslException: An error: (java.security.PrivilegedActionException: javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Server not found in Kerberos database (7) - UNKNOWN_SERVER)]) occurred when evaluating Zookeeper Quorum Member's  received SASL token. This may be caused by Java's being unable to resolve the Zookeeper Quorum Member's hostname correctly. You may want to try to adding '-Dsun.net.spi.nameservice.provider.1=dns,sun' to your client's JVMFLAGS environment. Zookeeper Client will go to AUTH_FAILED state.
{noformat}


What is the correct way to shutdown Login thread in case of SaslException ?
We use Curator framework to connect to Zookeeper.

We fixed similar bug here where we were leaking EventThreads.  ZOOKEEPER-3059
This is similar except for Login threads. Please help.

",,eolivelli,nkalmar,shahrs87,vjasani,,,,,,,,,,,,,,,,"shahrs87 opened a new pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755


   https://issues.apache.org/jira/browse/ZOOKEEPER-4367
   
   Things changed in this PR:
   1. Moving `zooKeeperSaslClient` from `ClientCnxn` to `SendThread` since only SendThread is creating and accessing `zooKeeperSaslClient`
   2. Moved closing of `zooKeeperSaslClient` from `ClientCnxn#disconnect` method to `SendThread#run` method. This will make sure that we will close zooKeeperSaslClient (and in turn close Login object) even if `ClientCnxn#disconnect` is not called which happens when we encounter AuthFailed Exceptions. Also it looks clean that whenever SendThread is terminating we clean up all the class variable.
   3. Setting login to null when `ZooKeeperSaslClient#shutdown` is called. This helps me testing whether zooKeeperSaslClient object is shutdown and in turn Login object is shutdown.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/21 20:27;githubbot;600","sonatype-lift[bot] commented on a change in pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#discussion_r708618407



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -1486,6 +1490,9 @@ public void sendPacket(Packet p) throws IOException {
             clientCnxnSocket.sendPacket(p);
         }
 
+        public ZooKeeperSaslClient getZooKeeperSaslClient() {
+            return zooKeeperSaslClient;

Review comment:
       *THREAD_SAFETY_VIOLATION:*  Read/Write race. Non-private method `ClientCnxn$SendThread.getZooKeeperSaslClient()` reads without synchronization from `this.zooKeeperSaslClient`. Potentially races with write in method `ClientCnxn$SendThread.run()`.
    Reporting because another access to the same memory occurs on a background thread, although this access may not.
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -1313,6 +1313,10 @@ public void run() {
                 eventThread.queueEvent(new WatchedEvent(Event.EventType.None, Event.KeeperState.Disconnected, null));
             }
             eventThread.queueEvent(new WatchedEvent(Event.EventType.None, Event.KeeperState.Closed, null));
+
+            if (zooKeeperSaslClient != null) {

Review comment:
       *THREAD_SAFETY_VIOLATION:*  Read/Write race. Non-private method `ClientCnxn$SendThread.run()` reads without synchronization from `this.zooKeeperSaslClient`. Potentially races with write in method `ClientCnxn$SendThread.run()`.
    Reporting because this access may occur on a background thread.
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -1313,6 +1313,10 @@ public void run() {
                 eventThread.queueEvent(new WatchedEvent(Event.EventType.None, Event.KeeperState.Disconnected, null));
             }
             eventThread.queueEvent(new WatchedEvent(Event.EventType.None, Event.KeeperState.Closed, null));
+
+            if (zooKeeperSaslClient != null) {
+                zooKeeperSaslClient.shutdown();

Review comment:
       *THREAD_SAFETY_VIOLATION:*  Unprotected write. Non-private method `ClientCnxn$SendThread.run()` indirectly writes to field `this.zooKeeperSaslClient.login` outside of synchronization.
    Reporting because this access may occur on a background thread.
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/21 20:44;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-919515520


   @maoling  @ztzg @nkalmar  @eolivelli  Could you guys please help reviewing this change and provide feedback ? Thank you !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/21 21:11;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-924003678


   Thank you @eolivelli  for the review !
   
   > there is a synchronisation issue about zooKeeperSaslClient
   
   I am little confused about the reported synchronization issue. I don't see any synchronized block/method either in ZooKeeperSaslClient or the methods that access in ClientCnxn#SendThread that accesses them.  Can you please help me understand more about this ?
   
   However I have added volatile keyword to zooKeeperSaslClient variable. Lets see what sonatype-lift reports.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Sep/21 13:43;githubbot;600","shahrs87 edited a comment on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-924003678


   Thank you @eolivelli  for the review !
   Addressed the review comment. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Sep/21 13:52;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-924021762


   > we need another reviewed before merging this patch
   
   @eolivelli  Can you please guide me on who can give me another review ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Sep/21 14:04;githubbot;600","shahrs87 edited a comment on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-924021762


   > we need another reviewed before merging this patch
   
   @eolivelli  Can you please guide me on who can give me another review ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Sep/21 14:04;githubbot;600","eolivelli commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-924023927


   > Can you guide me on who can give me another review ?
   usually it is just a matter of time.
   
   Here we are all volunteers, so everybody gives their time to review the patches.
   
   If you do not see anyone reviewing your patch you can reach out the community to dev@zookeeper.apache.org (you have to subscribe before sending messages)
   Not everyone follow github actively


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Sep/21 14:06;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-924083157


   Thank you @eolivelli  for your feedback ! 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Sep/21 15:10;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-925074604


   Thank you @ztzg  for the review. 
   What is the best way to backport this change to 3.4 branch ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Sep/21 16:10;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-925970633


   @ztzg  can you please merge the PR and guide me on how to merge this to branch-3.4 ? Thank you !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/21 16:29;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-927842230


   @eolivelli  can you please merge the PR and guide me on how to merge this to branch-3.4 ? Thank you !
   
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 12:51;githubbot;600","eolivelli commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-927976960


   I am going to merge this (cannot do it today sorry).
   
   Branch 3.4 is end-of-life, we are not going to cut new releases.
   
   it is good to port this to branch-3.5 onwards, thanks


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 15:19;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-927988027


   Thank you @eolivelli. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 15:31;githubbot;600","eolivelli closed pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 15:48;githubbot;600","eolivelli commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-928002888


   Finally I found 10 minutes to commit to master and to branch-3.7
   
   thank you !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 15:49;githubbot;600","shahrs87 opened a new pull request #1767:
URL: https://github.com/apache/zookeeper/pull/1767


   Backport of https://github.com/apache/zookeeper/pull/1755


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 17:30;githubbot;600","sonatype-lift[bot] commented on a change in pull request #1767:
URL: https://github.com/apache/zookeeper/pull/1767#discussion_r716914105



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -1267,8 +1266,13 @@ public void run() {
                 eventThread.queueEvent(new WatchedEvent(Event.EventType.None,
                         Event.KeeperState.Disconnected, null));
             }
+
             eventThread.queueEvent(new WatchedEvent(Event.EventType.None,
                         Event.KeeperState.Closed, null));
+
+            if (zooKeeperSaslClient != null) {
+                zooKeeperSaslClient.shutdown();

Review comment:
       *THREAD_SAFETY_VIOLATION:*  Unprotected write. Non-private method `ClientCnxn$SendThread.run()` indirectly writes to field `this.zooKeeperSaslClient.login` outside of synchronization.
    Reporting because this access may occur on a background thread.
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 17:48;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-928173194


   Thank you @eolivelli for the merge. 
   Created https://github.com/apache/zookeeper/pull/1767 for the backport to branch-3.5


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 18:45;githubbot;600","shahrs87 edited a comment on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-928173194


   Thank you @eolivelli for the merge. 
   Created https://github.com/apache/zookeeper/pull/1767 for the backport to branch-3.5
   `Functionally` clean cherry-pick of this PR.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/21 18:46;githubbot;600","sonatype-lift[bot] commented on a change in pull request #1767:
URL: https://github.com/apache/zookeeper/pull/1767#discussion_r716914105



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -1267,8 +1266,13 @@ public void run() {
                 eventThread.queueEvent(new WatchedEvent(Event.EventType.None,
                         Event.KeeperState.Disconnected, null));
             }
+
             eventThread.queueEvent(new WatchedEvent(Event.EventType.None,
                         Event.KeeperState.Closed, null));
+
+            if (zooKeeperSaslClient != null) {
+                zooKeeperSaslClient.shutdown();

Review comment:
       *THREAD_SAFETY_VIOLATION:*  Unprotected write. Non-private method `ClientCnxn$SendThread.run()` indirectly writes to field `this.zooKeeperSaslClient.login` outside of synchronization.
    Reporting because this access may occur on a background thread.
   (at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/21 19:49;githubbot;600","shahrs87 opened a new pull request #1767:
URL: https://github.com/apache/zookeeper/pull/1767


   Backport of https://github.com/apache/zookeeper/pull/1755


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/21 19:54;githubbot;600","shahrs87 edited a comment on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-928173194


   Thank you @eolivelli for the merge. 
   Created https://github.com/apache/zookeeper/pull/1767 for the backport to branch-3.5
   `Functionally` clean cherry-pick of this PR.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/21 20:01;githubbot;600","shahrs87 commented on pull request #1755:
URL: https://github.com/apache/zookeeper/pull/1755#issuecomment-928173194


   Thank you @eolivelli for the merge. 
   Created https://github.com/apache/zookeeper/pull/1767 for the backport to branch-3.5


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/21 20:06;githubbot;600","nkalmar commented on pull request #1767:
URL: https://github.com/apache/zookeeper/pull/1767#issuecomment-947405231


   Merged to branch 3.5.Thanks @shahrs87 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Oct/21 07:33;githubbot;600","nkalmar closed pull request #1767:
URL: https://github.com/apache/zookeeper/pull/1767


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Oct/21 07:33;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,15600,,,0,15600,,,,,,,,,,,,ZOOKEEPER-4235,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Oct 20 07:36:31 UTC 2021,,,,,,,,,,"0|z0ujxs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/21 21:16;shahrs87;I have attached the PR but unable to assign the jira to me. I think someone needs to add me to contributors list.;;;","15/Sep/21 13:46;shahrs87;[~maoling] [~ztzg] [~nkalmar] [~eolivelli] [~andor] Could you guys please help review the PR ? Thank you !;;;","27/Sep/21 15:49;eolivelli;Issue resolved by pull request 1755
[https://github.com/apache/zookeeper/pull/1755];;;","28/Sep/21 19:55;shahrs87;[~eolivelli] Whenever you get time, can you please add me to Contributors list so that I can assign jira to myself.
Also I have patch ready for branch-3.5 also. Thank you !;;;","20/Oct/21 07:36;nkalmar;Merged to 3.5, thanks [~shahrs87]. Unfortunately I can't add you to contributors, and I think after one of your PR landed in the repo it should automatically sync you to be a contributor. But I couldn't yet add you as an assignee. Please give it a try later, maybe...;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZKDatabase.txnCount logged non transactional requests,ZOOKEEPER-4362,13398554,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,lan_ok,lan_ok,01/Sep/21 00:19,20/Jan/22 01:47,13/Jul/23 09:08,13/Nov/21 07:21,,,,,,,,,,3.6.4,3.7.1,3.8.0,,,server,,,,0,pull-request-available,,"ZKDatabase.txnCount logged non transactional requests


{code:java}
    public boolean append(Request si) throws IOException {
        txnCount.incrementAndGet();
        return this.snapLog.append(si);
    }
{code}


snaplog.append may return false, but txnCount increased

maybe it would be better

{code:java}
    public boolean append(Request si) throws IOException {
        if (this.snapLog.append(si)) {
            txnCount.incrementAndGet();
            return true;
        }
        return false;
    }
{code}

",,lan_ok,,,,,,,,,,,,,,,,,,,"lanicc opened a new pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744


   ZKDatabase.txnCount logged non transactional requests
   
       public boolean append(Request si) throws IOException {
           txnCount.incrementAndGet();
           return this.snapLog.append(si);
       }
   snaplog.append may return false, but txnCount increased
   
   maybe it would be better
   
       public boolean append(Request si) throws IOException {
           if (this.snapLog.append(si)) {
               txnCount.incrementAndGet();
               return true;
           }
           return false;
       }
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 00:29;githubbot;600","lanicc opened a new pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744


   ZKDatabase.txnCount logged non transactional requests
   
       public boolean append(Request si) throws IOException {
           txnCount.incrementAndGet();
           return this.snapLog.append(si);
       }
   snaplog.append may return false, but txnCount increased
   
   maybe it would be better
   
       public boolean append(Request si) throws IOException {
           if (this.snapLog.append(si)) {
               txnCount.incrementAndGet();
               return true;
           }
           return false;
       }
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 09:17;githubbot;600","maoling commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-915991022


   - @lanicc  Great catch.
   - Oops, it may be not an improvement, just a hidden bug which was introduced by [PR-770](https://github.com/apache/zookeeper/pull/770)
   The refactor is not an equivalence.
   ```
    // track the number of records written to the log
     if (zks.getZKDatabase().append(si)) {
         logCount++;
         if (logCount > randRoll) {
             randRoll = ThreadLocalRandom.current().nextInt(snapCount / 2, snapCount);
             // roll the log
   ```
   
   - A worse case: when I do 100000 read requests and then do a write request. In this pattern with a read-heavy use case, too many many snapshots are taken, even the `DataTree` are not changed(if the write request is `closeSession`)
   - PTAL @ztzg  @eolivelli 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Sep/21 11:11;githubbot;600","lanicc commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-947213835


   > * PTAL @ztzg  @eolivelli
   
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Oct/21 00:42;githubbot;600","maoling commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-948516939


   - @ztzg @eolivelli @enixon PTAL
   - I checked the codes. This issue existed in 
   [master](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java)
   [branch-3.7](https://github.com/apache/zookeeper/blob/branch-3.7/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java)
   [branch-3.6](https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZKDatabase.java)
   Lucky,  [branch-3.5](https://github.com/apache/zookeeper/blob/branch-3.5/zookeeper-server/src/main/java/org/apache/zookeeper/server/SyncRequestProcessor.java
   ) did not have this issue.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Oct/21 11:26;githubbot;600","maoling commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-956163736


   - @lanicc  I am going to merge this PR. 
   - Could you please add some unit tests for this change. For example: using  the `zk` client to make `m` read requests and `n` write requests, then assert the `txnCount` is equal `n`, not the `m + n`
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Nov/21 11:43;githubbot;600","lanicc commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-962417933


   > * @lanicc  I am going to merge this PR.
   > * Could you please add some unit tests for this change. For example: using  the `zk` client to make `m` read requests and `n` write requests, then assert the `txnCount` is equal `n`, not the `m + n`
   
   Sorry for my late!I'll finish it in these days.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/21 08:25;githubbot;600","lanicc removed a comment on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-962417933


   > * @lanicc  I am going to merge this PR.
   > * Could you please add some unit tests for this change. For example: using  the `zk` client to make `m` read requests and `n` write requests, then assert the `txnCount` is equal `n`, not the `m + n`
   
   Sorry for my late!I'll finish it in these days.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/21 09:01;githubbot;600","lanicc commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-962423154


   > * @lanicc  I am going to merge this PR.
   > * Could you please add some unit tests for this change. For example: using  the `zk` client to make `m` read requests and `n` write requests, then assert the `txnCount` is equal `n`, not the `m + n`
   
   The unit test has been submitted, PTAL@maoling


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/21 09:15;githubbot;600","maoling closed pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/21 03:19;githubbot;600","lanicc opened a new pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744


   ZKDatabase.txnCount logged non transactional requests
   
       public boolean append(Request si) throws IOException {
           txnCount.incrementAndGet();
           return this.snapLog.append(si);
       }
   snaplog.append may return false, but txnCount increased
   
   maybe it would be better
   
       public boolean append(Request si) throws IOException {
           if (this.snapLog.append(si)) {
               txnCount.incrementAndGet();
               return true;
           }
           return false;
       }
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/21 03:20;githubbot;600","maoling commented on a change in pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#discussion_r748691483



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java
##########
@@ -0,0 +1,74 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.ArgumentMatchers.anyString;
+import static org.mockito.Mockito.doAnswer;
+import static org.mockito.Mockito.mock;
+import java.io.File;
+import java.io.IOException;
+import org.apache.jute.OutputArchive;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.test.ClientBase;
+import org.apache.zookeeper.txn.TxnHeader;
+import org.junit.Test;
+import org.mockito.invocation.InvocationOnMock;
+import org.mockito.stubbing.Answer;
+
+public class TxnLogCountTest {
+
+    /**
+     * Test ZkDatabase's txnCount
+     */
+    @Test
+    public void testTxnLogCount() throws IOException {
+        File tmpDir = ClientBase.createTmpDir();
+        FileTxnSnapLog snapLog = new FileTxnSnapLog(tmpDir, tmpDir);

Review comment:
       remember delete this tmpDir next time:)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/21 07:01;githubbot;600","asfgit closed pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/21 07:15;githubbot;600","maoling commented on pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#issuecomment-967797730


   - @lanicc Thanks for your contribution.
   -  Commit to the following branches:
   [master ](https://github.com/apache/zookeeper/tree/master)
   [branch-3.7](https://github.com/apache/zookeeper/tree/branch-3.7)
   [branch-3.6](https://github.com/apache/zookeeper/tree/branch-3.6)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/21 07:25;githubbot;600","lanicc commented on a change in pull request #1744:
URL: https://github.com/apache/zookeeper/pull/1744#discussion_r748723813



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/TxnLogCountTest.java
##########
@@ -0,0 +1,74 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.mockito.ArgumentMatchers.any;
+import static org.mockito.ArgumentMatchers.anyString;
+import static org.mockito.Mockito.doAnswer;
+import static org.mockito.Mockito.mock;
+import java.io.File;
+import java.io.IOException;
+import org.apache.jute.OutputArchive;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.test.ClientBase;
+import org.apache.zookeeper.txn.TxnHeader;
+import org.junit.Test;
+import org.mockito.invocation.InvocationOnMock;
+import org.mockito.stubbing.Answer;
+
+public class TxnLogCountTest {
+
+    /**
+     * Test ZkDatabase's txnCount
+     */
+    @Test
+    public void testTxnLogCount() throws IOException {
+        File tmpDir = ClientBase.createTmpDir();
+        FileTxnSnapLog snapLog = new FileTxnSnapLog(tmpDir, tmpDir);

Review comment:
       Careless！Do I need to submit a patch?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/21 13:27;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,ZOOKEEPER-4446,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-09-01 00:19:57.0,,,,,,,,,,"0|z0uh2o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid NPE during metrics execution if the leader is not set on a FOLLOWER node ,ZOOKEEPER-4360,13398183,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,nicolo.boschi,nicolo.boschi,30/Aug/21 09:49,02/Sep/21 16:53,13/Jul/23 09:08,02/Sep/21 16:51,3.6.2,,,,,,,,,3.6.4,3.7.1,3.8.0,,,metric system,,,,0,metrics,pull-request-available,"On a follower node, we had this error

{code}
ago 20, 2021 1:46:28 PM org.apache.catalina.core.StandardWrapperValve invoke
GRAVE: Servlet.service() for servlet [metrics] in context with path [/metrics] threw exception
java.lang.NullPointerException: Cannot invoke ""org.apache.zookeeper.server.quorum.Leader.getProposalStats()"" because the return value of ""org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.getLeader()"" is null
        at org.apache.zookeeper.server.quorum.LeaderZooKeeperServer.lambda$registerMetrics$5(LeaderZooKeeperServer.java:122)
        at magnews.zookeeper.ZooKeeperMetricsProviderAdapter$MetricsContextImpl.lambda$registerGauge$0(ZooKeeperMetricsProviderAdapter.java:91)
{code}

Unfortunately, I'm not able to reproduce this error deterministically
 
",,nicolo.boschi,ztzg,,,,,,,,,,,,,,,,,,"nicoloboschi commented on pull request #1743:
URL: https://github.com/apache/zookeeper/pull/1743#issuecomment-908204957


   thanks @eolivelli , https://issues.apache.org/jira/browse/ZOOKEEPER-4360 created, set 3.7.1 and 3.6.4 as fix versions as you suggested


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/21 09:51;githubbot;600","ztzg closed pull request #1743:
URL: https://github.com/apache/zookeeper/pull/1743


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/21 16:49;githubbot;600","ztzg commented on pull request #1743:
URL: https://github.com/apache/zookeeper/pull/1743#issuecomment-911877403


   This is now in `master`, `branch-3.7` and `branch-3.6`.  Thank you!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/21 16:53;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 02 16:51:39 UTC 2021,,,,,,,,,,"0|z0ues8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Sep/21 16:51;ztzg;Issue resolved by pull request 1743
[https://github.com/apache/zookeeper/pull/1743];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Code blocks do not render correctly in ZK docs site,ZOOKEEPER-4356,13397821,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,nihaljain.cs,nihaljain.cs,27/Aug/21 12:41,17/May/22 10:46,13/Jul/23 09:08,01/Sep/21 08:48,3.7.0,,,,,,,,,3.5.10,3.7.1,3.8.0,,,documentation,,,,0,pull-request-available,,"The code snippets defined inside a {{fenced code blocks}} renders correctly in Markdown; but the same code snippet does not render properly in HTML sites. This makes the docs site very ugly and difficult to comprehend. (One has to figure out where the code block starts and where it ends.)

The issue exists throughout the docs site.

For example see one of the sample pages:
 https://github.com/apache/zookeeper/blob/master/zookeeper-docs/src/main/resources/markdown/zookeeperCLI.md 
 !markdown_rendering.png! 

vs 

http://zookeeper.apache.org/doc/current/zookeeperCLI.html  !html_rendering_before_fix.png! ",,nihaljain.cs,ztzg,,,,,,,,,,,,,,,,,,"NihalJain opened a new pull request #1741:
URL: https://github.com/apache/zookeeper/pull/1741


   * Configure to use FENCED_CODE_BLOCKS. 
   * Note: TABLES is the default setting. See https://github.com/walokra/markdown-page-generator-plugin for details on default `pegdownExtensions` setting


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/21 12:49;githubbot;600","ztzg closed pull request #1741:
URL: https://github.com/apache/zookeeper/pull/1741


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 08:47;githubbot;600","ztzg commented on pull request #1741:
URL: https://github.com/apache/zookeeper/pull/1741#issuecomment-910075802


   This is now in `master` and `branch-3.7`.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 08:49;githubbot;600","ztzg commented on pull request #1741:
URL: https://github.com/apache/zookeeper/pull/1741#issuecomment-910075802


   This is now in `master` and `branch-3.7`.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 09:28;githubbot;600","ztzg closed pull request #1741:
URL: https://github.com/apache/zookeeper/pull/1741


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 09:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,ZOOKEEPER-3807,,,,,,,,,,,,,,,,,,,"27/Aug/21 12:50;nihaljain.cs;html_rendering_after_fix.png;https://issues.apache.org/jira/secure/attachment/13032605/html_rendering_after_fix.png","27/Aug/21 12:45;nihaljain.cs;html_rendering_before_fix.png;https://issues.apache.org/jira/secure/attachment/13032604/html_rendering_before_fix.png","27/Aug/21 12:43;nihaljain.cs;markdown_rendering.png;https://issues.apache.org/jira/secure/attachment/13032603/markdown_rendering.png",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 01 08:48:34 UTC 2021,,,,,,,,,,"0|z0ucjs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Aug/21 12:42;nihaljain.cs;Could you please assign this to me.

CC: [~arshadmohammad], [~maoling], [~ztzg];;;","27/Aug/21 12:50;nihaljain.cs;Created PR. See site rendering with a local build having the fix below:
!html_rendering_after_fix.png! ;;;","01/Sep/21 08:48;ztzg;Issue resolved by pull request 1741
[https://github.com/apache/zookeeper/pull/1741];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid NoSunchMethodException caused by shaded zookeeper jar,ZOOKEEPER-4345,13394007,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,Bo Cui,Bo Cui,07/Aug/21 09:32,17/May/22 10:44,13/Jul/23 09:08,11/Aug/21 15:14,,,,,,,,,,3.5.10,3.6.4,3.7.1,3.8.0,,,,,,0,pull-request-available,,"in OS Flink, flink relocate zk to org.apache.flink.shaded.zookeeper3.org.apache.zookeeper.*

[https://github.com/apache/flink-shaded/blob/82f8bb3324864491dc62c4d3e27f1c1ccc49ac84/flink-shaded-zookeeper-parent/pom.xml#L68]

the maven-shade-plugin changes all 'org.apache.zookeeper' to 'org.apache.flink.shaded.zookeeper3.org.apache.zookeeper'

if JVM has -Dzookeeper.clientCnxnSocket=org.apache.zookeeper.*, and in shaded zk jar, will get NoSunchMethodException

  !image-2021-08-07-18-52-00-633.png!

!image-2021-08-07-17-30-42-883.png!

code: [https://github.com/apache/zookeeper/blob/9a5da5f9a023e53bf339748b5b7b17278ae36475/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java#L3029]",,arshad.mohammad,Bo Cui,,,,,,,,,,,,,,,,,,"cuibo01 commented on pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#issuecomment-894638149


   @ztzg @nkalmar @maoling @eolivelli  pls review, thx


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/21 10:47;githubbot;600","eolivelli commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r684650070



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
##########
@@ -3031,6 +3031,13 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         if (clientCnxnSocketName == null) {
             clientCnxnSocketName = ClientCnxnSocketNIO.class.getName();
         }
+
+        if (clientCnxnSocketName.equals(ClientCnxnSocketNetty.class.getSimpleName())) {

Review comment:
       Why are you using getSimpleName ?
   
   Can you please explain how did you test this patch ?
   I am not sure it is worth to add an integration test but we should verify that this works well.
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/21 16:11;githubbot;600","cuibo01 commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r684716138



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
##########
@@ -3031,6 +3031,13 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         if (clientCnxnSocketName == null) {
             clientCnxnSocketName = ClientCnxnSocketNIO.class.getName();
         }
+
+        if (clientCnxnSocketName.equals(ClientCnxnSocketNetty.class.getSimpleName())) {

Review comment:
       thx for your review
   if jvm set -Dzookeeper.clientCnxnSocket=ClientCnxnSocketNetty or ClientCnxnSocketNIO，
   in zookeeper jar，clientCnxnSocketName is org.apache.zookeeper.ClientCnxnSocketNetty  or org.apache.zookeeper.ClientCnxnSocketNIO
   and in shaded zookeeper jar, clientCnxnSocketName is ${shaded.prefix}.org.apache.zookeeper.ClientCnxnSocketNetty or ${shaded.prefix}.org.apache.zookeeper.ClientCnxnSocketNIO
   clientCnxnSocketName value is always correct.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:10;githubbot;600","cuibo01 commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r684716405



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
##########
@@ -3031,6 +3031,13 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         if (clientCnxnSocketName == null) {
             clientCnxnSocketName = ClientCnxnSocketNIO.class.getName();
         }
+
+        if (clientCnxnSocketName.equals(ClientCnxnSocketNetty.class.getSimpleName())) {

Review comment:
       If other components (like hbase, hdfs...) already use the `-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.*`,  this patch has no effect on them.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:13;githubbot;600","cuibo01 commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r684716138



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
##########
@@ -3031,6 +3031,13 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         if (clientCnxnSocketName == null) {
             clientCnxnSocketName = ClientCnxnSocketNIO.class.getName();
         }
+
+        if (clientCnxnSocketName.equals(ClientCnxnSocketNetty.class.getSimpleName())) {

Review comment:
       thx for your review
   if jvm set `-Dzookeeper.clientCnxnSocket=ClientCnxnSocketNetty or ClientCnxnSocketNIO`，
   in zookeeper jar，clientCnxnSocketName is `org.apache.zookeeper.ClientCnxnSocketNetty`  or `org.apache.zookeeper.ClientCnxnSocketNIO`
   and in shaded zookeeper jar, clientCnxnSocketName is `${shaded.prefix}.org.apache.zookeeper.ClientCnxnSocketNetty` or `${shaded.prefix}.org.apache.zookeeper.ClientCnxnSocketNIO`
   **clientCnxnSocketName value is always correct.**




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:14;githubbot;600","cuibo01 commented on pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#issuecomment-894747462


   @eolivelli How to Rerun Failed CI. in my pc, all UT is ok


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:51;githubbot;600","cuibo01 edited a comment on pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#issuecomment-894747462


   @eolivelli How to Rerun Failed CI. in my pc, all UTs are ok


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:55;githubbot;600","cuibo01 closed pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:56;githubbot;600","cuibo01 commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r684716138



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
##########
@@ -3031,6 +3031,13 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         if (clientCnxnSocketName == null) {
             clientCnxnSocketName = ClientCnxnSocketNIO.class.getName();
         }
+
+        if (clientCnxnSocketName.equals(ClientCnxnSocketNetty.class.getSimpleName())) {

Review comment:
       thx for your review
   
   getSimpleName returns the class name, excluding the package name.
   
   if jvm set `-Dzookeeper.clientCnxnSocket=ClientCnxnSocketNetty or ClientCnxnSocketNIO`，
   in zookeeper jar，clientCnxnSocketName is `org.apache.zookeeper.ClientCnxnSocketNetty`  or `org.apache.zookeeper.ClientCnxnSocketNIO`
   and in shaded zookeeper jar, clientCnxnSocketName is `${shaded.prefix}.org.apache.zookeeper.ClientCnxnSocketNetty` or `${shaded.prefix}.org.apache.zookeeper.ClientCnxnSocketNIO`
   **clientCnxnSocketName value is always correct.**




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/21 05:58;githubbot;600","cuibo01 closed pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Aug/21 04:41;githubbot;600","cuibo01 commented on pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#issuecomment-894985019


   > Now I understand better the goal.
   > 
   > In this case we can add some testcase about using only the classname (without package).
   
   thx for your review， i will add UT asap


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Aug/21 06:40;githubbot;600","eolivelli commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r685738077



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java
##########
@@ -84,6 +84,18 @@ public void testClientServerUnifiedPort() throws Exception {
         testClientServerSSL(false);
     }
 
+    @Test
+    public void testClientServerUnifiedPortWithCnxnClassName() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, ""ClientCnxnSocketNIO"");
+        testClientServerSSL(false);
+    }
+
+    @Test
+    public void testClientServerSSLWithCnxnClassName() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, ""ClientCnxnSocketNetty"");
+        testClientServerSSL(true);

Review comment:
       please use System.clearProperty in a finally block in order to clean up the environment 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Aug/21 06:50;githubbot;600","cuibo01 commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r685743467



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java
##########
@@ -84,6 +84,18 @@ public void testClientServerUnifiedPort() throws Exception {
         testClientServerSSL(false);
     }
 
+    @Test
+    public void testClientServerUnifiedPortWithCnxnClassName() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, ""ClientCnxnSocketNIO"");
+        testClientServerSSL(false);
+    }
+
+    @Test
+    public void testClientServerSSLWithCnxnClassName() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, ""ClientCnxnSocketNetty"");
+        testClientServerSSL(true);

Review comment:
       the class has `@AfterEach public void teardown()`, so dont need System.clearProperty again?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Aug/21 06:59;githubbot;600","eolivelli commented on a change in pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#discussion_r685967361



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java
##########
@@ -84,6 +84,18 @@ public void testClientServerUnifiedPort() throws Exception {
         testClientServerSSL(false);
     }
 
+    @Test
+    public void testClientServerUnifiedPortWithCnxnClassName() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, ""ClientCnxnSocketNIO"");
+        testClientServerSSL(false);
+    }
+
+    @Test
+    public void testClientServerSSLWithCnxnClassName() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, ""ClientCnxnSocketNetty"");
+        testClientServerSSL(true);

Review comment:
       you are right I missed it.
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Aug/21 12:27;githubbot;600","eolivelli commented on pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#issuecomment-896062992


   thank you @arshadmohammad 
   do you want to merge this patch ?
   we can cherry pick to 3.7.x and probably also to 3.6.x


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Aug/21 14:10;githubbot;600","asfgit closed pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/21 15:11;githubbot;600","arshadmohammad commented on pull request #1736:
URL: https://github.com/apache/zookeeper/pull/1736#issuecomment-896919426


   Merged to master, branch-3.7 and branch-3.6.
   Thanks @cuibo01 for the contribution.
   Thanks @eolivelli  for the reviews.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/21 15:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10200,,,0,10200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/21 09:30;Bo Cui;image-2021-08-07-17-30-42-883.png;https://issues.apache.org/jira/secure/attachment/13031608/image-2021-08-07-17-30-42-883.png","07/Aug/21 10:52;Bo Cui;image-2021-08-07-18-52-00-633.png;https://issues.apache.org/jira/secure/attachment/13031610/image-2021-08-07-18-52-00-633.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Aug 11 15:14:47 UTC 2021,,,,,,,,,,"0|z0tp0o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Aug/21 15:14;arshad.mohammad;Issue resolved by pull request 1736
[https://github.com/apache/zookeeper/pull/1736];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"OWASP Dependency-Check fails with CVE-2021-29425, commons-io-2.6",ZOOKEEPER-4343,13393651,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,05/Aug/21 08:46,01/Sep/21 16:57,13/Jul/23 09:08,01/Sep/21 16:56,3.8.0,,,,,,,,,3.8.0,,,,,server,,,,0,pull-request-available,,"{noformat}
[ERROR] One or more dependencies were identified with vulnerabilities that have a CVSS score greater than or equal to '0,0': 
[ERROR] 
[ERROR] commons-io-2.6.jar: CVE-2021-29425
[ERROR] 
[ERROR] See the dependency-check report for more details.
{noformat}

The issue is fixed in release 2.7:
    
- https://nvd.nist.gov/vuln/detail/CVE-2021-29425
- https://issues.apache.org/jira/browse/IO-556
- https://issues.apache.org/jira/browse/IO-559
- https://commons.apache.org/proper/commons-io/changes-report.html#a2.7",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735


   The issue reported in CVE-2021-29425 is fixed in release 2.7:
   
   -   <https://nvd.nist.gov/vuln/detail/CVE-2021-29425>
   -   <https://issues.apache.org/jira/browse/IO-556>
   -   <https://issues.apache.org/jira/browse/IO-559>
   -   <https://commons.apache.org/proper/commons-io/changes-report.html#a2.7>
   
   This is a ""conservative"" update, only intended to get past the OWASP Dependency-Check tool.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 08:51;githubbot;600","ztzg commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-893289952


   @nkalmar, @eolivelli: This one is only for `master` (the dependency on `commons-io` was introduced by [ZOOKEEPER-3922](https://issues.apache.org/jira/browse/ZOOKEEPER-3922), ""introduction of the oracle, a failure detector.""
   
   I have a few notes/questions:
   
   -   I have refactored the `commons-io` dependency into the toplevel POM, which is why there are two commits;
   -   Should I try and bump to the latest version of `commons-io`, which is 2.11?
   -   I have added the ""missing"" `*.LICENSE.txt` file for `commons-io` (it mirrors `META-INF/LICENSE.txt` in the Maven-downloaded JAR). But perhaps that file was ""missing"" on purpose?
   
   Cheers, -D
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 09:00;githubbot;600","ztzg commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-893289952


   @nkalmar, @eolivelli: This one is only for `master` (the dependency on `commons-io` was introduced by [ZOOKEEPER-3922](https://issues.apache.org/jira/browse/ZOOKEEPER-3922), ""introduction of the oracle, a failure detector.""
   
   I have a few notes/questions:
   
   -   I have refactored the `commons-io` dependency into the toplevel POM, which is why there are two commits;
   -   Should I try and bump to the latest version of `commons-io`, which is 2.11?
   -   I have added the ""missing"" `*.LICENSE.txt` file for `commons-io` (it mirrors `META-INF/LICENSE.txt` in the Maven-downloaded JAR). But perhaps that file was ""missing"" on purpose?
   
   Cheers, -D
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 11:15;githubbot;600","ztzg opened a new pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735


   The issue reported in CVE-2021-29425 is fixed in release 2.7:
   
   -   <https://nvd.nist.gov/vuln/detail/CVE-2021-29425>
   -   <https://issues.apache.org/jira/browse/IO-556>
   -   <https://issues.apache.org/jira/browse/IO-559>
   -   <https://commons.apache.org/proper/commons-io/changes-report.html#a2.7>
   
   This is a ""conservative"" update, only intended to get past the OWASP Dependency-Check tool.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 11:38;githubbot;600","nkalmar commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-894054638


   Thank you @ztzg , I agree, should be defined in top level pom. 
   If moving to 2.11 works with little to no work required, I say let's go for it. The newer the better. If we touch a dependency, we should upgrade to the latest possible, IMHO.
   
   Also, good catch on the license file! Not an expert here, but quickly checking, metrics-core for example also has apache 2.0 license and we include it.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/21 07:12;githubbot;600","eolivelli commented on a change in pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#discussion_r688459944



##########
File path: zookeeper-server/src/main/resources/lib/commons-io-2.7.LICENSE.txt
##########
@@ -0,0 +1,203 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

Review comment:
       I am not sure we need this file
   
   btw I like to have a consistent way of handling license files (having the license for every jar file is better)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/21 12:02;githubbot;600","eolivelli commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-898409655


   @ztzg you don't need to ""force push"" the PR is updated automatically and the script will squash the commits into one


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/21 12:02;githubbot;600","ztzg commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-898411304


   > @ztzg you don't need to ""force push"" the PR is updated automatically and the script will squash the commits into one
   
   Right.  But In this case I moved everything on top of the latest `master` and tried a few combinations because I encounter a strange Jenkins pipeline error:
   
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1735/5/pipeline/
   
   ```
   Error when executing cleanup post condition:
   org.jenkinsci.plugins.workflow.steps.MissingContextVariableException: Required context class hudson.FilePath is missing
   Perhaps you forgot to surround the code with a step that provides this, such as: node
   	at org.jenkinsci.plugins.workflow.steps.StepDescriptor.checkContextAvailability(StepDescriptor.java:266)
   	at org.jenkinsci.plugins.workflow.cps.DSL.invokeStep(DSL.java:296)
   	at org.jenkinsci.plugins.workflow.cps.DSL.invokeMethod(DSL.java:193)
   	at org.jenkinsci.plugins.workflow.cps.CpsScript.invokeMethod(CpsScript.java:122)
   ```
   
   Would you happen to know what is causing this error?  It doesn't seem to be related to the state of `master`.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/21 12:05;githubbot;600","nkalmar commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-899521315


   It looks like as if it is some kind of jenkins description problem:
   ```
   Error when executing cleanup post condition:
   
   org.jenkinsci.plugins.workflow.steps.MissingContextVariableException: Required context class hudson.FilePath is missing
   
   Perhaps you forgot to surround the code with a step that provides this, such as: node
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Aug/21 13:42;githubbot;600","nkalmar edited a comment on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-899521315


   It looks like as if it is some kind of jenkins job description problem:
   ```
   Error when executing cleanup post condition:
   
   org.jenkinsci.plugins.workflow.steps.MissingContextVariableException: Required context class hudson.FilePath is missing
   
   Perhaps you forgot to surround the code with a step that provides this, such as: node
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Aug/21 13:42;githubbot;600","ztzg commented on a change in pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#discussion_r695741001



##########
File path: zookeeper-server/src/main/resources/lib/commons-io-2.7.LICENSE.txt
##########
@@ -0,0 +1,203 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

Review comment:
       Right.  I added that file because we already have equivalents for `jetty`, `jline`, `log4j`, `metrics`, `netty`, `simpleclient`, `slf4j` and `snappy`.
   
   Are you saying that the set should be completed all at once, rather than piecewise?  If so, would you like me to remove this one?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 13:16;githubbot;600","ztzg commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-905492979


   @eolivelli, @nkalmar: The Jenkins job description problem went away (I suppose it was an infrastructure misconfiguration).  Some flaky request throttling tests keep failing on the GitHub CI runner, but passed on Jenkins.  Should we merge this?  (@enrico: would you want me to remove the `*.LICENSE.txt`?)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 13:16;githubbot;600","eolivelli commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-905526230


   >  would you want me to remove the *.LICENSE.txt?
   no, please keep it
   
   > . Should we merge this?
   No if CI is not green, I have restarted the job


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 13:59;githubbot;600","ztzg commented on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-905613856


   > > would you want me to remove the *.LICENSE.txt?
   > no, please keep it
   
   Okay.
   
   > > . Should we merge this?
   > No if CI is not green, I have restarted the job
   
   Ah, the GitHub CI runs finally went through. (I had restarted the job a couple of times already, but kept hitting random flaky errors.  Isn't the `full-build-java-tests, 11` job kinda redundant wrt. to the Jenkins run, which was already passing?  I obviously wouldn't suggest to ignore CI in general.)
   
   Should I take care of the merge?
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 15:31;githubbot;600","ztzg edited a comment on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-905613856


   > > would you want me to remove the *.LICENSE.txt?
   >
   > no, please keep it
   
   Okay.
   
   > > . Should we merge this?
   >
   > No if CI is not green, I have restarted the job
   
   Ah, the GitHub CI runs finally went through. (I had restarted the job a couple of times already, but kept hitting random flaky errors.  Isn't the `full-build-java-tests, 11` job kinda redundant wrt. to the Jenkins run, which was already passing?  I obviously wouldn't suggest to ignore CI in general.)
   
   Should I take care of the merge?
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 15:31;githubbot;600","ztzg edited a comment on pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735#issuecomment-905613856


   > > would you want me to remove the *.LICENSE.txt?
   >
   > no, please keep it
   
   Okay.
   
   > > . Should we merge this?
   >
   > No if CI is not green, I have restarted the job
   
   Ah, the GitHub CI runs finally went through. (I had restarted the job a couple of times already, but kept hitting random flaky errors.  Isn't the `full-build-java-tests, 11` job kinda redundant wrt. to the Jenkins run, which was already passing?  I obviously wouldn't suggest to ignore CI in general.)
   
   Should I take care of the merge?
   
   P.-S. — Hopefully https://github.com/apache/zookeeper/pull/1739 will help.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 15:32;githubbot;600","ztzg closed pull request #1735:
URL: https://github.com/apache/zookeeper/pull/1735


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/21 16:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10200,,,0,10200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 01 16:56:59 UTC 2021,,,,,,,,,,"0|z0tmtk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Sep/21 16:56;ztzg;Issue resolved by pull request 1735
[https://github.com/apache/zookeeper/pull/1735];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Robustify C client against errors during SASL negotiation,ZOOKEEPER-4342,13393409,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,ztzg,ztzg,ztzg,04/Aug/21 07:47,25/Aug/21 12:21,13/Jul/23 09:08,25/Aug/21 12:15,3.7.0,3.8.0,,,,,,,,3.7.1,3.8.0,,,,c client,,,,0,pull-request-available,,"1. The current client is ignoring the error field of the response header, and only considering SASL-level errors when processing a SASL response.

2. Such errors cause a double-free of the input buffer, which crashes the application.
",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733


   Before this, the client was ignoring the error field of the response header, and only considering SASL-level errors.
   
   This commit makes it consider `hdr.err`.  It also zeroes the `res` data structure, to avoid a crash in `deallocate` if `deserialize` is skipped, and sets `input_buffer` to `NULL` to avoid a double-free.
   
   (I looked into adding a non-regression test, but doing so requires adding quite a bit of infrastructure to the mocks so that the SASL library can be correctly initialized.  Punting for now.)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Aug/21 11:07;githubbot;600","ztzg commented on pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733#issuecomment-892570858


   @eolivelli: It would be good to have this in 3.7.1 (even though it seems difficult to trigger in practice with the current server).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Aug/21 11:09;githubbot;600","ztzg opened a new pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733


   Before this, the client was ignoring the error field of the response header, and only considering SASL-level errors.
   
   This commit makes it consider `hdr.err`.  It also zeroes the `res` data structure, to avoid a crash in `deallocate` if `deserialize` is skipped, and sets `input_buffer` to `NULL` to avoid a double-free.
   
   (I looked into adding a non-regression test, but doing so requires adding quite a bit of infrastructure to the mocks so that the SASL library can be correctly initialized.  Punting for now.)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 11:26;githubbot;600","ztzg commented on pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733#issuecomment-892570858


   @eolivelli: It would be good to have this in 3.7.1 (even though it seems difficult to trigger in practice with the current server).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/21 11:39;githubbot;600","ztzg commented on pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733#issuecomment-905445492


   @eolivelli: AFAICT, this is ready to go. Should I take care of merging it?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 12:12;githubbot;600","eolivelli commented on pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733#issuecomment-905446007


   merging it now


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 12:13;githubbot;600","eolivelli closed pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 12:14;githubbot;600","eolivelli commented on pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733#issuecomment-905448067


   committed to master and to branch-3.7


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 12:16;githubbot;600","ztzg commented on pull request #1733:
URL: https://github.com/apache/zookeeper/pull/1733#issuecomment-905452818


   Thanks!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/21 12:21;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-08-04 07:47:07.0,,,,,,,,,,"0|z0tlbs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper artifact is not compatible with OSGi runtime,ZOOKEEPER-4331,13386457,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,bigmarvin,bigmarvin,29/Jun/21 08:15,03/Aug/21 12:32,13/Jul/23 09:08,03/Aug/21 09:56,3.5.5,3.6.3,3.7.0,,,,,,,3.5.10,3.6.4,3.7.1,,,build,,,,0,pull-request-available,,"Headers like {{Bundle-SymbolicName}}, {{Import-Package}} and {{Export-Package}} are required by OSGi runtime, but they are no longer available in manifest since 3.5.5.

The migration from ant to maven looks suspicious, as these headers are originally planted by ant. Either way, they are required for the artifact serving as a bundle directly.",,bigmarvin,,,,,,,,,,,,,,,,,,,"bigmarvin opened a new pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720


   This change primarily copies the planted headers from build.xml to pom.xml. In this way, it shouldn't touch anything but the manifest, and I'm appending a diff from my dev box in the end. I'm looking for a fix to 3.5, 3.6 and 3.7, so please let me know if any further PR is required for this to happen.
   
   As things have changed a lot since 3.4, please feel free to let me know if any correction is required. Thanks!
   
   ```
   --- MANIFEST.MF.before  2021-06-29 15:22:44.000000000 +0800
   +++ MANIFEST.MF.after   2021-06-29 16:02:58.000000000 +0800
   @@ -1,13 +1,122 @@
    Manifest-Version: 1.0
   -Implementation-Title: Apache ZooKeeper - Server
   -Implementation-Version: 3.5.9
   -Built-By: bigmarvin
   -Specification-Vendor: The Apache Software Foundation
   -Specification-Title: Apache ZooKeeper - Server
   -Implementation-Vendor-Id: org.apache.zookeeper
   -Created-By: Apache Maven 3.3.9
   +Bnd-LastModified: 1624953779106
    Build-Jdk: 1.8.0_265
   -Specification-Version: 3.5
   +Built-By: bigmarvin
   +Bundle-Description: ZooKeeper server
   +Bundle-DocURL: https://zookeeper.apache.org/doc/current/
   +Bundle-License: https://www.apache.org/licenses/LICENSE-2.0.txt
   +Bundle-ManifestVersion: 2
   +Bundle-Name: ZooKeeper Bundle
   +Bundle-SymbolicName: org.apache.zookeeper
   +Bundle-Vendor: The Apache Software Foundation
   +Bundle-Version: 3.5.9
   +Created-By: Apache Maven Bundle Plugin
   +Export-Package: org.apache.zookeeper;uses:=""javax.security.auth,javax.
   + security.auth.callback,javax.security.auth.login,org.apache.jute,org.
   + apache.yetus.audience,org.apache.zookeeper.cli,org.apache.zookeeper.c
   + lient,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apach
   + e.zookeeper.proto,org.apache.zookeeper.version,org.slf4j"";version=""3.
   + 5.9"",org.apache.zookeeper.admin;uses:=""org.apache.yetus.audience,org.
   + apache.zookeeper,org.apache.zookeeper.client,org.apache.zookeeper.dat
   + a"";version=""3.5.9"",org.apache.zookeeper.cli;uses:=""org.apache.commons
   + .cli,org.apache.zookeeper,org.apache.zookeeper.data"";version=""3.5.9"",
   + org.apache.zookeeper.client;uses:=""javax.security.auth.login,javax.se
   + curity.sasl,org.apache.yetus.audience,org.apache.zookeeper,org.apache
   + .zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.serv
   + er.quorum,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.common;uses
   + :=""io.netty.channel,io.netty.channel.socket,io.netty.handler.ssl,java
   + x.net.ssl,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.
   + 9"",org.apache.zookeeper.data;uses:=""org.apache.jute,org.apache.yetus.
   + audience"";version=""3.5.9"",org.apache.zookeeper.jmx;uses:=""javax.manag
   + ement"";version=""3.5.9"",org.apache.zookeeper.proto;uses:=""org.apache.j
   + ute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5
   + .9"",org.apache.zookeeper.server;uses:=""javax.security.sasl,org.apache
   + .jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zooke
   + eper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.proto,org.apa
   + che.zookeeper.server.admin,org.apache.zookeeper.server.auth,org.apach
   + e.zookeeper.server.persistence,org.apache.zookeeper.server.quorum,org
   + .apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org
   + .slf4j"";version=""3.5.9"",org.apache.zookeeper.server.admin;uses:=""org.
   + apache.yetus.audience,org.apache.zookeeper.server"";version=""3.5.9"",or
   + g.apache.zookeeper.server.auth;uses:=""javax.net.ssl,javax.security.au
   + th,javax.security.auth.callback,javax.security.auth.login,javax.secur
   + ity.auth.spi,org.apache.zookeeper,org.apache.zookeeper.common,org.apa
   + che.zookeeper.server"";version=""3.5.9"",org.apache.zookeeper.server.com
   + mand;uses:=""org.apache.zookeeper.server"";version=""3.5.9"",org.apache.z
   + ookeeper.server.persistence;uses:=""org.apache.jute,org.apache.yetus.a
   + udience,org.apache.zookeeper,org.apache.zookeeper.server,org.apache.z
   + ookeeper.txn"";version=""3.5.9"",org.apache.zookeeper.server.quorum;uses
   + :=""javax.net.ssl,javax.security.sasl,org.apache.jute,org.apache.yetus
   + .audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache
   + .zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.server,
   + org.apache.zookeeper.server.admin,org.apache.zookeeper.server.persist
   + ence,org.apache.zookeeper.server.quorum.auth,org.apache.zookeeper.ser
   + ver.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.
   + 9"",org.apache.zookeeper.server.quorum.auth;uses:=""javax.security.auth
   + .callback,javax.security.auth.login,javax.security.sasl,org.apache.zo
   + okeeper.server.quorum"";version=""3.5.9"",org.apache.zookeeper.server.qu
   + orum.flexible;uses:=""org.apache.zookeeper.server.quorum"";version=""3.5
   + .9"",org.apache.zookeeper.server.util;uses:=""org.apache.jute,org.apach
   + e.zookeeper.server,org.apache.zookeeper.server.quorum,org.apache.zook
   + eeper.txn,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.txn;uses:=""
   + org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";
   + version=""3.5.9"",org.apache.zookeeper.util;uses:=""javax.security.auth,
   + javax.security.auth.callback,javax.security.sasl,org.slf4j"";version=""
   + 3.5.9"",org.apache.zookeeper.version;version=""3.5.9"",org.apache.zookee
   + per.version.util;version=""3.5.9""
   +Implementation-Title: Apache ZooKeeper - Server
    Implementation-URL: http://zookeeper.apache.org/zookeeper
    Implementation-Vendor: The Apache Software Foundation
   +Implementation-Vendor-Id: org.apache.zookeeper
   +Implementation-Version: 3.5.9
   +Import-Package: javax.management;resolution:=optional,javax.security.a
   + uth.callback,javax.security.auth.login,javax.security.sasl,org.slf4j;
   + version=""[1.7,2)"",io.netty.buffer;resolution:=optional;version=""[4.1,
   + 5)"",io.netty.channel;resolution:=optional;version=""[4.1,5)"",io.netty.
   + channel.group;resolution:=optional;version=""[4.1,5)"",io.netty.channel
   + .socket.nio;resolution:=optional;version=""[4.1,5)"",org.ietf.jgss,com.
   + fasterxml.jackson.core;resolution:=optional;version=""[2.10,3)"",com.fa
   + sterxml.jackson.databind;resolution:=optional;version=""[2.10,3)"",io.n
   + etty.bootstrap;resolution:=optional;version=""[4.1,5)"",io.netty.channe
   + l.epoll;resolution:=optional;version=""[4.1,5)"",io.netty.channel.nio;r
   + esolution:=optional;version=""[4.1,5)"",io.netty.channel.socket;resolut
   + ion:=optional;version=""[4.1,5)"",io.netty.handler.ssl;resolution:=opti
   + onal;version=""[4.1,5)"",io.netty.util;resolution:=optional;version=""[4
   + .1,5)"",io.netty.util.concurrent;resolution:=optional;version=""[4.1,5)
   + "",javax.crypto;resolution:=optional,javax.crypto.spec;resolution:=opt
   + ional,javax.naming;resolution:=optional,javax.naming.directory;resolu
   + tion:=optional,javax.naming.ldap;resolution:=optional,javax.net.ssl;r
   + esolution:=optional,javax.security.auth;resolution:=optional,javax.se
   + curity.auth.kerberos;resolution:=optional,javax.security.auth.spi;res
   + olution:=optional,javax.security.auth.x500;resolution:=optional,javax
   + .servlet;resolution:=optional;version=""[3.1,4)"",javax.servlet.http;re
   + solution:=optional;version=""[3.1,4)"",jline.console.completer;resoluti
   + on:=optional;version=""[2.14,3)"",org.apache.commons.cli;resolution:=op
   + tional;version=""[1.2,2)"",org.apache.jute;resolution:=optional,org.apa
   + che.yetus.audience;resolution:=optional,org.apache.zookeeper;resoluti
   + on:=optional,org.apache.zookeeper.admin;resolution:=optional,org.apac
   + he.zookeeper.cli;resolution:=optional,org.apache.zookeeper.client;res
   + olution:=optional,org.apache.zookeeper.common;resolution:=optional,or
   + g.apache.zookeeper.data;resolution:=optional,org.apache.zookeeper.jmx
   + ;resolution:=optional,org.apache.zookeeper.proto;resolution:=optional
   + ,org.apache.zookeeper.server;resolution:=optional,org.apache.zookeepe
   + r.server.admin;resolution:=optional,org.apache.zookeeper.server.auth;
   + resolution:=optional,org.apache.zookeeper.server.command;resolution:=
   + optional,org.apache.zookeeper.server.persistence;resolution:=optional
   + ,org.apache.zookeeper.server.quorum;resolution:=optional,org.apache.z
   + ookeeper.server.quorum.auth;resolution:=optional,org.apache.zookeeper
   + .server.quorum.flexible;resolution:=optional,org.apache.zookeeper.ser
   + ver.util;resolution:=optional,org.apache.zookeeper.txn;resolution:=op
   + tional,org.apache.zookeeper.util;resolution:=optional,org.apache.zook
   + eeper.version;resolution:=optional,org.eclipse.jetty.security;resolut
   + ion:=optional;version=""[9.4,10)"",org.eclipse.jetty.server;resolution:
   + =optional;version=""[9.4,10)"",org.eclipse.jetty.servlet;resolution:=op
   + tional;version=""[9.4,10)"",org.eclipse.jetty.util.security;resolution:
   + =optional;version=""[9.4,10)"",org.osgi.framework;resolution:=optional,
   + org.osgi.util.tracker;resolution:=optional
   +Require-Capability: osgi.ee;filter:=""(&(osgi.ee=JavaSE)(version=1.8))""
   +Specification-Title: Apache ZooKeeper - Server
   +Specification-Vendor: The Apache Software Foundation
   +Specification-Version: 3.5.9
   +Tool: Bnd-4.1.0.201810181252
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 08:27;githubbot;600","bigmarvin opened a new pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720


   This change primarily copies the planted headers from build.xml to pom.xml. In this way, it shouldn't touch anything but the manifest, and I'm appending a diff from my dev box in the end. I'm looking for a fix to 3.5, 3.6 and 3.7, so please let me know if any further PR is required for this to happen.
   
   As things have changed a lot since 3.4, please feel free to let me know if any correction is required. Thanks!
   
   ```
   --- MANIFEST.MF.before  2021-06-29 15:22:44.000000000 +0800
   +++ MANIFEST.MF.after   2021-06-29 16:02:58.000000000 +0800
   @@ -1,13 +1,122 @@
    Manifest-Version: 1.0
   -Implementation-Title: Apache ZooKeeper - Server
   -Implementation-Version: 3.5.9
   -Built-By: bigmarvin
   -Specification-Vendor: The Apache Software Foundation
   -Specification-Title: Apache ZooKeeper - Server
   -Implementation-Vendor-Id: org.apache.zookeeper
   -Created-By: Apache Maven 3.3.9
   +Bnd-LastModified: 1624953779106
    Build-Jdk: 1.8.0_265
   -Specification-Version: 3.5
   +Built-By: bigmarvin
   +Bundle-Description: ZooKeeper server
   +Bundle-DocURL: https://zookeeper.apache.org/doc/current/
   +Bundle-License: https://www.apache.org/licenses/LICENSE-2.0.txt
   +Bundle-ManifestVersion: 2
   +Bundle-Name: ZooKeeper Bundle
   +Bundle-SymbolicName: org.apache.zookeeper
   +Bundle-Vendor: The Apache Software Foundation
   +Bundle-Version: 3.5.9
   +Created-By: Apache Maven Bundle Plugin
   +Export-Package: org.apache.zookeeper;uses:=""javax.security.auth,javax.
   + security.auth.callback,javax.security.auth.login,org.apache.jute,org.
   + apache.yetus.audience,org.apache.zookeeper.cli,org.apache.zookeeper.c
   + lient,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apach
   + e.zookeeper.proto,org.apache.zookeeper.version,org.slf4j"";version=""3.
   + 5.9"",org.apache.zookeeper.admin;uses:=""org.apache.yetus.audience,org.
   + apache.zookeeper,org.apache.zookeeper.client,org.apache.zookeeper.dat
   + a"";version=""3.5.9"",org.apache.zookeeper.cli;uses:=""org.apache.commons
   + .cli,org.apache.zookeeper,org.apache.zookeeper.data"";version=""3.5.9"",
   + org.apache.zookeeper.client;uses:=""javax.security.auth.login,javax.se
   + curity.sasl,org.apache.yetus.audience,org.apache.zookeeper,org.apache
   + .zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.serv
   + er.quorum,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.common;uses
   + :=""io.netty.channel,io.netty.channel.socket,io.netty.handler.ssl,java
   + x.net.ssl,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.
   + 9"",org.apache.zookeeper.data;uses:=""org.apache.jute,org.apache.yetus.
   + audience"";version=""3.5.9"",org.apache.zookeeper.jmx;uses:=""javax.manag
   + ement"";version=""3.5.9"",org.apache.zookeeper.proto;uses:=""org.apache.j
   + ute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5
   + .9"",org.apache.zookeeper.server;uses:=""javax.security.sasl,org.apache
   + .jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zooke
   + eper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.proto,org.apa
   + che.zookeeper.server.admin,org.apache.zookeeper.server.auth,org.apach
   + e.zookeeper.server.persistence,org.apache.zookeeper.server.quorum,org
   + .apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org
   + .slf4j"";version=""3.5.9"",org.apache.zookeeper.server.admin;uses:=""org.
   + apache.yetus.audience,org.apache.zookeeper.server"";version=""3.5.9"",or
   + g.apache.zookeeper.server.auth;uses:=""javax.net.ssl,javax.security.au
   + th,javax.security.auth.callback,javax.security.auth.login,javax.secur
   + ity.auth.spi,org.apache.zookeeper,org.apache.zookeeper.common,org.apa
   + che.zookeeper.server"";version=""3.5.9"",org.apache.zookeeper.server.com
   + mand;uses:=""org.apache.zookeeper.server"";version=""3.5.9"",org.apache.z
   + ookeeper.server.persistence;uses:=""org.apache.jute,org.apache.yetus.a
   + udience,org.apache.zookeeper,org.apache.zookeeper.server,org.apache.z
   + ookeeper.txn"";version=""3.5.9"",org.apache.zookeeper.server.quorum;uses
   + :=""javax.net.ssl,javax.security.sasl,org.apache.jute,org.apache.yetus
   + .audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache
   + .zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.server,
   + org.apache.zookeeper.server.admin,org.apache.zookeeper.server.persist
   + ence,org.apache.zookeeper.server.quorum.auth,org.apache.zookeeper.ser
   + ver.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.
   + 9"",org.apache.zookeeper.server.quorum.auth;uses:=""javax.security.auth
   + .callback,javax.security.auth.login,javax.security.sasl,org.apache.zo
   + okeeper.server.quorum"";version=""3.5.9"",org.apache.zookeeper.server.qu
   + orum.flexible;uses:=""org.apache.zookeeper.server.quorum"";version=""3.5
   + .9"",org.apache.zookeeper.server.util;uses:=""org.apache.jute,org.apach
   + e.zookeeper.server,org.apache.zookeeper.server.quorum,org.apache.zook
   + eeper.txn,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.txn;uses:=""
   + org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";
   + version=""3.5.9"",org.apache.zookeeper.util;uses:=""javax.security.auth,
   + javax.security.auth.callback,javax.security.sasl,org.slf4j"";version=""
   + 3.5.9"",org.apache.zookeeper.version;version=""3.5.9"",org.apache.zookee
   + per.version.util;version=""3.5.9""
   +Implementation-Title: Apache ZooKeeper - Server
    Implementation-URL: http://zookeeper.apache.org/zookeeper
    Implementation-Vendor: The Apache Software Foundation
   +Implementation-Vendor-Id: org.apache.zookeeper
   +Implementation-Version: 3.5.9
   +Import-Package: javax.management;resolution:=optional,javax.security.a
   + uth.callback,javax.security.auth.login,javax.security.sasl,org.slf4j;
   + version=""[1.7,2)"",io.netty.buffer;resolution:=optional;version=""[4.1,
   + 5)"",io.netty.channel;resolution:=optional;version=""[4.1,5)"",io.netty.
   + channel.group;resolution:=optional;version=""[4.1,5)"",io.netty.channel
   + .socket.nio;resolution:=optional;version=""[4.1,5)"",org.ietf.jgss,com.
   + fasterxml.jackson.core;resolution:=optional;version=""[2.10,3)"",com.fa
   + sterxml.jackson.databind;resolution:=optional;version=""[2.10,3)"",io.n
   + etty.bootstrap;resolution:=optional;version=""[4.1,5)"",io.netty.channe
   + l.epoll;resolution:=optional;version=""[4.1,5)"",io.netty.channel.nio;r
   + esolution:=optional;version=""[4.1,5)"",io.netty.channel.socket;resolut
   + ion:=optional;version=""[4.1,5)"",io.netty.handler.ssl;resolution:=opti
   + onal;version=""[4.1,5)"",io.netty.util;resolution:=optional;version=""[4
   + .1,5)"",io.netty.util.concurrent;resolution:=optional;version=""[4.1,5)
   + "",javax.crypto;resolution:=optional,javax.crypto.spec;resolution:=opt
   + ional,javax.naming;resolution:=optional,javax.naming.directory;resolu
   + tion:=optional,javax.naming.ldap;resolution:=optional,javax.net.ssl;r
   + esolution:=optional,javax.security.auth;resolution:=optional,javax.se
   + curity.auth.kerberos;resolution:=optional,javax.security.auth.spi;res
   + olution:=optional,javax.security.auth.x500;resolution:=optional,javax
   + .servlet;resolution:=optional;version=""[3.1,4)"",javax.servlet.http;re
   + solution:=optional;version=""[3.1,4)"",jline.console.completer;resoluti
   + on:=optional;version=""[2.14,3)"",org.apache.commons.cli;resolution:=op
   + tional;version=""[1.2,2)"",org.apache.jute;resolution:=optional,org.apa
   + che.yetus.audience;resolution:=optional,org.apache.zookeeper;resoluti
   + on:=optional,org.apache.zookeeper.admin;resolution:=optional,org.apac
   + he.zookeeper.cli;resolution:=optional,org.apache.zookeeper.client;res
   + olution:=optional,org.apache.zookeeper.common;resolution:=optional,or
   + g.apache.zookeeper.data;resolution:=optional,org.apache.zookeeper.jmx
   + ;resolution:=optional,org.apache.zookeeper.proto;resolution:=optional
   + ,org.apache.zookeeper.server;resolution:=optional,org.apache.zookeepe
   + r.server.admin;resolution:=optional,org.apache.zookeeper.server.auth;
   + resolution:=optional,org.apache.zookeeper.server.command;resolution:=
   + optional,org.apache.zookeeper.server.persistence;resolution:=optional
   + ,org.apache.zookeeper.server.quorum;resolution:=optional,org.apache.z
   + ookeeper.server.quorum.auth;resolution:=optional,org.apache.zookeeper
   + .server.quorum.flexible;resolution:=optional,org.apache.zookeeper.ser
   + ver.util;resolution:=optional,org.apache.zookeeper.txn;resolution:=op
   + tional,org.apache.zookeeper.util;resolution:=optional,org.apache.zook
   + eeper.version;resolution:=optional,org.eclipse.jetty.security;resolut
   + ion:=optional;version=""[9.4,10)"",org.eclipse.jetty.server;resolution:
   + =optional;version=""[9.4,10)"",org.eclipse.jetty.servlet;resolution:=op
   + tional;version=""[9.4,10)"",org.eclipse.jetty.util.security;resolution:
   + =optional;version=""[9.4,10)"",org.osgi.framework;resolution:=optional,
   + org.osgi.util.tracker;resolution:=optional
   +Require-Capability: osgi.ee;filter:=""(&(osgi.ee=JavaSE)(version=1.8))""
   +Specification-Title: Apache ZooKeeper - Server
   +Specification-Vendor: The Apache Software Foundation
   +Specification-Version: 3.5.9
   +Tool: Bnd-4.1.0.201810181252
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 13:50;githubbot;600","zhongxiongzeng opened a new pull request #1721:
URL: https://github.com/apache/zookeeper/pull/1721


   remove some never used field 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jul/21 03:27;githubbot;600","bigmarvin commented on pull request #1721:
URL: https://github.com/apache/zookeeper/pull/1721#issuecomment-872219894


   @zhongxiongzeng, are you sure this change is trying to address [ZOOKEEPER-4331](https://issues.apache.org/jira/browse/ZOOKEEPER-4331)? If not, do you mind filing another ticket for tracking?
   
   Though I'm proposing the fix in https://github.com/apache/zookeeper/pull/1720, I'm open to better alternatives. However, this PR just seems not really related, and I would appreciate it a lot if this PR is no longer associated with ZOOKEEPER-4331. Thank you!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jul/21 12:51;githubbot;600","bigmarvin commented on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-873100058


   Yes you are right, @ctubbsii, that it's also feasible to instruct jar plugin to plant these entries. That's the exact way how ant script does this job. However, I'd like to justify a little more around my preference for this change over the alternative you mentioned. I've tidied the header `Import-Package` and `Export-Package` to illustrate the justification below.
   
   The change of packaging from jar to bundle and the replacement of jar plugin with bundle plugin **only** modify the manifest, which makes such change very safe. This change would add some extra headers/entries that are not consumed in non-OSGi runtime, so the only cost would be some increment in size of delivered artifact. One step further, all artifacts of packaging jar can be turned into bundles safely, while I assume not every project has such requirement until it's widely adopted.
   
   The primary job of bundle plugin would be working out the **topology** of **versioned** packages, which is barely possible to mimic manually. The following parts require some knowledge in OSGi while I'll try to make it straightforward.
   
   As you can find in the `Export-Package`, if some client uses some classes in some zookeeper package (or formally some client bundle imports some zookeeper package) it must also import some other packages before the classes in the zookeeper package can work or even just be loaded. This **topology** of dependency resides in the code base, so ideally those headers planted manually must be revisited for every code change. It would be too expensive if possible.
   
   Besides, all packages this artifact/bundle requires and provides are **versioned** if possible. The versions are extracted from the dependency tree at build time, so ideally all these versions must be revisited for every change in version or dependency tree. Putting these 2 ideal parts together, I would say it's practically impossible to manually maintain these headers/entries. Any such attempt would come up with some values that may work for some scenarios but never for all, and why bother given there's some automated way in place?
   
   I can prepare another change using jar plugin to plant headers/entries. At least, either solution works for ZOOKEEPER-4331. However, I'd like to double check how determined you maintainers are before I drop this preferred proposal. Looking forward to your input.
   
   ```
   Import-Package: \
     javax.management;resolution:=optional,\
     javax.security.auth.callback,\
     javax.security.auth.login,\
     javax.security.sasl,\
     org.slf4j;version=""[1.7,2)"",\
     io.netty.buffer;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.group;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket.nio;resolution:=optional;version=""[4.1,5)"",\
     org.ietf.jgss,com.fasterxml.jackson.core;resolution:=optional;version=""[2.10,3)"",\
     com.fasterxml.jackson.databind;resolution:=optional;version=""[2.10,3)"",\
     io.netty.bootstrap;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.epoll;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.nio;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket;resolution:=optional;version=""[4.1,5)"",\
     io.netty.handler.ssl;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util.concurrent;resolution:=optional;version=""[4.1,5)"",\
     javax.crypto;resolution:=optional,\
     javax.crypto.spec;resolution:=optional,\
     javax.naming;resolution:=optional,\
     javax.naming.directory;resolution:=optional,\
     javax.naming.ldap;resolution:=optional,\
     javax.net.ssl;resolution:=optional,\
     javax.security.auth;resolution:=optional,\
     javax.security.auth.kerberos;resolution:=optional,\
     javax.security.auth.spi;resolution:=optional,\
     javax.security.auth.x500;resolution:=optional,\
     javax.servlet;resolution:=optional;version=""[3.1,4)"",\
     javax.servlet.http;resolution:=optional;version=""[3.1,4)"",\
     jline.console.completer;resolution:=optional;version=""[2.14,3)"",\
     org.apache.commons.cli;resolution:=optional;version=""[1.2,2)"",\
     org.apache.jute;resolution:=optional,\
     org.apache.yetus.audience;resolution:=optional,\
     org.apache.zookeeper;resolution:=optional,\
     org.apache.zookeeper.admin;resolution:=optional,\
     org.apache.zookeeper.cli;resolution:=optional,\
     org.apache.zookeeper.client;resolution:=optional,\
     org.apache.zookeeper.common;resolution:=optional,\
     org.apache.zookeeper.data;resolution:=optional,\
     org.apache.zookeeper.jmx;resolution:=optional,\
     org.apache.zookeeper.proto;resolution:=optional,\
     org.apache.zookeeper.server;resolution:=optional,\
     org.apache.zookeeper.server.admin;resolution:=optional,\
     org.apache.zookeeper.server.auth;resolution:=optional,\
     org.apache.zookeeper.server.command;resolution:=optional,\
     org.apache.zookeeper.server.persistence;resolution:=optional,\
     org.apache.zookeeper.server.quorum;resolution:=optional,\
     org.apache.zookeeper.server.quorum.auth;resolution:=optional,\
     org.apache.zookeeper.server.quorum.flexible;resolution:=optional,\
     org.apache.zookeeper.server.util;resolution:=optional,\
     org.apache.zookeeper.txn;resolution:=optional,\
     org.apache.zookeeper.util;resolution:=optional,\
     org.apache.zookeeper.version;resolution:=optional,\
     org.eclipse.jetty.security;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.server;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.servlet;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.util.security;resolution:=optional;version=""[9.4,10)"",\
     org.osgi.framework;resolution:=optional,\
     org.osgi.util.tracker;resolution:=optional
   Export-Package: \
     org.apache.zookeeper;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.auth.login,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.cli,org.apache.zookeeper.client,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.proto,org.apache.zookeeper.version,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.client,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.cli;uses:=""org.apache.commons.cli,org.apache.zookeeper,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.client;uses:=""javax.security.auth.login,javax.security.sasl,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.common;uses:=""io.netty.channel,io.netty.channel.socket,io.netty.handler.ssl,javax.net.ssl,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.data;uses:=""org.apache.jute,org.apache.yetus.audience"";version=""3.5.9"",\
     org.apache.zookeeper.jmx;uses:=""javax.management"";version=""3.5.9"",\
     org.apache.zookeeper.proto;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.server;uses:=""javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.proto,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.auth,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.auth;uses:=""javax.net.ssl,javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.command;uses:=""org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.persistence;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.server,org.apache.zookeeper.txn"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum;uses:=""javax.net.ssl,javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.server,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum.auth,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.auth;uses:=""javax.security.auth.callback,javax.security.auth.login,javax.security.sasl,org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.flexible;uses:=""org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.util;uses:=""org.apache.jute,org.apache.zookeeper.server,org.apache.zookeeper.server.quorum,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.txn;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.util;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.sasl,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.version;version=""3.5.9"",\
     org.apache.zookeeper.version.util;version=""3.5.9""
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/21 15:58;githubbot;600","bigmarvin edited a comment on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-873100058


   Yes you are right, @ctubbsii, that it's also feasible to instruct jar plugin to plant these entries. That's the exact way how ant script does this job. However, I'd like to justify a little more around my preference for this change over the alternative you mentioned. I've tidied the header `Import-Package` and `Export-Package` to illustrate the justification below.
   
   The change of packaging from jar to bundle and the replacement of jar plugin with bundle plugin **only** modify the manifest, which makes such change very safe. This change would add some extra headers/entries that are not consumed in non-OSGi runtime, so the only cost would be some increment in size of delivered artifact. One step further, all artifacts of packaging jar can be turned into bundles safely, while I assume not every project has such requirement until it's widely adopted.
   
   The primary job of bundle plugin would be working out the **topology** of **versioned** packages, which is barely possible to mimic manually. The following parts require some knowledge in OSGi while I'll try to make it straightforward.
   
   As you can find in the `Export-Package`, if some client uses some classes in some zookeeper package (or formally some client bundle imports some zookeeper package) it must also import some other packages before the zookeeper classes can work or even just be loaded. This **topology** of dependency resides in the code base, so ideally those headers planted manually must be revisited for every code change. It would be too expensive if possible.
   
   Besides, all packages this artifact/bundle requires and provides are **versioned** if possible. The versions are extracted from the dependency tree at build time, so ideally all these versions must be revisited for every change in version or dependency tree. Putting these 2 ideal parts together, I would say it's practically impossible to manually maintain these headers/entries. Any such attempt would come up with some values that may work for some scenarios but never for all, and why bother given there's some automated way in place?
   
   I can prepare another change using jar plugin to plant headers/entries. At least, either solution works for ZOOKEEPER-4331. However, I'd like to double check how determined you maintainers are before I drop this preferred proposal. Looking forward to your input.
   
   ```
   Import-Package: \
     javax.management;resolution:=optional,\
     javax.security.auth.callback,\
     javax.security.auth.login,\
     javax.security.sasl,\
     org.slf4j;version=""[1.7,2)"",\
     io.netty.buffer;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.group;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket.nio;resolution:=optional;version=""[4.1,5)"",\
     org.ietf.jgss,com.fasterxml.jackson.core;resolution:=optional;version=""[2.10,3)"",\
     com.fasterxml.jackson.databind;resolution:=optional;version=""[2.10,3)"",\
     io.netty.bootstrap;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.epoll;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.nio;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket;resolution:=optional;version=""[4.1,5)"",\
     io.netty.handler.ssl;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util.concurrent;resolution:=optional;version=""[4.1,5)"",\
     javax.crypto;resolution:=optional,\
     javax.crypto.spec;resolution:=optional,\
     javax.naming;resolution:=optional,\
     javax.naming.directory;resolution:=optional,\
     javax.naming.ldap;resolution:=optional,\
     javax.net.ssl;resolution:=optional,\
     javax.security.auth;resolution:=optional,\
     javax.security.auth.kerberos;resolution:=optional,\
     javax.security.auth.spi;resolution:=optional,\
     javax.security.auth.x500;resolution:=optional,\
     javax.servlet;resolution:=optional;version=""[3.1,4)"",\
     javax.servlet.http;resolution:=optional;version=""[3.1,4)"",\
     jline.console.completer;resolution:=optional;version=""[2.14,3)"",\
     org.apache.commons.cli;resolution:=optional;version=""[1.2,2)"",\
     org.apache.jute;resolution:=optional,\
     org.apache.yetus.audience;resolution:=optional,\
     org.apache.zookeeper;resolution:=optional,\
     org.apache.zookeeper.admin;resolution:=optional,\
     org.apache.zookeeper.cli;resolution:=optional,\
     org.apache.zookeeper.client;resolution:=optional,\
     org.apache.zookeeper.common;resolution:=optional,\
     org.apache.zookeeper.data;resolution:=optional,\
     org.apache.zookeeper.jmx;resolution:=optional,\
     org.apache.zookeeper.proto;resolution:=optional,\
     org.apache.zookeeper.server;resolution:=optional,\
     org.apache.zookeeper.server.admin;resolution:=optional,\
     org.apache.zookeeper.server.auth;resolution:=optional,\
     org.apache.zookeeper.server.command;resolution:=optional,\
     org.apache.zookeeper.server.persistence;resolution:=optional,\
     org.apache.zookeeper.server.quorum;resolution:=optional,\
     org.apache.zookeeper.server.quorum.auth;resolution:=optional,\
     org.apache.zookeeper.server.quorum.flexible;resolution:=optional,\
     org.apache.zookeeper.server.util;resolution:=optional,\
     org.apache.zookeeper.txn;resolution:=optional,\
     org.apache.zookeeper.util;resolution:=optional,\
     org.apache.zookeeper.version;resolution:=optional,\
     org.eclipse.jetty.security;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.server;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.servlet;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.util.security;resolution:=optional;version=""[9.4,10)"",\
     org.osgi.framework;resolution:=optional,\
     org.osgi.util.tracker;resolution:=optional
   Export-Package: \
     org.apache.zookeeper;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.auth.login,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.cli,org.apache.zookeeper.client,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.proto,org.apache.zookeeper.version,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.client,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.cli;uses:=""org.apache.commons.cli,org.apache.zookeeper,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.client;uses:=""javax.security.auth.login,javax.security.sasl,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.common;uses:=""io.netty.channel,io.netty.channel.socket,io.netty.handler.ssl,javax.net.ssl,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.data;uses:=""org.apache.jute,org.apache.yetus.audience"";version=""3.5.9"",\
     org.apache.zookeeper.jmx;uses:=""javax.management"";version=""3.5.9"",\
     org.apache.zookeeper.proto;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.server;uses:=""javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.proto,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.auth,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.auth;uses:=""javax.net.ssl,javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.command;uses:=""org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.persistence;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.server,org.apache.zookeeper.txn"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum;uses:=""javax.net.ssl,javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.server,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum.auth,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.auth;uses:=""javax.security.auth.callback,javax.security.auth.login,javax.security.sasl,org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.flexible;uses:=""org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.util;uses:=""org.apache.jute,org.apache.zookeeper.server,org.apache.zookeeper.server.quorum,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.txn;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.util;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.sasl,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.version;version=""3.5.9"",\
     org.apache.zookeeper.version.util;version=""3.5.9""
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/21 15:59;githubbot;600","bigmarvin edited a comment on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-873100058


   Yes you are right, @ctubbsii, that it's also feasible to instruct jar plugin to plant these entries. That's the exact way how ant script does this job. However, I'd like to justify a little more around my preference for this change over the alternative you mentioned. I've tidied the header `Import-Package` and `Export-Package` to illustrate the justification below.
   
   The change of packaging from jar to bundle and the replacement of jar plugin with bundle plugin **only** modify the manifest, which makes such change very safe. This change would add some extra headers/entries that are not consumed in non-OSGi runtime, so the only cost would be some increment in size of delivered artifact. One step further, all artifacts of packaging jar can be turned into bundles safely, while I assume not every project has such requirement until it's widely adopted.
   
   The primary job of bundle plugin would be working out the **topology** of **versioned** packages, which is barely possible to mimic manually. The following parts require some knowledge in OSGi while I'll try to make it straightforward.
   
   As you can find in the `Export-Package`, if some client wants to use some classes in some zookeeper package (or formally some client bundle imports some zookeeper package) it must also import some other packages before the zookeeper classes can work or even just be loaded. This **topology** of dependency resides in the code base, so ideally those headers planted manually must be revisited for every code change. It would be too expensive if possible.
   
   Besides, all packages this artifact/bundle requires and provides are **versioned** if possible. The versions are extracted from the dependency tree at build time, so ideally all these versions must be revisited for every change in version or dependency tree. Putting these 2 ideal parts together, I would say it's practically impossible to manually maintain these headers/entries. Any such attempt would come up with some values that may work for some scenarios but never for all, and why bother given there's some automated way in place?
   
   I can prepare another change using jar plugin to plant headers/entries. At least, either solution works for ZOOKEEPER-4331. However, I'd like to double check how determined you maintainers are before I drop this preferred proposal. Looking forward to your input.
   
   ```
   Import-Package: \
     javax.management;resolution:=optional,\
     javax.security.auth.callback,\
     javax.security.auth.login,\
     javax.security.sasl,\
     org.slf4j;version=""[1.7,2)"",\
     io.netty.buffer;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.group;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket.nio;resolution:=optional;version=""[4.1,5)"",\
     org.ietf.jgss,com.fasterxml.jackson.core;resolution:=optional;version=""[2.10,3)"",\
     com.fasterxml.jackson.databind;resolution:=optional;version=""[2.10,3)"",\
     io.netty.bootstrap;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.epoll;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.nio;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket;resolution:=optional;version=""[4.1,5)"",\
     io.netty.handler.ssl;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util.concurrent;resolution:=optional;version=""[4.1,5)"",\
     javax.crypto;resolution:=optional,\
     javax.crypto.spec;resolution:=optional,\
     javax.naming;resolution:=optional,\
     javax.naming.directory;resolution:=optional,\
     javax.naming.ldap;resolution:=optional,\
     javax.net.ssl;resolution:=optional,\
     javax.security.auth;resolution:=optional,\
     javax.security.auth.kerberos;resolution:=optional,\
     javax.security.auth.spi;resolution:=optional,\
     javax.security.auth.x500;resolution:=optional,\
     javax.servlet;resolution:=optional;version=""[3.1,4)"",\
     javax.servlet.http;resolution:=optional;version=""[3.1,4)"",\
     jline.console.completer;resolution:=optional;version=""[2.14,3)"",\
     org.apache.commons.cli;resolution:=optional;version=""[1.2,2)"",\
     org.apache.jute;resolution:=optional,\
     org.apache.yetus.audience;resolution:=optional,\
     org.apache.zookeeper;resolution:=optional,\
     org.apache.zookeeper.admin;resolution:=optional,\
     org.apache.zookeeper.cli;resolution:=optional,\
     org.apache.zookeeper.client;resolution:=optional,\
     org.apache.zookeeper.common;resolution:=optional,\
     org.apache.zookeeper.data;resolution:=optional,\
     org.apache.zookeeper.jmx;resolution:=optional,\
     org.apache.zookeeper.proto;resolution:=optional,\
     org.apache.zookeeper.server;resolution:=optional,\
     org.apache.zookeeper.server.admin;resolution:=optional,\
     org.apache.zookeeper.server.auth;resolution:=optional,\
     org.apache.zookeeper.server.command;resolution:=optional,\
     org.apache.zookeeper.server.persistence;resolution:=optional,\
     org.apache.zookeeper.server.quorum;resolution:=optional,\
     org.apache.zookeeper.server.quorum.auth;resolution:=optional,\
     org.apache.zookeeper.server.quorum.flexible;resolution:=optional,\
     org.apache.zookeeper.server.util;resolution:=optional,\
     org.apache.zookeeper.txn;resolution:=optional,\
     org.apache.zookeeper.util;resolution:=optional,\
     org.apache.zookeeper.version;resolution:=optional,\
     org.eclipse.jetty.security;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.server;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.servlet;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.util.security;resolution:=optional;version=""[9.4,10)"",\
     org.osgi.framework;resolution:=optional,\
     org.osgi.util.tracker;resolution:=optional
   Export-Package: \
     org.apache.zookeeper;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.auth.login,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.cli,org.apache.zookeeper.client,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.proto,org.apache.zookeeper.version,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.client,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.cli;uses:=""org.apache.commons.cli,org.apache.zookeeper,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.client;uses:=""javax.security.auth.login,javax.security.sasl,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.common;uses:=""io.netty.channel,io.netty.channel.socket,io.netty.handler.ssl,javax.net.ssl,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.data;uses:=""org.apache.jute,org.apache.yetus.audience"";version=""3.5.9"",\
     org.apache.zookeeper.jmx;uses:=""javax.management"";version=""3.5.9"",\
     org.apache.zookeeper.proto;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.server;uses:=""javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.proto,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.auth,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.auth;uses:=""javax.net.ssl,javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.command;uses:=""org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.persistence;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.server,org.apache.zookeeper.txn"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum;uses:=""javax.net.ssl,javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.server,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum.auth,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.auth;uses:=""javax.security.auth.callback,javax.security.auth.login,javax.security.sasl,org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.flexible;uses:=""org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.util;uses:=""org.apache.jute,org.apache.zookeeper.server,org.apache.zookeeper.server.quorum,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.txn;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.util;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.sasl,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.version;version=""3.5.9"",\
     org.apache.zookeeper.version.util;version=""3.5.9""
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/21 16:02;githubbot;600","bigmarvin edited a comment on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-873100058


   Yes you are right, @ctubbsii, that it's also feasible to instruct jar plugin to plant these entries. That's the exact way how ant script does this job. However, I'd like to justify a little more around my preference for this change over the alternative you mentioned. I've tidied the header `Import-Package` and `Export-Package` to illustrate the justification below.
   
   The change of packaging from jar to bundle and the replacement of jar plugin with bundle plugin **only** modify the manifest, which makes such change very safe. This change would add some extra headers/entries that are not consumed in non-OSGi runtime, so the only cost would be some increment in size of delivered artifact. One step further, all artifacts of packaging jar can be turned into bundles safely, while I assume not every project has such requirement until it's widely adopted.
   
   The primary job of bundle plugin would be working out the **topology** of **versioned** packages, which is barely possible to mimic manually. The following parts require some knowledge in OSGi while I'll try to make it straightforward.
   
   As you can find in the `Export-Package`, if some client wants to use some classes in some zookeeper package (or formally some client bundle imports some zookeeper package) it must also import some other packages before the zookeeper classes can work or even just be loaded. This **topology** of dependency resides in the code base, so ideally those headers planted manually must be revisited for every code change. It would be too expensive if possible.
   
   Besides, all packages this artifact/bundle requires and provides are **versioned** if possible. The versions are extracted from the dependency tree at build time, so ideally all these versions must be revisited for every change in version or dependency tree. Putting these 2 ideal parts together, I would say it's practically impossible to manually maintain these headers/entries. Any such attempt would come up with some values that may work for some scenarios but never for all, and why bother given there's some automated way in place?
   
   I can prepare another change using jar plugin to plant headers/entries. At least, either solution works for ZOOKEEPER-4331. However, I'd like to double check how determined you maintainers are before I drop this preferred proposal. Looking forward to your input.
   
   ```
   Import-Package: \
     javax.management;resolution:=optional,\
     javax.security.auth.callback,\
     javax.security.auth.login,\
     javax.security.sasl,\
     org.slf4j;version=""[1.7,2)"",\
     io.netty.buffer;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.group;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket.nio;resolution:=optional;version=""[4.1,5)"",\
     org.ietf.jgss,\
     com.fasterxml.jackson.core;resolution:=optional;version=""[2.10,3)"",\
     com.fasterxml.jackson.databind;resolution:=optional;version=""[2.10,3)"",\
     io.netty.bootstrap;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.epoll;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.nio;resolution:=optional;version=""[4.1,5)"",\
     io.netty.channel.socket;resolution:=optional;version=""[4.1,5)"",\
     io.netty.handler.ssl;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util;resolution:=optional;version=""[4.1,5)"",\
     io.netty.util.concurrent;resolution:=optional;version=""[4.1,5)"",\
     javax.crypto;resolution:=optional,\
     javax.crypto.spec;resolution:=optional,\
     javax.naming;resolution:=optional,\
     javax.naming.directory;resolution:=optional,\
     javax.naming.ldap;resolution:=optional,\
     javax.net.ssl;resolution:=optional,\
     javax.security.auth;resolution:=optional,\
     javax.security.auth.kerberos;resolution:=optional,\
     javax.security.auth.spi;resolution:=optional,\
     javax.security.auth.x500;resolution:=optional,\
     javax.servlet;resolution:=optional;version=""[3.1,4)"",\
     javax.servlet.http;resolution:=optional;version=""[3.1,4)"",\
     jline.console.completer;resolution:=optional;version=""[2.14,3)"",\
     org.apache.commons.cli;resolution:=optional;version=""[1.2,2)"",\
     org.apache.jute;resolution:=optional,\
     org.apache.yetus.audience;resolution:=optional,\
     org.apache.zookeeper;resolution:=optional,\
     org.apache.zookeeper.admin;resolution:=optional,\
     org.apache.zookeeper.cli;resolution:=optional,\
     org.apache.zookeeper.client;resolution:=optional,\
     org.apache.zookeeper.common;resolution:=optional,\
     org.apache.zookeeper.data;resolution:=optional,\
     org.apache.zookeeper.jmx;resolution:=optional,\
     org.apache.zookeeper.proto;resolution:=optional,\
     org.apache.zookeeper.server;resolution:=optional,\
     org.apache.zookeeper.server.admin;resolution:=optional,\
     org.apache.zookeeper.server.auth;resolution:=optional,\
     org.apache.zookeeper.server.command;resolution:=optional,\
     org.apache.zookeeper.server.persistence;resolution:=optional,\
     org.apache.zookeeper.server.quorum;resolution:=optional,\
     org.apache.zookeeper.server.quorum.auth;resolution:=optional,\
     org.apache.zookeeper.server.quorum.flexible;resolution:=optional,\
     org.apache.zookeeper.server.util;resolution:=optional,\
     org.apache.zookeeper.txn;resolution:=optional,\
     org.apache.zookeeper.util;resolution:=optional,\
     org.apache.zookeeper.version;resolution:=optional,\
     org.eclipse.jetty.security;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.server;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.servlet;resolution:=optional;version=""[9.4,10)"",\
     org.eclipse.jetty.util.security;resolution:=optional;version=""[9.4,10)"",\
     org.osgi.framework;resolution:=optional,\
     org.osgi.util.tracker;resolution:=optional
   Export-Package: \
     org.apache.zookeeper;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.auth.login,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.cli,org.apache.zookeeper.client,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.proto,org.apache.zookeeper.version,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.client,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.cli;uses:=""org.apache.commons.cli,org.apache.zookeeper,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.client;uses:=""javax.security.auth.login,javax.security.sasl,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.common;uses:=""io.netty.channel,io.netty.channel.socket,io.netty.handler.ssl,javax.net.ssl,org.apache.zookeeper.server.quorum,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.data;uses:=""org.apache.jute,org.apache.yetus.audience"";version=""3.5.9"",\
     org.apache.zookeeper.jmx;uses:=""javax.management"";version=""3.5.9"",\
     org.apache.zookeeper.proto;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.server;uses:=""javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.proto,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.auth,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.admin;uses:=""org.apache.yetus.audience,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.auth;uses:=""javax.net.ssl,javax.security.auth,javax.security.auth.callback,javax.security.auth.login,javax.security.auth.spi,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.command;uses:=""org.apache.zookeeper.server"";version=""3.5.9"",\
     org.apache.zookeeper.server.persistence;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.server,org.apache.zookeeper.txn"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum;uses:=""javax.net.ssl,javax.security.sasl,org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper,org.apache.zookeeper.common,org.apache.zookeeper.data,org.apache.zookeeper.jmx,org.apache.zookeeper.server,org.apache.zookeeper.server.admin,org.apache.zookeeper.server.persistence,org.apache.zookeeper.server.quorum.auth,org.apache.zookeeper.server.quorum.flexible,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.auth;uses:=""javax.security.auth.callback,javax.security.auth.login,javax.security.sasl,org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.quorum.flexible;uses:=""org.apache.zookeeper.server.quorum"";version=""3.5.9"",\
     org.apache.zookeeper.server.util;uses:=""org.apache.jute,org.apache.zookeeper.server,org.apache.zookeeper.server.quorum,org.apache.zookeeper.txn,org.slf4j"";version=""3.5.9"",\
     org.apache.zookeeper.txn;uses:=""org.apache.jute,org.apache.yetus.audience,org.apache.zookeeper.data"";version=""3.5.9"",\
     org.apache.zookeeper.util;uses:=""javax.security.auth,javax.security.auth.callback,javax.security.sasl,org.slf4j"";version=""3.5.9"",org.apache.zookeeper.version;version=""3.5.9"",\
     org.apache.zookeeper.version.util;version=""3.5.9""
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jul/21 16:05;githubbot;600","bigmarvin opened a new pull request #1722:
URL: https://github.com/apache/zookeeper/pull/1722


   As an alternative to https://github.com/apache/zookeeper/pull/1720, this change employs bundle plugin to build another artifact of classifier ""osgi"".
   
   The advantage would be bundle plugin remains employed to maintain the topology of versioned packages, and the original artifact without classifier is left untouched.
   
   The disadvantage would be we've one more artifact delivered in this project.
   
   ```
   $ ls zookeeper-server/target/ | grep jar$
   zookeeper-3.5.9.jar
   zookeeper-3.5.9-javadoc.jar
   zookeeper-3.5.9-osgi.jar
   zookeeper-3.5.9-sources.jar
   zookeeper-3.5.9-tests.jar
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jul/21 07:55;githubbot;600","bigmarvin opened a new pull request #1723:
URL: https://github.com/apache/zookeeper/pull/1723


   As an alternative to https://github.com/apache/zookeeper/pull/1720, this change plants manifest entries required by osgi.
   
   The advantage would be the least modification to the code base in all 3 approaches.
   
   The disadvantage would be manual maintenance of these entries, which is too expensive and thus practically impossible.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jul/21 08:18;githubbot;600","bigmarvin commented on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-876236216


   To push this forward, I've raised the following PRs with alternatives to this change. I still prefer this approach personally while I assume all of them can address ZOOKEEPER-4331.
   
   Please take a look and let me know if something. Again, I'm looking for a fix to 3.5, 3.6 and 3.7, so please let me know if any further PR is required for this to happen.
   
   https://github.com/apache/zookeeper/pull/1722
   https://github.com/apache/zookeeper/pull/1723


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jul/21 08:20;githubbot;600","eolivelli commented on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-876302246


   Thank you very much for bringing this forward. OSGI compliance is very important
   
   I believe that you are targeting the wrong branch.
   branch-3.5.9 is a temporary branch (that we did not haved nuked) used to cut 3.5.9.
   
   you could target branch-3.5, that is the main release branch for the 3.5 release line.
   
   that said....ZooKeeper 3.5 is now very old, we already released 3.6.x and 3.7.x and we are going to cut 3.8.x
   
   I suggest to work on master branch, we could port the changes to other old branches, but **personally** (this is not an official position of the project) I do not expect more releases from ZK 3.5 apart from security bug fixes


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jul/21 09:55;githubbot;600","bigmarvin opened a new pull request #1726:
URL: https://github.com/apache/zookeeper/pull/1726


   Following up https://github.com/apache/zookeeper/pull/1720, I'm applying the change on master instead of 3.5.x as advised.
   
   In addition to the original change, pom of zookeeper-jute is also updated because it provides some packages required by zookeeper-server. In this way, it must serve as a bundle directly before zookeeper-server can serve as a bundle.
   
   This remans my preferred approach while I'm preparing the alternatives on master. I'm looking for a fix to 3.6, 3.7 and 3.8, so please let me know if any further PR is required for this to happen.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 09:04;githubbot;600","bigmarvin commented on pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720#issuecomment-878105335


   Thanks for the instruction, @eolivelli. I've ""rebased"" the change to master in https://github.com/apache/zookeeper/pull/1726. Let's continue the review there.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 09:06;githubbot;600","bigmarvin closed pull request #1720:
URL: https://github.com/apache/zookeeper/pull/1720


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 09:06;githubbot;600","bigmarvin commented on pull request #1728:
URL: https://github.com/apache/zookeeper/pull/1728#issuecomment-878133432


   May I somehow retrigger the failed check somehow? I don't see it relate to the change in any way.
   
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1728/1/pipeline


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 19:48;githubbot;600","bigmarvin opened a new pull request #1728:
URL: https://github.com/apache/zookeeper/pull/1728


   Following up https://github.com/apache/zookeeper/pull/1723, I'm applying the change on master instead of 3.5.x as advised.
   
   As an alternative to https://github.com/apache/zookeeper/pull/1726, this change plants manifest entries required by osgi.
   
   The advantage would be the least modification to the code base in all 3 approaches.
   
   The disadvantage would be manual maintenance of these entries, which is too expensive and thus practically impossible.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 19:51;githubbot;600","bigmarvin closed pull request #1723:
URL: https://github.com/apache/zookeeper/pull/1723


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 19:54;githubbot;600","bigmarvin edited a comment on pull request #1728:
URL: https://github.com/apache/zookeeper/pull/1728#issuecomment-878133432


   May I retrigger the failed check somehow? I don't see it relate to the change in any way.
   
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1728/1/pipeline


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 19:59;githubbot;600","bigmarvin commented on pull request #1723:
URL: https://github.com/apache/zookeeper/pull/1723#issuecomment-878127515


   Let's continue the review in https://github.com/apache/zookeeper/pull/1728 as advised.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 20:00;githubbot;600","bigmarvin commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-881315840


   > this is great stuff!
   > 
   > is it possible to add some kind of integration tests (an additional Maven module I guess) that try to load the library as an OSGI bundle.
   > 
   > this way we will be sure that we are not breaking it in the future.
   
   After few days' struggling, I'm afraid I won't add integration tests for this change. There is some compliance testing provided by OSGi official, so the problem would be how to wrap that BND pieces into some integration case.
   
   http://felix.apache.org/documentation/development/using-the-osgi-compliance-tests.html
   
   I didn't really find some programmatically appropriate way to make it happen, except for forking another process to run CT in the case. Given this new artifact is packed by some new employed plugin independently, I believe it won't disappear magically if nobody touches that plugin. If somebody does, on the other hand, I don't think a case can stop him/her.
   
   Does this explanation sound good enough for you, @eolivelli? It's some good point that testing should be part of every change, while I wonder if we can take the risk for this particular one. Thanks!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jul/21 09:38;githubbot;600","bigmarvin closed pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jul/21 04:58;githubbot;600","bigmarvin opened a new pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727


   Following up https://github.com/apache/zookeeper/pull/1722, I'm applying the change on master instead of 3.5.x as advised.
   
   As an alternative to https://github.com/apache/zookeeper/pull/1726, this change employs bundle plugin to build another artifact of classifier ""osgi"".
   
   The advantage would be bundle plugin remains employed to maintain the topology of versioned packages, and the original artifact without classifier is left untouched.
   
   The disadvantage would be we've one more artifact delivered in this project.
   
   ```
   $ ls zookeeper-server/target/ | grep jar$
   zookeeper-3.5.9.jar
   zookeeper-3.5.9-javadoc.jar
   zookeeper-3.5.9-osgi.jar
   zookeeper-3.5.9-sources.jar
   zookeeper-3.5.9-tests.jar
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jul/21 04:58;githubbot;600","bigmarvin commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-886351323


   May I ask if anything else I can help with for this PR to merge? I'm not very familiar with the process in this repo while it's been a while after last update, so please feel free to let me know.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/21 03:53;githubbot;600","bigmarvin commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-891026269


   _Renewing the PR once more..._
   
   May I ask if anything else I can help with for this PR to merge? I'm not very familiar with the process in this repo while it's been a while after last update, so please feel free to let me know.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 13:26;githubbot;600","bigmarvin edited a comment on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-891026269


   _Hoping everything is well and renewing the PR again_
   
   May I ask if anything else I can help with for this PR to merge? I'm not very familiar with the process in this repo while it's been a while after last update, so please feel free to let me know.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 13:27;githubbot;600","eolivelli commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-891334664


   We need a second reviewer ('committer' in ASF terms) to sponsor this patch.
   
   Tagging @nkalmar @anmolnar @maoling @ztzg @breed @hanm 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 21:09;githubbot;600","eolivelli commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-891334859


   I am fine with committing this patch in this form


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/21 21:09;githubbot;600","asfgit closed pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:38;githubbot;600","nkalmar commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-891700219


   Merged to master, 3.7, 3.6 and 3.5 branch. Thank you @bigmarvin 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:44;githubbot;600","nkalmar commented on pull request #1726:
URL: https://github.com/apache/zookeeper/pull/1726#issuecomment-891704792


   I believe this is a duplicate of https://github.com/apache/zookeeper/pull/1727 
   Closing. @bigmarvin , please ping me or @eolivelli if I got something wrong here. 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:51;githubbot;600","nkalmar closed pull request #1726:
URL: https://github.com/apache/zookeeper/pull/1726


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:51;githubbot;600","nkalmar edited a comment on pull request #1726:
URL: https://github.com/apache/zookeeper/pull/1726#issuecomment-891704792


   I believe this is a duplicate of https://github.com/apache/zookeeper/pull/1727 
   Closing. @bigmarvin , please ping me or @eolivelli if I got something wrong here. 
   Oh, sorry, not a duplicate but the other one was creating another artifact for osgi, which is the one we wanted. So this is no longer needed I believe.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:53;githubbot;600","nkalmar commented on pull request #1728:
URL: https://github.com/apache/zookeeper/pull/1728#issuecomment-891707606


   Also closing this one in favor of https://github.com/apache/zookeeper/pull/1727


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:55;githubbot;600","nkalmar closed pull request #1728:
URL: https://github.com/apache/zookeeper/pull/1728


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 09:55;githubbot;600","bigmarvin commented on pull request #1727:
URL: https://github.com/apache/zookeeper/pull/1727#issuecomment-891809771


   Thank you @eolivelli and @nkalmar! Github should have provided more emoji XD


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/21 12:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,21600,,,0,21600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-06-29 08:15:33.0,,,,,,,,,,"0|z0seig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"IllegalArgumentException when use ZkUtil::listSubTreeBFS to list ""/""",ZOOKEEPER-4325,13385346,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,justcoding,justcoding,23/Jun/21 07:48,18/Jul/21 07:19,13/Jul/23 09:08,18/Jul/21 07:19,3.6.2,,,,,,,,,3.8.0,,,,,server,,,,0,pull-request-available,,"[ZkUtil::listSubTreeBFS|https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java]

Assume zk has these nodes: /a_test/a, /b_test/b.

When use this method to list ""/"", according to BFS logic, the BFS queue would be added node like: ""//a_test"", then getChildren by this path, the next exception occurs:
{code:java}
java.lang.IllegalArgumentException: Invalid path string ""//a_test"" caused by empty node name specified @1
{code}
 

 Solutions:
{code:java}
public static List<String> listSubTreeBFS(
        ZooKeeper zk,
        final String pathRoot) throws KeeperException, InterruptedException {
    Queue<String> queue = new ArrayDeque<>();
    List<String> tree = new ArrayList<>();
    queue.add(pathRoot);
    tree.add(pathRoot);
    while (!queue.isEmpty()) {
        String node = queue.poll();
        List<String> children = zk.getChildren(node, false);
        for (final String child : children) {
            // Fix ""//some_path"" bugs when list ""/""                
            final String childPath = (node.equals(""/"") ? """" : node) + ""/"" + child;
            queue.add(childPath);
            tree.add(childPath);
        }
    }
    return tree;
}
{code}",,justcoding,,,,,,,,,,,,,,,,,,,"autumind opened a new pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   Fix bug [ZOOKEEPER-4325](https://issues.apache.org/jira/browse/ZOOKEEPER-4325)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/21 08:15;githubbot;600","maoling commented on pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717#issuecomment-867666286


   @autumind Great catch
   - please add unit tests to cover this change
   - push to `master `firstly, other than `branch-3.6`


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 14:07;githubbot;600","autumind closed pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 00:25;githubbot;600","autumind opened a new pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   Fix bug [ZOOKEEPER-4325](https://issues.apache.org/jira/browse/ZOOKEEPER-4325)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:01;githubbot;600","autumind closed pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:02;githubbot;600","autumind commented on pull request #1717:
URL: https://github.com/apache/zookeeper/pull/1717#issuecomment-868900481


   > @autumind Great catch
   > 
   > * please add unit tests to cover this change
   > * push to `master `firstly, other than `branch-3.6`
   
   Got it. I'll add unit tests and pr to master


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:04;githubbot;600","autumind opened a new pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/21 01:46;githubbot;600","maoling commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r659692294



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Here is a useless change?

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
##########
@@ -85,4 +90,13 @@ public void testUnreadableFileInput() throws Exception {
         assertEquals(expectedMessage, error);
     }
 
+    @Test
+    public void testListRootPathSuccess() throws IOException, InterruptedException, KeeperException {
+        TestableZooKeeper zk = createClient();
+        zk.setData(""/"", ""some"".getBytes(), -1);
+        zk.create(""/a"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.create(""/a/b"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        List<String> list = ZKUtil.listSubTreeBFS(zk, ""/"");
+        assertIterableEquals(list, Arrays.asList(""/a"", ""/a/b""));
+    }

Review comment:
       the unit case is not sufficient. e.g.,:
   - we should assert the size/content of the list. 
   - we also need to test(`listSubTreeBFS`) the path: `/a,`  `/a/b`,  other than only` /`




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/21 11:09;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660210786



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Seems it's my IDE's auto-format. I'will revert it.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:11;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660210921



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
##########
@@ -85,4 +90,13 @@ public void testUnreadableFileInput() throws Exception {
         assertEquals(expectedMessage, error);
     }
 
+    @Test
+    public void testListRootPathSuccess() throws IOException, InterruptedException, KeeperException {
+        TestableZooKeeper zk = createClient();
+        zk.setData(""/"", ""some"".getBytes(), -1);
+        zk.create(""/a"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.create(""/a/b"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        List<String> list = ZKUtil.listSubTreeBFS(zk, ""/"");
+        assertIterableEquals(list, Arrays.asList(""/a"", ""/a/b""));
+    }

Review comment:
       OK, I'll fix it.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:12;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660212428



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compare this line and it's upper with master, no difference found.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:17;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660212428



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compared this line and it's upper with master, no difference found.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 01:18;githubbot;600","autumind commented on a change in pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#discussion_r660210786



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Seems it's my IDE's auto-format. I'will revert it.

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
##########
@@ -85,4 +90,13 @@ public void testUnreadableFileInput() throws Exception {
         assertEquals(expectedMessage, error);
     }
 
+    @Test
+    public void testListRootPathSuccess() throws IOException, InterruptedException, KeeperException {
+        TestableZooKeeper zk = createClient();
+        zk.setData(""/"", ""some"".getBytes(), -1);
+        zk.create(""/a"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.create(""/a/b"", ""some"".getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        List<String> list = ZKUtil.listSubTreeBFS(zk, ""/"");
+        assertIterableEquals(list, Arrays.asList(""/a"", ""/a/b""));
+    }

Review comment:
       OK, I'll fix it.

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compare this line and it's upper with master, no difference found.

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZKUtil.java
##########
@@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
         }
         return sb.toString();
     }
-}
\ No newline at end of file
+}

Review comment:
       Can't figure it out, I've compared this line and it's upper with master, no difference found.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jun/21 13:46;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-874456746


   @autumind 
   You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   
   ```
   git  diff 70f70d821c2
   
   @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
            }
            return sb.toString();
        }
   -}
   \ No newline at end of file
   +}
   diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   index 1111c2a23..3ad1ed94f 100644
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jul/21 04:49;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-874456746


   @autumind 
   You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   
   ```
   git  diff 70f70d821c2
   
   @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
            }
            return sb.toString();
        }
   -}
   \ No newline at end of file
   +}
   diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   index 1111c2a23..3ad1ed94f 100644
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jul/21 11:21;githubbot;600","autumind commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-875409050


   > empty line at the end of the file
   
   
   > @autumind
   > You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   > 
   > ```
   > git  diff 70f70d821c2
   > 
   > @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
   >          }
   >          return sb.toString();
   >      }
   > -}
   > \ No newline at end of file
   > +}
   > diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   > index 1111c2a23..3ad1ed94f 100644
   > ```
   What a silly mistake, I've revert it.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/21 08:37;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-875409050


   > empty line at the end of the file
   
   
   > @autumind
   > You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   > 
   > ```
   > git  diff 70f70d821c2
   > 
   > @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
   >          }
   >          return sb.toString();
   >      }
   > -}
   > \ No newline at end of file
   > +}
   > diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   > index 1111c2a23..3ad1ed94f 100644
   > ```
   What a silly mistake, I've reverted it.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/21 08:38;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-875409050


   > @autumind
   > You really have an empty line at the end of the file: `ZKUtil.java`. After you revert it, I will merge it asap at this weekend(07-11).
   > 
   > ```
   > git  diff 70f70d821c2
   > 
   > @@ -290,4 +291,4 @@ public static String aclToString(List<ACL> acls) {
   >          }
   >          return sb.toString();
   >      }
   > -}
   > \ No newline at end of file
   > +}
   > diff --git a/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java b/zookeeper-server/src/test/java/org/apache/zookeeper/ZKUtilTest.java
   > index 1111c2a23..3ad1ed94f 100644
   > ```
   What a silly mistake, I've reverted it.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jul/21 08:39;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877777467


   @autumind  You had reverted the empty line at the end of the file: `ZKUtil.java` ???


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/21 10:40;githubbot;600","autumind commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877900266


   > @autumind You had reverted the empty line at the end of the file: `ZKUtil.java` ???
   
   Actually, I removed the empty line, but I have no idea why this commit [
   Remove empty line at the end of the file](https://github.com/apache/zookeeper/pull/1719/commits/60e4ba79df83baec82a8158958a0168fa8cc0206) has no diffs in github view.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 01:12;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877900266


   > @autumind You had reverted the empty line at the end of the file: `ZKUtil.java` ???
   
   Actually, I removed the empty line, but I have no idea why this commit [
   Remove empty line at the end of the file](https://github.com/apache/zookeeper/pull/1719/commits/60e4ba79df83baec82a8158958a0168fa8cc0206) has no diffs in github view.  Besides, `ZKUtil.java` comes one more line cause I add a line of comment in my patch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 01:15;githubbot;600","autumind edited a comment on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877900266


   > @autumind You had reverted the empty line at the end of the file: `ZKUtil.java` ???
   
   Actually, I removed the empty line, but I have no idea why this commit [
   Remove empty line at the end of the file](https://github.com/apache/zookeeper/pull/1719/commits/60e4ba79df83baec82a8158958a0168fa8cc0206) has no diffs in github view.  Besides, `ZKUtil.java` comes one more line cause I added a line of comment in my patch.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 01:16;githubbot;600","maoling commented on pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719#issuecomment-877968660


   @autumind 
   - What IDE do you use? It must be not the problem of Github.
   - `vim` doesn't work, please use other tool like `sublime`, `IDEA`, or `VS code`
   - Important things are to be repeated for 3 times:
        use `git diff `(git  diff 70f70d821c2) to observe the changes before you submit.
        use `git diff `(git  diff 70f70d821c2) to observe the changes before you submit.
        use `git diff `(git  diff 70f70d821c2) to observe the changes before you submit.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 04:51;githubbot;600","autumind closed pull request #1719:
URL: https://github.com/apache/zookeeper/pull/1719


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/21 06:22;githubbot;600","autumind opened a new pull request #1729:
URL: https://github.com/apache/zookeeper/pull/1729


   Fix bug [ZOOKEEPER-4325](https://issues.apache.org/jira/browse/ZOOKEEPER-4325), reopen pr from [#1719](https://github.com/apache/zookeeper/pull/1719)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jul/21 12:45;githubbot;600","asfgit closed pull request #1729:
URL: https://github.com/apache/zookeeper/pull/1729


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jul/21 07:18;githubbot;600","maoling commented on pull request #1729:
URL: https://github.com/apache/zookeeper/pull/1729#issuecomment-882012227


   @autumind   Thanks for your contribution.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jul/21 07:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-06-23 07:48:40.0,,,,,,,,,,"0|z0s7ns:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Leader election fails due to SocketTimeoutException in QuorumCnxManager,ZOOKEEPER-4316,13383388,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,asubramanianr,asubramanianr,11/Jun/21 10:49,01/Jul/21 10:39,13/Jul/23 09:08,01/Jul/21 10:39,3.4.12,3.5.7,,,,,,,,,,,,,quorum,,,,0,,,"I have a 3 node zookeeper cluster deployed as a stack using docker swarm. 
Deploying this stack causes zookeeper to fail with a SocketTimeoutException during leader election with the following log



 
{noformat}
2021-06-11 03:59:34,607 [myid:2] - WARN  [QuorumPeer[myid=2]/0.0.0.0:2181:QuorumCnxManager@584] - Cannot open channel to 3 at election address zoo3/10.0.11.5:3888
java.net.SocketTimeoutException: connect timed out
        at java.net.PlainSocketImpl.socketConnect(Native Method)
       at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:558)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:610)
        at org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:838)
        at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:957){noformat}
The docker overlay network itself appears to be sound. A netstat on one of the nodes outputs
{noformat}
bash-4.4# netstat -tuln
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State
tcp        0      0 0.0.0.0:2181            0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:3888            0.0.0.0:*               LISTEN
tcp        0      0 0.0.0.0:42941           0.0.0.0:*               LISTEN
tcp        0      0 127.0.0.11:35453        0.0.0.0:*               LISTEN
udp        0      0 127.0.0.11:55009        0.0.0.0:*{noformat}
showing the 3888 port is open. but a tcpdump only shows send and re-transmissions and there are no responses in port 3888.
Suspecting the issue maybe due to a short timeout or small number of retries, I have tried increasing the cnxTimeout to 300000 and electionPortBindRetry to 0 (infinite), but even after 13 hrs of continuous running and retrying election the same error persists

I have attached the stack.yml, the custom docker-entrypoint.sh that we override on top of the official container to enable running from a root host user, and the zoo.cfg file from inside the container.

Any help in identifying the underlying issue or mis-configuration, or any configuration parameter that may help solve the issue is deeply appreciated.

 ","cat /etc/os-release
NAME=""SLES""
VERSION=""12-SP5""
VERSION_ID=""12.5""
PRETTY_NAME=""SUSE Linux Enterprise Server 12 SP5""
ID=""sles""
ANSI_COLOR=""0;32""
CPE_NAME=""cpe:/o:suse:sles:12:sp5""

docker version
Client:
 Version: 20.10.6-ce
 API version: 1.41
 Go version: go1.13.15
 Git commit: 8728dd246c3a
 Built: Tue Apr 27 09:45:18 2021
 OS/Arch: linux/amd64
 Context: default
 Experimental: true

Server:
 Engine:
 Version: 20.10.6-ce
 API version: 1.41 (minimum version 1.12)
 Go version: go1.13.15
 Git commit: 8728dd246c3a
 Built: Fri Apr 9 22:06:18 2021
 OS/Arch: linux/amd64
 Experimental: false
 containerd:
 Version: v1.4.4
 GitCommit: 05f951a3781f4f2c1911b05e61c160e9c30eaa8e
 runc:
 Version: 1.0.0-rc93
 GitCommit: 12644e614e25b05da6fd08a38ffa0cfe1903fdec
 docker-init:
 Version: 0.1.3_catatonit
 GitCommit:

zookeeper version - 3.5.7",asubramanianr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Jun/21 10:39;asubramanianr;docker-entrypoint.sh;https://issues.apache.org/jira/secure/attachment/13026736/docker-entrypoint.sh","11/Jun/21 10:38;asubramanianr;zoo.cfg;https://issues.apache.org/jira/secure/attachment/13026738/zoo.cfg","11/Jun/21 10:38;asubramanianr;zoo_3.5.7.yml;https://issues.apache.org/jira/secure/attachment/13026737/zoo_3.5.7.yml",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jul 01 10:39:27 UTC 2021,,,,,,,,,,"0|z0rvl4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jul/21 10:39;asubramanianr;The issue was due to the hypervisor being used in my environment blocking the vxlan port being used by docker...

using --data-path-dir option to change the default port while intializing docker swarm workedaround the bug for now....;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fsync errors are ignored in AtomicFileWritingIdiom,ZOOKEEPER-4311,13381685,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,dimas.kovas,dimas.kovas,02/Jun/21 11:57,28/Jun/21 11:36,13/Jul/23 09:08,21/Jun/21 11:16,,,,,,,,,,3.8.0,,,,,leaderElection,server,,,0,pull-request-available,,"Class AtomicFileOutputStream has a non-trivial logic in its 'close' method. ([code|https://github.com/apache/zookeeper/blob/5c102298f8a160ea996be7b6d6f95189d4ff2f41/zookeeper-server/src/main/java/org/apache/zookeeper/common/AtomicFileOutputStream.java#L76-L106]).
 It ensures that data is persistently stored on the disk via 'flush' and 'fsync' to .tmp file, then tries to rename the file. In case of any errors, .tmp file is deleted and exception is thrown.

AtomicFileWritingIdiom, which is based on AtomicFileOutputStream, only calls 'flush' explicitly. 'close' method is called via IOUtils.closeStream ([code|https://github.com/apache/zookeeper/blob/5c102298f8a160ea996be7b6d6f95189d4ff2f41/zookeeper-server/src/main/java/org/apache/zookeeper/common/AtomicFileWritingIdiom.java#L87]).
But docs says that IOUtils.closeStream ignores IOException, which can happen during fsync. ([docs|https://hadoop.apache.org/docs/r2.7.3/api/org/apache/hadoop/io/IOUtils.html#closeStream(java.io.Closeable)]). As a result, in case of fsync errors, .tmp file is deleted, main file is not updated, but zookeeper ignores an exception and assumes that everything is ok.

AtomicFileWritingIdiom is used in leader election to store 'currentEpoch' and 'acceptedEpoch' files. This bug theoreticly can lead to electing two leaders in one epoch in case of disk failures.

 ",,dimas.kovas,eolivelli,,,,,,,,,,,,,,,,,,"DimasKovas opened a new pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 11:58;githubbot;600","DimasKovas commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-856020586


   Broken tests seem to be unrelated. Tried to rebase, but it didn't help. Is restarting the best option to pass the tests?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/21 15:12;githubbot;600","maoling commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-858359160


   @DimasKovas 
   - Looks reasonable. Some codes are copied from `hadoop`. I observed some codes uses the same way as you did.
   [1]https://github.com/apache/hadoop/blob/03cfc852791c14fad39db4e5b14104a276c08e59/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/PersistentLongFile.java#L78
   [2]https://github.com/apache/hadoop/blob/03cfc852791c14fad39db4e5b14104a276c08e59/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/MD5FileUtils.java#157
   
   - Do you think the following hadoop snippet still has the same issue as zk?
   [3]https://github.com/apache/hadoop/blob/03cfc852791c14fad39db4e5b14104a276c08e59/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#L1088


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/21 06:47;githubbot;600","DimasKovas commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-858447324


   > * Do you think the following hadoop snippet still has the same issue as zk?
   >   [3]https://github.com/apache/hadoop/blob/03cfc852791c14fad39db4e5b14104a276c08e59/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#L1088
   
   Yes, it does. The code looks absolutely the same, and the usage of IOUtils.closeStream in case of ""success"" silently hides IO-errors.
   
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/21 09:02;githubbot;600","DimasKovas commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-859629894


   I reproduced the scenario in which this bug leads to broken consistency guarantees after fsync failure (using filesystem emulator to simulate failures).
   Script, description and possible output are available in this repository: https://github.com/DimasKovas/zookeeper-4311


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/21 07:40;githubbot;600","maoling commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-860011043


   @DimasKovas
   Great work.  if no other concerns, I'll merge it at next weekend(06-19)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/21 07:58;githubbot;600","maoling closed pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/21 09:26;githubbot;600","DimasKovas opened a new pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/21 09:27;githubbot;600","asfgit closed pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/21 11:15;githubbot;600","maoling commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-865536292


   @DimasKovas 
   
   - Thanks for your contribution. I really love this solid work. The change is minor, the work is great！
   
   - `CuttleFS` is a great tool to inject the `fsync` fault and I also read its paper: [Can Applications Recover from fsync Failures?] (https://www.usenix.org/system/files/atc20-rebello.pdf) which's great reading.
   
   - I also want to reproduce this issue with your approach, I have installed `docker` and `CuttleFS` successfully, but I cannot build `zk_cmd` with `g++ -Iinclude client.cpp  libzookeeper.a libhashtable.a -o zk_cmd -pthread -DTHREADED`. I cannot find the `libzookeeper.a`, I install the official zookeeper client c-binding, what I have is 
   `libzookeeper_mt.a` or `libzookeeper_st.a`. Could you please add more details about how to compile and build the `zk_cmd`?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/21 04:44;githubbot;600","asfgit closed pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/21 07:44;githubbot;600","maoling commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-865536292


   @DimasKovas 
   
   - Thanks for your contribution. I really love this solid work. The change is minor, the work is great！
   
   - `CuttleFS` is a great tool to inject the `fsync` fault and I also read its paper: [Can Applications Recover from fsync Failures?] (https://www.usenix.org/system/files/atc20-rebello.pdf) which's great reading.
   
   - I also want to reproduce this issue with your approach, I have installed `docker` and `CuttleFS` successfully, but I cannot build `zk_cmd` with `g++ -Iinclude client.cpp  libzookeeper.a libhashtable.a -o zk_cmd -pthread -DTHREADED`. I cannot find the `libzookeeper.a`, I install the official zookeeper client c-binding, what I have is 
   `libzookeeper_mt.a` or `libzookeeper_st.a`. Could you please add more details about how to compile and build the `zk_cmd`?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/21 08:08;githubbot;600","DimasKovas commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-865913100


   @maoling
   Thanks.
   I had installed zookeeper client c-binding from the sources using cmake, that's why there are some differences in library name/include paths. The libzookeeper_mt.a is what you need. I updated client.cpp and README.md, so I hope there will not be such problems anymore. Anyway, if something is not working - feel free to ask me, I will try to help.
   Note that I compiled c-bindings with `--without-openssl --without-sasl` options, otherwise you need to add them to the linker too


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/21 11:45;githubbot;600","maoling commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-866519476


   @DimasKovas Forgive my poor `C `language. 
   - I follow your updated guideline and exec `g++ client.cpp -lzookeeper_mt -DTHREADED -pthread -o zk_cmd`. 
   and got:
   ```
   client.cpp:7:23: fatal error: zookeeper.h: No such file or directory
    #include <zookeeper.h>
   ```
   What or where is `zookeeper_mt`?
   - My `libzookeeper_mt` and `zookeeper.h` is at the following place:
   
   ```
   /usr/local/lib/libzookeeper_st.so.2
   /usr/local/lib/libzookeeper_mt.so.2
   /usr/local/lib/libzookeeper_mt.a
   /usr/local/lib/libzookeeper_mt.la
   /usr/local/lib/libzookeeper_mt.so
   /usr/local/lib/libzookeeper_st.so.2.0.0
   /usr/local/lib/libzookeeper_st.la
   /usr/local/lib/libzookeeper_st.so
   /usr/local/lib/libzookeeper_mt.so.2.0.0
   /usr/local/lib/libzookeeper_st.a
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/libzookeeper_mt.la
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/.libs/libzookeeper_mt.a
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/.libs/libzookeeper_mt.la
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/.libs/libzookeeper_st.la
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/.libs/libzookeeper_mt.lai
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/.libs/libzookeeper_st.a
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/.libs/libzookeeper_st.lai
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/libzookeeper_st.la
   ======================================
   usr/local/include/zookeeper/zookeeper.h
   /data/software/zookeeper/apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/include/zookeeper.h
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/21 04:50;githubbot;600","DimasKovas commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-866525294


   @maoling
   Yesterday I updated client.cpp too. The only difference is in this line, it should be `#include <zookeeper/zookeeper.h>`. Try to pull the repository again


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/21 05:06;githubbot;600","maoling commented on pull request #1706:
URL: https://github.com/apache/zookeeper/pull/1706#issuecomment-869610121


   @DimasKovas 
   
   - I still cannot compile the `zk_cmd`, I followed your guideline to install the `zookeeper client c-bindings `successfully(I don't observe anything wrong, `cli_mt 127.0.0.1:2181` to connect server successfully)
   
   ```
   g++ -std=c++11 client.cpp -lzookeeper_mt -DTHREADED -pthread -o zk_cmd
   ============
   /tmp/ccGKBzgy.o: In function `cmdCreate(_zhandle*, std::string const&, std::string const&)':
   client.cpp:(.text+0x355): undefined reference to `ZOO_PERSISTENT'
   collect2: error: ld returned 1 exit status
   ```
   - More context
   ```
   CentOS 7
   g++ --version
   g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
   Copyright (C) 2015 Free Software Foundation, Inc.
   ```


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/21 11:36;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 02 13:05:24 UTC 2021,,,,,,,,,,"0|z0rl34:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Jun/21 13:05;eolivelli;very interesting!

I will review the patch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumCnxManager's ListenerHandler thread leak,ZOOKEEPER-4309,13381291,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,nigrofranz,nigrofranz,31/May/21 13:13,14/Jun/21 09:47,13/Jul/23 09:08,14/Jun/21 09:46,3.6.3,3.7.0,,,,,,,,3.7.1,3.8.0,,,,server,,,,0,pull-request-available,,QuorumCnxManager::Listener::run is creating a Executors.newFixedThreadPool(addresses.size()) without shutting it down after ListenerHandler task has been completed causing it to leak.,,eolivelli,kyangcm,nigrofranz,,,,,,,,,,,,,,,,,"franz1981 opened a new pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705


   https://issues.apache.org/jira/browse/ZOOKEEPER-4309


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/May/21 13:29;githubbot;600","franz1981 commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-851494434


   Writing a test for this means both mocking or adding more state into `Listener` class: let me know if it's needed. It just leak a simple executor leak.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/May/21 13:31;githubbot;600","franz1981 edited a comment on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-851494434


   Writing a test for this means both mocking or adding more state into `Listener` class: let me know if it's needed. It just looks like a simple executor leak.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/May/21 13:32;githubbot;600","kyangcmXF commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-851777051


   hi guy,
   I replied to you in apache link.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jun/21 03:24;githubbot;600","franz1981 commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-851885960


   in order to explain what's the issue I've created a test application to show it: https://issues.apache.org/jira/browse/ZOOKEEPER-4309?focusedCommentId=17354802&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17354802


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jun/21 07:15;githubbot;600","eolivelli commented on a change in pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#discussion_r642931522



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
##########
@@ -957,8 +957,13 @@ public void run() {
                                 new ListenerHandler(address, self.shouldUsePortUnification(), self.isSslQuorum(), latch))
                         .collect(Collectors.toList());
 
-                ExecutorService executor = Executors.newFixedThreadPool(addresses.size());
-                listenerHandlers.forEach(executor::submit);
+                final ExecutorService executor = Executors.newFixedThreadPool(addresses.size());

Review comment:
       what about creating a shared ExecutorService, as a field in this class ?
   this way it will be clearer the life cycle of this pool.
   
   also, probably it would be worth to not use a pool in case of a list of addresses of size 1, but this may be a follow up work




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jun/21 09:20;githubbot;600","franz1981 commented on a change in pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#discussion_r642990745



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
##########
@@ -957,8 +957,13 @@ public void run() {
                                 new ListenerHandler(address, self.shouldUsePortUnification(), self.isSslQuorum(), latch))
                         .collect(Collectors.toList());
 
-                ExecutorService executor = Executors.newFixedThreadPool(addresses.size());
-                listenerHandlers.forEach(executor::submit);
+                final ExecutorService executor = Executors.newFixedThreadPool(addresses.size());

Review comment:
       > what about creating a shared ExecutorService, as a field in this class ?
   
   I was thinking the same, but then I've found https://github.com/franz1981/zookeeper/blob/b4f9aab099880ba8ef08eaff697debe6cdeae057/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java#L456-L468 and see that other parts in the ZK code just do it right without any hook to check for Thread ""liveness"".
   
   I believe having a shared pluggable executor service could worth for embedded use cases, where people would like to keep control on thread creation, instead.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jun/21 10:46;githubbot;600","kyangcmXF commented on a change in pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#discussion_r643631348



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
##########
@@ -957,8 +957,13 @@ public void run() {
                                 new ListenerHandler(address, self.shouldUsePortUnification(), self.isSslQuorum(), latch))
                         .collect(Collectors.toList());
 
-                ExecutorService executor = Executors.newFixedThreadPool(addresses.size());
-                listenerHandlers.forEach(executor::submit);
+                final ExecutorService executor = Executors.newFixedThreadPool(addresses.size());

Review comment:
       > what about creating a shared ExecutorService, as a field in this class ?
   > this way it will be clearer the life cycle of this pool.
   > 
   > also, probably it would be worth to not use a pool in case of a list of addresses of size 1, but this may be a follow up work
   
   we can use a global shared thread pool just as what we do in spring. For example we use @component annotation to register a pool. 
   however there's a question we need figure it out if the pool is io computed pool or a  cpu computed pool. 
   I think that is io computed pool because we use to accept ticket there. 
   @eolivelli 




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/21 03:47;githubbot;600","franz1981 commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-855716157


   @eolivelli Any news on this? 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/21 08:23;githubbot;600","eolivelli commented on a change in pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#discussion_r646383381



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
##########
@@ -957,8 +957,13 @@ public void run() {
                                 new ListenerHandler(address, self.shouldUsePortUnification(), self.isSslQuorum(), latch))
                         .collect(Collectors.toList());
 
-                ExecutorService executor = Executors.newFixedThreadPool(addresses.size());
-                listenerHandlers.forEach(executor::submit);
+                final ExecutorService executor = Executors.newFixedThreadPool(addresses.size());

Review comment:
       let's stick with this patch.
   we can improve things later




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/21 08:38;githubbot;600","eolivelli commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-855729976


   @franz1981 
   in order to commit the patch we need at least another reviewer
   
   tagging @anmolnar @hanm @nkalmar @symat @ztzg 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/21 08:39;githubbot;600","franz1981 commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-855787366


   > let's stick with this patch.
   > we can improve things later
   @eolivelli 
   
   I'm a OSS lover (beside my actual job), so would be happy to help on this :)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/21 09:55;githubbot;600","ztzg commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-856174833


   Planning to look into this on Wednesday (unless somebody beats me to it, of course).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/21 18:46;githubbot;600","franz1981 commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-860512224


   @hanm @ztzg @eolivelli happy that the fix is sound: as said probably worth considering some centralized way to create thread(s)/thread pools for a follow-up work on this


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/21 08:48;githubbot;600","eolivelli closed pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/21 09:46;githubbot;600","eolivelli commented on pull request #1705:
URL: https://github.com/apache/zookeeper/pull/1705#issuecomment-860551683


   committed to master branch and to branch-3.7.
   the fix will be available on ZK 3.8.0 and 3.7.1
   
   thank you !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/21 09:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,ARTEMIS-2716,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jun 14 09:46:28 UTC 2021,,,,,,,,,,"0|z0ripc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Jun/21 03:21;kyangcm; 

ExecutorService executor = Executors.newFixedThreadPool(addresses.size());
listenerHandlers.forEach(executor::submit);

try {
 {color:#FF0000}latch.await();{color}
} catch (InterruptedException ie) {
 LOG.error(""Interrupted while sleeping. Ignoring exception"", ie);
} finally \{...}
{code:java}
// code placeholder
{code}
 

 we use countdownLatch to block that until listenerHandler accept connection. You can see countdownLatch.countDown invoked in listenerHandler.run() that we pass countdownLatch variable into it via its ctor().

 

so it does not affect memory leak in my concern.;;;","01/Jun/21 04:49;nigrofranz;There are other parts in the zookeeper source code where a similar pattern is used and executor::shutdown is called to save the leak to happen.
The leak happen while halting QuorumCnxManager: listenerHandlers task can be already completed or are going to complete on halt, but the executorservice's thread are still alive, and given that non-daemon threads are GC roots they won't be garbage collected, although not reacheable.
An ExecutorService which non-daemon threads are still alive prevent a main thread to complete.

As example of the existing code patterns that correctly shutdown the executor, you can find https://github.com/franz1981/zookeeper/blob/b4f9aab099880ba8ef08eaff697debe6cdeae057/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java#L456-L468


{code:java}
                ExecutorService executor = Executors.newFixedThreadPool(serverSockets.size());
                CountDownLatch latch = new CountDownLatch(serverSockets.size());

                serverSockets.forEach(serverSocket ->
                        executor.submit(new LearnerCnxAcceptorHandler(serverSocket, latch)));

                try {
                    latch.await();
                } catch (InterruptedException ie) {
                    LOG.error(""Interrupted while sleeping in LearnerCnxAcceptor."", ie);
                } finally {
                    closeSockets();
                    executor.shutdown();
{code}

executor::shutdown is used to prevent the just created executor to leak, as explained above.

A sample program that shows this ExecutorService behaviour is:

{code:java}
    private static final boolean STOP_EXECUTOR = false;

    public static void main(String[] args) throws InterruptedException {
        final CountDownLatch interruptibleTask = new CountDownLatch(1);
        final CountDownLatch completed = new CountDownLatch(1);
        final CountDownLatch starting = new CountDownLatch(1);
        final ExecutorService service = Executors.newFixedThreadPool(1);
        service.submit(() -> {
            try {
                starting.countDown();
                interruptibleTask.await();
                System.err.println(""Graceful stop"");
            } catch (InterruptedException e) {
                System.err.println(""This cannot happen"");
            } finally {
                completed.countDown();
            }
        });
        if (STOP_EXECUTOR) {
            service.shutdown();
        }
        starting.await();
        System.err.println(""Gracefully stop the submitted task"");
        interruptibleTask.countDown();
        System.err.println(""Await interruptible task to complete"");
        completed.await();
        if (STOP_EXECUTOR) {
            System.err.println(""The application can correctly complete and there is no leak"");
        } else {
            System.err.println(""Perform some full GC and take an heap dump: you'll see the service Thread still alive"");
            System.err.println(""And this application won't stop"");
        }
    }
{code}

Setting STOP_EXECUTOR = false shows that the application never end because of the Thread leak, while STOP_EXECUTOR = true just make it works, and the application can exit with code 0.
Hope that's enough to explain what's the issue here.

;;;","01/Jun/21 09:54;kyangcm;yep Francesco Nigro

I used your demp and reproduced it. Here are my puzzle: why the pool worker was still parking? 

 ;;;","01/Jun/21 11:16;nigrofranz;Because It's the Executor contract: it isn't shutdown so it's ready to accept new tasks.;;;","02/Jun/21 03:32;kyangcm;I have some idea on threadpool. Its spinning routine that called getTask always try to get or else blocked itself until pool accept a closed signal.

 
{code:java}
// code placeholderprivate Runnable getTask() {
    boolean timedOut = false; // Did the last poll() time out?

    for (;;) {
        int c = ctl.get();
        int rs = runStateOf(c);

        // Check if queue empty only if necessary.
        if (rs >= SHUTDOWN && (rs >= STOP || workQueue.isEmpty())) {  //exit once accept stop
            decrementWorkerCount();
            return null;
        }

        int wc = workerCountOf(c);

        // Are workers subject to culling?
        boolean timed = allowCoreThreadTimeOut || wc > corePoolSize;

        if ((wc > maximumPoolSize || (timed && timedOut))
            && (wc > 1 || workQueue.isEmpty())) {
            if (compareAndDecrementWorkerCount(c))
                return null;
            continue;
        }

        try {
            Runnable r = timed ?
                workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :
                workQueue.take();     //that block itself within core thread
            if (r != null)
                return r;
            timedOut = true;
        } catch (InterruptedException retry) {
            timedOut = false;
        }
    }
}
{code};;;","14/Jun/21 09:46;eolivelli;Issue resolved by pull request 1705
[https://github.com/apache/zookeeper/pull/1705];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky test: EagerACLFilterTest.testSetDataFail,ZOOKEEPER-4308,13381150,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,kezhuw,maoling,maoling,30/May/21 09:30,30/Jan/23 07:57,13/Jul/23 09:08,24/Jun/22 13:38,3.8.0,,,,,,,,,3.7.2,3.8.1,3.9.0,,,tests,,,,0,pull-request-available,,"URL:[https://github.com/apache/zookeeper/pull/1425/checks?check_run_id=2702959273]
{code:java}
[INFO] 
947[ERROR] Failures: 
948[ERROR]   EagerACLFilterTest.testSetDataFail:222->assertTransactionState:115 Server State: OBSERVING Check Enabled: true Transaction state on Leader after failed setData ==> expected: <4294967298> but was: <4294967299>
949[INFO] 
950[ERROR] Tests run: 2913, Failures: 1, Errors: 0, Skipped: 4
951[INFO] {code}",,kezhuw,maoling,symat,,,,,,,,,,,,,,,,,"kezhuw opened a new pull request, #1851:
URL: https://github.com/apache/zookeeper/pull/1851

   There are several problems in this test:
   * It uses `ParameterizedTest` which run tests in single jvm. But
     `ZooKeeperServer.enableEagerACLCheck` is `static` and loaded from env
     variable.
   * It uses `assertNotSame` which assert on object reference equiality.
   * It asserts on `zkLeader.getLastLoggedZxid()` while client connect to
     `connectedServer`. There is no happen-before between
     `zkLeader.getLastLoggedZxid()` and successful response from other
     server. The commit and response are routed to different servers and
     performed asynchronous in each server.


;05/Apr/22 08:56;githubbot;600","maoling commented on PR #1851:
URL: https://github.com/apache/zookeeper/pull/1851#issuecomment-1095894752

   One approach to reproduce this flaky test is: try to inject a little latency when the leader applies the write request:
    org.apache.zookeeper.server.ZooKeeperServer#processTxnInDB
   ```
   		} else {
               try {
                   if (this instanceof LeaderZooKeeperServer && hdr.getType() == OpCode.create2) {
                       Thread.sleep(2);
                   }
               } catch (InterruptedException e) {
                   e.printStackTrace();
               }
               return getZKDatabase().processTxn(hdr, txn, digest);
           }
   ```
   


;12/Apr/22 03:04;githubbot;600","maoling commented on PR #1851:
URL: https://github.com/apache/zookeeper/pull/1851#issuecomment-1135348274

   @eolivelli  @symat  PTAL


;24/May/22 03:02;githubbot;600","symat commented on PR #1851:
URL: https://github.com/apache/zookeeper/pull/1851#issuecomment-1164627604

   we haven't merge this yet? sorry...
   I can merge this tomorrow


;23/Jun/22 16:30;githubbot;600","asfgit closed pull request #1851: ZOOKEEPER-4308: Fix flaky test EagerACLFilterTest
URL: https://github.com/apache/zookeeper/pull/1851


;24/Jun/22 13:31;githubbot;600","symat commented on PR #1851:
URL: https://github.com/apache/zookeeper/pull/1851#issuecomment-1165583790

   Thank you @kezhuw for the contribution!
   I merged this to master, branch-3.8 and branch-3.7.
   On branch-3.6 it wasn't a clean cherry-pick so there we will need a separate PR if we want to push.


;24/Jun/22 13:36;githubbot;600","kezhuw opened a new pull request, #1901:
URL: https://github.com/apache/zookeeper/pull/1901

   There are several problems in this test:
   * It uses `ParameterizedTest` which run tests in single jvm. But
     `ZooKeeperServer.enableEagerACLCheck` is `static` and loaded from env
     variable.
   * It uses `assertNotSame` which assert on object reference equiality.
   * It asserts on `zkLeader.getLastLoggedZxid()` while client connect to
     `connectedServer`. There is no happen-before between
     `zkLeader.getLastLoggedZxid()` and successful response from other
     server. The commit and response are routed to different servers and
     performed asynchronous in each server.
   
   Author: Kezhu Wang <kezhuw@gmail.com>
   
   Reviewers: maoling <maoling199210191@sina.com>, Mate Szalay-Beko <symat@apache.org>
   
   Closes #1851 from kezhuw/ZOOKEEPER-4308-EagerACLFilterTest
   
   (cherry picked from commit 794790c9f6cbacf158493867f3058a6de748b54e)


;29/Jun/22 15:03;githubbot;600","kezhuw commented on PR #1901:
URL: https://github.com/apache/zookeeper/pull/1901#issuecomment-1170098105

   @maoling @symat This is backport of #1851 to branch 3.6. Automatic cherry-pick fails due to junit changes.


;29/Jun/22 15:05;githubbot;600","maoling commented on PR #1901:
URL: https://github.com/apache/zookeeper/pull/1901#issuecomment-1236292021

   @kezhuw 
   Thanks for your contribution. Now we have this fix at all branches.


;04/Sep/22 08:55;githubbot;600","maoling closed pull request #1901: ZOOKEEPER-4308: Fix flaky test EagerACLFilterTest
URL: https://github.com/apache/zookeeper/pull/1901


;04/Sep/22 08:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,ZOOKEEPER-4347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jun 24 13:38:03 UTC 2022,,,,,,,,,,"0|z0rhu8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Apr/22 11:01;kezhuw;This test use `zkLeader.getLastLoggedZxid()` as `lastxid` while it connect to `connectedServer` which maybe different `zkLeader`. There is no happen-before between `zkLeader.getLastLoggedZxid()` and successful response from other server. The commit and response operation is performed asynchronous and branches for different servers. Use `connectedServer.getLastProcessedZxid()` should solve this.;;;","24/Jun/22 13:38;symat;Thank you for the fix, [~kezhuw] !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException when ClientCnxnSocketNetty is closed without being opened,ZOOKEEPER-4296,13378904,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,eolivelli,cjcowie,cjcowie,17/May/21 23:11,28/Feb/23 03:55,13/Jul/23 09:08,27/Feb/23 14:41,3.5.3,3.5.9,3.6.2,3.6.3,,,,,,3.9.0,,,,,,,,,2,pull-request-available,,"I believe this bug was originally reported as ZOOKEEPER-2966 but that was closed as not reproducible in February 2019. I left a comment with these details on that issue in December. I can create a PR with a fix at some point this week.

 

In ZooKeeper 3.6.2, in the context of the SolrJ client, we hit the NPE reported on ZOOKEEPER-2966 when a DNS error causes an exception after the SolrZkClient trys to connect to ZooKeeper, but then immediately calls close on the {{ClientCnxn}} [https://github.com/apache/solr/blob/releases/lucene-solr%2F8.7.0/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java#L158-L204].
{noformat}
java.lang.NullPointerException: null
        at org.apache.zookeeper.ClientCnxnSocketNetty.onClosing(ClientCnxnSocketNetty.java:247) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ClientCnxn$SendThread.close(ClientCnxn.java:1445) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1488) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1517) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:1614) ~[zookeeper-3.6.2.jar:3.6.2]
        at org.apache.solr.common.cloud.SolrZooKeeper.close(SolrZooKeeper.java:97) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:198) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:127) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:122) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:109) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]
{noformat}
This happens if the {{ClientCnxnSocketNetty}}'s {{onClosing()}} is called before {{connect(...)}} (or if connect isn't called at all) because the {{firstConnect}} {{CountDownLatch}} is only initialized in {{connect(...)}}.
 [https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L129]
 [https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L247]
 A null check in {{onClosing()}} will fix it, but I don't know if there's any greater change required, e.g. some synchronization around connect and onClosing.

The code in [3.5.3|https://github.com/apache/zookeeper/blame/1507f67a06175155003722297daeb60bc912af1d/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L206] looks very similar, it looks like it's been present since the initial commit of {{ClientCnxnSocketNetty}}.",,cjcowie,eolivelli,kezhuw,,,,,,,,,,,,,,,,,"colvinco opened a new pull request #1697:
URL: https://github.com/apache/zookeeper/pull/1697


   See [ZOOKEEPER-4296](https://issues.apache.org/jira/browse/ZOOKEEPER-4296) for more context.
   What I've done here fixes (the symptoms of?) a problem that I have hit in the real world when using Solr's SolrZkClient. But I don't have enough knowledge of ZooKeeper's code to say whether there's a bigger issue in terms of how `ClientCnxnSocketNetty` is being used. What I do know is that `ClientCnxnSocketNIO` handled the same scenario without any apparent issue.
   
   In any case getting NullPointerExceptions when closing something isn't helpful.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/May/21 00:08;githubbot;600","maoling commented on pull request #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-858660585


   @colvinco Thanks for your contribution.
   - As you said: `NPE` may be a symptom. Doing a null check is treating symptoms and not the root cause?
   - I don't take a close look at this issue. But I think we should spent time on thinking:
      what's the abnormal timing sequence between `onClosing()` and `connect()`, and how to reproduce this issue


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/21 14:16;githubbot;600","kezhuw commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1120139356

   @maoling I guess [ZOOKEEPER-4525](https://issues.apache.org/jira/browse/ZOOKEEPER-4525)(#1864) answered your question. 
   
   @maoling @eolivelli All following three issues could have same cause: ""close before connect"".
   * [ZOOKEEPER-2966](https://issues.apache.org/jira/browse/ZOOKEEPER-2966): Flaky NullPointerException while closing client connection
   * [ZOOKEEPER-4296](https://issues.apache.org/jira/browse/ZOOKEEPER-4296): NullPointerException when ClientCnxnSocketNetty is closed without being opened
   * [ZOOKEEPER-4525](https://issues.apache.org/jira/browse/ZOOKEEPER-4525): Thread leaks occur when resolve address failed.
   
   #1864 gives reproducible tests from user facing interface `ZooKeeper`.


;07/May/22 05:37;githubbot;600","eolivelli commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1120215084

   closing and reopening to trigger CI (I can't see the button on the UI)


;07/May/22 14:00;githubbot;600","eolivelli closed pull request #1697: ZOOKEEPER-4296: Add null checks to ClientCnxnSocketNetty onClosing
URL: https://github.com/apache/zookeeper/pull/1697


;07/May/22 14:00;githubbot;600","colvinco opened a new pull request, #1697:
URL: https://github.com/apache/zookeeper/pull/1697

   See [ZOOKEEPER-4296](https://issues.apache.org/jira/browse/ZOOKEEPER-4296) for more context.
   What I've done here fixes (the symptoms of?) a problem that I have hit in the real world when using Solr's SolrZkClient. But I don't have enough knowledge of ZooKeeper's code to say whether there's a bigger issue in terms of how `ClientCnxnSocketNetty` is being used. What I do know is that `ClientCnxnSocketNIO` handled the same scenario without any apparent issue.
   
   In any case getting NullPointerExceptions when closing something isn't helpful.


;07/May/22 14:00;githubbot;600","kezhuw commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1446421934

   Shall we merge this ? It already gains two approvals from committers. @arshadmohammad  @eolivelli @maoling


;27/Feb/23 14:28;githubbot;600","eolivelli merged PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697


;27/Feb/23 14:41;githubbot;600","eolivelli commented on PR #1697:
URL: https://github.com/apache/zookeeper/pull/1697#issuecomment-1446452834

   @kezhuw committed. thanks for the reminder


;27/Feb/23 14:41;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,ZOOKEEPER-4525,,,ZOOKEEPER-2966,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Feb 27 14:41:55 UTC 2023,,,,,,,,,,"0|z0r3zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Feb/23 14:41;eolivelli;committed to master branch;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dependency-check:check failing - netty-transport-4.1.60.Final CVE-2021-21409 ,ZOOKEEPER-4278,13370183,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,ayushmantri,arshad.mohammad,arshad.mohammad,07/Apr/21 18:48,23/Feb/22 16:44,13/Jul/23 09:08,08/Apr/21 14:37,,,,,,,,,,3.6.3,3.7.1,3.8.0,,,,,,,0,pull-request-available,,,,arshad.mohammad,ayushmantri,brahmareddy,danielma-2020,DingGa,sandipbhattacharya,,,,,,,,,,,,,,"ayushmantri opened a new pull request #1678:
URL: https://github.com/apache/zookeeper/pull/1678


   Upgraded Netty library to 4.1.63.Final


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 11:16;githubbot;600","arshadmohammad commented on pull request #1678:
URL: https://github.com/apache/zookeeper/pull/1678#issuecomment-815694128


   Thanks @ayushmantri for raising the PR. Please raise PR for branch-3.5 as well.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 11:41;githubbot;600","arshadmohammad commented on pull request #1678:
URL: https://github.com/apache/zookeeper/pull/1678#issuecomment-815844037


   > continuous-integration/jenkins/pr-merge — This commit cannot be built
   Failure is not related to this PR. Failure is because of cmake is not installed on the CI machine.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 13:53;githubbot;600","asfgit closed pull request #1678:
URL: https://github.com/apache/zookeeper/pull/1678


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 14:17;githubbot;600","sandipbhattacharya commented on pull request #1678:
URL: https://github.com/apache/zookeeper/pull/1678#issuecomment-887433384


   Hi @ayushmantri  , @arshadmohammad  and @asfgit ,
   I see no later version is available for Apache Zookeeper containing this fix. Can you please confirm me when this fix will be available and in which version?
   
    
   
   I see 3.7.0 is the last released version which has this reported vulnerability
   
   https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper
   
   and https://zookeeper.apache.org/releases.html


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jul/21 11:27;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-4385,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Feb 23 16:44:49 UTC 2022,,,,,,,,,,"0|z0pmww:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/21 08:23;arshad.mohammad;Though 4.1.61.Final has fixed the CVE-2021-21409, latest netty release is 4-1-63-Final. I think we should upgrade to the latest version .
https://netty.io/news/2021/04/01/4-1-63-Final.html;;;","08/Apr/21 10:01;DingGa;I think there is no need to upgrade to the newest version unless fatal bugs were found within the current version .;;;","08/Apr/21 10:47;arshad.mohammad;To fix the CVE anyway we have to upgrade to 4.1.61. 
 4.1.62 and 4.1.63 are Regression fix releases. As per the release notes there is not much change from 4.1.62 to 4.1.63.

https://netty.io/news/2021/03/30/4-1-61-Final.html
https://netty.io/news/2021/03/31/4-1-62-Final.html
https://netty.io/news/2021/04/01/4-1-63-Final.html;;;","08/Apr/21 13:42;ayushmantri;I have raised PR to upgrade netty  to 4.1.63;;;","09/Apr/21 05:02;arshad.mohammad;Thanks [~ayushmantri] for raising the PR.  
Please raise PR for branch-3.5 also;;;","27/Jul/21 11:19;sandipbhattacharya;Hi [~ayushmantri] and [~arshad.mohammad], I see no later version is available for Apache Zookeeper containing this fix. Can you please confirm me when this fix will be available and in which version?

 

I see 3.7.0 is the last released version which has this reported vulnerability

[https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper]

and [https://zookeeper.apache.org/releases.html]

 

 ;;;","22/Sep/21 15:27;brahmareddy;[~ayushmantri] and [~arshad.mohammad], any updates on pushing to branch-3.5..?;;;","23/Sep/21 08:17;arshad.mohammad;Thanks [~brahmareddy] for creating new bug ZOOKEEPER-4385 to backport to branch-3.5. Pls raise PR as well.;;;","09/Nov/21 21:02;danielma-2020;[~ayushmantri]  and [~arshad.mohammad] 

Do we have a timeline on when 3.7.1 or 3.8.0 will be available with the fix? Thanks;;;","23/Feb/22 16:44;danielma-2020;Hi [~ayushmantri]  and [~arshad.mohammad],

Any update on when 3.7.1 will be available? This finding has been opened for some time on our security scans, and our stakeholders are inquiring on them. Thanks.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
"Slowness in sasl login or subject.doAs() causes zk client to falsely assume that the server did not respond, closes connection and goes to unnecessary retries",ZOOKEEPER-4275,13369780,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,rvaleti,rvaleti,rvaleti,06/Apr/21 11:54,09/Jun/21 12:32,13/Jul/23 09:08,19/Apr/21 06:55,3.5.9,,,,,,,,,3.5.10,3.6.4,3.7.1,3.8.0,,java client,,,,0,pull-request-available,,"Zookeeper client does sasl auth (login and subject.doAs())as a preset before attempting a connection to server.
 If there is a delay in sasl auth (possibly due to slow Kerberos communication), ZK client falsely assumes that the zk server did not respond and runs in to unnecessary multiple retries.

Client configuration:
 ""zookeeper.session.timeout"" = ""3000""
 ""zookeeper.recovery.retry"" = ""1""
 ""zookeeper.recovery.retry.intervalmill"" = ""500""

This configuration translates to  

connect timeout as 1000ms
 Read Timeout as 2000ms

Example: There was a 3 second delay in logging in the user as seen from the logs below. The connection attempt was made later. However, zk client did not wait for server response but logged a timeout (3 seconds > 1 sec connect timeout), closed the connection and went to retries. Since there was a consistent delay at Kerberos master, we had seen this retries go as long as 10 mins causing requests to timeout/fail.

Logs:

3/23/21 4:15:*32.389* AM jute.maxbuffer value is xxxxx Bytes

3/23/21 4:15:*35.395* AM Client successfully logged in.

3/23/21 4:15:35.396 AM TGT refresh sleeping until: Wed Mar 24 00:34:31 GMT 2021

3/23/21 4:15:35.396 AM TGT refresh thread started.

3/23/21 4:15:35.396 AM Client will use GSSAPI as SASL mechanism.

3/23/21 4:15:35.396 AM TGT expires:                  xxx Mar xx 04:15:35 GMT 2021

3/23/21 4:15:35.396 AM TGT valid starting at:        xxx Mar xx 04:15:35 GMT 2021

3/23/21 4:15:*35.397* AM *Opening socket connection* to server xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

3/23/21 4:15:*35.397* AM *Client session timed out, have not heard from server in* *3008ms* for sessionid 0x0

3/23/21 4:15:35.397 AM Client session timed out, have not heard from server in 3008ms for sessionid 0x0, closing socket connection and attempting reconnect

3/23/21 4:15:35.498 AM TGT renewal thread has been interrupted and will exit.

3/23/21 4:15:38.503 AM Client successfully logged in.

3/23/21 4:15:38.503 AM TGT expires:                  xxx Mar xx 04:15:38 GMT 2021

3/23/21 4:15:38.503 AM Client will use GSSAPI as SASL mechanism.

3/23/21 4:15:38.503 AM TGT valid starting at:        xxx Mar xx 04:15:38 GMT 2021

3/23/21 4:15:38.503 AM TGT refresh thread started.

3/23/21 4:15:38.503 AM TGT refresh sleeping until: Wed Mar 24 00:10:10 GMT 2021

3/23/21 4:15:38.506 AM Opening socket connection to server xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

3/23/21 4:15:38.506 AM Client session timed out, have not heard from server in 3009ms for sessionid 0x0, closing socket connection and attempting reconnect

3/23/21 4:15:38.506 AM Client session timed out, have not heard from server in 3009ms for sessionid 0x0

3/23/21 4:15:38.606 AM TGT renewal thread has been interrupted and will exit.

3/23/21 4:15:41.610 AM Client successfully logged in.

3/23/21 4:15:41.611 AM TGT refresh sleeping until: xxx Mar xx 23:42:03 GMT 2021

3/23/21 4:15:41.611 AM Client will use GSSAPI as SASL mechanism.

3/23/21 4:15:41.611 AM TGT valid starting at:        xxx Mar xx 04:15:41 GMT 2021

3/23/21 4:15:41.611 AM TGT expires:                  xxx Mar xx 04:15:41 GMT 2021

3/23/21 4:15:41.611 AM TGT refresh thread started.

3/23/21 4:15:41.612 AM Opening socket connection to server xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

3/23/21 4:15:41.613 AM Client session timed out, have not heard from server in 3006ms for sessionid 0x0

3/23/21 4:15:41.613 AM Client session timed out, have not heard from server in 3006ms for sessionid 0x0, closing socket connection and attempting reconnect",,apurtell,KPMiles,rvaleti,symat,,,,,,,,,,,,,,,,"rvaleti opened a new pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 04:57;githubbot;600","rvaleti commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819291410


   The test is passing on my machine. Not sure if it's a flapper?
   
   $ mvn clean test -Dtest=ReconfigTest -pl zookeeper-server
   [INFO] Scanning for projects...
   [INFO] 
   [INFO] -------------------< org.apache.zookeeper:zookeeper >-------------------
   [INFO] Building Apache ZooKeeper - Server 3.5.10-SNAPSHOT
   [INFO] --------------------------------[ jar ]---------------------------------
   [INFO] 
   [INFO] --- maven-clean-plugin:3.0.0:clean (default-clean) @ zookeeper ---
   [INFO] Deleting ~/zookeeper_github_forked/zookeeper-server/target
   [INFO] 
   [INFO] --- git-commit-id-plugin:4.0.4:revision (find-current-git-revision) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-antrun-plugin:1.8:run (default) @ zookeeper ---
   [INFO] Executing tasks
   
   main:
   [INFO] Executed tasks
   [INFO] 
   [INFO] --- build-helper-maven-plugin:3.0.0:timestamp-property (tbuild-time) @ zookeeper ---
   [INFO] 
   [INFO] --- properties-maven-plugin:1.0.0:read-project-properties (default) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-compiler-plugin:3.8.1:compile (pre-compile-vergen) @ zookeeper ---
   [INFO] Changes detected - recompiling the module!
   [INFO] Compiling 2 source files to ~/zookeeper_github_forked/zookeeper-server/target/classes
   [INFO] 
   [INFO] --- exec-maven-plugin:1.6.0:exec (generate-version-info) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-remote-resources-plugin:1.5:process (process-resource-bundles) @ zookeeper ---
   [INFO] 
   [INFO] --- maven-resources-plugin:2.7:resources (default-resources) @ zookeeper ---
   [INFO] Using 'UTF-8' encoding to copy filtered resources.
   [INFO] skip non existing resourceDirectory ~/zookeeper_github_forked/zookeeper-serversrc/main/java/resources
   [INFO] Copying 3 resources
   [INFO] 
   [INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ zookeeper ---
   [INFO] Changes detected - recompiling the module!
   [INFO] Compiling 279 source files to ~/zookeeper_github_forked/zookeeper-server/target/classes
   [INFO] 
   [INFO] --- maven-resources-plugin:2.7:testResources (default-testResources) @ zookeeper ---
   [INFO] Using 'UTF-8' encoding to copy filtered resources.
   [INFO] Copying 34 resources
   [INFO] Copying 3 resources
   [INFO] 
   [INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ zookeeper ---
   [INFO] Changes detected - recompiling the module!
   [INFO] Compiling 269 source files to ~/zookeeper_github_forked/zookeeper-server/target/test-classes
   [INFO] 
   [INFO] --- maven-surefire-plugin:2.22.1:test (default-test) @ zookeeper ---
   [INFO] 
   [INFO] -------------------------------------------------------
   [INFO]  T E S T S
   [INFO] -------------------------------------------------------
   [INFO] Running org.apache.zookeeper.test.ReconfigTest
   [INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 285.152 s - in org.apache.zookeeper.test.ReconfigTest
   [INFO] 
   [INFO] Results:
   [INFO] 
   [INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0
   [INFO] 
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD SUCCESS
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time: 05:05 min
   [INFO] Finished at: 2021-04-14T11:50:57+05:30
   [INFO] ------------------------------------------------------------------------


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 07:20;githubbot;600","symat commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819299285


   yeah, seems flaky... I retriggered the test and now everything seems green


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 07:34;githubbot;600","rvaleti opened a new pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685


   Raising the PR for master - approved for 3.5 branch already.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 08:34;githubbot;600","rvaleti commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819345168


   Hi @symat 
   
   I raised a PR for master branch as suggested.
   
   I did spend a lot of time on trying to add a test for this. Inducing a sleep in to ClientCnxn#SendThread#startConnect() or ZookeeperSaslClient was not feasible. We have to do a lot of refactoring in order to get there.
   
   - expose ZookeeperSaslClient so that it can be mocked/extended
   - or make sendThread non-final so it can be overridden from test and then induce a pause.
   
   Please let me know if there's an easy way out.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 08:42;githubbot;600","rvaleti commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819351190


   Hi, @symat - Raised this PR for master branch as suggested here - https://github.com/apache/zookeeper/pull/1684#pullrequestreview-635310075


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 08:52;githubbot;600","nkalmar commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819357334


   This should be a clean cherry-pick to 3.5 from master, so I think this PR can be closed. But since all green it can as well stay and merged from here.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:00;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819373461


   I re-triggered the CI (most probably we hit a flaky test again)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:24;githubbot;600","symat commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-819375420


   Thanks @rvaleti !
   
   I don't see an easy way for unit test either, and I wouldn't make a major refactoring in the production code just for this test... I think we can skip the unit test this case.
   
   Thanks for the PR on the master branch, I agree with @nkalmar that you can close this PR (on branch-3.5), as we will simply cherry-pick the master commit to the other branches. Anyway, it was good to get also a green CI run on branch-3.5, that never hurts :)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:27;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819377047


   If the CI passes, I'll merge this to master and also cherry-pick to the active branches.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 09:30;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-819522364


   I already restarted the CI jobs 2 times... C client unit tests are failing, what is definitely not related to this PR about java client. If the java unit tests are passing (still running at the moment), then I'm going to merge this tomorrow unless someone has an objection.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 13:34;githubbot;600","symat commented on pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685#issuecomment-822211972


   I had to restart CI at least 5 times to get a stable run... is it always this unstable?
   I'm going to merge this fix now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/21 06:39;githubbot;600","asfgit closed pull request #1685:
URL: https://github.com/apache/zookeeper/pull/1685


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Apr/21 06:47;githubbot;600","maoling commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-838675429


   - @rvaleti  Actually, I also found this issue at Aug 2019 [PR-1065](https://github.com/apache/zookeeper/pull/1065) (I also have a analysis here, maybe it's still helpful )
   - @symat @nkalmar Since master now has this fix, what are you going to do next? merge this PR again 3.5 or cherry-pick directly from master?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/21 15:24;githubbot;600","symat commented on pull request #1684:
URL: https://github.com/apache/zookeeper/pull/1684#issuecomment-839589942


   hi @maoling !
   
   I think we already pushed this fix to all active branches. E.g. it is present on 3.5, see: https://github.com/apache/zookeeper/commits/branch-3.5


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/May/21 08:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Apr 14 09:03:43 UTC 2021,,,,,,,,,,"0|z0pkfc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Apr/21 15:00;symat;Hello [~rvaleti],

ZooKeeper 3.4 is not supported by the community anymore, please upgrade to the latest 3.5, 3.6 or 3.7 version to have community support.

(the ZooKeeper client code also got many improvements in more recent releases);;;","07/Apr/21 20:19;rvaleti;Hi [~symat], Sure, I will try this against >=3.5 and update the Jira tomorrow.

High level, looked at 3.5/6/7 branches and the code path hasn't changed (ClientCnxn.java). I'm confident that this bug exists there as well. Once I test against >=3.5, I will provide a patch to fix this.;;;","09/Apr/21 07:56;rvaleti;[~symat]


I was able to reproduce the same on 3.5 branch by inducing a 1 second delay right before Subject.doAs() in SecurityUtils#createSaslClient() method.

The bug - ZK client starts connection timer much ahead (which includes Sasl client creation) of sending a connection request to ZK Server and falsely assuming that it's timing out on ZK server and goes for retries.

Fix: ZK client should start the connection timer right before sending a connection request to ZK server.

I will provide a patch for this on 3.5 first and then we can port it to relevant branches.

 

2021-04-09 12:50:26,264 INFO  [main] zookeeper.ClientCnxnSocket - jute.maxbuffer value is 4194304 Bytes

2021-04-09 12:50:26,272 INFO  [main] zookeeper.ClientCnxn - zookeeper.request.timeout value is 0. feature enabled=

2021-04-09 12:50:26,822 INFO  [main-SendThread(xxxxx:2181)] zookeeper.Login - Client successfully logged in.

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT refresh thread started.

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT valid starting at:        xxx Apr xx 12:50:26 IST 2021

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT expires:                  xxx Apr xx 12:50:26 IST 2021

2021-04-09 12:50:26,824 INFO  [Thread-1] zookeeper.Login - TGT refresh sleeping until: xxx Apr xx 08:15:07 IST 2021

2021-04-09 12:50:26,828 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - *Sleeping for 1000*

2021-04-09 12:50:27,835 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - Client will use GSSAPI as SASL mechanism.

2021-04-09 12:50:27,845 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Opening socket connection to server* xxxxx/xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

2021-04-09 12:50:27,861 WARN  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Client session timed out, have not heard from server in 1589ms* for sessionid 0x0

2021-04-09 12:50:27,861 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - Client session timed out, have not heard from server in 1589ms for sessionid 0x0, closing socket connection and attempting reconnect

 

*Falsely times out ZK server and starts getting in to unnecessary continuous retries*

 

2021-04-09 12:50:27,972 WARN  [Thread-1] zookeeper.Login - TGT renewal thread has been interrupted and will exit.

2021-04-09 12:50:28,514 INFO  [main-SendThread(xxxxx:2181)] zookeeper.Login - Client successfully logged in.

2021-04-09 12:50:28,514 INFO  [Thread-2] zookeeper.Login - TGT refresh thread started.

2021-04-09 12:50:28,514 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - *Sleeping for 1000*

2021-04-09 12:50:28,514 INFO  [Thread-2] zookeeper.Login - TGT valid starting at:        xxx Apr xx 12:50:28 IST 2021

2021-04-09 12:50:28,514 INFO  [Thread-2] zookeeper.Login - TGT expires:                  xxx Apr xx 12:50:28 IST 2021

2021-04-09 12:50:28,515 INFO  [Thread-2] zookeeper.Login - TGT refresh sleeping until: xxx Apr xx 08:39:46 IST 2021

2021-04-09 12:50:29,519 INFO  [main-SendThread(xxxxx:2181)] client.ZooKeeperSaslClient - Client will use GSSAPI as SASL mechanism.

2021-04-09 12:50:29,520 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Opening socket connection to server* xxxxx/xxxxx:2181. Will attempt to SASL-authenticate using Login Context section 'Client'

2021-04-09 12:50:29,522 WARN  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - *Client session timed out, have not heard from server in 1551ms* for sessionid 0x0

2021-04-09 12:50:29,522 INFO  [main-SendThread(xxxxx:2181)] zookeeper.ClientCnxn - Client session timed out, have not heard from server in 1551ms for sessionid 0x0, closing socket connection and attempting reconnect;;;","14/Apr/21 06:51;symat;Thank you [~rvaleti] for working on the issue!!

Please make sure to create the patch first on the master branch (if the problem exists there too). Usually we are making / reviewing bugfixes first on master, then backporting it to the older active branches (which currently are branch-3.7, branch-3.6 and branch-3.5).

Thank you!;;;","14/Apr/21 09:03;rvaleti;Thanks [~symat], I raised a separate PR for master [https://github.com/apache/zookeeper/pull/1685] as suggested. Please review and merge.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
acceptedEpoch.tmp rename failure will cause server startup error,ZOOKEEPER-4269,13368344,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,29/Mar/21 10:23,17/May/22 09:58,13/Jul/23 09:08,31/Mar/21 21:23,,,,,,,,,,3.5.10,3.6.3,3.7.1,3.8.0,,,,,,0,pull-request-available,,"accepted epoch is first written to temporary file acceptedEpoch.tmp then this file is renamed to acceptedEpoch.


Failure, either because of exception or power-off, in renaming the acceptedEpoch.tmp file will cause server startup error with message ""The current epoch, x, is older than the last zxid y""

To handle this scenario we should read accepted epoch from this temp file as well.

For more context, refer https://github.com/apache/zookeeper/pull/1109

 ",,arshad.mohammad,KPMiles,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664


   Using accepted epoch from acceptedEpoch.tmp if it is available


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 11:13;githubbot;600","muse-dev[bot] commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r603212717



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
##########
@@ -1163,10 +1164,18 @@ private void loadDataBase() {
                 writeLongToFile(CURRENT_EPOCH_FILENAME, currentEpoch);
             }
             if (epochOfZxid > currentEpoch) {
-                throw new IOException(""The current epoch, ""
-                                      + ZxidUtils.zxidToString(currentEpoch)
-                                      + "", is older than the last zxid, ""
-                                      + lastProcessedZxid);
+                // acceptedEpoch.tmp file in snapshot directory
+                File currentTmp = new File(getTxnFactory().getSnapDir(),
+                    CURRENT_EPOCH_FILENAME + AtomicFileOutputStream.TMP_EXTENSION);
+                if (currentTmp.exists()) {
+                    long epochOfTmp = readLongFromFile(currentTmp.getName());

Review comment:
       *PATH_TRAVERSAL_IN:*  This API (java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input [(details)](https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN)
   (at-me [in a reply](https://docs.muse.dev/docs/talk-to-muse/) with `help` or `ignore`)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 11:22;githubbot;600","arshadmohammad commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r603217001



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
##########
@@ -1163,10 +1164,18 @@ private void loadDataBase() {
                 writeLongToFile(CURRENT_EPOCH_FILENAME, currentEpoch);
             }
             if (epochOfZxid > currentEpoch) {
-                throw new IOException(""The current epoch, ""
-                                      + ZxidUtils.zxidToString(currentEpoch)
-                                      + "", is older than the last zxid, ""
-                                      + lastProcessedZxid);
+                // acceptedEpoch.tmp file in snapshot directory
+                File currentTmp = new File(getTxnFactory().getSnapDir(),
+                    CURRENT_EPOCH_FILENAME + AtomicFileOutputStream.TMP_EXTENSION);
+                if (currentTmp.exists()) {
+                    long epochOfTmp = readLongFromFile(currentTmp.getName());

Review comment:
       This is not user input file. It is system generate file so PATH_TRAVERSAL_IN is not applicable




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 11:29;githubbot;600","arshadmohammad commented on pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#issuecomment-810427872


   Added test case


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 17:05;githubbot;600","arshadmohammad opened a new pull request #1668:
URL: https://github.com/apache/zookeeper/pull/1668


   Using accepted epoch from acceptedEpoch.tmp if it is available


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 17:50;githubbot;600","ztzg commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r604419892



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+public class CurrentEpochWriteFailureTest extends QuorumPeerTestBase {
+    protected static final Logger LOG = LoggerFactory.getLogger(CurrentEpochWriteFailureTest.class);
+    private Servers servers;
+    private int clientPort;
+    private Map<String, String> additionalProp;
+
+    @Before
+    public void setUp() {
+        additionalProp = new HashMap<>();
+        additionalProp.put(""admin.enableServer"", ""true"");
+        additionalProp.put(""4lw.commands.whitelist"", ""*"");

Review comment:
       I was wondering why these two were necessary—but the test seems to run fine without them.  Did you add them for a specific purpose, or did you simply inherit them?  (Not that I expect them to hurt.)

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;

Review comment:
       This compiles, but causes the test not to run when selected with `-Dtest=CurrentEpochWriteFailureTest`!  (I don't know if it runs when the full test suite is active.)
   
   I believe you want this:
   
   ```diff
   --- a/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
   +++ b/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
   @@ -30,9 +30,9 @@
    import org.apache.zookeeper.ZooKeeper;
    import org.apache.zookeeper.common.AtomicFileOutputStream;
    import org.apache.zookeeper.test.ClientBase;
   -import org.junit.After;
   -import org.junit.Before;
   -import org.junit.Test;
   +import org.junit.jupiter.api.AfterEach;
   +import org.junit.jupiter.api.BeforeEach;
   +import org.junit.jupiter.api.Test;
    import org.slf4j.Logger;
    import org.slf4j.LoggerFactory;
    
   @@ -42,14 +42,14 @@
        private int clientPort;
        private Map<String, String> additionalProp;
    
   -    @Before
   +    @BeforeEach
        public void setUp() {
            additionalProp = new HashMap<>();
            additionalProp.put(""admin.enableServer"", ""true"");
            additionalProp.put(""4lw.commands.whitelist"", ""*"");
        }
    
   -    @After
   +    @AfterEach
        public void tearDown() throws InterruptedException {
            if (servers != null) {
                servers.shutDownAllServers();
   ```

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+public class CurrentEpochWriteFailureTest extends QuorumPeerTestBase {
+    protected static final Logger LOG = LoggerFactory.getLogger(CurrentEpochWriteFailureTest.class);
+    private Servers servers;
+    private int clientPort;
+    private Map<String, String> additionalProp;
+
+    @Before
+    public void setUp() {
+        additionalProp = new HashMap<>();
+        additionalProp.put(""admin.enableServer"", ""true"");
+        additionalProp.put(""4lw.commands.whitelist"", ""*"");
+    }
+
+    @After
+    public void tearDown() throws InterruptedException {
+        if (servers != null) {
+            servers.shutDownAllServers();
+        }
+    }
+
+    /*
+     * ZOOKEEPER-4269:
+     * accepted epoch is first written to temporary file acceptedEpoch.tmp then this file is
+     * renamed to acceptedEpoch.
+     * Failure, either because of exception or power-off, in renaming the acceptedEpoch.tmp file
+     * will cause server startup error with message ""The current epoch, x, is older than the last
+     * zxid y""
+     * To handle this scenario we should read accepted epoch from this temp file as well.
+     */
+    @Test
+    public void testReadCurrentEpochFromAcceptedEpochTmpFile() throws Exception {
+        startServers(additionalProp);
+        writSomeData();
+
+        restartServers();
+        writSomeData();
+
+        MainThread firstServer = servers.mt[0];
+
+        // As started servers two times, current epoch must be two
+        long currentEpoch = firstServer.getQuorumPeer().getCurrentEpoch();
+        assertEquals(2, currentEpoch);
+
+        // Initialize files for later use
+        File snapDir = firstServer.getQuorumPeer().getTxnFactory().getSnapDir();
+        File currentEpochFile = new File(snapDir, QuorumPeer.CURRENT_EPOCH_FILENAME);
+        File currentEpochTempFile = new File(snapDir,
+            QuorumPeer.CURRENT_EPOCH_FILENAME + AtomicFileOutputStream.TMP_EXTENSION);
+
+        // Shutdown servers
+        servers.shutDownAllServers();
+        waitForAll(servers, ZooKeeper.States.CONNECTING);
+
+        // Create scenario of file currentEpoch.tmp rename to currentEpoch failure.
+        // In this case currentEpoch file will have old epoch and currentEpoch.tmp will have the latest epoch
+        FileUtils.write(currentEpochFile, Long.toString(currentEpoch - 1), ""UTF-8"");
+        FileUtils.write(currentEpochTempFile, Long.toString(currentEpoch), ""UTF-8"");
+
+        // Restart the serves, all serves should restart successfully.
+        servers.restartAllServersAndClients(this);
+
+        // Check the first server where problem was injected.
+        assertTrue(ClientBase
+                .waitForServerUp(""127.0.0.1:"" + firstServer.getClientPort(), CONNECTION_TIMEOUT),
+            ""server "" + firstServer.getMyid()
+                + "" is not up as file currentEpoch.tmp rename to currentEpoch file was failed""
+                + "" which lead current epoch inconsistent state."");
+    }
+
+    private void restartServers() throws InterruptedException, IOException {
+        servers.shutDownAllServers();
+        waitForAll(servers, ZooKeeper.States.CONNECTING);
+        servers.restartAllServersAndClients(this);
+        waitForAll(servers, ZooKeeper.States.CONNECTED);
+    }
+
+    private void writSomeData() throws Exception {

Review comment:
       Nit: `writeSomeData`?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 20:59;githubbot;600","arshadmohammad commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r604606916



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;

Review comment:
       good suggestions, handled it




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 05:38;githubbot;600","arshadmohammad commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r604607575



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+public class CurrentEpochWriteFailureTest extends QuorumPeerTestBase {
+    protected static final Logger LOG = LoggerFactory.getLogger(CurrentEpochWriteFailureTest.class);
+    private Servers servers;
+    private int clientPort;
+    private Map<String, String> additionalProp;
+
+    @Before
+    public void setUp() {
+        additionalProp = new HashMap<>();
+        additionalProp.put(""admin.enableServer"", ""true"");
+        additionalProp.put(""4lw.commands.whitelist"", ""*"");

Review comment:
       admin.enableServer, I intended to set false. 
   But I checked these properties are already set in super class ZKTestCase. So not required. removed it




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 05:40;githubbot;600","arshadmohammad commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r604607654



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+public class CurrentEpochWriteFailureTest extends QuorumPeerTestBase {
+    protected static final Logger LOG = LoggerFactory.getLogger(CurrentEpochWriteFailureTest.class);
+    private Servers servers;
+    private int clientPort;
+    private Map<String, String> additionalProp;
+
+    @Before
+    public void setUp() {
+        additionalProp = new HashMap<>();
+        additionalProp.put(""admin.enableServer"", ""true"");
+        additionalProp.put(""4lw.commands.whitelist"", ""*"");
+    }
+
+    @After
+    public void tearDown() throws InterruptedException {
+        if (servers != null) {
+            servers.shutDownAllServers();
+        }
+    }
+
+    /*
+     * ZOOKEEPER-4269:
+     * accepted epoch is first written to temporary file acceptedEpoch.tmp then this file is
+     * renamed to acceptedEpoch.
+     * Failure, either because of exception or power-off, in renaming the acceptedEpoch.tmp file
+     * will cause server startup error with message ""The current epoch, x, is older than the last
+     * zxid y""
+     * To handle this scenario we should read accepted epoch from this temp file as well.
+     */
+    @Test
+    public void testReadCurrentEpochFromAcceptedEpochTmpFile() throws Exception {
+        startServers(additionalProp);
+        writSomeData();
+
+        restartServers();
+        writSomeData();
+
+        MainThread firstServer = servers.mt[0];
+
+        // As started servers two times, current epoch must be two
+        long currentEpoch = firstServer.getQuorumPeer().getCurrentEpoch();
+        assertEquals(2, currentEpoch);
+
+        // Initialize files for later use
+        File snapDir = firstServer.getQuorumPeer().getTxnFactory().getSnapDir();
+        File currentEpochFile = new File(snapDir, QuorumPeer.CURRENT_EPOCH_FILENAME);
+        File currentEpochTempFile = new File(snapDir,
+            QuorumPeer.CURRENT_EPOCH_FILENAME + AtomicFileOutputStream.TMP_EXTENSION);
+
+        // Shutdown servers
+        servers.shutDownAllServers();
+        waitForAll(servers, ZooKeeper.States.CONNECTING);
+
+        // Create scenario of file currentEpoch.tmp rename to currentEpoch failure.
+        // In this case currentEpoch file will have old epoch and currentEpoch.tmp will have the latest epoch
+        FileUtils.write(currentEpochFile, Long.toString(currentEpoch - 1), ""UTF-8"");
+        FileUtils.write(currentEpochTempFile, Long.toString(currentEpoch), ""UTF-8"");
+
+        // Restart the serves, all serves should restart successfully.
+        servers.restartAllServersAndClients(this);
+
+        // Check the first server where problem was injected.
+        assertTrue(ClientBase
+                .waitForServerUp(""127.0.0.1:"" + firstServer.getClientPort(), CONNECTION_TIMEOUT),
+            ""server "" + firstServer.getMyid()
+                + "" is not up as file currentEpoch.tmp rename to currentEpoch file was failed""
+                + "" which lead current epoch inconsistent state."");
+    }
+
+    private void restartServers() throws InterruptedException, IOException {
+        servers.shutDownAllServers();
+        waitForAll(servers, ZooKeeper.States.CONNECTING);
+        servers.restartAllServersAndClients(this);
+        waitForAll(servers, ZooKeeper.States.CONNECTED);
+    }
+
+    private void writSomeData() throws Exception {

Review comment:
       Corrected




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 05:40;githubbot;600","arshadmohammad commented on a change in pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664#discussion_r604609197



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CurrentEpochWriteFailureTest.java
##########
@@ -0,0 +1,129 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+import org.apache.commons.io.FileUtils;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.common.AtomicFileOutputStream;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;

Review comment:
       After these changes, I run the test class with command ""mvn clean test -Dtest=CurrentEpochWriteFailureTest -DfailIfNoTests=false""
   It run successfully.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 05:44;githubbot;600","asfgit closed pull request #1664:
URL: https://github.com/apache/zookeeper/pull/1664


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 21:21;githubbot;600","arshadmohammad commented on pull request #1668:
URL: https://github.com/apache/zookeeper/pull/1668#issuecomment-811474915


   Merged


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 21:23;githubbot;600","arshadmohammad closed pull request #1668:
URL: https://github.com/apache/zookeeper/pull/1668


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/21 21:23;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1653,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Mar 31 21:25:22 UTC 2021,,,,,,,,,,"0|z0pbkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Mar/21 21:23;arshad.mohammad;Issue resolved by pull request 1668
[https://github.com/apache/zookeeper/pull/1668];;;","31/Mar/21 21:25;arshad.mohammad;Thanks [~eolivelli], [~ztzg] for the reviews.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix check-style issues,ZOOKEEPER-4267,13368305,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,29/Mar/21 07:42,05/Dec/21 02:58,13/Jul/23 09:08,30/Mar/21 11:39,,,,,,,,,,3.6.3,3.8.0,,,,,,,,0,pull-request-available,,"Currently there check-style issues reported in following files which need to be fixed 
{noformat}
org.apache.zookeeper.common.CertificatesToPlayWith
org.apache.zookeeper.server.quorum.QuorumPeerMainTest
{noformat}
Because of these issues checkstyle:check check is failing in all the branches

 ",,arshad.mohammad,eolivelli,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663


   Formatted ZKHostnameVerifierTest to fix check-style issue :(whitespace) OperatorWrap: '+' should be on a new line
   Formatted one line in QuorumPeerMainTest to fix check-style issue: (whitespace) ParenPad: '(' is followed by whitespace


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 08:01;githubbot;600","eolivelli commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-809956567


   why CI passed on all of the other patches ?
   we are running checkstyle against every GitHub PR validation


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 06:42;githubbot;600","arshadmohammad commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810028475


   > why CI passed on all of the other patches ?
   > we are running checkstyle against every GitHub PR validation
   
   May be CI is using different check-style rule set. I will try to find it out
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 08:32;githubbot;600","arshadmohammad commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810098037


   CertificatesToPlayWith check-style  issues are suppressed, somehow my environment suppress is not effective. Master branch has checkstyle issues only in this branch. So master ci is not failing because this suppression


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 10:13;githubbot;600","arshadmohammad commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810100667


   QuorumPeerMainTest has check-style issue only in branch-3.6. CI is not failing as for branch-3.6 CI is running on master
   
   ![image](https://user-images.githubusercontent.com/5720433/112973572-1e427000-916f-11eb-8549-4bd9f0ab2dfc.png)
   
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 10:17;githubbot;600","arshadmohammad edited a comment on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810098037


   CertificatesToPlayWith check-style  issues are suppressed, somehow my environment suppress is not effective. Master branch has checkstyle issues only in this class. So master ci is not failing because  the suppression


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 10:19;githubbot;600","arshadmohammad commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810105884


   CertificatesToPlayWith changes are fixable, better to fix it. I will remove the suppression from checkstyleSuppressions.xml


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 10:24;githubbot;600","arshadmohammad commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810115590


   @eolivelli, have made changes after your approval, please review again.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 10:40;githubbot;600","arshadmohammad edited a comment on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810115590


   @eolivelli, 
   I have made changes after your approval, please review again.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 10:40;githubbot;600","eolivelli commented on pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663#issuecomment-810151135


   merged to branch-3.6


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 11:39;githubbot;600","eolivelli closed pull request #1663:
URL: https://github.com/apache/zookeeper/pull/1663


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 11:39;githubbot;600","arshadmohammad opened a new pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   Formatted CertificatesToPlayWith to fix check-style issue :(whitespace) OperatorWrap: '+' should be on a new line


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 11:40;githubbot;600","eolivelli closed pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 11:40;githubbot;600","eolivelli commented on pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662#issuecomment-810151665


   closing and reopening to trigger a new build on ASF Jenkins 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/21 11:40;githubbot;600","maoling closed pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Nov/21 11:15;githubbot;600","arshadmohammad opened a new pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   Formatted CertificatesToPlayWith to fix check-style issue :(whitespace) OperatorWrap: '+' should be on a new line


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Nov/21 11:15;githubbot;600","maoling commented on pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662#issuecomment-983556243


   If no other concerns, I'll merge it at this weekend(12-05).


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Dec/21 11:39;githubbot;600","maoling closed pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Dec/21 11:54;githubbot;600","arshadmohammad opened a new pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   Formatted CertificatesToPlayWith to fix check-style issue :(whitespace) OperatorWrap: '+' should be on a new line


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Dec/21 11:54;githubbot;600","asfgit closed pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/21 02:54;githubbot;600","maoling commented on pull request #1662:
URL: https://github.com/apache/zookeeper/pull/1662#issuecomment-986156862


   - @arshadmohammad Thanks for your contribution.
   -  All the CI check had passed. Cc @eolivelli 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/21 02:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12600,,,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,,,"30/Mar/21 10:04;arshad.mohammad;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13023170/screenshot-1.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 30 11:39:20 UTC 2021,,,,,,,,,,"0|z0pbc8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Mar/21 10:04;arshad.mohammad; !screenshot-1.png! ;;;","30/Mar/21 10:07;arshad.mohammad;Even though issues in CertificatesToPlayWith.java are suppressed
{noformat}
<suppress files=""zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith\.java"" checks=""OperatorWrap|ModifierOrder""/>{noformat}
Somehow not honored in my environment.

As these issues are fixable, better to fix it ;;;","30/Mar/21 11:39;eolivelli;Issue resolved by pull request 1663
[https://github.com/apache/zookeeper/pull/1663];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Correct ZooKeeper version in documentation header,ZOOKEEPER-4266,13368222,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,28/Mar/21 16:54,03/Apr/21 18:26,13/Jul/23 09:08,03/Apr/21 11:44,,,,,,,,,,3.7.1,3.8.0,,,,documentation,,,,0,pull-request-available,,"Both Master and branch-3.7 documentation header have ZooKeeper version as 3.6.
 These should be changed to 3.8 and 3.7 for master and branch-3.7 respectively

Master documentation currently:
 !image-2021-03-28-22-25-39-949.png!",,arshad.mohammad,ztzg,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1659:
URL: https://github.com/apache/zookeeper/pull/1659


   Changed version from 3.6 to 3.8


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/21 17:01;githubbot;600","arshadmohammad opened a new pull request #1660:
URL: https://github.com/apache/zookeeper/pull/1660


   Changed version from 3.6 to 3.7


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/21 17:04;githubbot;600","ztzg closed pull request #1659:
URL: https://github.com/apache/zookeeper/pull/1659


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/21 11:43;githubbot;600","ztzg commented on pull request #1660:
URL: https://github.com/apache/zookeeper/pull/1660#issuecomment-812906515


   Now in `branch-3.7`.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/21 18:26;githubbot;600","ztzg closed pull request #1660:
URL: https://github.com/apache/zookeeper/pull/1660


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/21 18:26;githubbot;600","ztzg commented on pull request #1659:
URL: https://github.com/apache/zookeeper/pull/1659#issuecomment-812906586


   Now in `master`; thanks!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/21 18:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/21 16:53;arshad.mohammad;image-2021-03-28-22-25-39-949.png;https://issues.apache.org/jira/secure/attachment/13023073/image-2021-03-28-22-25-39-949.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Apr 03 11:44:31 UTC 2021,,,,,,,,,,"0|z0pats:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/21 11:44;ztzg;Issue resolved by pull requests
[https://github.com/apache/zookeeper/pull/1659] and
[https://github.com/apache/zookeeper/pull/1660];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Download page broken links,ZOOKEEPER-4265,13368217,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,sebb,sebb,28/Mar/21 15:34,13/Apr/21 07:09,13/Jul/23 09:08,10/Apr/21 17:57,,,,,,,,,,3.7.1,3.8.0,,,,,,,,0,pull-request-available,,"The download page [1] has broken links for the following release versions:

3.6.1
3.5.9

Please remove them from the page.
If necessary, they can be linked from the archive server, in which case the page should make it clear that they historic releases.

[1] https://zookeeper.apache.org/releases.html",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677


   The 3.5.9 release is not very old, but it ""disappeared"" from download mirrors when I updated the `zookeeper_dist` repository for 3.7.0.  The same thing happened to 3.6.1 a while ago.
   
   This commit removes 3.6.1 from the releases page, as 3.6.2 is a straightforward upgrade.
   
   It changes the 3.5.9 entries to point to the archive, as that release has not been declared EOL at this point.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 08:00;githubbot;600","ztzg commented on pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#issuecomment-815545686


   Cc: @arshadmohammad, as you will probably be the next person to update that page :)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 08:01;githubbot;600","ztzg commented on pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#issuecomment-815547121


   @nkalmar, @eolivelli: I am of course not against restoring 3.5.9 in `zookeeper_dist` if you think it makes more sense.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 08:03;githubbot;600","arshadmohammad commented on a change in pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#discussion_r609541741



##########
File path: src/main/resources/markdown/releases.md
##########
@@ -42,18 +42,15 @@ Older releases are available.
 
 [Apache ZooKeeper 3.6.2 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.sha512))
 
-### Apache ZooKeeper 3.6.1
-
-[Apache ZooKeeper 3.6.1](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.sha512))
-
-[Apache ZooKeeper 3.6.1 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.sha512))
+### Apache ZooKeeper 3.5.9
 
+ZooKeeper 3.5.9 is only downloadable from the archive as the 3.6 and 3.7 branches are now `stable` and `current`, respectively.

Review comment:
       >> the 3.6 and 3.7 branches are now `stable` and `current`, respectively.
   
   This is correct.
   
   But in the starting of this file it is written that ""Apache ZooKeeper 3.7.0 is our latest stable release"". is this statement just a carry forward from previous release or there is some thought behind declaring 3.7.0 as stable release
   
   I think ""Apache ZooKeeper 3.7.0 is our latest stable release"" to be changed to ""Apache ZooKeeper 3.7.0 is our current release"" and later based on usage and feedback of 3.7.0 we can change 3.7.x as stable release.
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 10:16;githubbot;600","arshadmohammad commented on a change in pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#discussion_r609541741



##########
File path: src/main/resources/markdown/releases.md
##########
@@ -42,18 +42,15 @@ Older releases are available.
 
 [Apache ZooKeeper 3.6.2 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.sha512))
 
-### Apache ZooKeeper 3.6.1
-
-[Apache ZooKeeper 3.6.1](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.sha512))
-
-[Apache ZooKeeper 3.6.1 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.sha512))
+### Apache ZooKeeper 3.5.9
 
+ZooKeeper 3.5.9 is only downloadable from the archive as the 3.6 and 3.7 branches are now `stable` and `current`, respectively.

Review comment:
       >> the 3.6 and 3.7 branches are now `stable` and `current`, respectively.
   
   This is correct.
   
   But in the starting of this file it is written that ""Apache ZooKeeper 3.7.0 is our latest stable release"". is this statement just a carry forward from previous release or there is some thought behind declaring 3.7.0 as stable release
   
   do you think ""Apache ZooKeeper 3.7.0 is our latest stable release"" should be changed to ""Apache ZooKeeper 3.7.0 is our current release"" and later based on usage and feedback of 3.7.0 we can change 3.7.x as stable release.
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 10:26;githubbot;600","sebbASF commented on pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#issuecomment-815673298


   It looks like the 3.6 and 3.7 branches are both currently being developed.
   
   If so, the latest version of each should be on the mirrors, and should be above the line separating them from older releases.
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 11:10;githubbot;600","ztzg commented on a change in pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#discussion_r609618882



##########
File path: src/main/resources/markdown/releases.md
##########
@@ -42,18 +42,15 @@ Older releases are available.
 
 [Apache ZooKeeper 3.6.2 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.sha512))
 
-### Apache ZooKeeper 3.6.1
-
-[Apache ZooKeeper 3.6.1](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.sha512))
-
-[Apache ZooKeeper 3.6.1 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.sha512))
+### Apache ZooKeeper 3.5.9
 
+ZooKeeper 3.5.9 is only downloadable from the archive as the 3.6 and 3.7 branches are now `stable` and `current`, respectively.

Review comment:
       Good point.  That sentence was just carried forward when I switched the versions in the release notes, and I certainly agree that it is a bit early to declare 3.7 stable compared to 3.6.  How about the updated patch?  (It implements your suggestion, but I have also moved 3.6 above the separator line.)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 11:59;githubbot;600","ztzg commented on pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#issuecomment-815727475


   > It looks like the 3.6 and 3.7 branches are both currently being developed.
   
   Indeed.
   
   > If so, the latest version of each should be on the mirrors
   
   Right.  (And that is indeed the case, unless I missed something.)
   
   > and should be above the line separating them from older releases.
   
   Good point; I have moved 3.6.2 back ""above the fold.""


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 12:06;githubbot;600","eolivelli commented on a change in pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#discussion_r609636457



##########
File path: src/main/resources/markdown/releases.md
##########
@@ -42,18 +42,15 @@ Older releases are available.
 
 [Apache ZooKeeper 3.6.2 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.sha512))
 
-### Apache ZooKeeper 3.6.1
-
-[Apache ZooKeeper 3.6.1](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.sha512))
-
-[Apache ZooKeeper 3.6.1 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.sha512))
+### Apache ZooKeeper 3.5.9
 
+ZooKeeper 3.5.9 is only downloadable from the archive as the 3.6 and 3.7 branches are now `stable` and `current`, respectively.

Review comment:
       I am not sure we should delete 3.5.9 from the ""dist"", it is an active release line.
   if we want to change this fact we should open a discussion on dev@
   
   Good catch and good points @ztzg @arshadmohammad 

##########
File path: src/main/resources/markdown/releases.md
##########
@@ -42,18 +42,15 @@ Older releases are available.
 
 [Apache ZooKeeper 3.6.2 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.sha512))
 
-### Apache ZooKeeper 3.6.1
-
-[Apache ZooKeeper 3.6.1](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.sha512))
-
-[Apache ZooKeeper 3.6.1 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.sha512))
+### Apache ZooKeeper 3.5.9
 
+ZooKeeper 3.5.9 is only downloadable from the archive as the 3.6 and 3.7 branches are now `stable` and `current`, respectively.

Review comment:
       We have currently 3 active branches/release lines:
   - 3.5
   - 3.6
   - 3.7
   
   I am not sure we should say much here.
   
   we just have to give the links to binary/sources for the latest release of 3.5,3.6 and 3.7, so 3.5.9, 3.6.2, 3.7.0
   
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 12:21;githubbot;600","ztzg commented on a change in pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#discussion_r609650060



##########
File path: src/main/resources/markdown/releases.md
##########
@@ -42,18 +42,15 @@ Older releases are available.
 
 [Apache ZooKeeper 3.6.2 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2.tar.gz.sha512))
 
-### Apache ZooKeeper 3.6.1
-
-[Apache ZooKeeper 3.6.1](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz.sha512))
-
-[Apache ZooKeeper 3.6.1 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1.tar.gz.sha512))
+### Apache ZooKeeper 3.5.9
 
+ZooKeeper 3.5.9 is only downloadable from the archive as the 3.6 and 3.7 branches are now `stable` and `current`, respectively.

Review comment:
       Well, I removed 3.5.9 from the ""dist"" (as per the instructions, not because I have something against it :) when I prepared 3.7.0.  I guess I should restore it in SVN, which will in turn cause it to be mirrored again?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/21 12:36;githubbot;600","ztzg commented on pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#issuecomment-817104364


   @arshadmohammad, @eolivelli, @sebbASF: PTAL.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/21 09:03;githubbot;600","ztzg closed pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/21 18:03;githubbot;600","ztzg commented on pull request #1677:
URL: https://github.com/apache/zookeeper/pull/1677#issuecomment-817179827


   Thanks; now merged in branch `website`; `asf-site` regenerated & pushed.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/21 18:03;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Apr 10 17:57:56 UTC 2021,,,,,,,,,,"0|z0paso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Apr/21 08:05;ztzg;[~sebb]: Thank you for the report.  You might want to take a look at https://github.com/apache/zookeeper/pull/1677.;;;","10/Apr/21 17:57;ztzg;Issue resolved by pull request 1677
[https://github.com/apache/zookeeper/pull/1677];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-3911 to branch-3.5 (Data inconsistency caused by DIFF sync uncommitted log),ZOOKEEPER-4262,13367835,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,,fanyang,fanyang,26/Mar/21 11:35,18/May/22 12:46,13/Jul/23 09:08,21/Apr/21 17:20,,,,,,,,,,3.5.10,,,,,server,,,,0,pull-request-available,,"Backporting ZOOKEEPER-3911 to branch-3.5

 ",,fanyang,ztzg,,,,,,,,,,,,,,,,,,"fanyang89 opened a new pull request #1655:
URL: https://github.com/apache/zookeeper/pull/1655


   ZOOKEEPER-3911 requires ZOOKEEPER-3240 to pass the unit test.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/21 11:48;githubbot;600","anmolnar commented on pull request #1655:
URL: https://github.com/apache/zookeeper/pull/1655#issuecomment-808795773


   @fanyang89 3.5.9 has already been released. If you want to backport these patches to the next 3.5 release, please open pull request for branch-3.5. Thanks.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 20:10;githubbot;600","anmolnar closed pull request #1655:
URL: https://github.com/apache/zookeeper/pull/1655


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 20:11;githubbot;600","fanyang89 opened a new pull request #1657:
URL: https://github.com/apache/zookeeper/pull/1657


   [ZOOKEEPER-3911 - Data inconsistency caused by DIFF sync uncommitted log](https://issues.apache.org/jira/browse/ZOOKEEPER-3911)
   [ZOOKEEPER-3240 - Close socket on Learner shutdown to avoid dangling socket](https://issues.apache.org/jira/browse/ZOOKEEPER-3240)
   
   ZOOKEEPER-3911 requires ZOOKEEPER-3240 to pass the unit test.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/21 01:02;githubbot;600","ztzg commented on pull request #1657:
URL: https://github.com/apache/zookeeper/pull/1657#issuecomment-824228657


   Now in branch `branch-3.5`.  Thank you, @fanyang89!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 17:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Apr 21 17:20:49 UTC 2021,,,,,,,,,,"0|z0p8h4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Apr/21 17:20;ztzg;Issue resolved by pull request 1657
[https://github.com/apache/zookeeper/pull/1657];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-3575 to branch-3.6,ZOOKEEPER-4260,13367375,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,functioner,functioner,24/Mar/21 22:39,29/Mar/21 16:20,13/Jul/23 09:08,29/Mar/21 16:18,3.6.2,,,,,,,,,3.6.3,,,,,server,,,,0,pull-request-available,,ZOOKEEPER-3575 is not available in branch-3.6. The fix of ZOOKEEPER-4074 requires it.,,arshad.mohammad,functioner,,,,,,,,,,,,,,,,,,"functioner opened a new pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653


   (cherry picked from commit 7c1251dbcf6a314466024f71ae5757bde34bb3fd)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/21 22:56;githubbot;600","muse-dev[bot] commented on a change in pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#discussion_r600932669



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -152,13 +165,27 @@ void validateSession(ServerCnxn cnxn, long clientId, int timeout) throws IOExcep
     }
 
     /**
-     * write a packet to the leader
+     * write a packet to the leader.
+     *
+     * This method is called by multiple threads. We need to make sure that only one thread is writing to leaderOs at a time.
+     * When packets are sent synchronously, writing is done within a synchronization block.
+     * When packets are sent asynchronously, sender.queuePacket() is called, which writes to a BlockingQueue, which is thread-safe.
+     * Reading from this BlockingQueue and writing to leaderOs is the learner sender thread only.
+     * So we have only one thread writing to leaderOs at a time in either case.
      *
      * @param pp
      *                the proposal packet to be sent to the leader
      * @throws IOException
      */
     void writePacket(QuorumPacket pp, boolean flush) throws IOException {
+        if (asyncSending) {
+            sender.queuePacket(pp);
+        } else {
+            writePacketNow(pp, flush);
+        }
+    }
+
+    void writePacketNow(QuorumPacket pp, boolean flush) throws IOException {
         synchronized (leaderOs) {

Review comment:
       *THREAD_SAFETY_VIOLATION:*  Read/Write race. Non-private method `Learner.writePacketNow(...)` reads without synchronization from `this.leaderOs`. Potentially races with write in method `Learner.connectToLeader(...)`.
    Reporting because this access may occur on a background thread.
   (at-me [in a reply](https://docs.muse.dev/docs/talk-to-muse/) with `help` or `ignore`)




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/21 23:09;githubbot;600","functioner commented on a change in pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#discussion_r600939750



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -152,13 +165,27 @@ void validateSession(ServerCnxn cnxn, long clientId, int timeout) throws IOExcep
     }
 
     /**
-     * write a packet to the leader
+     * write a packet to the leader.
+     *
+     * This method is called by multiple threads. We need to make sure that only one thread is writing to leaderOs at a time.
+     * When packets are sent synchronously, writing is done within a synchronization block.
+     * When packets are sent asynchronously, sender.queuePacket() is called, which writes to a BlockingQueue, which is thread-safe.
+     * Reading from this BlockingQueue and writing to leaderOs is the learner sender thread only.
+     * So we have only one thread writing to leaderOs at a time in either case.
      *
      * @param pp
      *                the proposal packet to be sent to the leader
      * @throws IOException
      */
     void writePacket(QuorumPacket pp, boolean flush) throws IOException {
+        if (asyncSending) {
+            sender.queuePacket(pp);
+        } else {
+            writePacketNow(pp, flush);
+        }
+    }
+
+    void writePacketNow(QuorumPacket pp, boolean flush) throws IOException {
         synchronized (leaderOs) {

Review comment:
       If `learner.asyncSending` is not set, all `QuorumPacket` will be sent in this `writePacketNow` method.
   If `learner.asyncSending` is set, all `QuorumPacket` will be sent in the `LearnerSender` thread, which doesn't need the synchronization.
   Therefore, there wouldn't be potential race.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/21 23:27;githubbot;600","arshadmohammad commented on pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#issuecomment-808922810


   Please include the latest changes done in PR https://github.com/apache/zookeeper/pull/1645.
   Also add the documentation for learner.asyncSending property


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/21 16:46;githubbot;600","functioner commented on pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#issuecomment-809038276


   @arshadmohammad I cherry-pick #1645. Some configurations are not available in branch-3.6 so I do not include them.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 03:22;githubbot;600","arshadmohammad commented on a change in pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#discussion_r603098693



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerHandler.java
##########
@@ -49,6 +49,7 @@
 import org.apache.zookeeper.server.quorum.Leader.Proposal;
 import org.apache.zookeeper.server.quorum.QuorumPeer.LearnerType;
 import org.apache.zookeeper.server.quorum.auth.QuorumAuthServer;
+import org.apache.zookeeper.server.util.ConfigUtils;

Review comment:
       This is unused import. remove it




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 08:22;githubbot;600","arshadmohammad commented on pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#issuecomment-809179189


   Other than minor import issues, changes Looks good to me. @functioner please correct the import


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 08:24;githubbot;600","arshadmohammad closed pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 16:20;githubbot;600","arshadmohammad commented on pull request #1653:
URL: https://github.com/apache/zookeeper/pull/1653#issuecomment-809518628


   Merged


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 16:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 29 16:18:49 UTC 2021,,,,,,,,,,"0|z0p5mw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Mar/21 16:18;arshad.mohammad;Issue resolved by pull request 1653
[https://github.com/apache/zookeeper/pull/1653];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE while processing message from restarted quorum member,ZOOKEEPER-4247,13364060,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,TheDevarshiShah,TheDevarshiShah,12/Mar/21 08:49,19/Apr/21 08:00,13/Jul/23 09:08,14/Apr/21 16:56,3.6.2,,,,,,,,,3.6.4,3.7.1,3.8.0,,,server,,,,1,pull-request-available,,"*Problem:*

While upgrading K8S cluster, container running Zookeeper (during serving it's client) will rollover one by one.
 During this rollover, +Null Pointer Exception+ was observed as below.
 After updating to the latest Zookeeper 3.6.2 we still see the problem.
 This is happening on a fresh install (and has all the time).

 

*Stack-trace**:*

<from zk-pod-0-log>
{code:java}
2021-02-08T12:42:08.229+0000 [myid:] - ERROR [nioEventLoopGroup-4-1:NettyServerCnxnFactory$CnxnChannelHandler@329] - Unexpected exception in receive
 java.lang.NullPointerException: null
         at org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:518) ~[zookeeper-3.6.2.jar:3.6.2]
         at org.apache.zookeeper.server.NettyServerCnxn.processMessage(NettyServerCnxn.java:368) ~[zookeeper-3.6.2.jar:3.6.2]
         at org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.channelRead(NettyServerCnxnFactory.java:326) [zookeeper-3.6.2.jar:3.6.2]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
         at java.lang.Thread.run(Thread.java:834) [?:?]
{code}
 

 

*Expectation:*

This scenario should be handled and Zookeeper should not print Null Pointer Exception in logs when peer member goes down as a part of the upgrade procedure. 

We are kindly requesting Apache Zookeeper team to fix this issue.",K8S,symat,,,,,,,,,,,,,,,,,,,"symat opened a new pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681


   When a ZooKeeper server realizes that an other quorum peer was shut down (e.g. during a rolling upgrade or
   rolling restart), the ServerCnxn.zkServer variable is set to null by QuorumPear.close(). This is why in the code
   we usually check the zkServer variable before using it. But this check was missing in one place thus causing 
   NPE in NettyServerCnx.receiveMessage:
   
   ```
   2021-02-08T12:42:08.229+0000 [myid:] - ERROR 
   [nioEventLoopGroup-4-1:NettyServerCnxnFactory$CnxnChannelHandler@329]- Unexpected exception in receive
    java.lang.NullPointerException: null ~[zookeeper-3.6.2.jar:3.6.2]
    at org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:518) 
    at org.apache.zookeeper.server.NettyServerCnxn.processMessage(NettyServerCnxn.java:368) 
    at org.apache.zookeeper.server.NettyServerCnxnFactory
           $CnxnChannelHandler.channelRead(NettyServerCnxnFactory.java:326)
   ...
   ```
   
   In this commit we add the necessary check and (after throwing an IOException) we will basically ignore the 
   processing of the received message when the remote ZooKeeper server is already down.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 07:40;githubbot;600","symat commented on pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#issuecomment-817568630


   I think we should cherry-pick this small bugfix to all active branches.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 07:40;githubbot;600","arshadmohammad commented on a change in pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#discussion_r611499234



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -520,8 +520,12 @@ private void receiveMessage(ByteBuf message) {
                         if (len < 0 || len > BinaryInputArchive.maxBuffer) {
                             throw new IOException(""Len error "" + len);
                         }
-                        // checkRequestSize will throw IOException if request is rejected
-                        zkServer.checkRequestSizeWhenReceivingMessage(len);
+                        if (zkServer == null || !zkServer.isRunning()) {
+                            throw new IOException(""ZK down"");
+                        } else {

Review comment:
       can we move `zkServer.checkRequestSizeWhenReceivingMessage(len);` out of else block  and remove the else block.
   otherwise logically there are more statements which should be in else block
   




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 10:10;githubbot;600","symat commented on a change in pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#discussion_r611618896



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -520,8 +520,12 @@ private void receiveMessage(ByteBuf message) {
                         if (len < 0 || len > BinaryInputArchive.maxBuffer) {
                             throw new IOException(""Len error "" + len);
                         }
-                        // checkRequestSize will throw IOException if request is rejected
-                        zkServer.checkRequestSizeWhenReceivingMessage(len);
+                        if (zkServer == null || !zkServer.isRunning()) {
+                            throw new IOException(""ZK down"");
+                        } else {

Review comment:
       yeah, it is cleaner without the else block, I agree. And functionally equivalent. Thanks! I pushed a new commit.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 13:17;githubbot;600","arshadmohammad commented on a change in pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#discussion_r611642449



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -520,6 +520,9 @@ private void receiveMessage(ByteBuf message) {
                         if (len < 0 || len > BinaryInputArchive.maxBuffer) {
                             throw new IOException(""Len error "" + len);
                         }
+                        if (zkServer == null || !zkServer.isRunning()) {
+                            throw new IOException(""ZK down"");
+                        }

Review comment:
       sorry I missed in previous review, I think it is better to handle the same way as it is handled in `NIOServerCnxn` to be consistent with all types of connections
   ```
   if (!isZKServerRunning()) {
         throw new IOException(""ZooKeeperServer not running"");
     }
   ```




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 13:45;githubbot;600","symat commented on a change in pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#discussion_r611652247



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -520,6 +520,9 @@ private void receiveMessage(ByteBuf message) {
                         if (len < 0 || len > BinaryInputArchive.maxBuffer) {
                             throw new IOException(""Len error "" + len);
                         }
+                        if (zkServer == null || !zkServer.isRunning()) {
+                            throw new IOException(""ZK down"");
+                        }

Review comment:
       actually I would prefer to use the following approach, copied from an other part of this function: https://github.com/apache/zookeeper/blob/7fdadf7273f34dd0552db25a3771cf55b65e9208/zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java#L475-L478
   
   This way we kind of ""save"" the reference of `zkServer` to an other variable and if `zkServer` becomes null right after we did the check, we are still in a safe spot. Although the final solution would be to use locks and not allowing to use/modify `zkServer` paralelly from multiple threads... But that would be a more serious refactoring.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 13:57;githubbot;600","symat commented on a change in pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#discussion_r611653116



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -520,6 +520,9 @@ private void receiveMessage(ByteBuf message) {
                         if (len < 0 || len > BinaryInputArchive.maxBuffer) {
                             throw new IOException(""Len error "" + len);
                         }
+                        if (zkServer == null || !zkServer.isRunning()) {
+                            throw new IOException(""ZK down"");
+                        }

Review comment:
       I just pushed a new commit, what do you think?




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 13:58;githubbot;600","arshadmohammad commented on a change in pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#discussion_r611659277



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -520,6 +520,9 @@ private void receiveMessage(ByteBuf message) {
                         if (len < 0 || len > BinaryInputArchive.maxBuffer) {
                             throw new IOException(""Len error "" + len);
                         }
+                        if (zkServer == null || !zkServer.isRunning()) {
+                            throw new IOException(""ZK down"");
+                        }

Review comment:
       Great!




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 14:05;githubbot;600","arshadmohammad commented on pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#issuecomment-817841943


   I will merge this PR after 3.6.3 release.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 14:06;githubbot;600","symat commented on pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681#issuecomment-817865344


   > I will merge this PR after 3.6.3 release.
   
   Thank you @arshadmohammad !
   
   Also thanks for the comments and quick review for both you and @eolivelli !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/21 14:35;githubbot;600","asfgit closed pull request #1681:
URL: https://github.com/apache/zookeeper/pull/1681


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Apr/21 16:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Apr 19 08:00:38 UTC 2021,,,,,,,,,,"0|z0olag:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Mar/21 09:13;symat;thanks [~TheDevarshiShah] for reporting the issue!

looks like the server is trying to process an incomming message before the zkServer object would be initialized.

[https://github.com/apache/zookeeper/blob/803c7f1a12f85978cb049af5e4ef23bd8b688715/zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java#L518]

Before this line, I think we should check if zkServer is null. If it is null, then we should either
 * ignore the message
 * or throw an IOException + close the connection

I'm not sure which of the above solution is the better. Whoever is doing this fix, she/he should think this through and also write some tests (which can be tricky, as this can be some race condition triggered for some reason in kubernetes).

Unfortunately I don't have free cycles at the moment, but I hope someone else has.;;;","12/Mar/21 14:22;TheDevarshiShah;Hi [~symat] ,


Thanks for your valuable explanation!

 

For the fixes you suggests:
 1. +Ignoring the message+:

We do not want to see such exceptions in logs because this is just a standard upgrade procedure we are following.

 

2. +Throw IOException + Close Connection+:

On/after this fix from Apache Zookeeper, we assume and hope that it'll not print such exception in the logs.

 

3. +Race Condition can be triggered in Kubernetes+:

We are running a standard container using linux OS and we have just copied Zookeeper's tar.gz and running Zookeeper as _start-foreground_ option. During upgrade, kubernetes sends the termination signal and as part of that termination signal, the process goes down. 

 

Thanks & Regards,

Devarshi Shah;;;","12/Mar/21 14:47;symat;sorry, what I wrote was misleading...  by ""Ignoring the message"" I didn't mean you should ignore the exception in the logs :)

I meant that ignoring the RPC message we process in the code and not printing any exception. So in the code, if zkServer==null, then simply not calling the ""zkServer.checkRequestSizeWhenReceivingMessage(len);"" method (which throws the exception now). ;;;","26/Mar/21 06:55;TheDevarshiShah;Hi Team, 



Is there any update on this issue? Can we get more insight / work around regarding the issue? Is Apache Zookeeper planning to fix the issue in next version?

_(Thank you_ [~symat] _for your explanation!)_
 

Thanks & Regards,
Devarshi;;;","05/Apr/21 06:05;TheDevarshiShah;Hi Team, 


Is there any update on this issue? Can we get more insight / work around regarding the issue? Is Apache Zookeeper planning to fix the issue in next version?
 

Thanks & Regards,
Devarshi;;;","08/Apr/21 06:39;TheDevarshiShah;Hi Team,
 
 As per the Apache Zookeeper official website, the latest version 3.7.0 is released. Does this release version resolved the issue ?
 
Thanks & Regards,
 Devarshi;;;","08/Apr/21 06:40;TheDevarshiShah;Hi [~symat],
 
It will be very helpful if you have free cycle.
 
Thanks & Regards,
Devarshi;;;","12/Apr/21 06:10;TheDevarshiShah;Hi Team,
 
As per the Apache Zookeeper official website, the latest version 3.7.0 is released. Does this release version resolved the issue ?
 
([~symat] if you have free cycle, it will be very helpful.)
 
Thanks & Regards,
Devarshi;;;","12/Apr/21 06:21;symat;Hi [~TheDevarshiShah],

I try to fix it during this week.;;;","19/Apr/21 06:37;TheDevarshiShah;Hi [~symat] / [~arshad.mohammad] 
 
May we know the estimated date when Apache Zookeeper will release the (mentioned) fix versions *3.8.0, 3.7.1, 3.6.4* ?
 
Thanks & Regards,
Devarshi;;;","19/Apr/21 08:00;symat;I don't know about any plans for release dates... but you can try to ask this on the ZooKeeper user mail list.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Resource leaks in org.apache.zookeeper.server.persistence.SnapStream#getInputStream and #getOutputStream,ZOOKEEPER-4246,13363958,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,kelloggm,kelloggm,11/Mar/21 22:45,15/May/21 15:52,13/Jul/23 09:08,15/May/21 15:52,,,,,,,,,,,,,,,server,,,,0,pull-request-available,," There are three (related) possible resource leaks in the `getInputStream` and `getOutputStream` methods in `SnapStream.java`. I noticed the first because of the use of the error-prone `GZIPOutputStream`, and the other two after looking at the surrounding code.

Here is the offending code (copied from [here|https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/SnapStream.java#L102]):
{noformat}
    /**
     * Return the CheckedInputStream based on the extension of the fileName.
     *
     * @param file the file the InputStream read from
     * @return the specific InputStream
     * @throws IOException
     */
    public static CheckedInputStream getInputStream(File file) throws IOException {
        FileInputStream fis = new FileInputStream(file);
        InputStream is;
        switch (getStreamMode(file.getName())) {
        case GZIP:
            is = new GZIPInputStream(fis);
            break;
        case SNAPPY:
            is = new SnappyInputStream(fis);
            break;
        case CHECKED:
        default:
            is = new BufferedInputStream(fis);
        }
        return new CheckedInputStream(is, new Adler32());
    }

    /**
     * Return the OutputStream based on predefined stream mode.
     *
     * @param file the file the OutputStream writes to
     * @param fsync sync the file immediately after write
     * @return the specific OutputStream
     * @throws IOException
     */
    public static CheckedOutputStream getOutputStream(File file, boolean fsync) throws IOException {
        OutputStream fos = fsync ? new AtomicFileOutputStream(file) : new FileOutputStream(file);
        OutputStream os;
        switch (streamMode) {
        case GZIP:
            os = new GZIPOutputStream(fos);
            break;
        case SNAPPY:
            os = new SnappyOutputStream(fos);
            break;
        case CHECKED:
        default:
            os = new BufferedOutputStream(fos);
        }
        return new CheckedOutputStream(os, new Adler32());
    }
{noformat}

All three possible resource leaks are caused by the constructors of the intermediate streams (i.e. `is` and `os`), some of which might throw `IOException`s:
 * in `getOutputStream`, the call to `new GZIPOutputStream` can throw an exception, because `GZIPOutputStream` writes out the header in the constructor. If it does throw, then `fos` is never closed. That it does so makes it hard to use correctly; someone raised this as an issue with the JDK folks [here|https://bugs.openjdk.java.net/browse/JDK-8180899], but they closed it as ""won't fix"" because the constructor is documented to throw (hence the need to catch the exception here).
 * in `getInputStream`, the call to `new GZIPInputStream` can throw an `IOException` for a similar reason, causing the file handle held by `fis` to leak.
 * similarly, the call to `new SnappyInputStream` can throw an `IOException`, because it tries to read the file header during construction, which also causes `fis` to leak. `SnappyOutputStream` cannot throw; I checked [here|https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyOutputStream.java].

I'll submit a PR with a (simple) fix shortly after this bug report goes up and gets assigned an issue number, and add a link to this issue.",,kelloggm,,,,,,,,,,,,,,,,,,,"kelloggm opened a new pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638


   Bug report is here: https://issues.apache.org/jira/browse/ZOOKEEPER-4246
   
   This fix is simple: it just closes the possibly-leaked streams and re-throws the exception. We can't use a try-with-resources or a `finally` block here because in the happy case the resulting streams need to be returned open. I checked each of the other constructor calls in these methods, and none of the others can throw an exception as far as I can tell.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/21 22:50;githubbot;600","maoling commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-808859314


   @kelloggm  Looks reasonable.
   
   >  I noticed the first because of the use of the error-prone `GZIPOutputStream`, and the other two after looking at the surrounding code.
   
   Could you please show us how the `error-prone` complain about this?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/21 07:26;githubbot;600","kelloggm commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-809575037


   @maoling Sorry for the confusion. You asked:
   
   > Could you please show us how the error-prone complain about this?
   
   in reference to my comment:
   
   > I noticed the first because of the use of the error-prone GZIPOutputStream, and the other two after looking at the surrounding code.
   
   In this comment, I'm using ""error-prone"" as an [adjective](https://en.wiktionary.org/wiki/error-prone) - i.e. I'm saying that I think GZIPOutputStream is easy to use incorrectly. I did not intend to refer to [error-prone](https://github.com/google/error-prone), Google's code analysis tool. From your comment, it sounds like you understood me to mean that tool - sorry for the confusion! As far as I'm aware, that tool cannot find this bug, but I haven't run it on this code.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/21 17:39;githubbot;600","maoling commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-813008280


   @kelloggm Sorry for my misunderstanding for code analysis tool: `error-prone`. Do you observe this resource leaks in the production or just your code analysis? 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Apr/21 10:18;githubbot;600","anmolnar commented on a change in pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#discussion_r607945496



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/SnapStream.java
##########
@@ -104,10 +104,20 @@ public static CheckedInputStream getInputStream(File file) throws IOException {
         InputStream is;
         switch (getStreamMode(file.getName())) {
         case GZIP:
-            is = new GZIPInputStream(fis);
+            try {

Review comment:
       Put the entire block in a try-catch:
   ```java
   try {
           switch (getStreamMode(file.getName())) {
           case GZIP:
               is = new GZIPInputStream(fis);
               break;
           case SNAPPY:
               is = new SnappyInputStream(fis);
               break;
           case CHECKED:
           default:
               is = new BufferedInputStream(fis);
           }
           return new CheckedInputStream(is, new Adler32());
   } catch (IOException e) {
       fis.close();
       throw e;
   }
   ```




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/21 15:18;githubbot;600","kelloggm commented on a change in pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#discussion_r608080517



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/SnapStream.java
##########
@@ -104,10 +104,20 @@ public static CheckedInputStream getInputStream(File file) throws IOException {
         InputStream is;
         switch (getStreamMode(file.getName())) {
         case GZIP:
-            is = new GZIPInputStream(fis);
+            try {

Review comment:
       I've made this change. Would you all also prefer one `try` around the entire `switch` in the other method, where only one of the `case`s can throw? It would make the code look more symmetrical, but it's otherwise unnecessary.




-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/21 18:19;githubbot;600","kelloggm commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-814340351


   @maoling no worries, sorry again for the confusion
   
   > @kelloggm Sorry for my misunderstanding for code analysis tool: error-prone. Do you observe this resource leaks in the production or just your code analysis?
   
   I didn't encounter these in production, to be clear. I was already familiar with the [JDK bug](https://bugs.openjdk.java.net/browse/JDK-8180899) I linked in my bug report, and got suspicious when I saw GZIP was supported here so I looked at the code and noticed these.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/21 18:22;githubbot;600","kelloggm commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-829471452


   @anmolnar is there anything else you need from me on this PR? It's been a few weeks and I don't want it to be forgotten.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/21 17:59;githubbot;600","maoling commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-835781106


   Looking:)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/May/21 10:57;githubbot;600","maoling edited a comment on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-835781106


   LGTM.
   If no other concerns, I'll merge it at this weekend(05-15). Cc  @ztzg  @anmolnar  @kelloggm


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/May/21 15:23;githubbot;600","maoling closed pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/21 05:08;githubbot;600","kelloggm opened a new pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638


   Bug report is here: https://issues.apache.org/jira/browse/ZOOKEEPER-4246
   
   This fix is simple: it just closes the possibly-leaked streams and re-throws the exception. We can't use a try-with-resources or a `finally` block here because in the happy case the resulting streams need to be returned open. I checked each of the other constructor calls in these methods, and none of the others can throw an exception as far as I can tell.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/21 05:08;githubbot;600","asfgit closed pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/21 15:50;githubbot;600","maoling commented on pull request #1638:
URL: https://github.com/apache/zookeeper/pull/1638#issuecomment-841682958


   @kelloggm 
   Thanks for your contribution.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/May/21 15:51;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,ZOOKEEPER-4243,ZOOKEEPER-4245,ZOOKEEPER-4244,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Mar 11 22:50:31 UTC 2021,,,,,,,,,,"0|z0okns:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/21 22:50;kelloggm;link to PR with proposed fix: https://github.com/apache/zookeeper/pull/1638;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
InvalidSnapshotTest corrupts its own test data,ZOOKEEPER-4232,13362798,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,06/Mar/21 18:08,28/Mar/21 08:53,13/Jul/23 09:08,09/Mar/21 17:18,,,,,,,,,,3.5.10,3.6.3,3.7.0,3.8.0,,,,,,0,pull-request-available,,"{{InvalidSnapshotTest.testSnapshot}} starts an instance of {{ZooKeeperServer}} on the version-controlled {{invalidsnap}} directory, which, as a side-effect, ""fixes"" the following snapshot—which is broken on purpose (see ZOOKEEPER-367):

{{zookeeper-server/src/test/resources/data/invalidsnap/version-2/snapshot.83f}}

This status quo creates a number of problems:
 # It makes the test ineffective after the first run;
 # The file shows as modified in version control tools, which can be annoying;
 # The ""fixed"" snapshot can end up being committed by mistake, invalidating the test.

(#3 is not theoretical; that ""fixed"" snapshot frequently shows up in pull requests, and was recently merged into master.).",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1622:
URL: https://github.com/apache/zookeeper/pull/1622


   `InvalidSnapshotTest.testSnapshot` starts an instance of
   `ZooKeeperServer` on the version-controlled `resources/data/invalidsnap`
   directory, which, as a side-effect, \""fixes\"" the following
   snapshot—which was broken on purpose (see ZOOKEEPER-367):
   
   `zookeeper-server/src/test/resources/data/invalidsnap/version-2/snapshot.83f`
   
   This status quo creates a number of problems:
   
   1.  It makes the test ineffective after the first run;
   2.  The file shows as modified in version control tools, which can be
       annoying;
   3.  The \""fixed\"" snapshot can end up being committed by mistake,
       invalidating the test.
   
   (\#3 is not theoretical; that \""fixed\"" snapshot frequently shows up in
   pull requests, and was recently merged into master.).
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 18:30;githubbot;600","arshadmohammad commented on pull request #1622:
URL: https://github.com/apache/zookeeper/pull/1622#issuecomment-792875820


   Changes look good to me. Please raise PR for branches as well.
   You can raise PR for branch-3.7, I think that PR will apply on branch-3.6 and branch-3.5 also


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 16:25;githubbot;600","arshadmohammad edited a comment on pull request #1622:
URL: https://github.com/apache/zookeeper/pull/1622#issuecomment-792875820


   Changes look good to me. Please raise PR for other branches as well.
   You can raise PR for branch-3.7, I think that PR will apply on branch-3.6 and branch-3.5 also


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 10:07;githubbot;600","ztzg opened a new pull request #1627:
URL: https://github.com/apache/zookeeper/pull/1627


   `InvalidSnapshotTest.testSnapshot` starts an instance of
   `ZooKeeperServer` on the version-controlled `resources/data/invalidsnap`
   directory, which, as a side-effect, \""fixes\"" the following
   snapshot—which was broken on purpose (see ZOOKEEPER-367):
   
   `zookeeper-server/src/test/resources/data/invalidsnap/version-2/snapshot.83f`
   
   This status quo creates a number of problems:
   
   1.  It makes the test ineffective after the first run;
   2.  The file shows as modified in version control tools, which can be
       annoying;
   3.  The \""fixed\"" snapshot can end up being committed by mistake,
       invalidating the test.
   
   (\#3 is not theoretical; that \""fixed\"" snapshot frequently shows up in
   pull requests, and was recently merged into `master`.)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 10:26;githubbot;600","ztzg opened a new pull request #1628:
URL: https://github.com/apache/zookeeper/pull/1628


   `InvalidSnapshotTest.testSnapshot` starts an instance of
   `ZooKeeperServer` on the version-controlled `resources/data/invalidsnap`
   directory, which, as a side-effect, \""fixes\"" the following
   snapshot—which was broken on purpose (see ZOOKEEPER-367):
   
   `zookeeper-server/src/test/resources/data/invalidsnap/version-2/snapshot.83f`
   
   This status quo creates a number of problems:
   
   1.  It makes the test ineffective after the first run;
   2.  The file shows as modified in version control tools, which can be
       annoying;
   3.  The \""fixed\"" snapshot can end up being committed by mistake,
       invalidating the test.
   
   (\#3 is not theoretical; that \""fixed\"" snapshot frequently shows up in
   pull requests, and was recently merged into `master`.)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 10:27;githubbot;600","ztzg opened a new pull request #1629:
URL: https://github.com/apache/zookeeper/pull/1629


   `InvalidSnapshotTest.testSnapshot` starts an instance of
   `ZooKeeperServer` on the version-controlled `resources/data/invalidsnap`
   directory, which, as a side-effect, \""fixes\"" the following
   snapshot—which was broken on purpose (see ZOOKEEPER-367):
   
   `zookeeper-server/src/test/resources/data/invalidsnap/version-2/snapshot.83f`
   
   This status quo creates a number of problems:
   
   1.  It makes the test ineffective after the first run;
   2.  The file shows as modified in version control tools, which can be
       annoying;
   3.  The \""fixed\"" snapshot can end up being committed by mistake,
       invalidating the test.
   
   (\#3 is not theoretical; that \""fixed\"" snapshot frequently shows up in
   pull requests, and was recently merged into `master`.)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 10:28;githubbot;600","ztzg commented on pull request #1622:
URL: https://github.com/apache/zookeeper/pull/1622#issuecomment-793684555


   Thank you for the review, @arshadmohammad.
   
   > Changes look good to me. Please raise PR for other branches as well.
   > You can raise PR for branch-3.7, I think that PR will apply on branch-3.6 and branch-3.5 also
   
   No such luck, unfortunately!  JUnit's API churn gets in the way…  Anyway; here you are:
   
     * `master`: This PR;
     * `branch-3.7`, `branch-3.7.0`: https://github.com/apache/zookeeper/pull/1627;
     * `branch-3.6`: https://github.com/apache/zookeeper/pull/1628;
     * `branch-3.5`:   https://github.com/apache/zookeeper/pull/1629.
   
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 10:31;githubbot;600","asfgit closed pull request #1622:
URL: https://github.com/apache/zookeeper/pull/1622


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 14:23;githubbot;600","arshadmohammad commented on pull request #1628:
URL: https://github.com/apache/zookeeper/pull/1628#issuecomment-793971098


   Merged.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 14:29;githubbot;600","arshadmohammad closed pull request #1628:
URL: https://github.com/apache/zookeeper/pull/1628


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 14:29;githubbot;600","arshadmohammad commented on pull request #1627:
URL: https://github.com/apache/zookeeper/pull/1627#issuecomment-794117051


   ""CI / mvn (full-build-cppunit-tests"" failure seems not related to this PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 16:24;githubbot;600","arshadmohammad closed pull request #1629:
URL: https://github.com/apache/zookeeper/pull/1629


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:12;githubbot;600","arshadmohammad commented on pull request #1629:
URL: https://github.com/apache/zookeeper/pull/1629#issuecomment-794179511


   Merged


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:12;githubbot;600","arshadmohammad commented on pull request #1627:
URL: https://github.com/apache/zookeeper/pull/1627#issuecomment-794188000


   Merged


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:19;githubbot;600","arshadmohammad closed pull request #1627:
URL: https://github.com/apache/zookeeper/pull/1627


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:19;githubbot;600","ztzg commented on pull request #1629:
URL: https://github.com/apache/zookeeper/pull/1629#issuecomment-794356110


   Thank you, @arshadmohammad!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 19:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-03-06 18:08:01.0,,,,,,,,,,"0|z0odig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use dynamic temp folder instead of static temp folder in RestMain,ZOOKEEPER-4230,13362144,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,Mukti,Mukti,Mukti,03/Mar/21 16:40,28/Mar/21 08:54,13/Jul/23 09:08,11/Mar/21 05:07,,,,,,,,,,3.6.3,3.7.0,3.8.0,,,,,,,0,pull-request-available,,Currenlty in RestMain static temp folder is used. Even though we are not using this ZK rest component but to comply with security tools it is better to use dynamically created temp folder,,arshad.mohammad,Mukti,,,,,,,,,,,,,,,,,,"MuktiKrishnan opened a new pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/21 02:54;githubbot;600","eolivelli commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r587207166



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       Can we use this utility function ?
   https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#createTempDirectory%28java.nio.file.Path,%20java.lang.String,%20java.nio.file.attribute.FileAttribute...%29




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/21 07:13;githubbot;600","MuktiKrishnan commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r589191189



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       web resource path has to be a static path. createTempDirectory will make it dynamic which will break the functionality




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 06:15;githubbot;600","MuktiKrishnan closed pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 07:50;githubbot;600","MuktiKrishnan opened a new pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 07:50;githubbot;600","arshadmohammad commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r589568318



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       yes, seems functionality will change if directory is created dynamically. How someone will put web resources in that dynamically created directory. So lets not use createTempDirectory.
   
   What you say @eolivelli 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 16:38;githubbot;600","arshadmohammad commented on pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#issuecomment-792885947


   Changes look good to me. After changes is concluded with @eolivelli I will merge.
   @MuktiKrishna this PR also should have been raised on master first.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 16:39;githubbot;600","eolivelli commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r589588606



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       Then I don't understand why we want to use tmpdir. It contains ephemeral files, that won't be present at the next execution of the program. 
   
   I thought we just had to set some existing directory, without any particular meaning




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 17:01;githubbot;600","arshadmohammad commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r589597789



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       ` It contains ephemeral files, that won't be present at the next execution of the program.`
   Makes sense to use dynamically created files
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 17:11;githubbot;600","eolivelli commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r589771026



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       Sp why can't we use the official method to create an unique temporary directory?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 21:46;githubbot;600","arshadmohammad commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r591200268



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       it can be used. 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 08:23;githubbot;600","eolivelli commented on a change in pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#discussion_r591258590



##########
File path: zookeeper-contrib/zookeeper-contrib-rest/src/main/java/org/apache/zookeeper/server/jersey/RestMain.java
##########
@@ -53,7 +53,7 @@ public void start() throws IOException {
        System.out.println(""Starting grizzly ..."");
 
        boolean useSSL = cfg.useSSL();
-       gws = new GrizzlyWebServer(cfg.getPort(), ""/tmp/23cxv45345/2131xc2/"", useSSL);
+       gws = new GrizzlyWebServer(cfg.getPort(), System.getProperty(""java.io.tmpdir"",""/tmp"") + ""/23cxv45345/2131xc2/"", useSSL);

Review comment:
       so I believe it is better to use `createTempDirectory`
   the '/23cxv45345/2131xc2/' suffix is useless
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 09:21;githubbot;600","MuktiKrishnan opened a new pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 09:54;githubbot;600","MuktiKrishnan closed pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 11:33;githubbot;600","MuktiKrishnan opened a new pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 11:33;githubbot;600","arshadmohammad commented on pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633#issuecomment-795676904


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:17;githubbot;600","MuktiKrishnan closed pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:42;githubbot;600","MuktiKrishnan opened a new pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:42;githubbot;600","arshadmohammad commented on pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633#issuecomment-796453116


   CI / mvn (full-build-cppunit-tests)  test failure not related to this PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/21 04:57;githubbot;600","asfgit closed pull request #1633:
URL: https://github.com/apache/zookeeper/pull/1633


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/21 05:04;githubbot;600","arshadmohammad closed pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/21 05:09;githubbot;600","arshadmohammad commented on pull request #1620:
URL: https://github.com/apache/zookeeper/pull/1620#issuecomment-796458160


   Merged from https://github.com/apache/zookeeper/pull/1633


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/21 05:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,13200,,,0,13200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Mar 11 05:07:22 UTC 2021,,,,,,,,,,"0|z0o9hc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Mar/21 05:07;arshad.mohammad;Issue resolved by pull request 1633
[https://github.com/apache/zookeeper/pull/1633];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
X509AuthFailureTest is failing consistently,ZOOKEEPER-4227,13361578,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,01/Mar/21 11:03,17/Mar/21 07:45,13/Jul/23 09:08,10/Mar/21 16:13,3.6.2,3.7.0,3.8.0,,,,,,,3.6.3,,,,,tests,,,,0,pull-request-available,,"X509AuthFailureTest is failing consistently.
",,arshad.mohammad,eolivelli,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 11:13;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-794199213


   Tried to merge this change with https://github.com/apache/zookeeper/pull/1599, but no response. lets review and merge this PR itself


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:28;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-794201125


   ping @eolivelli @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:29;githubbot;600","eolivelli closed pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 11:52;githubbot;600","arshadmohammad opened a new pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 13:34;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-795423297


   This PR change is applicable to other branches as well. I will merge to branch-3.7, branch-3.7.0 and branch-3.6


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 13:37;githubbot;600","arshadmohammad opened a new pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:01;githubbot;600","arshadmohammad commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-795559460


   PR for branch-3.7 and branch-3.7.0


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:02;githubbot;600","arshadmohammad opened a new pull request #1636:
URL: https://github.com/apache/zookeeper/pull/1636


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:05;githubbot;600","arshadmohammad edited a comment on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-795423297


   This PR change is applicable to other branches as well.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:06;githubbot;600","arshadmohammad closed pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:08;githubbot;600","arshadmohammad commented on pull request #1616:
URL: https://github.com/apache/zookeeper/pull/1616#issuecomment-795571165


   PR for branch-3.7 and 3.7.0  is https://github.com/apache/zookeeper/pull/1635
   PR for branch-3.6 is https://github.com/apache/zookeeper/pull/1636
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 15:08;githubbot;600","eolivelli commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-795671333


   @ztzg I will let you follow the merge to 3.7 branch as you are currently driving the release


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:14;githubbot;600","arshadmohammad commented on pull request #1636:
URL: https://github.com/apache/zookeeper/pull/1636#issuecomment-795689996


   Merged


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:27;githubbot;600","arshadmohammad closed pull request #1636:
URL: https://github.com/apache/zookeeper/pull/1636


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 16:27;githubbot;600","arshadmohammad commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800431439


   This PR change is very simple change, shall we merge it. @eolivelli please merge it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Mar/21 16:49;githubbot;600","ztzg closed pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:24;githubbot;600","ztzg commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800859272


   Now in `branch-3.7`; closing.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:24;githubbot;600","ztzg edited a comment on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800859272


   Now in `branch-3.7` and `branch-3.7.0`; closing.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:33;githubbot;600","arshadmohammad commented on pull request #1635:
URL: https://github.com/apache/zookeeper/pull/1635#issuecomment-800870802


   Thanks @eolivelli  for review
   Thanks @ztzg  for review and merge


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 07:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Mar 10 16:13:07 UTC 2021,,,,,,,,,,"0|z0o5zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Mar/21 11:03;arshad.mohammad;This test case is failing because it is not waiting for server startup.;;;","10/Mar/21 11:52;eolivelli;Issue resolved by pull request 1616
[https://github.com/apache/zookeeper/pull/1616];;;","10/Mar/21 13:33;arshad.mohammad;This change is applicable on other branches as well.;;;","10/Mar/21 16:13;eolivelli;Issue resolved by pull request 1636
[https://github.com/apache/zookeeper/pull/1636];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-3642 to branch-3.6,ZOOKEEPER-4225,13361134,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,Mukti,Mukti,Mukti,26/Feb/21 08:35,09/Mar/21 16:16,13/Jul/23 09:08,09/Mar/21 16:16,,,,,,,,,,3.6.3,,,,,server,,,,0,pull-request-available,,Backporting ZOOKEEPER-3642 to branch-3.6,,arshad.mohammad,Mukti,,,,,,,,,,,,,,,,,,"MuktiKrishnan opened a new pull request #1619:
URL: https://github.com/apache/zookeeper/pull/1619


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/21 12:13;githubbot;600","arshadmohammad commented on a change in pull request #1619:
URL: https://github.com/apache/zookeeper/pull/1619#discussion_r589638994



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
##########
@@ -1624,11 +1624,139 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
         assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
     }
 
+    /**
+     * If learner failed to do SNAP sync with leader before it's writing
+     * the snapshot to disk, it's possible that it might have DIFF sync
+     * with new leader or itself being elected as a leader.
+     *
+     * This test is trying to guarantee there is no data inconsistency for
+     * this case.
+     */
+    @Test
+    public void testDiffSyncAfterSnap() throws Exception {
+        final int ENSEMBLE_SERVERS = 3;
+        MainThread[] mt = new MainThread[ENSEMBLE_SERVERS];
+        ZooKeeper[] zk = new ZooKeeper[ENSEMBLE_SERVERS];
+
+        try {
+            // 1. start a quorum
+            final int[] clientPorts = new int[ENSEMBLE_SERVERS];
+            StringBuilder sb = new StringBuilder();
+            String server;
+
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                clientPorts[i] = PortAssignment.unique();
+                server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique()
+                        + "":"" + PortAssignment.unique()
+                        + "":participant;127.0.0.1:"" + clientPorts[i];
+                sb.append(server + ""\n"");
+            }
+            String currentQuorumCfgSection = sb.toString();
+
+            // start servers
+            Context[] contexts = new Context[ENSEMBLE_SERVERS];
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                final Context context = new Context();
+                contexts[i] = context;
+                mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                    @Override
+                    public TestQPMain getTestQPMain() {
+                        return new CustomizedQPMain(context);
+                    }
+                };
+                mt[i].start();
+                zk[i] = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, this);
+            }
+            waitForAll(zk, States.CONNECTED);
+            LOG.info(""all servers started"");
+
+            final String nodePath = ""/testDiffSyncAfterSnap"";
+
+            // 2. find leader and a follower
+            int leaderId = -1;
+            int followerA = -1;
+            for (int i = ENSEMBLE_SERVERS - 1; i >= 0; i--) {
+                if (mt[i].main.quorumPeer.leader != null) {
+                    leaderId = i;
+                } else if (followerA == -1) {
+                    followerA = i;
+                }
+            }
+
+            // 3. stop follower A
+            LOG.info(""shutdown follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+
+            // 4. issue some traffic
+            int index = 0;
+            int numOfRequests = 10;
+            for (int i = 0; i < numOfRequests; i++) {
+                zk[leaderId].create(nodePath + index++,
+                        new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
+
+            CustomQuorumPeer leaderQuorumPeer = (CustomQuorumPeer) mt[leaderId].main.quorumPeer;
+
+            // 5. inject fault to cause the follower exit when received NEWLEADER
+            contexts[followerA].newLeaderReceivedCallback = new NewLeaderReceivedCallback() {
+                boolean processed = false;
+                @Override
+                public void process() throws IOException {
+                    if (processed) {
+                        return;
+                    }
+                    processed = true;
+                    System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""false"");
+                    throw new IOException(""read timedout"");
+                }
+            };
+
+            // 6. force snap sync once
+            LOG.info(""force snapshot sync"");
+            System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
+
+            // 7. start follower A
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+            LOG.info(""verify the nodes are exist in memory"");
+            for (int i = 0; i < index; i++) {
+                assertNotNull(zk[followerA].exists(nodePath + i, false));
+            }
+
+            // 8. issue another request which will be persisted on disk
+            zk[leaderId].create(nodePath + index++,
+                    new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            // wait some time to let this get written to disk
+            Thread.sleep(500);
+
+            // 9. reload data from disk and make sure it's still consistent
+            LOG.info(""restarting follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+
+            for (int i = 0; i < index; i++) {
+                assertNotNull(String.valueOf(zk[followerA].exists(nodePath + i, false)), ""node "" + i + "" should exist"");

Review comment:
       This deviation from master code has completely changed assertion. Now this will always be not null.
   You can change 
   `assertNotNull(String.valueOf(zk[followerA].exists(nodePath + i, false)), ""node "" + i + "" should exist"");`
   to
   `assertNotNull(""node "" + i + "" should exist"",
                       zk[followerA].exists(nodePath + i, false));`
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 18:10;githubbot;600","arshadmohammad commented on a change in pull request #1619:
URL: https://github.com/apache/zookeeper/pull/1619#discussion_r590252671



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
##########
@@ -1624,11 +1624,139 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
         assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
     }
 
+    /**
+     * If learner failed to do SNAP sync with leader before it's writing
+     * the snapshot to disk, it's possible that it might have DIFF sync
+     * with new leader or itself being elected as a leader.
+     *
+     * This test is trying to guarantee there is no data inconsistency for
+     * this case.
+     */
+    @Test
+    public void testDiffSyncAfterSnap() throws Exception {
+        final int ENSEMBLE_SERVERS = 3;
+        MainThread[] mt = new MainThread[ENSEMBLE_SERVERS];
+        ZooKeeper[] zk = new ZooKeeper[ENSEMBLE_SERVERS];
+
+        try {
+            // 1. start a quorum
+            final int[] clientPorts = new int[ENSEMBLE_SERVERS];
+            StringBuilder sb = new StringBuilder();
+            String server;
+
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                clientPorts[i] = PortAssignment.unique();
+                server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique()
+                        + "":"" + PortAssignment.unique()
+                        + "":participant;127.0.0.1:"" + clientPorts[i];
+                sb.append(server + ""\n"");
+            }
+            String currentQuorumCfgSection = sb.toString();
+
+            // start servers
+            Context[] contexts = new Context[ENSEMBLE_SERVERS];
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                final Context context = new Context();
+                contexts[i] = context;
+                mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                    @Override
+                    public TestQPMain getTestQPMain() {
+                        return new CustomizedQPMain(context);
+                    }
+                };
+                mt[i].start();
+                zk[i] = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, this);
+            }
+            waitForAll(zk, States.CONNECTED);
+            LOG.info(""all servers started"");
+
+            final String nodePath = ""/testDiffSyncAfterSnap"";
+
+            // 2. find leader and a follower
+            int leaderId = -1;
+            int followerA = -1;
+            for (int i = ENSEMBLE_SERVERS - 1; i >= 0; i--) {
+                if (mt[i].main.quorumPeer.leader != null) {
+                    leaderId = i;
+                } else if (followerA == -1) {
+                    followerA = i;
+                }
+            }
+
+            // 3. stop follower A
+            LOG.info(""shutdown follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+
+            // 4. issue some traffic
+            int index = 0;
+            int numOfRequests = 10;
+            for (int i = 0; i < numOfRequests; i++) {
+                zk[leaderId].create(nodePath + index++,
+                        new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
+
+            CustomQuorumPeer leaderQuorumPeer = (CustomQuorumPeer) mt[leaderId].main.quorumPeer;
+
+            // 5. inject fault to cause the follower exit when received NEWLEADER
+            contexts[followerA].newLeaderReceivedCallback = new NewLeaderReceivedCallback() {
+                boolean processed = false;
+                @Override
+                public void process() throws IOException {
+                    if (processed) {
+                        return;
+                    }
+                    processed = true;
+                    System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""false"");
+                    throw new IOException(""read timedout"");
+                }
+            };
+
+            // 6. force snap sync once
+            LOG.info(""force snapshot sync"");
+            System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
+
+            // 7. start follower A
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+            LOG.info(""verify the nodes are exist in memory"");
+            for (int i = 0; i < index; i++) {
+                assertNotNull(zk[followerA].exists(nodePath + i, false));
+            }
+
+            // 8. issue another request which will be persisted on disk
+            zk[leaderId].create(nodePath + index++,
+                    new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            // wait some time to let this get written to disk
+            Thread.sleep(500);
+
+            // 9. reload data from disk and make sure it's still consistent
+            LOG.info(""restarting follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+
+            for (int i = 0; i < index; i++) {
+                assertNotNull( ""node "" + i + "" should exist"", String.valueOf(zk[followerA].exists(nodePath + i, false)));

Review comment:
       String.valueOf() is not required




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:26;githubbot;600","MuktiKrishnan commented on a change in pull request #1619:
URL: https://github.com/apache/zookeeper/pull/1619#discussion_r590270601



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
##########
@@ -1624,11 +1624,139 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
         assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
     }
 
+    /**
+     * If learner failed to do SNAP sync with leader before it's writing
+     * the snapshot to disk, it's possible that it might have DIFF sync
+     * with new leader or itself being elected as a leader.
+     *
+     * This test is trying to guarantee there is no data inconsistency for
+     * this case.
+     */
+    @Test
+    public void testDiffSyncAfterSnap() throws Exception {
+        final int ENSEMBLE_SERVERS = 3;
+        MainThread[] mt = new MainThread[ENSEMBLE_SERVERS];
+        ZooKeeper[] zk = new ZooKeeper[ENSEMBLE_SERVERS];
+
+        try {
+            // 1. start a quorum
+            final int[] clientPorts = new int[ENSEMBLE_SERVERS];
+            StringBuilder sb = new StringBuilder();
+            String server;
+
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                clientPorts[i] = PortAssignment.unique();
+                server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique()
+                        + "":"" + PortAssignment.unique()
+                        + "":participant;127.0.0.1:"" + clientPorts[i];
+                sb.append(server + ""\n"");
+            }
+            String currentQuorumCfgSection = sb.toString();
+
+            // start servers
+            Context[] contexts = new Context[ENSEMBLE_SERVERS];
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                final Context context = new Context();
+                contexts[i] = context;
+                mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                    @Override
+                    public TestQPMain getTestQPMain() {
+                        return new CustomizedQPMain(context);
+                    }
+                };
+                mt[i].start();
+                zk[i] = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, this);
+            }
+            waitForAll(zk, States.CONNECTED);
+            LOG.info(""all servers started"");
+
+            final String nodePath = ""/testDiffSyncAfterSnap"";
+
+            // 2. find leader and a follower
+            int leaderId = -1;
+            int followerA = -1;
+            for (int i = ENSEMBLE_SERVERS - 1; i >= 0; i--) {
+                if (mt[i].main.quorumPeer.leader != null) {
+                    leaderId = i;
+                } else if (followerA == -1) {
+                    followerA = i;
+                }
+            }
+
+            // 3. stop follower A
+            LOG.info(""shutdown follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+
+            // 4. issue some traffic
+            int index = 0;
+            int numOfRequests = 10;
+            for (int i = 0; i < numOfRequests; i++) {
+                zk[leaderId].create(nodePath + index++,
+                        new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
+
+            CustomQuorumPeer leaderQuorumPeer = (CustomQuorumPeer) mt[leaderId].main.quorumPeer;
+
+            // 5. inject fault to cause the follower exit when received NEWLEADER
+            contexts[followerA].newLeaderReceivedCallback = new NewLeaderReceivedCallback() {
+                boolean processed = false;
+                @Override
+                public void process() throws IOException {
+                    if (processed) {
+                        return;
+                    }
+                    processed = true;
+                    System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""false"");
+                    throw new IOException(""read timedout"");
+                }
+            };
+
+            // 6. force snap sync once
+            LOG.info(""force snapshot sync"");
+            System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
+
+            // 7. start follower A
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+            LOG.info(""verify the nodes are exist in memory"");
+            for (int i = 0; i < index; i++) {
+                assertNotNull(zk[followerA].exists(nodePath + i, false));
+            }
+
+            // 8. issue another request which will be persisted on disk
+            zk[leaderId].create(nodePath + index++,
+                    new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            // wait some time to let this get written to disk
+            Thread.sleep(500);
+
+            // 9. reload data from disk and make sure it's still consistent
+            LOG.info(""restarting follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+
+            for (int i = 0; i < index; i++) {
+                assertNotNull(String.valueOf(zk[followerA].exists(nodePath + i, false)), ""node "" + i + "" should exist"");

Review comment:
       corrected the argument order of assert statement




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:41;githubbot;600","MuktiKrishnan commented on a change in pull request #1619:
URL: https://github.com/apache/zookeeper/pull/1619#discussion_r590271167



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
##########
@@ -1624,11 +1624,139 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
         assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
     }
 
+    /**
+     * If learner failed to do SNAP sync with leader before it's writing
+     * the snapshot to disk, it's possible that it might have DIFF sync
+     * with new leader or itself being elected as a leader.
+     *
+     * This test is trying to guarantee there is no data inconsistency for
+     * this case.
+     */
+    @Test
+    public void testDiffSyncAfterSnap() throws Exception {
+        final int ENSEMBLE_SERVERS = 3;
+        MainThread[] mt = new MainThread[ENSEMBLE_SERVERS];
+        ZooKeeper[] zk = new ZooKeeper[ENSEMBLE_SERVERS];
+
+        try {
+            // 1. start a quorum
+            final int[] clientPorts = new int[ENSEMBLE_SERVERS];
+            StringBuilder sb = new StringBuilder();
+            String server;
+
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                clientPorts[i] = PortAssignment.unique();
+                server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique()
+                        + "":"" + PortAssignment.unique()
+                        + "":participant;127.0.0.1:"" + clientPorts[i];
+                sb.append(server + ""\n"");
+            }
+            String currentQuorumCfgSection = sb.toString();
+
+            // start servers
+            Context[] contexts = new Context[ENSEMBLE_SERVERS];
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                final Context context = new Context();
+                contexts[i] = context;
+                mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                    @Override
+                    public TestQPMain getTestQPMain() {
+                        return new CustomizedQPMain(context);
+                    }
+                };
+                mt[i].start();
+                zk[i] = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, this);
+            }
+            waitForAll(zk, States.CONNECTED);
+            LOG.info(""all servers started"");
+
+            final String nodePath = ""/testDiffSyncAfterSnap"";
+
+            // 2. find leader and a follower
+            int leaderId = -1;
+            int followerA = -1;
+            for (int i = ENSEMBLE_SERVERS - 1; i >= 0; i--) {
+                if (mt[i].main.quorumPeer.leader != null) {
+                    leaderId = i;
+                } else if (followerA == -1) {
+                    followerA = i;
+                }
+            }
+
+            // 3. stop follower A
+            LOG.info(""shutdown follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+
+            // 4. issue some traffic
+            int index = 0;
+            int numOfRequests = 10;
+            for (int i = 0; i < numOfRequests; i++) {
+                zk[leaderId].create(nodePath + index++,
+                        new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
+
+            CustomQuorumPeer leaderQuorumPeer = (CustomQuorumPeer) mt[leaderId].main.quorumPeer;
+
+            // 5. inject fault to cause the follower exit when received NEWLEADER
+            contexts[followerA].newLeaderReceivedCallback = new NewLeaderReceivedCallback() {
+                boolean processed = false;
+                @Override
+                public void process() throws IOException {
+                    if (processed) {
+                        return;
+                    }
+                    processed = true;
+                    System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""false"");
+                    throw new IOException(""read timedout"");
+                }
+            };
+
+            // 6. force snap sync once
+            LOG.info(""force snapshot sync"");
+            System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
+
+            // 7. start follower A
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+            LOG.info(""verify the nodes are exist in memory"");
+            for (int i = 0; i < index; i++) {
+                assertNotNull(zk[followerA].exists(nodePath + i, false));
+            }
+
+            // 8. issue another request which will be persisted on disk
+            zk[leaderId].create(nodePath + index++,
+                    new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            // wait some time to let this get written to disk
+            Thread.sleep(500);
+
+            // 9. reload data from disk and make sure it's still consistent
+            LOG.info(""restarting follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+
+            for (int i = 0; i < index; i++) {
+                assertNotNull( ""node "" + i + "" should exist"", String.valueOf(zk[followerA].exists(nodePath + i, false)));

Review comment:
       removed String.valueOf() 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:42;githubbot;600","arshadmohammad closed pull request #1619:
URL: https://github.com/apache/zookeeper/pull/1619


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 16:15;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,ZOOKEEPER-3642,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 09 16:16:25 UTC 2021,,,,,,,,,,"0|z0o394:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/21 08:37;Mukti;ZOOKEEPER-3642 is applicable to branch-3.6. I will raise PR to backport;;;","03/Mar/21 16:53;arshad.mohammad;[~Mukti], I added you as a contributor, you will be able to assign issues to yourself;;;","09/Mar/21 16:16;arshad.mohammad;Issue resolved by pull request 1619
https://github.com/apache/zookeeper/pull/1619;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-3891 to branch-3.6,ZOOKEEPER-4224,13361132,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,Mukti,Mukti,Mukti,26/Feb/21 08:26,09/Mar/21 11:19,13/Jul/23 09:08,09/Mar/21 11:19,,,,,,,,,,3.6.3,,,,,,,,,0,pull-request-available,,Backporting ZOOKEEPER-3891 to branch-3.6,,arshad.mohammad,Mukti,,,,,,,,,,,,,,,,,,"MuktiKrishnan opened a new pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/21 11:58;githubbot;600","MuktiKrishnan closed pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/21 10:16;githubbot;600","MuktiKrishnan opened a new pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/21 10:16;githubbot;600","MuktiKrishnan closed pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/21 10:27;githubbot;600","MuktiKrishnan opened a new pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/21 10:27;githubbot;600","arshadmohammad commented on pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618#issuecomment-792968980


   LGTM +1


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 18:21;githubbot;600","arshadmohammad closed pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:17;githubbot;600","arshadmohammad commented on pull request #1618:
URL: https://github.com/apache/zookeeper/pull/1618#issuecomment-793737058


   Merged.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:17;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 09 11:19:09 UTC 2021,,,,,,,,,,"0|z0o38o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/21 08:28;Mukti;ZOOKEEPER-3891 is applicable on branch-3.6. I will raise PR soon to backport;;;","09/Mar/21 11:19;arshad.mohammad;Issue resolved by pull request 1618
https://github.com/apache/zookeeper/pull/1618;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-3706 to branch-3.6,ZOOKEEPER-4223,13361115,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,Mukti,Mukti,Mukti,26/Feb/21 07:12,17/May/22 08:54,13/Jul/23 09:08,09/Mar/21 07:16,3.6.2,,,,,,,,,3.6.3,,,,,java client,,,,0,pull-request-available,,Issue ZOOKEEPER-3706 is not there in branch-3.6.,,arshad.mohammad,Mukti,,,,,,,,,,,,,,,,,,"MuktiKrishnan opened a new pull request #1617:
URL: https://github.com/apache/zookeeper/pull/1617


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/21 11:53;githubbot;600","arshadmohammad commented on pull request #1617:
URL: https://github.com/apache/zookeeper/pull/1617#issuecomment-792984048


   LGTM +1


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 18:43;githubbot;600","arshadmohammad commented on pull request #1617:
URL: https://github.com/apache/zookeeper/pull/1617#issuecomment-793474772


   Merged. @MuktiKrishnan  please close the PR


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 07:14;githubbot;600","MuktiKrishnan closed pull request #1617:
URL: https://github.com/apache/zookeeper/pull/1617


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 08:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3706,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 09 07:16:16 UTC 2021,,,,,,,,,,"0|z0o34w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Feb/21 07:18;Mukti;The issue ZOOKEEPER-3706 is not merged in branch-3.6. I will raise PR to backport.;;;","09/Mar/21 07:16;arshad.mohammad;Issue resolved by pull request 1617
https://github.com/apache/zookeeper/pull/1617;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport ZOOKEEPER-2307 to branch-3.6,ZOOKEEPER-4222,13360582,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,Mukti,Mukti,24/Feb/21 10:15,26/Feb/21 07:20,13/Jul/23 09:08,25/Feb/21 12:07,3.6.2,,,,,,,,,3.6.3,,,,,server,,,,0,,,Issue ZOOKEEPER-2307 is not present in branch-3.6,,Mukti,symat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2307,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Feb 26 07:20:51 UTC 2021,,,,,,,,,,"0|z0o0cg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Feb/21 11:06;symat;true... I see the commit on branch-3.5, branch-3.7 and on master, but I don't see it on branch-3.6.
I'll make a PR shortly.;;;","24/Feb/21 11:32;symat;ZOOKEEPER-2307 was merged just around the time when we branched 3.6. I guess that caused the confusion / error back then, sorry...

[~Mukti] thank you for reporting the issue!!;;;","25/Feb/21 12:07;symat;Issue resolved by pull request 1613
[https://github.com/apache/zookeeper/pull/1613];;;","26/Feb/21 07:20;Mukti;Thanks [~symat] for merging the issue in branch-3.6;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential redundant connection attempts during leader election,ZOOKEEPER-4220,13360398,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,mirg,mirg,23/Feb/21 18:26,28/Mar/21 08:54,13/Jul/23 09:08,06/Mar/21 20:54,3.5.9,3.6.2,,,,,,,,3.5.10,3.6.3,3.7.0,3.8.0,,server,,,,1,pull-request-available,,"We've seen a few failures or long delays in electing a new leader when the previous one has a hard host reset (as opposed to just the service process down, since connections don't need to wait for timeout there). Symptoms are similar to https://issues.apache.org/jira/browse/ZOOKEEPER-2164. Reducing cnxTimeout from 5 to 1.5 seconds makes the problem much less frequent, but doesn't fix it completely. We are still using an old ZooKeeper version (3.5.5), and the new async connect feature will presumably avoid it.

But we noticed a pattern of twice the expected number of connection attempts to the same downed instance in the log, and it appears to be due to a code glitch in QuorumCnxManager.java:

 
{code:java}
synchronized void connectOne(long sid) {
    ...
    if (lastCommittedView.containsKey(sid)) {
        knownId = true;
        if (connectOne(sid, lastCommittedView.get(sid).electionAddr))
            return;
    }
    if (lastSeenQV != null && lastProposedView.containsKey(sid)
            && (!knownId || (lastProposedView.get(sid).electionAddr !=   <----
            lastCommittedView.get(sid).electionAddr))) {
        knownId = true;
        if (connectOne(sid, lastProposedView.get(sid).electionAddr))
            return;
    }
{code}
Comparing electionAddrs should be done with !equals presumably, otherwise connectOne will be invoked an extra time even in the common case when the addresses do match.

The code around it has changed recently, but the check itself still exists at the top of master. It might not matter as much with the async connects, but perhaps it helps even then.",,mirg,symat,ztzg,,,,,,,,,,,,,,,,,"symat opened a new pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615


   We have a logic in the server code, that would try to connect to an other quorum member, based
   on its server ID. We identify the address assigned to this ID first based on the last committed
   quorum configuration. If the connection attempt fails (or the server is not known in the
   committed configuration) then we try to find the address based on the last proposed quorum
   configuration. But we should do the second connection attempt, only if the address in the
   last proposed configuration differs from the address in the last committed configuration.
   Otherwise we would just retry to connect to the same address that failed just right before.
   
   In the current code we have a bug, because we compare the address object references (use ""!="")
   instead of comparing the objects themselves (using ""not equals""). In certain edge cases (e.g.
   when the last proposed and last committed addresses are the same, but the address is unreachable)
   this bug can lead to unnecessary retry of connection attempts. The normal behaviour would be to
   mark this connection attempt to be failed and wait for e.g. the next election round or wait for
   the other server to come online and initiate a connection to us.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 13:17;githubbot;600","symat commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-786611208


   > Very nice catch @symat !
   it was actually 
   
   > Do you think you can write a unit test for this bit?
   
   good idea, I'm thinking about it. I already created a related unit test not much long ago. QuorumCnxManagerSocketConnectionTimeoutTest. I think this could be extended. Let me give a try.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 12:13;githubbot;600","symat edited a comment on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-786611208


   > Very nice catch @symat !
   
   it was actually Alex Mirgorodskiy (see the jira issue), the credits goes to him ;)
   
   > Do you think you can write a unit test for this bit?
   
   good idea, I'm thinking about it. I already created a related unit test not much long ago. QuorumCnxManagerSocketConnectionTimeoutTest. I think this could be extended. Let me give a try.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 12:14;githubbot;600","symat edited a comment on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-786611208


   > Very nice catch @symat !
   
   it was actually Alex Mirgorodskiy (see the jira issue), the credits go to him ;)
   
   > Do you think you can write a unit test for this bit?
   
   good idea, I'm thinking about it. I already created a related unit test not much long ago. QuorumCnxManagerSocketConnectionTimeoutTest. I think this could be extended. Let me give a try.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 12:14;githubbot;600","symat commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-787812974


   unfortunately it is not really possible to create any clean and non-flaky unit test. The problem is with the async connection initiation, which makes the problem hard to reproduce. Since https://issues.apache.org/jira/browse/ZOOKEEPER-3756, we are always initiating leader election connections asynchronously. Before submitting the new connection initiation thread to the executor, we check if already is a thread submitted for the given address. Depending on the scheduling of the JVM / CPU, we may or may not submit the redundant connection attempt we try to fix here.
   
   We could introduce some configurable (only-visible-for-tests) sleep inside the QuorumCnxManager to a certain point making sure we indeed hit this problem. But I'm not favour of complicating the production code this way. 
   
   I spent a few hours to make a nice test, but now I kind of gave up. I think this is a trivial fix, I can live without testing this edge case. What do you think?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 09:46;githubbot;600","symat commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-788688451


   @anmolnar what do you think? can I merge this without unit test?
   
   I plan to merge it to all active branches.
   @ztzg can this still fit into 3.7.0? should I also push this to branch-3.7.0, or branch-3.7 is enough for that?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/21 07:34;githubbot;600","ztzg closed pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 20:53;githubbot;600","ztzg commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-792053602


   Hi @symat, @anmolnar,
   
   I have merged this in `master`, `branch-3.7`, and `branch-3.7.0`.  I hope Andor won't mind, and I would gladly add a test later if we come up with a reasonable idea.  I have *not* merged it in 3.5 nor 3.6 so far, as I prefer to wait for Andor's definitive answer when it comes to these ""very stable"" branches. What do you think?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 20:59;githubbot;600","ztzg commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-793704230


   @symat, @anmolnar : Just making sure you have spotted this:
   
   > I have **not** merged it in 3.5 nor 3.6 so far, as I prefer to wait for Andor's definitive answer [wrt. including tests] when it comes to these ""very stable"" branches. What do you think?
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 10:48;githubbot;600","symat commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-793725671


   sure, thanks @ztzg !
   I'm happy to do the cherry-picks to the stable branches (and run some smoke tests), if it's OK for Andor.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:07;githubbot;600","anmolnar commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-793762037


   @ztzg I don't have a strong opinion on unit tests. I think it's fine as it is.
   This should be merged to all active branches. Please go ahead.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 11:39;githubbot;600","symat opened a new pull request #1630:
URL: https://github.com/apache/zookeeper/pull/1630


   We have a logic in the server code, that would try to connect to an other quorum member, based
   on its server ID. We identify the address assigned to this ID first based on the last committed
   quorum configuration. If the connection attempt fails (or the server is not known in the
   committed configuration) then we try to find the address based on the last proposed quorum
   configuration. But we should do the second connection attempt, only if the address in the
   last proposed configuration differs from the address in the last committed configuration.
   Otherwise we would just retry to connect to the same address that failed just right before.
   
   In the current code we have a bug, because we compare the address object references (use ""!="")
   instead of comparing the objects themselves (using ""not equals""). In certain edge cases (e.g.
   when the last proposed and last committed addresses are the same, but the address is unreachable)
   this bug can lead to unnecessary retry of connection attempts. The normal behaviour would be to
   mark this connection attempt to be failed and wait for e.g. the next election round or wait for
   the other server to come online and initiate a connection to us.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 12:26;githubbot;600","symat commented on pull request #1630:
URL: https://github.com/apache/zookeeper/pull/1630#issuecomment-793812515


   created this PR to kick-in CI on branch 3.6 for #1615


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 12:26;githubbot;600","symat opened a new pull request #1631:
URL: https://github.com/apache/zookeeper/pull/1631


   We have a logic in the server code, that would try to connect to an other quorum member, based
   on its server ID. We identify the address assigned to this ID first based on the last committed
   quorum configuration. If the connection attempt fails (or the server is not known in the
   committed configuration) then we try to find the address based on the last proposed quorum
   configuration. But we should do the second connection attempt, only if the address in the
   last proposed configuration differs from the address in the last committed configuration.
   Otherwise we would just retry to connect to the same address that failed just right before.
   
   In the current code we have a bug, because we compare the address object references (use ""!="")
   instead of comparing the objects themselves (using ""not equals""). In certain edge cases (e.g.
   when the last proposed and last committed addresses are the same, but the address is unreachable)
   this bug can lead to unnecessary retry of connection attempts. The normal behaviour would be to
   mark this connection attempt to be failed and wait for e.g. the next election round or wait for
   the other server to come online and initiate a connection to us.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 12:35;githubbot;600","symat commented on pull request #1631:
URL: https://github.com/apache/zookeeper/pull/1631#issuecomment-793822001


   created this PR to kick-in CI on branch 3.5 for #1615


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 12:35;githubbot;600","symat commented on pull request #1615:
URL: https://github.com/apache/zookeeper/pull/1615#issuecomment-793823825


   I created #1630 and #1631 to start CI on the 3.5 and 3.6 branches.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 12:37;githubbot;600","symat commented on pull request #1630:
URL: https://github.com/apache/zookeeper/pull/1630#issuecomment-794165945


   I'll go ahead and merge this, as the original PR #1615 for 3.7.0 was already reviewed by @anmolnar and @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:01;githubbot;600","symat commented on pull request #1631:
URL: https://github.com/apache/zookeeper/pull/1631#issuecomment-794166171


   I'll go ahead and merge this, as the original PR #1615 for 3.7.0 was already reviewed by @anmolnar and @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:01;githubbot;600","symat closed pull request #1630:
URL: https://github.com/apache/zookeeper/pull/1630


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:10;githubbot;600","symat closed pull request #1631:
URL: https://github.com/apache/zookeeper/pull/1631


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:10;githubbot;600","symat edited a comment on pull request #1631:
URL: https://github.com/apache/zookeeper/pull/1631#issuecomment-794166171


   CI is green, I'll go ahead and merge this, as the original PR #1615 for 3.7.0 was already reviewed by @anmolnar and @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:10;githubbot;600","symat edited a comment on pull request #1630:
URL: https://github.com/apache/zookeeper/pull/1630#issuecomment-794165945


   CI is green, I'll go ahead and merge this, as the original PR #1615 for 3.7.0 was already reviewed by @anmolnar and @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 17:11;githubbot;600","ztzg commented on pull request #1631:
URL: https://github.com/apache/zookeeper/pull/1631#issuecomment-794355248


   Thank you for taking care of it, @symat!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 19:38;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,13800,,,0,13800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Mar 06 20:54:22 UTC 2021,,,,,,,,,,"0|z0nzco:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Feb/21 09:01;symat;Nice catch, [~mirg], thank you!!

This is also present on the current master branch: https://github.com/apache/zookeeper/blob/37eae03080b93d63a6ba9f624b37c764511ad2dc/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L771

Would you like to make a PR by changing this line?
If you don't have time just now, I'm happy to fix this quickly.;;;","25/Feb/21 00:33;mirg;Great, please go ahead [~symat]! (I am not up to speed on testing and checkin procedures). But let me know if it takes much effort on your side too, I'll figure it out.;;;","25/Feb/21 11:58;symat;Sure, thanks [~mirg]! I'll sent the PR soon;;;","25/Feb/21 12:48;symat;Hmm... checking this code and I don't think that this bug would cause an increased number of connection attempts. It might lead to call the `connectOne` method more frequently, but in that method we are always checking if there is an open connection already for the give SID. (and there are more synchronization later in the connection initiations) But I am not 100% sure... also a lot changed since 3.5.5.

Also I think this part of the code should be reached, only if dynamic reconfig is used. Are you using dynamic reconfig? Even if the quorum membership changed (using static configuration file modification), this code should not be reached. At least on the master branch. (although there was a bug in the earlier 3.5 and 3.6 versions that might affect this)

Anyway, the bottom line is that this is clearly a bug, so we need to fix it. I'm just not sure that it would be responsible for the high number of connection attempts you see in your logs.

Update: actually if the other server is unreachable, then this ""!="" can indeed cause that we try to connect to it twice, before giving up. I tried to explain this in the PR. (bit if the servers are online during the leader election, then this shouldn't matter);;;","25/Feb/21 13:18;symat;I submitted the PR: https://github.com/apache/zookeeper/pull/1615;;;","26/Feb/21 00:53;mirg;Yep, this is what we are seeing. We forcibly shut down the current leader, and one of the remaining instances occasionally runs into two back-to-back timeouts (2 x 1.5s) trying to connect to the downed leader:
{quote}2020-12-13T22:46:30.997+0000 [.WorkerReceiver[myid=6]] Notification: 2 (message format version), 1 (n.leader), 0x700003804 (n.zxid), 0x4 (n.round), LOOKING (n.state), 1 (n.sid), 0x7 (n.peerEPoch), FOLLOWING (my state)7000000ad (n.config version)
 2020-12-13T22:46:32.503+0000 [.WorkerSender[myid=6]] Cannot open channel to 4 at election address /10.80.140.226:3888java.net.SocketTimeoutException: connect timed out\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:648)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:705)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:618)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:478)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:457)\n\tat java.lang.Thread.run(Thread.java:745)
 2020-12-13T22:46:34.006+0000 [.WorkerSender[myid=6]] Cannot open channel to 4 at election address /10.80.140.226:3888java.net.SocketTimeoutException: connect timed out\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:648)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:712)\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxManager.java:618)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.process(FastLeaderElection.java:478)\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerSender.run(FastLeaderElection.java:457)\n\tat java.lang.Thread.run(Thread.java:745)
{quote}
Sometimes, this pair of connects repeats, perhaps when the remaining live instances disagree on the election round. This is when the election doesn't seem to converge.

And yes, we are using dynamic reconfig (but not at the time of the crash, I believe).

Thank you for making the change!;;;","26/Feb/21 08:44;symat;Thanks for the clarification [~mirg]!
In this case this fix will likely improve the situation. Cool! :);;;","06/Mar/21 20:54;ztzg;Issue resolved by pull request 1615
[https://github.com/apache/zookeeper/pull/1615];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Quota checks break setData in multi transactions,ZOOKEEPER-4219,13360290,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,ztzg,ztzg,ztzg,23/Feb/21 09:04,28/Mar/21 08:54,13/Jul/23 09:08,06/Mar/21 19:54,3.7.0,3.8.0,,,,,,,,3.7.0,3.8.0,,,,,,,,0,pull-request-available,,"On a server with {{enforceQuota=true}}, {{multi()}} transactions containing {{setData}} operations can throw {{NullPointerException}} during the quota check.

On the server side, this looks like:

{code:java}
java.lang.NullPointerException
    at org.apache.zookeeper.server.ZooKeeperServer.checkQuota(ZooKeeperServer.java:2048)
    at org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:397)
        [...]
{code}

On the client side, this is reflected as a {{MarshallingError}}:

{code:java}
org.apache.zookeeper.KeeperException$MarshallingErrorException: KeeperErrorCode = MarshallingError
    at org.apache.zookeeper.KeeperException.create(KeeperException.java:104)
    at org.apache.zookeeper.ZooKeeper.multiInternal(ZooKeeper.java:1758)
        [...]
{code}

This is visibly due to the quota check trying to access node data by path from the {{PrepRequestProcessor}} without considering the collection of {{outstandingChanges}}.  I have a patch in the works.
",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611


   Without this patch, a multi() transaction such as the one implemented
   in ZooKeeperQuotaTest.testMultiCreateThenSetDataShouldWork fails with
   MarshallingError when 'enforceQuota' is enabled.
   
   This happens whenever the node has an associated quota, whether it was
   exceeded or not.
   
   This is due to the server encountering null while trying to access a
   database node by path--whereas that node only exists as a ChangeRecord
   in the server's 'outstandingChanges' list:
   
       java.lang.NullPointerException
           at org.apache.zookeeper.server.ZooKeeperServer.checkQuota(ZooKeeperServer.java:2048)
           at org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:397)
   
   The patch adds an additional 'lastData' parameter to the quota
   checking function, and passes the data from the ChangeRecord during
   'setData' operations.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 09:26;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-784032204


   Cc: @hanm.  (Cannot add you as a reviewer for some reason.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 09:27;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-784107976


   > please include this patch into next 3.7.0 rc
   
   Definitely the plan :)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 10:44;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-785790837


   @symat, @maoling, @hanm, @nkalmar, @anmolnar, @arshadmohammad: Pinging you as you were active on [ZOOKEEPER-3301](https://issues.apache.org/jira/browse/ZOOKEEPER-3301).
   
   I have now marked [ZOOKEEPER-4219](https://issues.apache.org/jira/browse/ZOOKEEPER-4219) as a blocker, as I don't intend to release 3.7 without it.
   
   If nobody sees a flaw in the proposed fix, I would love to have this merged before the weekend, so that I can prepare a new RC.  WDYT?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 10:30;githubbot;600","eolivelli commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-785796241


   I would like to see some more reviewer on this patch.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 10:38;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-785816649


   > I would like to see some more reviewer on this patch.
   
   Me too, hence the noise :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 11:10;githubbot;600","maoling commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-785867098


   I will take a look at this weekend(02-27 ~02-28) if you can wait for that time:)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 12:41;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-786038258


   > I will take a look at this weekend(02-27 ~02-28) if you can wait for that time:)
   
   @maoling: No pressure.  Some people are surely impatiently waiting for 3.7 to get out, and I would like to push another RC ASAP—but it'll probably take a few more days to have this rigorously vetted unless many committers happen to have a lightly-loaded Friday.  I just thought I'd ask :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 16:41;githubbot;600","maoling commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-787059788


   Looking:)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/21 11:39;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-787061668


   > Looking:)
   
   :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/21 11:55;githubbot;600","asfgit closed pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 07:37;githubbot;600","nkalmar commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-787726420


   Thanks @ztzg , merged to master. It will need to be cherry-picked to 3.7.0 release branch.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 07:37;githubbot;600","nkalmar edited a comment on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-787726420


   Thanks @ztzg , merged to master and 3.7. It will need to be cherry-picked to 3.7.0 release branch. Ping me Damien if you want me to cherry-pick it to 3.7.0.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 07:41;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-787747977


   > Thanks @ztzg , merged to master and 3.7.
   
   Great; thank you!
   
   > It will need to be cherry-picked to 3.7.0 release branch. Ping me Damien if you want me to cherry-pick it to 3.7.0.
   
   Don't worry about it.  Cherry-picking has not been 100% consistent on these branches; I will have to sort it out as I prepare the next RC (in a few days) anyway—and will try and keep the sequences as ""parallel"" as possible as I do so.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 08:12;githubbot;600","ztzg commented on pull request #1611:
URL: https://github.com/apache/zookeeper/pull/1611#issuecomment-792043565


   > > Thanks @ztzg , merged to master and 3.7.
   > 
   > Great; thank you!
   > 
   > > It will need to be cherry-picked to 3.7.0 release branch. Ping me Damien if you want me to cherry-pick it to 3.7.0.
   > 
   > Don't worry about it. Cherry-picking has not been 100% consistent on these branches; I will have to sort it out as I prepare the next RC (in a few days) anyway—and will try and keep the sequences as ""parallel"" as possible as I do so.
   
   Now also in `branch-3.7.0`.  Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 20:04;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2021-02-23 09:04:07.0,,,,,,,,,,"0|z0nyoo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper c client: detect connection loss during opportunistic async send,ZOOKEEPER-4210,13358672,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,smikes,smikes,15/Feb/21 14:50,09/Mar/21 20:31,13/Jul/23 09:08,09/Mar/21 20:30,3.4.14,3.6.2,3.7.0,,,,,,,3.8.0,,,,,c client,,,,0,pull-request-available,,"When an async operation is performed in the C client, the client will attempt to send the command to the server if this would not block.

When this send reports an error (eg: EPIPE) this is reported up to the async message, but the return code is not stored and checked, making it impossible for the user of the c client library to identify this case.

This can eventually trigger an assertion in some IO libraries, eg libev, because the file descriptor libev is watching is not associated with a valid stream. ",Observed on Linux 3.x 4.x 5.x Centos distributions.,smikes,ztzg,,,,,,,,,,,,,,,,,,"maoling commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-779578202


   Ping @ztzg @eolivelli @anmolnar  :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 04:46;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780025114


   Confirmed that `ReadOnlyModeTest` passes locally, so if this is known to be flaky/slow under load, then I'm fine.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 18:16;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780108485


   Running the build on branch-3.6 I see some unit tests failing, both with this change and without


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 20:48;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r577453743



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3730,8 +3745,9 @@ int zoo_awget(zhandle_t *zh, const char *path,
 
     LOG_DEBUG(LOGCALLBACK(zh), ""Sending request xid=%#x for path [%s] to %s"",h.xid,path,
             zoo_get_current_server(zh));
+
     /* make a best (non-blocking) effort to send the requests asap */
-    adaptor_send_queue(zh, 0);
+    return nonblocking_send(zh, rc);
     return (rc < 0)?ZMARSHALLINGERROR:ZOK;

Review comment:
       Leftover `return` statement.

##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3691,6 +3691,21 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)
+{
+    if (rc < 0) {
+	rc = ZMARSHALLINGERROR;
+    } else {
+	rc = adaptor_send_queue(zh, 0);
+	if (rc < 0) {
+	    rc = handle_socket_error_msg(zh, line, rc, ""Socket error during nonblocking send"");

Review comment:
       Passing an accurate `line` is nice, but I now realize that `handle_socket_error_msg` generates log lines such as `ZOO_ERROR@handle_socket_error_msg@1234` (I.e., correct line, wrong function).
   
   (Just a remark, not asking you to fix it in this PR.  Noted for later.)
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 09:48;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780774963


   Sounds good, will take a look. Internally we have 3.4 and 3.6 branches active so I developed against that, I will rebase this against the main branch as you suggest


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 18:55;githubbot;600","smikes closed pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 18:58;githubbot;600","smikes opened a new pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602


   Async API calls attempt to flush the send buffer, which
   calls flush_send_queue(); and can report
     ZOPERATIONTIMEOUT
     ZSYSTEMERROR
     ZCONNECTIONLOSS
   
   Specifically: send_buffer() calls send(2) with MSG_NOSIGNAL,
   which can return EPIPE; then send_buffer return -1, causing
   ZCONNECTIONLOSS from flush_send_queue().
   
   Current async API calls drop the return value from flush_send_queue(),
   as below:
   
       adaptor_send_queue(zh, 0);
       return (rc < 0)?ZMARSHALLINGERROR:ZOK;
   
   The async API then returns ZOK instead of ZCONNECTIONLOSS.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 20:20;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r578041352



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3730,8 +3745,9 @@ int zoo_awget(zhandle_t *zh, const char *path,
 
     LOG_DEBUG(LOGCALLBACK(zh), ""Sending request xid=%#x for path [%s] to %s"",h.xid,path,
             zoo_get_current_server(zh));
+
     /* make a best (non-blocking) effort to send the requests asap */
-    adaptor_send_queue(zh, 0);
+    return nonblocking_send(zh, rc);
     return (rc < 0)?ZMARSHALLINGERROR:ZOK;

Review comment:
       Fixed, see new commits.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:35;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r578041689



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3691,6 +3691,21 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)
+{
+    if (rc < 0) {
+	rc = ZMARSHALLINGERROR;
+    } else {
+	rc = adaptor_send_queue(zh, 0);
+	if (rc < 0) {
+	    rc = handle_socket_error_msg(zh, line, rc, ""Socket error during nonblocking send"");

Review comment:
       I added a commit that addresses this, but it is incidental to the problem of connection loss, so it may be better to put that in a different PR.  Please advise.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:36;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780952654


   Summary of current changes:
   
   * bc5c997
   A revised version of the original change.  This now *DOES NOT* change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   
   Also, the action on ZCONNECTIONLOSS is more conservative.  Now, a connection loss that is detected during an opportunistic nonblocking send will be treated as a normal connection loss, not an error.  The pending send buffers will not be cleared, and completions/watchers will be preserved at least until the next `zookeeper_interest` call.
   
   * 9c0cd16
   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   
   * e20bf70
   In addition to changing the behavior when connection loss is detected, also allow the return code ZCONNECTIONLOSS to propagate upward to the `zoo_a*` functions.  Add documentation in `zookeeper.h` for the new return codes.
   
   Note: included for completeness, but I now think this is probably a bad idea, because there is nothing the consumer of the `zookeeper.c` API can do with the new information (about connection loss during async send).  
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:48;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780952654


   Summary of current changes:
   
   * bc5c997
   A revised version of the original change.  This now *DOES NOT* change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   Also, the action on ZCONNECTIONLOSS is more conservative.  Now, a connection loss that is detected during an opportunistic nonblocking send will be treated as a normal connection loss, not an error.  The pending send buffers will not be cleared, and completions/watchers will be preserved at least until the next `zookeeper_interest` call.
   
   * 9c0cd16
   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   
   * e20bf70
   In addition to changing the behavior when connection loss is detected, also allow the return code ZCONNECTIONLOSS to propagate upward to the `zoo_a*` functions.  Add documentation in `zookeeper.h` for the new return codes.
   Note: included for completeness, but I now think this is probably a bad idea, because there is nothing the consumer of the `zookeeper.c` API can do with the new information (about connection loss during async send).  
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:49;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I am seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, it seems spuriously, on some log management calls:
   
   ```     [exec] Zookeeper_simpleSystem::testLogCallbackClearLog Message Received: [2021-02-17 17:42:23,777:207110(0x7f13ca702740):ZOO_INFO@log_env@1250: Client environment:zookeeper.version=zookeeper C client 3.8.0]
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_ERROR@check_events@2983: Socket 127.0.0.1:22181 zk retcode=-4, errno=111(Connection refused): server refused to accept the client]
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_WARN@zookeeper_interest@2561: Delaying connection after exhaustively trying all servers [127.0.0.1:22181]]
        [exec]  : elapsed 1001 : OK
        [exec] terminate called after throwing an instance of 'CppUnit::Exception'
        [exec]   what():  equality assertion failed
        [exec] - Expected: -101
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:54;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I am seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, it seems spuriously, on some log management calls.  I might be able to fix this by using mocks for the log tests... also a new PR/JIRA issue?
   
   ```     [exec] Zookeeper_simpleSystem::testLogCallbackClearLog Message Received: [2021-02-17 17:42:23,777:207110(0x7f13ca702740):ZOO_INFO@log_env@1250: Client environment:zookeeper.version=zookeeper C client 3.8.0]
   ....
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_ERROR@check_events@2983: Socket 127.0.0.1:22181 zk retcode=-4, errno=111(Connection refused): server refused to accept the client]
        [exec] Log Message Received: [2021-02-17 17:42:24,611:207110(0x7f13c9e8f700):ZOO_WARN@zookeeper_interest@2561: Delaying connection after exhaustively trying all servers [127.0.0.1:22181]]
        [exec]  : elapsed 1001 : OK
        [exec] terminate called after throwing an instance of 'CppUnit::Exception'
        [exec]   what():  equality assertion failed
        [exec] - Expected: -101
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:55;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I am seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, it seems spuriously, on some async functions -- not actually log management, I see now  I might be able to fix this... also a new PR/JIRA issue?
   
   ```       
        [exec] Zookeeper_simpleSystem::testAsyncWatcherAutoResetFAIL: zktest-mt
        [exec] terminate called after throwing an instance of 'CppUnit::Exception'
        [exec]   what():  equality assertion failed
        [exec] - Expected: -101
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 00:59;githubbot;600","smikes edited a comment on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-780954496


   Separately: I was seeing the `zktest_mt` and `zktest_st` cppunit test suites fail, because of my change to the ABI, so I am hoping this will now build cleanly.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 01:02;githubbot;600","ztzg commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-782339189


   @smikes: Still planning to have a look at this, and https://github.com/apache/zookeeper/pull/1609, ASAP.  Thank you for all that work so far!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/21 20:50;githubbot;600","ztzg commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-782914541


   > Summary of current changes:
   > 
   > * [bc5c997](https://github.com/apache/zookeeper/commit/bc5c9975c08aa98748319ff1cd5c60b5602cba7d)
   >   A revised version of the original change.  This now _DOES NOT_ change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   >   Also, the action on ZCONNECTIONLOSS is more conservative.  Now, a connection loss that is detected during an opportunistic nonblocking send will be treated as a normal connection loss, not an error.  The pending send buffers will not be cleared, and completions/watchers will be preserved at least until the next `zookeeper_interest` call.
   
   This is this PR.  LGTM.
   
   > * [9c0cd16](https://github.com/apache/zookeeper/commit/9c0cd1652a41269ce54120bb6656fcdd219063f7)
   >   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   
   Now https://github.com/apache/zookeeper/pull/1609 and [ZOOKEEPER-4217](https://issues.apache.org/jira/browse/ZOOKEEPER-4217).  Thank you for splitting it.
   
   I note that the PR currently is in ""draft"" state.  Do you have specific improvements in mind?
   
   > * [e20bf70](https://github.com/apache/zookeeper/commit/e20bf7015ed6f28d41d488e478ec308f627fb8a7)
   >   In addition to changing the behavior when connection loss is detected, also allow the return code ZCONNECTIONLOSS to propagate upward to the `zoo_a*` functions.  Add documentation in `zookeeper.h` for the new return codes.
   >   Note: included for completeness, but I now think this is probably a bad idea, because there is nothing the consumer of the `zookeeper.c` API can do with the new information (about connection loss during async send).
   
   Agree.  (But thank you for preparing the commit anyway!)
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/21 19:48;githubbot;600","smikes commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-782940825


   > > Summary of current changes:
   > > 
   > > * [bc5c997](https://github.com/apache/zookeeper/commit/bc5c9975c08aa98748319ff1cd5c60b5602cba7d)
   > >   A revised version of the original change.  This now _DOES NOT_ change the ABI -- it does not modify the return values that come from the `zoo_a*` functions.
   > 
   > This is this PR. LGTM.
   
   Cool! I am happy to take more feedback on this, or it can be merged.
   
   > > * [9c0cd16](https://github.com/apache/zookeeper/commit/9c0cd1652a41269ce54120bb6656fcdd219063f7)
   > >   Addresses the comment above, that `handle_socket_error_msg` reports the caller's line but not the caller's function name.  Not needed to address ZOOKEEPER-4210, so I would be happy to split it into a different PR.  Please advise.
   > 
   > Now #1609 and [ZOOKEEPER-4217](https://issues.apache.org/jira/browse/ZOOKEEPER-4217). Thank you for splitting it.
   > 
   > I note that the PR currently is in ""draft"" state. Do you have specific improvements in mind?
   
   No. Today I removed the ""draft"" status.
   
   After this, I will make some documentation updates to the C client dev notes.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/21 22:39;githubbot;600","eolivelli commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r580073782



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,23 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)

Review comment:
       this parameter `line ` is not used, why should we declare it ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Feb/21 08:51;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r580729927



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,23 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+#define nonblocking_send(zh, rc) _nonblocking_send(zh, rc, __LINE__)
+static int _nonblocking_send(zhandle_t *zh, int rc, int line)

Review comment:
       Thanks for pointing this out.  Formerly this was used because the function called handle_socket_error_msg() on error.  Since this is no longer called, we can omit the macro and the argument.  Updated PR , force-pushed amended version f0539f292




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 02:27;githubbot;600","eolivelli commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r581140205



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,22 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (rc < 0) {
+        rc = ZMARSHALLINGERROR;
+    } else {
+        rc = adaptor_send_queue(zh, 0);

Review comment:
       (sorry I have one last question, I could have noticed it before).
   
   in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   
   can this have a behavioural impact ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:34;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r581493588



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,22 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (rc < 0) {
+        rc = ZMARSHALLINGERROR;
+    } else {
+        rc = adaptor_send_queue(zh, 0);

Review comment:
       Thanks, this is a good question.  I have reorganized the code to minimize the change; now adaptor_send_queue() will always be called.
   
   If an error is returned from adaptor_send_queue(), check if we are in a connected state (`is_connected`) and only then, close the socket and set state to `ZOO_NOTCONNECTED_STATE`.
   
   Also: removed the replicated comment and collapsed the ZMARSHALLINGERROR check in `aremove_watches`.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Feb/21 00:20;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r582692030



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       @eolivelli wrote:
   
   > in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   > 
   > can this have a behavioural impact ?
   
   Good point, indeed.  I don't think we have a way to be sure, so I prefer this version.
   
   Now… sorry to be annoying, but:
   
   I'm not sure I like the `is_connected(zh)` condition.  You previously had `zh->fd->sock != -1` here, which seems to make more sense—as the client might *not* be connected when this function is called.  (That can happen, e.g., if the client is in the middle of a `prime_connection` or a SASL authentication sequence; applications do not always wait for a state notification before they start issuing requests.)
   
   WDYT?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 09:51;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r582692030



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       @eolivelli wrote:
   
   > in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   > 
   > can this have a behavioural impact ?
   
   Good point, indeed.  I don't think we have a way to be sure, so I prefer this version.
   
   Now… sorry to be annoying, but:
   
   I'm not sure I like the `is_connected(zh)` condition.  You previously had `zh->fd->sock != -1` here, which seems to make more sense—as the client might *not* be connected when this function is called.  (That can happen, e.g., if the client is in the middle of a `prime_connection` or a SASL authentication sequence. Aplications do not always wait for a connection notification before they start issuing requests.)
   
   WDYT?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 09:52;githubbot;600","ztzg commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r582692030



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       @eolivelli wrote:
   
   > in the previous version of this code we were basically always calling `adaptor_send_queue`, now in case of previous error (rc < 0) we are not calling that function anymore.
   > 
   > can this have a behavioural impact ?
   
   Good point, indeed.  I don't think we have a way to be sure, so I prefer this version.
   
   Now… sorry to be annoying, but:
   
   I'm not sure I like the `is_connected(zh)` condition.  You previously had `zh->fd->sock != -1` here, which seems to make more sense—as the client might *not* be connected when this function is called.  (That can happen, e.g., if the client is in the middle of a `prime_connection` or a SASL authentication sequence. Aplications do not always wait for a connection notification before they start issuing requests.)
   
   WDYT?
   
   (This would also align the test & logic with `destroy` and `update_addrs`.)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 09:54;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r583979202



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       Sounds reasonable.  Will return to using `zh->fd != -1` as the guard for calling `close_zsock()` ; new version bc8adb0b4 is pushed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 23:24;githubbot;600","smikes commented on a change in pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#discussion_r583979202



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -3961,6 +3961,19 @@ static int Request_path_watch_init(zhandle_t *zh, int mode,
 /*---------------------------------------------------------------------------*
  * ASYNC API
  *---------------------------------------------------------------------------*/
+
+/* make an attempt to send queued requests immediately without blocking */
+static int nonblocking_send(zhandle_t *zh, int rc)
+{
+    if (adaptor_send_queue(zh, 0) < 0) {
+        if (is_connected(zh)) {
+            close_zsock(zh->fd);
+            zh->state = ZOO_NOTCONNECTED_STATE;
+        }
+    }
+    return (rc < 0) ? ZMARSHALLINGERROR : ZOK;

Review comment:
       Sounds reasonable.  Will return to using `zh->fd != -1` as the guard for calling `close_zsock()` ; new version 037a4f884 is pushed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/21 23:28;githubbot;600","ztzg closed pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 20:30;githubbot;600","ztzg commented on pull request #1602:
URL: https://github.com/apache/zookeeper/pull/1602#issuecomment-794416188


   This is now in `master`.  Thank you for the contribution, and for your patience, @smikes!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/21 20:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,17400,,,0,17400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 09 20:30:28 UTC 2021,,,,,,,,,,"0|z0nops:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/21 20:30;ztzg;Issue resolved by pull request 1602
[https://github.com/apache/zookeeper/pull/1602];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New CI pipeline checks out master in branch builds too,ZOOKEEPER-4207,13357747,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,andor,andor,09/Feb/21 11:49,28/Mar/21 08:53,13/Jul/23 09:08,09/Feb/21 15:32,3.8.0,,,,,,,,,3.5.10,3.6.3,3.7.0,3.8.0,,build-infrastructure,,,,0,pull-request-available,,"For some reason the new ASF CI build checks out the master branch even in branch builds:
{noformat}
[2021-02-08T14:24:12.673Z]  > git checkout -b master 4faf507771889c7f6280d41ac4a615467680553f # timeout=10
[2021-02-08T14:24:12.673Z]  > git checkout -b master 4faf507771889c7f6280d41ac4a615467680553f # timeout=10{noformat}
I suspect that we don't need the ""git"" step under ""Steps"", because at that point the repo is already checked out.",,andor,eolivelli,symat,,,,,,,,,,,,,,,,,"anmolnar opened a new pull request #1600:
URL: https://github.com/apache/zookeeper/pull/1600


   I believe we don't need to add the git checkout to the ""Steps"" section. I cannot see it neither in owasp nor the PR jenkinsfiles. Also I see that master branch gets also checked out during our normal builds, so I hope this will fix it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/21 14:04;githubbot;600","anmolnar commented on pull request #1600:
URL: https://github.com/apache/zookeeper/pull/1600#issuecomment-775991206


   Thanks @eolivelli . It's green now.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/21 14:44;githubbot;600","eolivelli closed pull request #1600:
URL: https://github.com/apache/zookeeper/pull/1600


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/21 15:31;githubbot;600","eolivelli commented on pull request #1600:
URL: https://github.com/apache/zookeeper/pull/1600#issuecomment-776026590


   @anmolnar sorry I forgot the script running.
   committed to master,branch-3.7.0,branch-3.7,branch-3.6 and branch-3.5
   
   @ztzg PTAL


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/21 15:32;githubbot;600","ztzg commented on pull request #1600:
URL: https://github.com/apache/zookeeper/pull/1600#issuecomment-776935349


   LGTM.  This build of `branch-3.6`:
   
   https://ci-hadoop.apache.org/view/ZooKeeper/job/zookeeper-multi-branch-build/job/branch-3.6/242/consoleText
   
   visibly only contains two commit hashes: `8b4be143d654c0034c6f4d58da05d9ec72757db1`, which is the tip to be tested, and `bdc54f03a5e0a7e280fab27f55c3c75ee8da89fb`, which seems to be some noise printed by Netty.
   
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/21 18:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,ZOOKEEPER-4206,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Feb 10 11:10:11 UTC 2021,,,,,,,,,,"0|z0nj0g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Feb/21 11:58;symat;I guess this is the same issue I just reported today: https://issues.apache.org/jira/browse/ZOOKEEPER-4206
I'll close mine as duplicate, as you already assigned this to yourself.;;;","09/Feb/21 15:32;eolivelli;Issue resolved by pull request 1600
[https://github.com/apache/zookeeper/pull/1600];;;","10/Feb/21 11:10;andor;[~symat] Yes, that should be the same. Sorry, I didn't notice your ticket.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test fails when port 8080 is in use,ZOOKEEPER-4205,13357557,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,amichai,amichai,amichai,08/Feb/21 14:34,31/Mar/21 15:53,13/Jul/23 09:08,17/Mar/21 08:33,3.8.0,,,,,,,,,3.6.3,3.7.0,3.8.0,,,tests,,,,0,pull-request-available,,"Port 8080 is used by default on various web servers and applications. On any system running such a server the ZooKeeper build fails because the port is in use. It should use a dynamically assigned free port instead.

 

java.lang.NullPointerException
 at org.apache.zookeeper.server.X509AuthFailureTest.testSecureStandaloneServerAuthNFailure(X509AuthFailureTest.java:81)",,amichai,arshad.mohammad,,,,,,,,,,,,,,,,,,"amichair opened a new pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599


   …d free port


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/21 14:45;githubbot;600","arshadmohammad commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-792806484


   X509AuthFailureTest is failing even when it runs alone. I feel port conflict is not the reason for failure.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 14:50;githubbot;600","arshadmohammad commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-792807079


   @amichair can you please include the changes from https://github.com/apache/zookeeper/pull/1616  PR also.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 14:51;githubbot;600","arshadmohammad edited a comment on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-792807079


   @amichair can you please include the changes from https://github.com/apache/zookeeper/pull/1616  PR also in this PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 14:52;githubbot;600","amichair commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-798927913


   Rebased.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/21 15:34;githubbot;600","arshadmohammad commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-799559255


   @amichair is X509AuthFailureTest  still failing? please verify on the latest code share you feedback


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Mar/21 16:29;githubbot;600","amichair commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-800021677


   I'm not sure what you're asking... I rebased on the latest master branch. The errors in the CI build are unrelated. This is an issue with hard-coded port 8080 in the test, which many other applications and web servers use by default which means the project cannot be built on any such machine, and the fix is to use a dynamically assigned free port in the test so it will build on any machine.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Mar/21 07:25;githubbot;600","amichair commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-800169281


   Yes, the test failed on my desktop (which has default port 8080 in use by Tomcat), that's how I encountered this issue and investigated it. and after the fix it passes. No other tests seemed to be affected by this port conflict, I think other places already use dynamically allocated free ports.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Mar/21 11:12;githubbot;600","arshadmohammad commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-800389847


   > Yes, the test failed on my desktop (which has default port 8080 in use by Tomcat), that's how I encountered this issue and investigated it. and after the fix it passes. No other tests seemed to be affected by this port conflict, I think other places already use dynamically allocated free ports.
   
   makes sense.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Mar/21 16:01;githubbot;600","arshadmohammad commented on pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599#issuecomment-800429677


   I will merge this after https://github.com/apache/zookeeper/pull/1635. So this can be merged in all the branches


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Mar/21 16:47;githubbot;600","asfgit closed pull request #1599:
URL: https://github.com/apache/zookeeper/pull/1599


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/21 08:30;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Mar 17 08:33:01 UTC 2021,,,,,,,,,,"0|z0nhu8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Mar/21 08:33;arshad.mohammad;Issue resolved by pull request 1599
[https://github.com/apache/zookeeper/pull/1599];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky test - RequestPathMetricsCollectorTest.testMultiThreadPerf,ZOOKEEPER-4204,13357539,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,amichai,amichai,08/Feb/21 13:09,28/Jul/21 13:34,13/Jul/23 09:08,28/Jul/21 13:31,3.8.0,,,,,,,,,3.7.1,3.8.0,,,,tests,,,,0,pull-request-available,,"This test sometimes fails on a laptop. Timed performance tests in unit tests can be problematic in general due to the variety of hardware it might run on, but I have a little fix that reduces the test overhead and tightens the timing, so it's a good first step (and works for me).

 

org.opentest4j.AssertionFailedError: expected: <true> but was: <false>
 at org.apache.zookeeper.server.util.RequestPathMetricsCollectorTest.testMultiThreadPerf(RequestPathMetricsCollectorTest.java:448)",,amichai,ztzg,,,,,,,,,,,,,,,,,,"amichair opened a new pull request #1598:
URL: https://github.com/apache/zookeeper/pull/1598


   …stances to prevent RequestPathMetricsCollectorTest.testMultiThreadPerf occasional failures


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/21 13:55;githubbot;600","amichair commented on pull request #1598:
URL: https://github.com/apache/zookeeper/pull/1598#issuecomment-775185515


   CI error looks like an unrelated typo in another test (""direcory"").


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/21 14:24;githubbot;600","amichair commented on pull request #1598:
URL: https://github.com/apache/zookeeper/pull/1598#issuecomment-781575161


   I wrote a little more in the ZOOKEEPER-4204 issue. At least in my case on one machine, it went from failing several times in a row to not failing several times in a row (on another machine it never failed in the first place). I was also a bit surprised, but I guess there's enough bookkeeping being done (a Thread is not just a POJO with an empty constructor), times tens of thousands of instances, that it made a difference. Failures were about timings, so anything that wastes time overhead on the test itself increases the chance of failure. As I wrote there, I'm not sure it will be solved in all scenarios, but it seems to be a good first step, and is certainly a correct correction in any case...


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 19:16;githubbot;600","amichair commented on pull request #1598:
URL: https://github.com/apache/zookeeper/pull/1598#issuecomment-814044202


   Will you merge it if I remove ZOOKEEPER-4204 from the title? Whether or not it completely solves the issue (probably not), it's an improvement and does alleviate the issue on some machines like mine...


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/21 11:26;githubbot;600","ztzg closed pull request #1598:
URL: https://github.com/apache/zookeeper/pull/1598


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jul/21 13:31;githubbot;600","ztzg commented on pull request #1598:
URL: https://github.com/apache/zookeeper/pull/1598#issuecomment-888313535


   Hi @amichair,
   
   Thank you for this fix.  I have merged it in `master` and `branch-3.7`.  A new ticket can be open if we observe more issues with that specific test.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jul/21 13:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jul 28 13:31:56 UTC 2021,,,,,,,,,,"0|z0nhq8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Feb/21 15:59;amichai;Just noticed it happened also e.g. here [https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1594/1/pipeline]

So it's not just me :);;;","28/Jul/21 13:31;ztzg;Issue resolved by pull request 1598
[https://github.com/apache/zookeeper/pull/1598];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client: SASL-related compilation issues on macOS Catalina,ZOOKEEPER-4201,13356837,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,04/Feb/21 19:25,28/Mar/21 08:54,13/Jul/23 09:08,17/Feb/21 19:26,,,,,,,,,,3.7.0,3.8.0,,,,c client,,,,0,pull-request-available,,"Originally reported by [~eolivelli]:

{quote}
{noformat}
   [exec] .../apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/src/cli.c:960:14: error: 'sasl_client_init' is deprecated: first deprecated in macOS 10.11 [-Werror,-Wdeprecated-declarations]
   [exec]     sr = sasl_client_init(NULL);
   [exec]       ^
   [exec]
   [...]
{noformat}
{quote}

The above is in {{cli.c}}, but similar issues also arise when compiling {{zk_sasl.c}}, which is part of the client library.

Enrico also wrote:

{quote}
And if I remove ""-Werror"" I get

{noformat}
[exec] .../apache-zookeeper-3.7.0/zookeeper-client/zookeeper-client-c/tests/LibCSymTable.h:85:36: error: unknown type name 'clockid_t'; did you mean 'clock_t'?
   [exec]   DECLARE_SYM(int,clock_gettime,(clockid_t clk_id, struct timespec*));
   [exec]                  ^~~~~~~~~
   [exec]                  clock_t
{noformat}
{quote}

but this happens in the test suite, which does not currently work on macOS due to the {{--wrap}} option, which is not supported by the native linker.  Fixing the test suite is considered out of scope for this ticket.",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593


   This patch works around the numerous deprecation notices added to the CyrusSASL library on macOS.  It is a direct ""port"" of the solution to MESOS-3030, which hit exactly the same problem:
       
   https://issues.apache.org/jira/browse/MESOS-3030
       
   https://reviews.apache.org/r/39230/diff/3/
   
   The PR also includes a fix for the the `clockid_t` compilation issue mentioned in the ticket description, but the test suite as a whole remains broken on macOS as its linker does not support the `--wrap` option.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/21 19:53;githubbot;600","eolivelli commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-773598157


   I will test it tomorrow with my Mac, thanks


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/21 20:55;githubbot;600","eolivelli commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-773598157


   I will test it tomorrow with my Mac, thanks


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 09:54;githubbot;600","ztzg opened a new pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593


   This patch works around the numerous deprecation notices added to the CyrusSASL library on macOS.  It is a direct ""port"" of the solution to MESOS-3030, which hit exactly the same problem:
       
   https://issues.apache.org/jira/browse/MESOS-3030
       
   https://reviews.apache.org/r/39230/diff/3/
   
   The PR also includes a fix for the the `clockid_t` compilation issue mentioned in the ticket description, but the test suite as a whole remains broken on macOS as its linker does not support the `--wrap` option.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 10:10;githubbot;600","eolivelli commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-774050402


   I will merge as soon as CI passes


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 14:01;githubbot;600","eolivelli commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-774092548


   It looks like Java11 tests are not stable on GitHub actions. I have relaunched the job twice and this patch does not touch Java code


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 15:12;githubbot;600","ztzg commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-780787916


   > I will merge as soon as CI passes
   
   Mission accomplished!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:14;githubbot;600","ztzg edited a comment on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-780787916


   > I will merge as soon as CI passes
   
   @eolivelli: Mission accomplished!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:15;githubbot;600","eolivelli commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-780791072


   merging


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:20;githubbot;600","eolivelli closed pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:20;githubbot;600","eolivelli commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-780792086


   merged to master and to branch-3.7.0
   
   I had this error from JIRA, can you fix the issue on JIRA manually @ztzg  ?
   
   > Enter a JIRA id [ZOOKEEPER-4201]: 3.7.0
   > ASF JIRA could not find 3.7.0
   > JiraError HTTP 404 url: https://issues.apache.org/jira/rest/api/2/issue/3.7.0
   > 	text: Issue Does Not Exist
   > 	
   > 	response headers = {'Date': 'Wed, 17 Feb 2021 19:20:58 GMT', 'Server': 'Apache', 'X-AREQUESTID': '1160x260676369x8', 'X-ASESSIONID': 'fzoixy', 'X-XSS-Protection': '1; mode=block', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'SAMEORIGIN', 'Content-Security-Policy': ""frame-ancestors 'self'"", 'X-ASEN': 'SEN-2062203', 'X-Seraph-LoginReason': 'OK', 'X-AUSERNAME': 'eolivelli', 'Cache-Control': 'no-cache, no-store, no-transform', 'Content-Type': 'application/json;charset=UTF-8', 'Keep-Alive': 'timeout=15, max=98', 'Connection': 'Keep-Alive', 'Transfer-Encoding': 'chunked'}
   > 	response text = {""errorMessages"":[""Issue Does Not Exist""],""errors"":{}}


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:22;githubbot;600","ztzg commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-780793953


   > I had this error from JIRA, can you fix the issue on JIRA manually @ztzg ?
   
   Sure; will do!
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:25;githubbot;600","ztzg commented on pull request #1593:
URL: https://github.com/apache/zookeeper/pull/1593#issuecomment-792043984


   Now also in `branch-3.7`!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 20:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Feb 17 19:26:23 UTC 2021,,,,,,,,,,"0|z0ndeg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/21 19:26;ztzg;Issue resolved by pull request 1593
https://github.com/apache/zookeeper/pull/1593;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WatcherCleanerTest often fails on macOS Catalina,ZOOKEEPER-4200,13356741,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,04/Feb/21 11:34,28/Mar/21 08:53,13/Jul/23 09:08,17/Feb/21 19:19,,,,,,,,,,3.7.0,,,,,,,,,0,pull-request-available,,"{{WatcherCleanerTest}} performs latency checks which fail when outside of a 20+5ms window, whereas 30+ is frequently seen on an i5 Mac Mini running macOS Catalina.",,eolivelli,ztzg,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592


   `WatcherCleanerTest` performs latency checks which fail when outside of a 20+Xms window.  Before this patch, X was 5ms—whereas 30+ms is frequently seen on an i5 Mac Mini running macOS Catalina.
   
   This ""dumb"" patch just widens the window to 20ms, which makes it ""work on my machine,"" but could obviously still fail in a loaded environment or VM.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/21 11:41;githubbot;600","ztzg commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-773568997


   > although I really don't like these type of tests, operating with real timing... a better solution would be to use some logical / mocked time.
   
   Definitely.  This is a minimal workaround to give the test a chance to succeed as I am still trying to release 3.7—but we do indeed have a steep slope to climb before we are back to test/CI stability…
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/21 20:01;githubbot;600","ztzg opened a new pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592


   `WatcherCleanerTest` performs latency checks which fail when outside of a 20+Xms window.  Before this patch, X was 5ms—whereas 30+ms is frequently seen on an i5 Mac Mini running macOS Catalina.
   
   This ""dumb"" patch just widens the window to 20ms, which makes it ""work on my machine,"" but could obviously still fail in a loaded environment or VM.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 09:53;githubbot;600","ztzg commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-773568997


   > although I really don't like these type of tests, operating with real timing... a better solution would be to use some logical / mocked time.
   
   Definitely.  This is a minimal workaround to give the test a chance to succeed as I am still trying to release 3.7—but we do indeed have a steep slope to climb before we are back to test/CI stability…
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 10:20;githubbot;600","ztzg commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-780788803


   @eolivelli, @symat: I have rebased this on `master`, and CI went through!  Would one of you mind merging it?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:16;githubbot;600","eolivelli commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-780789528


   doing it now, thanks @ztzg 
   should I cherry pick to branch-3.7 ?
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:17;githubbot;600","eolivelli closed pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:19;githubbot;600","eolivelli commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-780790772


   Picked to 3.7.0 branch
   thanks


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:20;githubbot;600","ztzg commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-780793570


   Yes.  Perfect—thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:24;githubbot;600","ztzg commented on pull request #1592:
URL: https://github.com/apache/zookeeper/pull/1592#issuecomment-792043827


   Now also in `branch-3.7`!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 20:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Feb 17 19:19:35 UTC 2021,,,,,,,,,,"0|z0nct4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/21 19:19;eolivelli;Issue resolved by pull request 1592
[https://github.com/apache/zookeeper/pull/1592];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid thread leak in QuorumRequestPipelineTest,ZOOKEEPER-4199,13356733,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,04/Feb/21 10:56,28/Mar/21 08:54,13/Jul/23 09:08,18/Feb/21 08:42,,,,,,,,,,3.7.0,,,,,,,,,0,pull-request-available,,"A single run of {{QuorumRequestPipelineTest}} requires 4000+ threads on Linux, and miserably fails on Catalina where the number seems to be capped to 2048.  This is due to a leak of quorum servers, itself caused by multiple invocations of {{QuorumBase.setUp}}.",,symat,ztzg,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591


   `QuorumRequestPipelineTest` hosts parameterized tests which explicitly call `QuorumBase.setUp(boolean)`.
   
   This patch overrides the argument-less `QuorumBase.setUp()` with an empty body, as the former is annotated `@BeforeEach`—otherwise causing the runtime to start a fresh 5-ensemble before each test.
   
   Without the override, one such extraneous ensemble is created and immediately leaked for each combination of test method + parameters.
   
   The test consequently requires 4000+ simultaneous threads to complete, and while Linux happily handles that load, macOS Catalina's per-process limit of 2048 threads effectively causes the JVM to ""crash"" or lock up.
   
   The solution is copied verbatim from another parameterized subclass of `QuorumBase`, `EagerACLFilterTest`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/21 11:22;githubbot;600","ztzg commented on pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591#issuecomment-773235799


   Cc: @tamaashu.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/21 11:24;githubbot;600","ztzg commented on pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591#issuecomment-773235799


   Cc: @tamaashu.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 09:56;githubbot;600","ztzg opened a new pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591


   `QuorumRequestPipelineTest` hosts parameterized tests which explicitly call `QuorumBase.setUp(boolean)`.
   
   This patch overrides the argument-less `QuorumBase.setUp()` with an empty body, as the former is annotated `@BeforeEach`—otherwise causing the runtime to start a fresh 5-ensemble before each test.
   
   Without the override, one such extraneous ensemble is created and immediately leaked for each combination of test method + parameters.
   
   The test consequently requires 4000+ simultaneous threads to complete, and while Linux happily handles that load, macOS Catalina's per-process limit of 2048 threads effectively causes the JVM to ""crash"" or lock up.
   
   The solution is copied verbatim from another parameterized subclass of `QuorumBase`, `EagerACLFilterTest`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/21 10:13;githubbot;600","ztzg commented on pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591#issuecomment-780900155


   @eolivelli, @symat: Great CI success! Would one of you mind merging this?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 22:36;githubbot;600","symat commented on pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591#issuecomment-781151848


   sure, I'll merge soon, thanks @ztzg !!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 08:26;githubbot;600","asfgit closed pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 08:42;githubbot;600","ztzg commented on pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591#issuecomment-792044123


   Now also in `branch-3.7` and `branch-3.7.0`.  Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 20:08;githubbot;600","symat commented on pull request #1591:
URL: https://github.com/apache/zookeeper/pull/1591#issuecomment-792518988


   thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/21 06:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Feb 18 08:42:19 UTC 2021,,,,,,,,,,"0|z0ncrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Feb/21 08:42;symat;Issue resolved by pull request 1591
[https://github.com/apache/zookeeper/pull/1591];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooInspector throws NullPointerExceptions to console when node data is null,ZOOKEEPER-4194,13354813,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,brentwritescode,brentwritescode,27/Jan/21 05:19,27/Mar/21 18:01,13/Jul/23 09:08,27/Mar/21 18:01,3.7.0,,,,,,,,,3.6.3,3.7.1,3.8.0,,,contrib,,,,0,pull-request-available,,"In certain scenarios when investigating empty nodes, ZooInspector encounters NullPointerExceptions such as (from testing an Apache Helix cluster):
{code:java}
ERROR [SwingWorker-pool-1-thread-3] (ZooInspectorManagerImpl.java:255) - Error occurred getting data for node: /BrentTest/EXTERNALVIEWERROR [SwingWorker-pool-1-thread-3] (ZooInspectorManagerImpl.java:255) - Error occurred getting data for node: /BrentTest/EXTERNALVIEWjava.lang.NullPointerException at java.lang.String.<init>(String.java:566) at org.apache.zookeeper.inspector.encryption.BasicDataEncryptionManager.decryptData(BasicDataEncryptionManager.java:33) at org.apache.zookeeper.inspector.manager.ZooInspectorManagerImpl.getData(ZooInspectorManagerImpl.java:251) at org.apache.zookeeper.inspector.gui.nodeviewer.NodeViewerData$2.doInBackground(NodeViewerData.java:105) at org.apache.zookeeper.inspector.gui.nodeviewer.NodeViewerData$2.doInBackground(NodeViewerData.java:100) at javax.swing.SwingWorker$1.call(SwingWorker.java:295) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at javax.swing.SwingWorker.run(SwingWorker.java:334) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)
{code}
By default, ZooInspector uses org.apache.zookeeper.inspector.encryption.BasicDataEncryptionManager to decrypt node data using this code:
{code:java}
public String decryptData(byte[] encrypted) throws Exception { 
    return new String(encrypted);
}
{code}
But ""encrypted"" can get passed as ""null"" which causes the issue.  It seems like this is probably a pretty easy fix (this code seems to do it):
{code:java}
public String decryptData(byte[] encrypted) throws Exception { 
    return encrypted != null ? new String(encrypted) : """";
}
{code}
 I can put this on my list of PRs to submit if that seems reasonable.",,arshad.mohammad,brentwritescode,,,,,,,,,,,,,,,,,,"brentwritescode opened a new pull request #1601:
URL: https://github.com/apache/zookeeper/pull/1601


   ISSUE
   ---
   See https://issues.apache.org/jira/browse/ZOOKEEPER-4194 for details on the issue.
   
   This is a very minor fix to a NullPointerException present in the ZooInspector utility which prevents a NullPointerException getting thrown when ZooInspector inspects an empty node.  The error is:
   
   ```
   ERROR [SwingWorker-pool-1-thread-3] (ZooInspectorManagerImpl.java:255) - Error occurred getting data for node: /BrentTest/EXTERNALVIEWERROR [SwingWorker-pool-1-thread-3] (ZooInspectorManagerImpl.java:255) - Error occurred getting data for node: /BrentTest/EXTERNALVIEWjava.lang.NullPointerException at java.lang.String.<init>(String.java:566) at org.apache.zookeeper.inspector.encryption.BasicDataEncryptionManager.decryptData(BasicDataEncryptionManager.java:33) at org.apache.zookeeper.inspector.manager.ZooInspectorManagerImpl.getData(ZooInspectorManagerImpl.java:251) at org.apache.zookeeper.inspector.gui.nodeviewer.NodeViewerData$2.doInBackground(NodeViewerData.java:105) at org.apache.zookeeper.inspector.gui.nodeviewer.NodeViewerData$2.doInBackground(NodeViewerData.java:100) at javax.swing.SwingWorker$1.call(SwingWorker.java:295) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at javax.swing.SwingWorker.run(SwingWorker.java:334) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at java.lang.Thread.run(Thread.java:748)
   ```
   
   TESTING
   ---
   I've tested cloning, building and running ZooInspector on Mac OS Catalina (10.15.7) on Java 8 with these fixes and running zooInspector.sh to investigate empty nodes (that were previously problematic).  
   
   I ran `mvn verify spotbugs:check checkstyle:check -Pfull-build -Dsurefire-forkcount=4` in the `zookeeper-contrib/zookeeper-contrib-zooinspector` directory (per https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute#HowToContribute-FinalChecksonPullRequest) and got these results:
   
   ```
   [INFO] Starting audit...
   Audit done.
   [INFO] You have 0 Checkstyle violations.
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD SUCCESS
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time:  24.753 s
   [INFO] Finished at: 2021-02-10T00:49:42Z
   [INFO] ------------------------------------------------------------------------
   ```
   
   As per previous PRs, since all of my proposed changes are in the `zookeeper-contrib` subtree (and specifically only in `zookeeper-contrib-zooinspector`, I did not run the wider unit tests for the Zookeeper project as a whole.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/21 01:03;githubbot;600","brentwritescode commented on pull request #1601:
URL: https://github.com/apache/zookeeper/pull/1601#issuecomment-804619974


   Quick ping:  anything further I can do to help get this merged?  Thank you!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/21 05:06;githubbot;600","arshadmohammad commented on pull request #1601:
URL: https://github.com/apache/zookeeper/pull/1601#issuecomment-804623635


   Nothing more to be done, after 3.7.0 release I will merge it :-)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/21 05:17;githubbot;600","asfgit closed pull request #1601:
URL: https://github.com/apache/zookeeper/pull/1601


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 17:59;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Mar 27 18:01:15 UTC 2021,,,,,,,,,,"0|z0n0xc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Feb/21 01:03;brentwritescode;Pull request available at: [https://github.com/apache/zookeeper/pull/1601]

 ;;;","27/Mar/21 18:01;arshad.mohammad;Issue resolved by pull request 1601
[https://github.com/apache/zookeeper/pull/1601];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing executable bits in source release tarball,ZOOKEEPER-4191,13354165,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,24/Jan/21 09:36,28/Mar/21 08:54,13/Jul/23 09:08,24/Jan/21 18:13,,,,,,,,,,3.7.0,3.8.0,,,,,,,,0,pull-request-available,,"[~symat] noticed that the source tarball for 3.7.0rc0 [is missing executable bits|https://mail-archives.apache.org/mod_mbox/zookeeper-dev/202101.mbox/%3cCAAMoRKLMf7tLosgqyiwYfFxXq-Zmiz=0oTGDijX5M=MHDF_JCg@mail.gmail.com%3e].

[~ztzg] noticed that this [can be worked around|https://mail-archives.apache.org/mod_mbox/zookeeper-dev/202101.mbox/%3C875z3n9w75.fsf%40crosstwine.com%3E] by reinstating the ""old"" version of the {{maven-assembly-plugin}}, which had been aligned in ZOOKEEPER-3833.

This ticket will concentrate on the temporary workaround, so that 3.7.0 can be released.

",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1586:
URL: https://github.com/apache/zookeeper/pull/1586


   @symat noticed that the source tarball for 3.7.0rc0 is missing executable bits.
   
   @ztzg noticed that this can be worked around by reinstating the ""old"" version of the maven-assembly-plugin, which had been aligned in ZOOKEEPER-3833.
   
   This patch implements the work around, and also applies cleanly on top of `branch-3.7.0` and `branch-3.7`.
   
   Also discussed on dev@:
   
     https://mail-archives.apache.org/mod_mbox/zookeeper-dev/202101.mbox/%3C875z3n9w75.fsf%40crosstwine.com%3E
   
   Original report:
   
     https://mail-archives.apache.org/mod_mbox/zookeeper-dev/202101.mbox/%3cCAAMoRKLMf7tLosgqyiwYfFxXq-Zmiz=0oTGDijX5M=MHDF_JCg@mail.gmail.com%3e


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/21 09:56;githubbot;600","ztzg closed pull request #1586:
URL: https://github.com/apache/zookeeper/pull/1586


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/21 18:12;githubbot;600","ztzg commented on pull request #1586:
URL: https://github.com/apache/zookeeper/pull/1586#issuecomment-766407334


   Thank you for the quick review, @eolivelli.  Now merged.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/21 18:21;githubbot;600","ztzg commented on pull request #1586:
URL: https://github.com/apache/zookeeper/pull/1586#issuecomment-766407334


   Thank you for the quick review, @eolivelli.  Now merged.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/21 03:50;githubbot;600","ztzg closed pull request #1586:
URL: https://github.com/apache/zookeeper/pull/1586


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/21 03:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Jan 24 18:13:03 UTC 2021,,,,,,,,,,"0|z0mwxc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Jan/21 18:13;ztzg;Issue resolved by pull request 1586
[https://github.com/apache/zookeeper/pull/1586];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dockerfile can't build Zookeeper C client library,ZOOKEEPER-4055,13351271,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,okumin,okumin,10/Jan/21 02:35,28/Mar/21 08:53,13/Jul/23 09:08,10/Jan/21 18:54,3.6.2,3.7.0,,,,,,,,3.6.3,3.7.0,,,,build,,,,0,pull-request-available,,"`dev/docker/Dockerfile` is based on `maven:3.6.3-jdk-8` and the maven image is now based on Debian buster. The libcppunit-dev 1.14.0 shipped with Debian buster doesn't have `AM_PATH_CPPUNIT`.

 

And also `PKG_CHECK_MODULES`, the fallback macro, is not linked in the docker image.

https://github.com/apache/zookeeper/blob/4e82a8be889d91dde46a11b38c8a20e82f3220f2/zookeeper-client/zookeeper-client-c/acinclude.m4#L314-L327


 As a result, the current Docker image is not capable of building `zookeeper-client-c`.
{code:java}
$ docker build -t zookeeper/dev -f dev/docker/Dockerfile dev/docker
$ docker run --rm -it -w /root/zk -v ""$PWD:/root/zk"" zookeeper/dev mvn clean install -Pfull-build -DskipTests
{code}
{code:java}
[INFO] --- exec-maven-plugin:1.6.0:exec (autoreconf) @ zookeeper-client-c ---
acinclude.m4:315: warning: macro 'AM_PATH_CPPUNIT' not found in library
configure.ac:38: error: Missing AM_PATH_CPPUNIT or PKG_CHECK_MODULES m4 macro.
acinclude.m4:317: CHECK_CPPUNIT is expanded from...
configure.ac:38: the top level
autom4te: /usr/bin/m4 failed with exit status: 1
aclocal: error: echo failed with exit status: 1
autoreconf: aclocal failed with exit status: 1
[ERROR] Command execution failed.
org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)
    at org.apache.commons.exec.DefaultExecutor.executeInternal (DefaultExecutor.java:404)
{code}",,okumin,ztzg,,,,,,,,,,,,,,,,,,"okumin opened a new pull request #1575:
URL: https://github.com/apache/zookeeper/pull/1575


   https://issues.apache.org/jira/browse/ZOOKEEPER-4055
   
   This PR would fix the build by installing `pkg-config` and enabling `PKG_CHECK_MODULES`.
   https://github.com/apache/zookeeper/blob/4e82a8be889d91dde46a11b38c8a20e82f3220f2/zookeeper-client/zookeeper-client-c/acinclude.m4#L314-L327
   
   Another approach is to use a maven image with old Debian but it's less reasonable for me.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 03:22;githubbot;600","okumin opened a new pull request #1575:
URL: https://github.com/apache/zookeeper/pull/1575


   https://issues.apache.org/jira/browse/ZOOKEEPER-4055
   
   This PR would fix the build by installing `pkg-config` and enabling `PKG_CHECK_MODULES`.
   https://github.com/apache/zookeeper/blob/4e82a8be889d91dde46a11b38c8a20e82f3220f2/zookeeper-client/zookeeper-client-c/acinclude.m4#L314-L327
   
   Another approach is to use a maven image with old Debian but it's less reasonable for me.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 04:16;githubbot;600","okumin commented on pull request #1575:
URL: https://github.com/apache/zookeeper/pull/1575#issuecomment-757502561


   Thank you both!
   For your information, we are currently using `maven:3.6.1-jdk-11`, based on Debian 9, for branch-3.5.
   `libcppunit-dev` for Debian 9 has `AM_PATH_CPPUNIT`, and I guess the maintenance of Maven 3.6.1 image has been already discontinued. That means we may not have to backport this fix for branch-3.5 if we continue using Maven 3.6.1.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 16:22;githubbot;600","ztzg closed pull request #1575:
URL: https://github.com/apache/zookeeper/pull/1575


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 18:51;githubbot;600","ztzg commented on pull request #1575:
URL: https://github.com/apache/zookeeper/pull/1575#issuecomment-757525644


   Merged into `master` and `branch-3.6` (with minor adaptations).  @okumin: I can confirm that the change was not necessary on `branch-3.5`, so I haven't updated the Docker recipe there.  Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 18:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,ZOOKEEPER-3879,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Jan 10 18:54:21 UTC 2021,,,,,,,,,,"0|z0mf2o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jan/21 04:01;okumin;A build and CI has succeeded.

https://github.com/apache/zookeeper/pull/1575;;;","10/Jan/21 04:08;okumin;We may void the following ticket when this issue gets resolved.

https://issues.apache.org/jira/browse/ZOOKEEPER-3879;;;","10/Jan/21 18:54;ztzg;Issue resolved by pull request 1575
[https://github.com/apache/zookeeper/pull/1575];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Zookeeper Inspector reports ""List of default node viewers is empty"" when not specifically run from the zookeeper-contrib/zookeeper-contrib-zooinspector directory",ZOOKEEPER-4050,13350946,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,brentwritescode,brentwritescode,07/Jan/21 18:37,28/Mar/21 08:54,13/Jul/23 09:08,04/Feb/21 08:17,3.7.0,,,,,,,,,3.7.0,3.8.0,,,,contrib,,,,0,,,"This is a follow-up to the issue ZOOKEEPER-3943 and the discussion on [https://github.com/apache/zookeeper/pull/1551].  PR 1551 fixes the location issue for all of the various Icons used by the UI, but does not address a similar issue with the defaultNodeViewers.cfg and defaultConnectionSettings.cfg files (as pointed out in the PR comments).  

As a result, if one builds a ""Fat JAR"" of the Zookeeper Inspector application and then moves it to a different directory, this error appears when inspecting a node at runtime:

WARN [main] (ZooInspectorManagerImpl.java:851) - List of default node viewers is empty""

And the node viewer window cannot populate correctly.",,brentwritescode,ztzg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Feb 04 08:17:39 UTC 2021,,,,,,,,,,"0|z0md2o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jan/21 21:39;ztzg;[~brentwritescode]: Thank you for taking care of the ticket!;;;","02/Feb/21 05:02;brentwritescode;PR has been submitted: **https://github.com/apache/zookeeper/pull/1589;;;","04/Feb/21 08:17;ztzg;Issue resolved by pull request 1589
[https://github.com/apache/zookeeper/pull/1589];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CVE-2020-25649 - Upgrade jackson databind to 2.10.5.1,ZOOKEEPER-4045,13349205,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,edwin092,edwin092,05/Jan/21 13:48,28/Mar/21 08:53,13/Jul/23 09:08,06/Jan/21 18:55,3.5.8,3.6.0,3.6.1,3.6.2,,,,,,3.5.9,3.6.3,3.7.0,,,,,,,0,pull-request-available,security,"Jackson reported a vulnerability under *CVE-2020-25649*. Upgrading to *2.10.5.1* will resolve the problem. See [https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.10#micro-patches] for more details.
  ",,akai12,edwin092,nkalmar,,,,,,,,,,,,,,,,,"edwin092 opened a new pull request #1572:
URL: https://github.com/apache/zookeeper/pull/1572


   Jackson reported a vulnerability under CVE-2020-25649. Upgrading to 2.10.5.1 will resolve the problem. See https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.10#micro-patches for more details.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 16:21;githubbot;600","asfgit closed pull request #1572:
URL: https://github.com/apache/zookeeper/pull/1572


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 18:50;githubbot;600","nkalmar commented on pull request #1572:
URL: https://github.com/apache/zookeeper/pull/1572#issuecomment-755515159


   Merged to master, 3.6 and 3.5, I wail also cherry-pick to 3.5.9 branch.
   Thanks @edwin092 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 18:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Jan 16 16:18:25 UTC 2021,,,,,,,,,,"0|z0m254:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jan/21 17:23;nkalmar;just run into this while doing 3.5.9 rc1. This will be needed on 3.5 branch as well.;;;","16/Jan/21 16:18;akai12;Happy bubbling my friend. Have a great time too!

https://wminecraft.net/minecraft-forge/;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CREATE2 requests embeded in a MULTI request only get a regular CREATE response,ZOOKEEPER-4026,13344883,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ceache,ceache,08/Dec/20 17:11,21/Jun/23 12:37,13/Jul/23 09:08,21/Jun/23 12:33,3.5.8,3.6.2,,,,,,,,3.7.2,3.8.2,3.9.0,,,server,,,,0,pull-request-available,,"When making a MULTI request with a CREATE2 payload, the reply from the server only contains a regular CREATE response (the path but without the stat data).

 

See attachment for a capture and decode of the request/reply.

 

How to reproduce:
 * Connect to the ensemble
 * Make a MULTI (OpCode 14) request with a CREATE2 operation (OpCode 15)
 * Reply from server is success, znode is create, but the MULTI reply contains a CREATE (OpCode 1)

 ","Tested with official docker hub images of the server and a python Zookeeper client (Kazoo, http://github.com/python-zk/kazoo)",ceache,kezhuw,maoling,ztzg,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559


   Without this change, non-TTL/container invocations of `Op.create` invariably use `OpCode.create`, whose response does not include a `Stat` object.
   
   Furthermore, there was no other way of requesting one, and that code path was consequently untested.
   
   The patch introduces an additional `createFlags` parameter which can be used to enable that feature.  An invocation with `WANT_STAT` set causes the client to submit an `OpCode.create2`, whose response includes a filled `Stat` object, to the server.
   
   It also completes `OpCode.create2` support for multi transactions, which was problem actually reported by ZOOKEEPER-4026.  Without it, such operations are silently downgraded to `OpCode.create`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Dec/20 12:41;githubbot;600","eolivelli commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r543399622



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/MultiOperationRecord.java
##########
@@ -126,7 +127,10 @@ public void deserialize(InputArchive archive, String tag) throws IOException {
                 case ZooDefs.OpCode.createContainer:
                     CreateRequest cr = new CreateRequest();
                     cr.deserialize(archive, tag);
-                    add(Op.create(cr.getPath(), cr.getData(), cr.getAcl(), cr.getFlags()));
+                    EnumSet<Op.CreateFlags> createFlags = h.getType() == ZooDefs.OpCode.create2
+                        ? EnumSet.of(Op.CreateFlags.WANT_STAT)

Review comment:
       Can we have a constant even for this case? We are going to reduce memory allocations 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Dec/20 14:36;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r543642732



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/MultiOperationRecord.java
##########
@@ -126,7 +127,10 @@ public void deserialize(InputArchive archive, String tag) throws IOException {
                 case ZooDefs.OpCode.createContainer:
                     CreateRequest cr = new CreateRequest();
                     cr.deserialize(archive, tag);
-                    add(Op.create(cr.getPath(), cr.getData(), cr.getAcl(), cr.getFlags()));
+                    EnumSet<Op.CreateFlags> createFlags = h.getType() == ZooDefs.OpCode.create2
+                        ? EnumSet.of(Op.CreateFlags.WANT_STAT)

Review comment:
       Done.
   
   Adding that odd case to the visible API felt a bit awkward, so I have attached it to the `MultiOperationRecord` implementation.  (Of course, the ""odd case""-ness is debatable since we only have a single flag :)  Let me know if you'd prefer to have it in the enum.  (In which case I would also appreciate a suggestion for a non-clashing name!)
   
   I have also wrapped both `EnumSet`s with `Collections.unmodifiableSet`, as the former are in fact mutable.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Dec/20 19:53;githubbot;600","eolivelli commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r551929517



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/MultiOperationTest.java
##########
@@ -443,6 +444,22 @@ public void testCreate(boolean useAsync) throws Exception {
         zk.getData(""/multi2"", false, null);
     }
 
+
+    @ParameterizedTest
+    @ValueSource(booleans = {true, false})
+    public void testCreateWantStat(boolean useAsync) throws Exception {
+        List<OpResult> results = multi(zk, Arrays.asList(
+                Op.create(""/multi0"", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, Op.CreateFlags.DEFAULT),
+                Op.create(""/multi1"", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, EnumSet.of(Op.CreateFlags.WANT_STAT)),
+                Op.create(""/multi2"", new byte[0], Ids.OPEN_ACL_UNSAFE, 0, Op.CreateFlags.DEFAULT),
+                Op.create(""/multi3"", new byte[0], Ids.OPEN_ACL_UNSAFE, 0, EnumSet.of(Op.CreateFlags.WANT_STAT))),

Review comment:
       Probably this looks like boilerplate
   `EnumSet.of(Op.CreateFlags.WANT_STAT))`
   Can  we create a constant like Op.CreateFlags.DEFAULT ?
   

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
##########
@@ -1001,6 +1001,7 @@ public ProcessTxnResult processTxn(TxnHeader header, Record txn, boolean isSubTx
                     Record record = null;
                     switch (subtxn.getType()) {
                     case OpCode.create:
+                    case OpCode.create2:

Review comment:
       this change is interesting here, because it means that this feature will be supported only when the server is 3.7+
   
   which error will be reported to a 3.7 client that talks to a 3.6/3.5 server?

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -146,10 +236,33 @@ public static Op create(String path, byte[] data, List<ACL> acl, CreateMode crea
      *                optional ttl or 0 (createMode must imply a TTL)
      */
     public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, long ttl) {
+        return create(path, data, acl, createMode, CreateFlags.DEFAULT, ttl);
+    }
+
+    /**
+     * Constructs a create operation.  Arguments are as for the ZooKeeper method of the same name
+     * but adding an optional ttl
+     * @see ZooKeeper#create(String, byte[], java.util.List, CreateMode)
+     *
+     * @param path
+     *                the path for the node
+     * @param data
+     *                the initial data for the node
+     * @param acl
+     *                the acl for the node
+     * @param createMode
+     *                specifying whether the node to be created is ephemeral
+     *                and/or sequential
+     * @param createFlags
+     *                the set of {@link CreateFlags} to apply
+     * @param ttl
+     *                optional ttl or 0 (createMode must imply a TTL)
+     */
+    public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, Set<CreateFlags> createFlags, long ttl) {

Review comment:
       adding a new factory method is not very awesome from my point of view.
   
   can we take the opportunity to add a fluent Builder for ""Op"" ?
   also adding ""Deprecated"" to the other factory methods

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -54,6 +56,29 @@
         READ
     }
 
+    /**
+     * Optional flags for the
+     * {@link Op#create(String, byte[], List, CreateMode, EnumSet)}
+     * and similar operations.
+     */
+    public enum CreateFlags {
+        /**
+         * Requests that a {@code Stat} object be included in the
+         * response.
+         *
+         * This is semantically equivalent to passing a non-{@code null}
+         * {@var stat} parameter to
+         * {@link ZooKeeper#create(String, byte[], List, CreateMode, Stat)}.
+         */
+        WANT_STAT;

Review comment:
       I am not sure this is a good name.
   what about `RETURN_STAT` or `WITH_STAT`?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jan/21 13:30;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r552172317



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
##########
@@ -1001,6 +1001,7 @@ public ProcessTxnResult processTxn(TxnHeader header, Record txn, boolean isSubTx
                     Record record = null;
                     switch (subtxn.getType()) {
                     case OpCode.create:
+                    case OpCode.create2:

Review comment:
       I will double-check, but from the top of my head: no error, just missing stat data.  (Charles-Henri, who reported ZOOKEEPER-4026, discovered the problem while adding `multi` support to Kazoo.  The ""2"" in front of the request just fell off :)
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jan/21 20:20;githubbot;600","ztzg commented on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-754877418


   > I left some feedback, please take a look
   
   I have noted your points; thanks!  I will look closer and respin the PR soon.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jan/21 20:23;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556466255



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/MultiOperationTest.java
##########
@@ -443,6 +444,22 @@ public void testCreate(boolean useAsync) throws Exception {
         zk.getData(""/multi2"", false, null);
     }
 
+
+    @ParameterizedTest
+    @ValueSource(booleans = {true, false})
+    public void testCreateWantStat(boolean useAsync) throws Exception {
+        List<OpResult> results = multi(zk, Arrays.asList(
+                Op.create(""/multi0"", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, Op.CreateFlags.DEFAULT),
+                Op.create(""/multi1"", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, EnumSet.of(Op.CreateFlags.WANT_STAT)),
+                Op.create(""/multi2"", new byte[0], Ids.OPEN_ACL_UNSAFE, 0, Op.CreateFlags.DEFAULT),
+                Op.create(""/multi3"", new byte[0], Ids.OPEN_ACL_UNSAFE, 0, EnumSet.of(Op.CreateFlags.WANT_STAT))),

Review comment:
       Done.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 11:55;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556466384



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -54,6 +56,29 @@
         READ
     }
 
+    /**
+     * Optional flags for the
+     * {@link Op#create(String, byte[], List, CreateMode, EnumSet)}
+     * and similar operations.
+     */
+    public enum CreateFlags {
+        /**
+         * Requests that a {@code Stat} object be included in the
+         * response.
+         *
+         * This is semantically equivalent to passing a non-{@code null}
+         * {@var stat} parameter to
+         * {@link ZooKeeper#create(String, byte[], List, CreateMode, Stat)}.
+         */
+        WANT_STAT;

Review comment:
       Done.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 11:55;githubbot;600","ztzg commented on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-759411279


   From https://github.com/apache/zookeeper/pull/1559#discussion_r551931040:
   
   > adding a new factory method is not very awesome from my point of view.
   > 
   > can we take the opportunity to add a fluent Builder for ""Op"" ?
   > also adding ""Deprecated"" to the other factory methods
   
   I have started looking into this, and have pushed some commits there:
   
   https://github.com/ztzg/zookeeper/commits/ZOOKEEPER-4026-multi-create2-fluent-builder
   
   Making `Op` ""fluent"" would require… a large number of changes.  (Particularly if we deprecate the ""old"" methods, as we then have to update all the tests to avoid `-Werror` kicking in.)
   
   So while I agree in principle, I would prefer to postpone this cleanup.
   
   Now, I understand that we may not want to introduce four new methods which will be deprecated soon thereafter.
   
   The server-side portion of the fix, however, is valuable independently of the client—so I would like to have it in 3.7.0.
   
   How about:
   
    1. Removing the additional `.create` methods;
    2. Making some `Op.Create` constructors package-private;
    3. Arranging for tests to use the package-private constructors;
    4. Opening a new ticket for the ""fluent builder"" client improvements;
    5. Contributing an adapted version of https://github.com/ztzg/zookeeper/commits/ZOOKEEPER-4026-multi-create2-fluent-builder as a WIP PR for that ticket.
    
   This means that Java applications would be unable to exercise the new code path in the meantime, but it would at least be tested and fix the problem for Kazoo/other clients.
   
   What do you think?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 12:17;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556478126



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -146,10 +236,33 @@ public static Op create(String path, byte[] data, List<ACL> acl, CreateMode crea
      *                optional ttl or 0 (createMode must imply a TTL)
      */
     public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, long ttl) {
+        return create(path, data, acl, createMode, CreateFlags.DEFAULT, ttl);
+    }
+
+    /**
+     * Constructs a create operation.  Arguments are as for the ZooKeeper method of the same name
+     * but adding an optional ttl
+     * @see ZooKeeper#create(String, byte[], java.util.List, CreateMode)
+     *
+     * @param path
+     *                the path for the node
+     * @param data
+     *                the initial data for the node
+     * @param acl
+     *                the acl for the node
+     * @param createMode
+     *                specifying whether the node to be created is ephemeral
+     *                and/or sequential
+     * @param createFlags
+     *                the set of {@link CreateFlags} to apply
+     * @param ttl
+     *                optional ttl or 0 (createMode must imply a TTL)
+     */
+    public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, Set<CreateFlags> createFlags, long ttl) {

Review comment:
       Added a note below: https://github.com/apache/zookeeper/pull/1559#issuecomment-759411279




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 12:17;githubbot;600","eolivelli commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556482659



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -54,6 +56,35 @@
         READ
     }
 
+    /**
+     * Optional flags for the
+     * {@link Op#create(String, byte[], List, CreateMode, EnumSet)}
+     * and similar operations.
+     */
+    public enum CreateFlags {
+        /**
+         * Requests that a {@code Stat} object be included in the
+         * response.
+         *
+         * This is semantically equivalent to passing a non-{@code null}
+         * {@code stat} parameter to
+         * {@link ZooKeeper#create(String, byte[], List, CreateMode, Stat)}.
+         */
+        WITH_STAT;

Review comment:
       RETURN_STAT ?

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -146,10 +236,33 @@ public static Op create(String path, byte[] data, List<ACL> acl, CreateMode crea
      *                optional ttl or 0 (createMode must imply a TTL)
      */
     public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, long ttl) {
+        return create(path, data, acl, createMode, CreateFlags.DEFAULT, ttl);
+    }
+
+    /**
+     * Constructs a create operation.  Arguments are as for the ZooKeeper method of the same name
+     * but adding an optional ttl
+     * @see ZooKeeper#create(String, byte[], java.util.List, CreateMode)
+     *
+     * @param path
+     *                the path for the node
+     * @param data
+     *                the initial data for the node
+     * @param acl
+     *                the acl for the node
+     * @param createMode
+     *                specifying whether the node to be created is ephemeral
+     *                and/or sequential
+     * @param createFlags
+     *                the set of {@link CreateFlags} to apply
+     * @param ttl
+     *                optional ttl or 0 (createMode must imply a TTL)
+     */
+    public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, Set<CreateFlags> createFlags, long ttl) {

Review comment:
       I am leaning toward adding the Builder support without marking the methods as Deprecated (in order to not change tests, we have a few important big forks and changing lots of tests will be a pain for every one).
   
   So adding the Builder and not adding this new overloaded method here.
   
   I am not sure that adding the Builder is about adding much code. 
   
   cc @hanm @lvfangmin 
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 12:34;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556586446



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -54,6 +56,35 @@
         READ
     }
 
+    /**
+     * Optional flags for the
+     * {@link Op#create(String, byte[], List, CreateMode, EnumSet)}
+     * and similar operations.
+     */
+    public enum CreateFlags {
+        /**
+         * Requests that a {@code Stat} object be included in the
+         * response.
+         *
+         * This is semantically equivalent to passing a non-{@code null}
+         * {@code stat} parameter to
+         * {@link ZooKeeper#create(String, byte[], List, CreateMode, Stat)}.
+         */
+        WITH_STAT;

Review comment:
       You suggested `WITH_STAT` or `RETURN_STAT`, so… I used both :)
   
   More seriously, there is already a `RETURN_STAT` a few lines below.  `WITH_STAT` is the enumeration value, and `RETURN_STAT` the constant `Set`.
   
   I'm not very happy with that.  But I suppose we actually don't need a set of flags if we use the builder approach; individual booleans are fine if the setters are named.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 15:03;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556595999



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -146,10 +236,33 @@ public static Op create(String path, byte[] data, List<ACL> acl, CreateMode crea
      *                optional ttl or 0 (createMode must imply a TTL)
      */
     public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, long ttl) {
+        return create(path, data, acl, createMode, CreateFlags.DEFAULT, ttl);
+    }
+
+    /**
+     * Constructs a create operation.  Arguments are as for the ZooKeeper method of the same name
+     * but adding an optional ttl
+     * @see ZooKeeper#create(String, byte[], java.util.List, CreateMode)
+     *
+     * @param path
+     *                the path for the node
+     * @param data
+     *                the initial data for the node
+     * @param acl
+     *                the acl for the node
+     * @param createMode
+     *                specifying whether the node to be created is ephemeral
+     *                and/or sequential
+     * @param createFlags
+     *                the set of {@link CreateFlags} to apply
+     * @param ttl
+     *                optional ttl or 0 (createMode must imply a TTL)
+     */
+    public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, Set<CreateFlags> createFlags, long ttl) {

Review comment:
       > I am leaning toward adding the Builder support without marking the methods as Deprecated (in order to not change tests, we have a few important big forks and changing lots of tests will be a pain for every one).
   > 
   > So adding the Builder and not adding this new overloaded method here.
   
   Right.  That's what I did in this other branch:
   
   https://github.com/ztzg/zookeeper/commits/ZOOKEEPER-4026-multi-create2-fluent-builder
   
   In particular, here is the builder for `Create` and `CreateTTL`:
   
   https://github.com/ztzg/zookeeper/commit/d7bab23d8faf2f364a8bbe32a2c15170030e4d40#diff-d6e7807a04d07a070ee3da75ccd793bd973b5af0ee5597f0969a0a7721d0200fR376
   
   > I am not sure that adding the Builder is about adding much code.
   
   There are *six* direct subclasses of `Op`, though: https://javadoc.io/doc/org.apache.zookeeper/zookeeper/latest/org/apache/zookeeper/Op.html .  (The only indirect one is `CreateTTL`, and it is already handed.)
   
   But looking closer, the others do not warrant introducing a `*Builder`, as they don't have the same variability in parameters.  Would you be okay with the asymmetry?  (I.e., only introducing a `CreateBuilder`, and leaving the rest as-is.)
   
   
   
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 15:16;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556714736



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -146,10 +236,33 @@ public static Op create(String path, byte[] data, List<ACL> acl, CreateMode crea
      *                optional ttl or 0 (createMode must imply a TTL)
      */
     public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, long ttl) {
+        return create(path, data, acl, createMode, CreateFlags.DEFAULT, ttl);
+    }
+
+    /**
+     * Constructs a create operation.  Arguments are as for the ZooKeeper method of the same name
+     * but adding an optional ttl
+     * @see ZooKeeper#create(String, byte[], java.util.List, CreateMode)
+     *
+     * @param path
+     *                the path for the node
+     * @param data
+     *                the initial data for the node
+     * @param acl
+     *                the acl for the node
+     * @param createMode
+     *                specifying whether the node to be created is ephemeral
+     *                and/or sequential
+     * @param createFlags
+     *                the set of {@link CreateFlags} to apply
+     * @param ttl
+     *                optional ttl or 0 (createMode must imply a TTL)
+     */
+    public static Op create(String path, byte[] data, List<ACL> acl, CreateMode createMode, Set<CreateFlags> createFlags, long ttl) {

Review comment:
       Okay—the version I just pushed implements the ""fluent builder"" pattern for `Create`, and only uses a simple `boolean` for the new feature, as pondered in https://github.com/apache/zookeeper/pull/1559#discussion_r556586446.
   
   I find the result simpler and easier to read.  What do you think?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 17:47;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r556735283



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
##########
@@ -1001,6 +1001,7 @@ public ProcessTxnResult processTxn(TxnHeader header, Record txn, boolean isSubTx
                     Record record = null;
                     switch (subtxn.getType()) {
                     case OpCode.create:
+                    case OpCode.create2:

Review comment:
       I have double-checked this, and my recollection was correct: a new client requesting a `Stat` from 3.5, 3.6 or current `master` receives a response, but it is missing `Stat` data.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 18:20;githubbot;600","ztzg commented on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-784235346


   Hi @eolivelli, I believe I have addressed your feedback; PTAL.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 14:19;githubbot;600","eolivelli commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581074879



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {

Review comment:
       why ""Integer"" ?
   is it expected to pass ""null"" ?
   
   I am fine with having `Integer` as internal value, but maybe here in this point we should have only `int`

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {
+            this.createModeFlag = createModeFlag;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc.  Either this or {@link #setCreateModeFlag}
+         * must be used before calling {@link #build()}.
+         *
+         * @param createMode  the create mode as an enum value
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateMode(CreateMode createMode) {
+            this.createMode = createMode;
+            return this;
+        }
+
+        /**
+         * Configures whether to include a {@code Stat} object in the
+         * response.  Defaults to {@code false}.
+         *
+         * <p>Note that this flag has no effect for TTL or container
+         * nodes, as those always include a {@code Stat} at the
+         * protocol level.
+         *
+         * @param returnStat  whether node creation should produce a
+         *   {@code Stat} object
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setReturnStat(boolean returnStat) {
+            this.returnStat = returnStat;
+            return this;
+        }
+
+        /**
+         * Sets the TTL for the node.  Must be set before calling
+         * {@link #build()} when creating TTL nodes.
+         *
+         * @param ttl  the TTL for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setTTL(Long ttl) {

Review comment:
       the same here, we should have `long`

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;

Review comment:
       are we allowing a `null` value here ?

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;

Review comment:
       are we allowing a `null` value here ?

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {
+            this.createModeFlag = createModeFlag;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc.  Either this or {@link #setCreateModeFlag}
+         * must be used before calling {@link #build()}.
+         *
+         * @param createMode  the create mode as an enum value
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateMode(CreateMode createMode) {
+            this.createMode = createMode;

Review comment:
       are we allowing a `null` value here ?

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;

Review comment:
       are we allowing a `null` value here ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 14:24;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581113061



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {

Review comment:
       Yes, the intent was to allow (re)setting these properties to `null` (which is their default value), otherwise there is no way to put the object back into its default state.
   
   (As I suppose you have noticed, `null` is notably used as a marker for `createMode` and `createModeFlag`, which are exclusive.)
   
   But I can switch it to `int`; I don't expect that many people will want to reuse `CreateBuilder` instances.
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:04;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581117530



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;

Review comment:
       The idea was to perform validation at `build()` time—but it is true that `path` and `acl` are not, in fact, validated by the `Create`/`CreateTTL` constructors.  I suppose that should be fixed.
   
   Or are you suggesting that a check should be added at *this* point?  (That would match your `int`/`long` comment, and correspond to a ""properties must be set once, and must be set right"" model—which is not what I was initially going for.)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:09;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581117782



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;

Review comment:
       Yes, we do.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:09;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581117782



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;

Review comment:
       Yes, we do.
   
   (I mean, `data` can be `null` for create requests.  Would you suggest preventing setting a `null` data on the builder, forcing the caller to use an `if`?)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:11;githubbot;600","eolivelli commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581121234



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;

Review comment:
       It is better to perform validation on build() when possible 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 15:13;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581183364



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {

Review comment:
       Done.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:22;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581183467



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {
+            this.createModeFlag = createModeFlag;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc.  Either this or {@link #setCreateModeFlag}
+         * must be used before calling {@link #build()}.
+         *
+         * @param createMode  the create mode as an enum value
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateMode(CreateMode createMode) {
+            this.createMode = createMode;
+            return this;
+        }
+
+        /**
+         * Configures whether to include a {@code Stat} object in the
+         * response.  Defaults to {@code false}.
+         *
+         * <p>Note that this flag has no effect for TTL or container
+         * nodes, as those always include a {@code Stat} at the
+         * protocol level.
+         *
+         * @param returnStat  whether node creation should produce a
+         *   {@code Stat} object
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setReturnStat(boolean returnStat) {
+            this.returnStat = returnStat;
+            return this;
+        }
+
+        /**
+         * Sets the TTL for the node.  Must be set before calling
+         * {@link #build()} when creating TTL nodes.
+         *
+         * @param ttl  the TTL for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setTTL(Long ttl) {

Review comment:
       Done.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:23;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581185995



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;

Review comment:
       Done (checking `path` and `acl`).
   
   I had added the checks to the `Op.Create` constructor, but went back to checking at `build()` time, not to change the existing `create(...)` methods—which still do *not* check for `null`—as it may be that some programs accidentally do that.  (No error is thrown if the request is never submitted.)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:25;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581186298



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;

Review comment:
       *Not* changed, and explicitly documented as accepting `null`.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:26;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581186498



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;

Review comment:
       Validated at `build()` time.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:26;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581187216



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {
+            this.createModeFlag = createModeFlag;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc.  Either this or {@link #setCreateModeFlag}
+         * must be used before calling {@link #build()}.
+         *
+         * @param createMode  the create mode as an enum value
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateMode(CreateMode createMode) {
+            this.createMode = createMode;

Review comment:
       Kinda.  Passing `null` and not calling `setCreateModeFlag` would be validated at `build()` time.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:27;githubbot;600","ztzg commented on a change in pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#discussion_r581187216



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/Op.java
##########
@@ -253,6 +254,142 @@ void validate() throws KeeperException {
         PathUtils.validatePath(path);
     }
 
+    /**
+     * ""Fluent builder"" for {@link Create} operations.
+     */
+    public static class CreateBuilder {
+        private String path;
+        private byte[] data;
+        private List<ACL> acl;
+        private Integer createModeFlag;
+        private CreateMode createMode;
+        private boolean returnStat = false;
+        private Long ttl;
+
+        /**
+         * Sets the path for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param path  the path for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setPath(String path) {
+            this.path = path;
+            return this;
+        }
+
+        /**
+         * Sets the initial data for the node, or {@code null}.
+         *
+         * @param data  the initial data for the node
+         * @return the builder, for chaining.
+         */
+        @SuppressFBWarnings({""EI_EXPOSE_REP"", ""EI_EXPOSE_REP2""})
+        public CreateBuilder setData(byte[] data) {
+            this.data = data;
+            return this;
+        }
+
+        /**
+         * Sets the acl for the node.  Must be set before calling
+         * {@link #build()}.
+         *
+         * @param acl  the acl for the node
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setACL(List<ACL> acl) {
+            this.acl = acl;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc. using the integer encoding.  Either this
+         * or {@link #setCreateMode} must be used before calling
+         * {@link #build()}.
+         *
+         * @param createModeFlag  the create mode encoded as an integer
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateModeFlag(Integer createModeFlag) {
+            this.createModeFlag = createModeFlag;
+            return this;
+        }
+
+        /**
+         * Specifyies whether the node to be created is ephemeral,
+         * sequential, etc.  Either this or {@link #setCreateModeFlag}
+         * must be used before calling {@link #build()}.
+         *
+         * @param createMode  the create mode as an enum value
+         * @return the builder, for chaining.
+         */
+        public CreateBuilder setCreateMode(CreateMode createMode) {
+            this.createMode = createMode;

Review comment:
       Kinda.  Passing `null` and not calling `setCreateModeFlag` would be rejected at `build()` time.  But passing `null` just for kicks would go undetected.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:28;githubbot;600","ztzg commented on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-784328411


   > I left some final feedback
   
   (Mostly) addressed.  What do you think?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Feb/21 16:28;githubbot;600","ztzg commented on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-867403508


   Hi @eolivelli,
   
   > > I left some final feedback
   > 
   > (Mostly) addressed. What do you think?
   
   I don't have any points regarding this.  Could you please take another look?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 07:21;githubbot;600","ztzg edited a comment on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-867403508


   Hi @eolivelli,
   
   > > I left some final feedback
   > 
   > (Mostly) addressed. What do you think?
   
   I don't have any open points regarding this.  Rebasing the PR.  Could you please take another look?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/21 07:56;githubbot;600","ztzg commented on pull request #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-888986339


   > I am fine with committing it to master branch, but I am not sure it fits a minor release because it is an API change
   
   Agree, and I would be glad to see it in `master`.
   
   Unfortunately, I was not able to fix the server-side bug without changing (and later ""improving"") some of the APIs, as the `MultiOperationRecord` class relies on `Op.Create`.  I could try and come up with a minimally invasive patch for 3.7, but it may be difficult and/or ugly, and probably isn't worth it as discovering the issue took so long anyway.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/21 10:07;githubbot;600","ztzg commented on PR #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-1422844390

   See also: https://github.com/apache/zookeeper/pull/1978/#issuecomment-1422840147, which seems to be a duplicate of this PR and might contain good ideas to be merged.


;08/Feb/23 15:55;githubbot;600","kezhuw commented on code in PR #1978:
URL: https://github.com/apache/zookeeper/pull/1978#discussion_r1110555092


##########
zookeeper-server/src/main/java/org/apache/zookeeper/Op.java:
##########
@@ -152,6 +152,45 @@ public static Op create(String path, byte[] data, List<ACL> acl, CreateMode crea
         return new Create(path, data, acl, createMode);
     }
 
+    /**
+     * Constructs a create operation which uses given op code if no one is inferred from create mode.
+     *
+     * @param path
+     *                the path for the node
+     * @param data
+     *                the initial data for the node
+     * @param options
+     *                options for creating znode
+     * @param defaultOpCode
+     *                op code to be used if no one is inferred from create mode
+     */
+    static Op create(String path, byte[] data, CreateOptions options, int defaultOpCode) {
+        if (options.getCreateMode().isTTL()) {

Review Comment:
   Amend `CreateTTLTest.testMulti` for this.



;18/Feb/23 03:46;githubbot;600","ztzg closed pull request #1978: ZOOKEEPER-4026: Support `OpCode.create2` in `OpCode.multi`
URL: https://github.com/apache/zookeeper/pull/1978


;21/Jun/23 12:31;githubbot;600","ztzg commented on PR #1978:
URL: https://github.com/apache/zookeeper/pull/1978#issuecomment-1600754418

   Thank you, @kezhuw!  I have now merged this in branches `master`, `branch-3.8` and `branch-3.7`.


;21/Jun/23 12:35;githubbot;600","ztzg commented on PR #1559:
URL: https://github.com/apache/zookeeper/pull/1559#issuecomment-1600757321

   Closing in favor of https://github.com/apache/zookeeper/pull/1978, which has been merged.


;21/Jun/23 12:37;githubbot;600","ztzg closed pull request #1559: ZOOKEEPER-4026: Complete support for Stat objects (and create2) in multi requests
URL: https://github.com/apache/zookeeper/pull/1559


;21/Jun/23 12:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,23400,,,0,23400,,,,,,,,,ZOOKEEPER-4667,,,,,,,,,,,,,,,,,,,"08/Dec/20 17:07;ceache;MULTI_CREATE2_bug.txt;https://issues.apache.org/jira/secure/attachment/13016715/MULTI_CREATE2_bug.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 21 12:33:08 UTC 2023,,,,,,,,,,"0|z0lbi0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/20 02:39;maoling;[~ceache]

Could you please help us fix this issue?

The contributor guideline is [[here](https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute)

If you're not free, I can pick it up:);;;","15/Dec/20 04:05;ceache;I have been in side-line conversations with [~ztzg] who is already working on the fix. I believe he has a working prototype of a patch already but I'll let him comment on his progress.

 

Cheers,;;;","15/Dec/20 07:35;ztzg;Hi [~maoling], [~ceache],

I can confirm I have a fix for this which seems to work fine.  I still need to properly weave it into the test suite, and am planning to submit a PR soon (hopefully today).  I'll self-assign the ticket in the meantime to avoid duplicated work.

Cheers, -D;;;","15/Dec/20 09:59;maoling;Looking forward to your work:);;;","15/Dec/20 12:44;ztzg;It's now [there|https://github.com/apache/zookeeper/pull/1559]! :);;;","21/Jun/23 12:33;ztzg;Issue resolved by pull request 1978
[https://github.com/apache/zookeeper/pull/1978];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maven build fails on branch-3.6 because of jUnit 5 usage in DIFFSyncConsistencyTest,ZOOKEEPER-4011,13341870,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,hzlu,hzlu,hzlu,20/Nov/20 22:35,23/Nov/20 08:25,13/Jul/23 09:08,22/Nov/20 03:48,,,,,,,,,,3.6.3,,,,,build,tests,,,0,pull-request-available,,"h2. Problem

maven build fails on branch-3.6 because a commit that uses jUnit 5 was back ported to branch-3.6.

Affected version: branch-3.6

Fix Version: branch-3.6
h2. How to reproduce

checkout branch 3.6 and run maven build

Error message:
{code:java}
[INFO] -------------------------------------------------------------
[ERROR] COMPILATION ERROR :
[INFO] -------------------------------------------------------------
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[22,36] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[22,1] static import only from classes and interfaces
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[23,36] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[23,1] static import only from classes and interfaces
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[24,36] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[24,1] static import only from classes and interfaces
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[25,36] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[25,1] static import only from classes and interfaces
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[42,29] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[43,29] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[44,29] package org.junit.jupiter.api does not exist
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[51,6] cannot find symbol
  symbol:   class Test
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[52,6] cannot find symbol
  symbol:   class Timeout
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[220,6] cannot find symbol
  symbol:   class AfterEach
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[78,13] cannot find symbol
  symbol:   method assertTrue(boolean,java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[108,13] cannot find symbol
  symbol:   method fail(java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[113,9] cannot find symbol
  symbol:   method assertTrue(boolean)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[116,9] cannot find symbol
  symbol:   method assertNotNull(org.apache.zookeeper.server.quorum.Leader.Proposal,java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[123,17] cannot find symbol
  symbol:   method fail(java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[144,21] cannot find symbol
  symbol:   method fail(java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[164,17] cannot find symbol
  symbol:   method assertNotNull(org.apache.zookeeper.data.Stat,java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[190,21] cannot find symbol
  symbol:   method fail(java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[200,9] cannot find symbol
  symbol:   method assertNotEquals(int,int,java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[ERROR] /Users/myname/Projects/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[213,13] cannot find symbol
  symbol:   method assertNotNull(org.apache.zookeeper.data.Stat,java.lang.String)
  location: class org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
[INFO] 24 errors
[INFO] -------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Apache ZooKeeper 3.6.3-SNAPSHOT:
[INFO]
[INFO] Apache ZooKeeper ................................... SUCCESS [  2.449 s]
[INFO] Apache ZooKeeper - Documentation ................... SUCCESS [  1.110 s]
[INFO] Apache ZooKeeper - Jute ............................ SUCCESS [  5.511 s]
[INFO] Apache ZooKeeper - Server .......................... FAILURE [  4.667 s]
[INFO] Apache ZooKeeper - Metrics Providers ............... SKIPPED
[INFO] Apache ZooKeeper - Prometheus.io Metrics Provider .. SKIPPED
[INFO] Apache ZooKeeper - Client .......................... SKIPPED
[INFO] Apache ZooKeeper - Recipes ......................... SKIPPED
[INFO] Apache ZooKeeper - Recipes - Election .............. SKIPPED
[INFO] Apache ZooKeeper - Recipes - Lock .................. SKIPPED
[INFO] Apache ZooKeeper - Recipes - Queue ................. SKIPPED
[INFO] Apache ZooKeeper - Assembly ........................ SKIPPED
[INFO] Apache ZooKeeper - Compatibility Tests ............. SKIPPED
[INFO] Apache ZooKeeper - Compatibility Tests - Curator ... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  13.916 s
[INFO] Finished at: 2020-11-20T14:06:50-08:00
[INFO] ------------------------------------------------------------------------
{code}
h2. Solution

As discussed in [https://github.com/apache/zookeeper/pull/1445,] since cherry-picking jUnit 5 upgrades and there won't be too many back ports to 3.6 afterwards, we can just fix the issue by using jUnit 4 in the test.",,hzlu,,,,,,,,,,,,,,,,,,,"pkuwm opened a new pull request #1545:
URL: https://github.com/apache/zookeeper/pull/1545


   ### Description
   Resolves [ZOOKEEPER-4011](https://issues.apache.org/jira/browse/ZOOKEEPER-4011)
   
   maven build fails on branch-3.6 because a commit that uses jUnit 5 was back ported to branch-3.6.
   
   ### Solution
   As discussed in https://github.com/apache/zookeeper/pull/1445, since cherry-picking jUnit 5 upgrades and there won't be too many back ports to 3.6 afterwards, we can just fix the issue by using jUnit 4 in the test.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/20 01:27;githubbot;600","pkuwm commented on pull request #1545:
URL: https://github.com/apache/zookeeper/pull/1545#issuecomment-731484648


   @hanm @tamaashu Could you take a look? Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/20 01:29;githubbot;600","hanm commented on pull request #1545:
URL: https://github.com/apache/zookeeper/pull/1545#issuecomment-731694231


   merged as 96f65c8bb5217a514f24f52ebca5ca147b7d8337, please close this pull request. thanks @pkuwm !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/20 03:50;githubbot;600","pkuwm closed pull request #1545:
URL: https://github.com/apache/zookeeper/pull/1545


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/20 03:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,ZOOKEEPER-4008,,,,,,,,ZOOKEEPER-4008,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-11-20 22:35:48.0,,,,,,,,,,"0|z0ksy8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A typo in the ZKUtil#validateFileInput method,ZOOKEEPER-4007,13341547,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,,maoling,maoling,19/Nov/20 09:51,10/May/21 11:27,13/Jul/23 09:08,08/Feb/21 12:11,,,,,,,,,,3.8.0,,,,,server,,,,0,pull-request-available,,"Here direcory is a typo
{code:java}
if (file.isDirectory()) {
    return ""'"" + file.getAbsolutePath() + ""' is a direcory. it must be a file."";
}
{code}",,maoling,,,,,,,,,,,,,,,,,,,"LuoManGit opened a new pull request #1597:
URL: https://github.com/apache/zookeeper/pull/1597


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/21 11:54;githubbot;600","asfgit closed pull request #1597:
URL: https://github.com/apache/zookeeper/pull/1597


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/21 12:10;githubbot;600","maoling commented on pull request #1597:
URL: https://github.com/apache/zookeeper/pull/1597#issuecomment-775101314


   @LuoManGit Thanks for your contribution.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/21 12:11;githubbot;600","benecdict-fang opened a new pull request #1687:
URL: https://github.com/apache/zookeeper/pull/1687


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Apr/21 12:17;githubbot;600","benecdict-fang opened a new pull request #1687:
URL: https://github.com/apache/zookeeper/pull/1687


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Apr/21 07:07;githubbot;600","maoling commented on pull request #1687:
URL: https://github.com/apache/zookeeper/pull/1687#issuecomment-835778029


   - The CI has passed and I retest this change by this  approach:
   ```
   ➜  bin ./zkSnapShotToolkit.sh /data/software
   '/data/software' is a directory. it must be a file.
   2021-05-09 18:33:28,685 [myid:] - ERROR [main:ServiceUtils@42] - Exiting JVM with code 2
   ```
   - if no other concerns, I'll merge it at next weekend(05-15)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/May/21 10:39;githubbot;600","asfgit closed pull request #1687:
URL: https://github.com/apache/zookeeper/pull/1687


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/May/21 11:25;githubbot;600","maoling commented on pull request #1687:
URL: https://github.com/apache/zookeeper/pull/1687#issuecomment-836579435


   @benecdict-fang  Thanks for your contribution.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/May/21 11:27;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-11-19 09:51:43.0,,,,,,,,,,"0|z0kqyg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Flaky test: ReadOnlyModeTest.testConnectionEvents,ZOOKEEPER-3996,13339322,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,kezhuw,maoling,maoling,07/Nov/20 12:28,20/Jun/23 04:51,13/Jul/23 09:08,19/Jun/23 09:07,,,,,,,,,,3.9.0,,,,,tests,,,,0,pull-request-available,,"We noticed that the unit case: ReadOnlyModeTest.testConnectionEvents has failed frequently when building the CI.

The link is: https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1527/1/pipeline/
{code:java}
[2020-11-06T13:21:34.527Z] [INFO] Running org.apache.zookeeper.RemoveWatchesTest
[2020-11-06T13:21:36.136Z] [INFO] Tests run: 352, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.475 s - in org.apache.zookeeper.common.X509UtilTest
[2020-11-06T13:22:06.176Z] [INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 414.867 s - in org.apache.zookeeper.server.quorum.QuorumSSLTest
[2020-11-06T13:22:41.949Z] [INFO] Tests run: 46, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 66.898 s - in org.apache.zookeeper.RemoveWatchesTest
[2020-11-06T13:22:41.949Z] [INFO] 
[2020-11-06T13:22:41.949Z] [INFO] Results:
[2020-11-06T13:22:41.949Z] [INFO] 
[2020-11-06T13:22:41.949Z] [ERROR] Errors: 
[2020-11-06T13:22:41.949Z] [ERROR]   ReadOnlyModeTest.testConnectionEvents:205 » Timeout Failed to connect in read-...
[2020-11-06T13:22:41.949Z] [INFO] 
[2020-11-06T13:22:41.949Z] [ERROR] Tests run: 2863, Failures: 0, Errors: 1, Skipped: 4
[2020-11-06T13:22:41.949Z] [INFO] 
[2020-11-06T13:22:43.552Z] [INFO] ------------------------------------------------------------------------
[2020-11-06T13:22:43.552Z] [INFO] Reactor Summary for Apache ZooKeeper 3.7.0-SNAPSHOT:{code}",,kezhuw,maoling,,,,,,,,,,,,,,,,,,"kezhuw opened a new pull request, #1896:
URL: https://github.com/apache/zookeeper/pull/1896

   The same watcher was resued across different clients. It is hard to
   know which event will last during verification, disconnected from old
   client or connected from new client.
   
   A brand new watcher solves this.


;22/Jun/22 08:36;githubbot;600","kezhuw commented on PR #1896:
URL: https://github.com/apache/zookeeper/pull/1896#issuecomment-1162818578

   Failed ci:
   * https://github.com/apache/zookeeper/runs/6982815844?check_suite_focus=true
   * https://github.com/kezhuw/zookeeper/runs/6996423868?check_suite_focus=true


;22/Jun/22 08:39;githubbot;600","kezhuw commented on PR #1896:
URL: https://github.com/apache/zookeeper/pull/1896#issuecomment-1162842601

   #1667([ZOOKEEPER-4271](https://issues.apache.org/jira/browse/ZOOKEEPER-4271)) proposed another approach. But it have not updated almost a year.


;22/Jun/22 09:03;githubbot;600","kezhuw commented on PR #1896:
URL: https://github.com/apache/zookeeper/pull/1896#issuecomment-1595646440

   The old test could not last 10 runs after adding `Thread.sleep(700)` before `watcher.waitForReadOnlyConnected(5000)`. The assertion message proves that ""disconnected from old client"" comes after ""connected from new client"".
   
   After patch with `watcher = new CountdownWatcher()`, the test last 100 runs with no failure.
    


;17/Jun/23 06:41;githubbot;600","anmolnar merged PR #1896:
URL: https://github.com/apache/zookeeper/pull/1896


;19/Jun/23 09:07;githubbot;600","anmolnar commented on PR #1896:
URL: https://github.com/apache/zookeeper/pull/1896#issuecomment-1596805095

   Submitted and Jira resolved. Thanks @kezhuw !


;19/Jun/23 09:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,ZOOKEEPER-4271,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Jun 17 06:00:57 UTC 2023,,,,,,,,,,"0|z0kd88:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Nov/20 02:48;maoling;Not find a bug in the test, maybe just a timeout when the CI machine is a contention state.

The potential improvement may be: increase the value of timeout？

 
{code:java}
@Timeout(value = 90) ---> 120 s
watcher.waitForReadOnlyConnected(5000); ---> 10000/15000ms
{code}
 ;;;","17/Jun/23 06:00;kezhuw;New failure runs, they failed at same assertions.

https://github.com/apache/zookeeper/actions/runs/5254833209/jobs/9493940619?pr=2006#step:7:944
https://github.com/apache/zookeeper/actions/runs/5293596225/jobs/9581923512#step:7:446

{noformat}
java.util.concurrent.TimeoutException: Failed to connect in read-only mode to ZooKeeper server.
	at org.apache.zookeeper.test.ClientBase$CountdownWatcher.waitForReadOnlyConnected(ClientBase.java:158)
	at org.apache.zookeeper.test.ReadOnlyModeTest.testConnectionEvents(ReadOnlyModeTest.java:202)
{noformat};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
disconnect reason wrong,ZOOKEEPER-3994,13339123,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,nsnhuang,nsnhuang,nsnhuang,06/Nov/20 07:19,28/Mar/21 08:54,13/Jul/23 09:08,16/Nov/20 15:39,,,,,,,,,,3.7.0,,,,,server,,,,0,pull-request-available,,"when ZookeeperServer process connect request, the reason for disconnecting was wrong
 
 
 ",,nsnhuang,,,,,,,,,,,,,,,,,,,"nsnhuang commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-722936677


   > can you please a similar test for CLIENT_ZXID_AHEAD ?
   > then we are good to good
   > other reviewers already approved the linked patch
   
   Of course ^o^


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/20 08:00;githubbot;600","nsnhuang commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723047145


   @eolivelli I've added test for CLIENT_ZXID_AHEAD


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/20 12:08;githubbot;600","nsnhuang commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723887775


   > Impressive efforts, @nsnhuang! The build is failing because of stylistic issues, but apart from that, your contribution looks good to me.
   
   That excites me！Thank you for your help. 
   Next, what should I do to solve the stylistic issues ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 09:29;githubbot;600","ztzg commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723911040


   Looking at [the Jenkins log](https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1525/2/pipeline#step-35-log-1094
   ), I see some `checkstyle` errors.  You should be able to reproduce locally by running something akin to:
   
       mvn checkstyle:check -Pfull-build
   
   You will then see a report for validations such as the following:
   
       [ERROR] […]/ReadOnlyZooKeeperServerTest.java:3: Using the '.*' form of import should be avoided - org.apache.zookeeper.server.*. [AvoidStarImport]
       [ERROR] […]/ReadOnlyZooKeeperServerTest.java:5: Extra separation in import group before 'org.apache.zookeeper.server.persistence.FileTxnSnapLog' [ImportOrder]
       [ERROR] […]/ReadOnlyZooKeeperServerTest.java:8: Extra separation in import group before 'java.nio.ByteBuffer' [ImportOrder]
       […]
   
   Looking at [the Travis log](https://travis-ci.org/github/apache/zookeeper/jobs/741862504), I see two file missing license headers:
   
       [WARNING] Files with unapproved licenses:
         /home/travis/build/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TestServerCnxn.java
         /home/travis/build/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServerTest.java
       [ERROR] Failed to execute goal org.apache.rat:apache-rat-plugin:0.13:check (default-cli) on project zookeeper: Too many files with unapproved license: 2 See RAT report in: /home/travis/build/apache/zookeeper/zookeeper-server/target/rat.txt -> [Help 1]
   
   I would just copy the Apache license banner from one of the existing files.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 10:09;githubbot;600","ztzg edited a comment on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723911040


   Looking at [the Jenkins log](https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1525/2/pipeline#step-35-log-1094
   ), I see some `checkstyle` errors.  You should be able to reproduce locally by running something akin to:
   
       mvn checkstyle:check -Pfull-build
   
   You will then see a report for validations such as the following:
   
       [ERROR] […]/ReadOnlyZooKeeperServerTest.java:3: Using the '.*' form of import should be avoided - org.apache.zookeeper.server.*. [AvoidStarImport]
       [ERROR] […]/ReadOnlyZooKeeperServerTest.java:5: Extra separation in import group before 'org.apache.zookeeper.server.persistence.FileTxnSnapLog' [ImportOrder]
       [ERROR] […]/ReadOnlyZooKeeperServerTest.java:8: Extra separation in import group before 'java.nio.ByteBuffer' [ImportOrder]
       […]
   
   Looking at [the Travis log](https://travis-ci.org/github/apache/zookeeper/jobs/741862504), I see two file missing license headers:
   
       [WARNING] Files with unapproved licenses:
         /home/travis/build/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/TestServerCnxn.java
         /home/travis/build/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServerTest.java
       [ERROR] Failed to execute goal org.apache.rat:apache-rat-plugin:0.13:check (default-cli) on project zookeeper: Too many files with unapproved license: 2 See RAT report in: /home/travis/build/apache/zookeeper/zookeeper-server/target/rat.txt -> [Help 1]
   
   I would just copy the Apache license banner from one of the existing files.  As above, you can check locally with:
   
       mvn apache-rat:check -Pfull-build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 10:10;githubbot;600","eolivelli commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723992830


   I will merge as soon as we have a green build
   
   looking forward to new contributions @nsnhuang  !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:50;githubbot;600","eolivelli commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723992960


   @ztzg are you okay with the patch now ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:50;githubbot;600","nsnhuang commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-723996638


   > I will merge as soon as we have a green build
   > 
   > looking forward to new contributions @nsnhuang !
   
   I am very excited to contribute code for the first time. I will keep trying, thank you for your help.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:58;githubbot;600","ztzg commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-724202711


   > @ztzg are you okay with the patch now ?
   
   Yes!  (Besides, it was checkstyle which was complaining, not me :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 18:44;githubbot;600","anmolnar commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r520317429



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       Why do you need a subclass to access these methods?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 06:23;githubbot;600","nsnhuang commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r520324273



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       https://github.com/apache/zookeeper/pull/1518#issuecomment-722369988
   
   It’s necessary to do that. 
   'org.apache.zookeeper.server.ServerCnxn.CloseRequestException' has protected access in 'org.apache.zookeeper.server.ServerCnxn', so I can't use it in ReadOnlyZooKeeperServerTest.java.
   Do you have a better way to sovle this?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 06:37;githubbot;600","anmolnar commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r520462009



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       If it's necessary for testing, feel free to make it public and annotate with `VisibleForTesting`. We do this every so often, it's neater than adding testing classes all over the place. Thoughts?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 10:41;githubbot;600","anmolnar commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r520463563



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       You could also extract the `CloseRequestException` class in a separate file. It doesn't have to be a nested class.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 10:43;githubbot;600","ctubbsii commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r520687393



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       > If it's necessary for testing, feel free to make it public and annotate with `VisibleForTesting`. We do this every so often, it's neater than adding testing classes all over the place. Thoughts?
   
   @anmolnar Subclassing for testing is a valid strategy for testing that requires access to protected methods. The `VisibleForTesting` annotation isn't a great mitigation for unintentional API leakage and misuse, since the compiler won't catch improper uses of it, and neither will most IDEs. Also, it adds an additional dependency on wherever you're getting that annotation imported from (presumably Guava), when you might otherwise not need that dependency. I would encourage the use of subclassing to test protected methods, if it's simple enough to do so (as long as it's reasonable to put the subclass as an inner class inside the test itself). I would resort to increasing the visibility to public, only as a last resort. It is particularly important in ZooKeeper, to limit the public visibility on APIs, because of the fact that ZooKeeper doesn't declare specific packages or classes as ""public API"", so users of ZooKeeper must rely on the visibility and other factors to infer stability, and they may not notice an annotation that does not trigger any compiler or IDE warning, and incorrectly infer that it is stable when it isn't.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 16:14;githubbot;600","anmolnar commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r521257220



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       I don't agree with subclassing for testing is a good strategy. I saw people hundreds of times reusing each other's subclasses with some modification just because it's already present and convenient to add some things. The result is a complete mess in the testing code, so I highly discourage people using it. Especially introducing it in ZooKeeper at this point in time.
   
   A more preferred way is mocking: that's essentially subclassing and produces much neater code for testing. Maybe not as convenient as adding a new subclass, but it's all about getting the habit of using mocking libraries.
   
   `VisibleForTesting` annotation: I don't have much experience with that, but that must be a reason why projects of Hadoop are using it all over the place. There should be some mechanism on the client side to trigger a warning when somebody is trying to access such member. Either way, ZooKeeper code is heavily using it already, so there's not much harm using is here as well.
   
   In this particular case I think the best would be to extract the exception in a separate file under the same package. I don't see value in nested exception classes anyway.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 10:21;githubbot;600","eolivelli commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r521276106



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       As a tradeoff we can use e.getClass().getName() and make the assertion against the string
   this why we don't have to add that trick and also we do not have to add a new public class
   
   @anmolnar  would it work for you ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 10:55;githubbot;600","anmolnar commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r521281480



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       @eolivelli Yep, sounds like a good compromise.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 11:05;githubbot;600","ctubbsii commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r521825196



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       > I don't agree with subclassing for testing is a good strategy.
   > A more preferred way is mocking
   
   To be clear, I don't think it's necessarily a *good* strategy, just that in *some* circumstances it might be an appropriate way to test something that you don't otherwise want accessible with higher visibility. I agree mocking is better, whenever possible.
   
   > `VisibleForTesting` annotation: I don't have much experience with that, but that must be a reason why projects of Hadoop are using it all over the place.
   
   I would caution against the idea that popularity is a good measure of reason. :wink:
   
   My 2 cents already having been provided, I don't see any serious problems with any of the discussed strategies. They all seem to have some pros and cons. :smiley_cat: 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 04:06;githubbot;600","nsnhuang commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r521855112



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       > As a tradeoff we can use e.getClass().getName() and make the assertion against the string
   > this why we don't have to add that trick and also we do not have to add a new public class
   > 
   > @eolivelli It works for ""e instanceof NIOServerCnxn.CloseRequestException"", but can't know what disconnect reason is.
   
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 05:51;githubbot;600","nsnhuang commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r521855112



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       > As a tradeoff we can use e.getClass().getName() and make the assertion against the string
   > this why we don't have to add that trick and also we do not have to add a new public class
   > 
   > @eolivelli It works for ""e instanceof NIOServerCnxn.CloseRequestException"", but can't know which disconnect reason is.
   
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 06:05;githubbot;600","nsnhuang commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r522915868



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(TestServerCnxn.instanceofCloseRequestException(e));

Review comment:
       > If it's necessary for testing, feel free to make it public and annotate with `VisibleForTesting`. We do this every so often, it's neater than adding testing classes all over the place. Thoughts?
   
   @anmolnar I have a question, Which package is' VisibleForTesting '?
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/20 12:20;githubbot;600","ctubbsii commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r523111518



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(e instanceof NIOServerCnxn.CloseRequestException);
+            assertEquals(((NIOServerCnxn.CloseRequestException) e).getReason(), ServerCnxn.DisconnectReason.CLIENT_ZXID_AHEAD);
+        }

Review comment:
       I believe there's an `assertThrows()` method that might be cleaner than try-catch, and which returns the exception thrown, so you can check additional state, like the `getReason()`. The try-catch syntax is fine, though.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/20 17:32;githubbot;600","eolivelli commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r523165078



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(e instanceof NIOServerCnxn.CloseRequestException);
+            assertEquals(((NIOServerCnxn.CloseRequestException) e).getReason(), ServerCnxn.DisconnectReason.CLIENT_ZXID_AHEAD);
+        }

Review comment:
       Btw is look good to me even in this form :)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/20 19:04;githubbot;600","nsnhuang commented on a change in pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#discussion_r523901393



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerTest.java
##########
@@ -135,4 +138,32 @@ public void testInvalidSnapshot() {
         }
     }
 
+    @Test
+    public void testClientZxidAhead() {
+        ZooKeeperServer zooKeeperServer = new ZooKeeperServer();
+        final ZKDatabase zkDatabase = new ZKDatabase(mock(FileTxnSnapLog.class));
+        zooKeeperServer.setZKDatabase(zkDatabase);
+
+        final ByteBuffer output = ByteBuffer.allocate(30);
+        // serialize a connReq
+        output.putInt(1);
+        // lastZxid
+        output.putLong(99L);
+        output.putInt(500);
+        output.putLong(123L);
+        output.putInt(1);
+        output.put((byte) 1);
+        output.put((byte) 1);
+        output.flip();
+
+        try {
+            final NIOServerCnxn nioServerCnxn = mock(NIOServerCnxn.class);
+            zooKeeperServer.processConnectRequest(nioServerCnxn, output);
+        } catch (Exception e) {
+            // expect
+            assertTrue(e instanceof NIOServerCnxn.CloseRequestException);
+            assertEquals(((NIOServerCnxn.CloseRequestException) e).getReason(), ServerCnxn.DisconnectReason.CLIENT_ZXID_AHEAD);
+        }

Review comment:
       > I believe there's an `assertThrows()` method that might be cleaner than try-catch, and which returns the exception thrown, so you can check additional state, like the `getReason()`. The try-catch syntax is fine, though.
   
   Thank you for your advice. 
   I have done as you suggested.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 05:05;githubbot;600","anmolnar commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-728014646


   @nsnhuang Thanks for keep working on this. I know it's getting a bit of a pain.
   
   I looked at your patch more closely and see the following:
   - ZookeeperServerTest is in the package `o.a.zookeeper.server`, hence it can access CloseRequestException if it's protected,
   - while ReadOnlyZooKeeperServerTest is in package `o.a.zookeeper.server.quorum` (same as ReadonlyServer), that causes the problem,
   - `CloseRequestException` is thrown in public methods too (processConnectRequest), covered by throws IOException which is a bit odd. Why is it even in a nested class, if it's used outside too?
   
   Given the above I don't see anything wrong with making the exception public. So, you're code is fine.
   
   About VisibleForTesting annotation, I was completely wrong: we don't use it anywhere in our code, because we don't have Guava as a dependency. Instead we use it in comments like `// VisibleForTesting`. :)
   Never mind, you don't need it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 13:29;githubbot;600","eolivelli commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-728022087


   @anmolnar can you merge?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 13:34;githubbot;600","asfgit closed pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 15:37;githubbot;600","anmolnar commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-728140496


   Merged to master. Thanks @nsnhuang !
   I tried to cherry-pick it to branch-3.6, but there was a conflict. If you need this patch on other branches, please create separate PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 15:38;githubbot;600","anmolnar commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-728141464


   If you tell me your Jira id, I can add you to contributors list and assign Jiras yourself.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 15:40;githubbot;600","nsnhuang commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-728157480


   > If you tell me your Jira id, I can add you to contributors list and assign Jiras yourself.
   
   That excites me！I will keep trying. Here's my Jira information.
   Username:	nsnhuang
   Full name:	huangwenbo


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 16:05;githubbot;600","anmolnar commented on pull request #1525:
URL: https://github.com/apache/zookeeper/pull/1525#issuecomment-728319213


   It's done. Have fun! ;)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 20:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,18600,,,0,18600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-11-06 07:19:03.0,,,,,,,,,,"0|z0kc00:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
addWatch api should check the null watch,ZOOKEEPER-3992,13338643,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ztzg,maoling,maoling,03/Nov/20 13:23,04/Apr/21 05:24,13/Jul/23 09:08,09/Nov/20 11:21,,,,,,,,,,3.6.3,3.7.0,3.8.0,,,java client,,,,0,pull-request-available,,"{code:java}
public void addWatch(String basePath, Watcher watcher, AddWatchMode mode)
        throws KeeperException, InterruptedException {
    PathUtils.validatePath(basePath);
    String serverPath = prependChroot(basePath);

    RequestHeader h = new RequestHeader();
    h.setType(ZooDefs.OpCode.addWatch);
    AddWatchRequest request = new AddWatchRequest(serverPath, mode.getMode());
    ReplyHeader r = cnxn.submitRequest(h, request, new ErrorResponse(),
    
{code}
we need to _*validateWatcher(watcher)*_ to ** avoid the case:
{code:java}
zk.addWatch(""/a/b"", null, PERSISTENT_RECURSIVE);
{code}",,maoling,mino181295,ztzg,,,,,,,,,,,,,,,,,"mino181295 opened a new pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529


   ```
   public void addWatch(String basePath, Watcher watcher, AddWatchMode mode)
           throws KeeperException, InterruptedException {
       PathUtils.validatePath(basePath);
       String serverPath = prependChroot(basePath);
   
       RequestHeader h = new RequestHeader();
       h.setType(ZooDefs.OpCode.addWatch);
       AddWatchRequest request = new AddWatchRequest(serverPath, mode.getMode());
       ReplyHeader r = cnxn.submitRequest(h, request, new ErrorResponse(),
   ```
   we need to validateWatcher(watcher) to avoid the case:
   ```
   zk.addWatch(""/a/b"", null, PERSISTENT_RECURSIVE);
   ```
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 00:18;githubbot;600","ztzg closed pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 11:21;githubbot;600","ztzg commented on pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529#issuecomment-723951405


   Merged into `master`.  Thank you, @mino181295!
   
   @eolivelli: Is this something we should backport?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 11:23;githubbot;600","maoling commented on pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529#issuecomment-723958293


   LGTM. AFAIK, this minor bug also existed in the `branch-3.6`


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 11:36;githubbot;600","eolivelli commented on pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529#issuecomment-723992296


   @ztzg @maoling is right, we can cherry pick to branch-3.6


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:49;githubbot;600","ztzg commented on pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529#issuecomment-724233335


   Unfortunately, it's not just a matter of cherry-picking the fix, because of the JUnit upgrade.
   
   I have a backport [here](https://github.com/ztzg/zookeeper/commit/56752580c).
   
   @mino181295: do you want to submit a new PR against branch-3.6, or should I just do it?  (I'll keep you as the author in any case.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 19:38;githubbot;600","mino181295 commented on pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529#issuecomment-724608870


   > Unfortunately, it's not just a matter of cherry-picking the fix, because of the JUnit upgrade.
   > 
   > I have a backport [here](https://github.com/ztzg/zookeeper/commit/56752580c).
   > 
   > @mino181295: do you want to submit a new PR against branch-3.6, or should I just do it? (I'll keep you as the author in any case.)
   
   Yes, I can try. Sohould I include the JUnit test? @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 10:21;githubbot;600","ztzg commented on pull request #1529:
URL: https://github.com/apache/zookeeper/pull/1529#issuecomment-724928063


   > > Unfortunately, it's not just a matter of cherry-picking the fix, because of the JUnit upgrade.
   > > I have a backport [here](https://github.com/ztzg/zookeeper/commit/56752580c).
   > > @mino181295: do you want to submit a new PR against branch-3.6, or should I just do it? (I'll keep you as the author in any case.)
   > 
   > Yes, I can try. Sohould I include the JUnit test? @ztzg
   
   Yes, please—and if you look closer at my link above, https://github.com/ztzg/zookeeper/commit/56752580c, you'll see that that commit already includes an adapted unit test.  (I haven't run the full suite, though.)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Nov/20 19:49;githubbot;600","mino181295 opened a new pull request #1531:
URL: https://github.com/apache/zookeeper/pull/1531


   This is the backport pull request for https://github.com/apache/zookeeper/pull/1529
   
   Main issue [ZOOKEEPER-3992](https://issues.apache.org/jira/projects/ZOOKEEPER/issues/ZOOKEEPER-3992?filter=allissues)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 00:15;githubbot;600","mino181295 commented on pull request #1531:
URL: https://github.com/apache/zookeeper/pull/1531#issuecomment-725046609


   PTAL @ztzg 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 00:17;githubbot;600","ztzg commented on pull request #1531:
URL: https://github.com/apache/zookeeper/pull/1531#issuecomment-732115188


   Thank you, @mino181295! This has now been merged in `branch-3.6`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 11:54;githubbot;600","ztzg closed pull request #1531:
URL: https://github.com/apache/zookeeper/pull/1531


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 11:54;githubbot;600","ztzg commented on pull request #1531:
URL: https://github.com/apache/zookeeper/pull/1531#issuecomment-732120106


   @eolivelli: Thanks. I just just assumed so, as you approved the original and followed the discussion :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 12:04;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Nov 09 11:21:59 UTC 2020,,,,,,,,,,"0|z0k91s:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Nov/20 10:35;mino181295;Hey, I was looking for a good candidate for my first Zookeeper issue.
Can I pick this up? [~maoling];;;","09/Nov/20 11:21;ztzg;Issue resolved by pull request 1529
[https://github.com/apache/zookeeper/pull/1529];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QuorumCnxManager Listener port bind retry does not retry DNS lookup,ZOOKEEPER-3991,13338634,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,lander.visterin,lander.visterin,03/Nov/20 12:46,28/Mar/21 08:54,13/Jul/23 09:08,16/Nov/20 07:53,3.6.2,,,,,,,,,3.6.3,3.7.0,,,,quorum,,,,0,pull-request-available,,"We run Zookeeper in a container environment where DNS is not stable. As recommended by the documentation, we set _electionPortBindRetry_ to 0 (keeps retrying forever).

On some instances, we get the following exception in an infinite loop, even though the address already became resolve-able:

 
{noformat}
zk-2_1  | 2020-11-03 10:57:08,407 [myid:3] - ERROR [ListenerHandler-zk-2.test:3888:QuorumCnxManager$Listener$ListenerHandler@1093] - Exception while listening
zk-2_1  | java.net.SocketException: Unresolved address
zk-2_1  | 	at java.base/java.net.ServerSocket.bind(Unknown Source)
zk-2_1  | 	at java.base/java.net.ServerSocket.bind(Unknown Source)
zk-2_1  | 	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener$ListenerHandler.createNewServerSocket(QuorumCnxManager.java:1140)
zk-2_1  | 	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener$ListenerHandler.acceptConnections(QuorumCnxManager.java:1064)
zk-2_1  | 	at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener$ListenerHandler.run(QuorumCnxManager.java:1033)
zk-2_1  | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
zk-2_1  | 	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
zk-2_1  | 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
zk-2_1  | 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
zk-2_1  | 	at java.base/java.lang.Thread.run(Unknown Source){noformat}
Zookeeper does not actually retry the DNS resolution, it just keeps using the old failed result.

 

This happens because the InetSocketAddress is created once and the DNS lookup happens when it is created.

This issue has come up previously in https://issues.apache.org/jira/browse/ZOOKEEPER-1506 but it appears to still happen here.

I have attached a repro.tar.gz to help reproduce this issue. Steps:
 * Untar repro.tar.gz
 * docker-compose up
 * See the exception keeps happening for zk-2, not for the others
 * Open db.test and uncomment the zk-2 line, increment the serial and save
 * Wait a few seconds for the DNS to refresh
 * Verify that you can resolve zk-2.test now (dig @172.16.60.2 zk-2.test) but the error keeps appearing

I have also attached a patch that resolves this. The patch will retry DNS resolution if the address is still unresolved every time it tries to create the server socket.

 ",,apurtell,lander.visterin,maoling,,,,,,,,,,,,,,,,,"lvisterin opened a new pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524


   Setting `electionPortBindRetry` to 0 (as recommended by the documentation for the setup we are using) results in this code being called in a loop. 
   
   The desired behaviour is that in case of a bad DNS reply the server socket creation will fail and keep retrying until the hostname resolves. The current behaviour is that it keeps throwing unresolved address errors even though the DNS entry became correct.
   
   For more details and reproduction steps see the Jira issue at https://issues.apache.org/jira/browse/ZOOKEEPER-3991
   
   Please note that the contents of this PR are different from the patch I initially attached to the issue.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/20 10:34;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-722357182


   I have tried to reproduce the CI error:
   
   ```
   StandaloneDisabledTest.startSingleServerTest:112->startObservers:224->startServer:176 Error- Server started in Standalone Mode! ==> expected: <true> but was: <false>
   ```
   
   But on my machine on a clean working tree I do not get any test failures, using an identical test command. Is this a known issue or should I dig deeper?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/20 12:49;githubbot;600","eolivelli commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-722934617


   I have restarted the build
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1524/2/pipeline
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/20 07:54;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-722938335


   I have been running this code for a couple of days, however today I noticed the same issue appearing in `Leader.java` 's `createServerSocket`, so I am planning to fix that in this PR too if possible.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/20 08:04;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723854767


   > I have been running this code for a couple of days, however today I noticed the same issue appearing in Leader.java 's createServerSocket, so I am planning to fix that in this PR too if possible.
   
   sure, go ahead, I'll approve the change and merge it. Let us know when you think you finished


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 08:33;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723857220


   I saw you originally guarded the address recreation with the following condition:
   
   ``` 
   if (address.isUnresolved()) { ... }
   ```
   
   Why did you decide to remove this condition? Anyway, this code shouldn't run frequently, so I'm fine to recreate the address every time... but I'm curious: having the `if (address.isUnresolved())` didn't solve the problem?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 08:37;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723870998


   > I saw you originally guarded the address recreation with the following condition:
   > 
   > ```
   > if (address.isUnresolved()) { ... }
   > ```
   > 
   > Why did you decide to remove this condition? Anyway, this code shouldn't run frequently, so I'm fine to recreate the address every time... but I'm curious: having the `if (address.isUnresolved())` didn't solve the problem?
   
   In the container environment I am running in, it is possible to get the old address of a certain Zookeeper instance when it is rescheduled. In such case the address will be ""resolved"", just to the wrong one, and it will again fail in a loop.
   
   That said I think it is reasonable to say Zookeeper does not need to support this scenario and that my DNS just has to be fixed. Most users won't run into this. So let me know if you'd prefer for me to add it back, because I do have other workarounds for this error case.
   
   > sure, go ahead, I'll approve the change and merge it. Let us know when you think you finished
   
   Have not gotten to committing this yet because I am dealing with some other strange things happening in our setup and need to make sure this patch is good. I'll leave a comment when I know more.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 09:00;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723986677


   > That said I think it is reasonable to say Zookeeper does not need to support this scenario and that my DNS just has to be fixed. Most users won't run into this. So let me know if you'd prefer for me to add it back
   
   no, I actually prefer it as it is (without the `isUnresolved`) check. I was just curious :) Thanks for your explanation!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:36;githubbot;600","symat edited a comment on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-723986677


   > That said I think it is reasonable to say Zookeeper does not need to support this scenario and that my DNS just has to be fixed. Most users won't run into this. So let me know if you'd prefer for me to add it back
   
   no, I actually prefer it as it is (without the `isUnresolved` check). I was just curious :) Thanks for your explanation!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 12:37;githubbot;600","lvisterin commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-725991120


   >however today I noticed the same issue appearing in Leader.java 's createServerSocket
   
   I have not been able to repro this one, but identified it is most likely caused by an issue on our DNS where the response flips between bad and good IP addresses (due to consistency issues). That way it was able to pass this fixed part, land in that other piece of code, and break again. The problem was that at that point things were so messed up that there are many other issues so a simple fix there does not help.
   
   Therefore I believe this PR is sufficient to make Zookeeper more resilient for users with a laggy DNS, and in cases where the DNS gives a random mix of good and bad replies it is better fixed on the user's side instead (which I did on my end).
   
   So for me this is good to be merged if you agree.
   
   Thanks for the review! 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 10:31;githubbot;600","eolivelli commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-725994957


   @symat are you okay with this patch ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 10:38;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-726157835


   sure, let's merge it! 
   I think this is some kind of a bugfix, so we should merge it to all active branches, not only to master.
   (I'm a bit overloaded right now, but I can do it on Monday, if noone else is doing it before)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:42;githubbot;600","asfgit closed pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 07:43;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-727802805


   I merged this to branch-3.6 and to master.
   The cherry-pick to branch-3.5 was not clean. I'm not really sure, but quickly checking the code I think this fix is not even needed on 3.5, we might already recreate the socket address there.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 07:52;githubbot;600","symat commented on pull request #1524:
URL: https://github.com/apache/zookeeper/pull/1524#issuecomment-727803765


   thank you @lvisterin for your contribution!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 07:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,,,,,,,,,,,,,,,,,,,,,,"03/Nov/20 12:41;lander.visterin;repro.tar.gz;https://issues.apache.org/jira/secure/attachment/13014635/repro.tar.gz",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Tue Nov 03 17:26:13 UTC 2020,,,,,,,,,,"0|z0k8zs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Nov/20 13:07;maoling;[~lander.visterin]

ZooKeeper uses the github workflow. The contributor guideline is [here](https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute);;;","03/Nov/20 17:26;lander.visterin;[~maoling],

Thank you for the link, I will make a GitHub PR when I have tested my patch more thoroughly.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.zookeeper.server.NettyServerCnxn.receiveMessage throws NullPointerException,ZOOKEEPER-3988,13338368,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,eolivelli,pratikthacker,pratikthacker,02/Nov/20 08:48,26/Jan/22 08:47,13/Jul/23 09:08,25/Jan/22 13:12,3.6.1,,,,,,,,,3.6.4,3.7.1,3.8.0,,,server,,,,0,pull-request-available,,"While upgrading K8S cluster, container running zookeeper will rollover one by one.
During this rollover, Null Pointer Exception was observed as below.
{code:java}
INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):Follower@292] - shutdown FollowerINFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):Follower@292] - shutdown FollowerINFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):LearnerZooKeeperServer@160] - Shutting downINFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ZooKeeperServer@784] - shutting downINFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestThrottler@244] - Shutting downINFO  [RequestThrottler:RequestThrottler@205] - Draining request throttler queueINFO  [RequestThrottler:RequestThrottler@181] - RequestThrottler shutdown. Dropped 0 requestsINFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):FollowerRequestProcessor@148] - Shutting downINFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):CommitProcessor@617] - Shutting downINFO  [FollowerRequestProcessor:1:FollowerRequestProcessor@112] - FollowerRequestProcessor exited loop!INFO  [CommitProcessor:1:CommitProcessor@406] - CommitProcessor exited loop!INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):FinalRequestProcessor@662] - shutdown of request processor completeERROR [nioEventLoopGroup-4-22:NettyServerCnxnFactory$CnxnChannelHandler@329] - Unexpected exception in receivejava.lang.NullPointerException: null at org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:515) ~[zookeeper-3.6.1.jar:3.6.1] at org.apache.zookeeper.server.NettyServerCnxn.processMessage(NettyServerCnxn.java:365) ~[zookeeper-3.6.1.jar:3.6.1] at org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.channelRead(NettyServerCnxnFactory.java:326) [zookeeper-3.6.1.jar:3.6.1] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.48.Final.jar:4.1.48.Final] at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.48.Final.jar:4.1.48.Final] at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.48.Final.jar:4.1.48.Final] at java.lang.Thread.run(Thread.java:834) [?:?]WARN  [nioEventLoopGroup-4-22:NettyServerCnxnFactory$CnxnChannelHandler@273] - Exception caughtjava.lang.NullPointerException: null at org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:515) ~[zookeeper-3.6.1.jar:3.6.1] at org.apache.zookeeper.server.NettyServerCnxn.processMessage(NettyServerCnxn.java:365) ~[zookeeper-3.6.1.jar:3.6.1] at org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.channelRead(NettyServerCnxnFactory.java:326) ~[zookeeper-3.6.1.jar:3.6.1] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.48.Final.jar:4.1.48.Final] at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.48.Final.jar:4.1.48.Final] at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.48.Final.jar:4.1.48.Final] at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.48.Final.jar:4.1.48.Final] at java.lang.Thread.run(Thread.java:834) [?:?] {code}

Expectation: This scenario should be handled and application should not throw such Null Pointer exception.
",K8S,belugabehr,eolivelli,lhotari,liwang,pratikthacker,symat,,,,,,,,,,,,,,"belugabehr opened a new pull request #1520:
URL: https://github.com/apache/zookeeper/pull/1520


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/20 13:33;githubbot;600","eolivelli commented on a change in pull request #1520:
URL: https://github.com/apache/zookeeper/pull/1520#discussion_r516654842



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerCnxn.java
##########
@@ -147,8 +149,9 @@ public void incrOutstandingAndCheckThrottle(RequestHeader h) {
         if (h.getXid() <= 0) {
             return;
         }
-        if (zkServer.shouldThrottle(outstandingCount.incrementAndGet())) {
-            disableRecv(false);
+        if (zkServer.isPresent()

Review comment:
       I am not sure this is what we want,
   previously we would have seen an NPE here,
   now we aren't doing anything.
   
   This is just an example,
   can you please explain better the intent of the patch ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/20 13:59;githubbot;600","belugabehr commented on a change in pull request #1520:
URL: https://github.com/apache/zookeeper/pull/1520#discussion_r516728503



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerCnxn.java
##########
@@ -147,8 +149,9 @@ public void incrOutstandingAndCheckThrottle(RequestHeader h) {
         if (h.getXid() <= 0) {
             return;
         }
-        if (zkServer.shouldThrottle(outstandingCount.incrementAndGet())) {
-            disableRecv(false);
+        if (zkServer.isPresent()

Review comment:
       My intent was to remove the NPE.  It is valid that `zkServer` could be `null` and yet there is no check for it (please review the original JIRA).
   
   Is there something else that should be done here?  Comments make it clear that `zkServer` has a valid value of `null`.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/20 14:56;githubbot;600","belugabehr commented on pull request #1520:
URL: https://github.com/apache/zookeeper/pull/1520#issuecomment-721174702


   @eolivelli For a primer on `Optional` check out:
   
   https://github.com/google/guava/wiki/UsingAndAvoidingNullExplained#optional


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/20 14:57;githubbot;600","eolivelli commented on pull request #1520:
URL: https://github.com/apache/zookeeper/pull/1520#issuecomment-721181663


   @belugabehr thanks for the pointer. I know about Optional benefits.
   My point is that I don't find the new code much better than the code without the patch, also it looks contains more boilerplate than before.
   
   Let me think more about it


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Nov/20 15:01;githubbot;600","eolivelli opened a new pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798


   Modifications:
   - prevent the NPE, the code that throws NPE is only to record some metrics for non TLS requests


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/22 11:05;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1017482467


   thank you @anmolnar for your pointer
   I have updated the test added by the patch that caused the problem 
   
   https://github.com/apache/zookeeper/commit/b842cd4b463a7c3674963f6f66fc392293c1334c#diff-508b7388fc8bead40a3f6d652a9faeed4796d12fc84b9e8fbfe657a520398e3fR179


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/22 12:59;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1017485908


   for reference, this is an alternative solution to #1770


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/22 13:04;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1017502407


   my plan is to cherry-pick this patch to 3.7.x and to 3.6.x


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/22 13:25;githubbot;600","anmolnar commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1017698135


   Great stuff! 👍 


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/22 16:40;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1018396492


   @symat @ztzg 
   CPP tests are always failing.
   I am running them locally now.
   
   the test that is failing looks unrelated to the patch


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/22 10:52;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021038442


   @symat @maoling would you have time to help here ?
   the CPP tests are failing.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 10:30;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021125355


   The test is passing for me locally


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 12:14;githubbot;600","symat commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021134841


   C client unit test failed again:
   ```
     [exec] /home/runner/work/zookeeper/zookeeper/zookeeper-client/zookeeper-client-c/tests/TestOperations.cc:296: Assertion: equality assertion failed [Expected: 1, Actual  : 0]
   ```
   
   this test is using mocked ZooKeeper Server, not even starting the real Java server, so this is completely unrelated. The test is flaky or we have some environment issue on the CI nodes. Let's merge this PR regardless of this independent CI problem.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 12:26;githubbot;600","asfgit closed pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 12:49;githubbot;600","symat commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021170900


   PR merged on master, branch-3.7 and (with slight modification due to junit version differences) also on branch-3.6. Thanks for the fix @eolivelli !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 13:14;githubbot;600","andrekramer1 commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021258557


   On this PR: NettyServerCnxnFactory.java line 462 zkServer.serverStats().incrementAuthFailedCount(); Probably also could use an if (zkServer != null). There are uses of zks in NettyServerCnxn that I was also protecting from being null. 
   It would be better if the ServerCnxn flavours were more similar as you pointed out it does a close early on exceptions. Then it may not need the SSL handshake suppression for example. 
   
   A minimal fix is probably best but in testing just branch/PR I just get it stuck at launching Zookeeper 0:
   
   14:34:25.541 [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled)] INFO  org.apache.zookeeper.server.quorum.FastLeaderElection - Notification time out: 25600 ms
   14:34:39.674 [epollEventLoopGroup-4-1] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:34:47.441 [epollEventLoopGroup-4-2] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:34:51.147 [QuorumConnectionThread-[myid=1]-1] WARN  org.apache.zookeeper.server.quorum.QuorumCnxManager - Cannot open channel to 2 at election address pulsar-zookeeper-1.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local:3888
   java.net.UnknownHostException: pulsar-zookeeper-1.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local
   	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[?:?]
   	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:?]
   	at java.net.Socket.connect(Socket.java:609) ~[?:?]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager.initiateConnection(QuorumCnxManager.java:384) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager$QuorumConnectionReqThread.run(QuorumCnxManager.java:458) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
   	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
   	at java.lang.Thread.run(Thread.java:829) [?:?]
   14:34:51.158 [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled)] INFO  org.apache.zookeeper.server.quorum.FastLeaderElection - Notification time out: 51200 ms
   14:34:51.160 [QuorumConnectionThread-[myid=1]-1] WARN  org.apache.zookeeper.server.quorum.QuorumCnxManager - Cannot open channel to 3 at election address pulsar-zookeeper-2.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local:3888
   java.net.UnknownHostException: pulsar-zookeeper-2.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local
   	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[?:?]
   	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:?]
   	at java.net.Socket.connect(Socket.java:609) ~[?:?]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager.initiateConnection(QuorumCnxManager.java:384) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager$QuorumConnectionReqThread.run(QuorumCnxManager.java:458) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
   	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
   	at java.lang.Thread.run(Thread.java:829) [?:?]
   14:35:09.729 [epollEventLoopGroup-4-1] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:35:17.480 [epollEventLoopGroup-4-2] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:35:39.785 [epollEventLoopGroup-4-1] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:35:42.371 [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled)] INFO  org.apache.zookeeper.server.quorum.FastLeaderElection - Notification time out: 60000 ms
   14:35:42.371 [QuorumConnectionThread-[myid=1]-5] WARN  org.apache.zookeeper.server.quorum.QuorumCnxManager - Cannot open channel to 3 at election address pulsar-zookeeper-2.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local:3888
   java.net.UnknownHostException: pulsar-zookeeper-2.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local
   	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[?:?]
   	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:?]
   	at java.net.Socket.connect(Socket.java:609) ~[?:?]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager.initiateConnection(QuorumCnxManager.java:384) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager$QuorumConnectionReqThread.run(QuorumCnxManager.java:458) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
   	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
   	at java.lang.Thread.run(Thread.java:829) [?:?]
   14:35:42.374 [QuorumConnectionThread-[myid=1]-4] WARN  org.apache.zookeeper.server.quorum.QuorumCnxManager - Cannot open channel to 2 at election address pulsar-zookeeper-1.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local:3888
   java.net.UnknownHostException: pulsar-zookeeper-1.pulsar-zookeeper.c8y-messaging-service.svc.cluster.local
   	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:220) ~[?:?]
   	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[?:?]
   	at java.net.Socket.connect(Socket.java:609) ~[?:?]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager.initiateConnection(QuorumCnxManager.java:384) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at org.apache.zookeeper.server.quorum.QuorumCnxManager$QuorumConnectionReqThread.run(QuorumCnxManager.java:458) [org.apache.zookeeper-zookeeper-3.8.0-SNAPSHOT.jar:3.8.0-SNAPSHOT]
   	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
   	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
   	at java.lang.Thread.run(Thread.java:829) [?:?]
   14:35:47.425 [epollEventLoopGroup-4-2] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:36:09.738 [epollEventLoopGroup-4-1] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   14:36:17.448 [epollEventLoopGroup-4-2] WARN  org.apache.zookeeper.server.NettyServerCnxnFactory - Zookeeper server is not running, close the connection before starting the TLS handshake
   
   I suspect Zookeeper 0 is not responding with ""I'm ok/up"" so kubernetes never starts up the other two instances. I saw this before and I think I side stepped it by always allowing things to progress and reply ""I'm ok/up"". Not exactly sure why the NIO server context does not suffer this problem but just closing the connection may not be enough to fix it for Netty/Pulsar/Kubernetes.
   
   So not really sure how to progress this now unless we ignore SSL for Zookeeper/Pulsar/Kubernetes to keep the throttling hack and otherwise try with my original approach if throttling can't be avoided.
   
   Hopefully I've not messed up testing or something else in building your pull request. But probably we need some more testing with Pulsar/Kubernetes at the very least?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 14:47;githubbot;600","andrekramer1 commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021260319


   I see this was merged just as I was writing up my testing. Fixes the NULL reference OK but may not be a fix for the original 3 node Zookeeper Pulsar in Kubernetes start up problem?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 14:49;githubbot;600","andrekramer1 edited a comment on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021260319


   I see this was merged just as I was writing up my testing. Fixes the NULL reference OK but may not be a fix for the original 3 node Zookeeper Pulsar in Kubernetes start up problem? https://github.com/apache/zookeeper/pull/1770
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 14:49;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021264821


   @andrekramer1 thanks for testing this patch.
   
   This is interesting
   > I suspect Zookeeper 0 is not responding with ""I'm ok/up"" so kubernetes never starts up the other two instances. I saw this before and I think I side stepped it by always allowing things to progress and reply ""I'm ok/up"". Not exactly sure why the NIO server context does not suffer this problem but just closing the connection may not be enough to fix it for Netty/Pulsar/Kubernetes.
   
   I have checked again the NIO Server connection code and the behaviour should be the same as for Netty, if the zkServer is not available then it drops the connection.
   
   
   > There are uses of zks in NettyServerCnxn that I was also protecting from being null
   
   I checked other accesses and it seemed to me that the other places should be safe (IIRC because the connection should have been dropped before reaching those parts, but I may be wrong)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 14:53;githubbot;600","andrekramer1 commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021272941


   Possibly zkServer comes up for NIO and not for Netty? Zookeeper 0 seems to be running an election before replying ""I'm ok/up"" (new warnings from my test above). I waited a few minutes and it did not seem to recover or progress any further. This was just 3 nodes on one machine as I did not have our 3 node kubernetes environment to test on. Possibly the new release can be tested with the official Helm chart just to confirm where we are now.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 15:00;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021361091


   I did a simple test on current master (with this fix).
   
   1. Prepare a configuration file with 3 nodes
   2. Start only the 1 node
   3. the node is not able to create a quorum, but it is up and running
   4. Send the 'ruok' command to the node
   5. see the result
   
   The result is ""imok"" with both Netty and Nio


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:20;githubbot;600","eolivelli edited a comment on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021361091


   I did a simple test on current master (with this fix).
   
   1. Prepare a configuration file with 3 nodes
   2. Start only the 1 node
   3. the node is not able to create a quorum, but it is up and running
   4. Send the 'ruok' command to the node
   5. see the result
   
   The result is ""imok"" with both NIO, but not with Netty
   
   so this fix is not enough and you are right !


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:21;githubbot;600","eolivelli edited a comment on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021361091


   I did a simple test on current master (with this fix).
   
   1. Prepare a configuration file with 3 nodes
   2. Start only the 1 node
   3. the node is not able to create a quorum, but it is up and running
   4. Send the 'ruok' command to the node
   5. see the result
   
   The result is ""imok"" with both NIO, but not with Netty
   
   so this fix is not enough and you are right !
   
   > 2022-01-25 17:20:48,289 [myid:1] - WARN  [nioEventLoopGroup-4-14:NettyServerCnxnFactory$CnxnChannelHandler@231] - Zookeeper server is not running, close the connection before starting the TLS handshake


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:22;githubbot;600","eolivelli edited a comment on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021361091






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:40;githubbot;600","andrekramer1 commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021258557






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:48;githubbot;600","eolivelli commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021038442






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:51;githubbot;600","symat commented on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021134841






-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:55;githubbot;600","andrekramer1 edited a comment on pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798#issuecomment-1021260319


   I see this was merged just as I was writing up my testing. Fixes the NULL reference OK but may not be a fix for the original 3 node Zookeeper Pulsar in Kubernetes start up problem? https://github.com/apache/zookeeper/pull/1770
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 16:56;githubbot;600","asfgit closed pull request #1798:
URL: https://github.com/apache/zookeeper/pull/1798


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/22 17:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,18000,,,0,18000,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3682,ZOOKEEPER-4453,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jan 25 13:12:44 UTC 2022,,,,,,,,,,"0|z0k7co:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Nov/20 18:13;belugabehr;Not sure if you were just reporting or wanted to work on it, but I put up one solution for this as a GitHub PR.

Thanks.;;;","15/Feb/21 12:04;TheDevarshiShah;Hi,

While upgrading K8S cluster, container running Zookeeper (during serving it's client) will rollover one by one.
 During this rollover, Null Pointer Exception was observed as below.
 After updating to the latest Zookeeper 3.6.2 we still see the problem.
 This is happening on a fresh install (and has all the time):

<from zk-pod-0-log:
{code:java}
2021-02-08T12:42:08.229+0000 [myid:] - ERROR [nioEventLoopGroup-4-1:NettyServerCnxnFactory$CnxnChannelHandler@329] - Unexpected exception in receive
 java.lang.NullPointerException: null
         at org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:518) ~[zookeeper-3.6.2.jar:3.6.2]
         at org.apache.zookeeper.server.NettyServerCnxn.processMessage(NettyServerCnxn.java:368) ~[zookeeper-3.6.2.jar:3.6.2]
         at org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.channelRead(NettyServerCnxnFactory.java:326) [zookeeper-3.6.2.jar:3.6.2]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.50.Final.jar:4.1.50.Final]
         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.50.Final.jar:4.1.50.Final]
         at java.lang.Thread.run(Thread.java:834) [?:?]
{code}
>

Expectation: This scenario should be handled and application should not throw such Null Pointer exception.

 

Thanks & Regards,

Devarshi K. Shah;;;","19/Feb/21 12:14;TheDevarshiShah;Hi [~belugabehr],

 

Can we get more insight / work around regarding the issue? Is Apache Zookpeer planning to fix the issue in next version?

 

Thanks & Regards,

Devarshi K. Shah;;;","23/Feb/21 07:18;TheDevarshiShah;Hi [~belugabehr],

 

Is there any update on this issue? Can we get more insight / work around regarding the issue? Is Apache Zookeeper planning to fix the issue in next version?

 

Thanks & Regards,

Devarshi K. Shah;;;","03/Mar/21 06:54;TheDevarshiShah;Hi [~belugabehr],

 

Is there any update on this issue? Can we get more insight / work around regarding the issue? Is Apache Zookeeper planning to fix the issue in next version?

 

Thanks & Regards,

Devarshi K. Shah;;;","30/Mar/21 04:35;TheDevarshiShah;Hi [~belugabehr],

Is there any update on this issue? Can we get more insight / work around regarding the issue? Is Apache Zookeeper planning to fix the issue in next version?

Thanks & Regards,
Devarshi;;;","08/Apr/21 06:41;TheDevarshiShah;Hi [~belugabehr] ,
 
As per the Apache Zookeeper official website, the latest version 3.7.0 is released. Does this release version resolved the issue ?
 
Thanks & Regards,
Devarshi;;;","12/Apr/21 06:08;TheDevarshiShah;Hi [~belugabehr] 
 
As per the Apache Zookeeper official website, the latest version 3.7.0 is released. Does this release version resolved the issue ?
 
Thanks & Regards,
Devarshi;;;","25/Nov/21 23:06;lhotari;It seems that [https://github.com/apache/zookeeper/pull/1770] is a fix for this issue.
 ;;;","26/Nov/21 05:41;TheDevarshiShah;Thanks [~lhotari]  for your help. Any idea when the fix which you've mentioned will be available in which version Zookeeper ?
 
//BR, Devarshi Shah;;;","20/Jan/22 11:08;eolivelli;I created a simpler patch

https://github.com/apache/zookeeper/pull/1798;;;","20/Jan/22 11:40;TheDevarshiShah;Hi [~lhotari] & [~eolivelli],
 
May we know which Apache Zookeeper version might fix this issue and when?
 
_//BR, Devarshi._;;;","20/Jan/22 11:56;eolivelli;[~belugabehr] I am going to pick up this patch;;;","20/Jan/22 13:47;TheDevarshiShah;Hi [~eolivelli] ,
 
I saw you've added Fix Version/s: as 3.8.0, 3.7.1, 3.6.4. So is the fix of this issue is available in all of the mentioned released?
 
_//BR, Devarshi._;;;","25/Jan/22 13:12;symat;The fix has been merged, thanks [~eolivelli] for the work!

[~TheDevarshiShah], this patch indeed will be part of  3.8.0, 3.7.1, 3.6.4.;;;",,,,,,,,,,,,,,,,,,,,,,
Build failures when running surefire tests concurrently due to bind address already in use,ZOOKEEPER-3987,13338315,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ctubbsii,ctubbsii,ctubbsii,01/Nov/20 19:00,28/Mar/21 08:54,13/Jul/23 09:08,17/Feb/21 17:15,3.7.0,,,,,,,,,3.7.0,3.8.0,,,,tests,,,,0,pull-request-available,,"It seems that many of the surefire/JUnit tests reuse the same bind address. This causes many tests to fail due to a bind address being already in use.

A recent run (using {{-Dsurefire-forkcount=2}} shows several tests that failed for this reason. These same tests do not fail when forkcount is 1 (and they don't always fail when the forkcount is higher... just sometimes, depending on timing):
{code}
[ERROR] Errors: 
[ERROR]   SaslAuthTest.testZKOperationsAfterClientSaslAuthFailure:172 » Timeout Failed t...
[ERROR]   SnapshotDigestTest.testSnapshotDigest:86->reloadSnapshotAndCheckDigest:190 » Runtime
[ERROR]   CloseSessionTxnTest.testCloseSessionTxnCompatile:44->testCloseSessionWithDifferentConfig:87->QuorumPeerTestBase.waitForOne:536 » Runtime
[ERROR]   QuorumPeerMainTest.testFailedTxnAsPartOfQuorumLoss:784->QuorumPeerTestBase.waitForOne:536 » Runtime
[ERROR]   ChrootAsyncTest.setUp:38->AsyncOpsTest.setUp:47->ClientBase.setUp:478->ClientBase.setUpWithServerId:503->ClientBase.startServer:519->ClientBase.createNewServerInstance:429 » Bind
[ERROR]   GetChildren2Test.setUp:42->ClientBase.setUp:478->ClientBase.setUpWithServerId:503->ClientBase.startServer:519->ClientBase.createNewServerInstance:429 » Bind
[ERROR]   SaslKerberosAuthOverSSLTest.testAuth » Bind Address already in use
[ERROR]   UnsupportedAddWatcherTest.setUp:105->ClientBase.setUp:478->ClientBase.setUpWithServerId:503->ClientBase.startServer:519->ClientBase.createNewServerInstance:429 » Bind
[INFO] 
[ERROR] Tests run: 2846, Failures: 2, Errors: 8, Skipped: 4
{code}",,ctubbsii,ztzg,,,,,,,,,,,,,,,,,,"ctubbsii opened a new pull request #1606:
URL: https://github.com/apache/zookeeper/pull/1606


   Increase test stability by avoiding test failures due to port
   collisions by preventing tests from running concurrently.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Feb/21 14:31;githubbot;600","ztzg closed pull request #1606:
URL: https://github.com/apache/zookeeper/pull/1606


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:13;githubbot;600","ztzg commented on pull request #1606:
URL: https://github.com/apache/zookeeper/pull/1606#issuecomment-780713058


   Picked into `master`, `branch-3.7` and `branch-3.7.0`.  Thank you, @ctubbsii!  I also hope this is good enough for us to get 3.7 out!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Feb 17 17:15:59 UTC 2021,,,,,,,,,,"0|z0k70w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Feb/21 17:15;ztzg;Issue resolved by pull request 1606
[https://github.com/apache/zookeeper/pull/1606];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client test suite hangs forever 'sss' is configured in /etc/nsswitch.conf,ZOOKEEPER-3983,13336630,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ctubbsii,ctubbsii,ctubbsii,22/Oct/20 04:03,28/Mar/21 08:54,13/Jul/23 09:08,22/Oct/20 07:53,3.7.0,,,,,,,,,3.6.3,3.7.0,,,,c client,tests,,,0,pull-request-available,,"While testing a full build on the master branch (3.7.0-SNAPSHOT), I observed that the C client tests hang indefinitely when reaching the zktest-mt's Zookeeper_close test suite (nothing is printed from that suite, but Zookeeper_init finishes and then nothing is printed)

Attaching gdb as a debugger to the zktest-mt process, with the help of [~ztzg] and [~symat] I saw that it was stuck in the sss because of the test mocking sockets, and sss requiring a non-mocked socket to call getpwuid_r and getlogin functions in zookeeper-client/zookeeper-client-c/src/zookeeper.c

Disabling the lines in zookeeper.c that called those functions, which seemed to be used for logging information only, the tests were able to proceed and complete in under 9 minutes (full-build, without running any surefire/junit tests).","Fedora 32 x86_64
default /etc/nsswitch.conf file (provided by glibc package)
sssd services are not running, but sss does appear above files in the 'passwd' entry",ctubbsii,symat,,,,,,,,,,,,,,,,,,"ctubbsii opened a new pull request #1514:
URL: https://github.com/apache/zookeeper/pull/1514


   This fixes issues with the C client tests, causing them to hang if
   certain nameservices are in use (such as SSS), which use UNIX domain
   sockets for getting the `getlogin()` and `getpwuid_r()`
   
   This change makes the mocking of sockets less aggressive, since the
   tests do not need to mock `AF_UNIX` socket types.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/20 05:17;githubbot;600","ctubbsii commented on pull request #1514:
URL: https://github.com/apache/zookeeper/pull/1514#issuecomment-714234312


   @ztzg @symat - I think this might be a good fix, at least in the short term, for the issue we discussed in Slack.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/20 05:18;githubbot;600","eolivelli commented on pull request #1514:
URL: https://github.com/apache/zookeeper/pull/1514#issuecomment-714298955


   @symat  please cherry pick to branch-3.6 if you are going to merge


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/20 07:42;githubbot;600","symat commented on pull request #1514:
URL: https://github.com/apache/zookeeper/pull/1514#issuecomment-714299154


   OK, I'll
   thanks for the reminder


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/20 07:42;githubbot;600","asfgit closed pull request #1514:
URL: https://github.com/apache/zookeeper/pull/1514


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/20 07:51;githubbot;600","symat commented on pull request #1514:
URL: https://github.com/apache/zookeeper/pull/1514#issuecomment-714306038


   merged, thanks @ctubbsii for the contribution!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/20 07:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,"22/Oct/20 04:04;ctubbsii;backtrace.txt;https://issues.apache.org/jira/secure/attachment/13013954/backtrace.txt","22/Oct/20 04:10;ctubbsii;workaround.patch;https://issues.apache.org/jira/secure/attachment/13013955/workaround.patch",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Oct 22 07:53:58 UTC 2020,,,,,,,,,,"0|z0jwmw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Oct/20 07:53;symat;Issue resolved by pull request 1514
[https://github.com/apache/zookeeper/pull/1514];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clients can corrupt the audit log,ZOOKEEPER-3979,13336135,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,19/Oct/20 19:40,28/Mar/21 08:54,13/Jul/23 09:08,16/Nov/20 08:05,,,,,,,,,,3.7.0,,,,,server,,,,0,pull-request-available,,"As discussed in [this PR|https://github.com/apache/zookeeper/pull/1503#issuecomment-710549123], it is possible for a client (authenticated or not) to ""SPAM"" and corrupt the audit log.

As far as I can tell, the following works on any server, because the {{digest}} provider is always active and accepts (almost) arbitrary strings:

{noformat}
addauth digest veryimportant@EXAMPLE.COM:whatever
create /dangerousnode
{noformat}

Note that ""whatever"" in the example above doesn't have to be a known or valid password. Similarly, the string to the left of {{:}} is not validated in any way; it is just copied as-is into the {{Id}} associated with the connection.

This results in entries akin to the following in the audit log:

{noformat}
2020-10-15 09:40:43,173 INFO audit.Log4jAuditLogger: session=0x100eefe34a40000	user=zkcli@CROSSTWINE.COM,veryimportant@EXAMPLE.COM,0:0:0:0:0:0:0:1	ip=0:0:0:0:0:0:0:1	operation=create	znode=/dangerousnode	znode_type=persistent	result=success
{noformat}

Note how the scheme is not mentioned; all that is visible is the ""user name"" part of the {{Id}}.

This could lead an hypothetical audit application to conclude that it was okay for that connection to create {{/dangerousnode}} because it was ""seriously"" authenticated as {{veryimportant@EXAMPLE.COM}}.

It is possible to use that loophole to corrupt the audit log in various ways, including creating fake entries.  It is not even necessary to use a dedicated client; {{Ctrl+Q Ctrl+J}} can cause literal newlines to be inserted via {{zkCli.sh}}:

{noformat}
addauth digest ""fakeid^JTHIS REALLY SHOULDN'T BE THERE:whatever""
{noformat}

The result is a ""two-line entry"" in the audit log:

{noformat}
2020-10-16 21:42:06,546 INFO audit.Log4jAuditLogger: session=0x100f6b85af80001 user=""fakeid
THIS REALLY SHOULDN'T BE THERE,zkcli@CROSSTWINE.COM,0:0:0:0:0:0:0:1 ip=0:0:0:0:0:0:0:1	operation=create	znode=/yolo4	znode_type=persistent	result=success
{noformat}

I would suggest:

# Adding a setting which allows disabling the {{digest}} provider on production servers;
# Filtering (or quoting/escaping/censoring) the user names/principals which are written to the audit log (by scheme, or perhaps by dangerous characters).

",,symat,ztzg,,,,,,,,,,,,,,,,,,"ztzg commented on pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#issuecomment-723959544


   @eolivelli, @symat: Would you have an opinion on this? Or should I polish the patch and move it out of ""draft"" mode?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 11:39;githubbot;600","symat commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r519806111



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/DigestAuthDisabledTest.java
##########
@@ -0,0 +1,74 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.test;
+
+import static org.junit.jupiter.api.Assertions.fail;
+import java.io.IOException;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.KeeperException;
+import org.apache.zookeeper.TestableZooKeeper;
+import org.apache.zookeeper.WatchedEvent;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooKeeper;
+import org.junit.jupiter.api.Test;
+
+public class DigestAuthDisabledTest extends ClientBase {
+
+    static {

Review comment:
       Currently this configuration escapes this test and can potentially cause intermittent failures in other test cases. Please set this system property in a `@BeforeAll` method and clean it `@AfterAll`.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 13:24;githubbot;600","symat commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r519813881



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/Request.java
##########
@@ -467,26 +467,7 @@ public void logLatency(SummarySet metric, String key) {
      * session
      */

Review comment:
       also please extend the JavaDoc here, that not all users will be returned, only the users which are belonged to a scheme ""visible for auditing"". (as far as I can tell only audit logs used this method... maybe we could even rename it to `getUsersForAudit`)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 13:28;githubbot;600","eolivelli commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r519814562



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java
##########
@@ -31,13 +31,26 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(DigestAuthenticationProvider.class);
 
+    private static final String DIGEST_AUTH_ENABLED = ""zookeeper.DigestAuthenticationProvider.enabled"";
+
     /** specify a command line property with key of
      * ""zookeeper.DigestAuthenticationProvider.superDigest""
      * and value of ""super:&lt;base64encoded(SHA1(password))&gt;"" to enable
      * super user access (i.e. acls disabled)
      */
     private static final String superDigest = System.getProperty(""zookeeper.DigestAuthenticationProvider.superDigest"");
 
+    private static final boolean enabled;

Review comment:
       there won't be an easy way to turn in off/on during tests.
   do we need a static variable ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 13:29;githubbot;600","symat commented on pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#issuecomment-724018214


   > I was considering adding a ""fourth commit,"" making sure field values written to audit log entries are systematically escaped, but am not sure which encoding to use. Is there a precedent in the code base? In any case, a subset of URL encoding may be good enough; e.g.: % → %25, \t → %09, \n → %0A, and everything non-ASCII to %-encoded UTF-8 bytes. WDYT?
   
   I don't have a strong opinion about this. I don't know about any precedent for this...  do you think this would be necessary? Do we expect that user names / schema ids would contain any ""dangerous"" characters? If the logs are processed by some scripts, then maybe escaping \n (or even \r) might be good. On the other hand the log processing tools are usually more robust and can handle multiline logs too (e.g. stacktraces). Also you can configure log4j to produce UTF-8 log files I guess.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 13:37;githubbot;600","ztzg commented on pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#issuecomment-725535273


   > > I was considering adding a ""fourth commit,"" making sure field values written to audit log entries are systematically escaped, but am not sure which encoding to use. Is there a precedent in the code base? In any case, a subset of URL encoding may be good enough; e.g.: % → %25, \t → %09, \n → %0A, and everything non-ASCII to %-encoded UTF-8 bytes. WDYT?
   > 
   > I don't have a strong opinion about this. I don't know about any precedent for this... do you think this would be necessary? Do we expect that user names / schema ids would contain any ""dangerous"" characters? If the logs are processed by some scripts, then maybe escaping \n (or even \r) might be good. On the other hand the log processing tools are usually more robust and can handle multiline logs too (e.g. stacktraces). Also you can configure log4j to produce UTF-8 log files I guess.
   
   I am not adding that ""fourth commit"" for now, and have also ""disabled"" the third one, which does per-scheme filtering.  (I have kept it in the individual commits on this PR in case somebody wants to fish it out, but it will ""disappear"" once everything is squashed by the committer.)
   
   I think we should be careful not to inject unsanitized user data into logs in general. But the above seems overkill because authentication IDs are normally not under user control… except when the `digest` provider is enabled—and we now have a flag to block that vector.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 16:52;githubbot;600","ztzg commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r521496875



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java
##########
@@ -31,13 +31,26 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(DigestAuthenticationProvider.class);
 
+    private static final String DIGEST_AUTH_ENABLED = ""zookeeper.DigestAuthenticationProvider.enabled"";
+
     /** specify a command line property with key of
      * ""zookeeper.DigestAuthenticationProvider.superDigest""
      * and value of ""super:&lt;base64encoded(SHA1(password))&gt;"" to enable
      * super user access (i.e. acls disabled)
      */
     private static final String superDigest = System.getProperty(""zookeeper.DigestAuthenticationProvider.superDigest"");
 
+    private static final boolean enabled;

Review comment:
       Fixed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 16:52;githubbot;600","ztzg commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r521497549



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/Request.java
##########
@@ -467,26 +467,7 @@ public void logLatency(SummarySet metric, String key) {
      * session
      */

Review comment:
       I have extended the JavaDoc, but not mentioning any filtering as I have now removed it :)  ([Rationale](https://github.com/apache/zookeeper/pull/1519#issuecomment-725535273))




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 16:53;githubbot;600","ztzg commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r521497815



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/DigestAuthDisabledTest.java
##########
@@ -0,0 +1,74 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.test;
+
+import static org.junit.jupiter.api.Assertions.fail;
+import java.io.IOException;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.KeeperException;
+import org.apache.zookeeper.TestableZooKeeper;
+import org.apache.zookeeper.WatchedEvent;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooKeeper;
+import org.junit.jupiter.api.Test;
+
+public class DigestAuthDisabledTest extends ClientBase {
+
+    static {

Review comment:
       Indeed!  Fixed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 16:54;githubbot;600","ztzg commented on a change in pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#discussion_r521496875



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java
##########
@@ -31,13 +31,26 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(DigestAuthenticationProvider.class);
 
+    private static final String DIGEST_AUTH_ENABLED = ""zookeeper.DigestAuthenticationProvider.enabled"";
+
     /** specify a command line property with key of
      * ""zookeeper.DigestAuthenticationProvider.superDigest""
      * and value of ""super:&lt;base64encoded(SHA1(password))&gt;"" to enable
      * super user access (i.e. acls disabled)
      */
     private static final String superDigest = System.getProperty(""zookeeper.DigestAuthenticationProvider.superDigest"");
 
+    private static final boolean enabled;

Review comment:
       Fixed.
   
   (I had cargo-culted that fragment from `ZooKeeperServer.java`, and wanted to keep the `{} = {}` log statement.  It's a bit bizarre to now have a log statement in an `isEnabled` method, but I suppose we can live with it as it's only called once at startup.  Other suggestions/pointers to ""best practices"" welcome!)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 16:56;githubbot;600","ztzg commented on pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#issuecomment-725554240


   PR summary updated as it will end up in the commit message.  The previous one was:
   
   > This is a first iteration of a set of mitigations for the issue reported in ZOOKEEPER-3979,
   > ""Clients can corrupt the audit log.""
   > 
   > As far as I can tell, the first commit (allow disabling ""digest"") is sufficient for plugging the hole.
   > 
   > The second commit is just a small cleanup.
   > 
   > The functionality provided by the third commit is probably overkill.  I haven't written a test for it yet, and am tempted to just drop it—but I have included it to give you a chance of chiming in. (I'll also use it as an opportunity to ask: is using Java 8+ streams okay for new code, or is a more traditional Java style preferred?)
   > 
   > I was considering adding a ""fourth commit,"" making sure field values written to audit log entries are systematically escaped, but am not sure which encoding to use. Is there a precedent in the code base? In any case, a subset of URL encoding may be good enough; e.g.: `%` → `%25`, `\t` → `%09`, `\n` → `%0A`, and everything non-ASCII to %-encoded UTF-8 bytes. WDYT?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:26;githubbot;600","ztzg commented on pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#issuecomment-725558389


   (This PR doesn't have a Jenkins job?!  Probably because I opened is as draft… Closing/reopening to see if that fixes it.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:33;githubbot;600","ztzg closed pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:33;githubbot;600","ztzg opened a new pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519


   This is a minimally disruptive mitigation for the issue reported in ZOOKEEPER-3979, ""Clients can corrupt the audit log.""
   
   A new property allows disabling the ""legacy"" `digest` authentication mechanism, which could be used by ""an attacker"" to inject unsanitized data into audit logs.
   
   In general, ZooKeeper administrators should disable unused authentication providers, and ensure that the ones which remain enabled to not produce user IDs susceptible to confuse audit log parsers.
   
   The rest of the patch is made of assorted small cleanups which should not have any impact on operation or security.
   
   (Note that the patch *series* attached to https://github.com/apache/zookeeper/pull/1519 contains additional measures, such as filtering audit user IDs by authentication scheme, but those seem to be overkill for typical deployment scenarios.  That code could still be fished out and polished if the circumstances evolved.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:33;githubbot;600","ztzg commented on pull request #1519:
URL: https://github.com/apache/zookeeper/pull/1519#issuecomment-725558857


   Nope…  still no Jenkins.  Will create a new PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:34;githubbot;600","ztzg opened a new pull request #1533:
URL: https://github.com/apache/zookeeper/pull/1533


   This is a minimally disruptive mitigation for the issue reported in ZOOKEEPER-3979, ""Clients can corrupt the audit log.""
   
   A new property allows disabling the ""legacy"" `digest` authentication mechanism, which could be used by ""an attacker"" to inject unsanitized data into audit logs.
   
   In general, ZooKeeper administrators should disable unused authentication providers, and ensure that the ones which remain enabled to not produce user IDs susceptible to confuse audit log parsers.
   
   The rest of the patch is made of assorted small cleanups which should not have any impact on operation or security.
   
   (Note that the patch *series* attached to https://github.com/apache/zookeeper/pull/1519 contains additional measures, such as filtering audit user IDs by authentication scheme, but those seem to be overkill for typical deployment scenarios.  That code could still be fished out and polished if the circumstances evolved.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:36;githubbot;600","ztzg commented on pull request #1533:
URL: https://github.com/apache/zookeeper/pull/1533#issuecomment-725560421


   This is a continuation of https://github.com/apache/zookeeper/pull/1519 which for some reason was missing Jenkins CI job.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/20 17:37;githubbot;600","asfgit closed pull request #1533:
URL: https://github.com/apache/zookeeper/pull/1533


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 08:04;githubbot;600","symat commented on pull request #1533:
URL: https://github.com/apache/zookeeper/pull/1533#issuecomment-727810135


   thanks @ztzg for your contribution! I merged it to master.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 08:06;githubbot;600","ztzg commented on pull request #1533:
URL: https://github.com/apache/zookeeper/pull/1533#issuecomment-727815317


   Thank you, @symat!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Nov/20 08:17;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Nov 16 08:05:10 UTC 2020,,,,,,,,,,"0|z0jtlc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Nov/20 08:05;symat;Issue resolved by pull request 1533
[https://github.com/apache/zookeeper/pull/1533];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
added a shebang or a 'shell' directive to lastRevision.sh,ZOOKEEPER-3955,13333876,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,championquizzer,championquizzer,06/Oct/20 08:43,28/Mar/21 08:55,13/Jul/23 09:08,12/Oct/20 11:00,,,,,,,,,,3.6.3,3.7.0,,,,,,,,0,newbie,pull-request-available,"This solves the issue Shellcheck found by muse.dev (as part of the BugBash)

1. Added the shebang
 2. Added $(...) notation instead of legacy backticked
 3. Added double quote to prevent globbing and word splitting",,andor,championquizzer,,,,,,,,,,,,,,,,,,"asfgit closed pull request #1472:
URL: https://github.com/apache/zookeeper/pull/1472


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 10:59;githubbot;600","anmolnar commented on pull request #1472:
URL: https://github.com/apache/zookeeper/pull/1472#issuecomment-707049160


   Merged to master and branch-3.6 branches. Thanks @championquizzer !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 11:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,https://github.com/apache/zookeeper/pull/1472,,,,,,,,,,9223372036854775807,,,,,Mon Oct 12 11:00:08 UTC 2020,,,,,,,,,,"0|z0jg40:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Oct/20 11:00;andor;Issue resolved by pull request 1472
[https://github.com/apache/zookeeper/pull/1472];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
use of uninitialized data in zookeeper-client/zookeeper-client-c/src/zookeeper.c:free_auth_completion,ZOOKEEPER-3954,13333632,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ztzg,mwhudson,mwhudson,04/Oct/20 23:39,28/Mar/21 08:54,13/Jul/23 09:08,12/Oct/20 06:41,3.6.2,,,,,,,,,3.5.9,3.6.3,3.7.0,,,c client,,,,0,pull-request-available,,"When compiled with {{-O3}} and {{gcc-10}} (which is the default for Ubuntu on ppc64el), compilation fails like this:
{code}
/bin/bash ./libtool -tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Werror -g -O3 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c libtool: compile: gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wdate-time -D_FORTIFY_SOURCE=2 -Wall -Werror -g -O3 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c -fPIC -DPIC -o .libs/zookeeper.o
src/zookeeper.c: In function 'free_completions': 
src/zookeeper.c:284:9: error: 'a_list.next' may be used uninitialized in this function [-Werror=maybe-uninitialized] 
284 | tmp = a_list>next; 
    | ~~~^~~~~~~~~~~~~ 
cc1: all warnings being treated as errors
{code}
 What's happening here is that free_auth_completions is being inlined into free_completions, and this lets gcc see that members of a_list are being accessed without initialization. I don't know anything like enough about this code to see if this is a bug in code paths that are actually taken but at a glance it's certainly not obviously impossible: if the two if conditions at the top level of free_completions evaluate false, the function effectively looks like this:
 
{code:c}
void free_completions(zhandle_t *zh,int callCompletion,int reason)
{ 
 auth_completion_list_t a_list; 
 free_auth_completion(&a_list); 
} 
{code}

so it's pretty clear that a_list is backed by uninitialized stack memory. Explicitly initializing the variable with ""{{a_list = \{NULL, NULL, NULL}}}"" makes the warning go away.
 ",,mwhudson,symat,ztzg,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481


   The most important change in this PR avoids a confusing and scary compilation issue [encountered by Michael Hudson-Doyle](https://issues.apache.org/jira/browse/ZOOKEEPER-3954) when building the C client with GCC 10 and ""aggressive"" optimization settings:
   
   > `free_auth_completions` is being inlined into `free_completions`, and this lets gcc see that members of `a_list` are being accessed without initialization
   
   This is (fortunately!) a red herring: what GCC doesn't see is that, in practice, `zoo_lock_auth` always returns zero, and that `a_list` is always initialized in the conditional block which follows it.
   
   That issue is easily ""fixed"" by removing the `if`.  The rest of the client code doesn't check `zoo_lock_auth`'s return value--and we have bigger issues if unconditional locks start failing anyway.
   
   The remaining changes get rid of a couple of innocuous warnings, to that the client can successfully build even when configured with `-Werror`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Oct/20 21:24;githubbot;600","ztzg commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-703898784


   This PR is against the 3.5 branch, but the commits, once reviewed, should also be cherry-picked to 3.6 and (partially) to `master`.  (Only the first commit is necessary on `master`; the other two create trivial conflicts because they have already been fixed there.)
   
   Cc: @mwhudson, @eolivelli, @symat.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Oct/20 21:28;githubbot;600","eolivelli commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-704035647


   The best practice is to send the PR against master, then send amended patches for other active branches when needed.
   
   Btw thank you very much for this fix.
   
   Please send the patch for master as well


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 05:26;githubbot;600","ztzg opened a new pull request #1486:
URL: https://github.com/apache/zookeeper/pull/1486


   The most important change in this PR avoids a confusing and scary compilation issue [encountered by Michael Hudson-Doyle](https://issues.apache.org/jira/browse/ZOOKEEPER-3954) when building the C client with GCC 10 and ""aggressive"" optimization settings:
   
   > `free_auth_completions` is being inlined into `free_completions`, and this lets gcc see that members of `a_list` are being accessed without initialization
   
   This is (fortunately!) a red herring: what GCC doesn't see is that, in practice, `zoo_lock_auth` always returns zero, and that `a_list` is always initialized in the conditional block which follows it.
   
   That issue is easily ""fixed"" by removing the `if`.  The rest of the client code doesn't check `zoo_lock_auth`'s return value--and we have bigger issues if unconditional locks start failing anyway.
   
   The remaining changes get rid of a couple of innocuous warnings, to that the client can successfully build even when configured with `-Werror`.
   
   See also https://github.com/apache/zookeeper/pull/1481.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 21:13;githubbot;600","ztzg opened a new pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487


   The in this PR avoids a confusing and scary compilation issue [encountered by Michael Hudson-Doyle](https://issues.apache.org/jira/browse/ZOOKEEPER-3954) when building the C client with GCC 10 and ""aggressive"" optimization settings:
   
   > `free_auth_completions` is being inlined into `free_completions`, and this lets gcc see that members of `a_list` are being accessed without initialization
   
   This is (fortunately!) a red herring: what GCC doesn't see is that, in practice, `zoo_lock_auth` always returns zero, and that `a_list` is always initialized in the conditional block which follows it.
   
   That issue is easily ""fixed"" by removing the `if`.  The rest of the client code doesn't check `zoo_lock_auth`'s return value--and we have bigger issues if unconditional locks start failing anyway.
   
   See also https://github.com/apache/zookeeper/pull/1481.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 21:14;githubbot;600","ztzg commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-704557446


   > The best practice is to send the PR against master, then send amended patches for other active branches when needed.
   
   Okay; here is [a patch against `master`](https://github.com/apache/zookeeper/pull/1487) and [one against `branch-3.6`](https://github.com/apache/zookeeper/pull/1486).
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Oct/20 21:16;githubbot;600","ztzg commented on pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481#issuecomment-706361637


   Okay, noted.  (But in this case, I just thought I'd push the branch as I had created it for testing anyway.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/20 19:23;githubbot;600","symat commented on pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487#issuecomment-706903747


   I'm going to merge this PR, plus the others open for branch-3.6 and 3.5)
   @eolivelli is it OK for you? (you +1 this one, but not the other two: https://github.com/apache/zookeeper/pull/1486 https://github.com/apache/zookeeper/pull/1481)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 06:38;githubbot;600","asfgit closed pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 06:41;githubbot;600","eolivelli commented on pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487#issuecomment-706936147


   Ok for all of them


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 07:35;githubbot;600","ztzg commented on pull request #1487:
URL: https://github.com/apache/zookeeper/pull/1487#issuecomment-706955745


   Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:09;githubbot;600","symat closed pull request #1486:
URL: https://github.com/apache/zookeeper/pull/1486


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:54;githubbot;600","symat closed pull request #1481:
URL: https://github.com/apache/zookeeper/pull/1481


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Oct 12 06:41:21 UTC 2020,,,,,,,,,,"0|z0jels:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Oct/20 06:58;ztzg;Hi [~mwhudson],

This should obviously be fixed, but, luckily enough, is not a big issue: the second condition in {{free_completions}} will, in practice, always evaluate to
{{true}}—as {{zoo_lock_auth}} either returns a hardcoded zero ({{_st}} variant) or is a wrapper around {{pthread_mutex_lock}} ({{_mt}} variant):

{noformat}
if (zoo_lock_auth(zh) == 0) {
    ...
}
{noformat}

I would suggest simply getting rid of the conditional (but not the locking!), as 1/ most of the client code does not check {{zoo_lock_auth}} 's return value and 2/ we have bigger problems if (unconditional) locks start failing.

What do you think?  Are you planning to submit a ""pull request,"" or should I cook one up?

Cheers, -D
;;;","05/Oct/20 07:56;mwhudson;I wasn't planning on submitting a fix, no. I can if you want...;;;","05/Oct/20 13:24;ztzg;Okay, I'll take care of it.  Thanks!;;;","05/Oct/20 21:28;ztzg;Here it is: https://github.com/apache/zookeeper/pull/1481;;;","12/Oct/20 06:41;symat;Issue resolved by pull request 1487
[https://github.com/apache/zookeeper/pull/1487];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compile Error in Zookeeper.c without SASL,ZOOKEEPER-3951,13330682,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,paragbm,paragbm,03/Oct/20 13:40,28/Mar/21 08:54,13/Jul/23 09:08,12/Oct/20 06:44,3.6.2,,,,,,,,,3.7.0,,,,,c client,,,,0,pull-request-available,,There seems to be a error in zookeeper.c at line 2849 where the field sasl_client is not protected by the conditional compile by having #ifdef HAVE_CYRUS_SASL_H. There is one more place where sasl_client field is not protected. There are many places in this file where the protection exists but not in two places. I was building with SASL disabled and I got these errors during build. ,,eolivelli,paragbm,ztzg,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1477:
URL: https://github.com/apache/zookeeper/pull/1477


   The `sasl_client` field doesn't exist when configured without SASL.  Use an accessor outside of the blocks already guarded by `HAVE_CYRUS_SASL_H`.
   
   (Reported by [Parag](https://issues.apache.org/jira/browse/ZOOKEEPER-3951).)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/20 14:44;githubbot;600","ztzg commented on pull request #1477:
URL: https://github.com/apache/zookeeper/pull/1477#issuecomment-703116025


   Thanks—though it would have been better to avoid it in the first place! :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/20 14:54;githubbot;600","symat commented on pull request #1477:
URL: https://github.com/apache/zookeeper/pull/1477#issuecomment-706902989


   I'll merge this. Master branch is enough here, right? (AFAICR SASL is not supported in3.6)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 06:36;githubbot;600","asfgit closed pull request #1477:
URL: https://github.com/apache/zookeeper/pull/1477


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 06:43;githubbot;600","ztzg commented on pull request #1477:
URL: https://github.com/apache/zookeeper/pull/1477#issuecomment-706955278


   Yes, only `master`.  Many thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Oct/20 08:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Oct 03 14:54:35 UTC 2020,,,,,,,,,,"0|z0j4wg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Oct/20 14:05;eolivelli;Do you have time to send a PR against master branch?;;;","03/Oct/20 14:25;ztzg;[~paragbm], [~eolivelli]: Feel free to submit a PR if you have a patch ready, otherwise I'll come up with a fix quickly.;;;","03/Oct/20 14:34;paragbm;[~ztzg] I do not have a patch ready. You can go ahead and submit the fix.;;;","03/Oct/20 14:45;ztzg;Okay—here is one: https://github.com/apache/zookeeper/pull/1477;;;","03/Oct/20 14:54;paragbm;Thanks! [~ztzg];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper c api sasl client memory leak,ZOOKEEPER-3944,13329196,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,xiaotian_qi,xiaotian_qi,24/Sep/20 11:43,28/Mar/21 08:55,13/Jul/23 09:08,28/Sep/20 07:27,3.6.2,,,,,,,,,3.7.0,,,,,c client,,,,0,,,"I find this memory leak through sanitizer.

[Here|https://github.com/apache/zookeeper/blob/master/zookeeper-client/zookeeper-client-c/src/zookeeper.c#L664-L665] within zookeeper_close() it destroy the client and reset it to NULL. This client is created using calloc()

In zoo_sasl_client_destroy(), the client is not freed, neither within zookeeper_close(). 

I would suggest add a free() before setting it to NULL in zookeeper_close",,eolivelli,symat,xiaotian_qi,ztzg,,,,,,,,,,,,,,,,"xiaotian-qi opened a new pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466


   Within ```zoo_sasl_client_destroy```, it carefully free all members of the sasl client, while here it doesn't free the struct itself before set it to NULL. This error is detected by leak sanitizer. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 01:16;githubbot;600","ztzg commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718483


   @eolivelli, @symat: This is independent from my https://github.com/apache/zookeeper/pull/1457; they can be applied in any order.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 04:51;githubbot;600","ztzg commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718558


   retest this please
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 04:51;githubbot;600","ztzg removed a comment on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718558


   retest this please
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 04:51;githubbot;600","ztzg edited a comment on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718483


   @eolivelli, @symat: This is independent from my https://github.com/apache/zookeeper/pull/1457; they can be applied in any order.
   
   Also: I believe the test failure is spurious.  Do we have a new ""retest"" magic phrase?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 04:54;githubbot;600","eolivelli commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698755064


   CI failed
   I have restarted the validation
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1466/2/pipeline


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 06:48;githubbot;600","ztzg commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698823263


   @eolivelli, @anmolnar @symat:
    
   > we should cherry-pick this fix to at least branch-3.6, probably also onto branch-3.5 is better
   
   No need to; the C client only has SASL support in 3.7.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 09:21;githubbot;600","xiaotian-qi opened a new pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466


   Within ```zoo_sasl_client_destroy```, it carefully free all members of the sasl client, while here it doesn't free the struct itself before set it to NULL. This error is detected by leak sanitizer. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 13:15;githubbot;600","ztzg edited a comment on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718483


   @eolivelli, @symat: This is independent from my https://github.com/apache/zookeeper/pull/1457; they can be applied in any order.
   
   Also: I believe the test failure is spurious.  Do we have a new ""retest"" magic phrase?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 13:27;githubbot;600","ztzg removed a comment on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718558


   retest this please
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 13:33;githubbot;600","ztzg commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698718483






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 13:38;githubbot;600","eolivelli commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-698755064


   CI failed
   I have restarted the validation
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1466/2/pipeline


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/20 13:44;githubbot;600","asfgit closed pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/20 07:27;githubbot;600","symat commented on pull request #1466:
URL: https://github.com/apache/zookeeper/pull/1466#issuecomment-699831711


   the patch is merged to the master branch, thanks @xiaotian-qi for the fix!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/20 07:28;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Sep/20 12:58;xiaotian_qi;0001-ZOOKEEPER-3944-Fix-sasl-memory-leak.patch;https://issues.apache.org/jira/secure/attachment/13012070/0001-ZOOKEEPER-3944-Fix-sasl-memory-leak.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Sep 28 07:27:38 UTC 2020,,,,,,,,,,"0|z0ivqw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Sep/20 20:24;ztzg;Hi [~xiaotian_qi],

Argh; nice catch.  The {{destroy}} ""method"" carefully unwinds the fields, but is indeed missing a {{free}} of the structure itself.

(I would have put the {{free}} at the end of the {{destroy}} method—a bit like how C++ {{delete}} works—but the patch generally looks fine to me.)

Are you planning to to submit this as a PR, or would you prefer I do it?  (And if I do, would you object to me moving the {{free}} inside the method, while still keeping the patch attributed to you?)

Unless [~eolivelli] or [~symat] are okay with directly applying the attached patch, of course.

Best,
Damien Diederen;;;","24/Sep/20 21:54;xiaotian_qi;Hi Damien,

I actually prefer free it in zookeeper_close, as in the destroy method it [set a state of the sasl client struct|https://github.com/apache/zookeeper/blob/master/zookeeper-client/zookeeper-client-c/src/zk_sasl.c#L118]. This looks to me like semantically destroy should not free the memory(otherwise setting the state is useless)

 

A PR is created: [https://github.com/apache/zookeeper/pull/1466];;;","25/Sep/20 04:48;ztzg;Hi [~xiaotian_qi],

Okay.

(I also had in mind that ZK {{*destroy*}} methods were freeing memory—but looking closer, it's a mix of both: {{destroy_completion_entry}} and {{destroy_zk_hashtable}}, for example, include a {{free}}, but {{destroy(zhandle_t)}}—which is quite central—doesn't.)

Thank you for submitting the PR.

Cheers, -D
;;;","25/Sep/20 06:44;eolivelli;[~xiaotian_qi] please send a Pull request, now we have all workflows integrated with github.

With a PR a CI job will validate the patch automatically for instance;;;","28/Sep/20 07:27;symat;Issue resolved by pull request 1466
[https://github.com/apache/zookeeper/pull/1466];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper Inspector throwing NullPointerExceptions and not displaying properly,ZOOKEEPER-3943,13328840,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,brentwritescode,brentwritescode,22/Sep/20 17:43,08/Feb/22 08:46,13/Jul/23 09:08,24/Jan/21 18:19,3.6.2,3.7.0,,,,,,,,3.7.0,3.8.0,,,,contrib,,,,0,pull-request-available,,"I tried a number of different ways to get Zookeeper Inspector running yesterday, but repeatedly ran into the same issue.  The Java Swing window will launch, but in an incomplete state (see attached images for broken and working views) and the corresponding console shows this stack trace repeatedly:
{code:java}
Exception in thread ""AWT-EventQueue-0"" java.lang.NullPointerExceptionException in thread ""AWT-EventQueue-0"" java.lang.NullPointerException at javax.swing.GrayFilter.createDisabledImage(GrayFilter.java:49) at javax.swing.LookAndFeel.getDisabledIcon(LookAndFeel.java:557) at javax.swing.AbstractButton.getDisabledIcon(AbstractButton.java:653) at com.apple.laf.AquaButtonUI.paintIcon(AquaButtonUI.java:363) at com.apple.laf.AquaButtonUI.paint(AquaButtonUI.java:304) at javax.swing.plaf.ComponentUI.update(ComponentUI.java:161) at javax.swing.JComponent.paintComponent(JComponent.java:780) at javax.swing.JComponent.paint(JComponent.java:1056) at javax.swing.JComponent.paintChildren(JComponent.java:889) at javax.swing.JComponent.paint(JComponent.java:1065) at javax.swing.JComponent.paintToOffscreen(JComponent.java:5210) at javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(RepaintManager.java:1579) at javax.swing.RepaintManager$PaintManager.paint(RepaintManager.java:1502) at javax.swing.RepaintManager.paint(RepaintManager.java:1272) at javax.swing.JComponent._paintImmediately(JComponent.java:5158) at javax.swing.JComponent.paintImmediately(JComponent.java:4969) at javax.swing.RepaintManager$4.run(RepaintManager.java:831) at javax.swing.RepaintManager$4.run(RepaintManager.java:814) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74) at javax.swing.RepaintManager.paintDirtyRegions(RepaintManager.java:814) at javax.swing.RepaintManager.paintDirtyRegions(RepaintManager.java:789) at javax.swing.RepaintManager.prePaintDirtyRegions(RepaintManager.java:738) at javax.swing.RepaintManager.access$1200(RepaintManager.java:64) at javax.swing.RepaintManager$ProcessingRunnable.run(RepaintManager.java:1732) at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311) at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758) at java.awt.EventQueue.access$500(EventQueue.java:97) at java.awt.EventQueue$3.run(EventQueue.java:709) at java.awt.EventQueue$3.run(EventQueue.java:703) at java.security.AccessController.doPrivileged(Native Method) at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74) at java.awt.EventQueue.dispatchEvent(EventQueue.java:728) at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205) at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116) at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105) at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101) at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93) at java.awt.EventDispatchThread.run(EventDispatchThread.java:82){code}
{{I was able to narrow this down to the icons in the *zookeeper/zookeeper-contrib/zookeeper-contrib-zooinspector/src/main/resources/icons* folder not making it into the built JAR for the subproject and being unable to be found dynamically in most scenarios.  I tried running from a number of different directories and messing with my classpath, but it didn't seem consistent and the *zooInspector.sh* script would not work either.}}

{{I found that if I added this to }}{{*zookeeper/zookeeper-contrib/zookeeper-contrib-zooinspector/pom.xml*, the tool will display and run correctly (this forces the resources folder to get packed into the built JAR): }}{{}}
{code:java}
<build>
    <resources>
        <resource>
            <directory>src/main/resources</directory>
            <includes>
                <include>**/*</include>
            </includes>
        </resource>
    </resources>
</build>{code}
As far as I can tell, this issue still exists on the master branch and in release 3.6.2.

Is this something that I could help by contributing a PR for?

I might also suggest leveraging *maven-assembly-plugin* for this particular project to build one single ""fat jar"" that includes all the required dependencies so there's only a single jar necessary to make Zookeeper Inspector run if no one has a major issue with that.

Either way, happy to help, just let me know.",,brentwritescode,eolivelli,ztzg,,,,,,,,,,,,,,,,,"brentwritescode opened a new pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551


   ISSUE
   ---
   See https://issues.apache.org/jira/browse/ZOOKEEPER-3943 for details on the issue.
   
   There are two main things being addressed in this PR:
   
   1. The Maven build for ZooInspector seems to generate an invalid JAR file that is missing graphical resources that cause the application to be non-functional (UI does not render properly, NullPointerExceptions occur constantly, etc.).
   
   2. The current Maven build instructions and run scripts for ZooInspector involve building, moving JAR files around, using relative entries on the CLASSPATH and running the scripts from the correct directory in order to use the `zooInspector.sh`/`zooInspector.cmd` launch scripts.
   
   FIXES
   ---
   For number 1, the fix is to add the `src/main/resources/*` directories to the JAR artifact built by Maven.
   
   For number 2, I've proposed changing the Maven build to use the [Maven Assembly Plugin](http://maven.apache.org/plugins/maven-assembly-plugin/) to build a single ""fat jar"" for ZooInspector that contains all of its dependencies.  The result is that building and running the tool is easier and more straightforward (in my opinion):
   
   ```
   git clone https://github.com/apache/zookeeper.git
   cd zookeeper
   mvn install -DskipTests
   cd zookeeper-contrib/zookeeper-contrib-zooinspector
   mvn install
   ./zooInspector.sh
   ```
   
   And based on the ""fat jar"" style of build and updates to the run scripts, the `zooInspector.sh` and `zooInspector.cmd` commands now successfully execute from any directory (once the project is built) as opposed to requiring you to be in the same directory as the scripts.
   
   My hope is that these changes allow people like myself who are mainly interested in using ZooInspector to easily clone the repository, build and run the tool without any issues.  I spent a chunk of time getting this all working for myself and I hope I can save others some trouble.
   
   TESTING
   ---
   I've tested cloning, building and running ZooInspector on Windows 10, Mac OS X Mojave (10.14.6) and Ubuntu Linux 18.04 using the steps above (on Java 8).
   
   I ran `mvn verify spotbugs:check checkstyle:check -Pfull-build -Dsurefire-forkcount=4` in the root directory (per https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute#HowToContribute-FinalChecksonPullRequest) and got these results:
   
   ```
   [INFO]
   [ERROR] Tests run: 2881, Failures: 4, Errors: 4, Skipped: 4
   [INFO]
   [INFO] ------------------------------------------------------------------------
   [INFO] Reactor Summary for Apache ZooKeeper 3.7.0-SNAPSHOT:
   [INFO]
   [INFO] Apache ZooKeeper ................................... SUCCESS [  7.731 s]
   [INFO] Apache ZooKeeper - Documentation ................... SUCCESS [  3.223 s]
   [INFO] Apache ZooKeeper - Jute ............................ SUCCESS [ 32.705 s]
   [INFO] Apache ZooKeeper - Server .......................... FAILURE [30:28 min]
   [INFO] Apache ZooKeeper - Metrics Providers ............... SKIPPED
   [INFO] Apache ZooKeeper - Prometheus.io Metrics Provider .. SKIPPED
   [INFO] Apache ZooKeeper - Client .......................... SKIPPED
   [INFO] Apache ZooKeeper - Client - C ...................... SKIPPED
   [INFO] Apache ZooKeeper - Recipes ......................... SKIPPED
   [INFO] Apache ZooKeeper - Recipes - Election .............. SKIPPED
   [INFO] Apache ZooKeeper - Recipes - Lock .................. SKIPPED
   [INFO] Apache ZooKeeper - Recipes - Queue ................. SKIPPED
   [INFO] Apache ZooKeeper - Assembly ........................ SKIPPED
   [INFO] Apache ZooKeeper - Compatibility Tests ............. SKIPPED
   [INFO] Apache ZooKeeper - Compatibility Tests - Curator ... SKIPPED
   [INFO] Apache ZooKeeper - Tests ........................... SKIPPED
   [INFO] Apache ZooKeeper - Contrib ......................... SKIPPED
   [INFO] Apache ZooKeeper - Contrib - Fatjar ................ SKIPPED
   [INFO] Apache ZooKeeper - Contrib - Loggraph .............. SKIPPED
   [INFO] Apache ZooKeeper - Contrib - Rest .................. SKIPPED
   [INFO] Apache ZooKeeper - Contrib - ZooInspector .......... SKIPPED
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD FAILURE
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time:  31:12 min
   [INFO] Finished at: 2020-12-05T01:08:27Z
   [INFO] ------------------------------------------------------------------------
   ```
   Since all of my proposed changes are in the `zookeeper-contrib` subtree, I'm assuming this doesn't have anything to do with my changes.  Running the same command in the `zookeeper-contrib` directory seems to pass for those tests:
   
   ```
   [INFO] ------------------------------------------------------------------------
   [INFO] Reactor Summary for Apache ZooKeeper - Contrib 3.7.0-SNAPSHOT:
   [INFO]
   [INFO] Apache ZooKeeper - Contrib ......................... SUCCESS [  8.590 s]
   [INFO] Apache ZooKeeper - Contrib - Fatjar ................ SUCCESS [ 13.636 s]
   [INFO] Apache ZooKeeper - Contrib - Loggraph .............. SUCCESS [ 20.515 s]
   [INFO] Apache ZooKeeper - Contrib - Rest .................. SUCCESS [ 13.394 s]
   [INFO] Apache ZooKeeper - Contrib - ZooInspector .......... SUCCESS [ 17.056 s]
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD SUCCESS
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time:  01:14 min
   [INFO] Finished at: 2020-12-05T01:13:22Z
   [INFO] ------------------------------------------------------------------------
   ```


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 01:15;githubbot;600","brentwritescode closed pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 04:01;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-739119229


   Unit test failed (C code).  Closing and reopening to retrigger.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 04:01;githubbot;600","brentwritescode opened a new pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551


   ISSUE
   ---
   See https://issues.apache.org/jira/browse/ZOOKEEPER-3943 for details on the issue.
   
   There are two main things being addressed in this PR:
   
   1. The Maven build for ZooInspector seems to generate an invalid JAR file that is missing graphical resources that cause the application to be non-functional (UI does not render properly, NullPointerExceptions occur constantly, etc.).
   
   2. The current Maven build instructions and run scripts for ZooInspector involve building, moving JAR files around, using relative entries on the CLASSPATH and running the scripts from the correct directory in order to use the `zooInspector.sh`/`zooInspector.cmd` launch scripts.
   
   FIXES
   ---
   For number 1, the fix is to add the `src/main/resources/*` directories to the JAR artifact built by Maven.
   
   For number 2, I've proposed changing the Maven build to use the [Maven Assembly Plugin](http://maven.apache.org/plugins/maven-assembly-plugin/) to build a single ""fat jar"" for ZooInspector that contains all of its dependencies.  The result is that building and running the tool is easier and more straightforward (in my opinion):
   
   ```
   git clone https://github.com/apache/zookeeper.git
   cd zookeeper
   mvn install -DskipTests
   cd zookeeper-contrib/zookeeper-contrib-zooinspector
   mvn install
   ./zooInspector.sh
   ```
   
   And based on the ""fat jar"" style of build and updates to the run scripts, the `zooInspector.sh` and `zooInspector.cmd` commands now successfully execute from any directory (once the project is built) as opposed to requiring you to be in the same directory as the scripts.
   
   My hope is that these changes allow people like myself who are mainly interested in using ZooInspector to easily clone the repository, build and run the tool without any issues.  I spent a chunk of time getting this all working for myself and I hope I can save others some trouble.
   
   TESTING
   ---
   I've tested cloning, building and running ZooInspector on Windows 10, Mac OS X Mojave (10.14.6) and Ubuntu Linux 18.04 using the steps above (on Java 8).
   
   I ran `mvn verify spotbugs:check checkstyle:check -Pfull-build -Dsurefire-forkcount=4` in the root directory (per https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute#HowToContribute-FinalChecksonPullRequest) and got these results:
   
   ```
   [INFO]
   [ERROR] Tests run: 2881, Failures: 4, Errors: 4, Skipped: 4
   [INFO]
   [INFO] ------------------------------------------------------------------------
   [INFO] Reactor Summary for Apache ZooKeeper 3.7.0-SNAPSHOT:
   [INFO]
   [INFO] Apache ZooKeeper ................................... SUCCESS [  7.731 s]
   [INFO] Apache ZooKeeper - Documentation ................... SUCCESS [  3.223 s]
   [INFO] Apache ZooKeeper - Jute ............................ SUCCESS [ 32.705 s]
   [INFO] Apache ZooKeeper - Server .......................... FAILURE [30:28 min]
   [INFO] Apache ZooKeeper - Metrics Providers ............... SKIPPED
   [INFO] Apache ZooKeeper - Prometheus.io Metrics Provider .. SKIPPED
   [INFO] Apache ZooKeeper - Client .......................... SKIPPED
   [INFO] Apache ZooKeeper - Client - C ...................... SKIPPED
   [INFO] Apache ZooKeeper - Recipes ......................... SKIPPED
   [INFO] Apache ZooKeeper - Recipes - Election .............. SKIPPED
   [INFO] Apache ZooKeeper - Recipes - Lock .................. SKIPPED
   [INFO] Apache ZooKeeper - Recipes - Queue ................. SKIPPED
   [INFO] Apache ZooKeeper - Assembly ........................ SKIPPED
   [INFO] Apache ZooKeeper - Compatibility Tests ............. SKIPPED
   [INFO] Apache ZooKeeper - Compatibility Tests - Curator ... SKIPPED
   [INFO] Apache ZooKeeper - Tests ........................... SKIPPED
   [INFO] Apache ZooKeeper - Contrib ......................... SKIPPED
   [INFO] Apache ZooKeeper - Contrib - Fatjar ................ SKIPPED
   [INFO] Apache ZooKeeper - Contrib - Loggraph .............. SKIPPED
   [INFO] Apache ZooKeeper - Contrib - Rest .................. SKIPPED
   [INFO] Apache ZooKeeper - Contrib - ZooInspector .......... SKIPPED
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD FAILURE
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time:  31:12 min
   [INFO] Finished at: 2020-12-05T01:08:27Z
   [INFO] ------------------------------------------------------------------------
   ```
   Since all of my proposed changes are in the `zookeeper-contrib` subtree, I'm assuming this doesn't have anything to do with my changes.  Running the same command in the `zookeeper-contrib` directory seems to pass for those tests:
   
   ```
   [INFO] ------------------------------------------------------------------------
   [INFO] Reactor Summary for Apache ZooKeeper - Contrib 3.7.0-SNAPSHOT:
   [INFO]
   [INFO] Apache ZooKeeper - Contrib ......................... SUCCESS [  8.590 s]
   [INFO] Apache ZooKeeper - Contrib - Fatjar ................ SUCCESS [ 13.636 s]
   [INFO] Apache ZooKeeper - Contrib - Loggraph .............. SUCCESS [ 20.515 s]
   [INFO] Apache ZooKeeper - Contrib - Rest .................. SUCCESS [ 13.394 s]
   [INFO] Apache ZooKeeper - Contrib - ZooInspector .......... SUCCESS [ 17.056 s]
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD SUCCESS
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time:  01:14 min
   [INFO] Finished at: 2020-12-05T01:13:22Z
   [INFO] ------------------------------------------------------------------------
   ```


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 04:01;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-739125215


   The C client unit tests seem to be failing consistently:
   
   `[2020-12-05T04:26:19.046Z] [INFO] Apache ZooKeeper - Client - C ...................... FAILURE [  0.268 s]`
   
   But that seems unrelated to this PR which is focused on ZooInspector.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 04:43;githubbot;600","eolivelli commented on a change in pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#discussion_r536536941



##########
File path: zookeeper-contrib/zookeeper-contrib-zooinspector/zooInspector.sh
##########
@@ -15,4 +15,11 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-java -cp ""zookeeper-dev-ZooInspector.jar:lib/*:lib"" org.apache.zookeeper.inspector.ZooInspector
+# Get the path to the directory containing this script
+SCRIPT_DIR=$(dirname ""$0"")
+
+# Get the path to the uber jar for this tool
+# (Requires ""mvn install"" or ""mvn package"" be run first)
+JAVA_LIB=`ls ${SCRIPT_DIR}/target/zookeeper-contrib-zooinspector-*-jar-with-dependencies.jar`

Review comment:
       If we go his way then you can simply create an executable jar and call 
   java   -jar   zooinspector-xxx.jar
   
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 07:41;githubbot;600","brentwritescode commented on a change in pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#discussion_r536819053



##########
File path: zookeeper-contrib/zookeeper-contrib-zooinspector/zooInspector.sh
##########
@@ -15,4 +15,11 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-java -cp ""zookeeper-dev-ZooInspector.jar:lib/*:lib"" org.apache.zookeeper.inspector.ZooInspector
+# Get the path to the directory containing this script
+SCRIPT_DIR=$(dirname ""$0"")
+
+# Get the path to the uber jar for this tool
+# (Requires ""mvn install"" or ""mvn package"" be run first)
+JAVA_LIB=`ls ${SCRIPT_DIR}/target/zookeeper-contrib-zooinspector-*-jar-with-dependencies.jar`

Review comment:
       That is a good point.  If we're only going to have a single JAR on the CLASSPATH then we might as well execute that JAR directly.  Let me try to make that change and update the PR.  Thanks for looking!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 16:35;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-739332977


   Retested locally on Mac OS Mojave & Windows 10 again and still seems to be working with the executable JAR approach.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Dec/20 18:42;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-740364277


   Seems like tests in Apache Zookeeper Server are failing, but these changes only involve files in zookeeper-contrib:
   
   `[2020-12-05T19:09:37.977Z] [INFO] Apache ZooKeeper - Server .......................... FAILURE [32:24 min]`
   
   Is there any way to bypass the potentially flaky tests to execute the ZooInspector tests:
   
   `[2020-12-05T19:09:37.977Z] [INFO] Apache ZooKeeper - Contrib - ZooInspector .......... SKIPPED`
   
   ?  Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Dec/20 04:16;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-742623268


   @ztzg Thanks for looking!  You raise a valid point.  From a ""looking at code"" perspective, I totally agree with you based on my knowledge of how it I think it _should_ work.
   
   What's interesting, however, is it seems to work anyway.  If I do something like this (wipe my CLASSPATH, copy it somewhere else), it still runs properly:
   
   ```
   cd ~/code/github/code/zookeeper-fork/zookeeper-contrib/zookeeper-contrib-zooinspector
   mvn clean install
   cp ./target/zookeeper-contrib-zooinspector-3.7.0-SNAPSHOT-jar-with-dependencies.jar /tmp
   export CLASSPATH=
   cd /tmp
   java -jar ./zookeeper-contrib-zooinspector-3.7.0-SNAPSHOT-jar-with-dependencies.jar
   ```
   I'll poke around and see if I can figure out why that still works, but good news I guess?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/20 16:17;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-742635837


   Ah, I think I see (sorry, hadn't looked at this for a while after I'd made the fix for myself).  
   
   When I had found the issue for myself, it had to do with the icons specifically.  The file `zookeeper-contrib/zookeeper-contrib-zooinspector/src/main/java/org/apache/zookeeper/inspector/gui/IconResource.java` looks in `/usr/share` and `/usr/share/local` first, but then it will fall back to looking for the icons relative to the classpath via `iconUrl = getClass().getResource(iconPath);` and that's why this works for icons.
   
   You are correct about the `defaultNodeViewers.cfg` file though; I definitely get the "" WARN [main] (ZooInspectorManagerImpl.java:851) - List of default node viewers is empty"" error when I move the JAR file away from the directory hierarchy and the viewing of the nodes themselves doesn't populate.  
   
   That seems fixable to match the behavior of icons where we can look in the defined location, but fall back to the CLASSPATH (i.e. inside the JAR) as a resource if it's not there.  That could possibly a follow-up PR or I can attempt to do it as part of this one.  What do you all think?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/20 16:36;githubbot;600","ztzg commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-755273054


   @eolivelli: Could you take another quick look? Unless @brentwritescode objects, I would suggest merging this in for 3.7.0.  (I can open a new ticket for the "".cfg"" topic I mentioned.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 12:31;githubbot;600","eolivelli commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-755274331


   I can't check this now. I will review tomorrow when I will have access to my laptop


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 12:34;githubbot;600","ztzg commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-755275093


   Sure, no hurry.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 12:36;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-755518164


   No objections here.  
   
   I have a fix locally on my machine for the other issue(s) you brought up @ztzg , but I think it probably makes sense to split them into a separate issue as they're a bit more involved.  Let me know if you'd like to open a ticket for that or if you'd like me to.  I'm happy to submit another PR for it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 18:57;githubbot;600","ztzg commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-755549517


   > I have a fix locally on my machine for the other issue(s) you brought up @ztzg , but I think it probably makes sense to split them into a separate issue as they're a bit more involved. Let me know if you'd like to open a ticket for that or if you'd like me to. I'm happy to submit another PR for it.
   
   Great!  Yes, I'd appreciate if you could also take care of the ticket :)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/21 19:20;githubbot;600","brentwritescode commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-756302913


   Ticket created for the secondary issue here:  https://issues.apache.org/jira/browse/ZOOKEEPER-4050
   
   Will try to get a PR together in the coming days.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jan/21 18:39;githubbot;600","ztzg commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-759515977


   @eolivelli: Ping :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 15:18;githubbot;600","ztzg closed pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/21 18:18;githubbot;600","ztzg commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-766407198


   Thank you, @brentwritescode.  This is now in `master`, `branch-3.7`, and `branch-3.7.0`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/21 18:20;githubbot;600","ztzg commented on pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551#issuecomment-766407198


   Thank you, @brentwritescode.  This is now in `master`, `branch-3.7`, and `branch-3.7.0`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/21 03:56;githubbot;600","ztzg closed pull request #1551:
URL: https://github.com/apache/zookeeper/pull/1551


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jan/21 03:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,13200,,,0,13200,,,,,,,ZOOKEEPER-3572,,,,,,,,,,,,,,,,,,,,,"22/Sep/20 17:41;brentwritescode;zoo-inspector-broken.png;https://issues.apache.org/jira/secure/attachment/13011970/zoo-inspector-broken.png","22/Sep/20 17:41;brentwritescode;zoo-inspector-working.png;https://issues.apache.org/jira/secure/attachment/13011969/zoo-inspector-working.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Jan 24 18:19:31 UTC 2021,,,,,,,,,,"0|z0itk0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Sep/20 19:32;eolivelli;Sure.

Feel free to send a PR againsts master branch;;;","05/Dec/20 01:15;brentwritescode;A pull request has been submitted:  https://github.com/apache/zookeeper/pull/1551;;;","24/Jan/21 18:19;ztzg;Issue resolved by pull request 1551
[https://github.com/apache/zookeeper/pull/1551];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C client: avoid out-of-order packets during SASL negotiation,ZOOKEEPER-3937,13327849,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,16/Sep/20 10:59,28/Mar/21 08:54,13/Jul/23 09:08,28/Sep/20 07:23,,,,,,,,,,3.7.0,,,,,c client,,,,0,,,"This is about preventing SASL-enabled C clients from sending request packets for as long as SASL negotiation is not complete.

More details in the [pull request 1457|https://github.com/apache/zookeeper/pull/1457].",,symat,ztzg,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457


   This patch prevents SASL-enabled C clients from sending request packets for as long as the SASL negociation is not complete.
       
   ""Ideally,"" applications should wait for `ZOO_CONNECTED_STATE` or `ZOO_READONLY_STATE` events before issuing requests, but this is not what happens in the wild.
   
   Without this patch, it was easy to cause a desynchronization by creating a handle and blasting requests right away.  (The added test simply avoids doing a `ctx.waitForConnected()`.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/20 11:05;githubbot;600","eolivelli commented on a change in pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#discussion_r489356880



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -344,6 +344,38 @@ static int is_sasl_auth_in_progress(zhandle_t* zh)
 #endif /* HAVE_CYRUS_SASL_H */
 }
 
+/*
+ * Extract the type field (ZOO_*_OP) of a serialized RequestHeader.
+ *
+ * (This is not the most efficient way of fetching 4 bytes, but it is
+ * currently only used during SASL negociation.)

Review comment:
       typo: negociation  -> negotiation
   here and in other places




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/20 11:16;githubbot;600","ztzg commented on a change in pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#discussion_r489361620



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -344,6 +344,38 @@ static int is_sasl_auth_in_progress(zhandle_t* zh)
 #endif /* HAVE_CYRUS_SASL_H */
 }
 
+/*
+ * Extract the type field (ZOO_*_OP) of a serialized RequestHeader.
+ *
+ * (This is not the most efficient way of fetching 4 bytes, but it is
+ * currently only used during SASL negociation.)

Review comment:
       Thanks; should be fixed now!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/20 11:23;githubbot;600","ztzg commented on pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#issuecomment-693349191


   > LGTM
   
   Great!  I was waiting for Travis to complete before notifying the relevant people, but you are too fast :)
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/20 11:38;githubbot;600","ztzg commented on a change in pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#discussion_r489387899



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -2812,6 +2844,11 @@ static void finalize_session_establishment(zhandle_t *zh) {
     LOG_DEBUG(LOGCALLBACK(zh), ""Calling a watcher for a ZOO_SESSION_EVENT and the state=ZOO_CONNECTED_STATE"");
     zh->input_buffer = 0; // just in case the watcher calls zookeeper_process() again
     PROCESS_SESSION_EVENT(zh, zh->state);
+
+    if (zh->sasl_client) {
+        /* some packets might have been delayed during SASL negotiaton. */
+        adaptor_send_queue(zh, 0);
+    }

Review comment:
       This did not show up during testing, but I have added it in my last push: as far as I can tell, nothing guarantees delayed packets will be flushed before the next ping without it.
   
   (Cc: @eolivelli)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/20 12:12;githubbot;600","eolivelli commented on a change in pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#discussion_r490018048



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -344,6 +344,38 @@ static int is_sasl_auth_in_progress(zhandle_t* zh)
 #endif /* HAVE_CYRUS_SASL_H */
 }
 
+/*
+ * Extract the type field (ZOO_*_OP) of a serialized RequestHeader.
+ *
+ * (This is not the most efficient way of fetching 4 bytes, but it is
+ * currently only used during SASL negociation.)

Review comment:
       makes sense




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 07:08;githubbot;600","eolivelli commented on a change in pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#discussion_r490018190



##########
File path: zookeeper-client/zookeeper-client-c/src/zookeeper.c
##########
@@ -2812,6 +2844,11 @@ static void finalize_session_establishment(zhandle_t *zh) {
     LOG_DEBUG(LOGCALLBACK(zh), ""Calling a watcher for a ZOO_SESSION_EVENT and the state=ZOO_CONNECTED_STATE"");
     zh->input_buffer = 0; // just in case the watcher calls zookeeper_process() again
     PROCESS_SESSION_EVENT(zh, zh->state);
+
+    if (zh->sasl_client) {
+        /* some packets might have been delayed during SASL negotiaton. */
+        adaptor_send_queue(zh, 0);
+    }

Review comment:
       makes sense




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 07:08;githubbot;600","asfgit closed pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/20 07:23;githubbot;600","symat commented on pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#issuecomment-699832543


   the patch is merged to the master branch, thank you for the fix!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/20 07:30;githubbot;600","ztzg commented on pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#issuecomment-700171170


   Fantastic; thank you!
   
   Btw., @symat and @eolivelli: I'm sure Enrico has been busy enough with the 3.6 releases, but would you per chance already have an ETA for 3.7?  Are your plans time-based, feature-based, or still in the making?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/20 17:20;githubbot;600","eolivelli commented on pull request #1457:
URL: https://github.com/apache/zookeeper/pull/1457#issuecomment-700173023


   @ztzg  please drop a message to dev@ asking for 3.7.0, that's the best way


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Sep/20 17:23;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Sep 28 07:23:57 UTC 2020,,,,,,,,,,"0|z0ing8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Sep/20 07:23;symat;Issue resolved by pull request 1457
[https://github.com/apache/zookeeper/pull/1457];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""zkServer.sh version"" returns a trailing dash",ZOOKEEPER-3931,13326593,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,Suraj Naik,eolivelli,eolivelli,09/Sep/20 05:31,04/Apr/21 05:18,13/Jul/23 09:08,04/Apr/21 05:15,,,,,,,,,,3.6.3,,,,,,,,,0,,,"When you run zkServer.sh version the result includes a few spam lines and the version reports a trailing dash 
{noformat}
bin/zkServer.sh version
ZooKeeper JMX enabled by default
Using config: /xxxxxxxxxxx/bin/../conf/zoo.cfg
Apache ZooKeeper, version 3.6.2- 09/04/2020 12:44 GMT

{noformat}
 ",,arshad.mohammad,eolivelli,Suraj Naik,surendralilhore#1,,,,,,,,,,,,,,,,"surajj-naik opened a new pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456


   Problem:
   The VersionInfoMain.java file generated by VerGen.java, which gets used by `bin/zkServer.sh version` print a trailing '-' when version qualifier is an empty string.
   
   Fix:
   Added a check to see if Qualifier is empty in the VerGen.java file
   
   Test:
   Tested manually by running the `bin/zkServer.sh version`
   Before the change:
   Apache ZooKeeper, version **3.6.2-** 09/13/2020 18:51 GMT
   After the change:
   Apache ZooKeeper, version **3.6.2** 09/13/2020 18:56 GMT
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 19:01;githubbot;600","surajj-naik commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-691711797


   @eolivelli, @phunt  please review this change


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 19:12;githubbot;600","eolivelli commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487572682



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       What happens if it is null?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:19;githubbot;600","surajj-naik commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487573123



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       In line 83, it is set to empty string, if it is null - ` w.write(""    String QUALIFIER="" + (version.qualifier == null ? ""\""\"""" : ""\"""" + version.qualifier + ""\"""") + "";\n"");` which the VersionInfoMain implements.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:23;githubbot;600","surajj-naik commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487573123



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       In line 83, it is set to empty string, if it is null - ` w.write(""    String QUALIFIER="" + (version.qualifier == null ? ""\""\"""" : ""\"""" + version.qualifier + ""\"""") + "";\n"");` which the VersionInfoMain implements. I don't think it can be null in this context.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:24;githubbot;600","ctubbsii commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487581385



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       Could do:
   
   ```suggestion
               w.write(""            (QUALIFIER == null || QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
   ```




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 21:48;githubbot;600","surajj-naik commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487646768



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       Ya, that was the logic in the first commit, i updated it to QUALIFIER.isEmpty() in the second update. @ctubbsii  I'll update the PR, thank you for the review.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/20 04:36;githubbot;600","surajj-naik commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487651085



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       @eolivelli and @ctubbsii I have made the change to include both the null check and the empty string check. Please let me know if this is alright. Thanks!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/20 04:55;githubbot;600","surajj-naik commented on a change in pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#discussion_r487716087



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
##########
@@ -119,7 +119,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             w.write(""public class "" + VERSION_CLASS_NAME + "" implements "" + PACKAGE_NAME + "".Info {\n"");
             w.write(""    public static void main(String[] args) {\n"");
             w.write(""        final String VER_STRING = MAJOR + \"".\"" + MINOR + \"".\"" + MICRO +"");
-            w.write(""            (QUALIFIER == null ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");
+            w.write(""            (QUALIFIER.isEmpty() ? \""\"" : \""-\"" + QUALIFIER)  + \"" \"" +"");

Review comment:
       Thanks, will resolve the comments then.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/20 07:49;githubbot;600","surajj-naik commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-691887588


   Thanks @eolivelli for the review


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Sep/20 07:55;githubbot;600","surajj-naik commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-692726557


   @ctubbsii Please review this change. Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Sep/20 13:48;githubbot;600","ctubbsii commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-692728364


   > @ctubbsii Please review this change. Thanks!
   
   I already provided all the feedback I had, and you've already incorporated my feedback. I have nothing further to provide. You don't need to continue tagging me. I saw the first time you tagged me and I didn't have a response. I still don't.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Sep/20 13:51;githubbot;600","eolivelli commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-693905687


   I committed the patch to branch-3.6.
   It does not apply to ""master"", probably it is not needed
   
   @surajj-naik  can you please check ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 05:39;githubbot;600","eolivelli commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-693907155


   committed as 54030ce63295145e92420952bf17cf83da371788


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 05:40;githubbot;600","eolivelli closed pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 05:40;githubbot;600","surajj-naik commented on pull request #1456:
URL: https://github.com/apache/zookeeper/pull/1456#issuecomment-694074639


   > I committed the patch to branch-3.6.
   > It does not apply to ""master"", probably it is not needed
   > 
   > @surajj-naik can you please check ?
   
   This is not needed in master, we take the version info from the pom file.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 08:14;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Apr 04 05:18:30 UTC 2021,,,,,,,,,,"0|z0ifq8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Sep/20 19:05;Suraj Naik;The VerGen.java forms the QUALFIER string. It sets the value of this string to empty string if the QUALIFER value in Version is null. While creating the VersionInfoMain.java file, it checks if the Qualifier is null, which it is not, because it gets set to empty string if it is null in the interface. Fixed the check.

 

Please review the PR.;;;","15/Sep/20 13:49;Suraj Naik;[~eolivelli] I am unable to get this assigned. Any idea why? I am able to assign issues to myself for HDFS project.;;;","03/Oct/20 09:15;surendralilhore#1;[~Suraj Naik], you should be added as contributor in this project. Zookeeper PMC/Committer's can help in this.;;;","04/Apr/21 05:15;arshad.mohammad;Created https://issues.apache.org/jira/browse/ZOOKEEPER-4273 to forward port in master branch-3.7;;;","04/Apr/21 05:18;arshad.mohammad;Thanks [~Suraj Naik] for your contribution, Added you as a contributor;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper clients timeout after leader change due to 0.0.0.0 address when in docker environment,ZOOKEEPER-3920,13324679,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,apriceq,apriceq,26/Aug/20 17:15,25/Sep/20 05:58,13/Jul/23 09:08,10/Sep/20 03:11,3.6.1,,,,,,,,,3.6.2,,,,,quorum,server,,,2,,,"[Sorry I believe this is a dupe of https://issues.apache.org/jira/browse/ZOOKEEPER-3828 and potentially https://issues.apache.org/jira/browse/ZOOKEEPER-3466 

But i am not able to attach files there for some reason so creating a new issue which hopefully allows me]

We are encountering an issue where failing over from the leader results in zookeeper clients not being able to connect successfully. They timeout waiting for a response from the server. We are attempting to upgrade some existing zookeeper clusters from 3.4.14 to 3.6.1 (not sure if relevant but stating incase it helps with pinpointing issue) which is effectively blocked by this issue. We perform the rolling upgrade (followers first then leader last) and it seems to go successfully by all indicators. But we end up in the state described in this issue where if the leader changes (either due to restart or stopping) the cluster does not seem able to start new sessions.

I've gathered some TRACE logs from our servers and will attach in the hopes they can help figure this out. 

Attached zk_repro.zip which contains the following:
 * zoo.cfg used in one of the instances (they are all the same except for the local server's ip being 0.0.0.0 in each)
 * zoo.cfg.dynamic.next (don't think this is used anywhere but is written by zookeeper at some point - I think when the first 3.6.1 container becomes leader based on the value – the file is in all containers and is the same in all as well)
 * s\{1,2,3}_zk.log - logs from each of the 3 servers. Estimated time of repro start indicated by ""// REPRO START"" text and whitespace in logs
 * repro_steps.txt - rough steps executed that result in the server logs attached

 

I'll summarize the repro here also:
 # Initially it appears to be a healthy 3 node ensemble all running 3.6.1. Server ids are 1,2,3 and 3 is the leader. Dynamic config/reconfiguration is disabled.
 # invoke srvr on each node (to verify setup and also create bookmark in logs)
 # Do a zkCli get of /zookeeper/quota  which succeeds
 # Do a restart of the leader (to same image/config) (server 2 now becomes leader, 3 is back as follower)
 # Try to perform the same zkCli get which times out (this get is done within the container)
 # Try to perform the same zkCli get but from another machine, this also times out
 # Invoke srvr on each node again (to verify that 2 is now the leader/bookmark)
 # Do a restart of server 2 (3 becomes leader, 2 follower)
 # Do a zkCli get of /zookeeper/quota which succeeds
 # Invoke srvr on each node again (to verify that 3 is leader)

I tried to keep the other ZK traffic to a minimum but there are likely some periodic mntr requests mixed from our metrics scraper.",,apriceq,blb93,daominah,maoling,maxman,stanhend,t.deml,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3829,,,,,,,,,,,ZOOKEEPER-3828,ZOOKEEPER-3466,ZOOKEEPER-3829,ZOOKEEPER-3940,,,,,,,,"27/Aug/20 04:18;apriceq;stack.yml;https://issues.apache.org/jira/secure/attachment/13010593/stack.yml","26/Aug/20 17:14;apriceq;zk_repro.zip;https://issues.apache.org/jira/secure/attachment/13010573/zk_repro.zip",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Sep 25 03:27:50 UTC 2020,,,,,,,,,,"0|z0i3x4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Aug/20 18:12;blb93;I agree this is the same issue detailed in ZOOKEEPER-3466 and ZOOKEEPER-3828. It has been reproduced in all versions in 3.5.x and 3.6.x and with or without dynamic reconfiguration enabled. 



It's also blocking our promotion from 3.4.14 to 3.5 or 3.6 branches - hoping to hear from ZK members soon on the issue soon. ;;;","26/Aug/20 19:37;maxman;As far as I can tell, everyone hitting this issue so far is using docker, right? ;;;","26/Aug/20 20:08;blb93;[~maxman] correct for everyone reporting on ZOOKEEPER-3828, but on ZOOKEEPER-3466 one report from a Kubernetes environment - although I'm not entirely sure they were having the same issue since it looks like they might have resolved it by removing resource limitations.  ;;;","26/Aug/20 20:31;apriceq;I'd imagine kubernetes solutions use containers too.

For what it is worth this also seems to reproduce easily with the docker compose stack.yml file here (using Docker for Mac anyway): [https://hub.docker.com/_/zookeeper] 
 * Start up the stack
{code:java}
docker-compose -f stack.yml up{code}

 * Verify you can interact with ZK e.g.:

{code:java}
 zkCli.sh -server host.docker.internal:2181 ls /zookeeper {code}
 * Determine current leader e.g.:

{noformat}
for i in $(seq 1 3); do echo srvr | nc localhost 218$i; done{noformat}
 * Restart the leader e.g.
{noformat}
 docker restart zktest_zoo3_1 (container names will depend on directory stack started in){noformat}

 * Try to interact with ZK ({color:#ff0000} Fails for me{color}) e.g.
{code:java}
zkCli.sh -server host.docker.internal:2181 ls /zookeeper`{code};;;","27/Aug/20 04:24;apriceq;So I'm quite far from a zookeeper expert so please understand that when reading my below inferences.

I was going through the logs I attached and noticed that there were slight differences in the logs around session creation (which is what appears to be failing in the negative case).

Here are some logs when things are working (sid:3 is leader in my case):
 * Follower (sid:1):

{noformat}
2020-08-26 16:11:21,506 [myid:1] - DEBUG [WorkerSender[myid=1]:QuorumCnxManager@743] - There is a connection already for server 2
2020-08-26 16:11:28,223 [myid:1] - TRACE [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):ZooTrace@70] - i PROPOSAL f00000001 null
2020-08-26 16:11:28,223 [myid:1] - WARN  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):Follower@170] - Got zxid 0xf00000001 expected 0x1
2020-08-26 16:11:28,226 [myid:1] - TRACE [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):ZooTrace@70] - i COMMIT f00000001 null
2020-08-26 16:11:28,226 [myid:1] - DEBUG [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):CommitProcessor@580] - Committing request:: sessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,226 [myid:1] - DEBUG [CommitProcessor:1:FinalRequestProcessor@110] - Processing request:: sessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,227 [myid:1] - TRACE [CommitProcessor:1:ZooTrace@82] - :Esessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,227 [myid:1] - INFO  [CommitProcessor:1:LearnerSessionTracker@116] - Committing global session 0x20170630c4b0000
2020-08-26 16:11:28,227 [myid:1] - DEBUG [CommitProcessor:1:DataTree@1840] - Digests are matching for Zxid: f00000001, Digest in log and actual tree: 1371985504
2020-08-26 16:11:46,804 [myid:1] - DEBUG [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@286] - Accepted socket connection from /172.17.0.1:55984
2020-08-26 16:11:46,805 [myid:1] - INFO  [NIOWorkerThread-4:NIOServerCnxn@507] - Processing srvr command from /172.17.0.1:55984
2020-08-26 16:11:46,806 [myid:1] - DEBUG [NIOWorkerThread-4:NIOServerCnxn@623] - Closed socket connection for client /172.17.0.1:55984 (no session established for client)
2020-08-26 16:12:00,155 [myid:1] - DEBUG [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@286] - Accepted socket connection from /172.17.0.1:56000
2020-08-26 16:12:00,156 [myid:1] - INFO  [NIOWorkerThread-1:NIOServerCnxn@507] - Processing mntr command from /172.17.0.1:56000
2020-08-26 16:12:00,158 [myid:1] - DEBUG [NIOWorkerThread-1:NIOServerCnxn@623] - Closed socket connection for client /172.17.0.1:56000 (no session established for client)
2020-08-26 16:12:00,847 [myid:1] - TRACE [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):ZooTrace@70] - i PROPOSAL f00000002 null
2020-08-26 16:12:00,851 [myid:1] - TRACE [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):ZooTrace@70] - i COMMIT f00000002 null
2020-08-26 16:12:00,851 [myid:1] - DEBUG [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):CommitProcessor@580] - Committing request:: sessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a
2020-08-26 16:12:00,852 [myid:1] - DEBUG [CommitProcessor:1:FinalRequestProcessor@110] - Processing request:: sessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a{noformat}

 * Leader (sid:3):

{noformat}
2020-08-26 16:11:28,220 [myid:3] - TRACE [ProcessThread(sid:3 cport:-1)::ZooTrace@82] - :Psessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a
2020-08-26 16:11:28,221 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::SessionTrackerImpl@278] - Adding session 0x20170630c4b0000
2020-08-26 16:11:28,221 [myid:3] - TRACE [ProcessThread(sid:3 cport:-1)::ZooTrace@70] - SessionTrackerImpl --- Adding session 0x20170630c4b0000 30000
2020-08-26 16:11:28,222 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::PrepRequestProcessor@1111] - Digest got from data tree is: 1371985504
2020-08-26 16:11:28,222 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::CommitProcessor@592] - Processing request:: sessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,222 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::Leader@1250] - Proposing:: sessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,225 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:ZooTrace@70] - i ACK f00000001 null
2020-08-26 16:11:28,225 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:Leader@983] - Ack zxid: 0xf00000001
2020-08-26 16:11:28,225 [myid:3] - TRACE [LearnerHandler-/10.4.27.188:37872:ZooTrace@70] - i ACK f00000001 null
2020-08-26 16:11:28,225 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:Leader@986] - outstanding proposal: 0xf00000001
2020-08-26 16:11:28,225 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:Leader@988] - outstanding proposals all
2020-08-26 16:11:28,226 [myid:3] - TRACE [SyncThread:3:Leader@983] - Ack zxid: 0xf00000001
2020-08-26 16:11:28,226 [myid:3] - TRACE [SyncThread:3:Leader@986] - outstanding proposal: 0xf00000001
2020-08-26 16:11:28,226 [myid:3] - TRACE [SyncThread:3:Leader@988] - outstanding proposals all
2020-08-26 16:11:28,226 [myid:3] - DEBUG [SyncThread:3:CommitProcessor@580] - Committing request:: sessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,226 [myid:3] - TRACE [LearnerHandler-/10.4.27.188:37872:Leader@983] - Ack zxid: 0xf00000001
2020-08-26 16:11:28,226 [myid:3] - TRACE [LearnerHandler-/10.4.27.188:37872:Leader@988] - outstanding proposals all
2020-08-26 16:11:28,226 [myid:3] - DEBUG [LearnerHandler-/10.4.27.188:37872:Leader@1001] - outstanding is 0
2020-08-26 16:11:28,226 [myid:3] - DEBUG [CommitProcessor:3:FinalRequestProcessor@110] - Processing request:: sessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,226 [myid:3] - TRACE [CommitProcessor:3:ZooTrace@82] - :Esessionid:0x20170630c4b0000 type:createSession cxid:0x0 zxid:0xf00000001 txntype:-10 reqpath:n/a
2020-08-26 16:11:28,227 [myid:3] - INFO  [CommitProcessor:3:LeaderSessionTracker@104] - Committing global session 0x20170630c4b0000
2020-08-26 16:11:28,227 [myid:3] - DEBUG [CommitProcessor:3:DataTree@1840] - Digests are matching for Zxid: f00000001, Digest in log and actual tree: 1371985504
2020-08-26 16:11:35,265 [myid:3] - DEBUG [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@286] - Accepted socket connection from /172.17.0.1:38216
2020-08-26 16:11:35,266 [myid:3] - INFO  [NIOWorkerThread-3:NIOServerCnxn@507] - Processing srvr command from /172.17.0.1:38216
2020-08-26 16:11:35,267 [myid:3] - DEBUG [NIOWorkerThread-3:NIOServerCnxn@623] - Closed socket connection for client /172.17.0.1:38216 (no session established for client)
2020-08-26 16:12:00,792 [myid:3] - DEBUG [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@286] - Accepted socket connection from /172.17.0.1:38224
2020-08-26 16:12:00,793 [myid:3] - INFO  [NIOWorkerThread-4:NIOServerCnxn@507] - Processing mntr command from /172.17.0.1:38224
2020-08-26 16:12:00,798 [myid:3] - DEBUG [NIOWorkerThread-4:NIOServerCnxn@623] - Closed socket connection for client /172.17.0.1:38224 (no session established for client)
2020-08-26 16:12:00,845 [myid:3] - TRACE [SessionTracker:SessionTrackerImpl@221] - Session closing: 0x20170630c4b0000
2020-08-26 16:12:00,846 [myid:3] - INFO  [SessionTracker:ZooKeeperServer@600] - Expiring session 0x20170630c4b0000, timeout of 30000ms exceeded
2020-08-26 16:12:00,846 [myid:3] - INFO  [RequestThrottler:QuorumZooKeeperServer@158] - Submitting global closeSession request for session 0x20170630c4b0000
2020-08-26 16:12:00,846 [myid:3] - TRACE [ProcessThread(sid:3 cport:-1)::ZooTrace@82] - :Psessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a
2020-08-26 16:12:00,846 [myid:3] - TRACE [ProcessThread(sid:3 cport:-1)::SessionTrackerImpl@221] - Session closing: 0x20170630c4b0000
2020-08-26 16:12:00,846 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::PrepRequestProcessor@1111] - Digest got from data tree is: 1371985504
2020-08-26 16:12:00,846 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::CommitProcessor@592] - Processing request:: sessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a
2020-08-26 16:12:00,847 [myid:3] - DEBUG [ProcessThread(sid:3 cport:-1)::Leader@1250] - Proposing:: sessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a
2020-08-26 16:12:00,848 [myid:3] - TRACE [SyncThread:3:Leader@983] - Ack zxid: 0xf00000002
2020-08-26 16:12:00,848 [myid:3] - TRACE [SyncThread:3:Leader@986] - outstanding proposal: 0xf00000002
2020-08-26 16:12:00,848 [myid:3] - TRACE [SyncThread:3:Leader@988] - outstanding proposals all
2020-08-26 16:12:00,850 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:ZooTrace@70] - i ACK f00000002 null
2020-08-26 16:12:00,850 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:Leader@983] - Ack zxid: 0xf00000002
2020-08-26 16:12:00,850 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:Leader@986] - outstanding proposal: 0xf00000002
2020-08-26 16:12:00,850 [myid:3] - TRACE [LearnerHandler-/10.4.12.167:57912:Leader@988] - outstanding proposals all
2020-08-26 16:12:00,850 [myid:3] - DEBUG [LearnerHandler-/10.4.12.167:57912:CommitProcessor@580] - Committing request:: sessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a
2020-08-26 16:12:00,851 [myid:3] - TRACE [LearnerHandler-/10.4.27.188:37872:ZooTrace@70] - i ACK f00000002 null
2020-08-26 16:12:00,851 [myid:3] - TRACE [LearnerHandler-/10.4.27.188:37872:Leader@983] - Ack zxid: 0xf00000002
2020-08-26 16:12:00,851 [myid:3] - TRACE [LearnerHandler-/10.4.27.188:37872:Leader@988] - outstanding proposals all
2020-08-26 16:12:00,851 [myid:3] - DEBUG [LearnerHandler-/10.4.27.188:37872:Leader@1001] - outstanding is 0
2020-08-26 16:12:00,851 [myid:3] - DEBUG [CommitProcessor:3:FinalRequestProcessor@110] - Processing request:: sessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a
2020-08-26 16:12:00,851 [myid:3] - TRACE [CommitProcessor:3:ZooTrace@82] - :Esessionid:0x20170630c4b0000 type:closeSession cxid:0x0 zxid:0xf00000002 txntype:-11 reqpath:n/a
2020-08-26 16:12:00,851 [myid:3] - DEBUG [CommitProcessor:3:SessionTrackerImpl@232] - Removing session 0x20170630c4b0000
2020-08-26 16:12:00,851 [myid:3] - TRACE [CommitProcessor:3:ZooTrace@70] - SessionTrackerImpl --- Removing session 0x20170630c4b0000{noformat}
This leader log is from the first and to last mention of what appears to be a successful session id 0x20170630c4b0000. 

 

In the negative case this is what i see:
 * Follower (sid:1):

{noformat}
2020-08-26 16:09:53,282 [myid:1] - TRACE [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):ZooTrace@70] - i PROPOSAL e00000001 null
2020-08-26 16:09:53,282 [myid:1] - WARN [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=disabled):Follower@170] - Got zxid 0xe00000001 expected 0x1{noformat}
*In the follower logs there is no COMMIT log from ZooTrace around this time or mention of the createSession request at all.*
 * Leader (sid:2):

{noformat}
2020-08-26 16:09:53,277 [myid:2] - DEBUG [NIOWorkerThread-4:SessionTrackerImpl@278] - Adding session 0x201706194f00000
2020-08-26 16:09:53,278 [myid:2] - TRACE [NIOWorkerThread-4:ZooTrace@70] - SessionTrackerImpl --- Adding session 0x201706194f00000 30000
2020-08-26 16:09:53,278 [myid:2] - DEBUG [NIOWorkerThread-4:ZooKeeperServer@1394] - Client attempting to establish new session: session = 0x201706194f00000, zxid = 0x0, timeout = 30000, address = /127.0.0.1:43616
2020-08-26 16:09:53,278 [myid:2] - TRACE [ProcessThread(sid:2 cport:-1)::ZooTrace@82] - :Psessionid:0x201706194f00000 type:createSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a
2020-08-26 16:09:53,278 [myid:2] - TRACE [ProcessThread(sid:2 cport:-1)::ZooTrace@70] - SessionTrackerImpl --- Existing session 0x201706194f00000 30000
2020-08-26 16:09:53,278 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::PrepRequestProcessor@1111] - Digest got from data tree is: 1371985504
2020-08-26 16:09:53,279 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::CommitProcessor@592] - Processing request:: sessionid:0x201706194f00000 type:createSession cxid:0x0 zxid:0xe00000001 txntype:-10 reqpath:n/a
2020-08-26 16:09:53,279 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::Leader@1250] - Proposing:: sessionid:0x201706194f00000 type:createSession cxid:0x0 zxid:0xe00000001 txntype:-10 reqpath:n/a
2020-08-26 16:09:53,284 [myid:2] - TRACE [LearnerHandler-/10.4.27.76:49898:ZooTrace@70] - i ACK e00000001 null
2020-08-26 16:09:53,284 [myid:2] - TRACE [LearnerHandler-/10.4.12.167:43880:ZooTrace@70] - i ACK e00000001 null
2020-08-26 16:09:59,838 [myid:2] - DEBUG [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@286] - Accepted socket connection from /172.17.0.1:59228
2020-08-26 16:09:59,839 [myid:2] - INFO [NIOWorkerThread-1:NIOServerCnxn@507] - Processing srvr command from /172.17.0.1:59228
2020-08-26 16:09:59,840 [myid:2] - DEBUG [NIOWorkerThread-1:NIOServerCnxn@623] - Closed socket connection for client /172.17.0.1:59228 (no session established for client)
2020-08-26 16:10:00,250 [myid:2] - DEBUG [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory$AcceptThread@286] - Accepted socket connection from /172.17.0.1:59232
2020-08-26 16:10:00,251 [myid:2] - INFO [NIOWorkerThread-2:NIOServerCnxn@507] - Processing mntr command from /172.17.0.1:59232
2020-08-26 16:10:00,255 [myid:2] - DEBUG [NIOWorkerThread-2:NIOServerCnxn@623] - Closed socket connection for client /172.17.0.1:59232 (no session established for client)
2020-08-26 16:10:16,859 [myid:2] - TRACE [SessionTracker:SessionTrackerImpl@221] - Session closing: 0x201705b99040002
2020-08-26 16:10:16,859 [myid:2] - INFO [SessionTracker:ZooKeeperServer@600] - Expiring session 0x201705b99040002, timeout of 30000ms exceeded
2020-08-26 16:10:16,860 [myid:2] - INFO [RequestThrottler:QuorumZooKeeperServer@158] - Submitting global closeSession request for session 0x201705b99040002
2020-08-26 16:10:16,860 [myid:2] - TRACE [ProcessThread(sid:2 cport:-1)::ZooTrace@82] - :Psessionid:0x201705b99040002 type:closeSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a
2020-08-26 16:10:16,860 [myid:2] - TRACE [ProcessThread(sid:2 cport:-1)::SessionTrackerImpl@221] - Session closing: 0x201705b99040002
2020-08-26 16:10:16,860 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::PrepRequestProcessor@1111] - Digest got from data tree is: 1371985504
2020-08-26 16:10:16,860 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::CommitProcessor@592] - Processing request:: sessionid:0x201705b99040002 type:closeSession cxid:0x0 zxid:0xe00000002 txntype:-11 reqpath:n/a
2020-08-26 16:10:16,860 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::Leader@1250] - Proposing:: sessionid:0x201705b99040002 type:closeSession cxid:0x0 zxid:0xe00000002 txntype:-11 reqpath:n/a
2020-08-26 16:10:16,863 [myid:2] - TRACE [LearnerHandler-/10.4.27.76:49898:ZooTrace@70] - i ACK e00000002 null
2020-08-26 16:10:16,863 [myid:2] - TRACE [LearnerHandler-/10.4.12.167:43880:ZooTrace@70] - i ACK e00000002 null
2020-08-26 16:10:24,858 [myid:2] - TRACE [SessionTracker:SessionTrackerImpl@221] - Session closing: 0x201706194f00000
2020-08-26 16:10:24,859 [myid:2] - INFO [SessionTracker:ZooKeeperServer@600] - Expiring session 0x201706194f00000, timeout of 30000ms exceeded
2020-08-26 16:10:24,859 [myid:2] - INFO [RequestThrottler:QuorumZooKeeperServer@158] - Submitting global closeSession request for session 0x201706194f00000
2020-08-26 16:10:24,859 [myid:2] - TRACE [ProcessThread(sid:2 cport:-1)::ZooTrace@82] - :Psessionid:0x201706194f00000 type:closeSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a
2020-08-26 16:10:24,860 [myid:2] - TRACE [ProcessThread(sid:2 cport:-1)::SessionTrackerImpl@221] - Session closing: 0x201706194f00000
2020-08-26 16:10:24,860 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::PrepRequestProcessor@1111] - Digest got from data tree is: 1371985504
2020-08-26 16:10:24,860 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::CommitProcessor@592] - Processing request:: sessionid:0x201706194f00000 type:closeSession cxid:0x0 zxid:0xe00000003 txntype:-11 reqpath:n/a
2020-08-26 16:10:24,860 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::Leader@1250] - Proposing:: sessionid:0x201706194f00000 type:closeSession cxid:0x0 zxid:0xe00000003 txntype:-11 reqpath:n/a
2020-08-26 16:10:24,859 [myid:2] - DEBUG [ConnnectionExpirer:NIOServerCnxn@623] - Closed socket connection for client /127.0.0.1:43616 which had sessionid 0x201706194f00000{noformat}
These leader logs are from the first and last mention of what appears to be a failed session id 0x201706194f00000. What seems to be missing are logs from *Leader@983* which would indicate a successful acknowledgement of the message (and likely unblocking the rest of the create session flow).

So i took a look at the code that should be logging that: [https://github.com/apache/zookeeper/blob/release-3.6.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java#L978-L983]. In that processAck method you can see it exits early if the leader is not *allowdToCommit.* So i then tried to check out in what cases that might be set to false. There were two: 
 * In leader.startZkServer [https://github.com/apache/zookeeper/blob/release-3.6.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java#L1518] which looks like it would get invoked when starting to lead.
 * And [https://github.com/apache/zookeeper/blob/release-3.6.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java#L944] which appears to be when committing a reconfigure (which is disabled in my case)

Since the repro using the stack.yml from the above docker page was simple enough I decided to try to build a one off zookeeper with some more logging. I added logging to indicate which (if any) of the above cases were being hit disallowing the leader from committing. Which indeed was the case (in startZKServer). I then added more logging to help diagnose why the designated leader might be different than the current server. These logs can be seen in this commit: [https://github.com/obsoleted/zookeeper/commit/f008d4b0f5345aef409013eef4a23fdd3dba5ddf]

Using this image I ran through the repro using the attached  [^stack.yml](I upped it to 5 zk nodes as part of other experimentation). Here are the logs of interest:

Working case:

 
{noformat}
zoo5_1 | 2020-08-27 04:12:42,406 [myid:5] - INFO [QuorumPeer[myid=5](plain=0.0.0.0:2181)(secure=disabled):Leader@1509] - Have quorum of supporters, sids: [[1, 2, 5],[1, 2, 5]]; starting up and setting last processed zxid: 0x100000000
zoo5_1 | 2020-08-27 04:12:42,407 [myid:5] - WARN [QuorumPeer[myid=5](plain=0.0.0.0:2181)(secure=disabled):Leader@850] - QV: server.1=zoo1:2888:3888:participant;0.0.0.0:2181
zoo5_1 | server.2=zoo2:2888:3888:participant;0.0.0.0:2181
zoo5_1 | server.3=zoo3:2888:3888:participant;0.0.0.0:2181
zoo5_1 | server.4=zoo4:2888:3888:participant;0.0.0.0:2181
zoo5_1 | server.5=0.0.0.0:2888:3888:participant;0.0.0.0:2181
zoo5_1 | version=100000000
zoo5_1 | 2020-08-27 04:12:42,409 [myid:5] - WARN [QuorumPeer[myid=5](plain=0.0.0.0:2181)(secure=disabled):Leader@851] - VotingMembers: {1=zoo1:2888:3888:participant;0.0.0.0:2181,2=zoo2:2888:3888:participant;0.0.0.0:2181, 3=zoo3:2888:3888:participant;0.0.0.0:2181, 4=zoo4:2888:3888:participant;0.0.0.0:2181,5=0.0.0.0:2888:3888:participant;0.0.0.0:2181}
zoo5_1 | 2020-08-27 04:12:42,410 [myid:5] - WARN [QuorumPeer[myid=5](plain=0.0.0.0:2181)(secure=disabled):Leader@852] - OwnAdder: /0.0.0.0:2888
zoo5_1 | 2020-08-27 04:12:42,411 [myid:5] - WARN [QuorumPeer[myid=5](plain=0.0.0.0:2181)(secure=disabled):Leader@853] - Self QAddr: /0.0.0.0:2888{noformat}
 

In this case there were no messages about being disallowed from committing. And the self address matches the address in the QuorumVerifier for the same id.

Not working case:
{noformat}
zoo4_1 | 2020-08-27 04:15:29,650 [myid:4] - INFO [QuorumPeer[myid=4](plain=0.0.0.0:2181)(secure=disabled):Leader@1509] - Have quorum of supporters, sids: [[1, 3, 4],[1, 3, 4]]; starting up and setting last processed zxid: 0x200000000
zoo4_1 | 2020-08-27 04:15:29,651 [myid:4] - WARN [QuorumPeer[myid=4](plain=0.0.0.0:2181)(secure=disabled):Leader@850] - QV: server.1=zoo1:2888:3888:participant;0.0.0.0:2181
zoo4_1 | server.2=zoo2:2888:3888:participant;0.0.0.0:2181
zoo4_1 | server.3=zoo3:2888:3888:participant;0.0.0.0:2181
zoo4_1 | server.4=zoo4:2888:3888:participant;0.0.0.0:2181
zoo4_1 | server.5=0.0.0.0:2888:3888:participant;0.0.0.0:2181
zoo4_1 | version=100000000
zoo4_1 | 2020-08-27 04:15:29,653 [myid:4] - WARN [QuorumPeer[myid=4](plain=0.0.0.0:2181)(secure=disabled):Leader@851] - VotingMembers: {1=zoo1:2888:3888:participant;0.0.0.0:2181, 2=zoo2:2888:3888:participant;0.0.0.0:2181, 3=zoo3:2888:3888:participant;0.0.0.0:2181, 4=zoo4:2888:3888:participant;0.0.0.0:2181, 5=0.0.0.0:2888:3888:participant;0.0.0.0:2181}
zoo4_1 | 2020-08-27 04:15:29,654 [myid:4] - WARN [QuorumPeer[myid=4](plain=0.0.0.0:2181)(secure=disabled):Leader@852] - OwnAdder: zoo4/172.18.0.4:2888
zoo4_1 | 2020-08-27 04:15:29,655 [myid:4] - WARN [QuorumPeer[myid=4](plain=0.0.0.0:2181)(secure=disabled):Leader@853] - Self QAddr: /0.0.0.0:2888
zoo4_1 | 2020-08-27 04:15:29,655 [myid:4] - WARN [QuorumPeer[myid=4](plain=0.0.0.0:2181)(secure=disabled):Leader@1526] - Not designated leader. Not allowed to commit. designatedLeader: 1, self: 4{noformat}
In this case the addresses do not match and as a result the leader is not allowed to commit. 

Other interesting notes:
 * The QuorumVerifier printout seems to be from the perspective of server .5 (the first leader) as it has its ip set to 0.0.0.0. Even though server.4 is the leader (and one printing out these logs).
 * This matches what is in the zoo.cfg.dynamic.next and /zookeeper/config znode.
 * Rebuilding the whole cluster removing the 0.0.0.0 references and restarting the whole demo works better with leaders being able to change. So one workaround might be to avoid using the 0.0.0.0 address for the server and ensure you use proper hostnames or IP addresses that are resolvable by the other servers. But I'm not sure how to properly ensure that the addresses will always resolve the same.
 * I am at a loss as for how to properly remove this potentially bad config from the cluster safely or why it is being used at all if dynamic configuration isn't. I'm curious if there is a way to force it to flush with a better more ""correct"" configuration once known. In our case we have a couple clusters that got into this state trying to upgrade as mentioned. We can roll back versions to keep it operational but the problematic znode (/zookeeper/config) remains so I'm not sure if going to a newer version with fixed static config will work or if it will use the stored value. I'll likely try to test this out to try to get our clusters to as normal a state as possible.

Again, I don't really understand the internals of zookeeper all that well so just trying to guess at things. Definitely seems like more understanding and insight would be appreciated into proper configuration of the addresses especially in a docker environment where lots of factors can go into how an address or ip is resolved (And to what).;;;","27/Aug/20 09:40;maoling;[~apriceq] I also reproduce this issue from the way you provided([1]), however, this issue cannot be reproduced when I deploy zk ensemble into three docker container manually with ZK release 3.6.1([2]).

Compare their zoo.cfg
{code:java}
[1]:
server.1=0.0.0.0:2888:3888;2181
server.2=zoo2:2888:3888;2181
server.3=zoo3:2888:3888;2181
[2]:
server.1=172.17.0.2:2888:3888
server.2=172.17.0.4:2888:3888
server.3=172.17.0.3:2888:3888
{code}
It may be caused by the ip resolve issue when leader election in the container environment?

[~apriceq] Good code analysis. Are you free to help us to fix this issue? If not, I can pick up it :)

ZooKeeper uses the github workflow. The contributor guideline is [here]([https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute]);;;","27/Aug/20 15:35;apriceq;I believe the case [2] will not have the issue because the ip/address that a server is locally configured for will match what is stored in the ensemble's ""QuorumVerifier"" state (i.e. for server 1 it will believe it is 172.17.0.2 which is equal to 172.17.0.2 in the shared config).

I'm afraid I might be too unfamiliar with zookeeper internals to directly help fix (i.e. own the PR) – this is the first time i've looked at the code at all, but I'll try to help out where I can in the discussion and maybe relaying what my tests have shown.

For what it is worth i think there are a few things going on and i'm not sure what the right ""fix"" is given the interaction with reconfiguration:
 * I think if reconfiguration is disabled there should be no usage of the dynamic configuration (i.e. the local, static config should be used for the QuorumVerifier not the dynamic/ensemble stored config which appears to be happening). I am actually curious if it is possible to even modify it with rolling deployments at this point (will try to test). I understand that reconfiguration/dynamic config was the only mode of operation and then made optional. Perhaps the static config path isn't as well supported any more.
 * Thinking through the handling of 0.0.0.0 as a server address. I think many configurations running in containers opt to use this as the server address because it simplifies the binding. Otherwise containers may need to run in the host network mode to successfully bind the publicly accessible IP of the container (the docker host's). Almost feels like having a separate bind address config that is independent of the server config may make sense. In our case I _think_ we can get 3.6.1 working if we configure something similar to your  [2]config but use the docker host's ips + requiring the docker containers to use the host network, but we can only do that if we had that config from the start. (Did you try moving from  [1]->[2]?)
 * Fixes in a new version aside, for folks that have a cluster that has gotten into this state what is the proper way to ""clean"" – we have downgraded a cluster to restore functionality but the /zookeeper/config znode remains. So I'm not sure if upgrading again will pick this up and use it (gonna try to test that also).

 ;;;","27/Aug/20 17:43;apriceq;Actually I might have been wrong about the value in /zookeeper/config being used. I've seen some instances where that value is different than what is logged by my code and what is in the zoo.cfg.dynamic.next file. Sometimes the value in /zookeeper/config is updated with the latest static config but the QuorumVerifier info logged and the dynamic.next file are stale (and still being used).;;;","28/Aug/20 06:58;maoling;[~apriceq] I will take a closer look at this issue at the weekend, will come back soon! :);;;","29/Aug/20 07:08;apriceq;[~maoling] - Sounds good.

If it helps, something like this seems to kind of work for some cases: [https://github.com/obsoleted/zookeeper/commit/9ce8af7053a7059d05561c03f5a6f6c31efc9b1c]

At least in some limited manual testing (i did not run all the tests), when reconfiguration is disabled, it has each server use its local config which avoids some of the issues mentioned here. I imagine it is incomplete for some cases though like Observers and such.

The dynamic/reconfig case still probably will have issues working with differing local QV config (e.g. with 0.0.0.0 ) vs shared QV (e.g. with peer accessible IP/address). I'm not sure there is a great way around that without adding separate config for local usage (i.e. how a server configures itself) versus the shared quorum info (how other servers see it).;;;","29/Aug/20 09:21;daominah;[~apriceq] can you please share the workaround config for me. I cannot start zookeeper cluster without 0.0.0.0:
My tried workaround config:
{code:java}
server.1=192.168.99.100:2888:3888;2181
server.2=192.168.99.101:2888:3888;2181
server.3=192.168.99.102:2888:3888;2181{code}
result:
{code:java}
ERROR [zkId2/192.168.99.101:3888:QuorumCnxManager$Listener@958] - Exception while listening
java.net.BindException: Cannot assign requested address (Bind failed){code}
My origin config can start the cluster, but will encounter this bug if I restart leader:

 
{code:java}
server.1=192.168.99.100:2888:3888;2181
server.2=0.0.0.0:2888:3888;2181
server.3=192.168.99.102:2888:3888;2181{code}
 ;;;","29/Aug/20 18:57;apriceq;[~daominah] - Are you using docker? – If so that configuration will only work will only work if the IP addresses being used are assigned to the container. In the example I had above the container host names were used which resolved to the container IP so the bind worked. But the network being used was just a bridge network so the cluster only really works locally. If the 192.168.99.10x addresses you are using are the addresses for the host machine then you will need to run the docker container using the host network driver (i.e. run with _--network=host_) for the bind to succeed. 

I think part of the fix for this should probably address the ability to run zookeeper in containers using a bridge network driver and allow binding to 0.0.0.0 even if the server address in the config (used by other servers/quorum) has a different IP. That is indirectly addressed in my hacky commit above but I'm not sure it will cover all cases or doesn't cause more subtle issues :).;;;","30/Aug/20 09:36;daominah;[~apriceq] thank you, running containers using host network worked;;;","30/Aug/20 11:37;maoling;[~apriceq] 

For my check, this issue has fixed by [ ZOOKEEPER-3829:fix rolling restart when dynamic reconfig is disabled]  (https://issues.apache.org/jira/browse/ZOOKEEPER-3829) Although I don't have time to know how that patch fixed this bug(a little tired this weekend), the zk software applied that patch can really escape this bug.

If I'm right, it may not exist in the current master branch now, and the coming release 3.6.2 will include that patch.

For workaround: one alternative(maybe we have better solutions) is: users have to configure this address in the zoo.cfg manually after the containers have started(Deployments cannot be automated), like this:
{code:java}
server.1=172.17.0.2:2888:3888
server.2=172.17.0.4:2888:3888
server.3=172.17.0.3:2888:3888
{code}
 

I also check the following configuration is also not working:
{code:java}
[invalid]
server.1=zoo1:2888:3888;2181
server.2=zoo3:2888:3888;2181
server.3=172.18.0.2:2888:3888;2181
{code}
[~apriceq]  please recheck what I said.


 

 

 ;;;","31/Aug/20 19:10;apriceq;[~maoling] - That is a good find. It does look like ZOOKEEPER-3829 will fix much of this. I tried the release-3.6.2 branch and I could not reproduce the issue with static config and a config like this:
server.1=0.0.0.0:2888:3888;2181
server.2=zoo2:2888:3888;2181
server.3=zoo3:2888:3888;2181
However, the same config has issues when using reconfiguration (reconfigEnabled=true). In that case killing the leader makes the cluster unavailable - no leader is able to be elected.

This probably should be a separate bug (maybe one exists already?). Unless I am missing some other configuration option (or nuanced usage of multi address support maybe) it does not seem possible to run zookeeper with reconfiguration in docker using bridge network if the other servers are not also on the same bridge network (i.e. they need to be on the same docker host  - which isn't feasible for production usage).

But with 3.6.2 (and other releases that have the ZOOKEEPER-3829 fix) using the bridge network can work if reconfiguration is disabled.;;;","01/Sep/20 03:19;maoling;[~apriceq] 

_*---> However, the same config has issues when using reconfiguration (reconfigEnabled=true). In that case killing the leader makes the cluster unavailable - no leader is able to be elected.*_

Yes, really it is. when _*reconfigEnabled*_ enables, kill the leader and other zk servers cannot elect a new one.

It's time for us to investigate more to find out the root cause of this series issues, and think higher and deeper to avoid these similar issues to happen again. I wish I can know how to fix it at the week(09-01 ~ 09-06)

Furthermore, we need to do an comprehensive smoke test for 3.6.2 in docker and k8s deployment env, making that coming release solid.;;;","02/Sep/20 09:24;maoling;[~apriceq]

*1. Analysis*

*_1.1 reconfig disables_*
The root cause of ZOOKEEPER-3829 and ZOOKEEPER-3920 when reconfig disables is the inconsistency view of QuorumVerifier.
The time happens in ZOOKEEPER-3829 is when the rolling start/update of cluster, in ZOOKEEPER-3920 is the config of 0.0.0.0 in the docker env.
They both have the same propagation mechanism:
{code:java}
reconfig disables and leader election happens ---> QuorumVerifier is inconsistency ---> designatedLeader != self.getId() ---> allowedToCommit = false ---> cannot commit anything or create a session ---> client hangs and requests timeout
 
{code}
ZOOKEEPER-3829 fixes it by this approach: when reconfig disables, skip designatedLeader calculation and reconfig processing, and don't set setQuorumVerifier in the processReconfig method and the server can use its local configuration to connect the leader. So ZOOKEEPER-3829 can also fix the ZOOKEEPER-3920 issue when reconfig disables.


_*1.2 reconfig enables*_
*_---> However, the same config has issues when using reconfiguration (reconfigEnabled=true). In that case killing the leader makes the cluster unavailable - no leader is able to be elected._*

When reconfig enables, all the servers need to reach consensus on the same QuorumVerifier where the leader tells other servers his address is 0:0:0:0, so the follower cannot connect to leader and exit the following. It's really not easy to resolve in the zk side.

Overall, _*server.X = Y*_ config pair list should be identify, consistency and accessible.


*2. K8S:*
In the K8S official zk recommended guideline(https://kubernetes.io/docs/tutorials/stateful-application/zookeeper/), these issues will never happen? because they use the config like this:
{code:java}
server.1=zk-0.zk-hs.default.svc.cluster.local:2888:3888
server.2=zk-1.zk-hs.default.svc.cluster.local:2888:3888
server.3=zk-2.zk-hs.default.svc.cluster.local:2888:3888
{code}
*3. Docker*
_*--->Thinking through the handling of 0.0.0.0 as a server address. I think many configurations running in containers opt to use this as the server address because it simplifies the binding. Otherwise containers may need to run in the host network mode to successfully bind the publicly accessible IP of the container (the docker host's).*_

Docker Official zk Images(https://hub.docker.com/_/zookeeper) uses the 0.0.0.0 address and another popular zk image(https://hub.docker.com/r/bitnami/zookeeper) also uses this way and it has a explanation:
{code:java}
You have to use 0.0.0.0 as the host for the server. More concretely, if the ID of the zookeeper1 container starting is 1, then the ZOO_SERVERS environment variable has to be 0.0.0.0:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888 or if the ID of zookeeper servers are non-sequential then they need to be specified 0.0.0.0:2888:3888::2,zookeeper2:2888:3888::4.zookeeper3:2888:3888::6
{code}
I edit the *stack.yml* file to change something like: *ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181,* I found everything is OK and the cluster is in a healthy state.

I really don't understand the distinct advantage of using 0.0.0.0, otherwise the way I mention above?;;;","02/Sep/20 21:31;apriceq;[~maoling] The advantage of using 0.0.0.0 is, as you say, to simplify and enable easier binding (the client port binding already does this by default). The last case you have works only because all the containers are running on the same machine, in the same bridge network. A more realistic configuration would be 3 machines as follows:
 * Server 1, Server IP: 10.0.0.2, Zookeeper container IP: 172.17.0.2 (from bridge network)
 * Server 2, Server IP: 10.0.0.3, Zookeeper container IP: 172.17.0.2 (from bridge network)
 * Server 2, Server IP: 10.0.0.4, Zookeeper container IP: 172.17.0.2 (from bridge network)

In this case you will need to use a zookeeper config like this since the servers can only be reached via the server IP not the container IP.
server.1=10.0.0.2:2888:3888
server.2=10.0.0.3:2888:3888
server.3=10.0.0.4:2888:3888
However, the binding will fail because the service cannot bind to that address when in bridge. Using 0.0.0.0 would succeed binding and be accessible by other hosts but will fail due to the configuration mismatch in the shared quorum config. 

You can use host network for the containers but that seems more of a workaround. There are various reasons folks may not want to run the container using the host network configuration. 

For example, other services like kafka have configuration that separates the ""advertised"" address (in this case it would be the server public IP (10.0...) ) and the binding address (0.0.0.0). I'm not sure if zookeeper would benefit (or maybe already has) a way to distinguish between this. The multi address support may complicate this. ;;;","03/Sep/20 08:42;maoling;[~apriceq] Thanks for your clarification and great concrete example.

_*---> For example, other services like kafka have configuration that separates the ""advertised"" address (in this case it would be the server public IP (10.0...) ) and the binding address (0.0.0.0). I'm not sure if zookeeper would benefit (or maybe already has) a way to distinguish between*_

What you want is this?
{code:java}
* *quorumListenOnAllIPs* :
 When set to true the ZooKeeper server will listen
 for connections from its peers on all available IP addresses,
 and not only the address configured in the server list of the
 configuration file. It affects the connections handling the
 ZAB protocol and the Fast Leader Election protocol. Default
 value is **false**.
{code}




 ;;;","03/Sep/20 16:26;apriceq;[~maoling] Yes! I think that config is the missing piece. For allowing bridge networks (or any IP NAT anyway) to work with reconfiguration that configuration will allow a successful bind while also configuring the proper, externally available IP.

There may still be a gap in terms of supporting different ports for the bind vs peer config, but I think that has existed for some time. ;;;","04/Sep/20 07:26;maoling;[~apriceq]  we can now close this issue? WDYT?;;;","08/Sep/20 15:18;apriceq;Yes i think this issue can be closed (And maybe the others that were linked) as a duplicate of the rolling restart one with the fix in 3.6.2. ;;;","10/Sep/20 03:19;maoling;[~apriceq] Thanks for your great work about digging the codes, especially it's your first time to read zk codes;;;","10/Sep/20 17:44;blb93;[~maoling] [~apriceq] 

Thank you both for investigating this!  The fix included in 3.6.2 I was able to verify does solve the issue of hosts not being able to recover/accept connections. However, there seems to still be incorrect behavior, just not as drastic. Now - 

case 1:
when I start a 3 node quorum, +always+ one host comes up ""Not serving requests"" and the other two are healthy. Simply restarting the ZK service for the host not serving requests has no impact. Restarting either the leader or other follower will resolve that third host to healthy. 

case 2: 
after going through steps in case 1, if a host is restarted (leader or follower) then it becomes ""not serving requests"" and the other two are still healthy. Again, a different host (either previous leader, new leader if reelection occurred, or follower) needs to be restarted in order to resolve all nodes to healthy. Simply restarting the ZK service for the host not serving requests has no impact. 

I would not expect this to be intended behavior. It always requests a restart of a second host if I try and restart a single ZK host. While this does not break deployment like before, I would consider this second required restart a ""Workaround"" and this needs a bug opened for it? Can you all weigh in with insight maybe something I'm missing? ;;;","11/Sep/20 02:44;maoling;[~blb93] Thanks for reporting
 # Are you finding this issue with [release 3.6.2 |https://archive.apache.org/dist/zookeeper/zookeeper-3.6.2/]which came out at 09-09?
 # Could you please share more contexts?  e.g:   docker version, which docker image(official one?) or how to build the one you used with a Dockerfile? what does your *zoo.cfg* looks like?;;;","14/Sep/20 14:32;blb93;[~maoling] 


 # Correct, I am using 3.6.2 released 09-09
 # Yes, details include - 

Docker version: 1.12.1
Docker image: we use the Dockerfile from [https://hub.docker.com/_/zookeeper] for 3.6 branch
zoo.cfg: 


{noformat}
dataDir=/data
dataLogDir=/datalog
tickTime=2000
initLimit=10
syncLimit=5
maxClientCnxns=60
autopurge.snapRetainCount=10
autopurge.purgeInterval=24
leaderServes=yes
standaloneEnabled=false
admin.enableServer=false
snapshot.trust.empty=true
reconfigEnabled=false
audit.enable=true
4lw.commands.whitelist=*
sslQuorum=true
quorumListenOnAllIPs=true
serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory
ssl.quorum.keyStore.location=/apache-zookeeper-3.6.2-bin/java/keystore_zooX.jks
ssl.quorum.keyStore.password=PASSWORD
ssl.quorum.trustStore.location=/apache-zookeeper-3.6.2-bin/java/truststore.jks
ssl.quorum.trustStore.password=PASSWORD
ssl.quorum.protocol=TLSv1.2
ssl.quorum.enabledProtocols=TLSv1.2
ssl.client.enable=true
secureClientPort=2281
client.portUnification=true
clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
ssl.keyStore.location=/apache-zookeeper-3.6.2-bin/java/keystore_zooX.jks
ssl.keyStore.password=PASSWORD
ssl.trustStore.location=/apache-zookeeper-3.6.2-bin/java/truststore.jks
ssl.trustStore.password=PASSWORD
ssl.protocol=TLSv1.2
ssl.enabledProtocols=TLSv1.2
server.1=zoo1:2888:3888:participant;2181
server.2=zoo2:2888:3888:participant;2181
server.3=zoo3:2888:3888:participant;2181
server.5=zoo5:2888:3888:observer;2181
server.6=zoo6:2888:3888:observer;2181
server.4=zoo4:2888:3888:observer;2181{noformat}
FYI we have _snapshot.trust.empty=true_ because we're trying to upgrade from 3.4.14 to 3.6 branch ;;;","18/Sep/20 02:19;maoling;[~blb93] I'm looking and try to reproduce it!;;;","21/Sep/20 19:02;blb93;[~maoling] Thank you for trying to reproduce. A teammate of mine has opened a bug (https://issues.apache.org/jira/browse/ZOOKEEPER-3940) with logs attached as continued testing/restarts revealed we got to a state where restarting the leader node brought down the entire cluster without ability to recover. ;;;","25/Sep/20 03:27;maoling;[~blb93] 

Yes, let's forward our discussion to ZOOKEEPER-3940.;;;",,,,,,,,
Data inconsistency caused by DIFF sync uncommitted log,ZOOKEEPER-3911,13322856,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,hanm,fregatte,fregatte,15/Aug/20 08:22,05/Apr/22 03:49,13/Jul/23 09:08,12/Nov/20 15:10,3.4.12,3.4.13,3.5.4,3.5.5,3.5.6,3.5.7,3.5.8,3.6.0,3.6.1,3.6.3,3.7.0,,,,quorum,server,,,0,pull-request-available,,"Since version 3.4, the quorum of followers and the leader did not synchronize the files immediately when the synchronization was completed, and the data was not persisted to the files in an instant, and at this time the zk server can provide external access, such as webapp access, if it appears at this time Failure, phantom reading may occur

There is a example in the link.    [ here example|[https://drive.google.com/file/d/1jy3kkVQTDYGb4iV1RaPMBbEWLZZltTQG/view?usp=sharing]]

-----------------mail list-----------------

mail response from hanm@apache.org

Hi Xun,

I think this is a bug, your test case is sound to me. Do you mind
 creating a JIRA for this issue?

Followers should not ACK NEWLEADER without ACK every transaction from the
 DIFF sync. To ACK every transaction, a follower either persists the
 transaction in log, or takes a snapshot before sending the ACK of the
 NEWLEADER (which we did, before ZOOKEEPER-2678 where the snapshot
 optimization was introduced).

A potential fix I have in mind is to make sure to persist all DIFF sync
 proposals from LEADER (similar to what we are already doing for proposals
 coming between NEWLEADER and UPTODATE). By doing so, when the leader
 receives NEWLEADER ACK from a quorum, it's guaranteed that
 every transaction leader DIFF sync to follower is quorum committed. Thus
 there will not be inconsistent views moving forward. Alternatively we can
 take a snapshot before ACK NEWLEADER but that will be a big performance hit
 for big data trees.

I am also interested to hear what others think about this.

On Fri, Aug 28, 2020 at 12:20 AM li xun <274952496@qq.com> wrote:

 
{quote}There is a example in the link, would you understand what I mean？

[https://drive.google.com/file/d/1jy3kkVQTDYGb4iV1RaPMBbEWLZZltTQG/view?usp=sharing]

Since version 3.4, the quorum of followers and the leader did not
 synchronize the files immediately when the synchronization was completed,
 and the data was not persisted to the files in an instant, and at this time
 the zk server can provide external access, such as webapp access, if it
 appears at this time Failure, phantom reading may occur
{quote}
2020年8月28日 14:51，Justin Ling Mao <maoling199210191@sina.com> 写道：

 

@李珣The situation you describe may have conceptual deviations about how
{quote}the consensus protocol works:---> Since the data of the follower when the
 follower uses the DIFF method to synchronize with the leader is still in
 the memory, it has not had time to persist1. The write path is: write
 transaction log(WAL) firstly, after reaching a consensus, then apply to
 memory, other than the opposite.
{quote}
---> but at this time, the latest zxid_n of the leader has not been
{quote}supported by the quorum of the follower. At this time, if a client connects
 to the leader and sees zxid_n,2. If a write has not been supported by the
 quorum, it's not safe to apply to the state machine and the client is not
 able to see this write.
{quote}
I guess that your question may be: how the system handles the
{quote}uncommitted logs when leader changes?
{quote}
 

----- Original Message -----
 From: Ted Dunning <ted.dunning@gmail.com>
 To: dev@zookeeper.apache.org
 Subject: Re: May violate the ZAB agreement – version 3.6.1
 Date: 2020-08-28 01:25

How is it that participant A would have a later zxid than the leader?
 In particular, it seems to me that it should be impossible to have these
 two facts be true:
 1) a transaction has been committed with zxid = z_0. This implies that a
 quorum of the cluster has accepted this transaction and it has been
 committed.
 2) a new leader election nominates a leader with latest zxid < z_0.
 My reasoning is that any new leader election has to involve a quorum and
{quote}at
{quote}
least a sufficient number of that quorum must have accepted zxid >= z_0
{quote}and
{quote}
therefore would refuse to be part of the quorum (this is a
{quote}contradiction).
{quote}
Thus, no leader could be elected with zxid < z_0 if fact (1) is true.
 What you are describing seems to require both of these facts.
 Perhaps I am missing something about your suggested scenario. Could you
 describe what you are thinking in more detail?
 On Thu, Aug 27, 2020 at 2:08 AM 李珣 <274952496@qq.com> wrote:

 
{quote}version 3.6.1
 org.apache.zookeeper.server.quorum.Learner.java line:605
 Suppose there is a situation
 zxid_n is the largest zxid of Participant A (the leader has just resumed
 from downtime). Zxid_n has not been recognized by the quorum. Assuming
 Participant A is elected as the Leader, then if a follower appears to
{quote}
{quote}use
{quote}
{quote}DIFF to synchronize data with the Leader, Leader After sending the
 UPTODATE, the leader can already provide external access, but at this
{quote}
{quote}time,
{quote}
{quote}the latest zxid_n of the leader has not been supported by the quorum of
{quote}
{quote}the
{quote}
{quote}follower. At this time, if a client connects to the leader and sees
{quote}
{quote}zxid_n,
{quote}
{quote}then at this time both the leader and the follower are down. For some
 reason, the leader cannot be started, and the follower can start
{quote}
{quote}normally.
{quote}
{quote}At this time, a new leader can only be elected from the follower. Since
{quote}
{quote}the
{quote}
{quote}data of the follower when the follower uses the DIFF method to
{quote}
{quote}synchronize
{quote}
{quote}with the leader is still in the memory, it has not had time to persist,
 then this The newly elected leader does not have the data of zxid_n, but
 before zxid_n has been seen by the client on the old leader, there will
{quote}
{quote}be
{quote}
{quote}inconsistencies in the data view.
 Is the above situation possible?
{quote}
 
  ",,fregatte,hanm,kezhuw,liwang,maoling,Mrsjuli,nkalmar,symat,,,,,,,,,,,,"hanm opened a new pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445


   Test case only for now, submit for community feedback. Don't merge please.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/20 22:45;githubbot;600","eolivelli commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r482753918



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java
##########
@@ -0,0 +1,293 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.quorum;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.jupiter.api.Assertions.*;
+
+import java.io.IOException;
+import java.net.SocketTimeoutException;
+import java.util.Map;
+import javax.security.sasl.SaslException;
+import org.apache.zookeeper.CreateMode;
+import org.apache.zookeeper.KeeperException;
+import org.apache.zookeeper.PortAssignment;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.ZooDefs.OpCode;
+import org.apache.zookeeper.ZooKeeper;
+import org.apache.zookeeper.ZooKeeper.States;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.Leader.Proposal;
+import org.apache.zookeeper.test.ClientBase;
+import org.apache.zookeeper.test.ClientBase.CountdownWatcher;
+
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.Test;
+import org.junit.jupiter.api.Timeout;
+
+public class DIFFSyncConsistencyTest extends QuorumPeerTestBase {
+
+    private static int SERVER_COUNT = 3;
+    private MainThread[] mt = new MainThread[SERVER_COUNT];
+
+    @Test
+    @Timeout(value = 120)
+    public void testInconsistentDueToUncommittedLog() throws Exception {
+        final int LEADER_TIMEOUT_MS = 10_000;
+        final int[] clientPorts = new int[SERVER_COUNT];
+
+        StringBuilder sb = new StringBuilder();
+        String server;
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            clientPorts[i] = PortAssignment.unique();
+            server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique() + "":"" + PortAssignment.unique()
+                    + "":participant;127.0.0.1:"" + clientPorts[i];
+            sb.append(server + ""\n"");
+        }
+        String currentQuorumCfgSection = sb.toString();
+
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                @Override
+                public TestQPMain getTestQPMain() {
+                    return new MockTestQPMain();
+                }
+            };
+            mt[i].start();
+        }
+
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            assertTrue(ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts[i], CONNECTION_TIMEOUT),
+                    ""waiting for server "" + i + "" being up"");
+        }
+
+        int leader = findLeader(mt);
+        CountdownWatcher watch = new CountdownWatcher();
+        ZooKeeper zk = new ZooKeeper(""127.0.0.1:"" + clientPorts[leader], ClientBase.CONNECTION_TIMEOUT, watch);
+        watch.waitForConnected(ClientBase.CONNECTION_TIMEOUT);
+
+        Map<Long, Proposal> outstanding = mt[leader].main.quorumPeer.leader.outstandingProposals;
+        // Increase the tick time to delay the leader going to looking to allow us proposal a transaction while other
+        // followers are offline.
+        int previousTick = mt[leader].main.quorumPeer.tickTime;
+        mt[leader].main.quorumPeer.tickTime = LEADER_TIMEOUT_MS;
+        // Let the previous tick on the leader exhaust itself so the new tick time takes effect
+        Thread.sleep(previousTick);
+
+        LOG.info(""LEADER ELECTED {}"", leader);
+
+        // Shutdown followers to make sure we don't accidentally send the proposal we are going to make to follower.
+        // In other words, we want to make sure the followers get the proposal later through DIFF sync.
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            if (i != leader) {
+                mt[i].shutdown();
+            }
+        }
+
+        // Send a create request to old leader and make sure it's synced to disk.
+        try {
+            zk.create(""/zk"" + leader, ""zk"".getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            fail(""create /zk"" + leader + "" should have failed"");
+        } catch (KeeperException e) {
+        }
+
+        // Make sure that we actually did get it in process at the leader; there can be extra sessionClose proposals.
+        assertTrue(outstanding.size() > 0);
+        Proposal p = findProposalOfType(outstanding, OpCode.create);
+        LOG.info(""Old leader id: {}. All proposals: {}"", leader, outstanding);
+        assertNotNull(p, ""Old leader doesn't have 'create' proposal"");
+
+        // Make sure leader sync the proposal to disk.
+        int sleepTime = 0;
+        Long longLeader = (long) leader;
+        while (!p.qvAcksetPairs.get(0).getAckset().contains(longLeader)) {
+            if (sleepTime > 2000) {
+                fail(""Transaction not synced to disk within 1 second "" + p.qvAcksetPairs.get(0).getAckset() + "" expected "" + leader);
+            }
+            Thread.sleep(100);
+            sleepTime += 100;
+        }
+
+        // Start controlled followers where we deliberately make the follower fail once follower receive the UPTODATE
+        // message from leader. Because followers only persist proposals from DIFF sync after UPTODATE, this can
+        // deterministically simulate the situation where followers ACK NEWLEADER (which makes leader think she has the
+        // quorum support, but actually not afterwards) but immediately fail afterwards without persisting the proposals
+        // from DIFF sync.
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            if (i == leader) {
+                continue;
+            }
+
+            mt[i].start();
+            int sleepCount = 0;
+            while (mt[i].getQuorumPeer() == null) {
+                ++sleepCount;
+                if (sleepCount > 100) {
+                    fail(""Can't start follower "" + i + "" !"");
+                }
+                Thread.sleep(100);
+            }
+
+            ((CustomQuorumPeer) mt[i].getQuorumPeer()).setInjectError(true);
+            LOG.info(""Follower {} started."", i);
+        }
+
+        // Verify leader can see it. The fact that leader can see it implies that
+        // leader should, at this point in time, get a quorum of ACK of NEWLEADER
+        // from two followers so leader can start serving requests; this also implies
+        // that DIFF sync from leader to followers are finished at this point in time.
+        // We then verify later that followers should have the same view after we shutdown
+        // this leader, otherwise it's a violation of ZAB / sequential consistency.
+        int c = 0;
+        while (c < 100) {
+            ++c;
+            try {
+                Stat stat = zk.exists(""/zk"" + leader, false);
+                assertNotNull(stat, ""server "" + leader + "" should have /zk"");
+                break;
+            } catch (KeeperException.ConnectionLossException e) {
+
+            }
+            Thread.sleep(100);
+        }
+
+        // Shutdown all servers
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            mt[i].shutdown();
+        }
+        waitForOne(zk, States.CONNECTING);
+
+        // Now restart all servers except the old leader. Only old leader has the transaction sync to disk.
+        // The old followers only had in memory view of the transaction, and they didn't have a chance
+        // to sync to disk because we made them fail at UPTODATE.
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            if (i == leader) {
+                continue;
+            }
+            mt[i].start();
+            int sleepCount = 0;
+            while (mt[i].getQuorumPeer() == null) {
+                ++sleepCount;
+                if (sleepCount > 100) {
+                    fail(""Can't start follower "" + i + "" !"");
+                }
+                Thread.sleep(100);
+            }
+
+            ((CustomQuorumPeer) mt[i].getQuorumPeer()).setInjectError(false);
+            LOG.info(""Follower {} started again."", i);
+        }
+
+        int newLeader = findLeader(mt);
+        assertNotEquals(newLeader, leader, ""new leader is still the old leader "" + leader + "" !!"");
+
+        // This simulate the case where a ZooKeeper client previously connected to old leader had a view of the data
+        // ""/zkX"", and now reconnected to remaining quorum members and should also have the same view of the data.
+        // Missing such a view is a violation of ZAB and Sequential Consistency of ZooKeeper.
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            if (i == leader) {
+                continue;
+            }
+            zk.close();
+            zk = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, watch);
+            watch.waitForConnected(ClientBase.CONNECTION_TIMEOUT);
+            Stat val = zk.exists(""/zk"" + leader, false);
+            assertNotNull(val, ""Data inconsistency detected! "" +
+                    ""Server "" + i + "" should have a view of /zk"" + leader + ""!"");
+        }
+
+        zk.close();
+    }
+
+    @AfterEach
+    public void tearDown() {
+        for (int i = 0; i < mt.length; i++) {
+            try {
+                mt[i].shutdown();
+            } catch (InterruptedException e) {
+                LOG.warn(""Quorum Peer interrupted while shutting it down"", e);
+            }
+        }
+    }
+
+    static class CustomQuorumPeer extends QuorumPeer {
+
+        private boolean injectError = false;

Review comment:
       probably this should be `volatile`




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/20 07:09;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-686626410


   >> I see there are a lot of ""Thread.sleep"", this could lead to flakes
   
   I think it's fine here as the execution does not depends on timing of the sleep. The functionality these code block is basically the same with the waitForAll/One helpers.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/20 17:01;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-686629954


   One more observation - I think we have the same issue even before ZOOKEEPER-2678 (where it avoids taking snapshot before sending NEWLEADER ACK back during DIFF sync), because even when the snapshot was taken, the data tree at that time still does not have the proposals DIFF sync from leader applied (the commit of all such proposals happen after follower receive UPTODATE). 
   
   Specifically, in zab paper, it said:
   ""Phase 2: Sync with followers:
   f The follower syncs with the leader, but doesn't modify its state until it receives the NEWLEADER(e) packet. Once it receives NEWLEADER(e) it atomically applies the new state and sets f.currentEpoch = e. It then sends ACK(e << 32).""
   But in our implementation, I don't see we actually ""atomically applies the new state"" before sends ACK.
   
   @breed might have more context around this.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/20 17:07;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-686779752


   jenkins pre-merge reports one failed test: FileTxnSnapLogMetricsTest#testFileTxnSnapLogMetrics
   however, i can't reproduce it locally.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/20 21:43;githubbot;600","fregatte123 commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r483357169



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -741,18 +741,30 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception {
                     }
 
                     self.setCurrentEpoch(newEpoch);
-                    writeToTxnLog = true; //Anything after this needs to go to the transaction log, not applied directly in memory
+                    writeToTxnLog = true;
+                    //Anything after this needs to go to the transaction log, not applied directly in memory
                     isPreZAB1_0 = false;
+
+                    // ZOOKEEPER-3911: make sure sync the uncommitted logs before commit them (ACK NEWLEADER).
+                    sock.setSoTimeout(self.tickTime * self.syncLimit);
+                    self.setSyncMode(QuorumPeer.SyncMode.NONE);
+                    zk.startup();

Review comment:
       @hanm 
   
   According to the code, inconsistencies may occur as follows
   
   step1: Assuming that there are 4 followers and 1 leader at this time, their current maximum zxid is as follows:
   follower A:zxid = n
   follower B:zxid = n+1
   follower C:zxid = n+2
   follower D:zxid = n+3
   leader E:zxid = n+4
   
   step2: The gap between the synchronization of leader and follower D, such as DIFF
   step3: follower D receives the leader’s proposal, puts it in memory, and then calls zk.startup(), which means that the client (such as webapp) can see follower D:zxid = n+3
   
   step4: follower D writes the proposal in memory to disk
   
   step5: follower D writePacket(new QuorumPacket(Leader.ACK, newLeaderZxid, null, null), true). ACK-LD message will be sent to leader(ACK-LD from the paper[1]), and then follower D will be stopped
   
   step6: If leader E is stopped before ACK-L has not reached the quorum. (The leader receives the quorum ACK-LD, which means that the proposals with zxid <= (n+4) have been persisted, which means that no matter whether the leader is down or re-elected or the leader disk is damaged, it cannot be started. The proposal of =n+4 has reached consensus in the cluster.)
   
   step7: The cluster will select the leader from the 3 surviving machines.
    A:zxid = n B:zxid = n+1 C:zxid = n+2
   Suppose that C becomes the leader (a total of 5 machines, 3 survive, and can reach a quorum).
   When A and B are synchronized with C
    A:zxid = n+2 B:zxid = n+2 C:zxid = n+2
   
   Conclusion: zxid=n+3 cannot be accessed, resulting in inconsistent access
   
   After the leader receives the quorum ACK-LD, the follower starts the external access service, which is relatively safe. If the follower provides external access before then, the follower cannot guarantee that its zxid has reached the quorum
   
   
   [1]Zab: High-performance broadcast for primary-backup systems




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/20 02:56;githubbot;600","hanm commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r483361109



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -741,18 +741,30 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception {
                     }
 
                     self.setCurrentEpoch(newEpoch);
-                    writeToTxnLog = true; //Anything after this needs to go to the transaction log, not applied directly in memory
+                    writeToTxnLog = true;
+                    //Anything after this needs to go to the transaction log, not applied directly in memory
                     isPreZAB1_0 = false;
+
+                    // ZOOKEEPER-3911: make sure sync the uncommitted logs before commit them (ACK NEWLEADER).
+                    sock.setSoTimeout(self.tickTime * self.syncLimit);
+                    self.setSyncMode(QuorumPeer.SyncMode.NONE);
+                    zk.startup();

Review comment:
       This is possible but unfortunately there is no way afaik to persist the proposals without staring the server in first place. The better approach is to provide a control API (such as ZooKeeperServer#startServing) so we can control when requests will be allowed to come regardless of the servers state (running or not). Maybe there is already such an API / approach but I need sometime to figure this out.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/20 03:12;githubbot;600","hanm commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r483382118



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -741,18 +741,30 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception {
                     }
 
                     self.setCurrentEpoch(newEpoch);
-                    writeToTxnLog = true; //Anything after this needs to go to the transaction log, not applied directly in memory
+                    writeToTxnLog = true;
+                    //Anything after this needs to go to the transaction log, not applied directly in memory
                     isPreZAB1_0 = false;
+
+                    // ZOOKEEPER-3911: make sure sync the uncommitted logs before commit them (ACK NEWLEADER).
+                    sock.setSoTimeout(self.tickTime * self.syncLimit);
+                    self.setSyncMode(QuorumPeer.SyncMode.NONE);
+                    zk.startup();

Review comment:
       Add a startServing api to address this issue - follower will only start serving after receiving UPTODATE (meaning leader should already have received quorum NEWLEADER ACK). 
   
   I'll add some test cases around the startServing api if this looks good to reviewers.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/20 04:40;githubbot;600","fregatte123 commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r483390796



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
##########
@@ -662,6 +662,20 @@ public void startdata() throws IOException, InterruptedException {
     }
 
     public synchronized void startup() {
+        startupWithServerState(State.RUNNING);
+        notifyAll();
+    }
+
+    public synchronized void startupWithoutServing() {
+        startupWithServerState(State.INITIAL);
+        notifyAll();
+    }
+
+    public synchronized void startServing() {
+        setState(State.RUNNING);

Review comment:
        notifyAll(); here may be needed 
   to wakeup the thread sleep on the condition of State.INITIAL.
   -------------------------
   public void enqueueRequest(Request si)
   public void submitRequestNow(Request si)
   sleep at State.INITIAL




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/20 05:14;githubbot;600","hanm commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r483860051



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
##########
@@ -662,6 +662,20 @@ public void startdata() throws IOException, InterruptedException {
     }
 
     public synchronized void startup() {
+        startupWithServerState(State.RUNNING);
+        notifyAll();
+    }
+
+    public synchronized void startupWithoutServing() {
+        startupWithServerState(State.INITIAL);
+        notifyAll();
+    }
+
+    public synchronized void startServing() {
+        setState(State.RUNNING);

Review comment:
       good catch - there is no correctness issue here without notifying because the wait will timeout anyway and next check will catch the correct state, but better to notify even the timeout is pretty short to avoid unnecessary wait.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/20 21:55;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-691722471


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:41;githubbot;600","hanm opened a new pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445


   Problem:
   
   During DIFF sync, followers will persist the proposals from leader only after receiving the UPTODATE message. Leader will start serve client requests once receive a quorum of NEWLEADER ACK from followers, and NEWLEADER ACKs are sent from followers before receiving UPTODATE. So it's possible that when leader starting serving, followers might not persistent all of the DIFF sync proposals from leader. If at a certain point in time (e.g. once receiving UPTODATE from leader) all quorum servers crash, then these proposals, where leader they are quorum committed, will lost if the old leader can't come back and the followers form a new quorum. The end result is inconsistent view of the data from client before / after quorum recovers.
   
   Solution:
   
   Make sure follower to persist all DIFF proposals before they ACK NEWLEADER. When leader receives a quorum of NEWLEADER ACK, it's guaranteed that all DIFF sync proposals are quorum persistent and can survive after the recovery.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:46;githubbot;600","hanm closed pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:46;githubbot;600","hanm closed pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Sep/20 21:10;githubbot;600","hanm opened a new pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445


   Problem:
   
   During DIFF sync, followers will persist the proposals from leader only after receiving the UPTODATE message. Leader will start serve client requests once receive a quorum of NEWLEADER ACK from followers, and NEWLEADER ACKs are sent from followers before receiving UPTODATE. So it's possible that when leader starting serving, followers might not persistent all of the DIFF sync proposals from leader. If at a certain point in time (e.g. once receiving UPTODATE from leader) all quorum servers crash, then these proposals, where leader they are quorum committed, will lost if the old leader can't come back and the followers form a new quorum. The end result is inconsistent view of the data from client before / after quorum recovers.
   
   Solution:
   
   Make sure follower to persist all DIFF proposals before they ACK NEWLEADER. When leader receives a quorum of NEWLEADER ACK, it's guaranteed that all DIFF sync proposals are quorum persistent and can survive after the recovery.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Sep/20 21:10;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-695747514


   requesting more reviews; @lvfangmin @breed 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/20 05:27;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-716966318


   Committers - can i get more reviews of this? I'd like to get this merged if no other issues. I hope the test case itself is straightforward to illustrate the problem and the fix itself is fairly simple (test case pass with the fix and fail w/o the fix). More discussions can be found at the ticket https://issues.apache.org/jira/browse/ZOOKEEPER-3911.
   
   cc @eolivelli @symat @anmolnar @nkalmar @arshadmohammad 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Oct/20 04:07;githubbot;600","eolivelli commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r512734631



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -741,18 +741,30 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception {
                     }
 
                     self.setCurrentEpoch(newEpoch);
-                    writeToTxnLog = true; //Anything after this needs to go to the transaction log, not applied directly in memory
+                    writeToTxnLog = true;
+                    //Anything after this needs to go to the transaction log, not applied directly in memory
                     isPreZAB1_0 = false;
+
+                    // ZOOKEEPER-3911: make sure sync the uncommitted logs before commit them (ACK NEWLEADER).
+                    sock.setSoTimeout(self.tickTime * self.syncLimit);
+                    self.setSyncMode(QuorumPeer.SyncMode.NONE);
+                    zk.startupWithoutServing();
+                    if (zk instanceof FollowerZooKeeperServer) {
+                        FollowerZooKeeperServer fzk = (FollowerZooKeeperServer) zk;
+                        for (PacketInFlight p : packetsNotCommitted) {
+                            fzk.logRequest(p.hdr, p.rec, p.digest);
+                        }
+                        packetsNotCommitted.clear();
+                    }
+
                     writePacket(new QuorumPacket(Leader.ACK, newLeaderZxid, null, null), true);
                     break;
                 }
             }
         }
         ack.setZxid(ZxidUtils.makeZxid(newEpoch, 0));
         writePacket(ack, true);
-        sock.setSoTimeout(self.tickTime * self.syncLimit);
-        self.setSyncMode(QuorumPeer.SyncMode.NONE);
-        zk.startup();
+        zk.startServing();

Review comment:
       One question:
   
   this ""startServing"" works if you executed 'zk.startupWithoutServing();' in your new code.
   but in other code paths we are not calling ""startupWithoutServing""
   so when we come to this point zk.startServing() will only change the state to RUNNING, and we had not called 'startupWithServerState'
   
   can you please explain ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Oct/20 14:22;githubbot;600","hanm commented on a change in pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#discussion_r512895762



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
##########
@@ -741,18 +741,30 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception {
                     }
 
                     self.setCurrentEpoch(newEpoch);
-                    writeToTxnLog = true; //Anything after this needs to go to the transaction log, not applied directly in memory
+                    writeToTxnLog = true;
+                    //Anything after this needs to go to the transaction log, not applied directly in memory
                     isPreZAB1_0 = false;
+
+                    // ZOOKEEPER-3911: make sure sync the uncommitted logs before commit them (ACK NEWLEADER).
+                    sock.setSoTimeout(self.tickTime * self.syncLimit);
+                    self.setSyncMode(QuorumPeer.SyncMode.NONE);
+                    zk.startupWithoutServing();
+                    if (zk instanceof FollowerZooKeeperServer) {
+                        FollowerZooKeeperServer fzk = (FollowerZooKeeperServer) zk;
+                        for (PacketInFlight p : packetsNotCommitted) {
+                            fzk.logRequest(p.hdr, p.rec, p.digest);
+                        }
+                        packetsNotCommitted.clear();
+                    }
+
                     writePacket(new QuorumPacket(Leader.ACK, newLeaderZxid, null, null), true);
                     break;
                 }
             }
         }
         ack.setZxid(ZxidUtils.makeZxid(newEpoch, 0));
         writePacket(ack, true);
-        sock.setSoTimeout(self.tickTime * self.syncLimit);
-        self.setSyncMode(QuorumPeer.SyncMode.NONE);
-        zk.startup();
+        zk.startServing();

Review comment:
       >> but in other code paths we are not calling ""startupWithoutServing""
   
   The invariant here is that a call to ` zk.startServing` will always follow a call to `zk.startupWithoutServing`. This is because the ZAB protocol implementation requires this order of invocation (in `syncWithLeader`). In other words, there is no other code paths that involve both calls. To finish the sync, the leader and follower must follow these events in order. 
   
   * First, learner will receive `NEWLEADER` from leader. This is where we will call `zk.startupWithoutServing`.
   * Then, learner will receive `UPTODATE` from leader. This is where we breaks the outer sync loop, afterwards we call `zk.startServing`.
   
   Hope this make sense. A more detailed description can be found on phase 2 ""Sync with followers"" on https://cwiki.apache.org/confluence/display/ZOOKEEPER/Zab1.0.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Oct/20 17:39;githubbot;600","nkalmar commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-724086688


   Since this has 2 committer's +1 I'm keen on merging this. I'd say to master, 3.6 and even 3.5, hopefully cherry picks clean. 
   I will wait another day if any reactions comes, and then I'll merge (or ofc others can merge before that).


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/20 15:31;githubbot;600","asfgit closed pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:04;githubbot;600","nkalmar commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-726137075


   Merged to master, branch-3.6 and branch-3.5. Thanks @hanm 
   3.5 did not pick clean, I fixed up manually, I will do some testing.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:09;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-727131449


   Thanks @nkalmar for taking care of merging this. I'll check out what's the problem with the patch on branch-3.5.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/20 02:44;githubbot;600","ztzg commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-727266138


   I'm a bit late in reviewing this, but FWIW: LGTM.
   
   I started looking into the issue with 3.5, but haven't had a chance to figure out the inconsistency.  In case it helps, here is my current tree:
   
   https://github.com/ztzg/zookeeper/tree/ZOOKEEPER-3911-diff-sync-3.5
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/20 21:13;githubbot;600","li4wang commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-730702728


   @hanm @nkalmar I am getting the following compilation error in branch-3.6. The error started to occur after this commit.  I wonder if you ran into the same issue. Can you please take a look at it? 
   
   ====================
   [INFO] Finished at: 2020-11-19T15:07:24-08:00
   [INFO] ------------------------------------------------------------------------
   [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:testCompile (default-testCompile) on project zookeeper: Compilation failure: Compilation failure: 
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[22,36] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[22,1] static import only from classes and interfaces
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[23,36] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[23,1] static import only from classes and interfaces
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[24,36] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[24,1] static import only from classes and interfaces
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[25,36] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[25,1] static import only from classes and interfaces
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[42,29] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[43,29] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[44,29] package org.junit.jupiter.api does not exist
   [ERROR] /Users/liwang/apache/zookeeper/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/DIFFSyncConsistencyTest.java:[51,6] cannot find symbol
   [ERROR]   symbol:   class Test
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Nov/20 23:31;githubbot;600","hanm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-730869123


   @li4wang thanks for reporting. I think this is because 3.6 had a different junit verison / api usage across unit tests and we didn't backup that commit to 3.6 when upgrades the tests. It should be easier to fix.
   
   Part of the reason this was not caught during commit was because this was a cherry pick so it didn't go through the CI pipeline - also I suspect we lose our apache builds for 3.6 branches (at least my inbox was empty - otherwise the build fail notification would raise an alarm).


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 05:54;githubbot;600","pkuwm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-730946733


   @hanm @li4wang I also noticed this build failure. Are you guys fixing it? If not, I think I could submit a PR for a quick fix by back porting the junit upgrade from the master branch to branch-3.6.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 06:55;githubbot;600","li4wang commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731338543


   @pkuwm yes, I am fixing it. I am planning to back porting two commits from master branch to branch-3.6 via cherry-picking.
   
   8da9c723a ZOOKEEPER-3850: Update jUnit to 5.6 in pom.xml files
   c42c8c940 ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 18:31;githubbot;600","li4wang edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731338543


   @pkuwm yes, I am fixing it. I am planning to back porting two commits from master branch to branch-3.6 via cherry-picking.
   
   63f744b2f ZOOKEEPER-3863: correct junit test timeout
   0b386e457 ZOOKEEPER-3862: Re-enable deprecation check after finishing jUnit upg…
   08ae49dee ZOOKEEPER-3854: Upgrade jUnit in ZooKeeper-Recipes
   531aae3ed ZOOKEEPER-3855: Upgrade jUnit in ZooKeeper-Metrics-providers
   c42c8c940 ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server
   6ab1822ec ZOOKEEPER-3852: Upgrade jUnit in ZooKeeper-Jute
   8da9c723a ZOOKEEPER-3850: Update jUnit to 5.6 in pom.xml files


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 18:34;githubbot;600","li4wang edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731338543


   @pkuwm yes, I am fixing it. I am planning to back porting the following commits from master branch to branch-3.6 via cherry-picking.
   
   63f744b2f ZOOKEEPER-3863: correct junit test timeout
   0b386e457 ZOOKEEPER-3862: Re-enable deprecation check after finishing jUnit upg…
   08ae49dee ZOOKEEPER-3854: Upgrade jUnit in ZooKeeper-Recipes
   531aae3ed ZOOKEEPER-3855: Upgrade jUnit in ZooKeeper-Metrics-providers
   c42c8c940 ZOOKEEPER-3872: Upgrade jUnit in ZooKeeper-server
   6ab1822ec ZOOKEEPER-3852: Upgrade jUnit in ZooKeeper-Jute
   8da9c723a ZOOKEEPER-3850: Update jUnit to 5.6 in pom.xml files


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 18:39;githubbot;600","li4wang edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731338543


   @pkuwm yes, I am fixing it. I am planning to back porting the following commits from master branch to branch-3.6 via cherry-picking.
   
   8da9c723a ZOOKEEPER-3850: Update jUnit to 5.6 in pom.xml files


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 18:58;githubbot;600","tamaashu commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731396176


   @li4wang ZOOKEEPER-3850 won't solve the issue, since it only replaces jUnit4 with jUnit5-vintage (which is just a jUnit 4.13 with a rename). I would advise to fix the testcases in branch 3.6 with the use of jUnit4.
   ZooKeeper 3.7 is coming with fully supported jUnit5 testing, there won't be too many backports to 3.6 afterwards.
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 20:39;githubbot;600","li4wang commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731401566


   @tamaashu yeah, I noticed ZOOKEEPER-3850 by itself is not sufficient. I fixed the compilation errors by applying ZOOKEEPER-3850 and some addition changes on pom.xml,  but the test case failed too.
   
   @hanm can you please fix the test failure along with the compilation error. I do agree with @tamaashu, it would be better just fix the testcases in branch 3.6 by not using JUnit5 API.
   
   Test Case Error
   =========
   [INFO] Running org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 30.442 s <<< FAILURE! - in org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] testInconsistentDueToUncommittedLog  Time elapsed: 30.326 s  <<< FAILURE!
   org.opentest4j.AssertionFailedError: waiting for server 0 being up ==> expected: <true> but was: <false>
   	at org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest.testInconsistentDueToUncommittedLog(DIFFSyncConsistencyTest.java:78)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 20:53;githubbot;600","li4wang edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731401566


   @tamaashu yeah, I noticed ZOOKEEPER-3850 by itself is not sufficient. I fixed the compilation errors by applying ZOOKEEPER-3850 and some addition changes on pom.xml,  but the test case failed too.
   
   @hanm can you please fix the test failure along with the compilation error. I do agree with @tamaashu, it would be better just fix the testcases in branch 3.6 by not using JUnit5 API.
   
   test case error
   =========
   [INFO] Running org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 30.442 s <<< FAILURE! - in org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] testInconsistentDueToUncommittedLog  Time elapsed: 30.326 s  <<< FAILURE!
   org.opentest4j.AssertionFailedError: waiting for server 0 being up ==> expected: <true> but was: <false>
   	at org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest.testInconsistentDueToUncommittedLog(DIFFSyncConsistencyTest.java:78)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 20:53;githubbot;600","li4wang edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731401566


   @tamaashu yeah, I noticed ZOOKEEPER-3850 by itself is not sufficient. I fixed the compilation errors by applying ZOOKEEPER-3850 and some addition changes on pom.xml,  but the test case failed too.
   
   @hanm can you please fix the test failure along with the compilation error. I do agree with @tamaashu, it would be better just fix the testcases in branch 3.6 by not using JUnit5 API.
   
   test case error
   --------------
   [INFO] Running org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 30.442 s <<< FAILURE! - in org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] testInconsistentDueToUncommittedLog  Time elapsed: 30.326 s  <<< FAILURE!
   org.opentest4j.AssertionFailedError: waiting for server 0 being up ==> expected: <true> but was: <false>
   	at org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest.testInconsistentDueToUncommittedLog(DIFFSyncConsistencyTest.java:78)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 20:53;githubbot;600","li4wang edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731401566


   @tamaashu yeah, I noticed ZOOKEEPER-3850 by itself is not sufficient. I fixed the compilation errors by applying ZOOKEEPER-3850 and some addition changes on pom.xml,  but the test case failed too.
   
   @hanm can you please fix the test failure along with the compilation error? I do agree with @tamaashu, it would be better just fix the testcases in branch 3.6 by not using JUnit5 API.
   
   test case error
   --------------
   [INFO] Running org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 30.442 s <<< FAILURE! - in org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest
   [ERROR] testInconsistentDueToUncommittedLog  Time elapsed: 30.326 s  <<< FAILURE!
   org.opentest4j.AssertionFailedError: waiting for server 0 being up ==> expected: <true> but was: <false>
   	at org.apache.zookeeper.server.quorum.DIFFSyncConsistencyTest.testInconsistentDueToUncommittedLog(DIFFSyncConsistencyTest.java:78)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 20:54;githubbot;600","pkuwm commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731430407


   @hanm @li4wang @tamaashu Yep, I also tried but since there were commits during those jUnit 5 upgrade, there are conflicts if we cherry-pick those upgrade commits. It's easier to fix it directly if we don't have more backports to branch 3.6. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 22:04;githubbot;600","pkuwm edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731430407


   @hanm @li4wang @tamaashu Yep, I also tried but since there were commits during those jUnit 5 upgrade, there are conflicts if we cherry-pick those upgrade commits. It's easier to fix it directly if we don't have more backports to branch 3.6.
   I have the work code locally. @hanm if you don't have time to fix this minor issue, I could submit a PR :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 22:04;githubbot;600","pkuwm edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731430407


   @hanm @li4wang @tamaashu Yep, I also tried but since there were commits during those jUnit 5 upgrade, there are conflicts if we cherry-pick those upgrade commits. It's easier to fix it directly if we don't have more backports to branch 3.6.
   I have the working code locally. @hanm if you don't have time to fix this minor issue, I could submit a PR :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 22:04;githubbot;600","pkuwm edited a comment on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-731430407


   @hanm @li4wang @tamaashu Yep, I also tried but since there were commits during those jUnit 5 upgrade, there are conflicts if we cherry-pick those upgrade commits. It's easier to fix it directly if we don't have more backports to branch 3.6.
   I have the working code locally. @hanm if you don't have time to fix this minor issue, I could submit a PR :)
   A ticket is created here: https://issues.apache.org/jira/browse/ZOOKEEPER-4011 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/20 22:37;githubbot;600","fanyang89 commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-808158462


   > I started looking into the issue with 3.5, but haven't had a chance to figure out the inconsistency. In case it helps, here is my current tree:
   
   @ztzg  ZOOKEEPER-3911 requires ZOOKEEPER-3240 to pass the unit test. I've created a new PR to backport ZOOKEEPER-3911 to branch-3.5.9.
   
   https://github.com/apache/zookeeper/pull/1655


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/21 11:55;githubbot;600","anmolnar commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-808796332


   @fanyang89 Thanks for taking care of this. Please open PR against `branch-3.5`.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 20:15;githubbot;600","ztzg commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-823889471


   Hi @fanyang89,
   
   > > I started looking into the issue with 3.5, but haven't had a chance to figure out the inconsistency. In case it helps, here is my current tree:
   > 
   > @ztzg ZOOKEEPER-3911 requires ZOOKEEPER-3240 to pass the unit test.
   
   Sorry for the lag, and thank you very much for investigating/clarifying this!
   
   > I've created a new PR to backport ZOOKEEPER-3911 to branch-3.5.9.
   > 
   > #1655
   
   Thank you—but as pointed out by @anmolnar in https://github.com/apache/zookeeper/pull/1655#issuecomment-808795773, `branch-3.5.9` is a ""release branch,"" and 3.5.9 has already been released.  Could you please submit the same PR against `branch-3.5` (the ""series"" branch)?
   
   (I will hopefully have a bit more time to look into these topics in the coming weeks.)


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 08:40;githubbot;600","fanyang89 commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-823895681


   Hi @ztzg, I've created a new PR against branch-3.5 https://github.com/apache/zookeeper/pull/1657, but I forget to update the link at this thread. Sorry for that.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 08:50;githubbot;600","ztzg commented on pull request #1445:
URL: https://github.com/apache/zookeeper/pull/1445#issuecomment-824228862


   > Hi @ztzg, I've created a new PR against branch-3.5 #1657, but I forget to update the link at this thread. Sorry for that.
   
   No problem.  Now merged in branch `branch-3.5`.  Thank you!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Apr/21 17:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,27000,,,0,27000,,,,,,,,,,,,,,,ZOOKEEPER-2678,,,,,,,,,,,,,"29/Aug/20 03:28;fregatte;example.png;https://issues.apache.org/jira/secure/attachment/13010701/example.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Apr 05 03:49:08 UTC 2022,,,,,,,,,,"0|z0hsoo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Sep/20 04:39;hanm;Here is a canonical version of my unit test case which I will submit a PR soon. 

* Start 3 servers 0, 1, 2.
* 2 is elected leader, tune it's tick time to delay it's looking so we can proposal a transaction.
* Shutdown 0, and 1.
* Proposal transaction T on 2. 
* Restart 0, and 1.
* 0 and 1 DIFF sync with 2 (leader), and send ACK of NEWLEADER to 2.
* Verify client of 2 has the view of the T.
* Shutdown 2. 
* Tricky part - make sure to shutdown 0 and 1 (the followers) *before* they can sync the DIFF to disk. This is extremely timing sensitive as we already buffer the DIFF and sync them *after* ACK NEWLEADER.
* Restart 0 and 1, form a new quorum.
* Verify client of 0 and 1 does not have the view of T, a violation of ZAB.;;;","02/Sep/20 04:42;hanm;[~fregatte] I am curious how did you notice this issue. Did this happen in any of your production environment? ;;;","02/Sep/20 05:38;fregatte; [~hanm]

I am very sorry that this problem has not been encountered in the production environment.

How did I discover this problem:
Recently I studied the code of zookeeper 3.6 and two papers ""A simple totally ordered broadcast protocol"" and ""Zab: High-performance broadcast for primary-backup systems"". But when I checked the code, I found that the code did not meet the requirements of zab. Then I searched the modification history of the code and found that there was a modification to this on github, which occurred in 2017. But the modification on this has been closed, and it was recognized by many people at that time. So I think it may be that I am wrong, it may be that I have a deviation in my understanding of the ZAB agreement. So I found the email group of zookeeper and wanted to confirm this issue. If it is indeed my misunderstanding, then I can use the new version with peace of mind.

Probability of this problem:
Because this problem is an extreme situation I simulated based on ZAB theory, there is only a theoretical possibility, if it is found in a production environment that at least two conditions are met
1. The above situation occurs
2. Clients (such as webapp) have high requirements for consistent data reading, and if non-consistent reading occurs, it may cause great losses, but this important scenario generally has other guarantees Measures to fix the results.

So it is not easy to meet the above two conditions in production, so it is not easy to find. But because this problem violates the ZAB theory, it always makes me a little worried during use;;;","02/Sep/20 22:52;hanm;[~fregatte] good to know it's detected by code review. Can you maybe please read more code and see if you can find more issues :);;;","02/Sep/20 22:53;hanm;I think this issue is somewhat hard to reproduce on production possibly because it's heavily depends on timing, and require all followers fail at same time, and require leader to serve traffic (most production system does not allow leader to serve traffic). I have submit my test case in PR 1445 where I have to deterministically inject a fault to precisely let followers fail at same time at certain phase during sync. It might happen in production if the quorum is serving heavy traffic with IO contentions on followers, though, but I never saw such case. I think this bug should get a fix because data consistency is super important for ZooKeeper. I am working on patch.;;;","03/Sep/20 01:04;fregatte;[~hanm] OK I will :D;;;","13/Nov/20 17:41;nkalmar;After some testing, it looks like it's not a trivial backport to 3.5
It seems that follower and leader does not have the same view after some tests.;;;","20/Nov/20 00:14;liwang;Hi Michael, 

It looks like the   [GitHub Pull Request #1445|https://github.com/apache/zookeeper/pull/1445] cause the compilation issue in branch-3.6. The error is ""package org.junit.jupiter.api does not exist"". Can you please take a look at it?;;;","05/Apr/22 03:49;Mrsjuli;I think this is a bug, your test case is sound to me. Do you mind
creating a JIRA for this issue?

Followers should not ACK NEWLEADER without ACK every transaction from the
DIFF sync. To ACK every transaction, a follower either persists the
transaction in log, or takes a snapshot before sending the ACK of the
NEWLEADER (which we did, before ZOOKEEPER-2678 where the snapshot
optimization was introduced).

A potential fix I have in mind is to make sure to persist all DIFF sync
proposals from LEADER (similar to what we are already doing for proposals
coming between NEWLEADER and UPTODATE). By doing so, when the leader
receives NEWLEADER ACK from a quorum, it's guaranteed that
every transaction leader DIFF sync to follower is quorum committed. Thus
there will not be inconsistent views moving forward. Alternatively we can
take a snapshot before ACK NEWLEADER but that will be a big performance hit
for big data trees.

I am also interested to hear what others think about this.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
zktreeutil multiple issues,ZOOKEEPER-3908,13320911,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,maydaylive,maydaylive,04/Aug/20 17:22,04/May/22 14:50,13/Jul/23 09:08,04/May/22 14:50,3.4.14,3.5.8,3.6.1,,,,,,,3.9.0,,,,,build,,,,2,,,"There are currently multiple issues affecting zktreeutil 

 
 # it does not compile successfully from source on 3.4.X 3.5.X and 3.6.X
 # It compiles successfully (after finding patched) only on older compilers
 # It fails to connect to the ZK host to dump/import/export/diff",,csaltos,maydaylive,symat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 04 14:50:34 UTC 2022,,,,,,,,,,"0|z0hgs8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Nov/20 04:50;csaltos;Here some logs of trying to connect to Zookeeper 3.4 ->

2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@753: Client environment:zookeeper.version=zookeeper C client 3.4.13
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@757: Client environment:host.name=ambar
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@764: Client environment:os.name=Linux
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@765: Client environment:os.arch=5.4.0-54-generic
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@766: Client environment:os.version=#60-Ubuntu SMP Fri Nov 6 10:37:59 UTC 2020
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@774: Client environment:user.name=csaltos
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@782: Client environment:user.home=/home/csaltos
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@log_env@794: Client environment:user.dir=/home/csaltos
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_INFO@zookeeper_init@818: Initiating client connection, host=10.0.1.94:2181 sessionTimeout=10000 watcher=(nil) sessionId=0 sessionPasswd=<null> context=(nil) flags=0
2020-11-23 06:49:46,855:214941(0x7f1b71f49780):ZOO_DEBUG@start_threads@221: starting threads...
2020-11-23 06:49:46,856:214941(0x7f1b71f1e700):ZOO_DEBUG@do_io@367: started IO thread
[zktreeutil] zooKeeper exception caught: Unable to connect to ZK running at '10.0.1.94:2181'; state=999
2020-11-23 06:49:46,856:214941(0x7f1b7171d700):ZOO_DEBUG@do_completion@458: started completion thread
terminate called after throwing an instance of 'zktreeutil::ZooKeeperException'
 what(): Unable to connect to ZK running at '10.0.1.94:2181'; state=999
fish: “zktreeutil -z 10.0.1.94:2181 --…” terminated by signal SIGABRT (Abort);;;","04/May/22 14:50;symat;Issue resolved by pull request 1870
[https://github.com/apache/zookeeper/pull/1870];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition causes sessions to be created for clients even though their certificate authentication has failed,ZOOKEEPER-3905,13320715,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,karanmehta93,karanmehta93,03/Aug/20 17:46,10/Sep/20 10:43,13/Jul/23 09:08,08/Aug/20 09:53,3.5.8,3.6.2,,,,,,,,3.5.9,3.6.2,3.7.0,,,,,,,0,,,"To reproduce, apply the diff and run ClientSSLTest#testSecureStandaloneServer() test. The logs would show that a valid session was created before connection was rejected and client had to retry

 
{code:java}
diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKTrustManager.java b/zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKTrustManager.java
 index aa02145b2..df1bdcc0f 100644
 — a/zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKTrustManager.java
 +++ b/zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKTrustManager.java
 @@ -111,6 +111,7 @@ public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngi
 @Override
 public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException
{ x509ExtendedTrustManager.checkClientTrusted(chain, authType); + throw new CertificateException(); }
@Override
{code}
  
 What should have happened:
 Server should instantly close the client's connection and NOT process any request.
  
 Potential threat:
 Malicious clients may be able to put unnecessary load/traffic on the leader by creating these sessions.
  
 Race Condition:
 In CertificateVerifier#operationComplete(), `addCnxn(cnxn)` method is only called after auth is completed. NettyServerCnxn#close() returns as a no-op [here|https://github.com/apache/zookeeper/blob/branch-3.5/zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java#L105].
  
 I see this as an issue. Please assess the risk and let me know if this is a legit behavior or not.
  ",,andor,apurtell,karanmehta93,symat,,,,,,,,,,,,,,,,"anmolnar opened a new pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422


   Netty channel doesn't get closed if authentication fails after a successful SSL handshake. We need a custom authentication provider in order to trigger this, because the default implementation does the same check as for the SSL handshake. Hence it never fails.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 13:04;githubbot;600","symat commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466425234



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java
##########
@@ -29,8 +29,10 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(ProviderRegistry.class);
 
+    public static final String AUTHPROVIDER_PROPERTY_PREFIX = ""zookeeper.authProvider."";

Review comment:
       nit:
   
   I like that you created this public constant. I searched for this, and the same string is also used in `QuorumPeerConfig`:
   
   https://github.com/apache/zookeeper/blob/c42c8c94085ed1d94a22158fbdfe2945118a82bc/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java#L508
   
   Can you use `AUTHPROVIDER_PROPERTY_PREFIX` there too?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 13:50;githubbot;600","eolivelli commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466440790



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java
##########
@@ -156,4 +161,26 @@ public void testSecureStandaloneServer() throws Exception {
         mt.shutdown();
     }
 
+    @Test
+    public void testSecureStandaloneServerAuthFail() throws IOException {
+        try {
+            System.setProperty(ProviderRegistry.AUTHPROVIDER_PROPERTY_PREFIX + ""authfail"",
+                ""org.apache.zookeeper.test.AuthFailX509AuthenticationProvider"");

Review comment:
       nit:
   you can use `AuthFailX509AuthenticationProvider.class.getName()`
   this way this code won't be subject to problems in case of refactor/move class/rename class




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 14:10;githubbot;600","eolivelli commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-669951707


   IMO this change is to be cherry picked to 3.5 and 3.6 branches


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 14:11;githubbot;600","anmolnar commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466491054



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/auth/ProviderRegistry.java
##########
@@ -29,8 +29,10 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(ProviderRegistry.class);
 
+    public static final String AUTHPROVIDER_PROPERTY_PREFIX = ""zookeeper.authProvider."";

Review comment:
       Sure, will do. Looks like there are a lot of unit tests where we use the same string, but I won't replace all of them in this PR.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 15:21;githubbot;600","anmolnar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670003194


   @eolivelli @symat Addressed your comments, waiting for a green build.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 15:34;githubbot;600","nkalmar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670048416


   restarted maven build manually, as retest this please is no longer working I think?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 16:51;githubbot;600","symat commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670052065


   I usually try ""retest maven build"". Although I'm not sure if that works. :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 16:58;githubbot;600","anmolnar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670063235


   There's a planned downtime of H* nodes until 6PM Pacific Time. We need to be patient for now.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:17;githubbot;600","karanmehta93 commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670063743


   How would the client behave with a quorum of servers? Seems like the client will keep retrying to get to a good server, but connection will be denied everywhere, is that right?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:17;githubbot;600","karanmehta93 commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466566510



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -115,6 +115,9 @@ public void close() {
         // if this is not in cnxns then it's already closed
         if (!factory.cnxns.remove(this)) {
             LOG.debug(""cnxns size:{}"", factory.cnxns.size());
+            if (channel.isOpen()) {

Review comment:
       Does `CertificateVerifier` take care of setting the `DisconnectReason`? Do we print them somewhere in server logs?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:20;githubbot;600","anmolnar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670065464


   > How would the client behave with a quorum of servers? Seems like the client will keep retrying to get to a good server, but connection will be denied everywhere, is that right?
   
   Yes.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:21;githubbot;600","anmolnar commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466567178



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -115,6 +115,9 @@ public void close() {
         // if this is not in cnxns then it's already closed
         if (!factory.cnxns.remove(this)) {
             LOG.debug(""cnxns size:{}"", factory.cnxns.size());
+            if (channel.isOpen()) {

Review comment:
       It prints ""authentication failed"" in the server logs.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:21;githubbot;600","anmolnar commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466571939



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -115,6 +115,9 @@ public void close() {
         // if this is not in cnxns then it's already closed
         if (!factory.cnxns.remove(this)) {
             LOG.debug(""cnxns size:{}"", factory.cnxns.size());
+            if (channel.isOpen()) {

Review comment:
       I'm not familiar with the concept of `DisconnectReason`, need to take a look first. There should be quite straightforward to add it to CertificateVerifier if it's any help to you.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:27;githubbot;600","anmolnar commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466572586



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -115,6 +115,9 @@ public void close() {
         // if this is not in cnxns then it's already closed
         if (!factory.cnxns.remove(this)) {
             LOG.debug(""cnxns size:{}"", factory.cnxns.size());
+            if (channel.isOpen()) {

Review comment:
       Oh, sorry, I'm completely wrong. It's already done.
   ```
                       if (KeeperException.Code.OK != authProvider.handleAuthentication(cnxn, null)) {
                           LOG.error(""Authentication failed for session 0x{}"", Long.toHexString(cnxn.getSessionId()));
                           cnxn.close(ServerCnxn.DisconnectReason.SASL_AUTH_FAILURE);
                           return;
                       }
   ```




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:28;githubbot;600","anmolnar commented on a change in pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#discussion_r466572586



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
##########
@@ -115,6 +115,9 @@ public void close() {
         // if this is not in cnxns then it's already closed
         if (!factory.cnxns.remove(this)) {
             LOG.debug(""cnxns size:{}"", factory.cnxns.size());
+            if (channel.isOpen()) {

Review comment:
       Oh, sorry, I'm completely wrong. It's already done.
   ```
   if (KeeperException.Code.OK != authProvider.handleAuthentication(cnxn, null)) {
       LOG.error(""Authentication failed for session 0x{}"", Long.toHexString(cnxn.getSessionId()));
       cnxn.close(ServerCnxn.DisconnectReason.SASL_AUTH_FAILURE);
       return;
   }
   ```




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/20 17:30;githubbot;600","anmolnar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670341843


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/20 05:59;githubbot;600","anmolnar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670428104


   Patch is all green now.
   @karanmehta93 Are you happy with the changes? Can you try it in your environment by any chance?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/20 09:35;githubbot;600","karanmehta93 commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670708341


   @anmolnar Thanks for putting this up real quick. The patch looks good. 
   I won't be able to test in my environment because of other internal issues but I will let you know if I find something else later.
   Also, can you please port it to 3.5.5 branch too?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/20 20:53;githubbot;600","anmolnar commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670850750


   > @anmolnar Thanks for putting this up real quick. The patch looks good.
   > I won't be able to test in my environment because of other internal issues but I will let you know if I find something else later.
   > Also, can you please port it to 3.5.5 branch too?
   
   Sure, no problem. @eolivelli @symat Please commit the patch to all active branches. I suspect we'll need another PR for 3.5


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/20 09:32;githubbot;600","eolivelli closed pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/20 09:52;githubbot;600","eolivelli commented on pull request #1422:
URL: https://github.com/apache/zookeeper/pull/1422#issuecomment-670852552


   @anmolnar Unfortunately the patch does not apply cleanly to branch-3.6
   please create a patch for branch-3.6 and branch-3.5
   
   This patch has landed to master
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/20 09:52;githubbot;600","anmolnar opened a new pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427


   Backport to branch-3.6
   
   Netty channel doesn't get closed if authentication fails after a successful SSL handshake. We need a custom authentication provider in order to trigger this, because the default implementation does the same check as for the SSL handshake. Hence it never fails.
   
   Unit test added to make sure client is not able to connect.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Aug/20 14:58;githubbot;600","anmolnar commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-671410975


   @eolivelli @symat PTAL.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Aug/20 15:05;githubbot;600","nkalmar commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-671802508


   Wrong importorder:
   '[ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java:26: Import org.junit.Assert.assertTrue appears after other imports that it should precede [ImportOrder]'


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 08:18;githubbot;600","nkalmar commented on a change in pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#discussion_r468408083



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java
##########
@@ -22,7 +22,9 @@
 
 package org.apache.zookeeper.test;
 
+import java.io.IOException;
 import static org.junit.Assert.assertTrue;

Review comment:
       checkstyle don't like the order for this... yikes. 
   I guess Assert.fail should be before? Not sure why.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 08:20;githubbot;600","nkalmar commented on a change in pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#discussion_r468408372



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientSSLTest.java
##########
@@ -22,7 +22,9 @@
 
 package org.apache.zookeeper.test;
 
+import java.io.IOException;
 import static org.junit.Assert.assertTrue;

Review comment:
       oh, nevermind, static imports should be first, that's the problem.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 08:21;githubbot;600","anmolnar commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-671843348


   Thanks @nkalmar . Just fixed it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 09:40;githubbot;600","anmolnar commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-671925345


   @eolivelli all good now.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 12:46;githubbot;600","anmolnar commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-672018171


   @eolivelli @symat Please merge.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 15:30;githubbot;600","anmolnar edited a comment on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-672018171


   @eolivelli @symat @nkalmar Please merge.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/20 19:57;githubbot;600","symat commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-672632633


   I'm merging it


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/20 06:18;githubbot;600","symat commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-672646366


   Thanks @anmolnar!
   I pushed the PR to branch-3.6 and also cherry-picked it to branch-3.5 (resolving conflicts + run unit tests).


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/20 06:51;githubbot;600","anmolnar closed pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/20 09:23;githubbot;600","anmolnar commented on pull request #1427:
URL: https://github.com/apache/zookeeper/pull/1427#issuecomment-672760925


   Great, thanks @symat !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Aug/20 09:23;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,21000,,,0,21000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Aug 06 16:29:14 UTC 2020,,,,,,,,,,"0|z0hfkw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/20 17:48;karanmehta93;[~andor] [~phunt_impala_99b5] [~abrahamfine];;;","04/Aug/20 09:22;andor;[~karanmehta93] Thansk for reporting the issue.

I cannot apply your diff. Would you please attach a file instead which can be applied via ""git apply"" command?;;;","04/Aug/20 14:10;andor;Okay, it was long time ago, but I see the following which might be an issue here. In the test you mentioned the problem is that although client certificate is not trusted (hence the patch to force it), the test is able to create ZK client successfully and establishing a session.

Exception is thrown later when the client timeouts, because while the server is processing requests, it's unable to response to a non-registered client. Weird.

I'm trying to repro it with a ""real"" server.;;;","04/Aug/20 14:18;andor;_""it's unable to response to a non-registered client""_

ConnectRequest/ConnectResponse is different, because ZookeeperServer doesn't care about _channelClosing_ flag and sends the response to the buffer no matter what. :);;;","04/Aug/20 15:30;andor;This is very odd, I cannot repro it with a real cluster/client. 

If I try to create a client which provides a certificate that is not trusted, I'll get a connection cannot be established error during SSL handshake. Handshake fails essentially.
{noformat}
2020-08-04 16:50:09,883 [myid:1] - ERROR [nioEventLoopGroup-7-4:NettyServerCnxnFactory$CertificateVerifier@363] - Unsuccessful handshake with session 0x0
2020-08-04 16:50:09,884 [myid:1] - WARN  [nioEventLoopGroup-7-4:NettyServerCnxnFactory$CnxnChannelHandler@220] - Exception caught
io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: General SSLEngine problem
{noformat}
{{CertificateVerifier}} doesn't even try to authenticate the client, because the handshake process failed previously.

Question: is it possible to provide a cerificate which is trusted by the server, handshake completes and later {{CerificateVerifier}} fails to authenticate?

It uses the same {{ZKTrustManager}} as SSLHandler and calls the same {{checkClientTrusted()}} method.

We might double check the certificate in this process and CertificateVerifier is redundant.;;;","04/Aug/20 18:00;karanmehta93;[~andor] Let me clarify a few more things.
{quote}Question: is it possible to provide a cerificate which is trusted by the server, handshake completes and later {{CerificateVerifier}} fails to authenticate?
{quote}
Yes. Actually, we have added some more code in CerificateVerifier class for authorization of clients. This is where it is failing. We do this check _only if_ certificate is validated to be good (SSL level checks are passed)

 
{code:java}
String clientId = getClientId(clientCert);
 boolean authZResult = authorizeClient(clientId);
 if (!authZResult) {
 LOG.error(""Client id {} doesn't match the allowedList"", clientId);
 return KeeperException.Code.AUTHFAILED;
 }
 {code}
{quote}This is very odd, I cannot repro it with a real cluster/client. 
{quote}
Actually, I saw this issue on a real cluster only. I didn't have any easy way to reproduce this, so hacked up the code in this manner. 
{quote}Exception is thrown later when the client timeouts, because while the server is processing requests, it's unable to response to a non-registered client. Weird.
{quote}
What I expected is that returning AUTHFAILED, would immediately terminate that connection (and even send that response code back to client). Yes, what you said is exactly right.

What do you think should be next steps here?
 ;;;","04/Aug/20 21:29;andor;{quote}Actually, we have added some more code in CerificateVerifier class for authorization of clients.
{quote}
That means you have modified ZooKeeper's source code which essentially created this problem. This is not supported and we don't have anything to fix here. :)

Instead I believe we can do this via a custom x509 authentication provider. KeyManager and TrustManager remain the same meaning we'll have successful SSL handshake, but we add custom code to {{handleAuthentication()}} and fail. I'll try this tomorrow.;;;","04/Aug/20 21:49;karanmehta93;[~andor] yes, thats exactly what we do. We use a custom X509AuthProvider. It is a light fork from branch-3.5. It extends X509AuthenticationProvider class, with a small business logic for authorization (which I posted in code above). It was needed to address our internal security requirements.
{quote}That means you have modified ZooKeeper's source code which essentially created this problem. This is not supported and we don't have anything to fix here. We might double check the certificate in this process and CertificateVerifier is redundant.
{quote}
Makes sense, this piece of code was added a long time ago and things might have changed since. If this isn't supported, how should we address it?;;;","05/Aug/20 07:33;andor;Originally you said ""we have added some more code in CerificateVerifier"" that's why I said you've modified ZooKeeper source code. If you inherited X509AuthProvider and injected the code in the supported way by definining it in the config file, that's completely file. That's how it should done.

I'm talking about a new test case that works in a similar fashion and I'm trying to put together later today. Stay tuned.;;;","05/Aug/20 20:06;andor;[~karanmehta93] I've managed to repro the issue with a real cluster. I injected an authentication provider which succeeds in SSL handshake, but returns AUTHFAIL when authenticates the client. I was able to connect with the CLI client and create a znode in the tree. The response didn't get back to the client, but the tree has been modified which is not good. 

Issue is confirmed.

I'll put together a unit test and PR soon.;;;","05/Aug/20 20:57;karanmehta93;Great, thanks for the update. Looking forward for the patch.;;;","06/Aug/20 13:33;andor;Pull request available [https://github.com/apache/zookeeper/pull/1422];;;","06/Aug/20 13:56;symat;does this error happen only when custom authentication provider is defined together with SSL?

Is SASL a custom provider in this case? Does the error happen with failed SASL authentication when SSL is also used?;;;","06/Aug/20 16:29;andor;[~symat] These are very good questions, I don't know yet.

It should not be related to SSL, but I need to double check.;;;",,,,,,,,,,,,,,,,,,,,,,,
Client side NullPointerException in case of empty Multi operation,ZOOKEEPER-3895,13318846,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,eolivelli,eolivelli,eolivelli,23/Jul/20 06:45,10/Sep/20 10:43,13/Jul/23 09:08,29/Jul/20 17:13,3.6.1,,,,,,,,,3.6.2,3.7.0,,,,java client,,,,0,,,"I saw this error in an application that uses Apache BookKeeper DistributedLog library.

This is a regression on 3.6.x release series

The bug is in ZooKeeper Java Client.
{code:java}
Caused by: java.lang.NullPointerExceptionCaused by: java.lang.NullPointerException at org.apache.zookeeper.ZooKeeper.multiInternal(ZooKeeper.java:2105) at org.apache.zookeeper.ZooKeeper.multi(ZooKeeper.java:2050) at org.apache.bookkeeper.zookeeper.ZooKeeperClient.access$1101(ZooKeeperClient.java:70) at org.apache.bookkeeper.zookeeper.ZooKeeperClient$3.zkRun(ZooKeeperClient.java:498) at org.apache.bookkeeper.zookeeper.ZooKeeperClient$ZkRetryRunnable.run(ZooKeeperClient.java:389) at org.apache.bookkeeper.zookeeper.ZooKeeperClient.multi(ZooKeeperClient.java:510) at org.apache.distributedlog.zk.ZKTransaction.execute(ZKTransaction.java:67) at org.apache.distributedlog.BKLogWriteHandler.setLogSegmentTruncationStatus(BKLogWriteHandler.java:1223) at org.apache.distributedlog.BKLogWriteHandler.setLogSegmentsOlderThanDLSNTruncated(BKLogWriteHandler.java:1117) at org.apache.distributedlog.BKLogWriteHandler.lambda$setLogSegmentsOlderThanDLSNTruncated$0(BKLogWriteHandler.java:1083) at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1183) at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2299) at org.apache.distributedlog.BKLogWriteHandler.setLogSegmentsOlderThanDLSNTruncated(BKLogWriteHandler.java:1082) at org.apache.distributedlog.BKAsyncLogWriter.truncate(BKAsyncLogWriter.java:449){code}",,eolivelli,symat,,,,,,,,,,,,,,,,,,"eolivelli opened a new pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407


   https://issues.apache.org/jira/browse/ZOOKEEPER-3895


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 07:10;githubbot;600","symat commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-662945060


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 11:03;githubbot;600","TisonKun commented on a change in pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#discussion_r459373435



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -589,6 +600,8 @@ private void processEvent(Object event) {
                         ((AsyncCallback.EphemeralsCallback) lcb.cb).processResult(lcb.rc, lcb.ctx, null);
                     } else if (lcb.cb instanceof AsyncCallback.AllChildrenNumberCallback) {
                         ((AsyncCallback.AllChildrenNumberCallback) lcb.cb).processResult(lcb.rc, lcb.path, lcb.ctx, -1);
+                    } else if (lcb.cb instanceof AsyncCallback.MultiCallback) {

Review comment:
       It seems we don't call `queueCallback` anywhere so a `LocalCallback` is never created. If so, we should delete such dead code instead of adapting it.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 11:09;githubbot;600","TisonKun commented on a change in pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#discussion_r459374810



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -589,6 +600,8 @@ private void processEvent(Object event) {
                         ((AsyncCallback.EphemeralsCallback) lcb.cb).processResult(lcb.rc, lcb.ctx, null);
                     } else if (lcb.cb instanceof AsyncCallback.AllChildrenNumberCallback) {
                         ((AsyncCallback.AllChildrenNumberCallback) lcb.cb).processResult(lcb.rc, lcb.path, lcb.ctx, -1);
+                    } else if (lcb.cb instanceof AsyncCallback.MultiCallback) {

Review comment:
       Hmmm I just see the next change, so we active an unused method. Let me take a closer look.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 11:12;githubbot;600","symat commented on a change in pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#discussion_r459373303



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -469,6 +470,16 @@ private static String makeThreadName(String suffix) {
         return name + suffix;
     }
 
+    /**
+     * Tests that current thread is the main event loop.
+     * This method is useful only for tests inside ZooKeeper project
+     * it is not a public API intended for use by external applications.
+     * @return true if Thread.currentThread() is an EventThread.
+     */
+    public static boolean isInEventThread() {

Review comment:
       just an idea: what about making it package private, and moving the testcase (or the whole test file) to the org.apache.zookeeper package?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 11:17;githubbot;600","symat commented on a change in pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#discussion_r459380552



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -589,6 +600,8 @@ private void processEvent(Object event) {
                         ((AsyncCallback.EphemeralsCallback) lcb.cb).processResult(lcb.rc, lcb.ctx, null);
                     } else if (lcb.cb instanceof AsyncCallback.AllChildrenNumberCallback) {
                         ((AsyncCallback.AllChildrenNumberCallback) lcb.cb).processResult(lcb.rc, lcb.path, lcb.ctx, -1);
+                    } else if (lcb.cb instanceof AsyncCallback.MultiCallback) {

Review comment:
       at the first glance, it makes sense for me... AFAICT: if the client would like to execute an ""empty"" multiop request, we just return immediately without even sending the request to the server. 
   
   @eolivelli Do you think we would need to implement the similar logic for the C-client? (I see we have `TestMulti.cc` with a few unit tests, but don't see any test for empty multi-request. Also I don't see in the c code that this specific case would be handled in the C client.) I think adding a new unit test for the C-client (and potentially make a fix) would make sense. Or at least register a follow-up jira for it.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 11:25;githubbot;600","eolivelli commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-662978887


   @symat 
   This is a bug on the Java client, probably a regression of 3.6.0.
   I will create a ticket for the C-client, as I don't have a working env for C-client development during these days
   
    @TisonKun 
   as you mentioned the problem is that opKind is null.
   If the client requests zero ops that it is expected to have zero results, so it is not a problem from my point of view.
   I think there is no need to log a warning, we should simply do nothing and return.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 12:30;githubbot;600","eolivelli commented on a change in pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#discussion_r459413237



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -469,6 +470,16 @@ private static String makeThreadName(String suffix) {
         return name + suffix;
     }
 
+    /**
+     * Tests that current thread is the main event loop.
+     * This method is useful only for tests inside ZooKeeper project
+     * it is not a public API intended for use by external applications.
+     * @return true if Thread.currentThread() is an EventThread.
+     */
+    public static boolean isInEventThread() {

Review comment:
       @symat 
   I made it public because I thought that this kind of assertions would be very useful while working on the EventThread.
   I also didn't want to move the test case, in order to limit the impact of the patch over the codebase.
   I will do it if you feel strong




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 12:32;githubbot;600","symat commented on a change in pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#discussion_r459452127



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
##########
@@ -469,6 +470,16 @@ private static String makeThreadName(String suffix) {
         return name + suffix;
     }
 
+    /**
+     * Tests that current thread is the main event loop.
+     * This method is useful only for tests inside ZooKeeper project
+     * it is not a public API intended for use by external applications.
+     * @return true if Thread.currentThread() is an EventThread.
+     */
+    public static boolean isInEventThread() {

Review comment:
       Usually I try to avoid adding anything to the code ""just for the tests"". On the other hand this method can be even handy when the users are writing their own callbacks. Or for other unit tests. And the EventThread is an inner-class, so I wouldn't expose it either... 
   
   So all-in-all I think this is a meaningful change, let's keep it.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 13:34;githubbot;600","eolivelli commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-663558359


   rerun maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 14:11;githubbot;600","eolivelli commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-663559071


   @symat Jenkins is not in good shape
   see
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/2153/console
   
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 14:13;githubbot;600","eolivelli edited a comment on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-663558359


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 14:13;githubbot;600","symat commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-664915266


   > @symat Jenkins is not in good shape
   
   yep, we have some C-client build issues. I guess something changed in the build environment:
   
   > [INFO] --- exec-maven-plugin:1.6.0:exec (autoreconf) @ zookeeper-client-c ---
   autoreconf: cannot create /tmp/user/910/ar1863.9600: No such file or directory
    at /usr/bin/autoreconf line 691.
   [ERROR] Command execution failed.
   
   I don't really know our CI jobs and the apache infrastructure... I don't know if it is even worth to investigate, as we are migrating to some other jenkins right now. 
   
   Anyway, I tested your patch locally and all tests (incl. C-client) passed, so I'm good. I can merge it. Only to master (given the point raised by @TisonKun about behaviour change)? Or you planned to also merge it to branch-3.6?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 07:53;githubbot;600","asfgit closed pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 17:45;githubbot;600","symat commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-665772754






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 17:46;githubbot;600","eolivelli commented on pull request #1407:
URL: https://github.com/apache/zookeeper/pull/1407#issuecomment-665560093






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 17:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jul 29 17:13:38 UTC 2020,,,,,,,,,,"0|z0h428:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jul/20 17:13;symat;Issue resolved by pull request 1407
[https://github.com/apache/zookeeper/pull/1407];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ZKCli commands give wrong error message ""Authentication is not valid"" for insufficient permissions",ZOOKEEPER-3891,13316984,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,eolivelli,arshad.mohammad,arshad.mohammad,15/Jul/20 17:18,06/Jan/22 07:00,13/Jul/23 09:08,29/Jul/20 10:01,,,,,,,,,,3.7.0,,,,,,,,,0,pull-request-available,,"ZKCli commands give error message ""Authentication is not valid"" for insufficient permissions .(when KeeperException.NoAuthException is thrown). This is misleading message. 

Steps: to get the error
{code:java}
[zk: vm1:2181(CONNECTED) 0] create /b
Created /b
[zk: vm1:2181(CONNECTED) 1] getAcl /b
'world,'anyone
: cdrwa
[zk: vm1:2181(CONNECTED) 2] setAcl /b world:anyone:ra
[zk: vm1:2181(CONNECTED) 3] getAcl /b
'world,'anyone
: ra
[zk: vm1:2181(CONNECTED) 4] create /b/b1
Authentication is not valid : /b/b1
[zk: vm1:2181(CONNECTED) 5]
{code}
 

I think we should change  message ""Authentication is not valid"" to ""Insufficient permission""
 ",,arshad.mohammad,eolivelli,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1404:
URL: https://github.com/apache/zookeeper/pull/1404


   …on is not valid"" for insufficient permissions


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jul/20 18:51;githubbot;600","eolivelli closed pull request #1404:
URL: https://github.com/apache/zookeeper/pull/1404


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 17:37;githubbot;600","rinilnath commented on pull request #1404:
URL: https://github.com/apache/zookeeper/pull/1404#issuecomment-1006329571


   What is the solution to over come this error, if it shows insufficient permission ?
   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jan/22 07:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,ZOOKEEPER-3128,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jul 29 10:01:22 UTC 2020,,,,,,,,,,"0|z0gslk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jul/20 10:01;eolivelli;Issue resolved by pull request 1404
[https://github.com/apache/zookeeper/pull/1404];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In SSL-only server zkServer.sh status command should use secureClientPortAddress instead of clientPortAddress,ZOOKEEPER-3887,13316565,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,13/Jul/20 22:23,17/May/22 08:32,13/Jul/23 09:08,27/Mar/21 17:10,3.6.2,,,,,,,,,3.5.10,3.6.3,3.7.1,3.8.0,,scripts,,,,0,pull-request-available,,"When only SSL client port is enabled, zkServer.sh status command should use secureClientPortAddress value instead of clientPortAddress. 

As clientPortAddress is not configured, zkServer.sh status command tries to connect to localhost and fails.

ZOOKEEPER-3818 has addressed the port issue, same way we should address the host issue.",,ananysin,arshad.mohammad,symat,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1654:
URL: https://github.com/apache/zookeeper/pull/1654


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/21 11:29;githubbot;600","asfgit closed pull request #1654:
URL: https://github.com/apache/zookeeper/pull/1654


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 17:09;githubbot;600","anmolnar commented on pull request #1654:
URL: https://github.com/apache/zookeeper/pull/1654#issuecomment-808797937


   Good catch. I didn't know about the `secureClientPortAddress` option and noticed because it's still not documented. Ouch!


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 20:27;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 17 08:32:14 UTC 2022,,,,,,,,,,"0|z0gq0o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Mar/21 11:41;arshad.mohammad;I created SSL certificate for test with CN=host1, ZK server was not starting as server by default binds on localhost. It was failing with certificate_unknown error.
Configured secureClientPortAddress=host1 now ZK server started successfully but zkServer.sh status command started failing because this command was using localhost as clientPortAddress was not configured

Summited changes in the PR so status command uses configured secureClientPortAddress value instead of clientPortAddress  value.;;;","27/Mar/21 17:10;arshad.mohammad;Issue resolved by pull request 1654
[https://github.com/apache/zookeeper/pull/1654];;;","27/Mar/21 17:11;arshad.mohammad;Thanks [~symat] for the review. Merged;;;","05/Jan/22 10:32;ananysin;Hi, can we backport this to branch-3.5?;;;","17/May/22 08:32;symat;I'm backporting this to branch-3.5, this will be part of 3.5.10;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zoo_aremove_watches segfault: zk_hashtable needs locking!,ZOOKEEPER-3885,13316511,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,tudorb,tudorb,13/Jul/20 17:29,10/Sep/20 10:43,13/Jul/23 09:08,31/Jul/20 14:47,3.5.8,3.6.1,,,,,,,,3.5.9,3.6.2,3.7.0,,,c client,,,,0,,,"We're encountering the following segfault (stack abridged).

This happens because the watcher hashtable has no locking, and is accessed concurrently from multiple threads:
 - the thread doing zoo_aremove_watches, and
 - the IO thread adding / firing watchers

We encountered this with zookeeper 3.5.8, but by code inspection the code appears the same in 3.6.

 *** Aborted at 1594473472 (Unix time, try 'date -d @1594473472') ***
*** Signal 11 (SIGSEGV) (0xae000000aa) received by PID 199 (pthread TID 0x7f1d64667700) (linux TID 1273) (code: address not mapped to object), stack trace: ***
    @ 00007f1d98dfc8b3 folly::symbolizer::(anonymous namespace)::signalHandler(int, siginfo_t*, void*)
                       /src/folly/folly/experimental/symbolizer/SignalHandler.cpp:431
    @ 00007f1d95e6c89f (unknown)
    @ 00007f1d8f73de1e containsWatcher.part.3
                       /src/zookeeper/zookeeper-client/zookeeper-client-c/src/zk_hashtable.c:152
    @ 00007f1d8f73e806 pathHasWatcher
                       /src/zookeeper/zookeeper-client/zookeeper-client-c/src/zk_hashtable.c:456
    @ 00007f1d8f7382dd aremove_watches
                       /src/zookeeper/zookeeper-client/zookeeper-client-c/src/zookeeper.c:4260
    @ 00007f1d8f738f82 zoo_aremove_watches
                       /src/zookeeper/zookeeper-client/zookeeper-client-c/src/zookeeper.c:5131
",,symat,tudorb,,,,,,,,,,,,,,,,,,"tudor opened a new pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403


   See the comments in the JIRA issue.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jul/20 20:10;githubbot;600","eolivelli commented on pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403#issuecomment-658388865


   @ztzg @symat can you please take a look ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jul/20 20:11;githubbot;600","symat commented on pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403#issuecomment-658848348


   Sorry, I'm on vacation without a laptop. I'll check it next week, if others doesn't approve it sooner.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jul/20 15:54;githubbot;600","symat commented on pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403#issuecomment-661042885






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jul/20 13:34;githubbot;600","ztzg commented on pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403#issuecomment-665462811


   Hi @tudor, @symat,
   
   Sorry for the delay; I've been a bit ""disconnected"" and almost missed this.  I'll have a look ASAP.
   
   Cheers, -D
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 07:41;githubbot;600","symat commented on pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403#issuecomment-666968584


   thanks @ztzg for the feedback, really appreciated!
   @eolivelli are you OK if we merge it? The C-client changes rarely get reviews from other committers... @nkalmar maybe?
   As this is a bugfix (no new feature, but fixing a segfault), I think it would be great to have this on all active branches.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/20 07:07;githubbot;600","asfgit closed pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/20 14:10;githubbot;600","symat commented on pull request #1403:
URL: https://github.com/apache/zookeeper/pull/1403#issuecomment-667159006


   Thanks @tudor for your fix!
   I pushed to all active branches (and also executing C unit tests for all branches, as CI only is checking the master).


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/20 14:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jul 31 14:47:50 UTC 2020,,,,,,,,,,"0|z0gpoo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jul/20 20:10;tudorb;PR: https://github.com/apache/zookeeper/pull/1403;;;","16/Jul/20 19:56;tudorb;This has a bug; we are holding the new mutex around calling the watcher callbacks, which means there's a possibility for deadlock (specifically, we can't call zoo_aremove_watchers from the callback.);;;","16/Jul/20 20:15;tudorb;Thankfully, we don't need the mutex at all around deliverWatchers(), as that's iterating through a private list; the watchers were moved from the global hashtable (under the lock) to the private list in collectWatchers(). PR updated.;;;","31/Jul/20 14:47;symat;Issue resolved by pull request 1403
[https://github.com/apache/zookeeper/pull/1403];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client connection fails if IPV6 is not enclosed in square brackets,ZOOKEEPER-3878,13314843,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,03/Jul/20 07:23,10/Sep/20 10:43,13/Jul/23 09:08,13/Jul/20 10:12,,,,,,,,,,3.6.2,3.7.0,,,,,,,,0,,,"Clients should be able to connect to ZooKeeper  with or without square bracket around IPV6 in connection string. 
127:0:0:0:0:0:0:1:2181 and [127:0:0:0:0:0:0:1]:2181 both should work.

After ZOOKEEPER-3106 fix connection with  127:0:0:0:0:0:0:1:2181 fails
I think we should support both  with or without square bracket around IPV6.
",,arshad.mohammad,eolivelli,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398


   …uare brackets


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/20 11:28;githubbot;600","eolivelli commented on a change in pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398#discussion_r453213174



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ConnectStringParser.java
##########
@@ -70,16 +69,22 @@ public ConnectStringParser(String connectString) {
         List<String> hostsList = split(connectString, "","");
         for (String host : hostsList) {
             int port = DEFAULT_PORT;
-            try {
-                String[] hostAndPort = ConfigUtils.getHostAndPort(host);
+            String[] hostAndPort = NetUtils.getIPV6HostAndPort(host);
+            if (hostAndPort.length != 0) {
                 host = hostAndPort[0];
                 if (hostAndPort.length == 2) {
                     port = Integer.parseInt(hostAndPort[1]);
                 }
-            } catch (ConfigException e) {
-                e.printStackTrace();
+            } else {

Review comment:
       Why this part of the logic is not inside 
   NetUtils.getIPV6HostAndPort(host) ?
   What about pushing it up there?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/20 16:53;githubbot;600","arshadmohammad commented on a change in pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398#discussion_r453360716



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ConnectStringParser.java
##########
@@ -70,16 +69,22 @@ public ConnectStringParser(String connectString) {
         List<String> hostsList = split(connectString, "","");
         for (String host : hostsList) {
             int port = DEFAULT_PORT;
-            try {
-                String[] hostAndPort = ConfigUtils.getHostAndPort(host);
+            String[] hostAndPort = NetUtils.getIPV6HostAndPort(host);
+            if (hostAndPort.length != 0) {
                 host = hostAndPort[0];
                 if (hostAndPort.length == 2) {
                     port = Integer.parseInt(hostAndPort[1]);
                 }
-            } catch (ConfigException e) {
-                e.printStackTrace();
+            } else {

Review comment:
       I wanted to make getIPV6HostAndPort  API more generic so it can be used other places as well for example it can be used to input of  host:port:port and [host]:port:port  as well. If we move above said logic to getIPV6HostAndPort  host:port:port will give wrong result; So I wanted to keep only common logic in  getIPV6HostAndPort.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/20 20:36;githubbot;600","eolivelli commented on a change in pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398#discussion_r453540924



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/client/ConnectStringParser.java
##########
@@ -70,16 +69,22 @@ public ConnectStringParser(String connectString) {
         List<String> hostsList = split(connectString, "","");
         for (String host : hostsList) {
             int port = DEFAULT_PORT;
-            try {
-                String[] hostAndPort = ConfigUtils.getHostAndPort(host);
+            String[] hostAndPort = NetUtils.getIPV6HostAndPort(host);
+            if (hostAndPort.length != 0) {
                 host = hostAndPort[0];
                 if (hostAndPort.length == 2) {
                     port = Integer.parseInt(hostAndPort[1]);
                 }
-            } catch (ConfigException e) {
-                e.printStackTrace();
+            } else {

Review comment:
       makes sense to me




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jul/20 10:07;githubbot;600","eolivelli closed pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jul/20 10:10;githubbot;600","eolivelli commented on pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398#issuecomment-657467244


   I have cherry-picked this patch to branch-3.6.
   It does not cherry-pick to branch-3.5
   if you are interested in picking it to that release branch then please send another PR
   
   IMO we can just pick it to 3.6, hopefully we will cut a new release soon on 3.6.x


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jul/20 10:11;githubbot;600","arshadmohammad commented on pull request #1398:
URL: https://github.com/apache/zookeeper/pull/1398#issuecomment-657765306


   This scenario is not a bug in branch-3.5. It is an improvement there. But I think it is good to be in sync.
   Have create jira https://issues.apache.org/jira/browse/ZOOKEEPER-3886 and raised PR https://github.com/apache/zookeeper/pull/1400


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jul/20 20:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,ZOOKEEPER-3886,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jul 13 20:05:35 UTC 2020,,,,,,,,,,"0|z0gffk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Jul/20 10:12;eolivelli;committed to master branch and to branch-3.6

thank you [~arshad.mohammad];;;","13/Jul/20 20:05;arshad.mohammad;Thanks @eolivelli for reviewing and committing this Issue.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX Bean RemotePeerBean should enclose IPV6 host in square bracket same as LocalPeerBean ,ZOOKEEPER-3877,13314837,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,03/Jul/20 07:00,17/May/22 08:24,13/Jul/23 09:08,02/Mar/21 06:08,,,,,,,,,,3.5.10,3.6.3,3.7.0,3.8.0,,jmx,,,,0,pull-request-available,,"JMX metrics Bean RemotePeerBean should enclose ipv6 host in square bracket same as LocalPeerBean 
 Changes done in ZOOKEEPER-3057 for LocalPeerBean should also be done for
RemotePeerBean",,arshad.mohammad,,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   …quare bracket same as LocalPeerBean


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/20 11:06;githubbot;600","eolivelli commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-657095998


   Can you please  verify Maven build? 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/20 17:05;githubbot;600","arshadmohammad commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-657275788


   Jenkins and JenkinsMaven both failed while archiving the artifacts with error ""FATAL: Remote call on H14 failed"". Not sure what action to be taken.  lets run it again.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/20 21:12;githubbot;600","arshadmohammad commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-657275802


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/20 21:12;githubbot;600","eolivelli commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-657674954


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jul/20 16:57;githubbot;600","arshadmohammad commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-659178988


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jul/20 06:03;githubbot;600","arshadmohammad closed pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/20 05:46;githubbot;600","arshadmohammad opened a new pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   …quare bracket same as LocalPeerBean


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/20 05:46;githubbot;600","arshadmohammad closed pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/20 16:26;githubbot;600","arshadmohammad opened a new pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   …quare bracket same as LocalPeerBean


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/20 16:26;githubbot;600","arshadmohammad opened a new pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493


   …quare bracket same as LocalPeerBean


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/20 17:20;githubbot;600","arshadmohammad closed pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/20 17:21;githubbot;600","arshadmohammad commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-705712263


   Created new PR https://github.com/apache/zookeeper/pull/1493. Closing this one.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/20 17:21;githubbot;600","arshadmohammad closed pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/20 13:41;githubbot;600","arshadmohammad opened a new pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493


   …quare bracket same as LocalPeerBean


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/20 13:43;githubbot;600","arshadmohammad commented on pull request #1397:
URL: https://github.com/apache/zookeeper/pull/1397#issuecomment-705712263


   Created new PR https://github.com/apache/zookeeper/pull/1493. Closing this one.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/20 13:46;githubbot;600","arshadmohammad closed pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 11:34;githubbot;600","arshadmohammad opened a new pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493


   …quare bracket same as LocalPeerBean


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 11:34;githubbot;600","arshadmohammad commented on pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493#issuecomment-787879526


   closing to rerun the ci


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 11:34;githubbot;600","arshadmohammad commented on pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493#issuecomment-788123382


   Thanks @eolivelli  for review and approval. I will commit it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/21 17:21;githubbot;600","asfgit closed pull request #1493:
URL: https://github.com/apache/zookeeper/pull/1493


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/21 06:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12600,,,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Mar 02 06:08:48 UTC 2021,,,,,,,,,,"0|z0gfe8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Mar/21 06:08;arshad.mohammad;Issue resolved by pull request 1493
[https://github.com/apache/zookeeper/pull/1493];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkServer.sh status command fails when IPV6 is configured,ZOOKEEPER-3876,13314836,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,03/Jul/20 06:52,17/May/22 08:10,13/Jul/23 09:08,29/Jul/20 10:32,,,,,,,,,,3.5.10,3.6.2,3.7.0,,,,,,,0,,,"When server configuration has client IP and port in it as below

{code:java}
server.1=127:0:0:0:0:0:0:1:2890:3890:participant;127:0:0:0:0:0:0:1:2181
{code}
Then zkServer.sh status command fails. It is not able to parse the host and ip.",,arshad.mohammad,eolivelli,,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1395:
URL: https://github.com/apache/zookeeper/pull/1395


   Modified host and IP parsing logic for IPV6


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jul/20 05:48;githubbot;600","maoling commented on pull request #1395:
URL: https://github.com/apache/zookeeper/pull/1395#issuecomment-657207089


   Some test cases using [this online shell tool](https://www.runoob.com/try/runcode.php?filename=helloworld&type=bash) to check, don't test it in the real `ipv6` env
   `
   #!/bin/bash
   export clientPortAndAddress='[127::1]:2181'
   export clientPortAndAddress='192.168.10.66:2181'
   export clientPortAndAddress='[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:2181'
   export clientPortAndAddress='[2000:0:0:0:1:2345:6789:abcd]:2181'
   export clientPortAndAddress='[0:0:0:0:0:0:0:1]:2181'
   export clientPortAndAddress='0:0:0:0:0:0:0:1:2181'
   export clientPortAndAddress='[0:0:0:0:0:0:0:1]:2181'
   export clientPortAndAddress='[::1]:2181'
   export clientPortAndAddress='[::]:2181'
   
   // the shell logic the patch provided 
   
   echo $clientPortAddress
   echo $clientPort
   `


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Jul/20 11:07;githubbot;600","eolivelli closed pull request #1395:
URL: https://github.com/apache/zookeeper/pull/1395


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 17:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jul 29 10:32:15 UTC 2020,,,,,,,,,,"0|z0gfe0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Jul/20 10:32;eolivelli;Issue resolved by pull request 1395
[https://github.com/apache/zookeeper/pull/1395];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix backward-compatibility for ZooKeeperServer constructor,ZOOKEEPER-3865,13311662,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,symat,symat,symat,16/Jun/20 08:39,10/Sep/20 10:43,13/Jul/23 09:08,19/Jun/20 07:55,,,,,,,,,,3.5.9,3.6.2,3.7.0,,,,,,,0,,,The current branch-3.5 can not be used to build Curator 4.3. In the fix of ZOOKEEPER-3829 I accidentally changed a public constructor of ZooKeeper server. I didn’t realize Curator is using it for testing (and maybe other Apache projects are doing so as well).,,eolivelli,symat,,,,,,,,,,,,,,,,,,"symat opened a new pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382


   In the fix of ZOOKEEPER-3829 I accidentally changed a public constructor of ZooKeeper server. I didn’t realize Curator is using it for testing (and maybe other Apache projects are doing so as well). 
   
   In this PR I restore the original constructor for master and branch-3.6.
   
   For branch-3.5 I will submit an other PR, that will make it compatible with e.g. Curator 4.3.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 08:53;githubbot;600","eolivelli commented on pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382#issuecomment-644644662


   merging as soon as CI is green.
   I will cherry pick to branch-3.6 and branch-3.5


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 09:19;githubbot;600","symat opened a new pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383


   In the fix of ZOOKEEPER-3829 I accidentally changed a public constructor of ZooKeeper server. I didn’t realize Curator is using it for testing (and maybe other Apache projects are doing so as well). 
   
   In this PR I restore the original constructor for branch-3.5 making it compatible with e.g. Curator 4.3.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 09:20;githubbot;600","symat commented on pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382#issuecomment-644646647


   thanks for the quick review! please merge this only to master and branch-3.6
   
   for branch-3.5 I created https://github.com/apache/zookeeper/pull/1383


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 09:23;githubbot;600","symat commented on pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382#issuecomment-644678567


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 10:28;githubbot;600","symat commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-644679083


   retest ant build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 10:29;githubbot;600","symat commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-644698293


   I see the ant job fails again around the C client build, without an obvious error message. I've seen this before... Anyway, it shouldn't be related to the PR I think.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 11:13;githubbot;600","symat commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-644723714


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jun/20 12:12;githubbot;600","symat commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-645823643


   retest ant build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jun/20 07:06;githubbot;600","symat commented on pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382#issuecomment-646493194


   @eolivelli do you have time to merge this? (and #1383)
   I'm happy to do it if you don't have free cycles... 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/20 07:48;githubbot;600","eolivelli closed pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/20 07:55;githubbot;600","eolivelli commented on pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382#issuecomment-646496584


   done,
   thanks for the reminder


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/20 07:56;githubbot;600","symat commented on pull request #1382:
URL: https://github.com/apache/zookeeper/pull/1382#issuecomment-646497534


   thanks! :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/20 07:58;githubbot;600","symat commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-647628228


   @eolivelli do you think we can merge this? Only the ant job failed with some unrelated problems (and also the change is pretty harmless). I'm happy to merge if you agree but don't have the time. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/20 16:24;githubbot;600","eolivelli commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-647647973


   I can merge it tomorrow


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/20 17:00;githubbot;600","eolivelli commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-648038812


   merging


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 09:56;githubbot;600","eolivelli commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-648039742


   pushed to branch-3.5
   @symat please update JIRA accordingly


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 09:58;githubbot;600","eolivelli closed pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 09:58;githubbot;600","symat commented on pull request #1383:
URL: https://github.com/apache/zookeeper/pull/1383#issuecomment-648058041


   thanks!!
   I updated the Jira


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 10:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,11400,,,0,11400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jun 19 07:55:50 UTC 2020,,,,,,,,,,"0|z0fvzc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Jun/20 07:55;eolivelli;Issue resolved by pull request 1382
[https://github.com/apache/zookeeper/pull/1382];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Do not track global sessions in ReadOnlyZooKeeperServer,ZOOKEEPER-3863,13311578,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,jiehuangjie,jiehuangjie,jiehuangjie,15/Jun/20 23:19,28/Mar/21 08:55,13/Jul/23 09:08,17/Sep/20 05:36,,,,,,,,,,3.7.0,,,,,server,,,,0,,,"ReadOnlyZooKeeperServer is using the default SessionTrackerImpl, which tracks and expires the global sessions, which should be tracked and expired only by the leader. This diff changes the code to use LearnerSessionTracker, which only tracks and expires local session.",,eolivelli,hanm,jiehuangjie,kezhuw,,,,,,,,,,,,,,,,"jhuan31 opened a new pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Jun/20 23:28;githubbot;600","jhuan31 commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-647921220


   This PR now includes ZOOKEEPER-3863 and ZOOKEEPER-3864 and updated unit tests.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 05:42;githubbot;600","jhuan31 closed pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 18:54;githubbot;600","jhuan31 opened a new pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 18:54;githubbot;600","jhuan31 commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-648357556


   can't figure out what's wrong with the build. The only msg is ""An error occurred while generating the build script.""


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jun/20 19:03;githubbot;600","hanm commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-648551971


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/20 02:57;githubbot;600","hanm commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-648988122


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/20 18:23;githubbot;600","eolivelli commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-648994569


   I have triggered Travis


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/20 18:36;githubbot;600","hanm commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-649109265


   Making good progress now, with Travis green :)
   
   Jenkins is consistently failing with C client read-only tests:
   
   `[exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/tests/TestReadOnlyClient.cc:100: Assertion: equality assertion failed [Expected: 0, Actual  : -7]
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/tests/TestReadOnlyClient.cc:100: Assertion: equality assertion failed [Expected: 0, Actual  : -7]
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/tests/TestSASLAuth.cc:214: Assertion: assertion failed [Expression: ctx.waitForConnected(zk)]
        [exec] Failures !!!
        [exec] Run: 88   Failure total: 3   Failures: 3   Errors: 0`
   
   @jhuan31 I think we  need update C read only test similar like we did for Java test to explicit set/enable local session in test, because we are now rejecting global session for read only servers.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/20 22:37;githubbot;600","hanm commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-649112792


   I did a super quick look on the C test, looks like no easy way to programmatically enable local session on the `ZooKeeperQuorumServer`. One approach is to create a read only test specific zoo.cfg and enable local session in the config file, instead of doing it programmatically. 
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/20 22:48;githubbot;600","wyp12 commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-650725036


   test


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/20 09:35;githubbot;600","wyp12 removed a comment on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-650725036


   test


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/20 09:35;githubbot;600","jhuan31 commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-652492740


   ah, didn't know that C test needs to be updated too. taking a look.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jul/20 15:37;githubbot;600","hanm commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-691722787


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/20 20:44;githubbot;600","hanm commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-692988420


   @jhuan31 The latest pre-merge job pass - looks like we don't have any issues on C client side. I also verified this pull request locally (CentOS) and all C client test pass. Not sure why the previous pre-merge job gives specific errors on read-only related test failures.
   
   @eolivelli  Since we have a green build (pre-merge) now, should we commit this change? Both of us is +1 on this. I hope I can trigger a JenkinsMaven build for this but I don't know how - a green pre-merge build seems enough.
   
   This will be a very valuable additions to ZooKeeper as it fixes ReadOnly mode, which is super useful for service discovery use cases.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Sep/20 21:26;githubbot;600","eolivelli commented on pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380#issuecomment-693173952


   @hanm yes we can commit it
   I will take care of that today


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/20 05:11;githubbot;600","eolivelli closed pull request #1380:
URL: https://github.com/apache/zookeeper/pull/1380


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 05:35;githubbot;600","eolivelli commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694173160


   @TisonKun I have restarted the build
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1459/3/pipeline


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:36;githubbot;600","eolivelli closed pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:42;githubbot;600","eolivelli commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694176372


   Locally master branch wasn't able to compile.
   I have merged this patch, no more issues.
   
   It is very weird that it looks like Jenkins didn't build the PR but the master branch
   
   @anmolnar  do you have any clue ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:43;githubbot;600","eolivelli commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694176700


   ```
   sing credential 683f5dcf-5552-4b28-9fb1-6a6b77cf53dd
   
   Cloning the remote Git repository
   
   Cloning with configured refspecs honoured and without tags
   
   Cloning repository https://github.com/apache/zookeeper.git
   
    > git init /home/jenkins/jenkins-home/workspace/eper-precommit-github-pr_PR-1459 # timeout=10
   
   Fetching upstream changes from https://github.com/apache/zookeeper.git
   
    > git --version # timeout=10
   
   using GIT_ASKPASS to set credentials ASF Cloudbees Jenkins ci-hadoop
   
    > git fetch --no-tags --progress -- https://github.com/apache/zookeeper.git +refs/pull/1459/head:refs/remotes/origin/PR-1459 +refs/heads/master:refs/remotes/origin/master # timeout=10
   
    > git config remote.origin.url https://github.com/apache/zookeeper.git # timeout=10
   
    > git config --add remote.origin.fetch +refs/pull/1459/head:refs/remotes/origin/PR-1459 # timeout=10
   
    > git config --add remote.origin.fetch +refs/heads/master:refs/remotes/origin/master # timeout=10
   
   Fetching without tags
   
   Merging remotes/origin/master commit c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 into PR head commit d33e75c97b0bf6729f4c3a67416f1a201ad31824
   
   Merge succeeded, producing d33e75c97b0bf6729f4c3a67416f1a201ad31824
   
   Checking out Revision d33e75c97b0bf6729f4c3a67416f1a201ad31824 (PR-1459)
   
    > git config remote.origin.url https://github.com/apache/zookeeper.git # timeout=10
   
   Fetching upstream changes from https://github.com/apache/zookeeper.git
   
   using GIT_ASKPASS to set credentials ASF Cloudbees Jenkins ci-hadoop
   
    > git fetch --no-tags --progress -- https://github.com/apache/zookeeper.git +refs/pull/1459/head:refs/remotes/origin/PR-1459 +refs/heads/master:refs/remotes/origin/master # timeout=10
   
    > git config core.sparsecheckout # timeout=10
   
    > git checkout -f d33e75c97b0bf6729f4c3a67416f1a201ad31824 # timeout=10
   
    > git merge c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   
    > git rev-parse HEAD^{commit} # timeout=10
   
    > git config core.sparsecheckout # timeout=10
   
    > git checkout -f d33e75c97b0bf6729f4c3a67416f1a201ad31824 # timeout=10
   
   Commit message: ""ZOOKEEPER-3863: correct junit test timeout""
   
    > git rev-list --no-walk d33e75c97b0bf6729f4c3a67416f1a201ad31824 # timeout=10
   ```


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:44;githubbot;600","eolivelli commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694177145


   Then jenkins checks out again current master !
   
   ```
   
   [2020-09-17T11:36:02.742Z] No credentials specified
   
   [2020-09-17T11:36:02.816Z] Fetching changes from the remote Git repository
   
   [2020-09-17T11:36:02.805Z]  > git rev-parse --is-inside-work-tree # timeout=10
   
   [2020-09-17T11:36:02.879Z]  > git config remote.origin.url https://github.com/apache/zookeeper # timeout=10
   
   [2020-09-17T11:36:02.953Z] Fetching upstream changes from https://github.com/apache/zookeeper
   
   [2020-09-17T11:36:02.953Z]  > git --version # timeout=10
   
   [2020-09-17T11:36:02.957Z]  > git fetch --tags --progress -- https://github.com/apache/zookeeper +refs/heads/*:refs/remotes/origin/* # timeout=10
   
   [2020-09-17T11:36:10.782Z]  > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
   
   [2020-09-17T11:36:10.870Z] Checking out Revision c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 (refs/remotes/origin/master)
   
   [2020-09-17T11:36:11.158Z] Commit message: ""ZOOKEEPER-3863: Do not track global sessions in ReadOnlyZooKeeperServer""
   
   [2020-09-17T11:36:10.856Z]  > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
   
   [2020-09-17T11:36:10.999Z]  > git config core.sparsecheckout # timeout=10
   
   [2020-09-17T11:36:11.003Z]  > git checkout -f c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   
   [2020-09-17T11:36:11.033Z]  > git branch -a -v --no-abbrev # timeout=10
   
   [2020-09-17T11:36:11.044Z]  > git checkout -b master c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   
   [2020-09-17T11:36:11.221Z]  > git rev-list --no-walk c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   
   
   ```


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:45;githubbot;600","LiYvbo commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694178364


   > Then jenkins checks out again current master !
   > 
   > ```
   > 
   > [2020-09-17T11:36:02.742Z] No credentials specified
   > 
   > [2020-09-17T11:36:02.816Z] Fetching changes from the remote Git repository
   > 
   > [2020-09-17T11:36:02.805Z]  > git rev-parse --is-inside-work-tree # timeout=10
   > 
   > [2020-09-17T11:36:02.879Z]  > git config remote.origin.url https://github.com/apache/zookeeper # timeout=10
   > 
   > [2020-09-17T11:36:02.953Z] Fetching upstream changes from https://github.com/apache/zookeeper
   > 
   > [2020-09-17T11:36:02.953Z]  > git --version # timeout=10
   > 
   > [2020-09-17T11:36:02.957Z]  > git fetch --tags --progress -- https://github.com/apache/zookeeper +refs/heads/*:refs/remotes/origin/* # timeout=10
   > 
   > [2020-09-17T11:36:10.782Z]  > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
   > 
   > [2020-09-17T11:36:10.870Z] Checking out Revision c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 (refs/remotes/origin/master)
   > 
   > [2020-09-17T11:36:11.158Z] Commit message: ""ZOOKEEPER-3863: Do not track global sessions in ReadOnlyZooKeeperServer""
   > 
   > [2020-09-17T11:36:10.856Z]  > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
   > 
   > [2020-09-17T11:36:10.999Z]  > git config core.sparsecheckout # timeout=10
   > 
   > [2020-09-17T11:36:11.003Z]  > git checkout -f c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   > 
   > [2020-09-17T11:36:11.033Z]  > git branch -a -v --no-abbrev # timeout=10
   > 
   > [2020-09-17T11:36:11.044Z]  > git checkout -b master c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   > 
   > [2020-09-17T11:36:11.221Z]  > git rev-list --no-walk c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   > ```
   
   can you please restart CI check for me in this PR? The failure was caused by the same reason..


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:48;githubbot;600","LiYvbo edited a comment on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694178364


   > Then jenkins checks out again current master !
   > 
   > ```
   > 
   > [2020-09-17T11:36:02.742Z] No credentials specified
   > 
   > [2020-09-17T11:36:02.816Z] Fetching changes from the remote Git repository
   > 
   > [2020-09-17T11:36:02.805Z]  > git rev-parse --is-inside-work-tree # timeout=10
   > 
   > [2020-09-17T11:36:02.879Z]  > git config remote.origin.url https://github.com/apache/zookeeper # timeout=10
   > 
   > [2020-09-17T11:36:02.953Z] Fetching upstream changes from https://github.com/apache/zookeeper
   > 
   > [2020-09-17T11:36:02.953Z]  > git --version # timeout=10
   > 
   > [2020-09-17T11:36:02.957Z]  > git fetch --tags --progress -- https://github.com/apache/zookeeper +refs/heads/*:refs/remotes/origin/* # timeout=10
   > 
   > [2020-09-17T11:36:10.782Z]  > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
   > 
   > [2020-09-17T11:36:10.870Z] Checking out Revision c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 (refs/remotes/origin/master)
   > 
   > [2020-09-17T11:36:11.158Z] Commit message: ""ZOOKEEPER-3863: Do not track global sessions in ReadOnlyZooKeeperServer""
   > 
   > [2020-09-17T11:36:10.856Z]  > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
   > 
   > [2020-09-17T11:36:10.999Z]  > git config core.sparsecheckout # timeout=10
   > 
   > [2020-09-17T11:36:11.003Z]  > git checkout -f c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   > 
   > [2020-09-17T11:36:11.033Z]  > git branch -a -v --no-abbrev # timeout=10
   > 
   > [2020-09-17T11:36:11.044Z]  > git checkout -b master c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   > 
   > [2020-09-17T11:36:11.221Z]  > git rev-list --no-walk c47ef905e077184bc5b7f555a3e2dfeb6dc046e1 # timeout=10
   > ```
   
   can you please restart CI check for me in this PR? The failure was caused by the same reason..  @eolivelli 
   
   https://github.com/apache/zookeeper/pull/1458


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:49;githubbot;600","eolivelli commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694179507


   Yes,
   here it is a proposal of fix
   https://github.com/apache/zookeeper/pull/1460
   
   I have sent an email message to dev@zookeeper.apache.org


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 11:51;githubbot;600","LiYvbo commented on pull request #1459:
URL: https://github.com/apache/zookeeper/pull/1459#issuecomment-694191416


   > Yes,
   > here it is a proposal of fix
   > #1460
   > 
   > I have sent an email message to [dev@zookeeper.apache.org](mailto:dev@zookeeper.apache.org)
   
   Thanks! @eolivelli  
   After building, please make a review for PR https://github.com/apache/zookeeper/pull/1458. It is the same with PR https://github.com/apache/zookeeper/pull/1454. I add a Jira for this PR1458 to track the improvement.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/20 12:16;githubbot;600","hanm opened a new pull request #1462:
URL: https://github.com/apache/zookeeper/pull/1462


   Problem
   
   ZOOKEEPER-3863 requires local session to be enabled for read only server to work. When merge ZOOKEEPER-3863 (in c47ef905e077184bc5b7f555a3e2dfeb6dc046e1), we only updated Java tests, and missed C tests. As a result, Jenkins build is broken.
   
   Solution
   
   Enable local session for C client tests.
   
   Notes
   This was not caught by Jenkins when we merge ZOOKEEPER-3863 because previous Jenkins was testing master branch (as discussed in https://github.com/apache/zookeeper/pull/1460). 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/20 05:13;githubbot;600","asfgit closed pull request #1462:
URL: https://github.com/apache/zookeeper/pull/1462


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/20 15:53;githubbot;600","asfgit closed pull request #1462:
URL: https://github.com/apache/zookeeper/pull/1462


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Sep/20 03:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,17400,,,0,17400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 17 05:36:05 UTC 2020,,,,,,,,,,"0|z0fvhc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"17/Sep/20 05:36;eolivelli;committed to master branch! it will be available from 3.7.0 onwards

thank you [~jiehuangjie];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper 3.6 doesn't build after Curator test committed,ZOOKEEPER-3857,13310690,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,tamaas,tamaas,tamaas,10/Jun/20 15:19,10/Sep/20 10:43,13/Jul/23 09:08,10/Jun/20 16:07,3.6.2,,,,,,,,,3.6.2,,,,,,,,,0,,,Since the parent pom's version was forgotten to be synchronized when the cherry-pick got done the branch-3.6 doesn't build at the moment.,,symat,tamaas,,,,,,,,,,,,,,,,,,"tamaashu opened a new pull request #1377:
URL: https://github.com/apache/zookeeper/pull/1377


   … committed
   
   Updated version number in two pom.xml files.
   
   Change-Id: I71194499cac0275eb6068a9adee8920b3eeb8b11


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/20 15:23;githubbot;600","symat commented on pull request #1377:
URL: https://github.com/apache/zookeeper/pull/1377#issuecomment-642084990


   sorry, I was the one who cherry-picked the original commit to branch-3.6. I even compiled the code, but I guess the new module with version 3.7-SNAPSHOT was already in my local maven cache, so the build haven't failed for me.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/20 15:28;githubbot;600","symat closed pull request #1377:
URL: https://github.com/apache/zookeeper/pull/1377


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/20 17:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 10 16:07:17 UTC 2020,,,,,,,,,,"0|z0fq0o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Jun/20 16:07;symat;Issue resolved by pull request 1377
[https://github.com/apache/zookeeper/pull/1377];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZKHostnameVerifier rejects valid certificates with subjectAltNames,ZOOKEEPER-3832,13305675,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,andor,andor,18/May/20 13:09,10/Sep/20 10:43,13/Jul/23 09:08,21/May/20 12:15,3.5.8,3.6.1,,,,,,,,3.5.9,3.6.2,3.7.0,,,server,,,,0,,,"This is the same issue as reported in

https://issues.apache.org/jira/browse/HTTPCLIENT-1906

For performance reasons we use a copy-and-pasted version of the HostnameVerifier, as a consequence we don't pick up these fixes automatically.

 ",,andor,eolivelli,,,,,,,,,,,,,,,,,,"anmolnar opened a new pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353


   This issue has been reported by a user who wanted to use a cert that contains SAN entries that are not of type DNS or IP.
   I've come across the following ticket in http client project which seems to be related:
   https://issues.apache.org/jira/browse/HTTPCLIENT-1906
   
   This is the backport of the fix.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/May/20 14:16;githubbot;600","symat commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427058447



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java
##########
@@ -324,8 +324,14 @@ private static HostNameType determineHostFormat(final String host) {
             for (List<?> entry : entries) {
                 final Integer type = entry.size() >= 2 ? (Integer) entry.get(0) : null;
                 if (type != null) {
-                    final String s = (String) entry.get(1);
-                    result.add(new SubjectName(s, type));
+                    if (type == SubjectName.DNS || type == SubjectName.IP) {
+                        final Object o = entry.get(1);
+                        if (o instanceof String) {
+                            result.add(new SubjectName((String) o, type));
+                        } else if (o instanceof byte[]) {
+                            // TODO ASN.1 DER encoded form

Review comment:
       I am not sure what ASN.1 DER is or how commonly it is used, but I think at least printing out a warning here would make sense (informing the user that ASN.1 DER is not supported). (?)

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKHostnameVerifierTest.java
##########
@@ -0,0 +1,158 @@
+/**

Review comment:
       this is a great test to have, thanks!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 06:30;githubbot;600","eolivelli commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427061522



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith.java
##########
@@ -0,0 +1,569 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+/**
+ * Some X509 certificates to test against.
+ * <p>
+ * Note:  some of these certificates have Japanese Kanji in the ""subjectAlt""
+ * field (UTF8).  Not sure how realistic that is since international characters
+ * in DNS names usually get translated into ASCII using ""xn--"" style DNS
+ * entries.  ""xn--i8s592g.co.jp"" is what FireFox actually uses when trying to
+ * find &#x82b1;&#x5b50;.co.jp.  So would the CN in the certificate contain
+ * ""xn--i8s592g.co.jp"" in ASCII, or ""&#x82b1;&#x5b50;.co.jp"" in UTF8?  (Both?)
+ * </p>
+ *
+ * @since 11-Dec-2006

Review comment:
       Do we have to cite the source of this code ?
   Or did you create this file by yourself ?
   
   If it is not from an ASF project we have to add some line in NOTICE file




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 06:36;githubbot;600","anmolnar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427114702



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith.java
##########
@@ -0,0 +1,569 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+/**
+ * Some X509 certificates to test against.
+ * <p>
+ * Note:  some of these certificates have Japanese Kanji in the ""subjectAlt""
+ * field (UTF8).  Not sure how realistic that is since international characters
+ * in DNS names usually get translated into ASCII using ""xn--"" style DNS
+ * entries.  ""xn--i8s592g.co.jp"" is what FireFox actually uses when trying to
+ * find &#x82b1;&#x5b50;.co.jp.  So would the CN in the certificate contain
+ * ""xn--i8s592g.co.jp"" in ASCII, or ""&#x82b1;&#x5b50;.co.jp"" in UTF8?  (Both?)
+ * </p>
+ *
+ * @since 11-Dec-2006

Review comment:
       Tests and test resources (this file) have been copied from ASF project http client. Name of the project is Apache HttpComponents: https://hc.apache.org/
   What do I need to add exactly?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 08:17;githubbot;600","anmolnar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427121077



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java
##########
@@ -324,8 +324,14 @@ private static HostNameType determineHostFormat(final String host) {
             for (List<?> entry : entries) {
                 final Integer type = entry.size() >= 2 ? (Integer) entry.get(0) : null;
                 if (type != null) {
-                    final String s = (String) entry.get(1);
-                    result.add(new SubjectName(s, type));
+                    if (type == SubjectName.DNS || type == SubjectName.IP) {
+                        final Object o = entry.get(1);
+                        if (o instanceof String) {
+                            result.add(new SubjectName((String) o, type));
+                        } else if (o instanceof byte[]) {
+                            // TODO ASN.1 DER encoded form

Review comment:
       I believe it can be done with BouncyCastle ASN1 libraries, but this part was missing in the original patch too. I'd be happy to add it as a separate ticket, but first I need an example certificate with ASN1 encoded data.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 08:27;githubbot;600","nkalmar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427156834



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith.java
##########
@@ -0,0 +1,569 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+/**
+ * Some X509 certificates to test against.
+ * <p>
+ * Note:  some of these certificates have Japanese Kanji in the ""subjectAlt""
+ * field (UTF8).  Not sure how realistic that is since international characters
+ * in DNS names usually get translated into ASCII using ""xn--"" style DNS
+ * entries.  ""xn--i8s592g.co.jp"" is what FireFox actually uses when trying to
+ * find &#x82b1;&#x5b50;.co.jp.  So would the CN in the certificate contain
+ * ""xn--i8s592g.co.jp"" in ASCII, or ""&#x82b1;&#x5b50;.co.jp"" in UTF8?  (Both?)
+ * </p>
+ *
+ * @since 11-Dec-2006

Review comment:
       AFAIK (and Enrico's question also applies this) if it's from another Apache project, the Apache license header is enough.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 09:21;githubbot;600","nkalmar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427158878



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith.java
##########
@@ -0,0 +1,569 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+/**
+ * Some X509 certificates to test against.
+ * <p>
+ * Note:  some of these certificates have Japanese Kanji in the ""subjectAlt""
+ * field (UTF8).  Not sure how realistic that is since international characters
+ * in DNS names usually get translated into ASCII using ""xn--"" style DNS
+ * entries.  ""xn--i8s592g.co.jp"" is what FireFox actually uses when trying to
+ * find &#x82b1;&#x5b50;.co.jp.  So would the CN in the certificate contain
+ * ""xn--i8s592g.co.jp"" in ASCII, or ""&#x82b1;&#x5b50;.co.jp"" in UTF8?  (Both?)
+ * </p>
+ *
+ * @since 11-Dec-2006

Review comment:
       Just checked JVMPauseMonitor out of curiosity. I got that class from hadoop, but modified it. I do have a comment indicating the original source. Maybe adding something similar?
   https://github.com/apache/zookeeper/blob/fe940cdd8fb23ba09684cefb73233d570f4a20fa/zookeeper-server/src/main/java/org/apache/zookeeper/server/util/JvmPauseMonitor.java




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 09:25;githubbot;600","nkalmar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427161374



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java
##########
@@ -324,8 +324,14 @@ private static HostNameType determineHostFormat(final String host) {
             for (List<?> entry : entries) {
                 final Integer type = entry.size() >= 2 ? (Integer) entry.get(0) : null;
                 if (type != null) {
-                    final String s = (String) entry.get(1);
-                    result.add(new SubjectName(s, type));
+                    if (type == SubjectName.DNS || type == SubjectName.IP) {
+                        final Object o = entry.get(1);
+                        if (o instanceof String) {
+                            result.add(new SubjectName((String) o, type));
+                        } else if (o instanceof byte[]) {
+                            // TODO ASN.1 DER encoded form

Review comment:
       I agree with Mate here, probably adding a warning until this TODO is not implemented would be nice.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 09:29;githubbot;600","eolivelli commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427181922



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith.java
##########
@@ -0,0 +1,569 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+/**
+ * Some X509 certificates to test against.
+ * <p>
+ * Note:  some of these certificates have Japanese Kanji in the ""subjectAlt""
+ * field (UTF8).  Not sure how realistic that is since international characters
+ * in DNS names usually get translated into ASCII using ""xn--"" style DNS
+ * entries.  ""xn--i8s592g.co.jp"" is what FireFox actually uses when trying to
+ * find &#x82b1;&#x5b50;.co.jp.  So would the CN in the certificate contain
+ * ""xn--i8s592g.co.jp"" in ASCII, or ""&#x82b1;&#x5b50;.co.jp"" in UTF8?  (Both?)
+ * </p>
+ *
+ * @since 11-Dec-2006

Review comment:
       I would just write something like
   ""These test case have been taken from the Apache HttpComponents project.""
   Nothing more.
   It is just a test resource (but we are going to ""release it"", in the source release)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 10:02;githubbot;600","anmolnar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427381887



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/CertificatesToPlayWith.java
##########
@@ -0,0 +1,569 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+/**
+ * Some X509 certificates to test against.
+ * <p>
+ * Note:  some of these certificates have Japanese Kanji in the ""subjectAlt""
+ * field (UTF8).  Not sure how realistic that is since international characters
+ * in DNS names usually get translated into ASCII using ""xn--"" style DNS
+ * entries.  ""xn--i8s592g.co.jp"" is what FireFox actually uses when trying to
+ * find &#x82b1;&#x5b50;.co.jp.  So would the CN in the certificate contain
+ * ""xn--i8s592g.co.jp"" in ASCII, or ""&#x82b1;&#x5b50;.co.jp"" in UTF8?  (Both?)
+ * </p>
+ *
+ * @since 11-Dec-2006

Review comment:
       Sure. Thanks.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 15:12;githubbot;600","anmolnar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r427890631



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java
##########
@@ -324,8 +324,14 @@ private static HostNameType determineHostFormat(final String host) {
             for (List<?> entry : entries) {
                 final Integer type = entry.size() >= 2 ? (Integer) entry.get(0) : null;
                 if (type != null) {
-                    final String s = (String) entry.get(1);
-                    result.add(new SubjectName(s, type));
+                    if (type == SubjectName.DNS || type == SubjectName.IP) {
+                        final Object o = entry.get(1);
+                        if (o instanceof String) {
+                            result.add(new SubjectName((String) o, type));
+                        } else if (o instanceof byte[]) {
+                            // TODO ASN.1 DER encoded form

Review comment:
       This is a static method. How can I log here?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 10:02;githubbot;600","anmolnar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-631399989


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 10:50;githubbot;600","nkalmar commented on a change in pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#discussion_r428029871



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java
##########
@@ -324,8 +324,14 @@ private static HostNameType determineHostFormat(final String host) {
             for (List<?> entry : entries) {
                 final Integer type = entry.size() >= 2 ? (Integer) entry.get(0) : null;
                 if (type != null) {
-                    final String s = (String) entry.get(1);
-                    result.add(new SubjectName(s, type));
+                    if (type == SubjectName.DNS || type == SubjectName.IP) {
+                        final Object o = entry.get(1);
+                        if (o instanceof String) {
+                            result.add(new SubjectName((String) o, type));
+                        } else if (o instanceof byte[]) {
+                            // TODO ASN.1 DER encoded form

Review comment:
       Didn't see it's a static method. But I believe you can log by making the logger also static. Not sure it is worth it though, it's not a stopper from my side if we leave the TODO, just a nice-to-have.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 13:53;githubbot;600","anmolnar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-631506123


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 14:23;githubbot;600","anmolnar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632019076


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 10:50;githubbot;600","anmolnar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632045363


   @eolivelli @nkalmar @symat Maven build is green now. Would you like me to add some logging before submitting?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 11:54;githubbot;600","symat commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632051171


   I think you can push it as it is. Nice change!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:08;githubbot;600","eolivelli commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632052417


   Merging it now


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:12;githubbot;600","eolivelli closed pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:14;githubbot;600","anmolnar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632055492


   Thanks @eolivelli Would you please cherry pick to 3.5 and 3.6?
   I added to the description: ""Target versions: 3.5, 3.6, 3.7""


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:20;githubbot;600","anmolnar edited a comment on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632055492


   Thanks @eolivelli 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:21;githubbot;600","eolivelli commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632055889


   I have written in JIRA.
   Committed to master and 3.6.
   It does not apply to 3.5 cleanly


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:21;githubbot;600","anmolnar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632055998


   I'll create separate PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:22;githubbot;600","anmolnar opened a new pull request #1364:
URL: https://github.com/apache/zookeeper/pull/1364


   Backport to 3.5
   
   This issue has been reported by a user who wanted to use a cert that contains SAN entries that are not of type DNS or IP.
   I've come across the following ticket in http client project which seems to be related:
   https://issues.apache.org/jira/browse/HTTPCLIENT-1906
   
   This is the backport of the fix.
   
   Original patch: https://github.com/apache/httpcomponents-client/commit/56cc24525e5ba2a5ef8fa0de2385687e83589a71
   
   Target versions: 3.5, 3.6, 3.7
   
   Author: Andor Molnar <andor@apache.org>
   
   Reviewers: Enrico Olivelli <eolivelli@apache.org>, Mate Szalay-Beko <symat@apache.org>
   
   Closes #1353 from anmolnar/ZOOKEEPER-3832


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 12:33;githubbot;600","nkalmar commented on pull request #1353:
URL: https://github.com/apache/zookeeper/pull/1353#issuecomment-632078228


   NVM, it's already committed :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 13:13;githubbot;600","eolivelli edited a comment on pull request #1364:
URL: https://github.com/apache/zookeeper/pull/1364#issuecomment-632164874


   Please merge. I can't do it now


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:40;githubbot;600","eolivelli commented on pull request #1364:
URL: https://github.com/apache/zookeeper/pull/1364#issuecomment-632164874


   Please merge. I can't do it know


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:40;githubbot;600","symat commented on pull request #1364:
URL: https://github.com/apache/zookeeper/pull/1364#issuecomment-632165452


   I'll merge it now


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:42;githubbot;600","symat commented on pull request #1364:
URL: https://github.com/apache/zookeeper/pull/1364#issuecomment-632170018


   merge done, I also updated the ""fixed versions"" on the Jira ticket.
   Thanks Andor for the patch!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:50;githubbot;600","symat closed pull request #1364:
URL: https://github.com/apache/zookeeper/pull/1364


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,18000,,,0,18000,,,,,,,,,,,,,,,,,HTTPCLIENT-1906,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 21 12:15:25 UTC 2020,,,,,,,,,,"0|z0ev5c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/May/20 12:15;eolivelli;committed to master and 3.6.
thank you [~andor] !

The patch does not apply to 3.5
Please send a new PR if you want this change on 3.5

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper refuses request after node expansion,ZOOKEEPER-3829,13305094,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,sundyli,sundyli,15/May/20 03:12,10/Sep/20 10:43,13/Jul/23 09:08,03/Jun/20 07:59,3.5.8,3.6.1,,,,,,,,3.5.9,3.6.2,3.7.0,,,server,,,,1,,,"It's easy to reproduce this bug.
{code:java}
//代码占位符
 
Step 1. Deploy 3 nodes  A,B,C with configuration A,B,C .
Step 2. Deploy node ` D` with configuration  `A,B,C,D` , cluster state is ok now.
Step 3. Restart nodes A,B,C with configuration A,B,C,D, then the leader will be D, cluster hangs, but it can accept `mntr` command, other command like `ls /` will be blocked.

Step 4. Restart nodes D, cluster state is back to normal now.
 
{code}
 

We have looked into the code of 3.5.6 version, and we found it may be the issue of  `workerPool` .

The `CommitProcessor` shutdown and make `workerPool` shutdown, but `workerPool` still exists. It will never work anymore, yet the cluster still thinks it's ok.

 

I think the bug may still exist in master branch.

We have tested it in our machines by reset the `workerPool` to null. If it's ok, please assign this issue to me, and then I'll create a PR. 

 

 

 ",,eolivelli,hanm,keliwang,nkalmar,roncenzhao,sundyli,symat,,,,,,,,,,,,,"symat opened a new pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356


   In three different Jira tickets (ZOOKEEPER-3829, ZOOKEEPER-3830, ZOOKEEPER-3814) we saw backward-compatibility issues when rolling restart was used to change the quorum membership configuration without having dynamic reconfig enabled. In worst case it lead to the scenario that we had an elected leader which was up but unable to commit any changes.
   
   In this fix I try to fix these issues without breaking anything. I also add a few more unit tests to cover these scenarios.
   
   Note: this is still WIP. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 08:20;githubbot;600","eolivelli commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r427192704



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -1508,20 +1510,25 @@ private synchronized void startZkServer() {
                  newLeaderProposal.ackSetsToString(),
                  Long.toHexString(zk.getZxid()));
 
-        /*
-         * ZOOKEEPER-1324. the leader sends the new config it must complete
-         *  to others inside a NEWLEADER message (see LearnerHandler where
-         *  the NEWLEADER message is constructed), and once it has enough
-         *  acks we must execute the following code so that it applies the
-         *  config to itself.
-         */
-        QuorumVerifier newQV = self.getLastSeenQuorumVerifier();
+        if (QuorumPeerConfig.isReconfigEnabled()) {
+            /*
+             * ZOOKEEPER-1324. the leader sends the new config it must complete
+             *  to others inside a NEWLEADER message (see LearnerHandler where
+             *  the NEWLEADER message is constructed), and once it has enough
+             *  acks we must execute the following code so that it applies the
+             *  config to itself.
+             */
+            QuorumVerifier newQV = self.getLastSeenQuorumVerifier();
 
-        Long designatedLeader = getDesignatedLeader(newLeaderProposal, zk.getZxid());
+            Long designatedLeader = getDesignatedLeader(newLeaderProposal, zk.getZxid());
 
-        self.processReconfig(newQV, designatedLeader, zk.getZxid(), true);
-        if (designatedLeader != self.getId()) {
-            allowedToCommit = false;
+            self.processReconfig(newQV, designatedLeader, zk.getZxid(), true);
+            if (designatedLeader != self.getId()) {
+                LOG.warn(""This leader is not the designated leader, it will be initialized with allowedToCommit = false"");
+                allowedToCommit = false;
+            }
+        } else {
+            LOG.debug(""Reconfig feature is disabled, skip designatedLeader calculation and reconfig processing."");

Review comment:
       LOG.debug -> what about putting it as LOG.info ?
   
   In your new test cases, are you exercising this branch or the ""if QuorumPeerConfig.isReconfigEnabled()"" branch ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 10:21;githubbot;600","symat commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r427212264



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -1508,20 +1510,25 @@ private synchronized void startZkServer() {
                  newLeaderProposal.ackSetsToString(),
                  Long.toHexString(zk.getZxid()));
 
-        /*
-         * ZOOKEEPER-1324. the leader sends the new config it must complete
-         *  to others inside a NEWLEADER message (see LearnerHandler where
-         *  the NEWLEADER message is constructed), and once it has enough
-         *  acks we must execute the following code so that it applies the
-         *  config to itself.
-         */
-        QuorumVerifier newQV = self.getLastSeenQuorumVerifier();
+        if (QuorumPeerConfig.isReconfigEnabled()) {
+            /*
+             * ZOOKEEPER-1324. the leader sends the new config it must complete
+             *  to others inside a NEWLEADER message (see LearnerHandler where
+             *  the NEWLEADER message is constructed), and once it has enough
+             *  acks we must execute the following code so that it applies the
+             *  config to itself.
+             */
+            QuorumVerifier newQV = self.getLastSeenQuorumVerifier();
 
-        Long designatedLeader = getDesignatedLeader(newLeaderProposal, zk.getZxid());
+            Long designatedLeader = getDesignatedLeader(newLeaderProposal, zk.getZxid());
 
-        self.processReconfig(newQV, designatedLeader, zk.getZxid(), true);
-        if (designatedLeader != self.getId()) {
-            allowedToCommit = false;
+            self.processReconfig(newQV, designatedLeader, zk.getZxid(), true);
+            if (designatedLeader != self.getId()) {
+                LOG.warn(""This leader is not the designated leader, it will be initialized with allowedToCommit = false"");
+                allowedToCommit = false;
+            }
+        } else {
+            LOG.debug(""Reconfig feature is disabled, skip designatedLeader calculation and reconfig processing."");

Review comment:
       I agree with the LOG.info (this message will be printed only once when the leader starts to lead after an election. Yet, the message can help debugging production issues, when debug logs are disabled)
   
   The tests are simulating the ""backward compatibility"" case when `QuorumPeerConfig.isReconfigEnabled()==false`. I don't think that changing the config with rolling-restart would be advised when dynamic-reconfig is enabled. I think when the reconfig is enabled, the new config can propagate during the leader election, so the rolling-restart will be unneccessary.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 10:57;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-630747049


   @shralex , @hanm please take a look if you can!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/May/20 11:01;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-632032896


   @lvfangmin, @fpj  - I think you also might have more background knowledge around the dynamic-reconfig. Can you please take a look on this PR?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 11:24;githubbot;600","shralex commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r428720677



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -614,7 +614,7 @@ void lead() throws IOException, InterruptedException {
 
             QuorumVerifier lastSeenQV = self.getLastSeenQuorumVerifier();
             QuorumVerifier curQV = self.getQuorumVerifier();
-            if (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion()) {
+            if (!QuorumPeerConfig.isReconfigEnabled() || (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion())) {

Review comment:
       Could you explain the ""!QuorumPeerConfig.isReconfigEnabled() || "" here ? And not, e.g., ""QuorumPeerConfig.isReconfigEnabled() &&""
   
   The previous condition means this is done only when the config is an initial one. What's being done here is updating the config version to the current leader zxid. This is done only once, when the ensemble is initial.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:17;githubbot;600","symat commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r428731977



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -614,7 +614,7 @@ void lead() throws IOException, InterruptedException {
 
             QuorumVerifier lastSeenQV = self.getLastSeenQuorumVerifier();
             QuorumVerifier curQV = self.getQuorumVerifier();
-            if (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion()) {
+            if (!QuorumPeerConfig.isReconfigEnabled() || (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion())) {

Review comment:
       Thanks for checking!
   
   > What's being done here is updating the config version to the current leader zxid
   
   I added the extra condition because here also the lastSeenQuorumVerifier is set to be equal to the currentQuorumVerifyer. The problem I found in ZOOKEEPER-3814 was that old server addresses were still propagated through the lastSeenQuorumVerifier to newly restarted nodes when dynamic reconfig was disabled. So my idea was to reset the lastSeenQuorumVerifier to the current config here. Maybe a better way would be to not update lastSeenQuorumVerifier when we process the NEWLEADER message (if dynamic reconfig is disabled)? 
   
   > This is done only once, when the ensemble is initial.
   
   Isn't the config version always 0 when dynamic reconfig is disabled?
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:35;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-632163372


   well, this is a very good question. Ideally I would say it should be enabled with a rolling restart. I think this is how people do all static config changes in production if the cluster must be up all time. We definitely should create a test for this, I doubt it exists. But Maybe we can do this in an other PR / ticket.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 15:39;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-632506926


   We had some chat on slack with @shralex and I will debug where the old server's configs are propagated (last seen config or last committed config) in the case of ZOOKEEPER-3814. I will try to avoid the update of both the committed / last seen config in case of disabled dynamic reconfig. I think that will solve ZOOKEEPER-3814.
   
   I will also create (if there isn't one) a new automated test for the 'enablement of dynamic reconfig through rolling restart' to make sure we have that functionality.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/May/20 06:13;githubbot;600","symat commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r429061004



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -614,7 +614,7 @@ void lead() throws IOException, InterruptedException {
 
             QuorumVerifier lastSeenQV = self.getLastSeenQuorumVerifier();
             QuorumVerifier curQV = self.getQuorumVerifier();
-            if (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion()) {
+            if (!QuorumPeerConfig.isReconfigEnabled() || (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion())) {

Review comment:
       I think I'll revert this part of the change in the next commit.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/May/20 06:14;githubbot;600","shralex commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r430061009



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ReconfigExceptionTest.java
##########
@@ -90,6 +90,16 @@ public void tearDown() throws Exception {
     @Test(timeout = 10000)
     public void testReconfigDisabled() throws InterruptedException {
         QuorumPeerConfig.setReconfigEnabled(false);
+
+        // for thsi test we need to restart the quorum peers to get the config change,

Review comment:
       typo thsi

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java
##########
@@ -209,6 +209,237 @@ public void testRollingRestartWithMembershipChange() throws Exception {
         }
     }
 
+    @Test
+    public void testRollingRestartWithExtendedMembershipConfig() throws Exception {
+        // in this test we are performing rolling restart with extended quorum config, see ZOOKEEPER-3829
+
+        // Start a quorum with 3 members
+        int serverCount = 3;
+        String config = generateNewQuorumConfig(serverCount);
+        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];
+        List<String> joiningServers = new ArrayList<>();
+        for (int i = 0; i < serverCount; i++) {
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            joiningServers.add(serverAddress.get(i));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            verifyQuorumConfig(i, joiningServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // Create updated config with 4 members
+        List<String> newServers = new ArrayList<>(joiningServers);
+        config = updateExistingQuorumConfig(Arrays.asList(3), new ArrayList<>());
+        newServers.add(serverAddress.get(3));
+        serverCount = serverAddress.size();
+        assertEquals(""Server count should be 4 after config update."", serverCount, 4);
+
+        // We are adding one new server to the ensemble. The new server should be started with the new config
+        mt = Arrays.copyOf(mt, mt.length + 1);
+        mt[3] = new QuorumPeerTestBase.MainThread(3, clientPorts.get(3), config, false);
+        mt[3].start();
+        assertTrue(""waiting for server 3 being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(3), CONNECTION_TIMEOUT));
+        verifyQuorumConfig(3, newServers, null);
+        verifyQuorumMembers(mt[3]);
+
+        // Now we restart the first 3 servers, one-by-one with the new config
+        for (int i = 0; i < 3; i++) {
+            mt[i].shutdown();
+
+            assertTrue(String.format(""Timeout during waiting for server %d to go down"", i),
+                       ClientBase.waitForServerDown(""127.0.0.1:"" + clientPorts.get(i), ClientBase.CONNECTION_TIMEOUT));
+
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+            verifyQuorumConfig(i, newServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // now verify that all nodes can handle traffic
+        for (int i = 0; i < 4; ++i) {
+            ZooKeeper zk = ClientBase.createZKClient(""127.0.0.1:"" + clientPorts.get(i));
+            ReconfigTest.testNormalOperation(zk, zk, false);
+        }
+
+        for (int i = 0; i < 4; ++i) {
+            mt[i].shutdown();
+        }
+    }
+
+
+    @Test
+    public void testRollingRestartWithExtendedMembershipConfigRestartingLeaderFirst() throws Exception {
+        // in this test we are performing rolling restart with extended quorum config, see ZOOKEEPER-3829
+        // first we start the new nodes, then restart the current leader
+        // this is a special case, as the old servers will not be able to join to the new nodes after they became leader
+
+        // Start a quorum with 3 members
+        int serverCount = 3;
+        String config = generateNewQuorumConfig(serverCount);
+        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];
+        List<String> joiningServers = new ArrayList<>();
+        for (int i = 0; i < serverCount; i++) {
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            joiningServers.add(serverAddress.get(i));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            verifyQuorumConfig(i, joiningServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // Create updated config with 5 members
+        List<String> newServers = new ArrayList<>(joiningServers);
+        config = updateExistingQuorumConfig(Arrays.asList(3, 4), new ArrayList<>());
+        newServers.add(serverAddress.get(3));
+        newServers.add(serverAddress.get(4));
+        serverCount = serverAddress.size();
+        assertEquals(""Server count should be 5 after config update."", serverCount, 5);
+
+        // We are adding two new servers to the ensemble. The new server should be started with the new config
+        mt = Arrays.copyOf(mt, mt.length + 2);
+        for (int i = 3; i < 5; i++) {
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+            verifyQuorumConfig(i, newServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // Now we restart the leader first. This should trigger a leader election where a newly added server becomes
+        // the new leader (as it has the highest id)
+        int oldLeaderId = -1;
+        for (int i = 0; i < 3; i++) {
+            if (mt[i].getQuorumPeer().isLeader(i)) {
+                oldLeaderId = i;
+                mt[i].shutdown();
+
+                assertTrue(String.format(""Timeout during waiting for server %d to go down"", i),
+                        ClientBase.waitForServerDown(""127.0.0.1:"" + clientPorts.get(i), ClientBase.CONNECTION_TIMEOUT));
+
+                mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+                mt[i].start();
+                assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+                verifyQuorumConfig(i, newServers, null);
+                verifyQuorumMembers(mt[i]);

Review comment:
       break after this ?

##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -943,6 +944,7 @@ public synchronized boolean tryToCommit(Proposal p, long zxid, SocketAddress fol
             self.processReconfig(newQV, designatedLeader, zk.getZxid(), true);
 
             if (designatedLeader != self.getId()) {
+                LOG.info(""Committing a reconfiguration; this leader is not the designated leader anymore, setting allowedToCommit = false"");

Review comment:
       perhaps print out the reconfigEnabled flag in this message, just in case




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/20 03:28;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-633604783






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/20 03:28;githubbot;600","symat commented on a change in pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#discussion_r430210333



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java
##########
@@ -943,6 +944,7 @@ public synchronized boolean tryToCommit(Proposal p, long zxid, SocketAddress fol
             self.processReconfig(newQV, designatedLeader, zk.getZxid(), true);
 
             if (designatedLeader != self.getId()) {
+                LOG.info(""Committing a reconfiguration; this leader is not the designated leader anymore, setting allowedToCommit = false"");

Review comment:
       thanks, good idea

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ReconfigExceptionTest.java
##########
@@ -90,6 +90,16 @@ public void tearDown() throws Exception {
     @Test(timeout = 10000)
     public void testReconfigDisabled() throws InterruptedException {
         QuorumPeerConfig.setReconfigEnabled(false);
+
+        // for thsi test we need to restart the quorum peers to get the config change,

Review comment:
       thanks!

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/ReconfigRollingRestartCompatibilityTest.java
##########
@@ -209,6 +209,237 @@ public void testRollingRestartWithMembershipChange() throws Exception {
         }
     }
 
+    @Test
+    public void testRollingRestartWithExtendedMembershipConfig() throws Exception {
+        // in this test we are performing rolling restart with extended quorum config, see ZOOKEEPER-3829
+
+        // Start a quorum with 3 members
+        int serverCount = 3;
+        String config = generateNewQuorumConfig(serverCount);
+        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];
+        List<String> joiningServers = new ArrayList<>();
+        for (int i = 0; i < serverCount; i++) {
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            joiningServers.add(serverAddress.get(i));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            verifyQuorumConfig(i, joiningServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // Create updated config with 4 members
+        List<String> newServers = new ArrayList<>(joiningServers);
+        config = updateExistingQuorumConfig(Arrays.asList(3), new ArrayList<>());
+        newServers.add(serverAddress.get(3));
+        serverCount = serverAddress.size();
+        assertEquals(""Server count should be 4 after config update."", serverCount, 4);
+
+        // We are adding one new server to the ensemble. The new server should be started with the new config
+        mt = Arrays.copyOf(mt, mt.length + 1);
+        mt[3] = new QuorumPeerTestBase.MainThread(3, clientPorts.get(3), config, false);
+        mt[3].start();
+        assertTrue(""waiting for server 3 being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(3), CONNECTION_TIMEOUT));
+        verifyQuorumConfig(3, newServers, null);
+        verifyQuorumMembers(mt[3]);
+
+        // Now we restart the first 3 servers, one-by-one with the new config
+        for (int i = 0; i < 3; i++) {
+            mt[i].shutdown();
+
+            assertTrue(String.format(""Timeout during waiting for server %d to go down"", i),
+                       ClientBase.waitForServerDown(""127.0.0.1:"" + clientPorts.get(i), ClientBase.CONNECTION_TIMEOUT));
+
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+            verifyQuorumConfig(i, newServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // now verify that all nodes can handle traffic
+        for (int i = 0; i < 4; ++i) {
+            ZooKeeper zk = ClientBase.createZKClient(""127.0.0.1:"" + clientPorts.get(i));
+            ReconfigTest.testNormalOperation(zk, zk, false);
+        }
+
+        for (int i = 0; i < 4; ++i) {
+            mt[i].shutdown();
+        }
+    }
+
+
+    @Test
+    public void testRollingRestartWithExtendedMembershipConfigRestartingLeaderFirst() throws Exception {
+        // in this test we are performing rolling restart with extended quorum config, see ZOOKEEPER-3829
+        // first we start the new nodes, then restart the current leader
+        // this is a special case, as the old servers will not be able to join to the new nodes after they became leader
+
+        // Start a quorum with 3 members
+        int serverCount = 3;
+        String config = generateNewQuorumConfig(serverCount);
+        QuorumPeerTestBase.MainThread[] mt = new QuorumPeerTestBase.MainThread[serverCount];
+        List<String> joiningServers = new ArrayList<>();
+        for (int i = 0; i < serverCount; i++) {
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            joiningServers.add(serverAddress.get(i));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+        }
+        for (int i = 0; i < serverCount; i++) {
+            verifyQuorumConfig(i, joiningServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // Create updated config with 5 members
+        List<String> newServers = new ArrayList<>(joiningServers);
+        config = updateExistingQuorumConfig(Arrays.asList(3, 4), new ArrayList<>());
+        newServers.add(serverAddress.get(3));
+        newServers.add(serverAddress.get(4));
+        serverCount = serverAddress.size();
+        assertEquals(""Server count should be 5 after config update."", serverCount, 5);
+
+        // We are adding two new servers to the ensemble. The new server should be started with the new config
+        mt = Arrays.copyOf(mt, mt.length + 2);
+        for (int i = 3; i < 5; i++) {
+            mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+            mt[i].start();
+            assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+            verifyQuorumConfig(i, newServers, null);
+            verifyQuorumMembers(mt[i]);
+        }
+
+        // Now we restart the leader first. This should trigger a leader election where a newly added server becomes
+        // the new leader (as it has the highest id)
+        int oldLeaderId = -1;
+        for (int i = 0; i < 3; i++) {
+            if (mt[i].getQuorumPeer().isLeader(i)) {
+                oldLeaderId = i;
+                mt[i].shutdown();
+
+                assertTrue(String.format(""Timeout during waiting for server %d to go down"", i),
+                        ClientBase.waitForServerDown(""127.0.0.1:"" + clientPorts.get(i), ClientBase.CONNECTION_TIMEOUT));
+
+                mt[i] = new QuorumPeerTestBase.MainThread(i, clientPorts.get(i), config, false);
+                mt[i].start();
+                assertTrue(""waiting for server "" + i + "" being up"", ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts.get(i), CONNECTION_TIMEOUT));
+                verifyQuorumConfig(i, newServers, null);
+                verifyQuorumMembers(mt[i]);

Review comment:
       It wouldn't hurt, I will add it (although the new leader shouldn't be selected from the first three servers). Still, a 'break' would make the code easier to follow for the reader.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/20 03:38;githubbot;600","shralex commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-633711162






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/20 03:38;githubbot;600","symat edited a comment on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-633604783






----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/20 04:11;githubbot;600","RajKiranS commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-634596526


   > should this be done with a rolling restart and if so, does the order of restart matter ? is there a test for something like this ?
   
   Just noting down my observation when I enabled dynamic reconfig for the very first time. It was a bit scary! This is what I did for a 5 node ensemble:
   1. Set `reconfigEnabled=true` in zoo.cfg on all the members.
   2. Do a rolling-restart. First restart the followers and then the Leader at the end.
   
   Restarted 2 of the 4 followers and it joined the cluster w/o any issues. And upon restarting the third follower, I could see leader emitting log messages saying that followers had different configuration. 💀 Then, I immediately restarted the leader and luckily the next leader chosen was a follower which already had `reconfigEnabled=true` set. And then restarted the remaining follower which safely joined the cluster. This was a scary experience.
   
   Do not have the logs as its been a month or so I did this. But, I do remember that usual rolling-restart doesn't work as is. It needs to be ordered correctly. Like, update a follower, then next-likely-to-become-leader follower, leader, and then remaining followers. So, I think its best to test and document this procedure in detail.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/20 11:23;githubbot;600","nkalmar commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-635607725


   The change LGTM, I tested the patch applied to master with the quorum extension test. 
   What I don't understand is what does backward compatibility have to do here? Both in the jira and here I don't see version upgrade mentioned. Same versions of ZK on every quorum member, right?
   
   Sorry, this just doesn't add up, and I might be missing something :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/20 21:06;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-635796433


   > What I don't understand is what does backward compatibility have to do here? 
   
   By backward compatibility I meant that some rolling-restart sequences that was working well with 3.4 are not working with 3.5 and 3.6, even if `reconfigEnabled=false`. When the dynamic reconfig is disabled, then we would assume that rolling-restarts are behaving similarly as they did before 3.5. 
   
   I think you are right, maybe this is a bad phrase here. I will try to make it more clear in the PR / Jira.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/20 06:55;githubbot;600","symat edited a comment on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-635796433


   > What I don't understand is what does backward compatibility have to do here? 
   
   By backward compatibility I meant that some rolling-restart sequences that was working well with 3.4 are not working with 3.5 and 3.6, even if `reconfigEnabled=false`. When the dynamic reconfig is disabled, then we would assume that rolling-restarts are behaving similarly as they did before 3.5. 
   
   I think you are right, maybe this is a bad phrase here. I will try to make it more clear in the PR / Jira. Thanks for the feedback! :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/20 06:55;githubbot;600","asfgit closed pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/20 13:00;githubbot;600","nkalmar commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-635960427


   It had 11 conflicting files, tried to merge them but I got a ""Segmentation fault: 11"" error... anyway, it didn't seem a trivial cherry-pick to 3.5, can you please create a PR against branch-3.5 @symat ? Merged to master and 3.6. Thanks!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/20 13:03;githubbot;600","symat commented on pull request #1356:
URL: https://github.com/apache/zookeeper/pull/1356#issuecomment-636003458


   Sure, thanks for the tests and the merge! I will create a new PR soon on 3.5 and also do some manual tests there.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/20 14:30;githubbot;600","symat opened a new pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370


   In four different Jira tickets (ZOOKEEPER-3829, ZOOKEEPER-3830, ZOOKEEPER-3814, ZOOKEEPER-3842) we saw different errors when dynamic reconfig was disabled and we used rolling restart to change the quorum membership configuration. These rolling restart sequences was working fine on 3.4 but caused errors in 3.5 or 3.6.
   
   In worst case the rolling restart leads to the scenario that we had an elected leader which was up but unable to commit any changes. This happens, when the quorum is extended with a new member in the following sequence:
   * start server.1, server.2, server.3 (with config: 1,2,3)
   * start server.4 (with config 1,2,3,4)
   * stop server.1, then restart it with config 1,2,3,4
   * stop server.2, then restart it with config 1,2,3,4
   * stop server.3, then restart it with config 1,2,3,4
   * at this point leader is server.4, but it can not commit any transaction
   
   An other error we saw was when we changed a host name of an existing member (removing server.5 and add a new host as server.6). In this case we found in the logs of the new server (server.6) that it is still tried to connect to the old invalid server (server.5), although it was missing from it's config. The same problem remained even after making a full rolling-restart on all the nodes.
   
   In this patch I try to fix these issues without breaking anything. The patch contains the following changes:
   * We are making sure that neither the committed, nor the last seen config gets updated if dynamic reconfig is disabled.
   * It is not possible now to start the leader without the ability of committing transaction, when dynamic reconfig is disabled (this is only needed to avoid a reconfig edge-case).
   * I added a testcase simulating the enablement of dynamic reconfig using rolling restart
   * I added a few more unit tests to cover rolling restart scenarios. (the tests are failing without the patch but succeeding after applying it).
   * The enablement / disablement of reconfig is getting initialized now in the QuorumPeer and gets propagated to the other classes. This was needed for the rolling restart tests to be able to enable/disable reconfig only for the newly created servers without affecting the servers running already in the same JVM.
   
   I also tested the changes with docker, using: https://github.com/symat/zookeeper-docker-test
   
   target branches: 3.5, 3.6, master


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/20 07:45;githubbot;600","symat commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-637357504


   @nkalmar @eolivelli @shralex 
   This is the backport of #1356 to branch-3.5, PTAL.
   
   Nothing changed in the logic. I executed all the tests locally that changed by the PR. I also run checkstyle and did some manual tests of the fix using docker compose.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/20 07:48;githubbot;600","eolivelli commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-637376373


   retest ant build 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/20 08:23;githubbot;600","symat commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-637385818


   thanks for the review!
   
   (I haven't seen the whitespace trimmings, that must have been intellij... still, I aggree that it makes sense.)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/20 08:38;githubbot;600","symat commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-637435329


   retest ant build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Jun/20 10:04;githubbot;600","symat commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-638009588


   I don't know what is with the ant jenkins job... it seems to fail during the C-client tests? but I don't see any error message.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/20 07:21;githubbot;600","eolivelli commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-638023745


   > 
   > /tmp/jenkins5924504027321680528.sh: line 46: 61635 Killed                  ${ANT_HOME}/bin/ant -v -Dpatch.file=foobar -Dscratch.dir=$PATCH_DIR -Dps.cmd=/bin/ps -Dwget.cmd=/usr/bin/wget -Djiracli.cmd=/home/jenkins/tools/jiracli/latest/jira.sh -Dgit.cmd=/usr/bin/git -Dgrep.cmd=/bin/grep -Dpatch.cmd=/usr/bin/patch -Dfindbugs.home=/home/jenkins/tools/findbugs/latest/ -Dforrest.home=/home/jenkins/tools/forrest/latest/ -Djira.passwd=4hadoopqa -Djava5.home=/home/jenkins/tools/java5/latest/ -Dcurl.cmd=/usr/bin/curl -Dtest.junit.maxmem=2g qa-test-pullrequest
   > Build step 'Execute shell' marked build as failure
   > 
   
   I don't know.
   I feel we can merge the patch anyway.
   
   Merging it now


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/20 07:47;githubbot;600","eolivelli commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-638024604


   merged to branch-3.5
   thank you @symat 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/20 07:48;githubbot;600","eolivelli commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-638026067


   merged


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/20 07:51;githubbot;600","eolivelli closed pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/20 07:51;githubbot;600","symat commented on pull request #1370:
URL: https://github.com/apache/zookeeper/pull/1370#issuecomment-638028401


   thank you @eolivelli !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/20 07:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,19800,,,0,19800,,,,,,,ZOOKEEPER-3920,,ZOOKEEPER-3814,ZOOKEEPER-3842,ZOOKEEPER-3830,,,,,,,,,,ZOOKEEPER-3920,,,,,,,"15/May/20 07:52;sundyli;d.log;https://issues.apache.org/jira/secure/attachment/13003009/d.log","15/May/20 12:58;sundyli;screenshot-1.png;https://issues.apache.org/jira/secure/attachment/13003035/screenshot-1.png",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri May 29 13:04:25 UTC 2020,,,,,,,,,,"0|z0erk8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/May/20 03:15;sundyli;I think we can reset the `workerPool` to null. If it's ok, please assign this issue to me, and then I'll create a PR.;;;","15/May/20 06:22;eolivelli;That's very strange.
As you already dug into the code.
Can you create a reproducer test?

The behaviour is the same even on latest release? I guess so as I can't recall any fix in this area;;;","15/May/20 06:44;symat;[~sundyli] thanks for reporting the issue! I haven't seen this error before.
Let me quickly try to reproduce your issue to see if the steps you described results in the same problem for me.;;;","15/May/20 07:33;sundyli;[~eolivelli] I think it's the same even on latest release. But I didn't test it in the latest release. 

My workmates and I can reproduce it in 3.5.6 version every time, how to create a reproducer test? ;;;","15/May/20 07:51;sundyli;We start `CommitProcessor` [here|https://github.com/apache/zookeeper/blob/e87bad6774e7269ef21a156aff9dad089ef54794/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java#L455] .

We shutdown `CommitProcessor` [here|https://github.com/apache/zookeeper/blob/e87bad6774e7269ef21a156aff9dad089ef54794/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java#L637].

But when we call `start` method again, the `workerPool` will not work anymore. I submit the node D logs attachment `d.log`, and we can see that happens.
{code:java}
307:  2020-05-14 18:04:12,022 [myid:4] - INFO [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):CommitProcessor@362] - Shutting down 
308 2020-05-14 18:04:12,022 [myid:4] - INFO  [FollowerRequestProcessor:4:FollowerRequestProcessor@110] - FollowerRequestProcessor exited loop!
309 2020-05-14 18:04:12,022 [myid:4] - INFO  [CommitProcessor:4:CommitProcessor@195] - CommitProcessor exited loop!
310 2020-05-14 18:04:12,023 [myid:4] - INFO  [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):FinalRequestProcessor@514] - shutdown of request processor complete
311 2020-05-14 18:04:12,024 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):FileTxnLog$FileTxnIterator@655] - Created new input stream /data1/zookeeper    /logs/version-2/log.2a0000000b
312 2020-05-14 18:04:12,024 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):FileTxnLog$FileTxnIterator@658] - Created new input archive /data1/zookeepe    r/logs/version-2/log.2a0000000b
313 2020-05-14 18:04:12,024 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):FileTxnLog$FileTxnIterator@696] - EOF exception java.io.EOFException: Faile    d to read /data1/zookeeper/logs/version-2/log.2a0000000b
314 --
315 2020-05-14 18:04:29,000 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):SessionTrackerImpl@274] - Adding session 0x3082f5048fc0000
316 2020-05-14 18:04:29,000 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):SessionTrackerImpl@274] - Adding session 0x40a33f8f3f40002
317 2020-05-14 18:04:29,000 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):SessionTrackerImpl@274] - Adding session 0x40a33f8f3f40000
318 2020-05-14 18:04:29,000 [myid:4] - DEBUG [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):SessionTrackerImpl@274] - Adding session 0x40a33f8f3f40001
319 2020-05-14 18:04:29,000 [myid:4] - INFO  [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):CommitProcessor@256] - Configuring CommitProcessor with 24 worker threads.
320 2020-05-14 18:04:29,002 [myid:4] - INFO  [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):ContainerManager@64] - Using checkIntervalMs=60000 maxPerMinute=10000
321 2020-05-14 18:04:29,003 [myid:4] - DEBUG [LearnerHandler-/146.196.79.232:38708:LearnerHandler@534] - Sending UPTODATE message to 3
{code};;;","15/May/20 09:03;symat;I failed to reproduce your case. I created docker compose files ([https://github.com/symat/zookeeper-docker-test]) and using 3.5.6, I executed these steps:
 * start A,B,C with config (A,B,C)
 * start D with config (A,B,C,D)
 * stop A
 * start A with config (A,B,C,D)
 * stop B
 * start B with config (A,B,C,D)
 * stop C
 * start C with config (A,B,C,D)

At the end, everything worked for me just fine, leader was D and all nodes were up, forming a quorum (A,B,C,D) and zkCli worked (""{{ls /""}})

 
 There must be some differences between your reproduction and mine. Can you please share your zoo.cfg?

My looks like:
{code:java}
dataDir=/data
dataLogDir=/datalog
tickTime=2000
initLimit=5
syncLimit=2
autopurge.snapRetainCount=3
autopurge.purgeInterval=0
maxClientCnxns=60

standaloneEnabled=true
admin.enableServer=true
localSessionsEnabled=true
localSessionsUpgradingEnabled=true

4lw.commands.whitelist=stat, ruok, conf, isro, wchc, wchp, srvr, mntr, cons

clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty
serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory

# server host/port config in my case (when I have 4 nodes)
server.1=zoo1:2888:3888;2181
server.2=zoo2:2888:3888;2181
server.3=zoo3:2888:3888;2181
server.4=zoo4:2888:3888;2181
{code}
I checked the log file you uploaded. But I don't really see why you think the problem is with CommitProcessor. Maybe I miss something. Is this the full log file from your D node?

Also I checked the code. I think the {{CommitProcessor}} class should never be reused after a {{shutdown()}} is called. After a new leader election, a new {{LeaderZooKeeperServer}} / {{FollowerZooKeeperServer}} / {{ObserverZooKeeperServer}} object will be created (depending on the role of the given server), with a fresh {{CommitProcessor}} and new {{workerPool}}. So AFAICT (based only on a high-level look on the code) it shouldn't really matter to set {{workerPool=null}} in the shutdown method. But maybe I just don't follow your reasoning, or missed something in the code. Feel free to create a PR then we can see what you suggest.

Did you try your proposed fix already and saw that it solves your original issue?;;;","15/May/20 09:12;symat;Did you actually see in the logs this printout [""Shutting down""|https://github.com/apache/zookeeper/blob/e87bad6774e7269ef21a156aff9dad089ef54794/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/CommitProcessor.java#L632] before the {{start}} method would be called on the same CommitProcessor?

I see this one in your logs:
{code:java}
310 2020-05-14 18:04:12,023 [myid:4] - INFO  [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):FinalRequestProcessor@514] - shutdown of request processor complete
{code}
But this is about shutting down the {{FinalRequestProcessor}} and not the {{CommitProcessor}}.
  ;;;","15/May/20 13:02;sundyli; 

[~symat]

The logs are in
{code:java}
line 307:  2020-05-14 18:04:12,022 [myid:4] - INFO [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):CommitProcessor@362] - Shutting down

line 319: 2020-05-14 18:04:29,000 [myid:4] - INFO [QuorumPeer[myid=4](plain=/0:0:0:0:0:0:0:0:2183)(secure=disabled):CommitProcessor@256] - Configuring CommitProcessor with 24 worker threads.
{code}
Thanks for your feedback, I reproduced it without docker,  I will try to reproduce it with docker-compose.

 ;;;","15/May/20 14:28;sundyli;[~symat] 

Hi, I reproduced it with your docker-compose scripts.

my zoo.cfg as ClickHouse documents [tips|[https://clickhouse.tech/docs/en/operations/tips/]]

 
{code:java}
libenwang@ck015:~/git/zookeeper-docker-test$ cat conf/zoo.cfg
dataDir=/data
dataLogDir=/datalog

tickTime=2000
initLimit=30000
syncLimit=10
maxClientCnxns=2000
maxSessionTimeout=60000000
autopurge.snapRetainCount=10
autopurge.purgeInterval=1
preAllocSize=131072
snapCount=3000000
leaderServes=yes
standaloneEnabled=false
clientPort=2181
admin.serverPort=8084
 
{code}
Scripts

 
{code:java}
export ZOOKEEPER_GIT_REPO=~/git/zookeeper
export ZOOKEEPER_DOCKER_TEST_GIT_REPO=~/git/zookeeper-docker-test
# you always need to do a maven install to have the assembly tar.gz file updated!
cd $ZOOKEEPER_GIT_REPO
mvn clean install -DskipTests
cd $ZOOKEEPER_DOCKER_TEST_GIT_REPO
sudo rm -rf data
docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml up -d
docker exec -it zookeeper_zoo1_1 /bin/bash /zookeeper/bin/zkCli.sh create /clickhouse aaa
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml create zoo4
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml start zoo4

docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml stop zoo1
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml create zoo1
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml start zoo1
 
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml stop zoo2
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml create zoo2
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml start zoo2
 
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml stop zoo3
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml create zoo3
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml start zoo3
# This hangs
docker exec -it zookeeper_zoo4_1 /bin/bash /zookeeper/bin/zkCli.sh ls /

docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml down
 
{code}
 ;;;","15/May/20 14:40;symat;I see now :)
(you pasted the logs from line 308 in your previous comment, this is why I missed it)

But still I don't know if it the two log lines are produced by the same CommitProcessor object instance. As I said, my understanding is that a new ZooKeeperServer with a new clean CommitProcessor is getting created after each leader election.

What I see in Line 225 is that this server was (re)started? Then at least a whole leader election is missing from the log. Then I see that the server become a Follower. 
Then in line 299 it can not follow the current leader anymore. I guess then happens a new leader election, missing from the logs. But we see that the LearnerZooKeeperServer is shutting down (also closing the CommitProcessor).

And then the next thing I see is what you are mentioning: ""Configuring CommitProcessor with 24 worker threads"". But this time the server is already a leader, as it is sending the UPTODATE messages (lines 321, 322). So my assumption would be that this time this CommitProcessor is inside a LederZooKeeperServer, not inside a LearnerZooKeeperServer. So these are actually different CommitProcessors and different workerPools.

Anyway, I am not saying you are not right (this is a quite complicated piece of code). All I say is that I am not convinced yet and it is very hard for me to tell what is happening, as I don't see the full logs and also I was not able to reproduce the problem locally. (maybe my mistake, I don't know) I don't think it is related to docker compose vs. plain docker. 

Based on your description, something must have been stucked, I am just not sure if it is the workerPool in the CommitProcessor. Can I ask again: ""Did you try your proposed fix already and saw that it solves your original issue?""
(you can download the ZooKeeper code then apply your fix and run `mvn clean install -DskipTests` and change the zookeeper jar files in the docker image for testing);;;","15/May/20 14:48;sundyli;Did you try your proposed fix already and saw that it solves your original issue?

-----
Sorry, I forgot to answer this.
 Yes, I fixed it and tested, it works normally after the fix.

 

Have you checked my reply message? (I reproduced it with your docker repo).
It must be some configuration that makes this issue happen. I will try to find which config is wrong.

 

 

 

 ;;;","15/May/20 14:51;symat;{quote}Hi, I reproduced it with your docker-compose scripts
{quote}
great, thanks for the detailed steps!
I will try them locally on Monday and I can verify your findings. (I used slightly different docker-compose commands, maybe those made the difference.)

The config looks OK, except the {{initLimit}}, which should be way smaller. It should be given in number of ticks instead of millisecs. But I don't think it should matter much in this case.

Thanks for taking so much time chasing a ZooKeeper error! :);;;","17/May/20 04:15;keliwang;When using [https://github.com/symat/zookeeper-docker-test], disable options related to localSessions in zoo.cfg can reproduce this bug.;;;","18/May/20 14:46;symat;[~keliwang] this is a very nice catch! I was also validating your find from the other direction: If I add the {{localSessionsEnabled=true}} to the config just sent by [~sundyli], the zkCli was not hanging (while using his config I reproduced the original issue). So having {{localSessionsEnabled=true}} in my config caused that I was unable to reproduce the issue in the first place.

The {{localSessionsEnabled=true}} matters only because when the local sessions are enabled, then the client will be able to connect without having it's global session ID committed. The basic problem is indeed with this log line, as you wrote in ZOOKEEPER-3830:

{code:java}
2020-05-18 14:08:07,051 [myid:4] - INFO  [QuorumPeer[myid=4](plain=/0.0.0.0:2181)(secure=disabled):Leader@1296] - Have quorum of supporters, sids: [ [4, 1, 3],[1, 3] ]; starting up and setting last processed zxid: 0x400000000
{code}

This will lead that the designated leader will not be the new leader ([see here|https://github.com/apache/zookeeper/blob/c11b7e26bc554b8523dc929761dd28808913f091/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Leader.java#L1310]), and {{allowedToCommit = false}} will be set a few lines later. But no new leader election will be started, as the dynamic reconfig is not enabled. So the leader will start to work, but it won't be able to commit anything.

So I think the solution would be to skip the whole {{designatedLeader}} check when the dynamicReconfig is disabled.


[~sundyli], I was adding some debug logs to the commit processor and found that when the ""{{Configuring CommitProcessor with XX worker threads}}"" log is printed out, we always creating a new {{workerPool}}. I am not sure how resetting the {{workerPool}} to null would solve this issue. Are you sure that it helps in your case? Maybe then we are chasing here a different error :) - The one I just reproduced with your zoo.cfg in docker compose seems to be unrelated to {{workerPool}} but related to {{lastSeenQuorumVerifier}} and dynamic-reconfig.

I will create a PR now with the proposed fix (skipping the checking of the  {{designatedLeader}} when dynamic-reconfig is disabled), but I need some time first to check if the same error affects the master branch and also to see if I can add some unit tests for this.;;;","19/May/20 02:23;keliwang;{code:java}
if (curQV.getVersion() == 0 && curQV.getVersion() == lastSeenQV.getVersion()) {
    // This was added in ZOOKEEPER-1783. The initial config has version 0 (not explicitly
    // specified by the user; the lack of version in a config file is interpreted as version=0). 
    // As soon as a config is established we would like to increase its version so that it
    // takes presedence over other initial configs that were not established (such as a config
    // of a server trying to join the ensemble, which may be a partial view of the system, not the full config). 
    // We chose to set the new version to the one of the NEWLEADER message. However, before we can do that
    // there must be agreement on the new version, so we can only change the version when sending/receiving UPTODATE,
    // not when sending/receiving NEWLEADER. In other words, we can't change curQV here since its the committed quorum verifier, 
    // and there's still no agreement on the new version that we'd like to use. Instead, we use 
    // lastSeenQuorumVerifier which is being sent with NEWLEADER message
    // so its a good way to let followers know about the new version. (The original reason for sending 
    // lastSeenQuorumVerifier with NEWLEADER is so that the leader completes any potentially uncommitted reconfigs
    // that it finds before starting to propose operations. Here we're reusing the same code path for 
    // reaching consensus on the new version number.)

    // It is important that this is done before the leader executes waitForEpochAck,
    // so before LearnerHandlers return from their waitForEpochAck
    // hence before they construct the NEWLEADER message containing
    // the last-seen-quorumverifier of the leader, which we change below
    try {
        QuorumVerifier newQV = self.configFromString(curQV.toString());
        newQV.setVersion(zk.getZxid());
        self.setLastSeenQuorumVerifier(newQV, true);    
    } catch (Exception e) {
        throw new IOException(e);
    }
}
{code}

[~symat] In the code above, can leader always overwrite lastSeenQuorumVerifier with its latest quorumVerifier when dynamic-reconfig disabled? If lastSeenQuorumVerifier is the same as quorumVerifier, then allowedToCommit should always be true.
;;;","19/May/20 04:40;sundyli;[~symat]

Hi, I have pushed my code to my repo.

With this fix, we won't reproduce this issue(but we use docker-compose down, we still have this issue), you can try that.

 
{code:java}
git clone --depth=50 --branch=ZOOKEEPER-3829   git@github.com:sundy-li/zookeeper.git
export ZOOKEEPER_GIT_REPO=~/git/zookeeper 
export ZOOKEEPER_DOCKER_TEST_GIT_REPO=~/git/zookeeper-docker-test
cd $ZOOKEEPER_GIT_REPO 
mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V 
cd $ZOOKEEPER_DOCKER_TEST_GIT_REPO 
sudo rm -rf data
 
docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml up -d
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml create zoo4
docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml start zoo4
## If we use docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml down, we reproduce this issue even with the fix, that's weired.
docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml stop zoo1 
docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml stop zoo2 
docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml stop zoo3

docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml up -d 
{code}
 

Yet I believe `localSessionsEnabled` configuration matters,  maybe there is not just one bug that causes this issue.

 ;;;","19/May/20 05:11;keliwang;[~sundyli] I tried your reproduce steps with your fixed branch, but still got zkCli.sh stuck in CONNECTING state.


{code}
zookeeper-docker-test on  master [!] took 3m55s
❯ docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml down
Stopping zookeeper_zoo2_1 ... done
Stopping zookeeper_zoo3_1 ... done
Stopping zookeeper_zoo1_1 ... done
Stopping zookeeper_zoo4_1 ... done
Removing zookeeper_zoo2_1 ... done
Removing zookeeper_zoo3_1 ... done
Removing zookeeper_zoo1_1 ... done
Removing zookeeper_zoo4_1 ... done
Removing network zookeeper_default

zookeeper-docker-test on  master [!] took 11s
❯ rm -rf data

zookeeper-docker-test on  master [!]
❯ exa
3_nodes_2_networks_zk.yml       3_nodes_zk.yml                 3_nodes_zk_jdk_12.yml               3_nodes_zk_no_wildcard_addr.yml         4_nodes_2_networks_zk.yml           conf         logs       start_zookeeper.sh
3_nodes_digest_quorum_auth.yml  3_nodes_zk_dynamic_config.yml  3_nodes_zk_mounted_data_folder.yml  3_nodes_zk_server_hostname_changed.yml  4_nodes_zk_mounted_data_folder.yml  LICENSE.txt  README.md

zookeeper-docker-test on  master [!]
❯ docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml up -d
Creating network ""zookeeper_default"" with the default driver
Creating zookeeper_zoo1_1 ... done
Creating zookeeper_zoo2_1 ... done
Creating zookeeper_zoo3_1 ... done

zookeeper-docker-test on  master [!]
❯ docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml create zoo4
WARNING: The create command is deprecated. Use the up command with the --no-start flag instead.
Creating zookeeper_zoo4_1 ... done

zookeeper-docker-test on  master [!]
❯ docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml start zoo4
Starting zoo4 ... done

zookeeper-docker-test on  master [!]
❯ docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml stop zoo1
  docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml stop zoo2
  docker-compose --project-name zookeeper --file 3_nodes_zk_mounted_data_folder.yml stop zoo3
Stopping zookeeper_zoo1_1 ... done
Stopping zookeeper_zoo2_1 ... done
Stopping zookeeper_zoo3_1 ... done

zookeeper-docker-test on  master [!] took 32s
❯ docker-compose --project-name zookeeper --file 4_nodes_zk_mounted_data_folder.yml up -d
Recreating zookeeper_zoo2_1 ...
Recreating zookeeper_zoo2_1 ... done
Recreating zookeeper_zoo3_1 ... done
Recreating zookeeper_zoo1_1 ... done

zookeeper-docker-test on  master [!]
❯ docker exec -it zookeeper_zoo4_1 /bin/bash /zookeeper/bin/zkCli.sh
Connecting to localhost:2181
2020-05-19 05:10:25,321 [myid:] - INFO  [main:Environment@98] - Client environment:zookeeper.version=3.7.0-SNAPSHOT-f87c14dd8a984b5850b9afc9a5c9358f5420877e, built on 2020-05-19 05:03 UTC
2020-05-19 05:10:25,326 [myid:] - INFO  [main:Environment@98] - Client environment:host.name=zoo4
2020-05-19 05:10:25,326 [myid:] - INFO  [main:Environment@98] - Client environment:java.version=1.8.0_222
2020-05-19 05:10:25,333 [myid:] - INFO  [main:Environment@98] - Client environment:java.vendor=Oracle Corporation
2020-05-19 05:10:25,333 [myid:] - INFO  [main:Environment@98] - Client environment:java.home=/usr/local/openjdk-8
2020-05-19 05:10:25,333 [myid:] - INFO  [main:Environment@98] - Client environment:java.class.path=/zookeeper/bin/../zookeeper-server/target/classes:/zookeeper/bin/../build/classes:/zookeeper/bin/../zookeeper-server/target/lib/*.jar:/zookeeper/bin/../build/lib/*.jar:/zookeeper/bin/../lib/zookeeper-prometheus-metrics-3.7.0-SNAPSHOT.jar:/zookeeper/bin/../lib/zookeeper-jute-3.7.0-SNAPSHOT.jar:/zookeeper/bin/../lib/zookeeper-3.7.0-SNAPSHOT.jar:/zookeeper/bin/../lib/snappy-java-1.1.7.jar:/zookeeper/bin/../lib/slf4j-log4j12-1.7.25.jar:/zookeeper/bin/../lib/slf4j-api-1.7.25.jar:/zookeeper/bin/../lib/simpleclient_servlet-0.6.0.jar:/zookeeper/bin/../lib/simpleclient_hotspot-0.6.0.jar:/zookeeper/bin/../lib/simpleclient_common-0.6.0.jar:/zookeeper/bin/../lib/simpleclient-0.6.0.jar:/zookeeper/bin/../lib/netty-transport-native-unix-common-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-transport-native-epoll-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-transport-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-resolver-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-handler-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-common-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-codec-4.1.48.Final.jar:/zookeeper/bin/../lib/netty-buffer-4.1.48.Final.jar:/zookeeper/bin/../lib/metrics-core-3.2.5.jar:/zookeeper/bin/../lib/log4j-1.2.17.jar:/zookeeper/bin/../lib/json-simple-1.1.1.jar:/zookeeper/bin/../lib/jline-2.14.6.jar:/zookeeper/bin/../lib/jetty-util-9.4.24.v20191120.jar:/zookeeper/bin/../lib/jetty-servlet-9.4.24.v20191120.jar:/zookeeper/bin/../lib/jetty-server-9.4.24.v20191120.jar:/zookeeper/bin/../lib/jetty-security-9.4.24.v20191120.jar:/zookeeper/bin/../lib/jetty-io-9.4.24.v20191120.jar:/zookeeper/bin/../lib/jetty-http-9.4.24.v20191120.jar:/zookeeper/bin/../lib/javax.servlet-api-3.1.0.jar:/zookeeper/bin/../lib/jackson-databind-2.10.3.jar:/zookeeper/bin/../lib/jackson-core-2.10.3.jar:/zookeeper/bin/../lib/jackson-annotations-2.10.3.jar:/zookeeper/bin/../lib/commons-lang-2.6.jar:/zookeeper/bin/../lib/commons-cli-1.2.jar:/zookeeper/bin/../lib/audience-annotations-0.5.0.jar:/zookeeper/bin/../zookeeper-*.jar:/zookeeper/bin/../zookeeper-server/src/main/resources/lib/*.jar:/zookeeper/bin/../conf:
2020-05-19 05:10:25,334 [myid:] - INFO  [main:Environment@98] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
2020-05-19 05:10:25,334 [myid:] - INFO  [main:Environment@98] - Client environment:java.io.tmpdir=/tmp
2020-05-19 05:10:25,334 [myid:] - INFO  [main:Environment@98] - Client environment:java.compiler=<NA>
2020-05-19 05:10:25,334 [myid:] - INFO  [main:Environment@98] - Client environment:os.name=Linux
2020-05-19 05:10:25,335 [myid:] - INFO  [main:Environment@98] - Client environment:os.arch=amd64
2020-05-19 05:10:25,335 [myid:] - INFO  [main:Environment@98] - Client environment:os.version=4.19.76-linuxkit
2020-05-19 05:10:25,335 [myid:] - INFO  [main:Environment@98] - Client environment:user.name=root
2020-05-19 05:10:25,335 [myid:] - INFO  [main:Environment@98] - Client environment:user.home=/root
2020-05-19 05:10:25,336 [myid:] - INFO  [main:Environment@98] - Client environment:user.dir=/
2020-05-19 05:10:25,336 [myid:] - INFO  [main:Environment@98] - Client environment:os.memory.free=23MB
2020-05-19 05:10:25,338 [myid:] - INFO  [main:Environment@98] - Client environment:os.memory.max=228MB
2020-05-19 05:10:25,338 [myid:] - INFO  [main:Environment@98] - Client environment:os.memory.total=31MB
2020-05-19 05:10:25,347 [myid:] - INFO  [main:ZooKeeper@633] - Initiating client connection, connectString=localhost:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@65e579dc
2020-05-19 05:10:25,351 [myid:] - INFO  [main:X509Util@77] - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
2020-05-19 05:10:25,362 [myid:] - INFO  [main:ClientCnxnSocket@239] - jute.maxbuffer value is 1048575 Bytes
2020-05-19 05:10:25,374 [myid:] - INFO  [main:ClientCnxn@1714] - zookeeper.request.timeout value is 0. feature enabled=false
Welcome to ZooKeeper!
2020-05-19 05:10:25,394 [myid:localhost:2181] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1159] - Opening socket connection to server localhost/127.0.0.1:2181.
2020-05-19 05:10:25,395 [myid:localhost:2181] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@1161] - SASL config status: Will not attempt to authenticate using SASL (unknown error)
JLine support is enabled
2020-05-19 05:10:25,407 [myid:localhost:2181] - INFO  [main-SendThread(localhost:2181):ClientCnxn$SendThread@993] - Socket connection established, initiating session, client: /127.0.0.1:40788, server: localhost/127.0.0.1:2181
[zk: localhost:2181(CONNECTING) 0]
2020-05-19 05:10:49,712 [myid:] - ERROR [main:ServiceUtils@42] - Exiting JVM with code 0
{code}
;;;","19/May/20 08:20;symat;I'll push a PR with some proposed fixes and also some tests that reproduces the steps we discussed before. (these tests fail without the changes but after the changes they are passing). 

see: https://github.com/apache/zookeeper/pull/1356;;;","19/May/20 12:00;symat;{quote}we use docker-compose down, we still have this issue
{quote}

maybe ""{{docker-compose down}}"" is also removing the virtual network?

I always use ""{{stop zoo3}}"" to stop a service and ""{{up -d zoo3}}"" to rebuild/start it again.;;;","29/May/20 13:04;nkalmar;Had non-trivial merge conflicts when cherry-picking to branch-3.5, it will need a seperate PR.;;;",,,,,,,,,,,,,,,,,
fix zkServer.sh status command to support SSL-only server,ZOOKEEPER-3818,13303035,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,xiaoheipangzi,aishwaryasoni1991,aishwaryasoni1991,06/May/20 06:39,10/Sep/20 10:43,13/Jul/23 09:08,12/May/20 10:07,3.5.5,,,,,,,,,3.5.9,3.6.2,3.7.0,,,security,,,,1,pull-request-available,,"I am configuring SSL on Zookeeper 3.5.5 branch and have removed the clientPort config from zoo.cfg and adding onlysecureClientPort. Also, I have removed it from my server ensemble connection string in zoo.cfg.dynamic file as it results in a port binding issue on the port 2181 if we keep it in both the files.

But, in zkServer.sh, it checks if the clientPort is set in the *status* cmd else it throws exit 1 and terminates the process. How to overcome this situation? We cannot see the clientPort in zoo.cfg as it would enable mixed mode which we do not want when we enable SSL.

Also, I am using zkServer.sh status output as a healthcheck for our containerized zookeeper to see if thee quorum is established or not as in cluster mode, zookeeper can finally run either in follower or leader state (ignoring intermediate state changes). So as the status output throws exit 1, the healthcheck is also failing.",,aishwaryasoni1991,karthick-rn,symat,,,,,,,,,,,,,,,,,"symat opened a new pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348


   When the ZooKeeper cluster is started in client SSL-only mode (omitting the clientPort
   from the zoo.cfg), then the current `zkServer.sh status` command fails to connect to
   the server.
   
   This patch contains:
   
   - a fix for the zkServer.sh to fall-back to SSL connetion if no unsecure port is defined
   - documenting the necessary system properties one needs to define in this case
   - some formatting fixes in the `zookeeperTools.md` file to get proper code blocks generated


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 12:11;githubbot;600","symat commented on pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#issuecomment-624614592


   unfortunately the patch can not be cherry-picked to branch-3.5 and branch-3.6 (there are some issues with the markdown formatting fixes), I will create separate PRs after this one was reviewed.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 12:17;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421004049



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       is this way applicable for zookeeper 3.5.5 or the latest version? I thought adding the changes in zoo.cfg (as per the docs) would be sufficient and we don't need to add it SERVER_JVMFLAGS explicitly. Maybe there is a bug that I am not aware of for the need to add the configs in SERVER_JVMFLAGS.
   Also, if you check this https://issues.apache.org/jira/browse/ZOOKEEPER-2125 the way it recommends to use SERVER_JVMFLAGS and CLIENT_JVMFLAGS is different.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 18:30;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421004049



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       is this way applicable for zookeeper 3.5.5 or the latest version? I thought adding the changes in zoo.cfg (as per the docs) would be sufficient and we don't need to add it SERVER_JVMFLAGS explicitly. Maybe there is a bug that I am not aware of for the need to add the configs in SERVER_JVMFLAGS.
   Also, if you check this https://issues.apache.org/jira/browse/ZOOKEEPER-2125 the way it recommends to use SERVER_JVMFLAGS and CLIENT_JVMFLAGS is different.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 18:34;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421016075



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       Why do we need ""Client SSL connection related parameters in the SERVER_JVMFLAGS""? 
   (Missing the concept from my end)




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 18:50;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421022654



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort

Review comment:
       do we need this considering value of secureClientPort will be null if not set? As in line 276 the check for the value of clientPort is done and if secureClientPort is also missing, it will get caught.
   I think we need to set clientPort=$secureClientPort immediately before/after setting isSSL = ""true"".
   




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 19:01;githubbot;600","symat commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421269153



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       yep, this is not very intuitive.
   - the status command in zkServer.sh will initiate a client connection to execute diagnostic command against the server. To be able to connect to the server, it needs to have all the client-side credentials / ssl configs (and these configs can not be read from the server-side zoo.cfg file)
   - normally you put these client SSL parameters to the CLIENT_JVMFLAGS environment variable. But the zkServer.sh extra configuration goes usually to the SERVER_JVMFLAGS. We could change this by processing the CLIENT_JVMFLAGS during the `zkServer.sh status` command, but I am not sure if it would be less confusing.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 06:32;githubbot;600","symat commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421271681



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort

Review comment:
       yes, I aggre, moving the `clientPort=$secureClientPort` inside the `if` after `isSSL=""true""` would make the code more logical / readable. (although it wouldn't change the behaviour, as you pointed out). I will push the fix.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 06:39;githubbot;600","symat commented on pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#issuecomment-625161384


   I also decided to use the CLIENT_JVMFLAGS for the SSL client configs. I think it will be less confusing, even if one needs to define it for the `zkServer.sh`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 10:11;githubbot;600","symat commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421393998



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       Thinking it through again, I think it will be actually less confusing to use the CLIENT_JVMFLAGS. I fixed it in my last commit. Thanks for the note!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 10:13;githubbot;600","symat removed a comment on pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#issuecomment-624614592


   unfortunately the patch can not be cherry-picked to branch-3.5 and branch-3.6 (there are some issues with the markdown formatting fixes), I will create separate PRs after this one was reviewed.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 10:13;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421714768



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       Thank you for explaining the logic :) 
   If we need the flags set, can we do an if check in the zkEnv.sh if its TLS enabled or not? So when zkCli runs, it will get the CLIENT_JVMFLAGS which already has everything needed. As running zkServer with all the flags might be a bit tedious.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 18:40;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421719340



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       Also, do you know if running the 4 letter commands are SSL secured or not?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 18:48;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421733838



##########
File path: bin/zkServer.sh
##########
@@ -270,8 +270,8 @@ status)
       secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
       if [ ""$secureClientPort"" ] ; then
         isSSL=""true""
+        clientPort=$secureClientPort
       fi
-      clientPort=$secureClientPort
     fi
     if [ ! ""$clientPort"" ] ; then

Review comment:
       Can we refactor it like this?
   ```
   if [ ! ""$clientPort"" ] ; then
         echo ""Client port not found. Looking for secureClientPort in the static config.""
         secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
         if [ ""$secureClientPort"" ] ; then
           isSSL=""true""
           clientPort=$secureClientPort
         else
           echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
           exit 1
       fi
   fi
   ```




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 19:14;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421719340



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       Do you know if running the 4 letter commands are SSL secured or not? Also, when we open the zk cli console (./bin/zkCli.sh), if the TLS is enabled, are all the communications by default SSL encrypted, or do we need to provide the client flags as above while starting the cli?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 19:21;githubbot;600","aishwaryasoni1991 commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r421714768



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       Thank you for explaining the logic :) 
   If we need the flags set, can we do an if check in the zkEnv.sh if its TLS enabled or not? So when zkCli runs, it will get the CLIENT_JVMFLAGS which already has everything needed. Your comments rightly serve the purpose of telling the user how to run status command but just thinking how can we simplify a bit more.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 19:21;githubbot;600","symat commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r422008872



##########
File path: bin/zkServer.sh
##########
@@ -270,8 +270,8 @@ status)
       secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
       if [ ""$secureClientPort"" ] ; then
         isSSL=""true""
+        clientPort=$secureClientPort
       fi
-      clientPort=$secureClientPort
     fi
     if [ ! ""$clientPort"" ] ; then

Review comment:
       yes, thanks!
   you are right, it is a bit more compact this way. I changed.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/20 08:11;githubbot;600","nkalmar commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r422959876



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       4lw commands are not ssl secured, you can't use it with SSL port.
   You need to provide those flags if you want to connect to a secure port. 




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/20 11:01;githubbot;600","nkalmar commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r422963526



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       ""can we do an if check in the zkEnv.sh"" - Sounds good, but I'm not sure we want to complicate zkServer.sh with client jvm flag checks. I'll leave this for Mate to decide, he is much more involved in this.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/20 11:09;githubbot;600","symat commented on a change in pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#discussion_r422976715



##########
File path: bin/zkServer.sh
##########
@@ -235,51 +235,64 @@ restart)
     ;;
 status)
     # -q is necessary on some versions of linux where nc returns too quickly, and no stat result is output
+    isSSL=""false""
     clientPortAddress=`$GREP ""^[[:space:]]*clientPortAddress[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [ $clientPortAddress ]
     then
-	clientPortAddress=""localhost""
+	      clientPortAddress=""localhost""
     fi
     clientPort=`$GREP ""^[[:space:]]*clientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
     if ! [[ ""$clientPort""  =~ ^[0-9]+$ ]]
     then
-       dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-       myid=`cat ""$dataDir/myid""`
-       if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
-         echo ""clientPort not found and myid could not be determined. Terminating.""
-         exit 1
-       fi
-       clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       if [ ! ""$clientPortAndAddress"" ] ; then
-           echo ""Client port not found in static config file. Looking in dynamic config file.""
-           dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
-           clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
-       fi
-       if [ ! ""$clientPortAndAddress"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
-       if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
-          clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
-       fi
-       clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
-       if [ ! ""$clientPort"" ] ; then
-          echo ""Client port not found. Terminating.""
-          exit 1
-       fi
+      dataDir=`$GREP ""^[[:space:]]*dataDir"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      myid=`cat ""$dataDir/myid"" 2> /dev/null`
+      if ! [[ ""$myid"" =~ ^[0-9]+$ ]] ; then
+        echo ""myid could not be determined, will not able to locate clientPort in the server configs.""
+      else
+        clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$ZOOCFG"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in static config file. Looking in dynamic config file.""
+          dynamicConfigFile=`$GREP ""^[[:space:]]*dynamicConfigFile"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+          clientPortAndAddress=`$GREP ""^[[:space:]]*server.$myid=.*;.*"" ""$dynamicConfigFile"" | sed -e 's/.*=//' | sed -e 's/.*;//'`
+        fi
+        if [ ! ""$clientPortAndAddress"" ] ; then
+          echo ""Client port not found in the server configs""
+        else
+          if [[ ""$clientPortAndAddress"" =~ ^.*:[0-9]+ ]] ; then
+            clientPortAddress=`echo ""$clientPortAndAddress"" | sed -e 's/:.*//'`
+          fi
+          clientPort=`echo ""$clientPortAndAddress"" | sed -e 's/.*://'`
+        fi
+      fi
     fi
-    echo ""Client port found: $clientPort. Client address: $clientPortAddress.""
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Client port not found. Looking for secureClientPort in the static config.""
+      secureClientPort=`$GREP ""^[[:space:]]*secureClientPort[^[:alpha:]]"" ""$ZOOCFG"" | sed -e 's/.*=//'`
+      if [ ""$secureClientPort"" ] ; then
+        isSSL=""true""
+      fi
+      clientPort=$secureClientPort
+    fi
+    if [ ! ""$clientPort"" ] ; then
+      echo ""Unable to find either secure or unsecure client port in any configs. Terminating.""
+      exit 1
+    fi
+    echo ""Client port found: $clientPort. Client address: $clientPortAddress. Client SSL: $isSSL.""
     STAT=`""$JAVA"" ""-Dzookeeper.log.dir=${ZOO_LOG_DIR}"" ""-Dzookeeper.root.logger=${ZOO_LOG4J_PROP}"" ""-Dzookeeper.log.file=${ZOO_LOG_FILE}"" \
-             -cp ""$CLASSPATH"" $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
-             $clientPortAddress $clientPort srvr 2> /dev/null    \
+          -cp ""$CLASSPATH"" $CLIENT_JVMFLAGS $JVMFLAGS org.apache.zookeeper.client.FourLetterWordMain \
+          $clientPortAddress $clientPort srvr $isSSL 2> /dev/null    \
           | $GREP Mode`
     if [ ""x$STAT"" = ""x"" ]
     then
-        echo ""Error contacting service. It is probably not running.""
-        exit 1
+      if [ ""$isSSL"" ] ; then
+        echo ""We used secureClientPort ($secureClientPort) to establish connection, but we failed. Please make sure you provided all the Client SSL connection related parameters in the SERVER_JVMFLAGS environment variable!""
+        echo ""example: SERVER_JVMFLAGS=\""-Dzookeeper.clientCnxnSocket=org.apache.zookeeper.ClientCnxnSocketNetty -Dzookeeper.ssl.trustStore.location=/tmp/clienttrust.jks -Dzookeeper.ssl.trustStore.password=password -Dzookeeper.ssl.keyStore.location=/tmp/client.jks -Dzookeeper.ssl.keyStore.password=password -Dzookeeper.client.secure=true\"" ./zkServer.sh status""

Review comment:
       > ""can we do an if check in the zkEnv.sh""
   
   I was also thinking about more automation, but I don't think it would be easy to do this reliably. The problem is that usually (in production environment) we use different keystore / truststore files (or jaas configs for SASL) for the server and for the client. And in the `zoo.conf` file or in  `zkEnv.sh` we don't have the SSL config needed for the client to connect. Usually it is something one configures in the code or by using system properties when one tries to connect to ZooKeeper.
   
   But maybe I misunderstood your idea...




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/20 11:35;githubbot;600","symat commented on pull request #1348:
URL: https://github.com/apache/zookeeper/pull/1348#issuecomment-626651468


   Thanks for the test / review @nkalmar!
   @aishwaryasoni1991 sorry, I missed your last comments somehow, I tried to answer. Let me know when you feel this patch to be OK, then we can push it to all active branches.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/20 11:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12600,,,0,12600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 12 10:07:03 UTC 2020,,,,,,,,,,"0|z0ef6o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/May/20 07:02;symat;this is an important observation, thanks for reporting it! 
would you like to provide a fix for it by creating a pull-request against the master branch?;;;","06/May/20 07:13;aishwaryasoni1991;[~symat] I apologize, but I won't be able to pick it up. Loaded up pretty badly :) But it would be really great if someone can as I do need the fix. May be backport the fix to other relevant zookeeper branches as I suppose master is 3.6.1.;;;","06/May/20 08:23;symat;ok, sure. I'll take a look then. This is something we will face in our company as well soon, it would be good to be fixed.;;;","06/May/20 08:35;aishwaryasoni1991;Thanks for picking it up. On a side note, is 3.5.5 still the only release recommended for production or 3.6.0+ is also production stable? In the official doc, I see only 3.5.5 nominated for production use (at least verbally)

[https://zookeeper.apache.org/releases.html#releasenotes];;;","06/May/20 10:39;symat;well, maybe the release notes should be more precise :)
all 3.5.x after 3.5.5 is considered as production stable. There are relatively few changes in the bugfix releases, but still each bugfix release contains important security and other fixes. So I would recommend to use the 3.5.<latest> in production. (FYI: 3.5.8 will be released very soon, we are in the middle of the release process and tests)

About 3.6 I am not sure. I know that some in the community are using it in production, but I think they are still in minority.;;;","06/May/20 10:45;symat;anyway, feel free to ask about these in our mail list (user@zookeeper.apache.org), where people can share their experiences. We have a friendly community :) ;;;","12/May/20 10:07;symat;Issue resolved by pull request 1348
[https://github.com/apache/zookeeper/pull/1348];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FileTxnSnapLog.fastForwardFromEdits() throws NPE if TestingServer is started from another thread,ZOOKEEPER-3803,13299810,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,volodymyr,volodymyr,20/Apr/20 21:41,19/Oct/20 08:02,13/Jul/23 09:08,25/Jun/20 06:48,3.4.13,,,,,,,,,,,,,,,,,,0,pull-request-available,,"For the case when {{TestingServer.start()}} and {{TestingServer.close()}} methods are running in different threads (but {{TestingServer.close()}} is executed after {{TestingServer.start()}} is complited), {{FileTxnSnapLog.fastForwardFromEdits()}} throws NPE, since {{FileTxnSnapLog.close()}} was already called in {{TestingZooKeeperMain.internalRunFromConfig()}} method.

Such a case may be observed in unit tests when start and close methods are called in methods annotated with {{@Before}} and {{@After}} annotations.

Here is a simple test which helps to reproduce this issue:
{code:java}
  @Test
  public void testNPE() throws Exception {
    for (int i = 0; i < 100; i++) {
      TestingServer testingServer = new TestingServer();
      Thread thread = new Thread(() -> {
        try {
          testingServer.start();
        } catch (Exception e) {
          throw new RuntimeException(e);
        }
      });
      thread.start();
      thread.join();
      testingServer.close();
    }
  }
{code}

The stack trace is the following:
{noformat}
java.lang.NullPointerException
	at org.apache.zookeeper.server.persistence.FileTxnSnapLog.fastForwardFromEdits(FileTxnSnapLog.java:269)
	at org.apache.zookeeper.server.ZKDatabase.fastForwardDataBase(ZKDatabase.java:251)
	at org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:583)
	at org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:546)
	at org.apache.zookeeper.server.NIOServerCnxnFactory.shutdown(NIOServerCnxnFactory.java:929)
	at org.apache.curator.test.TestingZooKeeperMain.close(TestingZooKeeperMain.java:178)
	at org.apache.curator.test.TestingZooKeeperServer.stop(TestingZooKeeperServer.java:118)
	at org.apache.curator.test.TestingZooKeeperServer.close(TestingZooKeeperServer.java:130)
	at org.apache.curator.test.TestingServer.close(TestingServer.java:178)
	at org.apache.drill.exec.coord.zk.TestZookeeperClient.testNPE(TestZookeeperClient.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at mockit.integration.junit4.JUnit4TestRunnerDecorator.executeTestMethod(JUnit4TestRunnerDecorator.java:157)
	at mockit.integration.junit4.JUnit4TestRunnerDecorator.invokeExplosively(JUnit4TestRunnerDecorator.java:71)
	at mockit.integration.junit4.FakeFrameworkMethod.invokeExplosively(FakeFrameworkMethod.java:29)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
{noformat}

Looks like this NPE is a regression after ZOOKEEPER-2845, where instead of using a local variable of {{txnLog}} was used class field.",,eolivelli,evaristojosec@yahoo.es,hmusum,randgalt,volodymyr,,,,,,,,,,,,,,,"chevaris opened a new pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373


   Prevent NPE on TestingServer close()
   
   When using TestingServer, close method triggers an unneed call to fastForwardFromEdits on FileTxnSnapLog instance that has been already closed throwing a NPE that is harmless but a bit annoying on development


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Jun/20 17:28;githubbot;600","chevaris commented on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-640193142


   Adjusting commit message to requested format


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/20 10:26;githubbot;600","eolivelli commented on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-643580519


   Sorry for late reply. I forgot to push the button in github 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jun/20 06:49;githubbot;600","chevaris commented on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-643604080


   Thx a lot Enrico. I agree with you that the fix I provided it is not elegant (it was suggested in the ticket)
   
   
   I have checked the code again and I see race conditions with txnLog variable
   
   - FileTxnSnapLog.truncateLog  calls the close() method setting txnLog to null, but later resets the txnLog with a new instance, so in between all the calls that involve txnLog are exposed to NPE
   - A Closeable class as a general rule SHOULD NOT be used after closed, but class is not protected to that (even internally the close method is called)
   - This class looks is accessed from multiple threads, but for instance txnLog variable is not safely publish (e.g. as volatile) or synchronized at all.
   
   
   I do not have exprience with ZK internals, but looks to me that there are some weird race conditions on shutdown (or when TX log is truncated) that prevents the flow to run smoothly and at least in my preliminar investigation I do not see a clear way out. Could you provide me a hint how to continue? I do not see how the problem can be fixed in the shutdown method (or only there)
   
   
   Thanks in advance
   
   /Evaristo
   
   
   
   
   I think the code has some race conditions and lacks some synchronization
   
   FileTxnSnapLog,
   f you check the code 'txnLog' can be null only when the instance is closed (I assume to allow GC to collect memory). I assume that once instance is closed FileTxnSnapLog.java  methods should not be called, right? The class is missing that protection
   
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jun/20 10:29;githubbot;600","chevaris edited a comment on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-643604080


   Thx a lot Enrico. I agree with you that the fix I provided it is not elegant (it was suggested in the ticket)
   
   
   I have checked the code again and I see race conditions with txnLog variable
   
   - FileTxnSnapLog.truncateLog  calls the close() method setting txnLog to null, but later resets the txnLog with a new instance, so in between all the calls that involve txnLog are exposed to NPE
   - A Closeable class as a general rule SHOULD NOT be used after closed, but class is not protected to that (even internally the close method is called)
   - This class looks is accessed from multiple threads, but for instance txnLog variable is not safely publish (e.g. as volatile) or synchronized at all.
   
   
   I do not have exprience with ZK internals, but looks to me that there are some weird race conditions on shutdown (or when TX log is truncated) that prevents the flow to run smoothly and at least in my preliminar investigation I do not see a clear way out. Could you provide me a hint how to continue? I do not see how the problem can be fixed in the shutdown method (or only there)
   
   
   Thanks in advance
   
   /Evaristo
   
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jun/20 10:33;githubbot;600","chevaris edited a comment on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-643604080


   Thx a lot Enrico. I agree with you that the fix I provided it is not elegant (it was suggested in the ticket)
   
   
   I have checked the code again:
   - All the code relies on the fact variable is not null (variable is initializated at construction), although there are some caveats (see next bullet). Variablke is never check against null in the class to avoid NPE, so the fix only follows general approach of the code.
   - FileTxnSnapLog.truncateLog  calls the close() method setting txnLog to null, but later resets the txnLog with a new instance, so in between all the calls that involve txnLog are exposed to NPE. Is it expected that class is called from multiple threads? Because if that is the case, synchronization is missing
   - A Closeable class as a general rule SHOULD NOT be used after closed, but class is not protected to that (even internally the close method is called internally). Actually when the method is called internally there are side effects as commented in pevious bullet
   - This class looks is accessed from multiple threads (can you confirm?), but for instance txnLog variable is not safely publish (e.g. as volatile) or synchronized at all.
   
   
   I do not have exprience with ZK internals, but looks to me that there are some weird race conditions on shutdown (or when TX log is truncated) that prevents the flow to run smoothly and at least in my preliminar investigation I do not see a clear way out. Could you provide me a hint how to continue? I do not see how the problem can be fixed in the shutdown method (or only there)
   
   
   Thanks in advance
   
   /Chevarius
   
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jun/20 10:40;githubbot;600","eolivelli commented on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-648633149


   I added a comment to the JIRA
   https://issues.apache.org/jira/browse/ZOOKEEPER-3803
   
   it is better to fix this problem here in ZooKeeper


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jun/20 07:00;githubbot;600","hanm commented on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-711489711


   Should we close this pull request given the appertained JIRA ticket ZOOKEEPER-3803 is closed? 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Oct/20 03:24;githubbot;600","eolivelli closed pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Oct/20 08:01;githubbot;600","eolivelli commented on pull request #1373:
URL: https://github.com/apache/zookeeper/pull/1373#issuecomment-711797077


   @hanm you are right
   
   @chevaris  feel free to reopen the ticket


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Oct/20 08:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,,CURATOR-575,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jun 25 06:48:12 UTC 2020,,,,,,,,,,"0|z0dva0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Apr/20 05:40;eolivelli;Interesting.
I have started a discussion on the ML about this error.
We agree that we should fix it.
It is not a problem in production but only for unit tests.
In production the script shuts down the server with a kill -9 so this code won't run.

Do you want to send a patch? The trivial fix is to add a null check and do not invoke the method ;;;","06/Jun/20 08:29;evaristojosec@yahoo.es;Hi there

I have not seen the way to upload a file (I assume I have nor permissions), so I attach a minor patch here

 

I understand from your suggestion that this patch with null check should be enough to cover this... 

 

diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java b/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 index eddeae8..ab2c01e 100644
 — a/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 +++ b/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 @@ -318,6 +318,11 @@
 DataTree dt,
 Map<Long, Integer> sessions,
 PlayBackListener listener) throws IOException {
 + // Prevent NPE on TestingServer close() in which method is invoked
 + // once this instance is closed
 + if (txnLog == null) {

+ return 0;

+ }

TxnIterator itr = txnLog.read(dt.lastProcessedZxid + 1);
 long highestZxid = dt.lastProcessedZxid;
 TxnHeader hdr;

 

Cheers,

/Chevaris;;;","06/Jun/20 15:38;eolivelli;Can you please open a PR on github?;;;","06/Jun/20 17:31;evaristojosec@yahoo.es;Sure

https://github.com/apache/zookeeper/pull/1373;;;","12/Jun/20 20:20;evaristojosec@yahoo.es;Could you take a look? Should be very fast :);;;","20/Jun/20 18:58;evaristojosec@yahoo.es;I have double check again the ticket and I think the problem is in Curator's code...

 

Basically Curator's TestingZookeeperServer starts a ZookeeperServer in a  new thread. The server code is in Curator's TesringZookeeperMain in method internalRunFromConfig... basically when the started thread to run the server is interrupted the code closes txnLog

} finally {
 if (txnLog != null) {
 txnLog.close();
 }



But on the other hand on Curator's TestingZookeeperMain#close calls ZKServer shutdown method

 

So, there is a race condition because if the mentioned finally on first thread is called before server shutdown (invoked by close in another thread), you are getting the NPE.

 

For instance, ZookeeperServerMain runs all the logic in a single thread (server starts, thread is blocked, when shutdownLatch is invoked the shutdown run in the same thread ;;;","24/Jun/20 06:59;eolivelli;[~evaristojosec@yahoo.es] I think that the best fix in Curator would be to use ZooKeeperServerMain in TestingServer in curator.

But I see the same error on another Non-OpenSource product of my company, so the problem is to be fixed in ZooKeeper, because as we have two cases there will be more and more.

 

 
{code:java}
20-04-10-10-59-40 SyncRequestProcessor exited!
20-04-10-10-59-40 PrepRequestProcessor exited loop!
20-04-10-10-59-40 shutdown of request processor complete

zkservermainrunner 1586509180510 Error : java.lang.NullPointerException
java.lang.NullPointerException
     at org.apache.zookeeper.server.persistence.FileTxnSnapLog.fastForwardFromEdits(FileTxnSnapLog.java:321)
     at org.apache.zookeeper.server.ZKDatabase.fastForwardDataBase(ZKDatabase.java:300)
     at org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:821)
     at org.apache.zookeeper.server.ZooKeeperServer.shutdown(ZooKeeperServer.java:772)
     at org.apache.zookeeper.server.NettyServerCnxnFactory.shutdown(NettyServerCnxnFactory.java:657)
     at org.apache.zookeeper.server.ZooKeeperServerMain.shutdown(ZooKeeperServerMain.java:219)
     at magnews.zookeeper.ZookeeperServerEmbedded$CloseableZooKeeperServerMain.close(ZookeeperServerEmbedded.java:148)
     at magnews.zookeeper.ZookeeperServerEmbedded$2.run(ZookeeperServerEmbedded.java:229)
ZK server died. Requsting stop on JVM
{code};;;","24/Jun/20 11:56;evaristojosec@yahoo.es;Hi Enrico,

I do not see any proper manner to fix the reported bug in Zookeeper.

I see 2 different problems to fix here:

1.- Zookeeper does not  provide a clear API/user guide about how to embed zookeeper in a java process (In this case how to stop is not clear). As of today looks to me that every project that is embedding Zookeeper is trying their best. I do not think your proposal to remove shutdown calls from cnxCtx is solving the problem reported here. Maybe there should a different ticket to provide a clear API to make ZK embeddable component, and the proper solution is discussed there. The solution could be a new API to provide better documentation about how do it. I do not know what is best.

2.- It is clear that Curator is using the wrong calls for closing the ZK server as of today, so that needs a fix on Curator's code. I do not see a different manner. It is true that while first problem is not solved, nobody will assure that embedding zookeeper will be future proof

 ;;;","25/Jun/20 01:17;randgalt;https://github.com/apache/curator/pull/368;;;","25/Jun/20 06:48;eolivelli;I am closing this issue

the fix on Curator can be taken as example by other projects (CURATOR-575);;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Jenkins link in pom,ZOOKEEPER-3801,13299360,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ctubbsii,ctubbsii,ctubbsii,18/Apr/20 10:27,10/Sep/20 10:43,13/Jul/23 09:08,29/Aug/20 15:52,,,,,,,,,,3.5.9,3.6.2,3.7.0,,,build,,,,0,pull-request-available,,"To improve the stability of Jenkins links, the views have been updated to use a single letter prefix.

So, the pom.xml should be updated to point to https://builds.apache.org/view/Z/view/ZooKeeper/ ",,ctubbsii,,,,,,,,,,,,,,,,,,,"ctubbsii commented on pull request #1324: ZOOKEEPER-3801: Fix Jenkins link
URL: https://github.com/apache/zookeeper/pull/1324
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 10:29;githubbot;600","ctubbsii commented on issue #1324: ZOOKEEPER-3801: Fix Jenkins link
URL: https://github.com/apache/zookeeper/pull/1324#issuecomment-615851919
 
 
   > How can this improve the stability of the build?
   > 
   > Btw LGTM
   
   It doesn't have any impact at all on the stability of the build jobs themselves, only the ability to locate the jobs with predictable links.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 11:56;githubbot;600","symat commented on issue #1324:
URL: https://github.com/apache/zookeeper/pull/1324#issuecomment-618251791


   do you know why the Jenkins job fails?
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4421/
   
   it is like if it would try to use `ant` on the master branch


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Apr/20 08:13;githubbot;600","ctubbsii commented on issue #1324:
URL: https://github.com/apache/zookeeper/pull/1324#issuecomment-618264151


   @symat  It looks like the PreCommit Jenkins job ran that is configured to run ant (named https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build) instead of the one configured to run Maven (https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/), or maybe in addition to it. No idea why one would run over another... perhaps worth discussing on the mailing list... but it is unrelated to the PR here, which merely fixes a broken link for users and doesn't affect any automation.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Apr/20 08:38;githubbot;600","ctubbsii commented on pull request #1324:
URL: https://github.com/apache/zookeeper/pull/1324#issuecomment-623908653


   @eolivelli  The issue, https://issues.apache.org/jira/browse/ZOOKEEPER-3801 , is still open. I recommend backporting this to all active branches.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/May/20 07:49;githubbot;600","eolivelli opened a new pull request #1440:
URL: https://github.com/apache/zookeeper/pull/1440


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/20 12:56;githubbot;600","eolivelli commented on pull request #1440:
URL: https://github.com/apache/zookeeper/pull/1440#issuecomment-681932157


   @ctubbsii PTAL this is a follow up of your patch
   https://github.com/apache/zookeeper/pull/1324


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/20 12:58;githubbot;600","asfgit closed pull request #1440:
URL: https://github.com/apache/zookeeper/pull/1440


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/20 16:58;githubbot;600","symat commented on pull request #1440:
URL: https://github.com/apache/zookeeper/pull/1440#issuecomment-682077655


   merge done, thanks @eolivelli !
   (I merged to all active branches to have the pom file up-to-date everywhere)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/20 17:08;githubbot;600","eolivelli commented on pull request #1440:
URL: https://github.com/apache/zookeeper/pull/1440#issuecomment-682078357


   Thank you @sysmat and @ctubbsii


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/20 17:09;githubbot;600","eolivelli edited a comment on pull request #1440:
URL: https://github.com/apache/zookeeper/pull/1440#issuecomment-682078357


   Thank you @symat and @ctubbsii


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Aug/20 17:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Apr 18 10:29:58 UTC 2020,,,,,,,,,,"0|z0dsiw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Apr/20 10:29;ctubbsii;Patch available in above linked PR.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Conflict between fatjar and full-build Maven profiles in branch-3.6,ZOOKEEPER-3797,13299338,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,eolivelli,eolivelli,eolivelli,18/Apr/20 07:10,18/Apr/20 17:18,13/Jul/23 09:08,18/Apr/20 17:16,3.6.0,3.6.1,,,,,,,,3.6.0,3.6.1,,,,build,,,,0,pull-request-available,,"fatjat and full-build profiles conflict, because both enable the fatjar module.
but with full-build the fatjar is not actually built.

This is an example of error


{code:java}
[eolivelli@localhost zookeeper]$ mvn clean -Pfull-build,fatjar
[INFO] Scanning for projects...
[ERROR] [ERROR] Project 'org.apache.zookeeper:zookeeper-contrib-fatjar:3.6.1-SNAPSHOT' is duplicated in the reactor @ 
[ERROR] Project 'org.apache.zookeeper:zookeeper-contrib-fatjar:3.6.1-SNAPSHOT' is duplicated in the reactor -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, pl
{code}

The minimal fix is to enable fatjar even with full-build profile.
The full-build profile is meant to build all of the modules, and it is used during the release process as well",,eolivelli,,,,,,,,,,,,,,,,,,,"eolivelli commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323
 
 
   Enable fatjar module in full-build profile.
   This is a fix only for branch-3.6, on master branch maven structure is changing, there is no need for this fix 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:13;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615655260
 
 
   @symat @nkalmar @ctubbsii PTAL
   I really want to unblock the 3.6.1 release as soon as possible
   thanks in advance
   
   This is the minimal fix I can image in order to make the 3.6.1 release.
   We are changing Maven module structure in 3.7.0 so no need to complicate things in 3.6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:14;githubbot;600","TisonKun commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#discussion_r410662160
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -258,6 +258,7 @@
     <profile>
       <id>full-build</id>
       <modules>
+        <module>zookeeper-it</module>
 
 Review comment:
   What the reason of this change? It seems a change we should cheery pick for master.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:27;githubbot;600","eolivelli commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#discussion_r410662590
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -258,6 +258,7 @@
     <profile>
       <id>full-build</id>
       <modules>
+        <module>zookeeper-it</module>
 
 Review comment:
   Because fatjar needs it.
   master branch is differentf from branch-3.6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:30;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615678559
 
 
   we have now branch release-3.6.1 for 3.6.1 release.
   This is our way.
   We cut a release branch when we start the release process.
   Then the release manager handles the release branch, but the main branch for 3.6 release version is open for new commits and it has 3.6.2-SNAPSHOT version
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:31;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615678836
 
 
   thank you @TisonKun 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:32;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615679419
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:32;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615680107
 
 
   it looks like maven build does not start on CI
   but the ANT build started but there is not ANT build.xml in branch-3.6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 07:32;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615716731
 
 
   We are using preparationGoals only in order to fix c client files.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 08:00;githubbot;600","ctubbsii commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615741450
 
 
   > We are using preparationGoals only in order to fix c client files.
   
   I'm not sure I understand this comment. `maven-release-plugin` updates the POM versions during `release:prepare`. Will `release:prepare` update the versions of all modules without specifying `-Pfull-build` in `<preparationGoals>`?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 08:19;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615749486
 
 
   AFAIK preparationGoals and completion goals are additional goals to execute in different steps of the procedure.
   
   The current procedure works well and modifies the files on the c client that are not handled by Maven.
   
   I think there is no need to change.
   I will add a comment on your patch on the master branch
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 08:25;githubbot;600","ctubbsii commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615814548
 
 
   Okay, the part where I was confused is how to activate all the modules during version-bumping when `release:prepare` runs. Apparently the way to activate this would be `mvn -Pfull-build release:prepare`, rather than add it to `<preparationGoals>`.
   
   I've never run a Maven project where all modules weren't activated by default, so I was a little confused on how to deal with that for releases.
   
   You will still need to fix the project parent version in zookeeper-contrib/zookeeper-contrib-fatjar/pom.xml and zookeeper-it/pom.xml so it matches the rest of the project.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 09:13;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615818162
 
 
   @ctubbsii I have another problem.
   The zookeeper-it module needs fatjar in order to run but fatjar needs zookeeper-it to be built.
   This is very annoying, it is a circular dependency
   I am going to add skipTests in zookeeper-it in case of ""full-build""
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 09:16;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615826761
 
 
   With this change I am able to run the full build with -Dfull-build, skipping tests of contrib and zookeeper-it
   
   @anmolnar @nkalmar @symat or any other commmiters PTAL
   
   I feel the review of @ctubbsii and @TisonKun are very useful and maybe they are enough to commit this patch
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 09:23;githubbot;600","ctubbsii commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#discussion_r410674730
 
 

 ##########
 File path: zookeeper-it/pom.xml
 ##########
 @@ -33,6 +33,22 @@
     ZooKeeper system tests
   </description>
 
+  <profiles>
+    <profile>
+      <id>full-build</id>
+      <build>
+         <plugins>
+            <plugin>
+              <artifactId>maven-surefire-plugin</artifactId>
+              <configuration>
+                 <skipTests>true</skipTests>
+              </configuration>
+	    </plugin>
+         </plugins>
+      </build>
 
 Review comment:
   This can be shorter.
   
   ```suggestion
         <properties>
            <skipTests>true</skipTests>
         </properties>
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 09:32;githubbot;600","eolivelli commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#discussion_r410680790
 
 

 ##########
 File path: zookeeper-it/pom.xml
 ##########
 @@ -33,6 +33,22 @@
     ZooKeeper system tests
   </description>
 
+  <profiles>
+    <profile>
+      <id>full-build</id>
+      <build>
+         <plugins>
+            <plugin>
+              <artifactId>maven-surefire-plugin</artifactId>
+              <configuration>
+                 <skipTests>true</skipTests>
+              </configuration>
+	    </plugin>
+         </plugins>
+      </build>
 
 Review comment:
   done, thank you @ctubbsii 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 10:39;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615839562
 
 
   Spotbugs failed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 10:41;githubbot;600","ctubbsii commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#discussion_r410681925
 
 

 ##########
 File path: zookeeper-it/pom.xml
 ##########
 @@ -33,6 +33,16 @@
     ZooKeeper system tests
   </description>
 
+  <profiles>
+    <profile>
+      <id>full-build</id>
+      <properties>
+         <skipTests>true</skipTests>
+         <spotbugs.skip>true</spotbugs.skip>
 
 Review comment:
   Lesson learned from #1314 : you might need to skip checkstyle, too.
   
   ```suggestion
            <checkstyle.skip>true</checkstyle.skip>
            <skipTests>true</skipTests>
            <spotbugs.skip>true</spotbugs.skip>
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 10:49;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615842737
 
 
   the precommit job will run someday :-)
   there is a huge queue
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 11:08;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615864136
 
 
   Build completed with success.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 12:51;githubbot;600","breed commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615895260
 
 
   +1 nice work everyone!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 16:04;githubbot;600","breed commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615897289
 
 
   per the bylaws, http://zookeeper.apache.org/bylaws.html, it looks like we can't get this in until Monday evening since we have to allow 1 business day for voting :'( this is a pretty simple patch, do we have precedent for pushing release changes faster? @fpj @phunt 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 16:16;githubbot;600","phunt commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615903598
 
 
   I believe the intent is to ensure there is sufficient time for more than just committer/reviewer to take a look before something is committed. This is a bug fix that a number of folks have already commented on, that I don't think would be controversial? I think there has been precedent in the past for such things.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 16:58;githubbot;600","eolivelli commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615904161
 
 
   @breed I would add that this patch does not  touch  zk internals, no risks. It is only build boilerplate.
   
   Thank you @breed @phunt
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 17:02;githubbot;600","phunt commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615906184
 
 
   +1, basic testing worked for me (reg/full builds), merged onto branch-3.6 and release-3.6.1 branches.
   
   Thanks all!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 17:15;githubbot;600","phunt commented on pull request #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 17:15;githubbot;600","breed commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615906525
 
 
   thank you @phunt !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 17:17;githubbot;600","breed commented on issue #1323: ZOOKEEPER-3797 Conflict between fatjar and full-build Maven profiles
URL: https://github.com/apache/zookeeper/pull/1323#issuecomment-615906694
 
 
   and thank you @eolivelli, @TisonKun, and @ctubbsii for resolving this so quickly!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Apr/20 17:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16800,,,0,16800,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3791,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,2020-04-18 07:10:21.0,,,,,,,,,,"0|z0dse0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request throttling is broken when RequestThrottler is disabled or configured incorrectly.,ZOOKEEPER-3793,13297659,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,hanm,hanm,hanm,10/Apr/20 17:55,23/Oct/21 18:20,13/Jul/23 09:08,12/Apr/20 09:16,3.6.0,,,,,,,,,3.6.1,3.7.0,,,,server,,,,0,pull-request-available,,"When RequestThrottler is not enabled or is enabled but configured incorrectly, ZooKeeper server will stop throttling. This is a serious bug as without request throttling, it's fairly easy to overwhelm ZooKeeper which leads to all sorts of issues. 

This is a regression introduced in ZOOKEEPER-3243, where the total number of queued requests in request processing pipeline is not taking into consideration when deciding whether to throttle or not, or only taken into consideration conditionally based on RequestThrottler's configurations. We should make sure always taking into account the number of queued requests in request processing pipeline before making throttling decisions.",,hanm,kezhuw,Zhewei Hu,,,,,,,,,,,,,,,,,"hanm commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316
 
 
   When RequestThrottler is not enabled or is enabled but configured incorrectly, ZooKeeper server will stop throttling. This is a serious bug as without request throttling, it's fairly easy to overwhelm ZooKeeper which leads to all sorts of issues.
   
   This is a regression introduced in ZOOKEEPER-3243, where the total number of queued requests in request processing pipeline is not taking into consideration when deciding whether to throttle or not, or only taken into consideration conditionally based on RequestThrottler's configurations. We should make sure always taking into account the number of queued requests in request processing pipeline before making throttling decisions.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 18:04;githubbot;600","hanm commented on issue #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#issuecomment-612149794
 
 
   @jhuan31 do you mind review this? 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 18:07;githubbot;600","hanm commented on issue #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#issuecomment-612149794
 
 
   @jhuan31 do you mind review this? 
   also cc @lvfangmin 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 18:07;githubbot;600","eolivelli commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#discussion_r406879391
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/RequestThrottlerTest.java
 ##########
 @@ -307,4 +308,37 @@ public void testLargeRequestThrottling() throws Exception {
         metrics = MetricsUtils.currentServerMetrics();
         Assert.assertEquals(2, (long) metrics.get(""stale_replies""));
     }
+
+    @Test
+    public void testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled() throws Exception {
+        System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
+        ServerMetrics.getMetrics().resetAll();
+
+        // Here we disable RequestThrottler and let incoming requests queued at first request processor.
+        RequestThrottler.setMaxRequests(0);
+        resumeProcess = new CountDownLatch(1);
+        int totalRequests = 10;
+        submitted = new CountDownLatch(totalRequests);
+
+        for (int i = 0; i < totalRequests; i++) {
+            zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
+                    + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
+            }, null);
+        }
+
+        submitted.await(5, TimeUnit.SECONDS);
+
+        resumeProcess.countDown();
+
+        // We should start throttling instead of queuing more requests.
+        //
+        // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
+        // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
+        // allow this single request coming in. So the total number of queued requests in processing pipeline would
+        // be GLOBAL_OUTSTANDING_LIMIT + 2.
+        assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
+                (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+
+        System.clearProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT);
 
 Review comment:
   It would be better to clear the property in a finally block
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 18:16;githubbot;600","hanm commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#discussion_r406884310
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/RequestThrottlerTest.java
 ##########
 @@ -307,4 +308,37 @@ public void testLargeRequestThrottling() throws Exception {
         metrics = MetricsUtils.currentServerMetrics();
         Assert.assertEquals(2, (long) metrics.get(""stale_replies""));
     }
+
+    @Test
+    public void testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled() throws Exception {
+        System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
+        ServerMetrics.getMetrics().resetAll();
+
+        // Here we disable RequestThrottler and let incoming requests queued at first request processor.
+        RequestThrottler.setMaxRequests(0);
+        resumeProcess = new CountDownLatch(1);
+        int totalRequests = 10;
+        submitted = new CountDownLatch(totalRequests);
+
+        for (int i = 0; i < totalRequests; i++) {
+            zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
+                    + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
+            }, null);
+        }
+
+        submitted.await(5, TimeUnit.SECONDS);
+
+        resumeProcess.countDown();
+
+        // We should start throttling instead of queuing more requests.
+        //
+        // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
+        // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
+        // allow this single request coming in. So the total number of queued requests in processing pipeline would
+        // be GLOBAL_OUTSTANDING_LIMIT + 2.
+        assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
+                (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+
+        System.clearProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT);
 
 Review comment:
   updated
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 18:27;githubbot;600","eolivelli commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#discussion_r407038635
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/RequestThrottlerTest.java
 ##########
 @@ -311,34 +311,38 @@ public void testLargeRequestThrottling() throws Exception {
 
     @Test
     public void testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled() throws Exception {
-        System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
-        ServerMetrics.getMetrics().resetAll();
+        try {
+            System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
 
-        // Here we disable RequestThrottler and let incoming requests queued at first request processor.
-        RequestThrottler.setMaxRequests(0);
-        resumeProcess = new CountDownLatch(1);
-        int totalRequests = 10;
-        submitted = new CountDownLatch(totalRequests);
+            ServerMetrics.getMetrics().resetAll();
 
-        for (int i = 0; i < totalRequests; i++) {
-            zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
-                    + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
-            }, null);
-        }
+            // Here we disable RequestThrottler and let incoming requests queued at first request processor.
+            RequestThrottler.setMaxRequests(0);
+            resumeProcess = new CountDownLatch(1);
+            int totalRequests = 10;
+            submitted = new CountDownLatch(totalRequests);
 
-        submitted.await(5, TimeUnit.SECONDS);
-
-        resumeProcess.countDown();
-
-        // We should start throttling instead of queuing more requests.
-        //
-        // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
-        // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
-        // allow this single request coming in. So the total number of queued requests in processing pipeline would
-        // be GLOBAL_OUTSTANDING_LIMIT + 2.
-        assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
-                (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+            for (int i = 0; i < totalRequests; i++) {
+                zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
+                        + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
+                }, null);
+            }
 
-        System.clearProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT);
+            submitted.await(5, TimeUnit.SECONDS);
+
+            resumeProcess.countDown();
+
+            // We should start throttling instead of queuing more requests.
+            //
+            // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
+            // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
+            // allow this single request coming in. So the total number of queued requests in processing pipeline would
+            // be GLOBAL_OUTSTANDING_LIMIT + 2.
+            assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
+                    (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+        } catch (Exception e) {
 
 Review comment:
   ops, this is not good.
   I missed this part.
   if you catch every Exception you are making JUnit ignore errors
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 09:01;githubbot;600","eolivelli commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#discussion_r407038889
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/RequestThrottlerTest.java
 ##########
 @@ -311,34 +311,38 @@ public void testLargeRequestThrottling() throws Exception {
 
     @Test
     public void testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled() throws Exception {
-        System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
-        ServerMetrics.getMetrics().resetAll();
+        try {
+            System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
 
-        // Here we disable RequestThrottler and let incoming requests queued at first request processor.
-        RequestThrottler.setMaxRequests(0);
-        resumeProcess = new CountDownLatch(1);
-        int totalRequests = 10;
-        submitted = new CountDownLatch(totalRequests);
+            ServerMetrics.getMetrics().resetAll();
 
-        for (int i = 0; i < totalRequests; i++) {
-            zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
-                    + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
-            }, null);
-        }
+            // Here we disable RequestThrottler and let incoming requests queued at first request processor.
+            RequestThrottler.setMaxRequests(0);
+            resumeProcess = new CountDownLatch(1);
+            int totalRequests = 10;
+            submitted = new CountDownLatch(totalRequests);
 
-        submitted.await(5, TimeUnit.SECONDS);
-
-        resumeProcess.countDown();
-
-        // We should start throttling instead of queuing more requests.
-        //
-        // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
-        // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
-        // allow this single request coming in. So the total number of queued requests in processing pipeline would
-        // be GLOBAL_OUTSTANDING_LIMIT + 2.
-        assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
-                (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+            for (int i = 0; i < totalRequests; i++) {
+                zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
+                        + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
+                }, null);
+            }
 
-        System.clearProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT);
+            submitted.await(5, TimeUnit.SECONDS);
+
+            resumeProcess.countDown();
+
+            // We should start throttling instead of queuing more requests.
+            //
+            // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
+            // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
+            // allow this single request coming in. So the total number of queued requests in processing pipeline would
+            // be GLOBAL_OUTSTANDING_LIMIT + 2.
+            assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
+                    (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+        } catch (Exception e) {
 
 Review comment:
   I can amend your commit @hanm if you do not have time.
   I would like to prepare the RC0 of 3.6.1 today or tomorrow
   
   sorry I missed this problem
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 09:04;githubbot;600","hanm commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316#discussion_r407141337
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/RequestThrottlerTest.java
 ##########
 @@ -311,34 +311,38 @@ public void testLargeRequestThrottling() throws Exception {
 
     @Test
     public void testGlobalOutstandingRequestThrottlingWithRequestThrottlerDisabled() throws Exception {
-        System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
-        ServerMetrics.getMetrics().resetAll();
+        try {
+            System.setProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT, GLOBAL_OUTSTANDING_LIMIT);
 
-        // Here we disable RequestThrottler and let incoming requests queued at first request processor.
-        RequestThrottler.setMaxRequests(0);
-        resumeProcess = new CountDownLatch(1);
-        int totalRequests = 10;
-        submitted = new CountDownLatch(totalRequests);
+            ServerMetrics.getMetrics().resetAll();
 
-        for (int i = 0; i < totalRequests; i++) {
-            zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
-                    + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
-            }, null);
-        }
+            // Here we disable RequestThrottler and let incoming requests queued at first request processor.
+            RequestThrottler.setMaxRequests(0);
+            resumeProcess = new CountDownLatch(1);
+            int totalRequests = 10;
+            submitted = new CountDownLatch(totalRequests);
 
-        submitted.await(5, TimeUnit.SECONDS);
-
-        resumeProcess.countDown();
-
-        // We should start throttling instead of queuing more requests.
-        //
-        // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
-        // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
-        // allow this single request coming in. So the total number of queued requests in processing pipeline would
-        // be GLOBAL_OUTSTANDING_LIMIT + 2.
-        assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
-                (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+            for (int i = 0; i < totalRequests; i++) {
+                zk.create(""/request_throttle_test- "" + i, (""/request_throttle_test- ""
+                        + i).getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT, (rc, path, ctx, name) -> {
+                }, null);
+            }
 
-        System.clearProperty(ZooKeeperServer.GLOBAL_OUTSTANDING_LIMIT);
+            submitted.await(5, TimeUnit.SECONDS);
+
+            resumeProcess.countDown();
+
+            // We should start throttling instead of queuing more requests.
+            //
+            // We always allow up to GLOBAL_OUTSTANDING_LIMIT + 1 number of requests coming in request processing pipeline
+            // before throttling. For the next request, we will throttle by disabling receiving future requests but we still
+            // allow this single request coming in. So the total number of queued requests in processing pipeline would
+            // be GLOBAL_OUTSTANDING_LIMIT + 2.
+            assertEquals(Integer.parseInt(GLOBAL_OUTSTANDING_LIMIT) + 2,
+                    (long) MetricsUtils.currentServerMetrics().get(""prep_processor_request_queued""));
+        } catch (Exception e) {
 
 Review comment:
   fixed by rethrowing.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/20 03:45;githubbot;600","eolivelli commented on pull request #1316: ZOOKEEPER-3793: Request throttling is broken when RequestThrottler is disabled or configured incorrectly..
URL: https://github.com/apache/zookeeper/pull/1316
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Apr/20 09:15;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Oct 23 18:20:51 UTC 2021,,,,,,,,,,"0|z0dicg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Oct/21 18:20;Zhewei Hu;Hi [~hanm], I am trying to understand what does outstanding requests mean.

Q1. In the below code, why don't we compare the globalOutstandingLimit and outStandingCount directly? Instead, we compare the outstanding limit with requests that have not entered the processing pipeline (getInflight) and requests in process (getInProcess).
{code:java}
public boolean shouldThrottle(long outStandingCount) {        
    int globalOutstandingLimit = getGlobalOutstandingLimit();        
    if (globalOutstandingLimit < getInflight() || globalOutstandingLimit < getInProcess()) {            
        return outStandingCount > 0;        
    }        
    return false;    
}
{code}
Q2. When we calculate the outstandinglimit, why we divide the limit with <quorum size minus one> instead of <quorum size> directly?
{code:java}
int divisor = self.getQuorumSize() > 2 ? self.getQuorumSize() - 1 : 1;        
int globalOutstandingLimit = super.getGlobalOutstandingLimit() / divisor
{code}
Thank you for your time!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Reconcile document site in 3.5.7 & 3.6.0,ZOOKEEPER-3792,13297579,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,nkalmar,tison,tison,10/Apr/20 09:16,30/Jun/21 04:03,13/Jul/23 09:08,21/May/20 10:13,3.5.7,3.6.0,,,,,,,,3.5.9,3.6.2,,,,documentation,,,,0,pull-request-available,,"After ZOOKEEPER-3369 we generate document in {{apidocs/}} instead of {{api/}} before. Moreover, the document site cannot proper linked to apidocs in 3.6.0(but in 3.5.7, thought it is wrong in {{website}} branch, it is manually corrected in {{asf-site}} branch}}.

I propose we generate single aggregated document and place it under {{api/}} folder, as well as bumping website for the update.",,nkalmar,symat,tison,,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1315: ZOOKEEPER-3792: Generate aggregated documents
URL: https://github.com/apache/zookeeper/pull/1315
 
 
   After ZOOKEEPER-3369 we generate document in apidocs/ instead of api/ before. Moreover, the document site cannot proper linked to apidocs in 3.6.0(but in 3.5.7, thought it is wrong in website branch, it is manually corrected in asf-site branch}}.
   
   I propose we generate single aggregated document and place it under api/ folder, as well as bumping website for the update.
   
   cc @eolivelli @anmolnar I'm not sure the procedure we bump website, possibly we have a clear README or page on wiki.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 09:18;githubbot;600","TisonKun commented on pull request #1315: ZOOKEEPER-3792: Generate aggregated documents
URL: https://github.com/apache/zookeeper/pull/1315#discussion_r406678117
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -590,15 +590,15 @@
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-javadoc-plugin</artifactId>
-          <version>3.0.1</version>
+          <version>3.2.0</version>
           <configuration>
             <doclint>none</doclint>
           </configuration>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-assembly-plugin</artifactId>
-          <version>3.1.0</version>
+          <version>3.2.0</version>
 
 Review comment:
   Version bump to defeat packing bug.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 09:19;githubbot;600","nkalmar opened a new pull request #1362:
URL: https://github.com/apache/zookeeper/pull/1362


   Fix path that leads to the apidocs. I will manually correct the already generated paths in asf-site after this has been merged.
   This PR needs to land on master, 3.6 and 3.5


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/May/20 12:20;githubbot;600","nkalmar commented on pull request #1362:
URL: https://github.com/apache/zookeeper/pull/1362#issuecomment-631979901


   Thanks @symat , since this is a trivial website fix I'll commit it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 09:17;githubbot;600","asfgit closed pull request #1362:
URL: https://github.com/apache/zookeeper/pull/1362


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 09:20;githubbot;600","nkalmar commented on pull request #1362:
URL: https://github.com/apache/zookeeper/pull/1362#issuecomment-631983694


   Committed to master, 3.6 and 3.5 (all active maven branch), I will fix up any previously generated link on the website repo.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/20 09:26;githubbot;600","tisonkun closed pull request #1315:
URL: https://github.com/apache/zookeeper/pull/1315


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jun/21 04:03;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 21 10:12:44 UTC 2020,,,,,,,,,,"0|z0dhuo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/20 12:40;symat;I am not sure about the status of this ticket. But this is something we should fix. Currently the link for the API docs is broken for both 3.6.1 and 3.5.7. I am about to publish the website after 3.5.8, and we are still having this issue. (CC: [~eolivelli] , [~nkalmar] );;;","11/May/20 13:38;nkalmar;The jute apidocs have been separated from ""other"" api docs. The directory structure changed, and website template did not change with it. I noticed when doing the 3.5.7 release, and manually corrected the links. We had a discussion on dev list, which I can't find right now... maybe it was on slack?
Anyway, we talked that probably jute api docs is not even necessary to link. Looks like we never got to the point to actually fix, sorry about that.

So the apidocs gets generated no problem, it's just the path that needs to be updated.;;;","11/May/20 14:28;symat;>  I noticed when doing the 3.5.7 release, and manually corrected the links

I think your manual correction has been updated since then, as it doesn't work now: [https://zookeeper.apache.org/doc/r3.5.7/index.html]

 

> Anyway, we talked that probably jute api docs is not even necessary to link

yep, the Jute classes are auto-generated for our internal API, I don't see much value to publish javadoc for them.

 

[~tison] do you plan to work on the fix? (this is our current procedure to generate the website: [https://github.com/apache/zookeeper/tree/website] )

If you have no time for this right now, then do you mind if I take this over? (although I don't think this is very high priority, nobody asked for the javadocs, and we publish the source in maven central, so I think most of the developers use their IDE to read it);;;","11/May/20 16:12;tison;Thanks for your attentions. It is mid-night in my timezone. Will take a look tomorrow.;;;","12/May/20 05:46;tison;Hi [~symat]! You're the release manager so I think it would be better you take over the ticket for verifying it in the release process.

You can make use of the linked PR whose idea is mainly ""generate aggregate java apidoc"". FYI, previously we only delivered zookeeper-server java apidoc, and the manner seems changed with ZOOKEEPER-3369(a2aecb9acc420c95f60b6649ffcbd4e0184cc0cd).;;;","12/May/20 06:38;symat;Thanks [~tison], I will try to fix the website generation script, and also trying to fix the issue for the older releases (by hardcoding the new link in the old released documentation both on the {{website}} and {{asf-side}} branches to avoid these changes to be overwritten) ;;;","20/May/20 11:45;nkalmar;We either correct the link to point to /apidocs/zookeeper-server (we have apidocs for jute, but agreed to not link that), or generate the apidocs to /api folder as we did in 3.5.5 and prior. Both requires changes in active branches (not just website branch).

I would go with changing the link to apidocs/zookeeper-server;;;","21/May/20 10:12;nkalmar;I updated the link, now it generates the right path. I also updated every generated docs since 3.5.5 to reflect the new apidocs path both in afs-site and in website. Tested the live apache page, apidocs now points to the correct path.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Replace filter with list comprehension for returning list in zk-merge-pr.py,ZOOKEEPER-3782,13295559,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,tison,tison,tison,01/Apr/20 15:23,28/Mar/21 08:55,13/Jul/23 09:08,08/Apr/20 12:05,,,,,,,,,,3.7.0,,,,,,,,,0,pull-request-available,,"After Py3, {{filter}} return a {{filter object}} instead of {{list object}}, which causes

Traceback (most recent call last):
  File ""zk-merge-pr.py"", line 533, in <module>
    main()
  File ""zk-merge-pr.py"", line 519, in main
    resolve_jira_issues(commit_title, merged_refs, jira_comment)
  File ""zk-merge-pr.py"", line 329, in resolve_jira_issues
    resolve_jira_issue(merge_branches, comment, jira_id)
  File ""zk-merge-pr.py"", line 312, in resolve_jira_issue
    jira_fix_versions = [get_version_json(v) for v in fix_versions]
  File ""zk-merge-pr.py"", line 312, in <listcomp>
    jira_fix_versions = [get_version_json(v) for v in fix_versions]
  File ""zk-merge-pr.py"", line 310, in get_version_json
    return filter(lambda v: v.name == version_str, versions)[0].raw
TypeError: 'filter' object is not subscriptable

We can replace filter with list comprehension to fix it.",,tison,,,,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1303: ZOOKEEPER-3782: Replace filter() with list comprehension for returning list
URL: https://github.com/apache/zookeeper/pull/1303
 
 
   After Py3, `filter` return a `filter object` instead of `list object`, which causes
   
   ```
   Traceback (most recent call last):
     File ""zk-merge-pr.py"", line 533, in <module>
       main()
     File ""zk-merge-pr.py"", line 519, in main
       resolve_jira_issues(commit_title, merged_refs, jira_comment)
     File ""zk-merge-pr.py"", line 329, in resolve_jira_issues
       resolve_jira_issue(merge_branches, comment, jira_id)
     File ""zk-merge-pr.py"", line 312, in resolve_jira_issue
       jira_fix_versions = [get_version_json(v) for v in fix_versions]
     File ""zk-merge-pr.py"", line 312, in <listcomp>
       jira_fix_versions = [get_version_json(v) for v in fix_versions]
     File ""zk-merge-pr.py"", line 310, in get_version_json
       return filter(lambda v: v.name == version_str, versions)[0].raw
   TypeError: 'filter' object is not subscriptable
   ```
   
   We can replace filter with list comprehension to fix it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Apr/20 15:25;githubbot;600","TisonKun commented on issue #1303: ZOOKEEPER-3782: Replace filter() with list comprehension for returning list
URL: https://github.com/apache/zookeeper/pull/1303#issuecomment-607317072
 
 
   cc @anmolnar Please verify the change.
   
   I'm sorry that I don't spot it earlier :(
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Apr/20 15:26;githubbot;600","eolivelli commented on pull request #1303: ZOOKEEPER-3782: Replace filter() with list comprehension for returning list
URL: https://github.com/apache/zookeeper/pull/1303
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 12:05;githubbot;600","eolivelli commented on issue #1303: ZOOKEEPER-3782: Replace filter() with list comprehension for returning list
URL: https://github.com/apache/zookeeper/pull/1303#issuecomment-610919128
 
 
   committed
   thank you !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 12:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-04-01 15:23:36.0,,,,,,,,,,"0|z0d660:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper 3.5.7 not creating snapshot,ZOOKEEPER-3781,13295551,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,weichu,weichu,01/Apr/20 14:54,16/May/22 19:13,13/Jul/23 09:08,06/Mar/21 19:43,,,,,,,,,,3.5.10,3.6.4,3.7.0,3.8.0,,,,,,0,pull-request-available,,"Hi,

In our deployment, we are using zookeepers as Kafka quorum.

Recently we upgraded Zookeeper from 3.4.14 to 3.5.7.
During the upgrade, we enabled snapshot.trust.empty and removed it after.
However, about 25% of zookeepers (all on 3.5.7) are not creating snapshot files, so they keep crashing on reboot with ERROR.

{noformat}
ERROR [main:QuorumPeer@937] - Unable to load database on disk
<http://java.io|java.io>.IOException: No snapshot found, but there are log entries. Something is broken!
{noformat}

Nothing suspecious did I find from the zookeeper log.

I managed to reproduce the issue with the data from our servers, I put them in the attachment.",,ananysin,srdo,symat,tharindu,weichu,zhangzs,ztzg,,,,,,,,,,,,,"srdo opened a new pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581


   …ty is true
   
   snapshot.trust.empty is an escape hatch for users upgrading from 3.4.x to later Zookeeper
   versions, allowing nodes to start with a non-empty transaction log but no snapshot.
   
   The intent is for this setting to be enabled for a short while during the upgrade,
   and then disabled again, as the check it disables is a safety feature.
   
   Prior to this PR, a node would only write a snapshot locally if it became leader,
   or if it had fallen so far behind the leader that the leader sent a SNAP message instead
   of a DIFF. This made the upgrade process inconvenient, as not all nodes would create
   a snapshot when snapshot.trust.empty was true, meaning that the safety check could
   not be flipped back on.
   
   This PR makes follower nodes write a local snapshot when they receive NEWLEADER,
   if they have no local snapshot and snapshot.trust.empty is true.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/21 15:06;githubbot;600","srdo commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-762307505


   Additional context here https://mail-archives.apache.org/mod_mbox/zookeeper-dev/202101.mbox/%3cpony-db78e81c2a8c7e7aa50468ebe248816470b8ee2f-8a8224758cb92c542b444f6af8884c82154cdaf2@dev.zookeeper.apache.org%3e


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/21 15:07;githubbot;600","srdo commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-762485045


   I think these test failures are on master as well, see e.g. https://github.com/apache/zookeeper/runs/1717919885. Seems to be tests trying to bind in-use ports.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/21 21:49;githubbot;600","eolivelli commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r560066468



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
##########
@@ -530,6 +530,10 @@ public void takeSnapshot(boolean syncSnap) {
         ServerMetrics.getMetrics().SNAPSHOT_TIME.add(elapsed);
     }
 
+    public boolean shouldForceWriteInitialSnapshotDuring34Migration() {

Review comment:
       there is no need to add 'During34Migration', we can just leave a javadoc

##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }
+            int leaderIndex = qu.getLeaderServer();
+            //Shut down the cluster and delete the snapshots from the followers
+            for (int i = 1; i <= qu.ALL; i++) {
+                qu.shutdown(i);
+                if (i != leaderIndex) {
+                    FileTxnSnapLog txnLogFactory = qu.getPeer(i).peer.getTxnFactory();
+                    List<File> snapshots = txnLogFactory.findNRecentSnapshots(10);
+                    assertTrue(snapshots.size() > 0, ""We have a snapshot to corrupt"");
+                    for (File file : snapshots) {
+                        Files.deleteIfExists(file.toPath());

Review comment:
       we are sure that the file exists, we can just use 'delete', correct ?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/21 10:22;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r560072108



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }
+            int leaderIndex = qu.getLeaderServer();
+            //Shut down the cluster and delete the snapshots from the followers
+            for (int i = 1; i <= qu.ALL; i++) {
+                qu.shutdown(i);
+                if (i != leaderIndex) {
+                    FileTxnSnapLog txnLogFactory = qu.getPeer(i).peer.getTxnFactory();
+                    List<File> snapshots = txnLogFactory.findNRecentSnapshots(10);
+                    assertTrue(snapshots.size() > 0, ""We have a snapshot to corrupt"");
+                    for (File file : snapshots) {
+                        Files.deleteIfExists(file.toPath());

Review comment:
       Yes, will fix




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/21 10:28;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r560072321



##########
File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
##########
@@ -530,6 +530,10 @@ public void takeSnapshot(boolean syncSnap) {
         ServerMetrics.getMetrics().SNAPSHOT_TIME.add(elapsed);
     }
 
+    public boolean shouldForceWriteInitialSnapshotDuring34Migration() {

Review comment:
       Ok, will fix. How about `shouldForceWriteInitialSnapshotAfterLeaderElection`?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jan/21 10:28;githubbot;600","srdo commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-768323461


   @eolivelli I addressed your comments (Sorry for pinging, I'm not sure Github sends messages when I push updates)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/21 14:30;githubbot;600","ztzg commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577767628



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       This section creates transactions, ensuring a reasonable `xzid`, but might *not* result in a snapshot, as it doesn't lower the `snapCount` using `SyncRequestProcessor.setSnapCount`.  (The other tests do, and might run before.  Might be a good idea to be explicit if the goal of running `N_TRANSACTIONS` is to create one?)
   
   This does *not* mean that the test is broken: a snapshot is present, but it is there because of the `initialize` file left behind by `ClientBase.createTmpDir`.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 16:57;githubbot;600","ztzg commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-780699848


   > @ztzg please consider adding this to 3.7.
   
   Okay, noted.
   
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 16:58;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577807308



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       The goal here is not to make the nodes write a snapshot. I just want to put some data in Zookeeper, since if Zookeeper is empty, it will create a snapshot file on boot, even without this change.
   
   The behavior this PR changes is that if Zookeeper is booted with the trust empty property set to true, and the cluster is not empty, then the follower nodes will write a snapshot file if they don't already have one.
   
   I have added a few lines to the test to assert that the data created here is still there once the followers come up, that seems like a healthy thing to check.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:33;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577807308



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       The goal here is not to make the nodes write a snapshot due to hitting the snapcount. I just want to put some data in Zookeeper, since if Zookeeper is empty, it will create a snapshot file on boot, even without this change.
   
   The behavior this PR changes is that if Zookeeper is booted with the trust empty property set to true, and the cluster is not empty, then the follower nodes will write a snapshot file if they don't already have one.
   
   The issue with the code as it is without this change is that if you have a 3.4 cluster with low traffic and you then enable ZOOKEEPER_SNAPSHOT_TRUST_EMPTY and upgrade to 3.5+, then it may take a very long time for follower nodes to write snapshots, since they only do it if they become leader, or if Zookeeper is empty, or if the snapcount is hit.
   
   I have added a few lines to the test to assert that the data created here is still there once the followers come up, that seems like a healthy thing to check.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:35;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577807308



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       The goal here is not to make the nodes write a snapshot due to hitting the snapcount. I just want to put some data in Zookeeper, since if Zookeeper is empty, it will create a snapshot file on boot, even without this change.
   
   The behavior this PR changes is that if Zookeeper is booted with the trust empty property set to true, and the cluster is not empty, then the follower nodes will write a snapshot file if they don't already have one.
   
   The issue with the code as it is without this change is that if you have a 3.4 cluster with low traffic and you then enable ZOOKEEPER_SNAPSHOT_TRUST_EMPTY and upgrade to 3.5+, then it may take a very long time for follower nodes to write snapshots, since they only do it if they become leader, or if Zookeeper is empty, or if the snapcount is hit. That makes ZOOKEEPER_SNAPSHOT_TRUST_EMPTY pretty inconvenient, since you can't remove that property again until all nodes have at least one snapshot.
   
   I have added a few lines to the test to assert that the data created here is still there once the followers come up, that seems like a healthy thing to check.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:36;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577812276



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       I guess I could use another number than N_TRANSACTIONS if it is misleading?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:41;githubbot;600","ztzg commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577814512



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       > The goal here is not to make the nodes write a snapshot due to hitting the snapcount. I just want to put some data in Zookeeper, since if Zookeeper is empty, it will create a snapshot file on boot, even without this change.
   
   Okay.
   
   (I understand the rest of the PR, and don't have any objections.  I was just wondering if the `N_TRANSACTIONS` was because you were trying to hit `snapCount`, like other tests in that file seem to be doing.)
   
   Thank you for the clarification!




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:44;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577814854



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       Just to summarize what this test is intended to do:
   
   It is supposed to set up a quorum with some data in it. It then deletes the snapshots on all follower nodes. This simulates what a low-traffic cluster being upgraded from 3.4 might look like. The cluster is restarted with ZOOKEEPER_SNAPSHOT_TRUST_EMPTY=true, and the test verifies that all nodes get a snapshot written. This will allow the operator to remove ZOOKEEPER_SNAPSHOT_TRUST_EMPTY again and reboot the cluster shortly after, easing migration.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 17:44;githubbot;600","ztzg commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577876677



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       Right; we are on the same page :)
   
   Would you mind rebasing this on top of the latest `master`, so that CI picks the new configuration and re-runs the test suite with a higher chance of success?




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:14;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577894017



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       Sure. Rebased and squashed. FWIW I ran the two failing tests locally, and they passed, so am guessing it's just flakiness.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 19:42;githubbot;600","srdo commented on a change in pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#discussion_r577907599



##########
File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
##########
@@ -143,6 +144,48 @@ public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
         runTest(false, true);
     }
 
+    @Test
+    public void testRestoreWithTrustedEmptySnapFilesWhenFollowing() throws Exception {
+        QuorumUtil qu = new QuorumUtil(1);
+        try {
+            qu.startAll();
+            String connString = qu.getConnectionStringForServer(1);
+            try (ZooKeeper zk = new ZooKeeper(connString, CONNECTION_TIMEOUT, this)) {
+                for (int i = 0; i < N_TRANSACTIONS; i++) {
+                    zk.create(""/node-"" + i, new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+                }
+            }

Review comment:
       Also just a note on rebasing on top of master, since the behavior surprised me, and I thought I'd share: GH Actions' checkout action does not check out the PR branch, it instead creates a merge commit between the PR branch and the target branch, which it then runs the rest of the CI workflow on. So likely the previous run did run with the config from master.




----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/21 20:04;githubbot;600","srdo commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-781620252


   The failing test is a different one this time than last time. I think it's just flaky.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Feb/21 20:38;githubbot;600","srdo commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-786077037


   Turns out it was just a flaky test. I think this should be ready to go in now. I'm not sure what your backporting policy is like, but it would be nice to get on as many branches as possible :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/21 17:36;githubbot;600","ztzg closed pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 19:41;githubbot;600","ztzg commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-792039476


   Thank you, @srdo!  This is now in `master`, `branch-3.7`, and `branch-3.7.0`.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 19:44;githubbot;600","srdo commented on pull request #1581:
URL: https://github.com/apache/zookeeper/pull/1581#issuecomment-792040020


   Sounds good, thank you.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/21 19:46;githubbot;600","symat opened a new pull request, #1876:
URL: https://github.com/apache/zookeeper/pull/1876

   …ty is true
   
   snapshot.trust.empty is an escape hatch for users upgrading from 3.4.x to later Zookeeper
   versions, allowing nodes to start with a non-empty transaction log but no snapshot.
   
   The intent is for this setting to be enabled for a short while during the upgrade,
   and then disabled again, as the check it disables is a safety feature.
   
   Prior to this PR, a node would only write a snapshot locally if it became leader,
   or if it had fallen so far behind the leader that the leader sent a SNAP message instead
   of a DIFF. This made the upgrade process inconvenient, as not all nodes would create
   a snapshot when snapshot.trust.empty was true, meaning that the safety check could
   not be flipped back on.
   
   This PR makes follower nodes write a local snapshot when they receive NEWLEADER,
   if they have no local snapshot and snapshot.trust.empty is true.
   
   Author: Stig Rohde Døssing <stig@humio.com>
   
   Reviewers: Enrico Olivelli <eolivelli@apache.org>, Damien Diederen <ddiederen@apache.org>
   
   Closes #1581 from srdo/zookeeper-3781
   
   (cherry picked from commit 1214d3bf611d153ae8c3987523da01d3d6c82686)
   Signed-off-by: Damien Diederen <ddiederen@apache.org>
   (cherry picked from commit 9722488872802c546d1f8a3bb0ea349e5309f806)


;16/May/22 18:25;githubbot;600","symat commented on PR #1876:
URL: https://github.com/apache/zookeeper/pull/1876#issuecomment-1128036989

   same commit already present on master, branch-3.7, branch-3.8 and branch-3.5.
   I just pushed the PR to have a full CI run before committing to branch-3.6


;16/May/22 19:10;githubbot;600","symat closed pull request #1876: ZOOKEEPER-3781: Create snapshots on followers when snapshot.trust.emp…
URL: https://github.com/apache/zookeeper/pull/1876


;16/May/22 19:11;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,15600,,,0,15600,,,,,,,,,,,,,,,,,ZOOKEEPER-4421,,,,,,,,,,,"01/Apr/20 14:51;weichu;zk_no_snapshot.zip;https://issues.apache.org/jira/secure/attachment/12998484/zk_no_snapshot.zip",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 16 19:13:44 UTC 2022,,,,,,,,,,"0|z0d648:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/20 15:01;weichu;According to the document, {{snapshot.trust.empty}} should only be used during upgrade. I interpret it as if all zookeepers are on newer version, they should all generate snapshot.

But our instances are not behaving like that, so zk cannot boot without {{snapshot.trust.empty=true}}. This looks like a bug to me.

I used the vanilla zookeeper 3.5.7 and the issue can be reproduced by the commands
{code}
terminal-1 $ ./apache-zookeeper-3.5.7-bin/bin/zkServer.sh start-foreground /path/to/zk1.cfg

terminal-2 $ ./apache-zookeeper-3.5.7-bin/bin/zkServer.sh start-foreground /path/to/zk2.cfg

terminal-3 $ ./apache-zookeeper-3.5.7-bin/bin/zkServer.sh start-foreground /path/to/zk2.cfg
{code};;;","22/Jul/20 10:16;tharindu;Facing the same issue when upgrading to 3.5.8 from 3.4.14 utilizing snapshot.trust.empty=true where some zookeeper nodes in the ensemble did not have snapshot files. 

Having successfully starting up with 3.5.8, nodes that did not have snapshot files did not create them and we were not able to start zookeeper without the snapshot.trust.empty=true config. 

Had to delete the data and datalog directories and allow syncing from the ensemble to work around. ;;;","08/Jan/21 13:53;srdo;We are also seeing this on versions from 3.5.7 to 3.6.2.

I took at look at when snapshots are written, and it seems to be in these cases:

* The node is starting off an empty database (https://github.com/apache/zookeeper/blob/release-3.6.2/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java#L291)
* If the node is becoming leader (https://github.com/apache/zookeeper/blob/release-3.6.2/zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java#L511)
* If the node is following, received UPTODATE and the protocol is pre ZAB 1.0, which is not happening in 3.5.x+ (https://github.com/apache/zookeeper/blob/release-3.6.2/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java#L669)
* If the node is following and did not receive DIFF from the leader, i.e. the follower is far behind the leader (https://github.com/apache/zookeeper/blob/release-3.6.2/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java#L689)
* If the node has received enough transactions (controlled by snapCount) that the periodic snapshot should be written (https://github.com/apache/zookeeper/blob/release-3.6.2/zookeeper-server/src/main/java/org/apache/zookeeper/server/SyncRequestProcessor.java#L193)

This leads me to believe that there are the following workarounds, unless you want to run with snapshot.trust.empty=true long-term:

* Leave the cluster running with snapshot.trust.empty=true until enough transactions has been written to trigger a snapshot write. The default snapCount is 100.000, but this could be temporarily lowered.
* While leaving a quorum running, shut down the nodes without snapshots and delete their data. When they restart, the leader will send them a snapshot instead of DIFF.

I think it would be nice if this could be fixed in a future Zookeeper version to make migration from 3.4.x easier. Maybe followers could ask for a full snapshot from the leader if snapshot.trust.empty=true, or they could write a snapshot on boot?;;;","06/Mar/21 19:43;ztzg;Issue resolved by pull request 1581
[https://github.com/apache/zookeeper/pull/1581];;;","09/Dec/21 05:14;ananysin;Hi, can we backport this to branch-3.5?;;;","16/May/22 19:13;symat;this is an important fix, I cherry-picked it to branch-3.5 to be part of the release 3.5.10 I'm working on.

As it was missing also from branch-3.6, I pushed it there too (after running the tests).

 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
restore Version.getRevision() to be backward compatible,ZOOKEEPER-3780,13295509,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,nkalmar,nkalmar,nkalmar,01/Apr/20 11:14,11/May/20 15:41,13/Jul/23 09:08,07/Apr/20 13:41,3.5.6,3.5.7,3.6.0,,,,,,,3.5.8,3.6.1,3.7.0,,,,,,,0,pull-request-available,,"We removed the getRevision() function in 3.5.6:
https://github.com/apache/zookeeper/commit/96880c0b2ba39f1841f8bdc4a0119a467b462d03#diff-1d42dde48d42e3baf819e22b56a880a7

Some projects (like HBase for example) are actually using this method. (Although not relevant anymore, since we are on git).

3.5.6, 3.5.7 and 3.6.0 does not have this method anymore. However, if someone is using this function, to make upgrading easier, we should restore it.
",,eolivelli,nkalmar,symat,tamaas,,,,,,,,,,,,,,,,"nkalmar commented on pull request #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 09:03;githubbot;600","eolivelli commented on pull request #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#discussion_r402162356
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/version/util/VerGen.java
 ##########
 @@ -84,6 +84,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str
             if (rev.equals(""-1"")) {
                 System.out.println(""Unknown REVISION number, using "" + rev);
             }
+            w.write(""    int REVISION=-1; //@deprecated, will be removed in 3.7.0\n"");
 
 Review comment:
   Don't claim it to be removed in a specific version. 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 09:06;githubbot;600","nkalmar commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607734959
 
 
   Fixed your comment @eolivelli , thanks for the review.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 09:37;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607745673
 
 
   Waiting for Jenkins, thenI will merge to master, 3.6 and 3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 09:58;githubbot;600","nkalmar commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607755326
 
 
   I did the patch against 3.6, thought we leave it out of master? Sooner or later we wan't to remove it. Or let's leave that to decide later?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 10:17;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607757513
 
 
   I think it is better to have this also on master.
   Otherwise when we will release 3.7 we will see the same problem.
   Why create issues to users if there is not real need for us ?
   
   Zookeeper is the foundation of many and many complex systems, users cannot be blocked in upgrading to latest zookeeper. **If there is no valid reason**
   It is common in my projects/applications to have HBase client + BookKeeper client + Kafka broker + Curator ....all of them depends on ZK and all of those libraries should be able to work
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 10:22;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607757924
 
 
   I will cherry pick to master branch as well, this way we won't forget.
   We can start a broader discussion on dev@ 
   
   thank you @nkalmar for pointing this case
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 10:23;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607758116
 
 
   It looks like we have problems
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1939/
   
   we should restart the job
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 10:23;githubbot;600","nkalmar commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607953075
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 16:30;githubbot;600","nkalmar commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-607953075
 
 
   retest this please
   -ok, restartin manually :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 16:32;githubbot;600","symat commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-609669266
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/20 09:05;githubbot;600","symat commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-609669299
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Apr/20 09:05;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-610217471
 
 
   @nkalmar  can you please reopen this pr against master branch ?
   it looks like Jenkins messed up with C Client and TLS stuff
   
        [exec] Makefile:2106: recipe for target 'check-am' failed
        [exec] ./.libs/libzkmt.a(libzkmt_la-zookeeper.o): In function `init_ssl_for_socket':
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2631: undefined reference to `OPENSSL_init_ssl'
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2632: undefined reference to `TLS_client_method'
        [exec] collect2: error: ld returned 1 exit status
        [exec] make[1]: *** [zktest-mt] Er
   
   
   maybe branch-3.6 is not in good shape
   @symat  @ztzg  can you please take a look to the status of branch-3.6 and the C-client/TLS stuff ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 07:12;githubbot;600","eolivelli commented on pull request #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 10:24;githubbot;600","nkalmar commented on pull request #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304
 
 
   Added a warning in https://cwiki.apache.org/confluence/display/ZOOKEEPER/Upgrade+FAQ
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 10:24;githubbot;600","eolivelli commented on pull request #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 13:40;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-610432957
 
 
   I did not cherry pick to branch-3.5
   I am not sure it picks cleanly
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 14:51;githubbot;600","ztzg commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-610549447
 
 
   @eolivelli: Sorry, was not available today—but I can have a look tomorrow morning (EU time).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 18:29;githubbot;600","nkalmar commented on pull request #1309: ZOOKEEPER-3780: restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1309
 
 
   for branch-3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 19:54;githubbot;600","nkalmar commented on issue #1309: ZOOKEEPER-3780: restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1309#issuecomment-610807920
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 07:51;githubbot;600","ztzg commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-610873325
 
 
   Hi @eolivelli, @symat,
   
   I looked into this.  I was unable to reproduce on NixOS 19.09, Ubuntu 16.04, or Ubuntu 19.10.  (Some of these use OpenSSL 1.0.x, some others OpenSSL 1.1.x—which is where the difference is symbol availability originates.)
   
   I was unable to reproduce.
   
   The function `init_ssl_for_socket`, in `zookeeper.c`, uses `OPENSSL_VERSION_NUMBER` to determine which API to use.  This is the only place which references the ""missing"" `OPENSSL_init_ssl` and `TLS_client_method`, and it seems to do so correctly.
   
   One logical explanation would be that that particular host somehow has 1.1.x headers installed, but an 1.0.x library.  But looking at [this Jenkins log](https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1941/console), it seems that building `zktest-st` succeeded, whereas linking `zktest-mt` failed.  I am puzzled.
   
   Is this a failure you have observed multiple times?  On multiple build hosts?  Is there a way to get more details on the Jenkins build host than what is available in the ""Environment Variables"" section?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 10:13;githubbot;600","eolivelli commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-610875963
 
 
   Maybe it is a temporary mess on Jenkins. 
   The build finally succeeded.
   Thank you for checking
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 10:19;githubbot;600","ztzg commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-610881711
 
 
   Maybe.  Though I don't like unexplained ""temporary messes,"" so don't hesitate to ping me if you see this (or something like this) again; I'll try and collect clues.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 10:33;githubbot;600","symat commented on issue #1304: ZOOKEEPER-3780 - restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1304#issuecomment-611399846
 
 
   thanks @ztzg !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/20 08:23;githubbot;600","symat commented on issue #1309: ZOOKEEPER-3780: restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1309#issuecomment-611400072
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/20 08:23;githubbot;600","symat commented on issue #1309: ZOOKEEPER-3780: restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1309#issuecomment-611402950
 
 
   @nkalmar I don't see how is this different from #1304
   cherrypick to branch-3.5 wouldn't be easier?
   maybe I just miss something...
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/20 08:29;githubbot;600","nkalmar commented on issue #1309: ZOOKEEPER-3780: restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1309#issuecomment-611642590
 
 
   It is the same, I thought @eolivelli said it didn't pick clean? Please just cherry pick #1304 if it picks clean. Thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/20 17:09;githubbot;600","symat commented on issue #1309: ZOOKEEPER-3780: restore Version.getRevision() to be bacward compatible
URL: https://github.com/apache/zookeeper/pull/1309#issuecomment-611651217
 
 
   OK, I'll try it. Thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/20 17:26;githubbot;600","nkalmar commented on pull request #1309:
URL: https://github.com/apache/zookeeper/pull/1309#issuecomment-619840318


   I'll merge this as 3.5 release is coming up, we don't wan't to miss it. (Already merged in master and 3.6)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Apr/20 09:04;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,17400,,,0,17400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:10 UTC 2020,,,,,,,,,,"0|z0d5uw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Apr/20 20:54;tamaas;It might be a good idea to add to the javadoc that it will be removed at version 3.7.;;;","07/Apr/20 13:41;eolivelli;committed to master and to branch-3.6;;;","07/Apr/20 20:28;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4396//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4396//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4396//console

This message is automatically generated.;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JettyAdminServer should not allow HTTP TRACE method,ZOOKEEPER-3772,13294598,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,lingjinjiang,lingjinjiang,28/Mar/20 04:42,10/Sep/20 10:43,13/Jul/23 09:08,05/May/20 07:22,3.5.8,3.6.1,,,,,,,,3.5.9,3.6.2,3.7.0,,,,,,,0,pull-request-available,,"When I upgrade my zookeeper cluster to 3.5.7, a *nessus scan* pinged the cluster because the 8080 port of JettyAdminServer allows HTTP TRACE method.",,grknutson,lingjinjiang,,,,,,,,,,,,,,,,,,"lingjinjiang commented on pull request #1296: ZOOKEEPER-3772: JettyAdminServer should not allow Http TRACE method
URL: https://github.com/apache/zookeeper/pull/1296
 
 
   A nessus scan pinged the cluster after I upgrade my zookeeper cluster, because the 8080 port of JettyAdminServer allows Http TRACE method.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 04:56;githubbot;600","maoling commented on issue #1296: ZOOKEEPER-3772: JettyAdminServer should not allow Http TRACE method
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-605837479
 
 
   - The TRACE method is primarily used for debugging and testing purposes. Jetty has disabed trace method, but the embed one don't. For security issues, it's doable.
   - A simple test. +1
   ```
   # After
   curl -X TRACE http://localhost:8088/commands
   [nothing]
   # Before 
   curl -X TRACE http://localhost:8088/commands
   TRACE /commands HTTP/1.1
   Accept: */*
   User-Agent: curl/7.54.0
   Host: localhost:8088
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 07:44;githubbot;600","maoling commented on issue #1296: ZOOKEEPER-3772: JettyAdminServer should not allow Http TRACE method
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-605989196
 
 
   @lingjinjiang
   - nessus scan is now happy when applying this patch, Do you re-test it?
   - Do you have any test way outside to share with us to test this patch?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 13:10;githubbot;600","lingjinjiang commented on issue #1296: ZOOKEEPER-3772: JettyAdminServer should not allow Http TRACE method
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-606328087
 
 
   @maoling 
   Thanks for your review.
   Our nessus will publish report on Wednesday, so I have not got the lastet result yet.
   I just test it manually with curl -v.
   If this problem is still exist, I'll try to fix it again.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/20 00:42;githubbot;600","lingjinjiang commented on issue #1296: ZOOKEEPER-3772: JettyAdminServer should not allow Http TRACE method
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-607573320
 
 
   I have got the latest nessus report, the problem is not exist.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 01:42;githubbot;600","lingjinjiang commented on issue #1296: ZOOKEEPER-3772: JettyAdminServer should not allow Http TRACE method
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-607573320
 
 
   I have got the latest nessus report, the problem no longer exists.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 01:44;githubbot;600","eolivelli commented on pull request #1296:
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-623431014


   @symat @nkalmar @anmolnar PTAL


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/May/20 12:21;githubbot;600","nkalmar commented on pull request #1296:
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-623895342


   Thanks @lingjinjiang , merged to master and branch-3.6, does not pick to branch-3.5.
   Can you please create a PR against branch-3.5, if needed?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/May/20 07:22;githubbot;600","symat commented on pull request #1296:
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-623907330


   @lingjinjiang - it is up to you, but I think this would be an important change for the community on branch-3.5, we would really appreciate if you could create a new PR for it. I would be happy to review / test it if you ping me on the new PR.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/May/20 07:46;githubbot;600","lingjinjiang commented on pull request #1296:
URL: https://github.com/apache/zookeeper/pull/1296#issuecomment-623910598


   @symat , @nkalmar , thanks for your review.
   I will create a new PR on branch-3.5 later.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/May/20 07:53;githubbot;600","lingjinjiang opened a new pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349


   this pr is ZOOKEEPER-3772 on branch-3.5


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/20 12:39;githubbot;600","lingjinjiang commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-624982092


   @symat thanks for your review.
   I executed all unit tests before I commit this change and didn't check the changed files.
   I'm sorry for this mistake.
   Now I have reverted the snapshot.83f file. 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 01:49;githubbot;600","symat commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-625179316


   thanks @eolivelli , I'll merge this to branch-3.5 now


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 10:50;githubbot;600","symat commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-625186940


   merge done, closing this PR.
   thank you @lingjinjiang !


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/20 11:06;githubbot;600","maoling commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-625825053


   > One minor change I would ask: You seem to committed accidentally the snapshot.83f file (I guess you executed some unit tests and this test resource got changed somehow). 
   - I also met this issue previously. That's annoying sometimes.
   - For this kind of testing-purpose snapshots or logs, try to let the unit test generate them automatically?  exempt from git? don't allow unit test change them or something else. we need to create another ticket to handle it? @symat WDYT?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/20 13:49;githubbot;600","symat commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-625997662


   I think this is something already fixed on master (at least I don't remember seeing this issue there). It would be nice to fix it also on branch-3.5, but I think this is a low priority item, we have fairly few commits on branch-3.5.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/20 20:11;githubbot;600","maoling commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-626089351


   I really saw it in the master branch. when something( maybe unit cases) triggers, the testing-purposed files change and commit with my code.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/May/20 02:14;githubbot;600","symat commented on pull request #1349:
URL: https://github.com/apache/zookeeper/pull/1349#issuecomment-626502541


   ohh, I see. Then it would be great if you could take a look, if you have time. Thank you!
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/20 06:39;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/20 04:45;lingjinjiang;ZOOKEEPER-3772-1.patch;https://issues.apache.org/jira/secure/attachment/12998060/ZOOKEEPER-3772-1.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-03-28 04:42:10.0,,,,,,,,,,"0|z0d094:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fast leader election does not end if leader is taken down,ZOOKEEPER-3769,13293614,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,lasaro,lasaro,24/Mar/20 18:49,11/May/20 15:41,13/Jul/23 09:08,07/Apr/20 07:09,3.5.7,,,,,,,,,3.5.8,3.6.1,3.7.0,,,leaderElection,,,,0,pull-request-available,,"In a cluster with three nodes, node3 is the leader and the other nodes are followers.

If I stop node3, the other two nodes do not finish the leader election.

This is happening with ZK 3.5.7,  openjdk version ""12.0.2"" 2019-07-16, and this config

 

tickTime=2000
 initLimit=30
 syncLimit=3
 dataDir=/company/service/data
 dataLogDir=/company/service/log
 clientPort=2181
 snapCount=100000
 autopurge.snapRetainCount=3
 autopurge.purgeInterval=1
 skipACL=yes
 preAllocSize=65536
 maxClientCnxns=0
 4lw.commands.whitelist=*
 admin.enableServer=false

server.1=companydemo1.snc4.companyinc.com:3000:4000
 server.2=companydemo2.snc4.companyinc.com:3000:4000
 server.3=companydemo3.snc4.companyinc.com:3000:4000

 

Could you have a look at the logs and help me figure this out? It seems like node 1 is not getting notifications back from node2, but I don't see anything wrong with the network so I am wondering if bugs like  ZOOKEEPER-3756 could be causing it.

 

In the logs, node3 is killed at 11:17:14

node2 is killed at 11:17:50 2 and node 1 at 11:18:02 

 

 

 ",,apurtell,eolivelli,lasaro,symat,,,,,,,,,,,,,,,,"symat commented on pull request #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300
 
 
   Using ZooKeeper with JDK 12.0.2 on CentOS 7 when the current leader is killed, we saw a few times that some partial Leader Election notification (vote) messages were delivered to the other ZooKeeper servers. The malformed / partial messages are causing different exceptions in the WorkerReceiver thread of FastLeaderElection which were not handled before. This was leading to the death of the WorkerReceiver thread, which caused that the given ZooKeeper Server was unable to receive any leader election messages and never was able to re-join to any quorum until it got restarted.
   
   In the proposed fix I created unit tests to simulate certain error cases with regards to partial leader election messages, and fixed the error handling in FastLeaderElection.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 19:50;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605510389
 
 
   This error may happen in both 3.4, 3.5 and 3.6. I created this patch for the master branch, but I already have an other one for the branch 3.5 which I will submit when this PR gets reviewed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 19:50;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605510389
 
 
   This error may happen in both 3.4, 3.5 and 3.6. I created this patch for the master branch, but I already have an other one for the branch 3.5 which I will submit after this PR gets reviewed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 19:58;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605510389
 
 
   This error may happen in both 3.4, 3.5 and 3.6. I created this patch for the master branch, but I already have an other one for the branch 3.5 (it is not a clean cherry-pick) which I will submit after this PR gets reviewed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 20:09;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605510389
 
 
   This error may happen in both 3.4, 3.5 and 3.6. I created this patch for the master branch, but I already have an other one for the branch 3.5 (it is not a clean cherry-pick) which I will submit after this PR gets reviewed. I am not sure about 3.4... (?)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 20:10;githubbot;600","eolivelli commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605515279
 
 
   Do you have some stacktrace for the error?
   We should prevent falling into BUException and not catch it
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/20 20:28;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605597388
 
 
   I saw two kinds of exceptions, related to this problem. (if I remember correctly, the stack traces were gathered on 3.5.7)
   
   ```
   03/24/20 11:16:16,297 [WorkerReceiver[myid=1]] ERROR [org.apache.zookeeper.server.NIOServerCnxnFactory] (NIOServerCnxnFactory.java:92) - Thread Thread[WorkerReceiver[myid=1],5,main] died
   
   java.nio.BufferUnderflowException: null
        at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:178) ~[?:?]
        at java.nio.ByteBuffer.get(ByteBuffer.java:762) ~[?:?]
        at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:278) ~[zookeeper-3.5.7.jar:3.5.7]        
   ```
   And an other case (this can happen when wrong protocol format is expected due to the wrong message size):
   ```
   03/23/20 10:14:46,127 [WorkerReceiver[myid=1]] ERROR [org.apache.zookeeper.server.NIOServerCnxnFactory] (NIOServerCnxnFactory.java:92) - Thread Thread[WorkerReceiver[myid=1],5,main] died
   java.lang.NegativeArraySizeException: -1082130432
        at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:276) ~[zookeeper-3.5.7.jar:3.5.7]
        at java.lang.Thread.run(Thread.java:835) ~[?:?]
   ```
   
   I was able to reproduce these errors with the unit tests I created. But unfortunately I am not able to reproduce the problem with real ZooKeeper.
   
   Lasaro Camargos (who reported the issue) said that the error happened both with NIO and Netty.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/20 07:25;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605851598
 
 
   FYI: as the [last comment](https://issues.apache.org/jira/browse/ZOOKEEPER-3769?focusedCommentId=17070311&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17070311) on the Jira ticket says, it wasn't really tested with Netty, so we are not sure if the partial message hits the leader election with Netty. 
   
   Anyway, handling these exceptions / doing some extra checks in the Fast Leader Election class makes sense I think, independently from Netty / NIO.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 08:16;githubbot;600","nkalmar commented on pull request #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#discussion_r400014214
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FLEMalformedNotificationMessageTest.java
 ##########
 @@ -0,0 +1,262 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.quorum;
+
+import java.io.File;
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.nio.ByteBuffer;
+import java.util.HashMap;
+import org.apache.zookeeper.PortAssignment;
+import org.apache.zookeeper.ZKTestCase;
+import org.apache.zookeeper.server.quorum.QuorumPeer.QuorumServer;
+import org.apache.zookeeper.server.quorum.QuorumPeer.ServerState;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+
+public class FLEMalformedNotificationMessageTest extends ZKTestCase {
+    private static final Logger LOG = LoggerFactory.getLogger(FLEMalformedNotificationMessageTest.class);
+    private static final byte[] CONFIG_BYTES = ""my very invalid config string"".getBytes();
+    private static final int CONFIG_BYTES_LENGTH = CONFIG_BYTES.length;
+
+    int count;
+    HashMap<Long, QuorumServer> peers;
+    File tmpdir[];
+    int port[];
+
+    QuorumCnxManager mockCnxManager;
+    FLETestUtils.LEThread leaderElectionThread;
+    QuorumPeer peerRunningLeaderElection;
+
+
+    @Before
+    public void setUp() throws Exception {
+        count = 3;
+
+        peers = new HashMap<>(count);
+        tmpdir = new File[count];
+        port = new int[count];
+
+        LOG.info(""FLEMalformedNotificationMessageTest: {}, {}"", getTestName(), count);
+        for (int i = 0; i < count; i++) {
+            int clientport = PortAssignment.unique();
+            peers.put((long) i,
+                      new QuorumServer(i,
+                                       new InetSocketAddress(clientport),
+                                       new InetSocketAddress(PortAssignment.unique())));
+            tmpdir[i] = ClientBase.createTmpDir();
+            port[i] = clientport;
+        }
+
+        /*
+         * Start server 0
+         */
+        peerRunningLeaderElection = new QuorumPeer(peers, tmpdir[0], tmpdir[0], port[0], 3, 0, 1000, 2, 2, 2);
+        peerRunningLeaderElection.startLeaderElection();
+        leaderElectionThread = new FLETestUtils.LEThread(peerRunningLeaderElection, 0);
+        leaderElectionThread.start();
+    }
+
+
+    @After
+    public void tearDown() throws Exception {
+        peerRunningLeaderElection.shutdown();
+        mockCnxManager.halt();
+    }
+
+
+    @Test
+    public void testTooShortPartialNotificationMessage() throws Exception {
+
+        /*
+         * Start mock server 1, send a message too short to be compatible with any protocol version
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[12];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
+        requestBuffer.clear();
+        requestBuffer.putInt(ServerState.LOOKING.ordinal());   // state
+        requestBuffer.putLong(0);                              // leader
+        mockCnxManager.toSend(0L, requestBuffer);
+
+        /*
+         * Assert that the message receiver thread in leader election is still healthy:
+         * we are sending valid votes and waiting for the leader election to be finished.
+         */
+        sendValidNotifications(1, 0);
+        leaderElectionThread.join(5000);
+        if (leaderElectionThread.isAlive()) {
+            Assert.fail(""Leader election thread didn't join, something went wrong."");
+        }
+    }
+
+
+    @Test
+    public void testNotificationMessageWithNegativeConfigLength() throws Exception {
+
+        /*
+         * Start mock server 1, send a message with negative configLength field
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[48];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
+        requestBuffer.clear();
+        requestBuffer.putInt(ServerState.LOOKING.ordinal());   // state
+        requestBuffer.putLong(0);                              // leader
+        requestBuffer.putLong(0);                              // zxid
+        requestBuffer.putLong(0);                              // electionEpoch
+        requestBuffer.putLong(0);                              // epoch
+        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   // version
+        requestBuffer.putInt(-123);                            // configData.length
+        mockCnxManager.toSend(0L, requestBuffer);
+
+        /*
+         * Assert that the message receiver thread in leader election is still healthy:
+         * we are sending valid votes and waiting for the leader election to be finished.
+         */
+        sendValidNotifications(1, 0);
+        leaderElectionThread.join(5000);
+        if (leaderElectionThread.isAlive()) {
+            Assert.fail(""Leader election thread didn't join, something went wrong."");
+        }
+    }
+
+
+    @Test
+    public void testNotificationMessageWithInvalidConfigLength() throws Exception {
+
+        /*
+         * Start mock server 1, send a message with an invalid configLength field
+         * (instead of sending CONFIG_BYTES_LENGTH, we send 10000)
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[48 + CONFIG_BYTES_LENGTH];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
+        requestBuffer.clear();
+        requestBuffer.putInt(ServerState.LOOKING.ordinal());   // state
+        requestBuffer.putLong(0);                              // leader
+        requestBuffer.putLong(0);                              // zxid
+        requestBuffer.putLong(0);                              // electionEpoch
+        requestBuffer.putLong(0);                              // epoch
+        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   // version
+        requestBuffer.putInt(10000);                           // configData.length
+        requestBuffer.put(CONFIG_BYTES);                       // configData
+        mockCnxManager.toSend(0L, requestBuffer);
+
+        /*
+         * Assert that the message receiver thread in leader election is still healthy:
+         * we are sending valid votes and waiting for the leader election to be finished.
+         */
+        sendValidNotifications(1, 0);
+        leaderElectionThread.join(5000);
+        if (leaderElectionThread.isAlive()) {
+            Assert.fail(""Leader election thread didn't join, something went wrong."");
+        }
+    }
+
+
+    @Test
+    public void testNotificationMessageWithInvalidConfig() throws Exception {
+
+        /*
+         * Start mock server 1, send a message with an invalid config field
+         * (the receiver should not be able to parse the content)
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[48 + CONFIG_BYTES_LENGTH];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
 
 Review comment:
   wouldn't 
   *FastLeaderElection.buildMsg(ServerState.LOOKING.ordinal(), 1, 0, 0, 0, CONFIG_BYTES)* work here? Seems it does the same.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 08:36;githubbot;600","symat commented on pull request #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#discussion_r400018467
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FLEMalformedNotificationMessageTest.java
 ##########
 @@ -0,0 +1,262 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.server.quorum;
+
+import java.io.File;
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.nio.ByteBuffer;
+import java.util.HashMap;
+import org.apache.zookeeper.PortAssignment;
+import org.apache.zookeeper.ZKTestCase;
+import org.apache.zookeeper.server.quorum.QuorumPeer.QuorumServer;
+import org.apache.zookeeper.server.quorum.QuorumPeer.ServerState;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+
+public class FLEMalformedNotificationMessageTest extends ZKTestCase {
+    private static final Logger LOG = LoggerFactory.getLogger(FLEMalformedNotificationMessageTest.class);
+    private static final byte[] CONFIG_BYTES = ""my very invalid config string"".getBytes();
+    private static final int CONFIG_BYTES_LENGTH = CONFIG_BYTES.length;
+
+    int count;
+    HashMap<Long, QuorumServer> peers;
+    File tmpdir[];
+    int port[];
+
+    QuorumCnxManager mockCnxManager;
+    FLETestUtils.LEThread leaderElectionThread;
+    QuorumPeer peerRunningLeaderElection;
+
+
+    @Before
+    public void setUp() throws Exception {
+        count = 3;
+
+        peers = new HashMap<>(count);
+        tmpdir = new File[count];
+        port = new int[count];
+
+        LOG.info(""FLEMalformedNotificationMessageTest: {}, {}"", getTestName(), count);
+        for (int i = 0; i < count; i++) {
+            int clientport = PortAssignment.unique();
+            peers.put((long) i,
+                      new QuorumServer(i,
+                                       new InetSocketAddress(clientport),
+                                       new InetSocketAddress(PortAssignment.unique())));
+            tmpdir[i] = ClientBase.createTmpDir();
+            port[i] = clientport;
+        }
+
+        /*
+         * Start server 0
+         */
+        peerRunningLeaderElection = new QuorumPeer(peers, tmpdir[0], tmpdir[0], port[0], 3, 0, 1000, 2, 2, 2);
+        peerRunningLeaderElection.startLeaderElection();
+        leaderElectionThread = new FLETestUtils.LEThread(peerRunningLeaderElection, 0);
+        leaderElectionThread.start();
+    }
+
+
+    @After
+    public void tearDown() throws Exception {
+        peerRunningLeaderElection.shutdown();
+        mockCnxManager.halt();
+    }
+
+
+    @Test
+    public void testTooShortPartialNotificationMessage() throws Exception {
+
+        /*
+         * Start mock server 1, send a message too short to be compatible with any protocol version
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[12];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
+        requestBuffer.clear();
+        requestBuffer.putInt(ServerState.LOOKING.ordinal());   // state
+        requestBuffer.putLong(0);                              // leader
+        mockCnxManager.toSend(0L, requestBuffer);
+
+        /*
+         * Assert that the message receiver thread in leader election is still healthy:
+         * we are sending valid votes and waiting for the leader election to be finished.
+         */
+        sendValidNotifications(1, 0);
+        leaderElectionThread.join(5000);
+        if (leaderElectionThread.isAlive()) {
+            Assert.fail(""Leader election thread didn't join, something went wrong."");
+        }
+    }
+
+
+    @Test
+    public void testNotificationMessageWithNegativeConfigLength() throws Exception {
+
+        /*
+         * Start mock server 1, send a message with negative configLength field
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[48];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
+        requestBuffer.clear();
+        requestBuffer.putInt(ServerState.LOOKING.ordinal());   // state
+        requestBuffer.putLong(0);                              // leader
+        requestBuffer.putLong(0);                              // zxid
+        requestBuffer.putLong(0);                              // electionEpoch
+        requestBuffer.putLong(0);                              // epoch
+        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   // version
+        requestBuffer.putInt(-123);                            // configData.length
+        mockCnxManager.toSend(0L, requestBuffer);
+
+        /*
+         * Assert that the message receiver thread in leader election is still healthy:
+         * we are sending valid votes and waiting for the leader election to be finished.
+         */
+        sendValidNotifications(1, 0);
+        leaderElectionThread.join(5000);
+        if (leaderElectionThread.isAlive()) {
+            Assert.fail(""Leader election thread didn't join, something went wrong."");
+        }
+    }
+
+
+    @Test
+    public void testNotificationMessageWithInvalidConfigLength() throws Exception {
+
+        /*
+         * Start mock server 1, send a message with an invalid configLength field
+         * (instead of sending CONFIG_BYTES_LENGTH, we send 10000)
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[48 + CONFIG_BYTES_LENGTH];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
+        requestBuffer.clear();
+        requestBuffer.putInt(ServerState.LOOKING.ordinal());   // state
+        requestBuffer.putLong(0);                              // leader
+        requestBuffer.putLong(0);                              // zxid
+        requestBuffer.putLong(0);                              // electionEpoch
+        requestBuffer.putLong(0);                              // epoch
+        requestBuffer.putInt(FastLeaderElection.Notification.CURRENTVERSION);   // version
+        requestBuffer.putInt(10000);                           // configData.length
+        requestBuffer.put(CONFIG_BYTES);                       // configData
+        mockCnxManager.toSend(0L, requestBuffer);
+
+        /*
+         * Assert that the message receiver thread in leader election is still healthy:
+         * we are sending valid votes and waiting for the leader election to be finished.
+         */
+        sendValidNotifications(1, 0);
+        leaderElectionThread.join(5000);
+        if (leaderElectionThread.isAlive()) {
+            Assert.fail(""Leader election thread didn't join, something went wrong."");
+        }
+    }
+
+
+    @Test
+    public void testNotificationMessageWithInvalidConfig() throws Exception {
+
+        /*
+         * Start mock server 1, send a message with an invalid config field
+         * (the receiver should not be able to parse the content)
+         * This simulates the case when only some parts of the whole message
+         */
+        startMockServer(1);
+        byte requestBytes[] = new byte[48 + CONFIG_BYTES_LENGTH];
+        ByteBuffer requestBuffer = ByteBuffer.wrap(requestBytes);
 
 Review comment:
   true, that is easier / nicer I think.
   I will fix it quickly.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 08:38;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605872079
 
 
   well, the parsing logic is not trivial. I was also reading it for some time. There are multiple message versions kept for backward-compatibility / rolling-upgrade support reasons. The older versions differ only in length, but later a proper 'version number' was introduced during the dynamic-reconfig modifications.
   
   I actually was convinced for some time that the logic is wrong (around the 36 vs 40 bits long message parsing), but then I think I understood it finally. Not a very nice code... I am not sure if we want to change the quorum-internal protocols in ZooKeeper 4.0, but I think it would make sense to write a new Leader Election class that is using extendable message protocol that handles versions properly. 
   
   Anyway, I haven't touched the logic itself, only added extra exception handling and a check before allocating memory for the buffer where the configuration string gets copied.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 08:57;githubbot;600","nkalmar commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-605878984
 
 
   After I sent my comment on FastLeaderElection.buildMsg() in the tests I realised you can't re-write all to use the function... sorry, made since to just write the buffer yourself than. (I still think it's fine to use buildMsg() if you can, so don't revert, I'm just saying it makes more sense now that you built the message yourself :) ) 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 09:11;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-607794733
 
 
   well, actually I was not able to reproduce the issue even with JDK 12. I am not sure if it is specific to JDK 12 or not. I know that the issue was reproducible for Lasaro on his environment (with JDK 12 on CentOS 7) for a while, but now even he can not reproduce it. (Maybe some OS upgrade or network change fixed it for him?) So honestly I don't know what triggered this issue or why we haven't seen this before.
   
   But I think it is good to handle these exceptions in the code, even if I can not trigger them with real ZooKeeper, only by unit tests. And having more tests for malformed / partial messages never hurts. 
   
   Actually one can consider this as a security fix as well, since in theory you were able to knock out any Follower from the quorum just by sending a partial election vote message.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 11:43;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-607794733
 
 
   well, actually I was not able to reproduce the issue even with JDK 12. I am not sure if it is specific to JDK 12 or not. I know that the issue was reproducible for Lasaro on his environment (with JDK 12 on CentOS 7) for a while, but now even he can not reproduce it. (Maybe some OS upgrade or network change fixed it for him?) So honestly I don't know what triggered this issue or why we haven't seen this before.
   
   But I think it is good to handle these exceptions in the code, even if I can not trigger them with real ZooKeeper, only by unit tests. And having more tests for malformed / partial messages never hurts. 
   
   Actually one can consider this as a security fix as well, since in theory you were able to knock out any Follower from the quorum just by sending a partial election vote message. (at least you were able to kill the receiver thread in fast leader election... so during the next leader election the server will be unable to connect to the new leader, until restart)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 11:46;githubbot;600","symat commented on issue #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300#issuecomment-607797088
 
 
   thanks for the comments and the quick review for both of you!
   I will prepare the patch for branch 3.5 too. I think 3.4 will not be needed...
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 11:49;githubbot;600","symat commented on pull request #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305
 
 
   Using ZooKeeper with JDK 12.0.2 on CentOS 7 when the current leader is killed, we saw a few times that some partial Leader Election notification (vote) messages were delivered to the other ZooKeeper servers. The malformed / partial messages are causing different exceptions in the WorkerReceiver thread of FastLeaderElection which were not handled before. This was leading to the death of the WorkerReceiver thread, which caused that the given ZooKeeper Server was unable to receive leader election messages anymore and was not able to re-join to any quorum until it got restarted.
   
   In the proposed fix I created unit tests to simulate certain error cases with regards to partial leader election messages, and fixed the error handling in FastLeaderElection.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 12:00;githubbot;600","symat commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-607804459
 
 
   @nkalmar  @eolivelli PTAL
   this is the same as the one you reviewed for the master branch here: #1300
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Apr/20 12:04;githubbot;600","eolivelli commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-608550219
 
 
   It looks like now we have required approvals !
   Again congrats for becoming a committer.
   I will merge the patch soon
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/20 16:55;githubbot;600","eolivelli commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-608550384
 
 
   retest ant build
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Apr/20 16:56;githubbot;600","symat commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-609016172
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Apr/20 11:44;githubbot;600","symat commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-609016487
 
 
   thanks! :)
   
   in general I plan to help in reviews and merges more, once I will have my credentials set. I'm not sure how much it takes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Apr/20 11:47;githubbot;600","eolivelli commented on pull request #1300: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1300
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 07:08;githubbot;600","nkalmar commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-610627534
 
 
   The merger script is acting up again for me... I'll see to it tomorrow, please go ahead and merge Enrico if you get there before me. Thanks.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Apr/20 21:22;githubbot;600","symat commented on issue #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305#issuecomment-610985953
 
 
   I can do it :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Apr/20 14:16;githubbot;600","symat commented on pull request #1305: ZOOKEEPER-3769: handling malformed Leader Election notification messages
URL: https://github.com/apache/zookeeper/pull/1305
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/20 08:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,15000,,,0,15000,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Mar/20 19:07;lasaro;node1.log;https://issues.apache.org/jira/secure/attachment/12997598/node1.log","24/Mar/20 19:07;lasaro;node2.log;https://issues.apache.org/jira/secure/attachment/12997597/node2.log","24/Mar/20 19:07;lasaro;node3.log;https://issues.apache.org/jira/secure/attachment/12997596/node3.log",,,,,,,,3.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:05 UTC 2020,,,,,,,,,,"0|z0cuug:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Mar/20 21:22;lasaro;Just to complement on the behavior (not covered by the logs), if I bring node 3 back up, it becomes the leader, 2 a follower, and 1 does not finish the election.

If I stop and restart node 1, then it joins the cluster successfully.

It seems like the connection from 1 to 2 needs a ""refresh"" in order to work properly.;;;","24/Mar/20 22:48;lasaro;After I enabled SASL in order to force the asynchronous creation of sockets, the problem no longer reproduces. Hence I am guessing this might be related to ZOOKEEPER-900;;;","25/Mar/20 14:19;symat;Thanks for the logs and all the details! I still try to understand what exactly happened here.

Unfortunately the logs for Server 3 are ended around 11:16:15. Maybe not all the log messages got flushed to the log file.

The first thing I found is that after killing Server 3, both Server 1 and 2 are starting a new leader election (around 11:17:14) and sending their votes to each other, but the Server 1 never received the votes of Server 2 while Server 2 receives the votes of Server 1.

The second interesting thing is that after 11:17:14 only Server 2 tries to establish connection periodically to Server 3. Server 1 doesn't realize that the connection is broken.

Something is really odd with Server 1...

There is an important error for Server 1, which can explains maybe the problem:
{code:java}
03/24/20 11:16:16,297 [WorkerReceiver[myid=1]] ERROR [org.apache.zookeeper.server.NIOServerCnxnFactory] (NIOServerCnxnFactory.java:92) - Thread Thread[WorkerReceiver[myid=1],5,main] died

java.nio.BufferUnderflowException: null
     at java.nio.HeapByteBuffer.get(HeapByteBuffer.java:178) ~[?:?]
     at java.nio.ByteBuffer.get(ByteBuffer.java:762) ~[?:?]
     at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:278) ~[zookeeper-3.5.7.jar:3.5.7]                                                                                
{code}

As far as I can tell, this exception (and the serve 1 and 3 log messages before this time) suggests that somehow a partial message got transferred from Server 3 to Server 1 causing some unexpected problems. Also for some reason the connection got broken between Server 3 and Server 1 way before 11:17:14.

This is a strange scenario, I haven't seen it yet. I will continue the investigation.

At the moment my guess is that this should be some OS / JDK / network related issue that triggers some unhandled exception in ZooKeeper. Would it be possible for you to try out two things?
 - does the same problem appear with an older Java version? (e.g. latest OpenJDK 8) I'm wondering why we don't handle this particular exception in the code, maybe this is something we haven't seen before with the older JDK versions?
 - does the same problem appear with using the {{zookeeper.serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory}} in zoo.cfg? In the new ZooKeeper Netty is also supported (actually it is necessary to switch to Netty, if someone wants to use SSL in ZooKeeper). Maybe using Netty instead of NIO would solve the problem.

If any of these workarounds would help, then still we have an issue in ZooKeeper (at least about handling this exception correctly). But it would help in the investigation to see if any of these changes would fix the problem.;;;","25/Mar/20 18:08;lasaro;Thank you for the analysis, [~symat].

Wrt to testing with NETTY, before trying SASL I did try just NETTY, but the behavior was exactly the same.

Wrt to using an older JDK, I reverted all my changes to the configs and put back the original version, 3.5.5, but didn't get to try other JDK. The problem no longer reproduces and I am still trying to figure if/what I am missing that might have changed the setup.

 

Regarding not handling the BufferUnderflowException properly, yes, it makes sense; the thread died and wasn't recreated so no more messages were ever received.

 

 ;;;","26/Mar/20 06:19;symat;Sorry, I just wrote the NETTY config parameter wrong. I guess you did it right when you tested it, still let me correct myself. You need {{serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory}} in the zoo.cfg, or using the system property {{-Dzookeeper.serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory}}.

I will try to reproduce the issue locally with Docker using ZooKeeper 3.5.7 and OpenJDK 12.0.2. Although I am not sure if this can be reproduced in Docker...

I will also create a small patch to handle this BufferUnderflowException exception. Do you see this same exception all the time when some of the server fails to rejoin? Or was this only a single random error?;;;","26/Mar/20 07:20;symat;What OS version are you using?;;;","26/Mar/20 09:09;symat;I was trying to reproduce the issue using ZooKeeper 3.5.7 and OpenJDK 12.0.2 with:
- this compose file: https://github.com/symat/zookeeper-docker-test/blob/master/3_nodes_zk_jdk_12.yml
- this config (based on your config): https://github.com/symat/zookeeper-docker-test/blob/master/conf/ZOOKEEPER-3769_zoo.cfg

I used OpenJDK 12.0.2 runtime in the docker containers. And I was trying out ZooKeeper 3.5.7 compiled both with 8u424 and with 12.0.2.

Unfortunately everything was working fine... I haven't seen the BufferUnderflowException and the quorum was up quickly after I stopped the container of Server 3 (which was the leader perviously).

Maybe it is an OS / networking related thing which can not be simulated with docker on a single machine. Anyway, I will create a patched version to handle this exception.;;;","26/Mar/20 09:49;symat;I created a patched 3.5.7 version, where the exception is caught and the malformed message is skipped. Can you maybe try out this version?
https://drive.google.com/open?id=1cTdusaEFIVvH2D5KSrj6M9VVJoqlaQwD

This should print out a warning to the log after catching the exception: 
{{Skipping the processing of a partial / malformed response message sent by sid=XXX}};;;","26/Mar/20 20:48;lasaro;I went back and looked into some older logs and could confirm that the WorkerReceiver died and that's what caused the election to hang. However, the BufferUnderflowException was present in very few instances. Most of the time, it was a NegativeArraySizeException that was caught, but pretty much in the same situation, that is, after the connection being broken to node3. The following are excerpts from node1 and node 3. Let me know if you would like to have a look at the full logs.

03/23/20 10:14:45,772 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.ZooKeeperServer] (ZooKeeperServer.java:166) - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /company/service/log/version-2 snapdir /company/service/data/version-2

03/23/20 10:14:45,772 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.Learner] (Follower.java:69) - FOLLOWING - LEADER ELECTION TOOK - 9 MS

03/23/20 10:14:45,774 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.quorum.QuorumPeer] (QuorumPeer.java:202) - Resolved address for companydemo3.snc4.companyinc.com: companydemo3.snc4.companyinc.com/172.22.64.148

03/23/20 10:14:45,793 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.quorum.Learner] (ZooTrace.java:71) - i UNKNOWN17 500000000 null

03/23/20 10:14:45,798 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.quorum.Learner] (ZooTrace.java:71) - i DIFF 40000001f null

03/23/20 10:14:45,799 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.Learner] (Learner.java:391) - Getting a diff from the leader 0x40000001f

03/23/20 10:14:45,801 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.quorum.Learner] (ZooTrace.java:71) - i NEWLEADER 500000000 null

03/23/20 10:14:45,801 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.Learner] (Learner.java:546) - Learner received NEWLEADER message

03/23/20 10:14:45,815 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.quorum.Learner] (ZooTrace.java:71) - i UPTODATE ffffffffffffffff null

03/23/20 10:14:45,816 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.Learner] (Learner.java:529) - Learner received UPTODATE message

03/23/20 10:14:45,816 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.quorum.QuorumPeer] (QuorumPeer.java:1916) - Reconfig feature is disabled, skip reconfig processing.

03/23/20 10:14:45,817 [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.CommitProcessor] (CommitProcessor.java:256) - Configuring CommitProcessor with 32 worker threads.

03/23/20 10:14:46,064 [companydemo1.snc4.companyinc.com/172.22.65.65:4000] INFO [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:924) - Received connection request 172.22.30.98:58472

03/23/20 10:14:46,064 [companydemo1.snc4.companyinc.com/172.22.65.65:4000] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1038) - Address of remote peer: 3

03/23/20 10:14:46,064 [companydemo1.snc4.companyinc.com/172.22.65.65:4000] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1055) - Calling finish for 3

03/23/20 10:14:46,064 [companydemo1.snc4.companyinc.com/172.22.65.65:4000] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1072) - Removing entry from senderWorkerMap sid=3

03/23/20 10:14:46,065 [SendWorker:3] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1143) - Interrupted while waiting for message on queue

java.lang.InterruptedException: null

at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]

at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]

at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]

at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1294) ~[zookeeper-3.5.7.jar:3.5.7]

at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:82) ~[zookeeper-3.5.7.jar:3.5.7]

at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1131) ~[zookeeper-3.5.7.jar:3.5.7]

03/23/20 10:14:46,065 [SendWorker:3] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1114) - Attempting to send lastMessage to sid=3

03/23/20 10:14:46,066 [SendWorker:3] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1055) - Calling finish for 3

03/23/20 10:14:46,066 [WorkerReceiver[myid=1]] INFO [org.apache.zookeeper.server.quorum.FastLeaderElection] (FastLeaderElection.java:267) - Backward compatibility mode (28 bits), server id: 3

03/23/20 10:14:46,065 [RecvWorker:3] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1227) - Connection broken for id 3, my id = 1, error =

java.net.SocketException: Socket closed

at java.net.SocketInputStream.socketRead0(Native Method) ~[?:?]

at java.net.SocketInputStream.socketRead(SocketInputStream.java:115) ~[?:?]

at java.net.SocketInputStream.read(SocketInputStream.java:168) ~[?:?]

at java.net.SocketInputStream.read(SocketInputStream.java:140) ~[?:?]

at java.io.BufferedInputStream.fill(BufferedInputStream.java:252) ~[?:?]

at java.io.BufferedInputStream.read(BufferedInputStream.java:271) ~[?:?]

at java.io.DataInputStream.readInt(DataInputStream.java:392) ~[?:?]

at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1212) ~[zookeeper-3.5.7.jar:3.5.7]

03/23/20 10:14:46,066 [SendWorker:3] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1153) - Send worker leaving thread id 3 my id = 1

03/23/20 10:14:46,066 [WorkerReceiver[myid=1]] INFO [org.apache.zookeeper.server.quorum.FastLeaderElection] (FastLeaderElection.java:309) - Backward compatibility mode (before reconfig), server id: 3

03/23/20 10:14:46,066 [RecvWorker:3] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1230) - Interrupting SendWorker

03/23/20 10:14:46,066 [RecvWorker:3] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1055) - Calling finish for 3

03/23/20 10:14:46,066 [WorkerReceiver[myid=1]] DEBUG [org.apache.zookeeper.server.quorum.FastLeaderElection] (FastLeaderElection.java:332) - Receive new notification message. My id = 1

03/23/20 10:14:46,067 [WorkerReceiver[myid=1]] INFO [org.apache.zookeeper.server.quorum.FastLeaderElection] (FastLeaderElection.java:679) - Notification: 0 (message format version), 0 (n.leader), 0x583c5800d6340d (n.zxid), 0xb71421b100000000 (n.round), FOLLOWING (n.state), 3 (n.sid), 0x583c58 (n.peerEPoch), FOLLOWING (my state)

03/23/20 10:14:46,127 [WorkerReceiver[myid=1]] ERROR [org.apache.zookeeper.server.NIOServerCnxnFactory] (NIOServerCnxnFactory.java:92) - Thread Thread[WorkerReceiver[myid=1],5,main] died

java.lang.NegativeArraySizeException: -1082130432

at org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$WorkerReceiver.run(FastLeaderElection.java:276) ~[zookeeper-3.5.7.jar:3.5.7]

at java.lang.Thread.run(Thread.java:835) ~[?:?]

03/23/20 10:14:48,729 [companydemo1.snc4.companyinc.com/172.22.65.65:4000] INFO [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:924) - Received connection request 172.22.24.91:44072

03/23/20 10:14:48,729 [companydemo1.snc4.companyinc.com/172.22.65.65:4000] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1038) - Address of remote peer: 1

03/23/20 10:14:48,730 [RecvWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1227) - Connection broken for id 1, my id = 1, error =

java.io.EOFException: null

at java.io.DataInputStream.readInt(DataInputStream.java:397) ~[?:?]

at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1212) ~[zookeeper-3.5.7.jar:3.5.7]

03/23/20 10:14:48,731 [RecvWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1230) - Interrupting SendWorker

03/23/20 10:14:48,731 [RecvWorker:1] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1055) - Calling finish for 1

03/23/20 10:14:48,732 [RecvWorker:1] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1072) - Removing entry from senderWorkerMap sid=1

03/23/20 10:14:48,732 [SendWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1143) - Interrupted while waiting for message on queue

java.lang.InterruptedException: null

at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]

 

 

Node 3

 

03/23/20 10:14:45,796 [LearnerHandler-/172.22.65.65:60166] DEBUG [org.apache.zookeeper.server.quorum.LearnerHandler] (LearnerHandler.java:480) - Sending NEWLEADER message to 1

03/23/20 10:14:45,797 [Sender-/172.22.65.65:60166] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - o DIFF 40000001f null

03/23/20 10:14:45,797 [Sender-/172.22.64.47:44648] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - o DIFF 40000001f null

03/23/20 10:14:45,798 [Sender-/172.22.65.65:60166] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - o NEWLEADER 500000000 null

03/23/20 10:14:45,798 [Sender-/172.22.64.47:44648] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - o NEWLEADER 500000000 null

03/23/20 10:14:45,804 [LearnerHandler-/172.22.65.65:60166] DEBUG [org.apache.zookeeper.server.quorum.LearnerHandler] (LearnerHandler.java:513) - Received NEWLEADER-ACK message from 1

03/23/20 10:14:45,804 [LearnerHandler-/172.22.64.47:44648] DEBUG [org.apache.zookeeper.server.quorum.LearnerHandler] (LearnerHandler.java:513) - Received NEWLEADER-ACK message from 2

03/23/20 10:14:45,804 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.Leader] (Leader.java:1296) - Have quorum of supporters, sids: [ [1, 3],[1, 3] ]; starting up and setting last processed zxid: 0x500000000

03/23/20 10:14:45,805 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.quorum.QuorumPeer] (QuorumPeer.java:1916) - Reconfig feature is disabled, skip reconfig processing.

03/23/20 10:14:45,806 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x104c41214550000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x104c41214550000 40000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x204c3f1cea10000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x204c3f1cea10000 40000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x304c3eda5410000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x304c3eda5410000 40000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x204c3ef8a220000

03/23/20 10:14:45,807 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x204c3ef8a220000 40000

03/23/20 10:14:45,808 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x304c3eb60c30000

03/23/20 10:14:45,808 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x304c3eb60c30000 40000

03/23/20 10:14:45,808 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x104c40fcfd70000

03/23/20 10:14:45,808 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x104c40fcfd70000 40000

03/23/20 10:14:45,810 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.quorum.CommitProcessor] (CommitProcessor.java:256) - Configuring CommitProcessor with 32 worker threads.

03/23/20 10:14:45,812 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.PrepRequestProcessor] (PrepRequestProcessor.java:99) - zookeeper.skipACL==""yes"", ACL checks will be skipped

03/23/20 10:14:45,814 [QuorumPeer[myid=3](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled)] INFO [org.apache.zookeeper.server.ContainerManager] (ContainerManager.java:64) - Using checkIntervalMs=60000 maxPerMinute=10000

03/23/20 10:14:45,815 [LearnerHandler-/172.22.65.65:60166] DEBUG [org.apache.zookeeper.server.quorum.LearnerHandler] (LearnerHandler.java:534) - Sending UPTODATE message to 1

03/23/20 10:14:45,815 [LearnerHandler-/172.22.64.47:44648] DEBUG [org.apache.zookeeper.server.quorum.LearnerHandler] (LearnerHandler.java:534) - Sending UPTODATE message to 2

03/23/20 10:14:45,815 [Sender-/172.22.65.65:60166] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - o UPTODATE ffffffffffffffff null

03/23/20 10:14:45,815 [Sender-/172.22.64.47:44648] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - o UPTODATE ffffffffffffffff null

03/23/20 10:14:45,816 [LearnerHandler-/172.22.64.47:44648] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - i ACK 500000000 null

03/23/20 10:14:45,816 [LearnerHandler-/172.22.64.47:44648] TRACE [org.apache.zookeeper.server.quorum.Leader] (Leader.java:849) - Ack zxid: 0x500000000

03/23/20 10:14:45,816 [LearnerHandler-/172.22.65.65:60166] TRACE [org.apache.zookeeper.server.quorum.LearnerHandler] (ZooTrace.java:71) - i ACK 500000000 null

03/23/20 10:14:45,816 [LearnerHandler-/172.22.64.47:44648] TRACE [org.apache.zookeeper.server.quorum.Leader] (Leader.java:855) - outstanding proposals all

03/23/20 10:14:45,816 [LearnerHandler-/172.22.65.65:60166] TRACE [org.apache.zookeeper.server.quorum.Leader] (Leader.java:849) - Ack zxid: 0x500000000

03/23/20 10:14:45,817 [LearnerHandler-/172.22.65.65:60166] TRACE [org.apache.zookeeper.server.quorum.Leader] (Leader.java:855) - outstanding proposals all

03/23/20 10:14:46,065 [RecvWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1227) - Connection broken for id 1, my id = 3, error =

java.io.EOFException: null

        at java.io.DataInputStream.readInt(DataInputStream.java:397) ~[?:?]

        at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1212) ~[zookeeper-3.5.7.jar:3.5.7]

03/23/20 10:14:46,065 [RecvWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1230) - Interrupting SendWorker

03/23/20 10:14:46,065 [RecvWorker:1] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1055) - Calling finish for 1

03/23/20 10:14:46,066 [RecvWorker:1] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1072) - Removing entry from senderWorkerMap sid=1

03/23/20 10:14:46,066 [SendWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1143) - Interrupted while waiting for message on queue

java.lang.InterruptedException: null

        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2056) ~[?:?]

        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2133) ~[?:?]

        at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:432) ~[?:?]

        at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1294) ~[zookeeper-3.5.7.jar:3.5.7]

        at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:82) ~[zookeeper-3.5.7.jar:3.5.7]

        at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1131) ~[zookeeper-3.5.7.jar:3.5.7]

03/23/20 10:14:46,066 [SendWorker:1] DEBUG [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1055) - Calling finish for 1

03/23/20 10:14:46,066 [SendWorker:1] WARN [org.apache.zookeeper.server.quorum.QuorumCnxManager] (QuorumCnxManager.java:1153) - Send worker leaving thread  id 1 my id = 3

03/23/20 10:14:50,290 [NIOServerCxnFactory.AcceptThread:0.0.0.0/0.0.0.0:2181] DEBUG [org.apache.zookeeper.server.NIOServerCnxnFactory] (NIOServerCnxnFactory.java:296) - Accepted socket connection from /172.22.64.148:41132

03/23/20 10:14:50,295 [NIOWorkerThread-1] DEBUG [org.apache.zookeeper.server.ZooKeeperServer] (ZooKeeperServer.java:1001) - Session establishment request from client /172.22.64.148:41132 client's lastZxid is 0x0

03/23/20 10:14:50,295 [NIOWorkerThread-1] DEBUG [org.apache.zookeeper.server.SessionTrackerImpl] (SessionTrackerImpl.java:274) - Adding session 0x304c3f1b81c0000

03/23/20 10:14:50,295 [NIOWorkerThread-1] TRACE [org.apache.zookeeper.server.SessionTrackerImpl] (ZooTrace.java:71) - SessionTrackerImpl --- Adding session 0x304c3f1b81c0000 40000

03/23/20 10:14:50,296 [NIOWorkerThread-1] DEBUG [org.apache.zookeeper.server.ZooKeeperServer] (ZooKeeperServer.java:1052) - Client attempting to establish new session: session = 0x304c3f1b81c0000, zxid = 0x0, timeout = 60000, address = /172.22.64.148:41132

03/23/20 10:14:50,296 [ProcessThread(sid:3 cport:-1):] TRACE [org.apache.zookeeper.server.PrepRequestProcessor] (ZooTrace.java:88) - :Psessionid:0x304c3f1b81c0000 type:createSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a

 

 

 ;;;","27/Mar/20 10:54;symat;Thanks, this is an important observation. It also means that the first patched ZooKeeper I shared with you will not help in all cases.

I will create a more complete patch and send it to you later today. I will also try to write some unit tests to generate malformed / partial notification messages.

But I am still confused why no one have seen this problem before. Is there anything special in your networking setup? Are you maybe using some tunnels?

Also: are you starting the cluster with an empty snapshot, or you always boot the cluster from an existing snapshot when you do these tests? Have you used dynamic reconfig in the cluster before?;;;","27/Mar/20 15:07;symat;I was able to reproduce all these exceptions (and more :) ) with some unit tests and did some changes in the code to properly handle the error cases. I hope this will help in your case.

This is the commit I created (on top of branch 3.5): https://github.com/symat/zookeeper/commit/c080690adfab1bb4be2a3c4ba34a9b80e00d32f0

I compiled a new patched ZooKeeper for you:
https://drive.google.com/open?id=1kjG7JO3n1SDe2EduI_dGvfZzq0a-SwEy

Is it possible for you to test this version?
If it would work, then I would submit a Pull Request.;;;","27/Mar/20 18:57;lasaro;[~symat], thanks for the updated patch. I gave it a spin and it is working, as in its not regressing anything else. I cannot confirm that it handles the issue I had as I still haven't managed to reproduce.
Trying to answer your questions,
 # There is nothing particular to this setup; all are physical boxes, running on the same network, OS (centos 7) and java version (12)
 # During the time the problem reproduced, I had multiple runs in which I just restarted the service, but also runs in which I cleaned the setup. It consistently reproduced, until it didn't. Whatever it was, it doesn't seem related to the snapshots.
 # Regarding dynamic reconfiguration, no, I haven't used it in this setup.
 # You had asked me if I had tried Netty. Please ignore my previous response. I didn't try it while the problem still reproduced.

Even if I cannot reproduce, I still think this is a fix worth having. Please submit the PR.

Should I change the Jira name to better reflect what actually happened?

 ;;;","28/Mar/20 20:09;symat;Thanks for all the background info, and for testing the patch! And also thanks for the comment on the commit! (I asked the dynamic re-config, because that affects the vote message content as well)

I agree, this patch makes sense anyway, it never hurts to handle exceptions in the code, even if they are exceptionally hard to reproduce :)

I don't think you should change the Jira title, it kind of shows the symptom. But feel free to change it if you want. I submitted the PR on the master branch, but I am sure we will backport it to both 3.6 and 3.5 branches. Actually this error is also present on branch 3.4, but I am not sure if we will add the fix there, as 3.4 is practically EOL by now. But if you would need it on 3.4 then let me know!;;;","29/Mar/20 12:28;lasaro;I had to backtrack on it happening with Netty. The factory was
misconfigured and it was actually running on NIO.
Regarding the version, I tried 3.5.5 and 3.5.7.

Lásaro


On Sun, Mar 29, 2020 at 4:26 AM ASF GitHub Bot (Jira) <jira@apache.org>

;;;","30/Mar/20 08:16;symat;OK, thanks for the info!;;;","03/Apr/20 18:51;lasaro;thanks for driving this, [~symat]

 ;;;","07/Apr/20 07:09;eolivelli;Committed to master and branch-3.6
thank you [~symat];;;","07/Apr/20 07:10;eolivelli;Committed the port to branch-3.5 as well.;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,
remove a useless throwing CliException,ZOOKEEPER-3760,13292087,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,lingjinjiang,lingjinjiang,17/Mar/20 00:51,11/May/20 15:41,13/Jul/23 09:08,26/Mar/20 17:47,3.5.7,,,,,,,,,3.5.8,3.6.1,,,,,,,,0,pull-request-available,,"when I upgrade zookeeper from 3.4.13 to 3.5.7 in my application, I find the function processCmd in ZooKeeperMain.java is just like blow
{code:java}
protected boolean processCmd(MyCommandOptions co) throws CliException, IOException, InterruptedException {
    boolean watch = false;
    try {
        watch = processZKCmd(co);
        exitCode = ExitCode.EXECUTION_FINISHED.getValue();
    } catch (CliException ex) {
        exitCode = ex.getExitCode();
        System.err.println(ex.getMessage());
    }
    return watch;
}
{code}
it throws {color:#FF0000}CliException {color}which has been caught in the funciton, so I think it can be removed.",,lingjinjiang,symat,,,,,,,,,,,,,,,,,,"lingjinjiang commented on pull request #1286: ZOOKEEPER-3760: remove a useless throwing CliException
URL: https://github.com/apache/zookeeper/pull/1286
 
 
   https://issues.apache.org/jira/browse/ZOOKEEPER-3760
   
   When I upgrade zookeeper from 3.4.13 to 3.5.7 in my application, I find the function processCmd in ZooKeeperMain.java throws a CliException which has been caught in the function. So I think it can be removed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Mar/20 01:01;githubbot;600","asfgit commented on pull request #1286: ZOOKEEPER-3760: remove a useless throwing CliException
URL: https://github.com/apache/zookeeper/pull/1286
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 17:42;githubbot;600","nkalmar commented on issue #1286: ZOOKEEPER-3760: remove a useless throwing CliException
URL: https://github.com/apache/zookeeper/pull/1286#issuecomment-604578133
 
 
   Merged to master, 3.6 and 3.5 (had conflict, one extra formatting change here).
   Thanks @lingjinjiang 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 17:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,"17/Mar/20 00:52;lingjinjiang;ZOOKEEPER-3760-1.patch;https://issues.apache.org/jira/secure/attachment/12996872/ZOOKEEPER-3760-1.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:19 UTC 2020,,,,,,,,,,"0|z0clew:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update from 3.5.7 to 3.6.0 does not work,ZOOKEEPER-3758,13291930,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,ago,ago,16/Mar/20 09:52,02/Apr/20 16:53,13/Jul/23 09:08,19/Mar/20 16:10,3.6.0,,,,,,,,,3.6.1,,,,,server,,,,0,pull-request-available,,"Hello,
 we have a cluster with 5 zookeeper servers. We tried the update from 3.5.7 to 3.6.0 but it does not work.

We got the following:
{code:java}
2020-03-16 10:40:45,514 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):QuorumPeer@863] - Peer state changed: looking 2020-03-16 10:40:45,514 [myid:1] - WARN  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):QuorumPeer@1501] - PeerState set to LOOKING 2020-03-16 10:40:45,514 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):QuorumPeer@1371] - LOOKING 2020-03-16 10:40:45,514 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):FastLeaderElection@931] - New election. My id = 1, proposed zxid=0x0 2020-03-16 10:40:45,515 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@376] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING , n.leader:1, n.round:0x1b, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0 2020-03-16 10:40:45,517 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@376] - Notification: my state:LOOKING; n.sid:2, n.state:FOLLOWI NG, n.leader:4, n.round:0x1a, n.peerEpoch:0x5c, n.zxid:0x5b00000004, message format version:0x2, n.config version:0x0 2020-03-16 10:40:45,517 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@376] - Notification: my state:LOOKING; n.sid:3, n.state:FOLLOWI NG, n.leader:4, n.round:0x1a, n.peerEpoch:0x5c, n.zxid:0x5b00000004, message format version:0x2, n.config version:0x0 2020-03-16 10:40:45,517 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@376] - Notification: my state:LOOKING; n.sid:5, n.state:FOLLOWI NG, n.leader:4, n.round:0x1a, n.peerEpoch:0x5c, n.zxid:0x5b00000004, message format version:0x2, n.config version:0x0 2020-03-16 10:40:45,518 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection$Messenger$WorkerReceiver@376] - Notification: my state:LOOKING; n.sid:4, n.state:LEADING , n.leader:4, n.round:0x1a, n.peerEpoch:0x5c, n.zxid:0x5b00000004, message format version:0x2, n.config version:0x0 2020-03-16 10:40:45,518 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):QuorumPeer@857] - Peer state changed: following 2020-03-16 10:40:45,518 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):QuorumPeer@1453] - FOLLOWING 2020-03-16 10:40:45,518 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ZooKeeperServer@1246] - minSessionTimeout set to 4000 2020-03-16 10:40:45,518 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ZooKeeperServer@1255] - maxSessionTimeout set to 40000 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ResponseCache@45] - Response cache size is initialized with value 400. 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ResponseCache@45] - Response cache size is initialized with value 400. 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestPathMetricsCollector@111] - zookeeper.pathStats.slotCapacity = 60 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestPathMetricsCollector@112] - zookeeper.pathStats.slotDuration = 15 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestPathMetricsCollector@113] - zookeeper.pathStats.maxDepth = 6 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestPathMetricsCollector@114] - zookeeper.pathStats.initialDelay = 5 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestPathMetricsCollector@115] - zookeeper.pathStats.delay = 5 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):RequestPathMetricsCollector@116] - zookeeper.pathStats.enabled = false 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ZooKeeperServer@1470] - The max bytes for all large requests are set t o 104857600 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ZooKeeperServer@1484] - The large request threshold is set to -1 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):ZooKeeperServer@329] - Created server with tickTime 2000 minSessionTim eout 4000 maxSessionTimeout 40000 clientPortListenBacklog -1 datadir /opt/loway/zookeeper/logs/version-2 snapdir /opt/loway/zookeeper/data/version-2 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):Follower@75] - FOLLOWING - LEADER ELECTION TOOK - 4 MS 2020-03-16 10:40:45,519 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):QuorumPeer@863] - Peer state changed: following - discovery 2020-03-16 10:40:46,521 [myid:1] - WARN  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):Follower@129] - Exception when following the leader java.lang.IllegalArgumentException        at java.util.concurrent.ThreadPoolExecutor.<init>(ThreadPoolExecutor.java:1314)        at java.util.concurrent.ThreadPoolExecutor.<init>(ThreadPoolExecutor.java:1202)        at java.util.concurrent.Executors.newFixedThreadPool(Executors.java:89)        at org.apache.zookeeper.server.quorum.Learner.connectToLeader(Learner.java:275)        at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:87)        at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1455) 2020-03-16 10:40:46,521 [myid:1] - INFO  [QuorumPeer[myid=1](plain=0.0.0.0:2181)(secure=0.0.0.0:2281):Follower@292] - shutdown Follower{code}",,ago,eolivelli,nkalmar,symat,,,,,,,,,,,,,,,,"symat commented on pull request #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288
 
 
   Since ZooKeeper 3.6.0 we can specify multiple addresses for each ZooKeeper server instance
   (this can increase availability when multiple physical network interfaces can be used parallel
   in the cluster). ZooKeeper will perform ICMP ECHO requests or try to establish a TCP connection
   on port 7 (Echo) of the destination host in order to find the reachable addresses. This should
   happen only if the user provide multiple addresses in the configuration, in a single addess is
   used then ZooKeeper shouldn’t send any ICMP requests.
   
   This works as we expected for the leader election connections, but in this Jira issue we found
   a bug when the reachability check was performed even with a single address when the Follower
   tries to connect to the newly elected Leader.
   
   The fix follows the same approach we discussed for the election protocol before (see
   ZOOKEEPER-3698). We avoid the reachability check for single addresses. Also when we have
   multiple addresses and none of them can be reached, we still start to connect to all addresses
   in parallel.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 09:21;githubbot;600","eolivelli commented on pull request #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#discussion_r394934877
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
 ##########
 @@ -303,7 +303,9 @@ protected void connectToLeader(MultipleAddresses multiAddr, String hostname) thr
         this.leaderAddr = multiAddr;
         Set<InetSocketAddress> addresses;
         if (self.isMultiAddressReachabilityCheckEnabled()) {
 
 Review comment:
   Isn't this disabled by default?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 10:43;githubbot;600","eolivelli commented on issue #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#issuecomment-601133104
 
 
   @nkalmar this is a good candidate for 3.6.1
   
   please take a look
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 11:41;githubbot;600","nkalmar commented on issue #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#issuecomment-601147072
 
 
   I messed up my python env, and the script is not running, I'll try to fix it. I can merge after.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 12:19;githubbot;600","symat commented on pull request #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#discussion_r395072587
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
 ##########
 @@ -303,7 +303,9 @@ protected void connectToLeader(MultipleAddresses multiAddr, String hostname) thr
         this.leaderAddr = multiAddr;
         Set<InetSocketAddress> addresses;
         if (self.isMultiAddressReachabilityCheckEnabled()) {
 
 Review comment:
   no, unfortunately not. There are two separate parameters:
   - multiAddress.enabled : this is for enabling/disabling the whole multiaddress feature, this is set to false to default
   - multiAddress.reachabilityCheckEnabled : this one can be used to disable the ICMP messages when multiple addresses are used. But this is enabled by default, as disabling it actually makes the multiAddress recovery unreliable (as ZK will not really be able to select among the addresses)
   
   There is already a logic in the MultiAddress.getReachableOrOne() method which will skip the ICMP check if there is only a single address is provided:
   https://github.com/apache/zookeeper/blob/a5a4743733b8939464af82c1ee68a593fadbe362/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/MultipleAddresses.java#L151-L158
   
   basically the same logic was missing from the {{MultipleAddresses.getAllReachableAddresses}} method.
   
   I should have thinking of it, but forget when I fixed ZOOKEEPER-3698.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:35;githubbot;600","symat commented on pull request #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#discussion_r395072587
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Learner.java
 ##########
 @@ -303,7 +303,9 @@ protected void connectToLeader(MultipleAddresses multiAddr, String hostname) thr
         this.leaderAddr = multiAddr;
         Set<InetSocketAddress> addresses;
         if (self.isMultiAddressReachabilityCheckEnabled()) {
 
 Review comment:
   no, unfortunately not. There are two separate parameters:
   - multiAddress.enabled : this is for enabling/disabling the whole multiaddress feature, this is set to false to default
   - multiAddress.reachabilityCheckEnabled : this one can be used to disable the ICMP messages when multiple addresses are used. But this is enabled by default, as disabling it actually makes the multiAddress recovery unreliable (as ZK will not really be able to select among the addresses)
   
   There is already a logic in the MultiAddress.getReachableOrOne() method which will skip the ICMP check if there is only a single address is provided:
   https://github.com/apache/zookeeper/blob/a5a4743733b8939464af82c1ee68a593fadbe362/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/MultipleAddresses.java#L151-L158
   
   basically the same logic was missing from the `MultipleAddresses.getAllReachableAddresses` method.
   
   I should have thinking of it, but forget when I fixed ZOOKEEPER-3698.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:35;githubbot;600","symat commented on issue #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#issuecomment-601214350
 
 
   @eolivelli  @nkalmar  thanks for checking this so quickly!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:35;githubbot;600","asfgit commented on pull request #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 16:09;githubbot;600","nkalmar commented on issue #1288: ZOOKEEPER-3758: Leader reachability check fails with single address
URL: https://github.com/apache/zookeeper/pull/1288#issuecomment-601268743
 
 
   pushed to master and branch-3.6, thanks @symat 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 16:11;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,ZOOKEEPER-3778,ZOOKEEPER-3776,,,,,,,ZOOKEEPER-3698,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Mar 19 16:10:45 UTC 2020,,,,,,,,,,"0|z0ckg0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/Mar/20 10:17;eolivelli;Please start a discussion on user@zookeeper.apache.org
It will be easier to help you.
;;;","16/Mar/20 11:56;symat;We tested the 3.5.7 -> 3.6.0 upgrade before the release, but of course it is always possible that we missed something...

Could you also share your configs and java version when you write the email? Also please provide some more background info, like: are you doing a rolling-upgrade, or just simply starting a new cluster with the old data? Did you change anything in the config compared to the old cluster? Are you using static config files, or you use the dynamic re-config?;;;","16/Mar/20 12:04;symat;also a small hint: I checked the code and AFAICS this exception suggests that the given ZooKeeper instance (a follower) don't know what is the quorum address / port of the newly elected ZooKeeper server. This shouldn't really happen, unless you hit some bug or configuration issue. I am happy to dig deeper if you can send more info.

Also asking in the user mail list (as Enrico suggested) is better, as more people are watching there.;;;","16/Mar/20 14:33;ago;Hello, here is the requested data:
{code:java}
~ # java -version
openjdk version ""1.8.0_242""
OpenJDK Runtime Environment (build 1.8.0_242-b08)
OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)
{code}
{code:java}
# zoo.cfg
tickTime=2000
dataDir=/opt/loway/zookeeper/data
dataLogDir=/opt/loway/zookeeper/logs
clientPort=2181
secureClientPort=2281
initLimit=100
syncLimit=30
4lw.commands.whitelist=*
autopurge.purgeInterval=1
autopurge.snapRetainCount=5
server.1=zookeeper1.mydomain:2888:3888
server.2=zookeeper2.mydomain:2888:3888
server.3=zookeeper3.mydomain:2888:3888
server.4=zookeeper4.mydomain:2888:3888
server.5=zookeeper5.mydomain:2888:3888{code}
We update zookeeper nodes one by one by installing the new version. We are using static configs, the job is done by ansible so there is no human error during the update.

Is there anything else I can provide to debug the issue?;;;","17/Mar/20 14:31;symat;Thanks for the info!
I think it is enough for me to try to reproduce your setup / rolling-upgrade using some dockerized environment. 
I think I can work on it tomorrow, then I will come back with some results / questions, depending on how it went :);;;","17/Mar/20 14:38;ago;If you think you need other info, for fast interaction you can find me as 'ago' on freenode. Obviously we will report here useful info as well. FTR I'm on CET tz;;;","18/Mar/20 09:06;symat;I was able to test the rolling upgrade with 3 servers using these scripts: https://github.com/symat/zk-rolling-upgrade-test
I haven’t tried it with 5 servers yet, but I don’t think the number of servers would be an issue here.

But I have a hypothesis. I think in your environment the ICMP (ping) traffic is blocked by some firewall / OS setting and this can cause that you hit a bug in the code. Since ZooKeeper 3.6.0 you can specify multiple addresses for each ZooKeeper server instance (this can increase availability when multiple physical network interfaces can be used parallel in the cluster). ZooKeeper will perform ICMP ECHO requests or try to establish a TCP connection on port 7 (Echo) of the destination host in order to find the reachable addresses. This should happen only if you provide multiple addresses in the configuration, in your case ZooKeeper shouldn’t do any ICMP requests. But in the code I found, that it just might do it and if ZooKeeper can not reach the current leader using ICMP, then it would explain the exception you see.

Fortunately there is a workaround you can apply by setting the {{multiAddress.reachabilityCheckEnabled=false}} in zoo.cfg or by using the {{-Dzookeeper.multiAddress.reachabilityCheckEnabled=false}} system property. This should turn off the ICMP check regardless if you provide a single or multiple addresses. Can you please try this parameter? If it helps you, then it verifies my theory and I can provide a quick fix.

You can verify the current value of this config by looking for the following INFO log message in the ZooKeeper logs: ""multiAddress.reachabilityCheckEnabled set to "".;;;","18/Mar/20 11:29;ago;We are using iptables-based firewall and our cloud provider does not apply any restriction (i.e. there isn't a firewall on the cloud interface). However, we have no rules as OUTPUT and the policy is ACCEPT, so we are not blocking anything.

In short I can ping the others zookeeper servers from the shell.
Apart that I can try today or tomorrow your workaround;;;","18/Mar/20 12:59;symat;well, that is going against my hopes :)
still, I appreciate if you can check the workaround. If it doesn't help, then I will think about other cases and possibly create a patched version with more debug printouts to see what's happening... maybe I will try the rolling upgrade with 5 servers too.;;;","18/Mar/20 13:38;ago;With the properties it looks to be good here, but as said there are no limitations here on the icmp side. Is there anything I can try other the ping?;;;","18/Mar/20 17:36;symat;great! Thanks for testing it!

It means that we know where the problem is and how to fix it.

Although we are not sure why the ICMP fails from Java. Actually it is not necessary ICMP... This is the function we call in ZooKeeper: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/InetAddress.html#isReachable(int) and this function returns false in your case (but I don't know why), when the given Follower tries to reach the Leader. By setting {{multiAddress.reachabilityCheckEnabled=false}} you skipped this check.

Anyway, as I mentioned, this check should not be run unless you actually use the multiAddress feature, which you don't do, based on your config. So this is a bug. I will fix it quickly, hopefully tomorrow I can submit the PR.
;;;","18/Mar/20 17:50;ago;you're welcome...and thank you for the fast response.

I don't know how the release process works for zookeeper, but if you can release 3.6.1 I can test from 3.5.7 to ensure that works as expected.;;;","19/Mar/20 09:26;symat;Thanks for the offer! I am not sure when 3.6.1 will be released, but I will send you a link about the release candidate, we are always happy for anyone who can run tests (especially testing something as tricky, as rolling upgrade).

(btw. all the release candidates / release related discussions are on the dev@zookeeper.apache.org mail list);;;","19/Mar/20 16:10;nkalmar;Issue resolved by pull request 1288
[https://github.com/apache/zookeeper/pull/1288];;;",,,,,,,,,,,,,,,,,,,,,,,
Members failing to rejoin quorum,ZOOKEEPER-3756,13291171,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,dshi,dshi,11/Mar/20 20:43,20/May/20 07:06,13/Jul/23 09:08,23/Mar/20 15:20,3.5.6,3.5.7,,,,,,,,3.5.8,3.6.1,,,,leaderElection,,,,0,pull-request-available,,"Not sure if this is the place to ask, please close if it's not.

I am seeing some behavior that I can't explain since upgrading to 3.5:

In a 5 member quorum, when server 3 is the leader and each server has this in their configuration: 
{code:java}
server.1=100.71.255.254:2888:3888:participant;2181
server.2=100.71.255.253:2888:3888:participant;2181
server.3=100.71.255.252:2888:3888:participant;2181
server.4=100.71.255.251:2888:3888:participant;2181
server.5=100.71.255.250:2888:3888:participant;2181{code}
If servers 1 or 2 are restarted, they fail to rejoin the quorum with this in the logs:
{code:java}
2020-03-11 20:23:35,720 [myid:2] - INFO  [QuorumPeer[myid=2](plain=0.0.0.0:2181)(secure=disabled):QuorumPeer@1175] - LOOKING
2020-03-11 20:23:35,721 [myid:2] - INFO  [QuorumPeer[myid=2](plain=0.0.0.0:2181)(secure=disabled):FastLeaderElection@885] - New election. My id =  2, proposed zxid=0x1b8005f4bba
2020-03-11 20:23:35,733 [myid:2] - INFO  [WorkerSender[myid=2]:QuorumCnxManager@438] - Have smaller server identifier, so dropping the connection: (3, 2)
2020-03-11 20:23:35,734 [myid:2] - INFO  [0.0.0.0/0.0.0.0:3888:QuorumCnxManager$Listener@924] - Received connection request 100.126.116.201:36140
2020-03-11 20:23:35,735 [myid:2] - INFO  [WorkerSender[myid=2]:QuorumCnxManager@438] - Have smaller server identifier, so dropping the connection: (4, 2)
2020-03-11 20:23:35,740 [myid:2] - INFO  [WorkerSender[myid=2]:QuorumCnxManager@438] - Have smaller server identifier, so dropping the connection: (5, 2)
2020-03-11 20:23:35,740 [myid:2] - INFO  [0.0.0.0/0.0.0.0:3888:QuorumCnxManager$Listener@924] - Received connection request 100.126.116.201:36142
2020-03-11 20:23:35,740 [myid:2] - INFO  [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 2 (n.leader), 0x1b8005f4bba (n.zxid), 0x1 (n.round), LOOKING (n.state), 2 (n.sid), 0x1b8 (n.peerEPoch), LOOKING (my state)0 (n.config version)
2020-03-11 20:23:35,742 [myid:2] - WARN  [SendWorker:3:QuorumCnxManager$SendWorker@1143] - Interrupted while waiting for message on queue
java.lang.InterruptedException
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)
        at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1294)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:82)
        at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1131)
2020-03-11 20:23:35,744 [myid:2] - WARN  [SendWorker:3:QuorumCnxManager$SendWorker@1153] - Send worker leaving thread  id 3 my id = 2
2020-03-11 20:23:35,745 [myid:2] - WARN  [RecvWorker:3:QuorumCnxManager$RecvWorker@1230] - Interrupting SendWorker{code}
The only way I can seem to get them to rejoin the quorum is to restart the leader.

However, if I remove server 4 and 5 from the configuration of server 1 or 2 (so only servers 1, 2, and 3 remain in the configuration file), then they can rejoin the quorum fine. Is this expected and am I doing something wrong? Any help or explanation would be greatly appreciated. Thank you.",,apurtell,dshi,hanm,lasaro,nkalmar,symat,,,,,,,,,,,,,,"symat commented on pull request #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289
 
 
   Whenever we close the current master ZooKeeper server, a new leader election
   is triggered. During the new election, a connection will be established between
   all the servers, by calling the synchronized 'connectOne' method in
   QuorumCnxManager. The method will open the socket and send a single small
   initial message to the other server, usually very quickly. If the destination
   host is unreachable, it should fail immediately.
   
   However, when we use Kubernetes, then the destination host is always reachable
   as it points to Kubernetes services. If the actual container / pod is not
   available then the 'socket.connect' method will timeout (by default after 5 sec)
   instead of failing immediately with NoRouteToHostException. As the 'connectOne'
   method is synchronized, this timeout will block the creation of other
   connections, so a single unreachable host can cause timeout in the leader
   election protocol.
   
   One workaround is to decrease the socket connection timeout with the
   '-Dzookeeper.cnxTimeout' stystem property, but the proper fix would be to
   make the connection initiation fully asynchronous, as using very low timeout can
   have its own side effect. Fortunately most of the initial message sending
   is already made async: the SASL authentication can take more time, so the
   second (authentication + initial message sending) part of the initiation protocol 
   is already called in a separate thread, when Quorum SASL authentication is enabled.
   
   In the following patch I made the whole connection initiation async, by
   always using the async executor (not only when Quorum SASL is enabled) and
   also moving the socket.connect call into the async thread.
   
   I also created a unit test to verify my fix. I added a static socket factory that can be 
   changed by the tests using a packet private setter method. My test failed (and
   produced the same error logs as we see in the original Jira ticket) before I applied
   my changes and a time-outed as no leader election succeeded after 15 seconds.
   After the changes the test runs very quickly, in 1-2 seconds.
   
   Note: due to the multiAddress changes, we will need different PRs to the branch 3.5 
   and to the 3.6+ branches. I will submit the other PR once this got reviewed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:12;githubbot;600","eolivelli commented on pull request #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#discussion_r395073912
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -359,20 +359,49 @@ public Thread newThread(Runnable r) {
      *
      * @param sid
      */
-    public void testInitiateConnection(long sid) throws Exception {
+    public void testInitiateConnection(long sid) {
         LOG.debug(""Opening channel to server {}"", sid);
-        Socket sock = new Socket();
-        setSockOpts(sock);
-        InetSocketAddress address = self.getVotingView().get(sid).electionAddr.getReachableOrOne();
-        sock.connect(address, cnxTO);
-        initiateConnection(sock, sid);
+        initiateConnection(self.getVotingView().get(sid).electionAddr, sid);
     }
 
     /**
+     * First we create the socket, perform SSL handshake and authentication if needed.
+     * Then we perform the initiaion protocol.
      * If this server has initiated the connection, then it gives up on the
      * connection if it loses challenge. Otherwise, it keeps the connection.
      */
-    public void initiateConnection(final Socket sock, final Long sid) {
+    public void initiateConnection(final MultipleAddresses electionAddr, final Long sid) {
+        Socket sock = null;
+        try {
+            LOG.debug(""Opening channel to server {}"", sid);
+            if (self.isSslQuorum()) {
 
 Review comment:
   A better approach would be to add a
   Socket makeSocket() 
   method 
   and override it with PowerMock
   But we don't have powermock :(
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:37;githubbot;600","eolivelli commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601215372
 
 
   LGTM 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:37;githubbot;600","symat commented on pull request #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#discussion_r395082580
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -359,20 +359,49 @@ public Thread newThread(Runnable r) {
      *
      * @param sid
      */
-    public void testInitiateConnection(long sid) throws Exception {
+    public void testInitiateConnection(long sid) {
         LOG.debug(""Opening channel to server {}"", sid);
-        Socket sock = new Socket();
-        setSockOpts(sock);
-        InetSocketAddress address = self.getVotingView().get(sid).electionAddr.getReachableOrOne();
-        sock.connect(address, cnxTO);
-        initiateConnection(sock, sid);
+        initiateConnection(self.getVotingView().get(sid).electionAddr, sid);
     }
 
     /**
+     * First we create the socket, perform SSL handshake and authentication if needed.
+     * Then we perform the initiaion protocol.
      * If this server has initiated the connection, then it gives up on the
      * connection if it loses challenge. Otherwise, it keeps the connection.
      */
-    public void initiateConnection(final Socket sock, final Long sid) {
+    public void initiateConnection(final MultipleAddresses electionAddr, final Long sid) {
+        Socket sock = null;
+        try {
+            LOG.debug(""Opening channel to server {}"", sid);
+            if (self.isSslQuorum()) {
 
 Review comment:
   The makeSocket() is also a nice idea :)
   
   I was thinking 1-2 times already to use PowerMock. On the other hand the new JDK versions seems to be more strict with reflection... so I am not sure how 'future-proof' it would be.
   
   I was also thinking if we should use the `zookeeper.serverCnxnFactory` system property in the test, but we don't use the `ServerCnxnFactory` approach for the leaser election AFAICS. And implementing that would have been a longer story. Maybe for 4.0 it would be good, if we would touch the Leader Election part.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:47;githubbot;600","symat commented on pull request #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#discussion_r395082580
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -359,20 +359,49 @@ public Thread newThread(Runnable r) {
      *
      * @param sid
      */
-    public void testInitiateConnection(long sid) throws Exception {
+    public void testInitiateConnection(long sid) {
         LOG.debug(""Opening channel to server {}"", sid);
-        Socket sock = new Socket();
-        setSockOpts(sock);
-        InetSocketAddress address = self.getVotingView().get(sid).electionAddr.getReachableOrOne();
-        sock.connect(address, cnxTO);
-        initiateConnection(sock, sid);
+        initiateConnection(self.getVotingView().get(sid).electionAddr, sid);
     }
 
     /**
+     * First we create the socket, perform SSL handshake and authentication if needed.
+     * Then we perform the initiaion protocol.
      * If this server has initiated the connection, then it gives up on the
      * connection if it loses challenge. Otherwise, it keeps the connection.
      */
-    public void initiateConnection(final Socket sock, final Long sid) {
+    public void initiateConnection(final MultipleAddresses electionAddr, final Long sid) {
+        Socket sock = null;
+        try {
+            LOG.debug(""Opening channel to server {}"", sid);
+            if (self.isSslQuorum()) {
 
 Review comment:
   The makeSocket() is also a nice idea :)
   
   I was thinking 1-2 times already to use PowerMock. On the other hand the new JDK versions seems to be more strict with reflection... so I am not sure how 'future-proof' it would be.
   
   I was also thinking if we should use the `zookeeper.serverCnxnFactory` system property in the test, but we don't use the `ServerCnxnFactory` approach for the leader election AFAICS. And implementing that would have been a longer story. Maybe for 4.0 it would be good, if we would touch the Leader Election part.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:48;githubbot;600","eolivelli commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601227377
 
 
   With  the new release schedule of JDK the future is now ;) 
   Don't bother too much 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 14:59;githubbot;600","symat commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601240666
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 15:22;githubbot;600","symat commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601298352
 
 
   restart maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 16:58;githubbot;600","eolivelli commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601320396
 
 
   What was the error on CI?
   I hope we are not introducing some kind on instability.
   In theory this change should make more stable the system 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Mar/20 17:42;githubbot;600","symat commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601568101
 
 
   Yes, I agree. This should make things more stable. But also it changes an important part of the leader election... so we should be sure it is stable.
   
   This was the failed jenkins job: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/org.apache.zookeeper$zookeeper/1909/
   
   The `org.apache.zookeeper.test.WatcherTest` is failing only. As far as I can see, this test is using only a single ZK server, so the leader election shouldn't even triggered.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 07:31;githubbot;600","eolivelli commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601594104
 
 
   ok
   ready to ship it as soon as we have an other approval
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 08:56;githubbot;600","eolivelli commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-601884191
 
 
   @anmolnar @nkalmar PTAL
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 19:54;githubbot;600","symat commented on pull request #1293: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1293
 
 
   Whenever we close the current master ZooKeeper server, a new leader election
   is triggered. During the new election, a connection will be established between
   all the servers, by calling the synchronized 'connectOne' method in
   QuorumCnxManager. The method will open the socket and send a single small
   initial message to the other server, usually very quickly. If the destination
   host is unreachable, it should fail immediately.
   
   However, when we use Kubernetes, then the destination host is always reachable
   as it points to Kubernetes services. If the actual container / pod is not
   available then the 'socket.connect' method will timeout (by default after 5 sec)
   instead of failing immediately with NoRouteToHostException. As the 'connectOne'
   method is synchronized, this timeout will block the creation of other
   connections, so a single unreachable host can cause timeout in the leader
   election protocol.
   
   One workaround is to decrease the socket connection timeout with the
   '-Dzookeeper.cnxTimeout' stystem property, but the proper fix would be to
   make the connection initiation fully asynchronous, as using very low timeout can
   have its own side effect. Fortunately most of the initial message sending
   is already made async: the SASL authentication can take more time, so the
   second (authentication + initial message sending) part of the initiation protocol
   is already called in a separate thread, when Quorum SASL authentication is enabled.
   
   In the following patch I made the whole connection initiation async, by
   always using the async executor (not only when Quorum SASL is enabled) and
   also moving the socket.connect call into the async thread.
   
   I also created a unit test to verify my fix. I added a static socket factory that can be
   changed by the tests using a packet private setter method. My test failed (and
   produced the same error logs as we see in the original Jira ticket) before I applied
   my changes and a time-outed as no leader election succeeded after 15 seconds.
   After the changes the test runs very quickly, in 1-2 seconds.
   
   Note: due to the multiAddress changes, we will need different PRs to the branch 3.5
   and to the 3.6+ branches. I will submit the other PR once this got reviewed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 11:44;githubbot;600","symat commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-602543283
 
 
   FYI: I also submitted the PR for branch 3.5:
   https://github.com/apache/zookeeper/pull/1293
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 11:45;githubbot;600","symat commented on issue #1293: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1293#issuecomment-602543525
 
 
   FYI: the same fix can be found for 3.6+ here:
   https://github.com/apache/zookeeper/pull/1289
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 11:45;githubbot;600","asfgit commented on pull request #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 15:20;githubbot;600","nkalmar commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-602670239
 
 
   Thanks @symat , merged to master and branch-3.6. I'll check the PR for 3.5.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 15:21;githubbot;600","symat commented on issue #1289: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1289#issuecomment-602686312
 
 
   thanks @eolivelli  and @nkalmar  for the quick. reviews!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 15:48;githubbot;600","symat commented on issue #1293: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1293#issuecomment-604277486
 
 
   @eolivelli can you please take a look?
   this is the same as #1289 just for branch 3.5...
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 07:40;githubbot;600","nkalmar commented on issue #1293: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1293#issuecomment-604532914
 
 
   Merged to branch-3.5, thanks @symat 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 16:32;githubbot;600","nkalmar commented on pull request #1293: ZOOKEEPER-3756: Members slow to rejoin quorum using Kubernetes
URL: https://github.com/apache/zookeeper/pull/1293
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Mar/20 16:32;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12600,,,0,12600,,,,,,,,,,,,,,,,,ZOOKEEPER-2164,,,,ZOOKEEPER-3838,,,,,,,"13/Mar/20 17:54;dshi;Dockerfile;https://issues.apache.org/jira/secure/attachment/12996684/Dockerfile","13/Mar/20 18:15;dshi;configmap.yaml;https://issues.apache.org/jira/secure/attachment/12996690/configmap.yaml","13/Mar/20 17:54;dshi;docker-entrypoint.sh;https://issues.apache.org/jira/secure/attachment/12996683/docker-entrypoint.sh","13/Mar/20 17:54;dshi;jmx.yaml;https://issues.apache.org/jira/secure/attachment/12996685/jmx.yaml","13/Mar/20 19:23;dshi;zoo-0.log;https://issues.apache.org/jira/secure/attachment/12996698/zoo-0.log","13/Mar/20 19:23;dshi;zoo-1.log;https://issues.apache.org/jira/secure/attachment/12996699/zoo-1.log","13/Mar/20 19:23;dshi;zoo-2.log;https://issues.apache.org/jira/secure/attachment/12996700/zoo-2.log","13/Mar/20 18:27;dshi;zoo-service.yaml;https://issues.apache.org/jira/secure/attachment/12996692/zoo-service.yaml","13/Mar/20 18:15;dshi;zookeeper.yaml;https://issues.apache.org/jira/secure/attachment/12996689/zookeeper.yaml",,9.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 20 07:06:58 UTC 2020,,,,,,,,,,"0|z0cfrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Mar/20 11:17;symat;Hello!

I was working on these parts recently and happy to take a look on your case.

The log file you sent is more-or-less OK. In ZooKeeper, the servers are communicating with each other using the 3888 port (in your config) for election protocol. When a server starts, it tries to connect to all other server's election port and asks for the IDs from each server. But only those channels remain open, which were initiated by the servers with higher ID. We expect that the other servers will initiate connections later to the newly joined servers and the channels initiated by them will remain open. This is why you see the following message, which is completely normal:

{code:java}
2020-03-11 20:23:35,733 [myid:2] - INFO  [WorkerSender[myid=2]:QuorumCnxManager@438] - Have smaller server identifier, so dropping the connection: (3, 2)
{code}
And also the SendWorker thread gets interrupted towards server 3 because of the same reason. That is also OK.


The only strange thing I noticed in your logs are in these lines: 

{code:java}
2020-03-11 20:23:35,734 [myid:2] - INFO  [0.0.0.0/0.0.0.0:3888:QuorumCnxManager$Listener@924] - Received connection request 100.126.116.201:36140

2020-03-11 20:23:35,740 [myid:2] - INFO  [0.0.0.0/0.0.0.0:3888:QuorumCnxManager$Listener@924] - Received connection request 100.126.116.201:36142
{code}

It looks like you get two connection requests from this IP: 100.126.116.201. Unfortunately the log doesn't tell the ID of this server. This IP is not in your config.

Are you sure you are using the same config you sent in all ZK nodes? Can you check where this 100.126.116.201 comes from?

There is a known bug which could explain your situation, but that would happen only if you use 0.0.0.0 in your configs.

Are you using some dockerized environment maybe?

Can you share the ZooKeeper configs and server logs from all the 5 nodes? ;;;","13/Mar/20 13:16;dshi;Hi Mate,

Thanks for taking a look at this! I suspected it may have something to do with the IPs, so hoping you may be able to explain more clearly what might be happening :)

We are running zookeeper inside kubernetes as a stateful set. The IP 100.126.116.201 is the actual IP of the pod that the leader, member 3, is running in. Unfortunately as far as I know you cannot set static IPs for pods in kubernetes, so that is why the IPs in the configs do not match the IP that zookeeper binds to since we cannot know in advance what the pod IP will be. We have quorumListenOnAllIPs=true in the config. The IPs in the config point to kubernetes services, which remain static, each of which select the single corresponding pod as the backend.

Just for reference, prior to upgrading to 3.5 we were using 0.0.0.0 in our configs, but only in a 3 member cluster. As far as I can tell, there are no issues with member rejoining the quorum with either the 3.4 config or 3.5 config in a 3 member cluster. However, there is one major issue in both that if the leader pod is restarted, the cluster becomes hard down until the pod restarts. It seems that the leader election does not take place until the pod comes back and the zookeeper process starts, so even though the logs say leader election took 1ms, the cluster was down for maybe 30 to 60 seconds.

This is what led to me trying a 5 member cluster to see if that would trigger the leader election quicker, but it led to me discovering this behavior instead. I still don't understand why if I remove servers 4 and 5 from the config of servers 1 and 2 they can then successfully rejoin.

I've since shifted the cluster back down to 3 members, but if you think it would be helpful to get a log from all 5 members I can repeat the experiment again.

Thanks again for your help!;;;","13/Mar/20 14:44;symat;It is strange indeed...

> We have quorumListenOnAllIPs=true in the config.
I think it is the correct config for kubernetes using 3.5+, I would expect this to work. But it would be nice to see your full config.

The 3.4 config (where you used 0.0.0.0) is expected to not work in 3.5, see ZOOKEEPER-2164 and ZOOKEEPER-3725 for details. We already have a fix for this, but it will be shipped only in the next releases in 3.5.8 and 3.6.1.

If you use {{quorumListenOnAllIPs=true}} and you don't use {{0.0.0.0}} in the configs, then your problem is something else...

Unfortunately I have not much experience with running ZooKeeper in Kubernetes. But I would be happy to reproduce your situation and take a deeper look inside the ZooKeeper leader election. If it is possible for you to share your pod descriptors / Dockerfiles then I would try them out with both 3 and 5 ZK servers. Also I would try the fix we committed for ZOOKEEPER-2164, maybe that helps in this case too. (although this seem to me a different case)

Do you think it is something that can be reproduced on a single host machine with minikube, or it is something you experienced only with a real kubernetes cluster?

Alternatively you can share your experience on user@zookeeper.apache.org - I know a few guys on that mailing list who are operating ZooKeeper with Kubernetes, maybe they can share their zookeeper config / pod / docker files.;;;","13/Mar/20 18:00;dshi;Here are the kubernetes files:

[^zookeeper.yaml]

[^configmap.yaml]

The zookeeper yaml is slightly redacted to remove some more sensitive information, but it should only be cosmetic.

Here are the docker image build files:

[^Dockerfile]

[^docker-entrypoint.sh]

[^jmx.yaml]

Note that while docker-entrypoint.sh tries to build the config file if it doesn't exist, I have since updated our kubernetes config to supply a configmap with the config file, so the entrypoint doesn't need to generate the config file anymore.

My gut feeling says this should be able to be reproduced in minikube on a single machine, but I have not tried (you probably have to remove the pod anti-affinity). Please let me know if you have any questions regarding these files or our setup.;;;","13/Mar/20 18:34;dshi;Ah I forgot one very important file:

[^zoo-service.yaml]

And actually looking through this file I found out why the original issue was happening :facelpalm:

I had a copy/paste error and forgot to update the selectors for zoo-internal-3 and zoo-internal-4 (the peer and leader election ports) when adding the 2 new members, so they were both still pointing to zoo-2. After fixing this error things now behave correctly as they do with a 3 member cluster. Sorry so much to waste your time!

However, there is still the outstanding issue where restarting the leader pod causes the cluster to be down for around 30 seconds while it restarts. Is this expected? I was going to spin up a zookeeper cluster outside of kubernetes today just to confirm if it still experiences the same behavior. This is a big issue for running in kubernetes because pods and nodes need to be restarted relatively frequently due to kubernetes upgrades, and our services cannot tolerate a 30 second downtime to zookeeper. Since this is not the issue mentioned at the beginning of this issue, I'm happy to close this and open a new issue if needed.;;;","13/Mar/20 18:36;symat;Thanks for all the details! I will try to reproduce the issue on Monday and come back with questions / comments soon.;;;","13/Mar/20 18:55;symat;> restarting the leader pod causes the cluster to be down for around 30 seconds while it restarts

No, usually a full cluster recovery shouldn't take more than a few seconds. At least this is what I saw with normal clusters without Kubetnetes.

It would be interesting to see where ZooKeeper spend the 30 seconds. Is the detection of the loosing of the old leader is slow? Or the new election is this slow for some reason?

>  I'm happy to close this and open a new issue if needed.

I would prefer to keep this one open. Partly to minimize the administration :) and also there are some discussion / attachment here that is valuable for the new issue too.;;;","13/Mar/20 19:32;dshi;I repeated the experiment again though with just 3 members. Here are logs from each:

[^zoo-0.log]
 [^zoo-1.log]
 [^zoo-2.log]

Here zoo-2 (ID 3) was the leader the whole time. I did restart zoo-1 just to get a clean log, so you'll see in zoo-0's logs that zoo-1 was down for a little bit. Then I restarted zoo-2, which was the leader. I ran this on zoo-0 to measure the downtime from the client's perspective:
{code:java}
while :; do date; if echo srvr | nc localhost 2181 | grep -q Mode; then true; else echo DOWN; fi; sleep 0.05; done
{code}
The cluster was from 19:15:34 to 19:16:06. This roughly matches the timestamps in the logs for these messages:
{code:java}
2020-03-13 19:15:34,945 [myid:2] - WARN  [QuorumPeer[myid=2](plain=0.0.0.0:2181)(secure=disabled):Follower@96] - Exception when following the leader
{code}
{code:java}
2020-03-13 19:16:05,247 [myid:2] - INFO [QuorumPeer[myid=2](plain=0.0.0.0:2181)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 1 MS
{code};;;","16/Mar/20 09:16;symat;Thanks, it's great that you were able to do this test and sent all the logs. I need a bit more time to dig into it, I hope I can analyze it deeper and come back with some answers (possibly questions? :) ) today / tomorrow. ;;;","16/Mar/20 13:10;symat;OK, I have a theory... Maybe this is what happens:
- After shutting down the leader, the whole leader election restarts
- ZooKeeper tries to open socket connection to the other ZooKeeper servers by using synchronized methods, so only one can run a time (see  on the master branch: https://github.com/apache/zookeeper/blob/a5a4743733b8939464af82c1ee68a593fadbe362/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L688 and https://github.com/apache/zookeeper/blob/a5a4743733b8939464af82c1ee68a593fadbe362/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L759)
- the default timeout is 5 secs (this is why there is nothing leader election related log message in your log files for 5 sec, until we hit the timeout of socket open to server 3)
- by the time when the 5 sec timeout elapsed, the leader election protocol was also timeouted (but AFAIK it is increasing its internal timeout always? I will need to verify this)
- after this happens a few time, either the leader election protocol timeout is increased enough to be able tolerate the 5 sec delay (and/or the fact that the server-3 restarted and the socket can be opened now) will cause that this block gets removed and everything goes smoothly after this. But it took 30 seconds, what is way too long...

The question is, why the socket needs to timeout (wait for 5 sec) and why the connection doesn't get closed immediately with some 'host unreachable' exception, what we would expect in case if the server goes down and no IP connection can be established. Usually we don't see this problem in production, so I guess it has to do something with Kubernetes networking.

Still, this part needs to be refactored in ZooKeeper, we have to make the {{connectOne}} asynchronous, what is not an easy task. Actually this is also something which was suggested in ZOOKEEPER-2164 (but in that ticket there were other errors fixed in the end). 

In the meanwhile there might be some workarounds:
# you can decrease the connection timeout to e.g. 500ms or 1000ms using the {{-Dzookeeper.cnxTimeout=500'}} system property. I am not sure if it will help, but I would be glad if you could test it
# an other independent workaround would be using the multiAddress feature of ZooKeeper 3.6.0, enabling it by {{-Dzookeeper.multiAddress.enabled=true}}. Then ZooKeeper should periodically check the availability of the currently used election addresses and kill the socket if the host is unavailable. This way we might kill the dead socket before the timeout happen. However, it might run ICMP traffic (ping) in the background, which I am not sure if will be reliable in kubernetes.

No matter if the workarounds would fix the problem for you or not, I would suggest to keep this ticket open, and I will try to implement an asynchronous connection establishment somehow.;;;","16/Mar/20 19:17;dshi;I think you are right that kubernetes networking is one of the main issues here. Because the server IPs in the zookeeper configs are pointing to kubernetes services, opening a TCP connection to those IPs when there are no backend endpoints (which is the case when a pod is deleted) will just hang.

I tried running with {{-Dzookeeper.cnxTimeout=500}} and now the cluster stays down for around 3 to 5 seconds when restarting the leader instead of more than 30 seconds. We may be able to tolerate this duration of downtime as a bandaid.

I can try and build a 3.6.0 docker image and test the multiAddress feature as well. Is there anything I should pay attention to while upgrading to 3.6.0? Also is it possible to downgrade back to 3.5.7 afterwards?;;;","17/Mar/20 15:00;symat;{quote}the server IPs in the zookeeper configs are pointing to kubernetes services, opening a TCP connection to those IPs when there are no backend endpoints (which is the case when a pod is deleted) will just hang.
{quote}
this explains the problem. And also explains why we don't necessary see this when using non-kubernetes deployments. I usually test with docker-compose (on a single host, defining virtual networks), but I haven't seen this issue there either.

Anyway, I think this is actually a bug in the election protocol implementation, I should be able to fix this soon in the ZooKeeper code (hopefully in a few days, when I have a couple of hours to spare).
{quote}Is there anything I should pay attention to while upgrading to 3.6.0?
{quote}
Not much. 3.6.0 should be fully compatible with 3.5. AFAIK even the 3.5 clients can connect to 3.6.0 server without any problem. The 3.5 server configs should work with 3.6.0.
{quote}Also is it possible to downgrade back to 3.5.7 afterwards?
{quote}
Yes, until you start to use any 3.6 specific features in the server or in the clients, you should be able to downgrade anytime. (the snapshot / transaction log formats are the same) But I actually never tested this, and also I don't think this would be supported officially.

Although some large companies are already using 3.6 ZooKeeper for some time (they did use the master branch even before it was released officially), still using 3.6.0 in production I would consider a bit risky as this is the very first 3.6 release. But it depends on your use-case / how much you rely on ZooKeeper / how large traffic to put into it, etc.

But rolling-upgrade or rolling-downgrade with {{multiAddress.enabled=true}} would not work, as the multiAddress feature will cause backward-incompatible change in the ZooKeeper internal protocol. If you need continuous availability, then you have to first upgrade to 3.6.0 with a rolling upgrade, then enable multiAddress using a rolling restart. And similarly, for downgrade: first disable multiAddress with a rolling restart, then perform a rolling-downgrade.

Anyway, if {{-Dzookeeper.cnxTimeout=500}} is enough for you, then maybe it doesn't worth for you to put much more effort into testing the 3.6.0 workaround.

If I do the fix, then it will be part of the next 3.5 and 3.6 releases.;;;","17/Mar/20 17:29;dshi;OK, I think I may just stick with using the lower connection timeout on 3.5.7 for now. I've been testing in our dev environment. It is too risky to try 3.6.0 in production for us anyway, as we only just moved to 3.5.X recently due to stability concerns on the earlier 3.5 releases.

I'm looking forward to testing out your fixes to the election protocols though, so will keep an eye out on your progress. Thanks so much for all your help!;;;","17/Mar/20 20:48;symat;I created a fix, but I am not 100% sure it would solve the problem. I will try to come up with some automated test to catch this scenario (injecting timeout somehow into the connection creation), but in the meanwhile I share with you a patched version: [https://drive.google.com/open?id=1qcO-anHIPNn6ipD8nmNAiHmuQD7G4Nvf]  ([https://github.com/symat/zookeeper/commit/d4159aca0d2aea0a544810d3d9b352c10ea55bdf])

This is based on the branch 3.5, I compiled it with OpenJDK 8u242 (I did it on Mac, but it shouldn't be a problem).

How easy would be for you to test this version without using the {{-Dzookeeper.cnxTimeout=500}} workaround?

If it takes much time, then please wait until I verify the patch on my machine (either manually or with automated tests)...;;;","17/Mar/20 22:02;dshi;I can try and test it in a little bit, just have to rejigger our Dockerfile to use this instead.;;;","17/Mar/20 23:14;dshi;I'm actually getting this error when trying to start the server:
{code:java}
Error: Could not find or load main class org.apache.zookeeper.server.quorum.QuorumPeerMain{code}
Not sure if I need to change something with our deployment configs or not. All I changed in our Docker image build is to use the new tar.gz file I downloaded instead of downloading from the apache website.;;;","18/Mar/20 08:02;symat;I am not familiar with Kubernetes enough to understand all the yaml files you sent :)

so I started with the plain docker part. I was able to build your dockerfile (modified a bit, removed the GPG stuff and adding the tar.gz file), then I was able to start a standalone ZooKeeper Servr  container by: 
{code:java}
docker build -t zookeeper-3756 .
docker run --rm zookeeper-3756:latest
{code}
 

the modified Dockerfile:
{code:java}
FROM ubuntu:16.04

# install jre
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y default-jre gosu netcat-openbsd wget

ARG DISTRO_NAME=zookeeper-3.5.8-SNAPSHOT
ARG ARCHIVE_NAME=apache-$DISTRO_NAME-bin

ENV ZOO_USER=zookeeper \
    ZOO_CONF_DIR=/conf \
    ZOO_DATA_DIR=/data \
    ZOO_DATA_LOG_DIR=/datalog \
    ZOO_PORT=2181 \
    ZOO_TICK_TIME=2000 \
    ZOO_INIT_LIMIT=5 \
    ZOO_SYNC_LIMIT=2 \
    ZOO_AUTOPURGE_RETAIN_COUNT=50 \
    ZOO_AUTOPURGE_INTERVAL=6 \
    ZOO_LOG_DIR=/logs \
    JMX_CONF_DIR=/etc/jmx

COPY  apache-zookeeper-3.5.8-SNAPSHOT-bin.tar.gz /

# Add a user and make dirs
RUN set -x \
    && useradd ""$ZOO_USER"" \
    && mkdir -p ""$ZOO_DATA_LOG_DIR"" ""$ZOO_DATA_DIR"" ""$ZOO_CONF_DIR"" ""$ZOO_LOG_DIR"" ""$JMX_CONF_DIR"" \
    && chown ""$ZOO_USER:$ZOO_USER"" ""$ZOO_DATA_LOG_DIR"" ""$ZOO_DATA_DIR"" ""$ZOO_CONF_DIR"" ""$ZOO_LOG_DIR""

# Download Apache Zookeeper, verify its PGP signature, untar and clean up
RUN set -x && \
    cd / && \
    tar -xzf ""$ARCHIVE_NAME.tar.gz"" && \
    mv ""$ARCHIVE_NAME/conf/""* ""$ZOO_CONF_DIR"" && \
    rm ""$ARCHIVE_NAME.tar.gz"" && \
    cd /$ARCHIVE_NAME && \
    wget -q ""https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.11.0/jmx_prometheus_javaagent-0.11.0.jar""


WORKDIR $ARCHIVE_NAME
VOLUME [""$ZOO_DATA_DIR"", ""$ZOO_DATA_LOG_DIR""]

EXPOSE $ZOO_PORT 2888 3888

ENV PATH=$PATH:/$ARCHIVE_NAME/bin \
    ZOOCFGDIR=$ZOO_CONF_DIR

COPY docker-entrypoint.sh /
COPY jmx.yaml /etc/jmx/config.yaml
ENTRYPOINT [""/docker-entrypoint.sh""]
CMD [""zkServer.sh"", ""start-foreground""]

{code}
 

The fact that the standalone Zookeeper server started is a good sign :)
But I am not sure why you saw the {{""Could not find or load main class""}}  error.

I will try to make a minimal Kubernetes setup where I can reproduce the problem with the connection timeout, using the original 3.5.7 version.;;;","18/Mar/20 21:41;dshi;OK thanks, let me know if you need any clarifications on the config files I sent.;;;","19/Mar/20 14:17;symat;I managed to reproduce the same behaviour / log messages you saw with some unit tests, so I consider this to be enough for reproduction / testing. I submitted a PR for the master & 3.6 branches. Once it got reviewed, I will also submit the fix on the branch 3.5.;;;","19/Mar/20 19:57;dshi;OK, thank you!;;;","23/Mar/20 15:20;nkalmar;Issue resolved by pull request 1289
[https://github.com/apache/zookeeper/pull/1289];;;","23/Mar/20 18:55;lasaro;Dear all,

currently, I am consistently facing the following scenario while running 3.5.5 and 3.5.7, which I believe is related to this bug:

3 nodes up.
 Node 3 stop -> node 2 is elected; node 1 follows.
 Node 3 start -> node 3 elected the leader; node 2 follows; node 1 is unable to elect.

Node 1 stop and start -> node 1 rejoins the quorum.
 Node 2 stop and start -> node 2 is unable to elect.
 Node 1 stop and start -> node 2 joins the quorum; node 1 joins the quorum
 Node 2 stop and start -> node 2 unable to join the quorum
 Node 3 stop and start -> node 3 elected the leader; node 2 follows; node 1 is unable to elect.

Reducing the cnxTimeout value didn't change the behavior.

I tested with this fix and now it is now worse; after a round of restarts, there doesn't seem to have anything I can to make node 1 join finish the election.

This is such a nasty problem that I am wondering if there is something else to it. Maybe my configuration. Could you point me what would be useful in terms of information in order to debug this better? Full logs?

 ;;;","23/Mar/20 19:14;nkalmar;[~lasaro] are you sure it's the same problem? Why does node3 get elected as Leader after a restart, when node2 already taken over? That seems strange to me. A log would be helpful.
I would suggest you write to user@zookeeper.apache.org with more details and logs. 

[~symat] did the fix, perhaps he can also chip in, as he has more insight on this one.;;;","24/Mar/20 08:06;symat;[~lasaro] this is a strange issue indeed. It seems to be a bit different from this particular Jira. You can try the {{-Dzookeeper.cnxTimeout=500}} workaround (it helped in the case we found with this Jira).

If it doesn't help, then I recommend to open an other Jira which I will be happy to assign to myself. Full logs and config files would help a lot for sure. Also the ZooKeeper and the Java version is important. And we had several docker / kubernetes specific issues lately, so it is also important to know if you are facing with this problem in Docker / Kubernetes.

This thread can be also interesting for you, especially if you use 0.0.0.0 in your configs: https://mail-archives.apache.org/mod_mbox/zookeeper-user/202003.mbox/%3CCAAMoRKLDVeL0jfEJndyP3pnVVxztthqZ35d_UM%2Bhurx7%3DqO_PQ%40mail.gmail.com%3E

;;;","24/Mar/20 19:16;lasaro;Thanks for the feedback. I've opened ZOOKEEPER-3769 with a slightly different scenario but problematic in the same sense. To give the complete answer, I am not using 0.0.0.0 addresses (not explicitly, at least) and not using containers.

[~symat], I appreciate your willingness to look into it. It's been troubling me for some time.;;;","24/Apr/20 22:30;dshi;Hi Mate,

Is there an estimated release time for 3.5.8? I'm hoping to try out the fix soon, :);;;","27/Apr/20 07:56;symat;I think I will drive the 3.5.8 release. I hope I will have time to make the first release candidate on this week, or early next week. I will send out the official announcement on the dev mailing list. I would appreciate if you can test it. 
Are you on the dev zookeeper list? Or should I forward the RC to you?
https://zookeeper.apache.org/lists.html ;;;","27/Apr/20 19:48;dshi;I will definitely test it once it's available. I will join the dev zookeeper list to keep an eye on it.;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;","19/May/20 22:27;dshi;Hi Mate,

I just wanted to report back after testing 3.5.8. I am happy to say that it seems to work well after a brief bit of testing. I am no longer setting {{-Dzookeeper.cnxTimeout=500}}, and now when I roll the leader the cluster downtime is only 2-3 seconds instead of 30+ seconds.

Thanks again for helping me debug and creating this fix!;;;","20/May/20 07:06;symat;Thanks [~dshi] for the tests and the feedback, it is great that the fix solved your problem (and not an other problem :p )!;;;",,,,,,
Resolve release requirements in download page,ZOOKEEPER-3748,13290315,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,tison,tison,tison,07/Mar/20 16:47,28/Mar/21 08:54,13/Jul/23 09:08,14/Mar/20 16:49,,,,,,,,,,3.7.0,,,,,,,,,0,pull-request-available,,"there is no link to the KEYS file - this is essential for
verifying sigs.

Also the links to release artifacts must not use downloads.a.o, they must
use the mirror system.",,eolivelli,tison,,,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280
 
 
   1. Add direct link to KEYS
   2. Use mirror system to link to release artifact
   
   It would be helpful if we could invite a release manager to verify the change that avoids further reworking.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 17:07;githubbot;600","eolivelli commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r389302293
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using any of these release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](http://www.apache.org/info/verification.html).
 
 Review comment:
   https?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 18:32;githubbot;600","eolivelli commented on issue #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#issuecomment-596124829
 
 
   Sorry I meant @sebbASF
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 18:33;githubbot;600","TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r389323490
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using any of these release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](http://www.apache.org/info/verification.html).
 
 Review comment:
   Make sense. Updated.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 00:35;githubbot;600","sebbASF commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r389363181
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using any of these release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](http://www.apache.org/info/verification.html).
 
 Review comment:
   The following sentence does not make sense:
   ""You can verify the integrity of a downloaded release using any of these release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). ""
   
   Signature verification uses the ASC file, along with the associated key(s) from the KEYS file.
   
   Unless you always sign all releases with all the keys in the KEYS file, only the correct key(s) will do for signature verification. You can't just pick a random key from the file.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 12:10;githubbot;600","eolivelli commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r389364951
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using any of these release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](http://www.apache.org/info/verification.html).
 
 Review comment:
   @TisunKun please remove the words 'any of'
   
   Thank you @sebbASF for taking a look.
   
   I feel this finale form is okay.
   
   I will wait for feedback from at least another committer or PMC in the community before merging this patch and re sending the announce email
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 12:33;githubbot;600","TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r389367091
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using any of these release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](http://www.apache.org/info/verification.html).
 
 Review comment:
   Updated. Please check no misunderstanding :-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 12:58;githubbot;600","ctubbsii commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r389766539
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/info/verification.html).
 
 Review comment:
   www.apache.org/dist redirects to downloads.apache.org now. Should link directly there for KEYS.
   
   ```suggestion
   You can verify the integrity of a downloaded release using release-signing [KEYS](https://downloads.apache.org/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/info/verification.html).
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Mar/20 15:28;githubbot;600","TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r390026958
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/info/verification.html).
 
 Review comment:
   emmm from the mailing list I see some sentence
   
   > Also the links to release artifacts must not use downloads.a.o, they must
   > use the mirror system.
   
   OK KEYS is not release artifacts, but I'm not very sure the rules to link to downloads.a.o
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 00:06;githubbot;600","TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r390026958
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/info/verification.html).
 
 Review comment:
   emmm from the mailing list I see some sentence
   
   > Also the links to release artifacts must not use downloads.a.o, they must
   > use the mirror system.
   
   Well, KEYS is not release artifacts, but I'm not very sure the rules to link to downloads.a.o
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 00:06;githubbot;600","ctubbsii commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r390039839
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/info/verification.html).
 
 Review comment:
   KEYS, checksums, and signatures, should always use apache.org directly, and not the mirror system, and should be downloaded using https. Any other mechanism means you can't trust the content of the keys you're using to validate the signatures.
   
   Although they don't specifically say ""KEYS"", they do say ""signature and checksum verification"" in the INFRA blog post at https://blogs.apache.org/infra/entry/more-secure-and-robust-downloads
   
   Also, it's pretty obvious that downloads.apache.org is the correct new canonical location for these things, since that's where www.apache.org/dist redirects to now anyway.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 00:56;githubbot;600","TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#discussion_r390045492
 
 

 ##########
 File path: src/main/resources/markdown/releases.md
 ##########
 @@ -27,27 +28,28 @@ Apache ZooKeeper 3.6.0 is our latest stable release.
 
 ### Apache ZooKeeper 3.6.0
 
-[Apache ZooKeeper 3.6.0](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.6.0](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.6.0 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
-
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+[Apache ZooKeeper 3.6.0 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.6.0/apache-zookeeper-3.6.0.tar.gz.sha512))
 
 ---
 
 Older releases are available.
 
 ### Apache ZooKeeper 3.5.7
 
-[Apache ZooKeeper 3.5.7](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7-bin.tar.gz.sha512))
 
-[Apache ZooKeeper 3.5.7 Source Release](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
+[Apache ZooKeeper 3.5.7 Source Release](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.asc), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.5.7/apache-zookeeper-3.5.7.tar.gz.sha512))
 
 ### Apache ZooKeeper 3.4.14
 
-[Apache ZooKeeper 3.4.14](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+[Apache ZooKeeper 3.4.14](https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz)([asc](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.asc), [sha256](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha256), [sha512](https://downloads.apache.org/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz.sha512))
+
+<a name=""verifying""></a>
+## Verifying Hashes and Signatures
 
-You can verify the integrity of a downloaded release using the PGP signatures and hashes (MD5 or SHA1) hosted at the main [Apache distro site](https://apache.org/dist/zookeeper/).  For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/dyn/closer.cgi#verify).
+You can verify the integrity of a downloaded release using release-signing [KEYS](https://www.apache.org/dist/zookeeper/KEYS). For additional information, refer to the Apache documentation for [verifying the integrity of Apache project releases](https://www.apache.org/info/verification.html).
 
 Review comment:
   Thanks for your information. Commit the suggestion.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/20 01:20;githubbot;600","TisonKun commented on issue #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280#issuecomment-599108952
 
 
   It should be closed by 45e0ce9f529f769f9ebf9c8f1d2242b4b5993d05
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/20 17:50;githubbot;600","TisonKun commented on pull request #1280: ZOOKEEPER-3748. Resolve release requirements in download page
URL: https://github.com/apache/zookeeper/pull/1280
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/20 17:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Mar 14 16:49:30 UTC 2020,,,,,,,,,,"0|z0cah4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/20 16:49;eolivelli;Issue resolved by pull request 1280
[https://github.com/apache/zookeeper/pull/1280];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move the download page to downloads.apache.org ,ZOOKEEPER-3746,13289780,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,tison,tison,tison,05/Mar/20 10:56,07/Mar/20 13:36,13/Jul/23 09:08,07/Mar/20 13:35,,,,,,,,,,,,,,,,,,,0,pull-request-available,,,,eolivelli,tison,,,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1279: ZOOKEEPER-3746. Move the download page to downloads.apache.org
URL: https://github.com/apache/zookeeper/pull/1279
 
 
   Change the links to archive.apache.org page to direct links to downloads.apache.org. Also adjust words.
   
   Please help on review :-)
   
   cc @eolivelli 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 12:42;githubbot;600","eolivelli commented on issue #1279: ZOOKEEPER-3746. Move the download page to downloads.apache.org
URL: https://github.com/apache/zookeeper/pull/1279#issuecomment-596087773
 
 
   @TisonKun  the patch looks great.
   The precommit job is failing because we did not configure ""spotbugs"" plugin in the pom.xml of website build.
   
   Do you mind adding a dummy plugin configuration, with hardcoded ""skip"" option ? this way the precommit will pass.
   
   It looks like you are the first one who sends a PR against the website !! 
   Thank you so much.
   
   I will be happy to commit this fix soon. I feel there is no need for a double +1 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 13:21;githubbot;600","TisonKun commented on issue #1279: ZOOKEEPER-3746. Move the download page to downloads.apache.org
URL: https://github.com/apache/zookeeper/pull/1279#issuecomment-596089048
 
 
   @eolivelli Thanks for your information! I've pushed a commit and it seems precommit job works.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 13:34;githubbot;600","eolivelli commented on pull request #1279: ZOOKEEPER-3746. Move the download page to downloads.apache.org
URL: https://github.com/apache/zookeeper/pull/1279
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 13:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Mar 07 13:35:57 UTC 2020,,,,,,,,,,"0|z0c768:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Mar/20 13:35;eolivelli;Merged to website branch,
thank you Tison !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update copyright notices from 2019 to 2020,ZOOKEEPER-3745,13289779,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,tison,tison,tison,05/Mar/20 10:54,28/Mar/21 08:55,13/Jul/23 09:08,14/Mar/20 16:52,,,,,,,,,,3.6.1,3.7.0,,,,,,,,0,pull-request-available,,,,eolivelli,tison,,,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1278: ZOOKEEPER-3745: Update copyright notices from 2019 to 2020
URL: https://github.com/apache/zookeeper/pull/1278
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/20 13:35;githubbot;600","maoling commented on issue #1278: ZOOKEEPER-3745: Update copyright notices from 2019 to 2020
URL: https://github.com/apache/zookeeper/pull/1278#issuecomment-595579257
 
 
   Search around codebase by keyword:`Copyright`. Find something like the following:
   ```
   # log4j.properties
   Copyright 2012 The Apache Software Foundation
   # releasenotes.md
   Copyright 2002-2004 The Apache Software Foundation
   ```
   
   - We should not use the ASF LICENSE with year(time), otherwise we need to change it every year :)?
   - All the java files are using ASF LICENSE without year info
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/20 03:17;githubbot;600","TisonKun commented on issue #1278: ZOOKEEPER-3745: Update copyright notices from 2019 to 2020
URL: https://github.com/apache/zookeeper/pull/1278#issuecomment-595618085
 
 
   @maoling I agree to replace without year info LICENSE in source files. But I think it is required by NOTICE file. We can do both of them if we agree on it. Shall we ask for Apache LEGAL for advice?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/20 06:16;githubbot;600","eolivelli commented on pull request #1278: ZOOKEEPER-3745: Update copyright notices from 2019 to 2020
URL: https://github.com/apache/zookeeper/pull/1278
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/20 16:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Mar 14 17:50:59 UTC 2020,,,,,,,,,,"0|z0c760:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/20 16:52;eolivelli;committer to master and to 3.6,
thank you [~tison];;;","14/Mar/20 17:50;tison;Thanks for your review [~eolivelli]!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove use of com.sun.nio.file.SensitivityWatchEventModifier,ZOOKEEPER-3739,13287571,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ctubbsii,ctubbsii,ctubbsii,25/Feb/20 18:51,11/May/20 15:41,13/Jul/23 09:08,20/Mar/20 10:00,,,,,,,,,,3.5.8,3.6.1,3.7.0,,,build,server,,,0,pull-request-available,,"For better support building on newer JDKs, the unsupported class, com.sun.nio.file.SensitivityWatchEventModifier, must not be used.

I will submit a PR for this.",,ctubbsii,nkalmar,symat,tamaas,,,,,,,,,,,,,,,,"ctubbsii commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269
 
 
   Remove unsupported use of com.sun.nio.file.SensitivityWatchEventModifier
   to better support builds against newer JDKs.
   
   Also update build tooling to use strict JDK release compatibility when
   building with newer JDKs by adding profiles which automatically activate
   the correct compiler flag when the newer JDK is detected when building
   with Maven or Eclipse.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 18:57;githubbot;600","eolivelli commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r384125516
 
 

 ##########
 File path: pom.xml
 ##########
 @@ -307,6 +307,26 @@
             </plugins>
         </build>
     </profile>
+    <profile>
+      <id>m2e</id>
+      <activation>
+        <property>
+          <name>m2e.version</name>
+        </property>
+      </activation>
+      <properties>
+        <maven.compiler.release>8</maven.compiler.release>
+      </properties>
+    </profile>
+    <profile>
+      <id>jdk-release-flag</id>
+      <activation>
+        <jdk>[9,)</jdk>
+      </activation>
+      <properties>
+        <maven.compiler.release>8</maven.compiler.release>
 
 Review comment:
   Good
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 21:06;githubbot;600","eolivelli commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r384125400
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   Can't we detect the presence of that option at runtime and use it with reflection?
   
   What's the impact of this patch?
   
   Cc @enixon PTAL
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 21:06;githubbot;600","ctubbsii commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r384163550
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   > Can't we detect the presence of that option at runtime and use it with reflection?
   
   Code to do that would look similar to what is described in:
   https://github.com/HotswapProjects/HotswapAgent/issues/41#issue-39256602
   
   However, because of module access restrictions in future JVMs, there's a strong possibility that doing this would result in runtime exceptions in newer JVMs, unless users added the `jdk.unsupported` module to their module path at runtime... and even then, these unsupported APIs are supposed to be phased out entirely at some point... so there's a good chance this will add complexity which will never matter, because the complex code path will never be traversed (or will be traversed and cause an access restriction error at runtime).
   
   > What's the impact of this patch?
   
   That's the question I had, too (and the related: is it even worth it to try to keep the modifier?).
   
   From what I could tell, the behavior this modifies is not well defined anyway. On some systems, the modifier *could* make file changes observed more quickly... but there's no guarantee of that... and there's no guarantee of seeing *every* change event on the file being watched, no matter what modifier is on it. Even with the modifier, it's probably still going to be on the order of a few seconds to notice changes. In my opinion, it's probably not worth it, but I'm not an expert on NIO stuff by far.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 22:24;githubbot;600","eolivelli commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r384414628
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   I think this code was contributed from Facebook
   
   @lvfangmin @enixon do you have any insight ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 10:48;githubbot;600","ctubbsii commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r386560053
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   Looking into this a little bit more, it seems this utility is only ever used by the X509Util class to monitor changes to keyStore and trustStore files on disk, presumably for some sort of automatic reconfiguration.
   
   The modifier seems to be an attempt to work around the slow polling implementation of the watch service on Mac OS X (https://bugs.openjdk.java.net/browse/JDK-7133447), which doesn't have a native implementation on that platform.
   
   I can't imagine those files changing frequently enough for this to matter. But, even if they did change, I can't imagine that the optimization to automatically reconfigure a few seconds sooner matters either.
   
   However, if automatic TLS reconfiguration was a critical need for somebody... there are lots of alternative watch service implementations out there to work around this issue. One is https://github.com/takari/directory-watcher ; I'm not advocating for using any of these... I don't know enough about them, but if it was important for somebody, they could consider contributing a change that makes use of one of those, instead of relying on the com.sun modifier to the built-in watch service that this PR removes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 18:10;githubbot;600","ctubbsii commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r386560053
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   Looking into this a little bit more, it seems this utility is only ever used by the X509Util class to monitor changes to keyStore and trustStore files on disk, presumably for some sort of automatic reconfiguration.
   
   The modifier seems to be an attempt to work around the slow polling implementation of the watch service on Mac OS X (https://bugs.openjdk.java.net/browse/JDK-7133447), which doesn't have a native implementation on that platform.
   
   I can't imagine those files changing frequently enough for this to matter. But, even if they did change, I can't imagine that the optimization to automatically reconfigure a few seconds sooner matters either.
   
   However, if rapid automatic TLS reconfiguration on OSX was a critical need for somebody... there are lots of alternative watch service implementations out there to work around this issue. One is https://github.com/takari/directory-watcher ; I'm not advocating for using any of these... I don't know enough about them, but if it was important for somebody, they could consider contributing a change that makes use of one of those, instead of relying on the com.sun modifier to the built-in watch service that this PR removes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 18:11;githubbot;600","ctubbsii commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r389372208
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   @eolivelli If @lvfangmin and @enixon do not reply, what happens next?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 14:01;githubbot;600","eolivelli commented on issue #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#issuecomment-596220474
 
 
   We have to wait for any other committer to approve this patch.
   If you want you can ping for review on dev@zookeeper.apache.org 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 15:57;githubbot;600","ctubbsii commented on issue #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#issuecomment-596224742
 
 
   > We have to wait for any other committer to approve this patch.
   > If you want you can ping for review on [dev@zookeeper.apache.org](mailto:dev@zookeeper.apache.org)
   
   Okay. I [tried that a few days ago](https://lists.apache.org/thread.html/r90d2fbdd3551af8d9844d76a64adc77da250b2e54c4e99afeec188bf%40%3Cdev.zookeeper.apache.org%3E) and didn't get a response. Sorry for the impatience :smiley_cat:
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 16:37;githubbot;600","nkalmar commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#discussion_r395533463
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/common/FileChangeWatcher.java
 ##########
 @@ -72,7 +71,7 @@ public FileChangeWatcher(Path dirPath, Consumer<WatchEvent<?>> callback) throws
 
         LOG.debug(""Registering with watch service: {}"", dirPath);
 
-        dirPath.register(watchService, new WatchEvent.Kind<?>[]{StandardWatchEventKinds.ENTRY_CREATE, StandardWatchEventKinds.ENTRY_DELETE, StandardWatchEventKinds.ENTRY_MODIFY, StandardWatchEventKinds.OVERFLOW}, SensitivityWatchEventModifier.HIGH);
 
 Review comment:
   Digging into this I also found a bunch of patch for OSX to speed up file change event.
   
   There is not much info if this is still useful at all. In fact, most source (patch, stackoverflow etc.) I found are a few years old.
   
   And in any case, I don't think there are many running production ZK on OSX. (If this change would primarily affect Linux systems I would be more keen on doing further research)
   
   In short, LGTM
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 09:56;githubbot;600","asfgit commented on pull request #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 10:00;githubbot;600","nkalmar commented on issue #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#issuecomment-601618510
 
 
   merged to master and branch-3.6, thanks @ctubbsii 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 10:01;githubbot;600","ctubbsii commented on issue #1269: ZOOKEEPER-3739: Remove unsupported com.sun API
URL: https://github.com/apache/zookeeper/pull/1269#issuecomment-601774833
 
 
   Cool, thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/20 15:57;githubbot;600","anmolnar opened a new pull request #1340:
URL: https://github.com/apache/zookeeper/pull/1340


   3.5 backport of #1269 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Apr/20 13:22;githubbot;600","symat commented on pull request #1340:
URL: https://github.com/apache/zookeeper/pull/1340#issuecomment-620637508


   LGTM +1


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Apr/20 14:19;githubbot;600","symat commented on pull request #1340:
URL: https://github.com/apache/zookeeper/pull/1340#issuecomment-620837013


   I'll merge it now


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Apr/20 20:28;githubbot;600","symat commented on pull request #1340:
URL: https://github.com/apache/zookeeper/pull/1340#issuecomment-620846667


   merged to branch-3.5. I also added the 3.5.8 tag to the original Jira. Thank you all!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Apr/20 20:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:21 UTC 2020,,,,,,,,,,"0|z0bvn4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/20 19:14;ctubbsii;Patch available in the linked pull request.;;;","20/Mar/20 10:00;nkalmar;Issue resolved by pull request 1269
[https://github.com/apache/zookeeper/pull/1269];;;","28/Apr/20 13:55;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4439//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4439//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4439//console

This message is automatically generated.;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid use of broken codehaus properties-maven-plugin,ZOOKEEPER-3738,13287557,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ctubbsii,ctubbsii,ctubbsii,25/Feb/20 17:38,09/May/22 03:00,13/Jul/23 09:08,15/Apr/20 15:34,,,,,,,,,,3.6.1,3.7.0,,,,build,,,,0,pull-request-available,,"properties-maven-plugin uses an older version of plexus utils, that fails to read ENV variables properly when a variable is multi-line.

This bug causes it to be difficult to build ZooKeeper in some environments (Fedora, with a default bash 4 shell, for example).

Since ZooKeeper only uses this plugin to get the git commit id, the plugin can be removed, and replaced with a more specific plugin that can achieve the same job with simpler config (https://github.com/koraktor/mavanagaiata)

I'm working on a PR for this, which will come shortly.",,ctubbsii,tamaas,,,,,,,,,,,,,,,,,,"ctubbsii commented on pull request #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268
 
 
   Use mavanagaiata plugin to get git commit id for VerGen instead of
   properties-maven-plugin (which is broken in some environments).
   
   Also add the commit to the jar manifests for easy reference when given a
   jar of unknown origin (especially useful for SNAPSHOT builds).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 18:49;githubbot;600","ctubbsii commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-591078818
 
 
   > We should also drop VerGen stuff and simply use maven filtering to create a properties file to be read from class path at runtime.
   
   I was also taking a look at the VerGen class and thinking about improving it a bit. I think it's useful to have hard-coded class, rather than read from class path... because class path pollution can mislead the code logic.
   
   So, instead, I suggest doing what I did a very long time ago for Accumulo, and use mvn resource filtering to inject the version information from the POM into the java code, and then use the build-helper-maven-plugin to put that generated code onto the compile-time class path. It's serves a similar purpose as the current VerGen stuff, but I think the implementation is a bit nicer (certainly smaller):
   
   https://github.com/apache/accumulo/blob/master/core/pom.xml#L266-L305
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 21:29;githubbot;600","ctubbsii commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-591078818
 
 
   > We should also drop VerGen stuff and simply use maven filtering to create a properties file to be read from class path at runtime.
   
   I was also taking a look at the VerGen class and thinking about improving it a bit. I think it's useful to have hard-coded class, rather than read from class path... because class path pollution can mislead the code logic.
   
   So, instead, I suggest doing what I did a very long time ago for Accumulo, and use mvn resource filtering to inject the version information from the POM into the java code, and then use the build-helper-maven-plugin to put that generated code onto the compile-time class path. It's serves a similar purpose as the current VerGen stuff, but I think the implementation is a bit nicer (certainly smaller, and I think more maintainable):
   
   https://github.com/apache/accumulo/blob/master/core/pom.xml#L266-L305
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 21:30;githubbot;600","ctubbsii commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-592689866
 
 
   @nkalmar No problem. I'm curious. What is the typical process for merging stuff in?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 19:31;githubbot;600","eolivelli commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-592903657
 
 
   We need at least two approvals from committers.
   In this case this patch is good to go (me and Norbert).
   I will merge as soon as possible 
   
   We are following review then commit 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Feb/20 06:20;githubbot;600","nkalmar commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-593332943
 
 
   I'll merge it now. As Enrico said 2 committer +1. On some cases 1 is enough, as ZooKeeper is not the most active component (but fortunately getting more and more active members lately).
   
   I didn't merge last time because the patch was only a few (7 I think) hours old, and we had an agreement during the maven migration that we'll let a PR related to maven unmerged for 3 days minimum. This is not the case anymore, but habits die hard :) 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 10:29;githubbot;600","asfgit commented on pull request #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 16:09;githubbot;600","nkalmar commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-593480253
 
 
   Merged to master and 3.6, thanks @ctubbsii  
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 16:10;githubbot;600","ctubbsii commented on issue #1268: ZOOKEEPER-3738: Use mavanagaiata for git commit id
URL: https://github.com/apache/zookeeper/pull/1268#issuecomment-593518736
 
 
   Cool. Thanks! I'm just glad you're on Maven now. It's much easier to understand the build now, I think.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 17:27;githubbot;600","ctubbsii commented on pull request #1321: ZOOKEEPER-3738: Fix VerGen when mvngit.commit.id is null
URL: https://github.com/apache/zookeeper/pull/1321
 
 
   Workaround for exec-maven-plugin treating an empty
   `<argument>${mvngit.commit.id}</argument>` as null and passing an
   incorrect number of arguments to VerGen.
   
   This change allows the revision to be omitted in the command-line args
   to VerGen.
   
   This allows the mavanagaiata-maven-plugin to provide the git commit id,
   when available, to the VerGen command. This change is superseded in
   ZooKeeper 3.7.0 and later by ZOOKEEPER-3786
   (https://github.com/apache/zookeeper/pull/1310), which simplifies
   generating the version information and removes VerGen.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Apr/20 04:24;githubbot;600","ctubbsii commented on issue #1321: ZOOKEEPER-3738: Fix VerGen when mvngit.commit.id is null
URL: https://github.com/apache/zookeeper/pull/1321#issuecomment-613808551
 
 
   This change only applies to branch-3.6. It is supserseded by #1310 (ZOOKEEPER-3786) for 3.7 and later.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Apr/20 04:25;githubbot;600","ctubbsii commented on issue #1321: ZOOKEEPER-3738: Fix VerGen when mvngit.commit.id is null
URL: https://github.com/apache/zookeeper/pull/1321#issuecomment-614399726
 
 
   This didn't get closed, because the keywords ""This closes #1321"" don't work unless the commit appears in the master branch. I will close it manually.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 03:47;githubbot;600","ctubbsii commented on pull request #1321: ZOOKEEPER-3738: Fix VerGen when mvngit.commit.id is null
URL: https://github.com/apache/zookeeper/pull/1321
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 03:47;githubbot;600","maoling opened a new pull request #1804:
URL: https://github.com/apache/zookeeper/pull/1804


   - when I `mvn clean package -DskipTests` to build the branch-3.5, then I git checkout to master branch,
   I found an unstash file(`zookeeper-server/src/main/resources/git.properties`) in the master, because 
   master now uses `mavanagaiata` for git commit id and doesn't ignore `git.properties` anymore.
   - ZOOKEEPER-3738( [PR-1268](https://github.com/apache/zookeeper/pull/1268) and [PR-1321](https://github.com/apache/zookeeper/pull/1321)) had been merged into `master`, `branch-3.7`, `branch-3.6`, I apply it to `branch-3.5` to keep all branches consistency and fix this issue.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/22 08:37;githubbot;600","maoling commented on PR #1804:
URL: https://github.com/apache/zookeeper/pull/1804#issuecomment-1120585817

   Since branch-3.5 will EOL, so let me close this PR


;09/May/22 03:00;githubbot;600","maoling closed pull request #1804: Backport ZOOKEEPER-3738 to Branch 3.5
URL: https://github.com/apache/zookeeper/pull/1804


;09/May/22 03:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Apr 15 04:36:30 UTC 2020,,,,,,,,,,"0|z0bvk0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/20 19:14;ctubbsii;Patch available in the linked pull request.;;;","15/Apr/20 04:36;ctubbsii;Re-opening for the 3.6 branch. Supplemental patch available for the 3.6 branch in the above linked pull request.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to eliminate log4j1 transitive dependency,ZOOKEEPER-3737,13287385,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ctubbsii,ctubbsii,ctubbsii,25/Feb/20 01:20,11/May/20 15:41,13/Jul/23 09:08,01/Mar/20 06:56,3.4.14,3.5.7,,,,,,,,3.5.8,3.6.1,3.7.0,,,jmx,server,,,0,pull-request-available,,"Apache Accumulo is trying to switch to using log4j2 only. However, this seems impossible, because ZooKeeper has a hard-coded dependency on log4j 1.2 for some sort of jmx thing. The following is the error and stack trace I get whenever I remove log4j 1.2 from the class path and try to run a test instance of ZooKeeper as part of Accumulo's build test suite.

{code}
2020-02-24T20:10:03,682 [jmx.ManagedUtil] ERROR: Problems while registering log4j jmx beans!
java.lang.ClassNotFoundException: org.apache.log4j.jmx.HierarchyDynamicMBean
	at jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581) ~[?:?]
	at jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178) ~[?:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[?:?]
	at java.lang.Class.forName0(Native Method) ~[?:?]
	at java.lang.Class.forName(Class.java:315) ~[?:?]
	at org.apache.zookeeper.jmx.ManagedUtil.registerLog4jMBeans(ManagedUtil.java:72) ~[zookeeper-3.5.7.jar:3.5.7]
	at org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:94) ~[zookeeper-3.5.7.jar:3.5.7]
	at org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:64) ~[zookeeper-3.5.7.jar:3.5.7]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.apache.accumulo.start.Main.lambda$execMainClass$1(Main.java:167) ~[accumulo-start-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]
	at java.lang.Thread.run(Thread.java:834) [?:?]
{code}

I know previous work has been done on ZOOKEEPER-850 and ZOOKEEPER-1371 to eliminate the use of log4j in the source, but this work does not appear to be complete, since it is still required at runtime (at least, for the server... but maybe for the client too... it's hard to tell from the way Accumulo runs its test suite, and I'm not super familiar with ZK internals).",,busbey,ctubbsii,symat,tamaas,,,,,,,,,,,,,,,,"ctubbsii commented on pull request #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270
 
 
   * Look for jmx class that exists only in the log4j 1.2 jar, but not in
     the log4j2 1.2 compatibility jar.
   * Check if disabled before attempting to detect log4j 1.2 jmx classes.
   * Update log messages to highlight that they are referring to log4j 1.2
     and not log4j2 or other versions.
   * Minor javadoc fixup
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 20:46;githubbot;600","ctubbsii commented on issue #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270#issuecomment-591061000
 
 
   This doesn't remove the dependency on log4j 1.2 for this particular jmx support feature, but it does allow ZooKeeper to behave better when log4j 1.2 isn't on the class path.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 20:47;githubbot;600","eolivelli commented on pull request #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270#discussion_r384126953
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java
 ##########
 @@ -35,27 +35,25 @@
     private static boolean isLog4jJmxEnabled() {
         boolean enabled = false;
 
-        try {
-            Class.forName(""org.apache.log4j.spi.LoggerRepository"");
-
-            if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
-                LOG.info(""Log4j found but jmx support is disabled."");
-            } else {
+        if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
+            LOG.info(""Log4j 1.2 jmx support is disabled by property."");
+        } else {
+            try {
+                Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"");
                 enabled = true;
-                LOG.info(""Log4j found with jmx enabled."");
+                LOG.info(""Log4j 1.2 jmx support found and enabled."");
+            } catch (ClassNotFoundException e) {
+                LOG.info(""Log4j 1.2 jmx support not found; jmx disabled."");
             }
-
-        } catch (ClassNotFoundException e) {
-            LOG.info(""Log4j not found."");
         }
 
         return enabled;
     }
 
     /**
-     * Register the log4j JMX mbeans. Set environment variable
+     * Register the log4j JMX mbeans. Set system property
      * ""zookeeper.jmx.log4j.disable"" to true to disable registration.
-     * See http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
+     * @see http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
 
 Review comment:
   Just for curiosity:
   I am not sure it is a good thing to link to an external website using @see 
   It is not so relevant this link and javadoc tools may want to validate this link or to download?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 21:09;githubbot;600","ctubbsii commented on pull request #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270#discussion_r384138614
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java
 ##########
 @@ -35,27 +35,25 @@
     private static boolean isLog4jJmxEnabled() {
         boolean enabled = false;
 
-        try {
-            Class.forName(""org.apache.log4j.spi.LoggerRepository"");
-
-            if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
-                LOG.info(""Log4j found but jmx support is disabled."");
-            } else {
+        if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
+            LOG.info(""Log4j 1.2 jmx support is disabled by property."");
+        } else {
+            try {
+                Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"");
                 enabled = true;
-                LOG.info(""Log4j found with jmx enabled."");
+                LOG.info(""Log4j 1.2 jmx support found and enabled."");
+            } catch (ClassNotFoundException e) {
+                LOG.info(""Log4j 1.2 jmx support not found; jmx disabled."");
             }
-
-        } catch (ClassNotFoundException e) {
-            LOG.info(""Log4j not found."");
         }
 
         return enabled;
     }
 
     /**
-     * Register the log4j JMX mbeans. Set environment variable
+     * Register the log4j JMX mbeans. Set system property
      * ""zookeeper.jmx.log4j.disable"" to true to disable registration.
-     * See http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
+     * @see http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
 
 Review comment:
   I'm not aware of any built-in link validation in javadoc. This just cleans it up slightly to use proper javadoc syntax to reference a resource.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 21:32;githubbot;600","ctubbsii commented on pull request #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270#discussion_r384153901
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java
 ##########
 @@ -35,27 +35,25 @@
     private static boolean isLog4jJmxEnabled() {
         boolean enabled = false;
 
-        try {
-            Class.forName(""org.apache.log4j.spi.LoggerRepository"");
-
-            if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
-                LOG.info(""Log4j found but jmx support is disabled."");
-            } else {
+        if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
+            LOG.info(""Log4j 1.2 jmx support is disabled by property."");
+        } else {
+            try {
+                Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"");
                 enabled = true;
-                LOG.info(""Log4j found with jmx enabled."");
+                LOG.info(""Log4j 1.2 jmx support found and enabled."");
+            } catch (ClassNotFoundException e) {
+                LOG.info(""Log4j 1.2 jmx support not found; jmx disabled."");
             }
-
-        } catch (ClassNotFoundException e) {
-            LOG.info(""Log4j not found."");
         }
 
         return enabled;
     }
 
     /**
-     * Register the log4j JMX mbeans. Set environment variable
+     * Register the log4j JMX mbeans. Set system property
      * ""zookeeper.jmx.log4j.disable"" to true to disable registration.
-     * See http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
+     * @see http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
 
 Review comment:
   I can change it back, though if you really want.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 22:03;githubbot;600","eolivelli commented on pull request #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270#discussion_r384427776
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java
 ##########
 @@ -35,27 +35,25 @@
     private static boolean isLog4jJmxEnabled() {
         boolean enabled = false;
 
-        try {
-            Class.forName(""org.apache.log4j.spi.LoggerRepository"");
-
-            if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
-                LOG.info(""Log4j found but jmx support is disabled."");
-            } else {
+        if (Boolean.getBoolean(""zookeeper.jmx.log4j.disable"")) {
+            LOG.info(""Log4j 1.2 jmx support is disabled by property."");
+        } else {
+            try {
+                Class.forName(""org.apache.log4j.jmx.HierarchyDynamicMBean"");
                 enabled = true;
-                LOG.info(""Log4j found with jmx enabled."");
+                LOG.info(""Log4j 1.2 jmx support found and enabled."");
+            } catch (ClassNotFoundException e) {
+                LOG.info(""Log4j 1.2 jmx support not found; jmx disabled."");
             }
-
-        } catch (ClassNotFoundException e) {
-            LOG.info(""Log4j not found."");
         }
 
         return enabled;
     }
 
     /**
-     * Register the log4j JMX mbeans. Set environment variable
+     * Register the log4j JMX mbeans. Set system property
      * ""zookeeper.jmx.log4j.disable"" to true to disable registration.
-     * See http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
+     * @see http://logging.apache.org/log4j/1.2/apidocs/index.html?org/apache/log4j/jmx/package-summary.html
 
 Review comment:
   no problem from my side.
   I was just asking
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 11:14;githubbot;600","phunt commented on issue #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270#issuecomment-593058005
 
 
   +1, lgtm. I tested with 1.2 default as well as disable enabled (was not able to test v2 however)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/20 05:41;githubbot;600","asfgit commented on pull request #1270: ZOOKEEPER-3737: Detect log4j 1.2 jmx support better
URL: https://github.com/apache/zookeeper/pull/1270
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Mar/20 05:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,ZOOKEEPER-2342,,,,,,,,,,,,,,ZOOKEEPER-850,ZOOKEEPER-1371,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Mon May 11 15:41:20 UTC 2020,,,,,,,,,,"0|z0buhs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Feb/20 01:27;ctubbsii;If anybody wants to reproduce, I have a draft pull request for Accumulo at https://github.com/apache/accumulo/pull/1531 

The command to reproduce the build failure would be: {{mvn clean package -Dtest=MiniAccumuloClusterTest}}
The error can be observed when that test gets stuck at: {{minicluster/target/mini-tests/org.apache.accumulo.minicluster.MiniAccumuloClusterTest/logs/ZooKeeperServerMain_*.out}};;;","25/Feb/20 16:50;phunt;ZK log4j2 support is still an open issue: ZOOKEEPER-2342;;;","25/Feb/20 16:53;phunt;You should be able to disable this feature via configuration:
https://github.com/apache/zookeeper/blob/019e841e7703835aaa146dd1c16fd1b43d017071/zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java#L65

See 
https://github.com/apache/zookeeper/blob/019e841e7703835aaa146dd1c16fd1b43d017071/zookeeper-server/src/main/java/org/apache/zookeeper/jmx/ManagedUtil.java#L42

tldr: set ""zookeeper.jmx.log4j.disable"" to true;;;","25/Feb/20 17:04;phunt;According to this:
https://logging.apache.org/log4j/2.x/manual/jmx.html
in log4j2 ""JMX support is enabled by default""

As such the registerLog4jMBeans method should not be called when log4j2 is being used. Perhaps we can check whether HierarchyDynamicMBean is available and not call the method - ie add another check to isLog4jJmxEnabled...;;;","25/Feb/20 17:09;ctubbsii;Thanks [~phunt], I will try setting that property. It looks like that won't work in 3.4.14, because the class won't load (since {{org.apache.log4j.jmx.HierarchyDynamicMBean}} isn't loaded dynamically, as it is since 3.5.5). But, it should work in 3.5.5 and later.

Also, it seems there's a bug in the checking for log4j1. It is assuming log4j1 is available if the class {{org.apache.log4j.spi.LoggerRepository}} can be loaded. However, that class is also available in the {{log4j-1.2-api}} compatibility jar from log4j2. Since the class it actually needs is {{org.apache.log4j.jmx.HierarchyDynamicMBean}}, it should probably be checking for that instead, since that is not available in the log4j2 compatibility jar. Then, the system property would not be necessary. However, the system property should be a feasible workaround. I will try it.;;;","25/Feb/20 17:14;phunt;Git blame indicates that the check for LoggerRepository is from over 4 years ago. Perhaps it was accurate at the time - ie added for ""compatibility"" at some point.

Given you're in there and easily able to reproduce please consider submitting a patch to fix this in ZK. Thx.;;;","25/Feb/20 17:15;ctubbsii;If it's enabled by default in log4j2, it seems ZK could just get rid of it entirely in its own code. Just use slf4j as the logging facade, and defer to any advanced logging features to the log4j2 implementation (or any alternate implementation users select). The less done in code, the more reusable and portable the ZK code is.;;;","25/Feb/20 19:13;ctubbsii;I'll open a PR to address this soon. I first had to get the build working for my environment (ZOOKEEPER-3738 and ZOOKEEPER-3739, both of which now have PRs).;;;","25/Feb/20 20:48;ctubbsii;Patch available in the linked pull request.;;;","01/Mar/20 05:46;phunt;Committed to 3.5/3.6 and trunk. Thanks [~ctubbsii]
;;;","01/Mar/20 06:55;ctubbsii;[~phunt] Awesome! Should this JIRA issue now be marked as resolved/fixed/closed?;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,
invalid ipv6 address comparison in C client,ZOOKEEPER-3726,13285129,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,vtyulb,vtyulb,13/Feb/20 16:45,11/May/20 15:41,13/Jul/23 09:08,11/Apr/20 07:07,3.5.6,,,,,,,,,3.5.8,3.6.1,3.7.0,,,c client,,,,0,pull-request-available,,"Zookeeper C Client periodically resolves server names since https://issues.apache.org/jira/browse/ZOOKEEPER-1355

After dns resolution ip addresses are checked against previous set of addresses. However, currently only several bytes are checked (it is assumed, that all addresses are ipv4 length bytes).

Case:
 1) zookeeper server operates only by ipv6
 2) client connects to it by some hostname (zookeeper-1.news.yandex.ru, for example)
 3) container with zookeeper server dies, new container is up, and zookeeper-1.news.yandex.ru now points to new address
 4) several bits in ipv6 address are changed
 5) zookeeper client ignores changes in address, because of incorrect strcmp size and first bytes were equal
 6) zookeeper client now can't reconnect to zookeeper without manual intervention, because it tries old address

This is proposed fix: [https://github.com/apache/zookeeper/pull/1252]",,symat,vtyulb,,,,,,,,,,,,,,,,,,"vtyulb commented on pull request #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252
 
 
   Fix for https://issues.apache.org/jira/browse/ZOOKEEPER-3726
   
   sockaddr_storage can contain ipv4 or ipv6 address. If address is ipv6, then we need to compare more bytes.
   
   In this PR correct comparison of sockaddr_storage was added.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/20 17:29;githubbot;600","vtyulb commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-586880305
 
 
   @eolivelli @nkalmar 
   
   Hi guys, can you please review changes, or may be point me to some required actions?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 08:48;githubbot;600","nkalmar commented on pull request #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#discussion_r384516704
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/addrvec.c
 ##########
 @@ -126,8 +126,26 @@ int addrvec_contains(const addrvec_t *avec, const struct sockaddr_storage *addr)
 
     for (i = 0; i < avec->count; i++)
     {
-        if(memcmp(&avec->data[i], addr, INET_ADDRSTRLEN) == 0)
-            return 1;
+        if (avec->data[i].ss_family != addr->ss_family)
+            continue;
+        switch (addr->ss_family) {
+        case AF_INET:
+            if (memcmp(&((struct sockaddr_in*)&avec->data[i])->sin_addr,
+                       &((struct sockaddr_in*)addr)->sin_addr,
+                       sizeof(struct in_addr)) == 0)
+                return 1;
+            break;
+#ifdef AF_INET6
 
 Review comment:
   Shouldn't we add #ifndef AF_INET6 before the previous if?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 14:13;githubbot;600","nkalmar commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-591447169
 
 
   LGTM, I have one question which I'm not sure about at all, just seems logical to me. (See my code comment)
   
   Anyway, I would need someone else to also take a look, perhaps @symat who has more C experience. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 14:15;githubbot;600","vtyulb commented on pull request #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#discussion_r384690997
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/src/addrvec.c
 ##########
 @@ -126,8 +126,26 @@ int addrvec_contains(const addrvec_t *avec, const struct sockaddr_storage *addr)
 
     for (i = 0; i < avec->count; i++)
     {
-        if(memcmp(&avec->data[i], addr, INET_ADDRSTRLEN) == 0)
-            return 1;
+        if (avec->data[i].ss_family != addr->ss_family)
+            continue;
+        switch (addr->ss_family) {
+        case AF_INET:
+            if (memcmp(&((struct sockaddr_in*)&avec->data[i])->sin_addr,
+                       &((struct sockaddr_in*)addr)->sin_addr,
+                       sizeof(struct in_addr)) == 0)
+                return 1;
+            break;
+#ifdef AF_INET6
 
 Review comment:
   I think it's possible. However, it adds several lines and it duplicates comparison logic. In AF_INET case I fully cover ipv4 address type. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 18:47;githubbot;600","symat commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-591917686
 
 
   LGTM in general, nice catch!
   
   We already have similar logics here: https://github.com/apache/zookeeper/blob/db87335fd2593cacc49bc23c1b9065256d0d3d36/zookeeper-client/zookeeper-client-c/src/zookeeper.c#L4957-L4992
   
   It would be great to add a unit test for it (both for IPv4 and IPv6), but it seems to be a complicated issue to reproduce with unit tests. Please think about it. But I am OK to commit this without tests as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 11:17;githubbot;600","vtyulb commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-592744082
 
 
   Well, for sure it's almost impossible to reproduce full problem behavior. But it's possible to show how new addrvec_contains differs from the old one. In second commit I generate all addresses that differ by one bit from source. These tests can't pass on previous implementation.
   
   Also, I found 2 duplicate tickets for my issue:
   https://issues.apache.org/jira/browse/ZOOKEEPER-1677
   https://issues.apache.org/jira/browse/ZOOKEEPER-2490
   
   Both tickets have patches attached. ZOOKEEPER-2490 is not very elegant, but ZOOKEEPER-1677 even had tests (on which mine are based now). I am not really sure why they weren't merged, it looks like I am not the first one to encounter the bug.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 21:47;githubbot;600","vtyulb commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-595398781
 
 
   @symat 7 years have passed since bug discovery, I think it's time to merge the fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/20 19:15;githubbot;600","symat commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-595456556
 
 
   agree, and I also like your unit tests, thanks for taking the time to implement them! :)
   @anmolnar, @nkalmar, @eolivelli PTAL
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/20 21:28;githubbot;600","vtyulb commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-612332075
 
 
   please don't lose my PR @symat @nkalmar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 05:21;githubbot;600","symat commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-612334390
 
 
   Sure, thanks for the notification! I'll merge it on Tuesday, if noone else does before.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 05:36;githubbot;600","symat commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-612343144
 
 
   The kids woke up late, I think I can merge it now :)
   I will push for master and branch-3.6, and also check it if I can also push on branch-3.5 without conflict.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 06:23;githubbot;600","asfgit commented on pull request #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 06:36;githubbot;600","vtyulb commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-612346574
 
 
   Thank you!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 06:42;githubbot;600","symat commented on issue #1252: ZOOKEEPER-3726: invalid ipv6 address comparison
URL: https://github.com/apache/zookeeper/pull/1252#issuecomment-612351224
 
 
   I compiled and re-executed the C client tests on all branches (as this commit was tested by the CI a long time ago), everything seemed to be fine.
   
   @vtyulb Thanks again for your help and your patience! :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 07:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9000,,,0,9000,,,,,,,ZOOKEEPER-1677,ZOOKEEPER-2490,,,,,,,,,,,,,ZOOKEEPER-1355,ZOOKEEPER-1677,ZOOKEEPER-2490,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:18 UTC 2020,,,,,,,,,,"0|z0bgsw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Apr/20 07:07;symat;Issue resolved by pull request 1252
[https://github.com/apache/zookeeper/pull/1252];;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
C Client compilation issues in 3.5.7-rc,ZOOKEEPER-3719,13283971,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,07/Feb/20 15:45,27/Feb/20 13:13,13/Jul/23 09:08,09/Feb/20 13:55,3.5.6,,,,,,,,,3.5.7,,,,,c client,,,,0,pull-request-available,,"The C client included in {{release-3.5.7-rc0}} and {{release-3.5.7-rc1}} suffers from a few issues:

# It configures, but ""forgets"" to build the C code in the {{full-build}} profile;
# Compilation actually fails with GCC 8.3, as the the {{Makefile}} uses {{-Werror}} and the compiler detects a couple possible buffer overruns;
# The {{WIN32}} branch of the code does not compile because of a change in socket representation.

This should probably be set to ""blocker,"" but I don't know if the C client is supposed to block a release.  Oh, and the first issue, at least, also existed in 3.5.6—and it seems nobody complained :)

A ""pull request"" is in the works.",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg commented on issue #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#issuecomment-583523018
 
 
   @eolivelli: Ah, sorry; I got the commit headers right, but forgot to update the PR title.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 17:44;githubbot;600","ztzg commented on pull request #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#discussion_r376522172
 
 

 ##########
 File path: zookeeper-client/zookeeper-client-c/pom.xml
 ##########
 @@ -114,6 +114,21 @@
               </arguments>
             </configuration>
           </execution>
+          <execution>
+            <id>build-c-client</id>
 
 Review comment:
   Initially, yes.  But it did not work as-is, because `master` uses `<tasks>` and it seems the Maven plugins pulled by 3.5 are missing support for it—so I adapted it by cargo-culting (and later cleaning up) the surrounding stanzas.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 17:49;githubbot;600","nkalmar commented on issue #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#issuecomment-583537294
 
 
   The patch is against branch-3.5.7, so whoever commits make sure to cherry-pick to branch-3.5.
   
   I'm testing the build, I have older version of GCC so issue did not show to me.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 18:17;githubbot;600","nkalmar commented on issue #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#issuecomment-583537294
 
 
   The patch is against branch-3.5.7, so whoever commits, please make sure to cherry-pick to branch-3.5. (There's a pretty good chance this warning is for me :) )
   
   I'm testing the build, I have older version of GCC so issue did not show to me.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 18:18;githubbot;600","ztzg commented on issue #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#issuecomment-583551544
 
 
   @nkalmar: Right; everything gets build and tested as long as you don't use `-DskipTests`... in which case it only configures, but doesn't build anything.  Not the biggest issue, but it was a bit confusing :)
   
   I included the GCC fixes because I was hitting them on NixOS 19.09.  Not a big issue either, though `-Werror` means that the build fails instead of just being noisy.
   
   As for the `WIN32` bit, that is a real regression.  (But then I don't know how many people use the C client under Windows.)
   
   (Feel free to cherry-pick a subset of the patches; I won't mind.)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 18:49;githubbot;600","nkalmar commented on issue #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#issuecomment-583848213
 
 
   Merged to 3.5 and 3.5.7. Thanks @ztzg !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/20 13:55;githubbot;600","nkalmar commented on pull request #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/20 13:55;githubbot;600","symat commented on issue #1249: ZOOKEEPER-3719: C Client compilation issues in 3.5.7-rc
URL: https://github.com/apache/zookeeper/pull/1249#issuecomment-584017939
 
 
   great, thanks @ztzg !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Feb/20 08:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3741,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2020-02-07 15:45:16.0,,,,,,,,,,"0|z0b9nc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Generated source tarball is missing some files,ZOOKEEPER-3718,13283941,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,nkalmar,nkalmar,nkalmar,07/Feb/20 13:28,07/May/20 10:26,13/Jul/23 09:08,10/Feb/20 07:14,3.5.6,,,,,,,,,3.5.7,,,,,,,,,0,,,"As [~eolivelli] pointed out:

{quote}
I see differences between the contents of the source tarball and the
git tag (using Meld, as suggested by Patrick some month ago), namely:
- there is not checkstyleSuppressions.xml file, and mvn
checkstyle:check fails (it is not bound to the default lifecycle, so
mvn clean install still works)
- there are "".c"" generated files, they should not be part of the source release
- there is not ""dev"" directory
- there is not .travis.yml file
{quote}

Note: only affects branch-3.5.",,nkalmar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Feb 10 07:15:08 UTC 2020,,,,,,,,,,"0|z0b9go:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Feb/20 14:00;nkalmar;It's worth to test using apache parent pom's configuration to generate the source tarball, just like in master after Enrico modified it. 
I'll see if it's feasible on branch-3.5 as well.;;;","10/Feb/20 07:15;nkalmar;For now we decided to just fix up the assembly. ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade netty 4.1.42 to address CVE-2019-20444 CVE-2019-20445,ZOOKEEPER-3716,13283036,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,phunt,phunt,phunt,03/Feb/20 19:05,14/Feb/20 15:23,13/Jul/23 09:08,04/Feb/20 09:35,3.5.6,3.6.0,3.7.0,,,,,,,3.5.7,3.6.0,,,,security,server,,,0,pull-request-available,,"OWASP dependency-check is failing 

upgrade netty 4.1.42 to address CVE-2019-20444 CVE-2019-20445

[ERROR] netty-transport-4.1.42.Final.jar: CVE-2019-20445, CVE-2019-20444

We need to upgrade to netty 4.1.45 (current latest) or later",,eolivelli,nkalmar,phunt,,,,,,,,,,,,,,,,,"phunt commented on pull request #1245: ZOOKEEPER-3716: upgrade netty 4.1.42 to address CVE-2019-20444 CVE-20…
URL: https://github.com/apache/zookeeper/pull/1245
 
 
   …19-20445
   
   Updated netty to version 4.1.45 to address CVE-2019-20444 CVE-2019-20445
   
   Change-Id: Iabcbd1f0b75a03d2a555084de841d7f8caedf6bd
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 22:59;githubbot;600","phunt commented on pull request #1246: ZOOKEEPER-3716: upgrade netty 4.1.42 to address CVE-2019-20444 CVE-20…
URL: https://github.com/apache/zookeeper/pull/1246
 
 
   …19-20445
   
   Updated netty to version 4.1.45 to address CVE-2019-20444 CVE-2019-20445
   
   Change-Id: Iabcbd1f0b75a03d2a555084de841d7f8caedf6bd
   (cherry picked from commit c3f6d4627579e3ee1a25a7c3f08ceb261eee5af1)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 23:11;githubbot;600","eolivelli commented on pull request #1245: ZOOKEEPER-3716: upgrade netty 4.1.42 to address CVE-2019-20444 CVE-20…
URL: https://github.com/apache/zookeeper/pull/1245
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 09:35;githubbot;600","nkalmar commented on issue #1246: ZOOKEEPER-3716: upgrade netty 4.1.42 to address CVE-2019-20444 CVE-20…
URL: https://github.com/apache/zookeeper/pull/1246#issuecomment-583847362
 
 
   Merged to 3.5 and 3.5.7. Thank you @phunt 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/20 13:49;githubbot;600","nkalmar commented on pull request #1246: ZOOKEEPER-3716: upgrade netty 4.1.42 to address CVE-2019-20444 CVE-20…
URL: https://github.com/apache/zookeeper/pull/1246
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/20 13:49;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Feb 09 13:52:04 UTC 2020,,,,,,,,,,"0|z0b468:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Feb/20 03:21;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4344//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4344//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4344//console

This message is automatically generated.;;;","04/Feb/20 09:35;eolivelli;Issue resolved by pull request 1245
[https://github.com/apache/zookeeper/pull/1245];;;","09/Feb/20 13:52;nkalmar;Also resolved for 3.5.7:
https://github.com/apache/zookeeper/pull/1246;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[trivial bug] fix compile error in PurgeTxnTest introduced by ZOOKEEPER-3231,ZOOKEEPER-3710,13282527,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,maoling,maoling,maoling,31/Jan/20 04:07,28/Mar/21 08:54,13/Jul/23 09:08,31/Jan/20 11:01,,,,,,,,,,3.7.0,,,,,tests,,,,0,pull-request-available,,,,eolivelli,maoling,,,,,,,,,,,,,,,,,,"asfgit commented on pull request #1239: ZOOKEEPER-3710: [trivial bug] fix compile error in PurgeTxnTest introduced by ZOOKEEPER-3231
URL: https://github.com/apache/zookeeper/pull/1239
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/20 11:01;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jan 31 11:01:42 UTC 2020,,,,,,,,,,"0|z0b114:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"31/Jan/20 11:01;eolivelli;Issue resolved by pull request 1239
[https://github.com/apache/zookeeper/pull/1239];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZooKeeper.close() would leak SendThread when the network is broken,ZOOKEEPER-3706,13281532,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,yfx416,yfx416,yfx416,25/Jan/20 08:28,17/May/22 09:02,13/Jul/23 09:08,03/Mar/20 02:13,3.4.14,3.5.6,3.6.0,,,,,,,3.5.10,3.6.3,3.7.0,3.8.0,,java client,,,,0,pull-request-available,,"The close method of ZooKeeper may cause the leak of SendThread when the network is broken.

When the network is broken, the SendThread of ZooKeeper client falls into the continuous reconnecting scenario. But there is an unsafe point which is just at the moment before startConnect() during the continuous reconnecting. If SendThread.close() in another thread hit the unsafe point, startConnect() would sleep some time and force to change state to States.CONNECTING although SendThread.close() already set state to States.CLOSED. In this case, the SendThread would be never be dead and nobody would change the state again.

In normal case, ZooKeeper.close() would be blocked forever to wait closeSession packet is finished until the network broken is recovered. But if user set the request timeout, ZooKeeper.close() would break the block waiting within timeout and invoke SendThread.close() to change state to CLOSED. That's why SendThread.close() can hit the unsafe point.

Set request timeout is a very common practice. 

I propose a patch and send it out later.

Maybe someone can help to review it.

 

Thanks

 

 ",,aishwaryasoni1991,arshad.mohammad,hanm,jchipmunk,kezhuw,Mukti,symat,yfx416,,,,,,,,,,,,"yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235
 
 
   …ork is broken
   
   - add unit test to verify the bug
   - bypass the SendThread.startConnect() by throw RuntimeExcepth if state.isAlive is false
   
   Author: Fangxi Yin <yinfangxi@kuaishou.com>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/20 08:38;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r370933641
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,310 @@
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.Future;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.TimeUnit;
 
 Review comment:
   Some imports are never used, also notice the useless field in this class(e.g: `scheduledExecutor`)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/20 13:30;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r370933702
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,310 @@
+package org.apache.zookeeper;
 
 Review comment:
   LICENSE ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/20 13:32;githubbot;600","maoling commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-580634076
 
 
   @yfxhust
   Great issue description in JIRA. this issue is a little hidden. Do you observe it in the production?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/20 08:23;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373362709
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Connecting server {}."", addr);
+    }
+
 
 Review comment:
   - I wonder whether a log is needed here? because I found the `logStartConnect` in the `SendThread#startConnect`?
   - If needed, `LOG.info(""Start to reconnect to server {}."", addr); `or `LOG.info(""Try to reconnect to server {}."", addr)`; is better?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/20 08:34;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373364767
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   Just as you said, this issue happens when network is broken, so `IOException` is better? e.g. 
   `throw new IOException(""Socket has already closed when reconnecting to ""+ addr);`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/20 08:34;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373900060
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,310 @@
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.Future;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.TimeUnit;
 
 Review comment:
   Thanks for comment. Accept it. I miss the check for unused field. I will fix it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 02:19;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373906397
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,310 @@
+package org.apache.zookeeper;
 
 Review comment:
   Thanks for comment. Accept it. I will add LICENSE statement in the test case.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 03:03;githubbot;600","yfxhust commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-581224808
 
 
   > @yfxhust
   > Great issue description in JIRA. this issue is a little hidden. Do you observe it in the production?
   
   We observed occasional SendThread leak case in our production. But the root cause is 100 percent sure. But from source code and some network clues, we believe that this issue is a potential cause.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 03:47;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373914530
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Connecting server {}."", addr);
+    }
+
 
 Review comment:
   Actually onConnecting() method is added to facilitate the test case. onConnecting() is the unsafe point that is described in JIRA issue. We can override this method to inject some actions in test case. The injected actions make test case happen. If we don't have this method, it is difficult to construct a test case to reproduce the issue.
   Your suggestion of log changing is good for me. Accept it. I will change the log to ""Try to reconnect to server {}."" Thanks for your comments.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 04:02;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373914530
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Connecting server {}."", addr);
+    }
+
 
 Review comment:
   Actually onConnecting() method is added to facilitate the test case. onConnecting() is the unsafe point that is described in JIRA issue. We can override this method to inject some actions in test case. The injected actions make issue happen. If we don't have this method, it is difficult to construct a test case to reproduce the issue.
   Your suggestion of log changing is good for me. Accept it. I will change the log to ""Try to reconnect to server {}."" Thanks for your comments.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 04:03;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373914530
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Connecting server {}."", addr);
+    }
+
 
 Review comment:
   Actually onConnecting() method is added to facilitate the test case. onConnecting() is placed at the unsafe point that is described in JIRA issue. We can override this method to inject some actions in test case. The injected actions make issue happen. If we don't have this method, it is difficult to construct a test case to reproduce the issue.
   Your suggestion of log changing is good for me. Accept it. I will change the log to ""Try to reconnect to server {}."" Thanks for your comments.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 04:03;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373914530
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Connecting server {}."", addr);
+    }
+
 
 Review comment:
   Actually onConnecting() method is added to facilitate the test case. onConnecting() is placed at the unsafe point that is described in JIRA issue. We can override this method to inject some actions in test case. The injected actions make issue happen. If we don't have this method, it is difficult to construct a test case to reproduce the issue.
   Your suggestion of log changing is good for me. Accept it. I will change the log to ""Try to connect to server {}.""  I change the word ""reconnect"" to ""connect"" in your word. I think ""connect"" is better because the first connect also can hit here. The first connect attempt should not be treated as ""reconnect"".  
   Thanks for your comments.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 04:08;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373916473
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   I prefer to RuntimeException. In my opinion, IOException indicates the actual physical network is broken. But I think it is not proper to throw IOException here. Here it is software issue that misses the state check. The direct reason is not a real physical network broken.  I think that throwing of IOException here would confuse the users. So I still prefer to use RuntimeException here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 04:17;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r373916473
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   I prefer RuntimeException. In my opinion, IOException indicates the actual physical network is broken. But I think it is not proper to throw IOException here. Here it is software issue that misses the state check. The direct reason is not a real physical network broken.  I think that throwing of IOException here would confuse the users. So I still prefer to use RuntimeException here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 04:19;githubbot;600","hanm commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374381726
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Try to connect to server {}."", addr);
 
 Review comment:
   Since the primary reason of adding this is for injection in unit tests, I'd suggest we mark this method which a comment like ""for tests only"", and remove the log statement which if leaving as is, will create a lot of noises in client side logs. We can still override an empty method in test implementation.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 22:39;githubbot;600","hanm commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374379920
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
 
 Review comment:
   I suspect this will not completely fix the race condition between setting the state to closed and connecting. Another thread could set the state to close immediately after this check but before the subsequent `state = States.CONNECTING;` statement. We could make sure that this ""check and assign"" operation is atomic to completely address the race condition.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 22:39;githubbot;600","hanm commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-581653852
 
 
   nice work - left two comments. since the request timeout is a feature disabled by default, the impact of this bug is limited to those who enabled this feature only. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Feb/20 22:40;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374466001
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
 
 Review comment:
   Thanks for your comments. I agree with your concern. I would add synchronized(state) to ensure the atomic operation. I also add synchronized(state) guard at SendThread.close() to set state as States.CLOSED. I think these guards can resolve the problem.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 04:10;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374466290
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Try to connect to server {}."", addr);
 
 Review comment:
   Thanks your comments. Accept it. I will add comments to declare it as ""test only"" and leave this method as empty.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 04:12;githubbot;600","yfxhust commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-581734622
 
 
   > nice work - left two comments. since the request timeout is a feature disabled by default, the impact of this bug is limited to those who enabled this feature only.
   
   Thanks for your comments
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 04:12;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374466290
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -782,6 +782,10 @@ void queueCallback(AsyncCallback cb, int rc, String path, Object ctx) {
         eventThread.queueCallback(cb, rc, path, ctx);
     }
 
+    protected void onConnecting(InetSocketAddress addr) {
+        LOG.info(""Try to connect to server {}."", addr);
 
 Review comment:
   Thanks your comments. Accept it. I will add comments to declare it as ""for test only"" and leave this method as empty.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 04:33;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374471742
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
 
 Review comment:
   synchronized(state) is still not safe. Maybe SendThread.close() and SendThread.startConnect() synchronize on different objects because state is mutable and can be changed between SendThread.close() and SendThread.startConnect().
   I prefer synchronized(this) guard.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 04:42;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r374471742
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
 
 Review comment:
   synchronized(state) is still not safe. Maybe SendThread.close() and SendThread.startConnect() synchronize on different objects because state is mutable and can be changed between SendThread.close() and SendThread.startConnect().
   I prefer synchronized(this) guard to lock on SendThread..
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/20 04:47;githubbot;600","hanm commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r375060653
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
 
 Review comment:
   I think this will work. 
   
   I would recommend instead of doing the check here, we add a set of new `synchronized` methods to `SenderThread` where we get and set the states of the `SenderThread.state`. Then, we can move the checks in the `setState` method, where we can put constraints on how the connection state may transit. For example, we can enforce in that method that a `CLOSED` state can't be transit to a different state, which will prevent the problem we are seeing in this issue (that setting a state to `CONNECTING` after being in `CLOSED` state). This has additional benefits as currently, there are multiple write paths to the `SenderThread.state`, and by consolidate read and write access of the state in these synchronized methods, we can be sure there will not be future race conditions w.r.t accessing this state variable.
   
   I also thought about an alternative - instead of synchronizing on `SenderThread`, we could wrap the state variable in an `AtomicReference` and then provide get/set/compareAndSet methods on top of the atomic reference. This however is less flexible to allow us to control how the state could transit, so it still looks to me that  synchronizing on `SenderThread` is better.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/20 05:04;githubbot;600","hanm commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r375061974
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   `RuntimeException` indicates unrecoverable programming error - such as illegal arguments or unrecoverable errors. Our case here is not that dramatic, it's recoverable by throwing an IOException if the state is `CLOSED` and it's being set to another value. `CLOSED` state will signal `SenderThread` to terminate and the benefit is we will be able to clean up resources - like the sockets sender thread held, and more importantly, the event thread will also be properly shutdown. 
   And since we are explicitly programming in this issue to prevent this error, it does not sound like a logic error to me that worth to throw a RuntimeException.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/20 05:11;githubbot;600","hanm commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-582243797
 
 
   left two more comments - current approach should work but I am wondering if my proposal would sound better in term of more structurally solve the race condition around the state variable; also was a little bit concerning around RuntimeException we throw and the implications it brought (w.r.t resource leaks)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/20 05:14;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r375732546
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
 
 Review comment:
   Accept it. Now I make a new method SendThread.setZkState() with checked IOException. Please check the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/20 09:47;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r375734071
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   Both of you convince me. Now I throw IOException in SendThread.setZkState. Please check latest patch 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/20 09:50;githubbot;600","yfxhust commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-582822785
 
 
   > left two more comments - current approach should work but I am wondering if my proposal would sound better in term of more structurally solve the race condition around the state variable; also was a little bit concerning around RuntimeException we throw and the implications it brought (w.r.t resource leaks)
   
   Thank you for your comments. I adapt my code with your suggestions. Please review the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/20 09:52;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r375734071
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   Both of you convince me. Now I throw IOException in SendThread.setZkState. Please check the latest patch 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/20 10:03;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r375734071
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1121,6 +1125,9 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                     LOG.warn(""Unexpected exception"", e);
                 }
             }
+            if (!state.isAlive()) {
+                throw new RuntimeException(""Already closed"");
+            }
 
 Review comment:
   Both of you convince me. Now I throw IOException in SendThread.setZkState(). Please check the latest patch 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/20 10:06;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379822759
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
         }
 
+        synchronized void setZkState(ZooKeeper.States newState) throws IOException {
+            if (!state.isAlive()) {
+                if (newState == States.CONNECTING) {
+                    throw new IOException(
 
 Review comment:
   `if (!state.isAlive() && newState == States.CONNECTING)` ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/20 10:17;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379822895
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   `state` is already modified by `volatile`, so `synchronized` is no need ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/20 10:17;githubbot;600","maoling commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379822792
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1179,6 +1198,7 @@ public void run() {
                         } else {
                             serverAddress = hostProvider.next(1000);
                         }
+                        ClientCnxn.this.onConnecting(serverAddress);
                         startConnect(serverAddress);
 
 Review comment:
   `onConnecting(serverAddress);`  ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Feb/20 10:17;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379962719
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
         }
 
+        synchronized void setZkState(ZooKeeper.States newState) throws IOException {
+            if (!state.isAlive()) {
+                if (newState == States.CONNECTING) {
+                    throw new IOException(
 
 Review comment:
   Current implementation seems more structural for future evaluation because it will handle more scenarios.
   But anyway I accept your suggestion. Currently your suggestion seems more compact.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 02:27;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379963881
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1179,6 +1198,7 @@ public void run() {
                         } else {
                             serverAddress = hostProvider.next(1000);
                         }
+                        ClientCnxn.this.onConnecting(serverAddress);
                         startConnect(serverAddress);
 
 Review comment:
   Accept it. Good suggestion.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 02:34;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379970390
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   In my memory, checkstyle may report exception if remove `synchronized` from getkState. But I can not reproduce the checkstyle error in current version. Maybe I missed something. 
   Another reason of adding `synchronized` is to prevent future risk.
   In current implementation, we have implicit convention for setZkSate() - state modification must be placed at the end of setZkState() otherwise incomplete internal state may be exposed to outside. Adding `synchronized` to getZkState() can avoid this risk because getZkState() only be allowed to interleave execution with the whole setZkState().
   
   Anyway I accept your suggestion. Maybe it has potential performance benefit if I remove `synchronized` from getZkState(). I will add more comments to clarify the implicit convention of state modification.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:15;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379962719
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
         }
 
+        synchronized void setZkState(ZooKeeper.States newState) throws IOException {
+            if (!state.isAlive()) {
+                if (newState == States.CONNECTING) {
+                    throw new IOException(
 
 Review comment:
   Thank you for your comments.
   Current implementation seems more structural for future evaluation because it will handle more scenarios.
   But anyway I accept your suggestion. Currently your suggestion seems more compact.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:15;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379970390
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   In my memory, checkstyle may report exception if remove `synchronized` from getkState. But I can not reproduce the checkstyle error in current version. Maybe I missed something. 
   Another reason of adding `synchronized` is to prevent future risk if we add more complex task in setZkState() in future..
   In current implementation, we have implicit convention for setZkSate() - state modification must be placed at the end of setZkState() otherwise incomplete internal state may be exposed to outside. Adding `synchronized` to getZkState() can avoid this risk because getZkState() only be allowed to interleave execution with the whole setZkState().
   
   Anyway I accept your suggestion. Maybe it has potential performance benefit if I remove `synchronized` from getZkState(). I will add more comments to clarify the implicit convention of state modification.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:17;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379962719
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
         }
 
+        synchronized void setZkState(ZooKeeper.States newState) throws IOException {
+            if (!state.isAlive()) {
+                if (newState == States.CONNECTING) {
+                    throw new IOException(
 
 Review comment:
   Thank you for your comments.
   Current implementation seems more structural for future evaluation because it will handle more scenarios.
   But anyway I accept your suggestion. Your suggestion seems more compact.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:28;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379970390
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   checkstyle may report exception if remove `synchronized` from getkState. 
   Another reason of adding `synchronized` is to prevent future risk if we add more complex task in setZkState() in future..
   In current implementation, we have implicit convention for setZkSate() - state modification must be placed at the end of setZkState() otherwise incomplete internal state may be exposed to outside. Adding `synchronized` to getZkState() can avoid this risk because getZkState() only be allowed to interleave execution with the whole setZkState().
   
   Anyway I accept your suggestion. Maybe it has potential performance benefit if I remove `synchronized` from getZkState(). I will add more comments to clarify the implicit convention of state modification.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:32;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379970390
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   spotbugs-maven-plugin:3.1.9:check may report error if remove `synchronized` from getkState. 
   Another reason of adding `synchronized` is to prevent future risk if we add more complex task in setZkState() in future..
   In current implementation, we have implicit convention for setZkSate() - state modification must be placed at the end of setZkState() otherwise incomplete internal state may be exposed to outside. Adding `synchronized` to getZkState() can avoid this risk because getZkState() only be allowed to interleave execution with the whole setZkState().
   
   Anyway I accept your suggestion. Maybe it has potential performance benefit if I remove `synchronized` from getZkState(). I will add more comments to clarify the implicit convention of state modification and rename setZkState
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:36;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379970390
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   spotbugs-maven-plugin:3.1.9:check may report error for UG_SYNC_SET_UNSYNC_GET if remove `synchronized` from getZkState because we have synchronized setZkState. 
   Another reason of adding `synchronized` is to prevent future risk if we add more complex task in setZkState() in future.
   In current implementation, we have implicit convention for setZkSate() - state modification must be placed at the end of setZkState() otherwise incomplete internal state may be exposed to outside. Adding `synchronized` to getZkState() can avoid this risk because getZkState() only be allowed to interleave execution with the whole setZkState().
   
   Anyway I accept your suggestion. Maybe it has potential performance benefit if I remove `synchronized` from getZkState(). I will add more comments to clarify the implicit convention of state modification and rename setZkState() to changZkState to make spotbugs-maven-plugin happy.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:46;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r379970390
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   spotbugs-maven-plugin:3.1.9:check may report error for UG_SYNC_SET_UNSYNC_GET if remove `synchronized` from getZkState because we have synchronized setZkState. 
   Another reason of adding `synchronized` is to prevent future risk if we add more complex task in setZkState() in future.
   In current implementation, we have implicit convention for setZkSate() - state modification must be placed at the end of setZkState() otherwise incomplete internal state may be exposed to outside. Adding `synchronized` to getZkState() can avoid this risk because getZkState() only be allowed to interleave execution with the whole setZkState().
   
   Anyway I accept your suggestion. Maybe it has potential performance benefit if I remove `synchronized` from getZkState(). I will add more comments to clarify the implicit convention of state modification and rename setZkState() to changZkState() to make spotbugs-maven-plugin happy.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Feb/20 03:49;githubbot;600","hanm commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r381083959
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   I actually prefer the previous synchronized getZkState() approach - it's simple and consistent and easy to understand than the current approach. It's good to have performance in mind, but unless there is a real bottleneck, I would always choose simple code over premature optimization.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 05:27;githubbot;600","hanm commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r381084467
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,321 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
+                try {
+                    zk.getData(path, false, new Stat());
+                } catch (Exception e) {
+                }
+            }
+        }).start();
+    }
+
+    @Test
+    public void testClientCnxnSocketFragility() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, FragileClientCnxnSocketNIO.class.getName());
+        System.setProperty(ZKClientConfig.ZOOKEEPER_REQUEST_TIMEOUT, ""1000"");
+        final int[] clientPorts = new int[SERVER_COUNT];
+        StringBuilder sb = new StringBuilder();
+        String server;
+
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            clientPorts[i] = PortAssignment.unique();
+            server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique() + "":"" + PortAssignment.unique()
+                     + "":participant;127.0.0.1:"" + clientPorts[i];
+            sb.append(server + ""\n"");
+        }
+        String currentQuorumCfgSection = sb.toString();
+        MainThread[] mt = new MainThread[SERVER_COUNT];
+
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false);
+            mt[i].start();
+        }
+
+        // Ensure server started
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            Assert.assertTrue(
+                ""waiting for server "" + i + "" being up"",
+                ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts[i], CONNECTION_TIMEOUT));
+        }
+        String path = ""/testClientCnxnSocketFragility"";
+        String data = ""balabala"";
+        ClientWatcher watcher = new ClientWatcher();
+        zk = new CustomZooKeeper(getCxnString(clientPorts), SESSION_TIMEOUT, watcher);
+        watcher.watchFor(zk);
+
+        // Let's see some successful operations
+        zk.create(path, data.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        Assert.assertEquals(new String(zk.getData(path, false, new Stat())), data);
+        Assert.assertTrue(!watcher.isSessionExpired());
+
+        // Let's make a broken operation
+        socket.mute();
+        boolean catchKeeperException = false;
+        try {
+            zk.getData(path, false, new Stat());
+        } catch (KeeperException e) {
+            catchKeeperException = true;
+            Assert.assertFalse(e instanceof KeeperException.SessionExpiredException);
+        }
+        socket.unmute();
+        Assert.assertTrue(catchKeeperException);
+        Assert.assertTrue(!watcher.isSessionExpired());
+
+        getDataBackgroundRetryForever(zk, path);
+        // Let's make a broken network
+        socket.mute();
+
+        // Let's attempt to close ZooKeeper
+        cnxn.attemptClose();
+
+        // Wait some time to expect continuous reconnecting.
+        // We try to make reconnecting hit the unsafe point.
+        TimeUnit.MILLISECONDS.sleep(3000);
 
 Review comment:
   Is it possible to instead of using sleep, we do explicit synchronization and only execute when certain criteria is satisfied? We generally discourage the usage of sleep in zookeeper unit test as the use of sleep proved to be a source of flaky-ness in the past when running on different environment.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 05:29;githubbot;600","hanm commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-588043620
 
 
   I just have two nits - one on the sync approach and the other on unit test. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 05:30;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r381248377
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -971,10 +980,20 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
          *
          * @return
          */
-        ZooKeeper.States getZkState() {
+        synchronized ZooKeeper.States getZkState() {
             return state;
 
 Review comment:
   Thank you for your comments.
   You convince me. Accept it. Add `synchronized` back to getZkState()
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 12:01;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r381250718
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,321 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
+                try {
+                    zk.getData(path, false, new Stat());
+                } catch (Exception e) {
+                }
+            }
+        }).start();
+    }
+
+    @Test
+    public void testClientCnxnSocketFragility() throws Exception {
+        System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, FragileClientCnxnSocketNIO.class.getName());
+        System.setProperty(ZKClientConfig.ZOOKEEPER_REQUEST_TIMEOUT, ""1000"");
+        final int[] clientPorts = new int[SERVER_COUNT];
+        StringBuilder sb = new StringBuilder();
+        String server;
+
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            clientPorts[i] = PortAssignment.unique();
+            server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique() + "":"" + PortAssignment.unique()
+                     + "":participant;127.0.0.1:"" + clientPorts[i];
+            sb.append(server + ""\n"");
+        }
+        String currentQuorumCfgSection = sb.toString();
+        MainThread[] mt = new MainThread[SERVER_COUNT];
+
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false);
+            mt[i].start();
+        }
+
+        // Ensure server started
+        for (int i = 0; i < SERVER_COUNT; i++) {
+            Assert.assertTrue(
+                ""waiting for server "" + i + "" being up"",
+                ClientBase.waitForServerUp(""127.0.0.1:"" + clientPorts[i], CONNECTION_TIMEOUT));
+        }
+        String path = ""/testClientCnxnSocketFragility"";
+        String data = ""balabala"";
+        ClientWatcher watcher = new ClientWatcher();
+        zk = new CustomZooKeeper(getCxnString(clientPorts), SESSION_TIMEOUT, watcher);
+        watcher.watchFor(zk);
+
+        // Let's see some successful operations
+        zk.create(path, data.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        Assert.assertEquals(new String(zk.getData(path, false, new Stat())), data);
+        Assert.assertTrue(!watcher.isSessionExpired());
+
+        // Let's make a broken operation
+        socket.mute();
+        boolean catchKeeperException = false;
+        try {
+            zk.getData(path, false, new Stat());
+        } catch (KeeperException e) {
+            catchKeeperException = true;
+            Assert.assertFalse(e instanceof KeeperException.SessionExpiredException);
+        }
+        socket.unmute();
+        Assert.assertTrue(catchKeeperException);
+        Assert.assertTrue(!watcher.isSessionExpired());
+
+        getDataBackgroundRetryForever(zk, path);
+        // Let's make a broken network
+        socket.mute();
+
+        // Let's attempt to close ZooKeeper
+        cnxn.attemptClose();
+
+        // Wait some time to expect continuous reconnecting.
+        // We try to make reconnecting hit the unsafe point.
+        TimeUnit.MILLISECONDS.sleep(3000);
 
 Review comment:
   Thanks for your comments.
   Agree with you. I add CustomClientCnxn.waitUntilHitUnsafeRegion(). It ensures the unsafe region is hit. Please see the latest patch. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 12:07;githubbot;600","yfxhust commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-588192138
 
 
   > I just have two nits - one on the sync approach and the other on unit test.
   
   Thank you for your comments. Adapt my code with your suggestion. Please see the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Feb/20 12:09;githubbot;600","yfxhust commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-590761085
 
 
   @hanm Any further comments ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 09:10;githubbot;600","eolivelli commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r385525037
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,333 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
+                try {
+                    zk.getData(path, false, new Stat());
+                } catch (Exception e) {
 
 Review comment:
   Please log something, without the stacktrace
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 06:23;githubbot;600","eolivelli commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r385524922
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,333 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
 
 Review comment:
   Please use a daemon thread.
   I wonder of we can create a safer way to stop this thread.
   I wouldn't like to leak this thread during the execution of the test suite.
   It could easily use a CPU at 100%
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 06:23;githubbot;600","eolivelli commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r385524199
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -957,7 +962,11 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
 
         SendThread(ClientCnxnSocket clientCnxnSocket) {
             super(makeThreadName(""-SendThread()""));
-            state = States.CONNECTING;
+            try {
+                changeZkState(States.CONNECTING);
+            } catch (IOException e) {
+                throw new RuntimeException(""Connection setup failed when migrate state to CONNECTING"");
 
 Review comment:
   Throwing a RuntimeException may lead to unexpected behaviour. 
   So we have a way to throw a checked exception and deal explicitly with this case?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 06:23;githubbot;600","eolivelli commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r385524422
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1428,7 +1447,10 @@ void onConnected(
         }
 
         void close() {
-            state = States.CLOSED;
+            try {
+                changeZkState(States.CLOSED);
+            } catch (IOException e) {
 
 Review comment:
   Please add a comment
   We could anyway spend a line of log, thus case won't happen but if it is happening we won't know
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Feb/20 06:23;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r386179391
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -957,7 +962,11 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {
 
         SendThread(ClientCnxnSocket clientCnxnSocket) {
             super(makeThreadName(""-SendThread()""));
-            state = States.CONNECTING;
+            try {
+                changeZkState(States.CONNECTING);
+            } catch (IOException e) {
+                throw new RuntimeException(""Connection setup failed when migrate state to CONNECTING"");
 
 Review comment:
   Thanks you for your comments. I accept your suggestion. I throw checked IOException for SendThread constructor. Please review latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 03:05;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r386180905
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1428,7 +1447,10 @@ void onConnected(
         }
 
         void close() {
-            state = States.CLOSED;
+            try {
+                changeZkState(States.CLOSED);
+            } catch (IOException e) {
 
 Review comment:
   Thanks for your suggestion. Accept your suggestion. I add one log here. Please review the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 03:15;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r386194266
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,333 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
 
 Review comment:
   Thanks for your comments. Accept your suggestion. Now I delete this task to a new class - GetDataRetryForeverBackgroundTask. I mark GetDataRetryForeverBackgroundTask as deamon thread and handle graceful shutdown in syncCloseTask(). I think these adoption can avoid the CPU exhaust. Please review the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 04:37;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r386194563
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,333 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
+                try {
+                    zk.getData(path, false, new Stat());
+                } catch (Exception e) {
 
 Review comment:
   Accept it. Add one info log: zookeeper getData failed on path {}. Please review the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 04:39;githubbot;600","yfxhust commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#discussion_r386194266
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/ClientCnxnSocketFragilityTest.java
 ##########
 @@ -0,0 +1,333 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.util.Queue;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+import org.apache.zookeeper.ClientCnxn.Packet;
+import org.apache.zookeeper.Watcher.Event.KeeperState;
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.client.HostProvider;
+import org.apache.zookeeper.client.ZKClientConfig;
+import org.apache.zookeeper.data.Stat;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class ClientCnxnSocketFragilityTest extends QuorumPeerTestBase {
+
+    private static final int SERVER_COUNT = 3;
+
+    private static final int SESSION_TIMEOUT = 40000;
+
+    public static final int CONNECTION_TIMEOUT = 30000;
+
+    private final UnsafeCoordinator unsafeCoordinator = new UnsafeCoordinator();
+
+    private volatile CustomZooKeeper zk = null;
+
+    private volatile FragileClientCnxnSocketNIO socket = null;
+
+    private volatile CustomClientCnxn cnxn = null;
+
+    private String getCxnString(int[] clientPorts) {
+        StringBuffer hostPortBuffer = new StringBuffer();
+        for (int i = 0; i < clientPorts.length; i++) {
+            hostPortBuffer.append(""127.0.0.1:"");
+            hostPortBuffer.append(clientPorts[i]);
+            if (i != (clientPorts.length - 1)) {
+                hostPortBuffer.append(',');
+            }
+        }
+        return hostPortBuffer.toString();
+    }
+
+    private void closeZookeeper(ZooKeeper zk) {
+        Executors.newSingleThreadExecutor().submit(() -> {
+            try {
+                LOG.info(""closeZookeeper is fired"");
+                zk.close();
+            } catch (InterruptedException e) {
+            }
+        });
+    }
+
+    private void getDataBackgroundRetryForever(CustomZooKeeper zk, String path) {
+        new Thread(() -> {
+            for (;;) {
 
 Review comment:
   Thanks for your comments. Accept your suggestion. Now I delegate this task to a new class - GetDataRetryForeverBackgroundTask. I mark GetDataRetryForeverBackgroundTask as deamon thread and handle graceful shutdown in syncCloseTask(). I think these adoption can avoid the CPU exhaust. Please review the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 04:53;githubbot;600","yfxhust commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-593218845
 
 
   @eolivelli Thank you for your comments. I adapt the patch with your suggestions. Please review the latest patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 04:55;githubbot;600","asfgit commented on pull request #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/20 02:13;githubbot;600","hanm commented on issue #1235: ZOOKEEPER-3706: ZooKeeper.close() would leak SendThread when the netw…
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-593730437
 
 
   merged to master - thanks for driving this @yfxhust 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/20 02:15;githubbot;600","yfxhust edited a comment on pull request #1235:
URL: https://github.com/apache/zookeeper/pull/1235#issuecomment-581224808


   > @yfxhust
   > Great issue description in JIRA. this issue is a little hidden. Do you observe it in the production?
   
   We observed occasional SendThread leak case in our production. But the root cause is not 100 percent sure. But from source code and some network clues, we believe that this issue is a potential cause.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/21 11:11;githubbot;600",,,,,,,,,,,,,,,0,36600,,,0,36600,,,,,,,,,,,,,,,,,ZOOKEEPER-4223,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,https://github.com/apache/zookeeper/pull/1235,,,,,,,,,,9223372036854775807,,,,,Tue May 17 08:58:31 UTC 2022,,,,,,,,,,"0|z0auw0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jan/20 08:40;yfx416;https://github.com/apache/zookeeper/pull/1235  Please see the pr;;;","03/Mar/20 02:13;hanm;Issue resolved by pull request 1235
[https://github.com/apache/zookeeper/pull/1235];;;","08/Jun/20 23:30;aishwaryasoni1991;[~yfx416] [~hanm] I think I am facing a similar issue (maybe because of the fix or the cause of 3706) in my environment. I have created a ticket https://issues.apache.org/jira/browse/ZOOKEEPER-3828 which has the logs and behavior similar to it. The SendThread of ZooKeeper client stays in the connecting (or rather reconnecting) state until I restart the leader node again. 
I feel we need to re-look this.

[~symat] Can this be a reason for my issue (3828)?;;;","26/Feb/21 06:56;Mukti;This issue is not merged in 3.6.1. It seems this is merged only in master. ;;;","09/Mar/21 17:53;arshad.mohammad;This JIRA change is present in master, branch-3.7 and branch-3.7.0. So changed the fixed version from 3.6.1 to 3.8.0,3.7.0;;;","17/May/22 08:58;symat;this was actually cherry-picked to multiple branches already. Usually we haven't created separate Jira tasks / PRs for the cherry-picks (except ZOOKEEPER-4223 for branch-3.6). I updated the fixed versions to: 3.5.10, 3.6.3, 3.7.0, 3.8.0 ;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Split brain on log disk full,ZOOKEEPER-3701,13280516,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,andor,ikelly,ikelly,20/Jan/20 10:02,28/Mar/21 08:55,13/Jul/23 09:08,06/Jan/21 11:33,3.4.13,3.5.6,,,,,,,,3.5.7,3.6.0,3.7.0,,,,,,,0,pull-request-available,," We ran into a situation where the cluster ended up with split brain when the log disk filled up on a node.

The ZK cluster(3 node) in question was being used as the metadata store for Pulsar. There was an outage in the Pulsar cluster, where two the ZK nodes filled up there log disks, causing the cluster to lose quorum. Once we rectified the full disk situation and restarted the nodes everything seemed to work, but we started getting a lot of log messages about UpdateMetadataLoop retrying. UpdateMetadataLoop is used to update bookkeeper ledger metadata. If it sees a write conflict it rereads the znode, checks whether the update needs to happen, applies it and writes. These retries were flooding the log on a subset of the brokers. It turned out that it was reading a znode with version 0, but when it tried the setData with version set to 0 it was failing because the znode had a version of 2 (there were many instances of this). After investigating this, we saw that the znode had a different stat and value on ZK-1 to that on ZK-0 & ZK-2.

We resolved the situation by deleting the log and snapshots from ZK-1 and restarting, at which point everything went back to normal. Had ZK-1 managed to become leader we would have been in a lot of trouble, but thankfully this didn't happen.

For the sequence of events that led to split brain, I'll refer to the following code.
{code}
public class FileTxnSnapLog {
    ...
    public boolean truncateLog(long zxid) throws IOException {
        // close the existing txnLog and snapLog
        close();

        // truncate it
        FileTxnLog truncLog = new FileTxnLog(dataDir);
        boolean truncated = truncLog.truncate(zxid);
        truncLog.close();

        // re-open the txnLog and snapLog
        // I'd rather just close/reopen this object itself, however that 
        // would have a big impact outside ZKDatabase as there are other
        // objects holding a reference to this object.
        txnLog = new FileTxnLog(dataDir);
        snapLog = new FileSnap(snapDir);

        return truncated;
    }

    public void close() throws IOException {
        txnLog.close();
        snapLog.close();
    }
}

public class FileSnap implements SnapShot {
    ...
    public synchronized void serialize(DataTree dt, Map<Long, Integer> sessions, File snapShot)
            throws IOException {
        if (!close) {
            // actual snapshot code
        }
    }

    @Override
    public synchronized void close() throws IOException {
        close = true;
    }
}
{code}

The sequence of events that lead to the failure are:

| 2020-01-04 01:56:56Z | ZK-2 fails to write to its transaction log due to disk full. ZK-2 is still participating in leader election. ZK-2 becomes a follower of ZK-1. ZK-1 sends TRUNC to ZK-2. truncLog.truncate on ZK-2 throws an exception because of the disk being full, and leaves the process in a broken state. |
|2020-01-04 02:35:23Z | ZK-2 removes 9 transaction logs from disk (bringing it from 100% to 19%). It doesn't recover because its in a broken state. |
|2020-01-09 08:57:33Z| ZK-1 fails to write to its transaction log due to disk full. Restarts as follower. Goes into loop of dropping from quorum (because it can't update transaction log)|
|2020-01-09 08:59:33Z |ZK-1 receives snapshot from leader (ZK-0) (at 1e00000000). ZK-1 persists snapshot, but fails to add subsequent transations to log due to lack of space. ZK-1 drops from quorum.|
|2020-01-09 09:00:12Z |ZK-1 joins quorum as follower. 1e00000000 is close enough to leader to receive TRUNC(1d0000001d). TRUNC fails because txnLog can't flush on close() in trunateLog. ZK-1 goes into loop, dropping and joining quorum.|
|2020-01-09 09:39:00Z |ZK-1 runs purgeTxnLog. Process doesn't recover due to truncation exception having broken FileTxnSnapLog.|
|2020-01-09 19:28:37Z |ZK-1 is restarted. ZK-1 joins quorum as follower. ZK-1 receives TRUNC(1d0000001d). In this case, txnLog.close() can succeed because there's nothing to flush. snapLog is closed. truncLog.truncate fails with ""java.io.IOException: No log files found to truncate! This could happen if you still have snapshots from an old setup or log files were deleted accidentally or dataLogDir was changed in zoo.cfg."". It's true that there are no log files to truncate because the snapshot is at 1e00000000 which was received from the leader at 08:59 and nothing has been logged since. In any case, FileTxnSnapLog is in another inconsistent state. snapLog is closed. txnLog is closed, but nothing was ever written to it, so it looks like brand new.|
|2020-01-09 19:29:04Z| ZK-2 is restarted. ZK-2 & ZK-0 are now in a good state, so they can make progress. Transactions start to be logged.|
|2020-01-09 19:33:16Z| ZK-1 joins the quorum. As progress has been made, it receives a SNAP from the leader at 6b30001183a. It writes a snapshot, which ultimately calls FileSnap#serialize. Nothing hits the snapshot disk, because FileSnap is in closed state since 19:28. ZK-1 starts logging transactions to its log disk.|
|2020-01-09 19:42:00Z |We do a rolling restart of the cluster.|
|2020-01-09 19:45:11Z |ZK-1 loads the last snapshot that has been persisted to disk (1e00000000), and applies all log entries with zxid greater than the snapshot (6b30001183a onwards). |
|2020-01-09 19:47:35Z |ZK-2 & ZK-1 form a quorum, ZK-2 leading. ZK-1 reports its lastZxid as 6b30001b32f and gets a DIFF from ZK-2.|

From this point on, the cluster has split brain. ZK-1 is missing all transaction between 1e00000000 and 6bf0001183a. 

There's a couple of failures in the code that could stop this problem. 
- An exception in truncateLog should nuke the process. Even without the split brain occurring, the processes limped on in a broken state for days and required human intervention to get going again.
- snapLog and txnLog should be defensively nulled after they're closed. 
- FileSnap#serialize should not fail silently if close=true. This is really bad. It should at least throw an exception.


The issue occurred with 3.4.13 running on a kubernetes cluster. The bad code paths still exist on master.",,andor,hanm,ikelly,mmerli,rabikumar.kc,ztzg,,,,,,,,,,,,,,"anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233
 
 
   Issue described here:
   https://issues.apache.org/jira/browse/ZOOKEEPER-3701
   
   Proposing a fix with catching `IOException` within the truncate method to properly return with `false` if truncate fails.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/20 22:02;githubbot;600","ivankelly commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r369968658
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java
 ##########
 @@ -300,4 +307,52 @@ public void syncTest() throws Exception {
         }
     }
 
+    @Test
+    public void truncFailTest() throws Exception {
+        final boolean[] exitProcCalled = {false};
+
+        ServiceUtils.setSystemExitProcedure(new Consumer<Integer>() {
+            @Override
+            public void accept(Integer exitCode) {
+                exitProcCalled[0] = true;
+                assertThat(exitCode, equalTo(ExitCode.QUORUM_PACKET_ERROR.getValue()));
 
 Review comment:
   This assertion will not happen in the main junit thread, so if it asserts false, the behaviour will be unpredictable (the test will probably ignore it). 
   
   Instead of this, I'd replace exitProcCalled with a ```CompletableFuture<Integer>``` and at the end of the  test method do
   ```
   assertThat(exitCode.get(10, TimeUnit.SECONDS), equalTo(ExitCode.QUORUM_PACKET_ERROR.getValue()));
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 07:56;githubbot;600","ivankelly commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r369971700
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -499,23 +499,28 @@ public void save(
      * @return true if able to truncate the log, false if not
      * @throws IOException
      */
-    public boolean truncateLog(long zxid) throws IOException {
-        // close the existing txnLog and snapLog
-        close();
-
-        // truncate it
-        FileTxnLog truncLog = new FileTxnLog(dataDir);
-        boolean truncated = truncLog.truncate(zxid);
-        truncLog.close();
-
-        // re-open the txnLog and snapLog
-        // I'd rather just close/reopen this object itself, however that
-        // would have a big impact outside ZKDatabase as there are other
-        // objects holding a reference to this object.
-        txnLog = new FileTxnLog(dataDir);
-        snapLog = new FileSnap(snapDir);
-
-        return truncated;
+    public boolean truncateLog(long zxid) {
+        try {
+            // close the existing txnLog and snapLog
+            close();
+
+            // truncate it
+            FileTxnLog truncLog = new FileTxnLog(dataDir);
+            boolean truncated = truncLog.truncate(zxid);
+            truncLog.close();
+
+            // re-open the txnLog and snapLog
+            // I'd rather just close/reopen this object itself, however that
+            // would have a big impact outside ZKDatabase as there are other
+            // objects holding a reference to this object.
+            txnLog = new FileTxnLog(dataDir);
+            snapLog = new FileSnap(snapDir);
+
+            return truncated;
+        } catch (IOException e) {
 
 Review comment:
   I'm wondering if IOException is sufficient. If you look at 
   https://github.com/apache/zookeeper/blob/c234848caef0cc920f19befd1b0b14251b17da92/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Follower.java#L128
   It's catching an Exception, so basically any exception other than IOException occurring here, could kick us back into the same situation. In fact, even the caller of Follower.followLeader() catches Exception. They're all over QuorumPeer, with ""Unexpected exception"" log warnings.
   
   I think as part of the same fix, these ""Unexpected exception"" errors should also take down the process. wdyt?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 07:56;githubbot;600","anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370037499
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java
 ##########
 @@ -300,4 +307,52 @@ public void syncTest() throws Exception {
         }
     }
 
+    @Test
+    public void truncFailTest() throws Exception {
+        final boolean[] exitProcCalled = {false};
+
+        ServiceUtils.setSystemExitProcedure(new Consumer<Integer>() {
+            @Override
+            public void accept(Integer exitCode) {
+                exitProcCalled[0] = true;
+                assertThat(exitCode, equalTo(ExitCode.QUORUM_PACKET_ERROR.getValue()));
 
 Review comment:
   I double checked it. Consumer's accept() method is called synchronously, no threading involved. In other words it will be called on junit's main thread.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:25;githubbot;600","anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370037970
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -499,23 +499,28 @@ public void save(
      * @return true if able to truncate the log, false if not
      * @throws IOException
      */
-    public boolean truncateLog(long zxid) throws IOException {
-        // close the existing txnLog and snapLog
-        close();
-
-        // truncate it
-        FileTxnLog truncLog = new FileTxnLog(dataDir);
-        boolean truncated = truncLog.truncate(zxid);
-        truncLog.close();
-
-        // re-open the txnLog and snapLog
-        // I'd rather just close/reopen this object itself, however that
-        // would have a big impact outside ZKDatabase as there are other
-        // objects holding a reference to this object.
-        txnLog = new FileTxnLog(dataDir);
-        snapLog = new FileSnap(snapDir);
-
-        return truncated;
+    public boolean truncateLog(long zxid) {
+        try {
+            // close the existing txnLog and snapLog
+            close();
+
+            // truncate it
+            FileTxnLog truncLog = new FileTxnLog(dataDir);
+            boolean truncated = truncLog.truncate(zxid);
+            truncLog.close();
+
+            // re-open the txnLog and snapLog
+            // I'd rather just close/reopen this object itself, however that
+            // would have a big impact outside ZKDatabase as there are other
+            // objects holding a reference to this object.
+            txnLog = new FileTxnLog(dataDir);
+            snapLog = new FileSnap(snapDir);
+
+            return truncated;
+        } catch (IOException e) {
 
 Review comment:
   I'll check it, but currently I don't see any reason why not change it to `Exception`.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:26;githubbot;600","anmolnar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-577621142
 
 
   @ivankelly I'm concerned about the huge number of tests that we broke with this patch. I'll check and try to fix them in the most harmless way, but I'm afraid we will change the original behavior significantly.
   
   If that's the case we still need to fix this issue, but not sure it can fit in a maintenance release of 3.5.x. We have to keep that branch stable.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:29;githubbot;600","ivankelly commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370042831
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -499,23 +499,28 @@ public void save(
      * @return true if able to truncate the log, false if not
      * @throws IOException
      */
-    public boolean truncateLog(long zxid) throws IOException {
-        // close the existing txnLog and snapLog
-        close();
-
-        // truncate it
-        FileTxnLog truncLog = new FileTxnLog(dataDir);
-        boolean truncated = truncLog.truncate(zxid);
-        truncLog.close();
-
-        // re-open the txnLog and snapLog
-        // I'd rather just close/reopen this object itself, however that
-        // would have a big impact outside ZKDatabase as there are other
-        // objects holding a reference to this object.
-        txnLog = new FileTxnLog(dataDir);
-        snapLog = new FileSnap(snapDir);
-
-        return truncated;
+    public boolean truncateLog(long zxid) {
+        try {
+            // close the existing txnLog and snapLog
+            close();
+
+            // truncate it
+            FileTxnLog truncLog = new FileTxnLog(dataDir);
+            boolean truncated = truncLog.truncate(zxid);
+            truncLog.close();
+
+            // re-open the txnLog and snapLog
+            // I'd rather just close/reopen this object itself, however that
+            // would have a big impact outside ZKDatabase as there are other
+            // objects holding a reference to this object.
+            txnLog = new FileTxnLog(dataDir);
+            snapLog = new FileSnap(snapDir);
+
+            return truncated;
+        } catch (IOException e) {
 
 Review comment:
   I think it would be better to change the behaviour in QuorumPeer to requestSystemExit any time it gets an unexpected exception. QuorumPeer runs in a loop starting Learners and Leaders etc. There are objects shared between iterations of these loops, and as far I can see little checking that the objects are in a sane state if an exception occurred. Of course, I this is a bigger change, so perhaps it can be done later.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:40;githubbot;600","ivankelly commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370041702
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LearnerTest.java
 ##########
 @@ -300,4 +307,52 @@ public void syncTest() throws Exception {
         }
     }
 
+    @Test
+    public void truncFailTest() throws Exception {
+        final boolean[] exitProcCalled = {false};
+
+        ServiceUtils.setSystemExitProcedure(new Consumer<Integer>() {
+            @Override
+            public void accept(Integer exitCode) {
+                exitProcCalled[0] = true;
+                assertThat(exitCode, equalTo(ExitCode.QUORUM_PACKET_ERROR.getValue()));
 
 Review comment:
   Ok. I see that now.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:40;githubbot;600","eolivelli commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370081578
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -499,23 +499,28 @@ public void save(
      * @return true if able to truncate the log, false if not
      * @throws IOException
      */
-    public boolean truncateLog(long zxid) throws IOException {
-        // close the existing txnLog and snapLog
-        close();
-
-        // truncate it
-        FileTxnLog truncLog = new FileTxnLog(dataDir);
-        boolean truncated = truncLog.truncate(zxid);
-        truncLog.close();
-
-        // re-open the txnLog and snapLog
-        // I'd rather just close/reopen this object itself, however that
-        // would have a big impact outside ZKDatabase as there are other
-        // objects holding a reference to this object.
-        txnLog = new FileTxnLog(dataDir);
-        snapLog = new FileSnap(snapDir);
-
-        return truncated;
+    public boolean truncateLog(long zxid) {
+        try {
+            // close the existing txnLog and snapLog
+            close();
+
+            // truncate it
+            FileTxnLog truncLog = new FileTxnLog(dataDir);
+            boolean truncated = truncLog.truncate(zxid);
+            truncLog.close();
 
 Review comment:
   what about calling this **close** in a finally block ?
   
   ```
   try { 
       FileTxnLog truncLog = new FileTxnLog(dataDir);
               boolean truncated = truncLog.truncate(zxid);
     } finally {
               truncLog.close();
   }
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:15;githubbot;600","eolivelli commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370082976
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -595,7 +600,9 @@ public void rollLog() throws IOException {
      */
     public void close() throws IOException {
         txnLog.close();
+        txnLog = null;
 
 Review comment:
   if you set this variable to null then calling twice this method will result in an ugly NullPointerException
   what about
   ```
   try {
   if (txnLog != null) {
         txnLog.close();
   }
   } finally {
   txnLog = null;
   }
   
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:15;githubbot;600","eolivelli commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370082101
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java
 ##########
 @@ -260,6 +260,8 @@ public synchronized void serialize(
                     Util.getZxidFromName(snapShot.getName(), SNAPSHOT_FILE_PREFIX),
                     snapShot.lastModified() / 1000);
             }
+        } else {
+            throw new IllegalStateException(""FileSnap has already been closed"");
 
 Review comment:
   will existing code handle this RuntimeException properly ?
   what about throwing a IOException ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:15;githubbot;600","eolivelli commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370083030
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -595,7 +600,9 @@ public void rollLog() throws IOException {
      */
     public void close() throws IOException {
         txnLog.close();
+        txnLog = null;
         snapLog.close();
+        snapLog = null;
 
 Review comment:
   the same here
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:15;githubbot;600","ivankelly commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370120580
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java
 ##########
 @@ -260,6 +260,8 @@ public synchronized void serialize(
                     Util.getZxidFromName(snapShot.getName(), SNAPSHOT_FILE_PREFIX),
                     snapShot.lastModified() / 1000);
             }
+        } else {
+            throw new IllegalStateException(""FileSnap has already been closed"");
 
 Review comment:
   I dunno if I suggested IllegalStateException originally, but it's what I had in mind when I suggested this should throw an exception. 
   
   If you call close() on FileSnap, and it's already closed, that's a programmer's mistake. There *should not* be any handling for this, because the object is in a state which it should never be. The best thing in this case is for the process to crash (this isn't necessarily the case though, due to the catchall Exception handlers in QuorumPeer).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 13:38;githubbot;600","anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370154563
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -595,7 +600,9 @@ public void rollLog() throws IOException {
      */
     public void close() throws IOException {
         txnLog.close();
+        txnLog = null;
         snapLog.close();
+        snapLog = null;
 
 Review comment:
   Done.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 14:38;githubbot;600","anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370154653
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -595,7 +600,9 @@ public void rollLog() throws IOException {
      */
     public void close() throws IOException {
         txnLog.close();
+        txnLog = null;
 
 Review comment:
   Done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 14:38;githubbot;600","anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370156303
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -499,23 +499,28 @@ public void save(
      * @return true if able to truncate the log, false if not
      * @throws IOException
      */
-    public boolean truncateLog(long zxid) throws IOException {
-        // close the existing txnLog and snapLog
-        close();
-
-        // truncate it
-        FileTxnLog truncLog = new FileTxnLog(dataDir);
-        boolean truncated = truncLog.truncate(zxid);
-        truncLog.close();
-
-        // re-open the txnLog and snapLog
-        // I'd rather just close/reopen this object itself, however that
-        // would have a big impact outside ZKDatabase as there are other
-        // objects holding a reference to this object.
-        txnLog = new FileTxnLog(dataDir);
-        snapLog = new FileSnap(snapDir);
-
-        return truncated;
+    public boolean truncateLog(long zxid) {
+        try {
+            // close the existing txnLog and snapLog
+            close();
+
+            // truncate it
+            FileTxnLog truncLog = new FileTxnLog(dataDir);
+            boolean truncated = truncLog.truncate(zxid);
+            truncLog.close();
 
 Review comment:
   this is done slightly differently. please check.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 14:41;githubbot;600","anmolnar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-577710976
 
 
   A lot better now: only 2 tests failed in the latest build. I'll take a look soon.
   @hanm @lvfangmin @enixon I suspect we need your brains here. PTAL when you get a chance.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 14:42;githubbot;600","anmolnar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370159576
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java
 ##########
 @@ -260,6 +260,8 @@ public synchronized void serialize(
                     Util.getZxidFromName(snapShot.getName(), SNAPSHOT_FILE_PREFIX),
                     snapShot.lastModified() / 1000);
             }
+        } else {
+            throw new IllegalStateException(""FileSnap has already been closed"");
 
 Review comment:
   @ivankelly @eolivelli This is the serialize() method of FileSnap. Call chain is:
   FileSnap.serialize() <- FileTxnSnapLog.save() <- ZooKeeperServer.takeSnapshot()
   
   `takeSnapshot()` catches IOException and call system exit with error code of `TXNLOG_ERROR_TAKING_SNAPSHOT`. Sounds like this should be the expected behavior.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 14:46;githubbot;600","ivankelly commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r370162944
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileSnap.java
 ##########
 @@ -260,6 +260,8 @@ public synchronized void serialize(
                     Util.getZxidFromName(snapShot.getName(), SNAPSHOT_FILE_PREFIX),
                     snapShot.lastModified() / 1000);
             }
+        } else {
+            throw new IllegalStateException(""FileSnap has already been closed"");
 
 Review comment:
   Ok, IOException works in that case. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 14:51;githubbot;600","eolivelli commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578086478
 
 
   @anmolnar you called for a double check from @hanm @lvfangmin @enixon 
   
   I feel we can pack 3.6.0 and 3.5.7 releases meanwhile, if they have strong concerns we can roll out a new RC.
   
   Or do you think we should wait for them ?
   
   cc @nkalmar 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/20 11:06;githubbot;600","anmolnar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578150109
 
 
   @eolivelli I think you're right, let's go forward with this and start the releases.
   I don't want to commit my own patch, would you mind?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jan/20 14:22;githubbot;600","nkalmar commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#discussion_r371156681
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -499,23 +499,28 @@ public void save(
      * @return true if able to truncate the log, false if not
      * @throws IOException
      */
-    public boolean truncateLog(long zxid) throws IOException {
-        // close the existing txnLog and snapLog
-        close();
-
-        // truncate it
-        FileTxnLog truncLog = new FileTxnLog(dataDir);
-        boolean truncated = truncLog.truncate(zxid);
-        truncLog.close();
-
-        // re-open the txnLog and snapLog
-        // I'd rather just close/reopen this object itself, however that
-        // would have a big impact outside ZKDatabase as there are other
-        // objects holding a reference to this object.
-        txnLog = new FileTxnLog(dataDir);
-        snapLog = new FileSnap(snapDir);
-
-        return truncated;
+    public boolean truncateLog(long zxid) {
+        try {
+            // close the existing txnLog and snapLog
+            close();
+
+            // truncate it
+            FileTxnLog truncLog = new FileTxnLog(dataDir);
+            boolean truncated = truncLog.truncate(zxid);
+            truncLog.close();
+
+            // re-open the txnLog and snapLog
+            // I'd rather just close/reopen this object itself, however that
+            // would have a big impact outside ZKDatabase as there are other
+            // objects holding a reference to this object.
+            txnLog = new FileTxnLog(dataDir);
+            snapLog = new FileSnap(snapDir);
+
+            return truncated;
+        } catch (IOException e) {
 
 Review comment:
   I also think this should be another ticket/improvement to fix
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 10:17;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578684537
 
 
   This is the last blocker for 3.5.7, I'll commit this today. (Both to master, 3.6 and 3.5)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 10:28;githubbot;600","ivankelly commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578685529
 
 
   Is 3.4 still being maintained? The customer that experienced the issue is on 3.4.13. If there's no plans for another 3.4 release, I'll manually backport internally.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 10:30;githubbot;600","eolivelli commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578697590
 
 
   @ivankelly there is currently no interest in working on 3.4 and we are trying to push users to 3.5
   
   As soon as 3.6 will be out (we are at 2nd rc) 3.4 will be sent to EOL (I hope)
   
   If you have time for one last 3.4 release you can do it I think there is no showstopper
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 11:04;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578704379
 
 
   I don't think there is anything planned for 3.4 branch.
   I can try to push this patch to 3.4 as well, but I'm afraid it will not cherry-pick easily. Especially the tests. So probably better to do a seperate PR, but I haven't tried it yet.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 11:23;githubbot;600","ivankelly commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578719003
 
 
   I think it'll be easier to do it internally. The fix itself is pretty simple. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 12:09;githubbot;600","anmolnar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-578746032
 
 
   @nkalmar Please don't push this patch to 3.4 yet. This is not a security fix and I'm not sure if we want to change the behavior around this logic. People should upgrade to 3.5 instead.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Jan/20 13:28;githubbot;600","anmolnar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-579165712
 
 
   @nkalmar Thanks. I restored the binary file with original content.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/20 09:55;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-579240262
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/20 13:16;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-579240262
 
 
   retest this please
   - Was not needed, oh well, we'll get another mvn check :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/20 13:18;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-579248322
 
 
   @ztzg you have a -1, but your remark (thanks again!) has been fixed, so I'll commit this today to move forward with the 3.5.7 release. If you get the chance please +1, I take it you had no other issues. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/20 13:35;githubbot;600","asfgit commented on pull request #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/20 16:26;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-579338714
 
 
   Thanks @anmolnar . Merged to master and 3.6, did not pick to branch-3.5. The conflict was not trivial on the tests, so I aborted the cherry-pick. Needs a seperate PR. I'll take a look tomorrow, or you can also create one for 3.5 Andor.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jan/20 16:34;githubbot;600","anmolnar commented on pull request #1237: ZOOKEEPER-3701: Split brain on log disk full (3.5)
URL: https://github.com/apache/zookeeper/pull/1237
 
 
   Backport of #1233 
   
   Unfortunately the unit test cannot be backported, because 3.5 doesn't have the abstract `requestSystemExit` feature.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/20 10:58;githubbot;600","nkalmar commented on issue #1233: ZOOKEEPER-3701 Split brain on log disk full
URL: https://github.com/apache/zookeeper/pull/1233#issuecomment-579712105
 
 
   No worries, thanks @ztzg , 3.5 backport available here thanks to Andor:
   https://github.com/apache/zookeeper/pull/1237
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/20 11:24;githubbot;600","nkalmar commented on issue #1237: ZOOKEEPER-3701: Split brain on log disk full (3.5)
URL: https://github.com/apache/zookeeper/pull/1237#issuecomment-579766576
 
 
   Soo... the build failed because releaseaudit just realised https://github.com/apache/zookeeper/blob/branch-3.5/zookeeper-server/src/test/java/org/apache/zookeeper/common/NetUtilsTest.java does not have an Apache header, which was committed in December?!
   Can you please add one @anmolnar ? I think it's easier to just add with this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/20 13:57;githubbot;600","nkalmar commented on issue #1237: ZOOKEEPER-3701: Split brain on log disk full (3.5)
URL: https://github.com/apache/zookeeper/pull/1237#issuecomment-579766576
 
 
   Soo... the build failed because releaseaudit just realised https://github.com/apache/zookeeper/blob/branch-3.5/zookeeper-server/src/test/java/org/apache/zookeeper/common/NetUtilsTest.java does not have an Apache header, which was committed in December?!
   Can you please add one @anmolnar ? I think it's easier to just add with this patch.
   Or just commit as is, and will fix it later? (Tests pass)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/20 13:57;githubbot;600","nkalmar commented on issue #1237: ZOOKEEPER-3701: Split brain on log disk full (3.5)
URL: https://github.com/apache/zookeeper/pull/1237#issuecomment-579766576
 
 
   Soo... the build failed because releaseaudit just realised https://github.com/apache/zookeeper/blob/branch-3.5/zookeeper-server/src/test/java/org/apache/zookeeper/common/NetUtilsTest.java does not have an Apache header, which was committed in December?!
   Can you please add one @anmolnar ? I think it's easier to just add with this patch.
   Or just commit as is, and will fix it later? (Tests pass)
   
   Edit: I guess 3.5 has been failing since December.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/20 13:59;githubbot;600","nkalmar commented on issue #1237: ZOOKEEPER-3701: Split brain on log disk full (3.5)
URL: https://github.com/apache/zookeeper/pull/1237#issuecomment-580455793
 
 
   Merged to 3.5, thanks @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 20:55;githubbot;600","nkalmar commented on pull request #1237: ZOOKEEPER-3701: Split brain on log disk full (3.5)
URL: https://github.com/apache/zookeeper/pull/1237
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 20:55;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,22800,,,0,22800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jan 06 11:33:58 UTC 2021,,,,,,,,,,"0|z0aomg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/Jan/20 23:48;hanm;The event timeline said that 2020-01-09 08:59:33Z, ""ZK-1 persists snapshot"". How could ZK-1 persists snapshot since disk was already full (as described earlier on 2020-01-09 08:57:33Z, ""ZK-1 fails to write to its transaction log due to disk full."")? Was it because the restart triggers the purging task which created some spare spaces but soon filled with new snapshot (and part of new transaction log)?

Or maybe only log disk was full (and snapshot was configured on a separate disk?);;;","22/Jan/20 09:13;ikelly;[~hanm] log and snapshot were on separate devices. So log disk was full, snapshot was never more than 3-4% full.;;;","22/Jan/20 15:09;andor;[~ikelly]

I've found the following in {{Learner.java}}:
{noformat}
boolean truncated = zk.getZKDatabase().truncateLog(qp.getZxid());
if (!truncated) {
    // not able to truncate the log
    LOG.error(""Not able to truncate the log 0x{}"", Long.toHexString(qp.getZxid()));
    ServiceUtils.requestSystemExit(ExitCode.QUORUM_PACKET_ERROR.getValue());
}{noformat}
I think this has been implemented for fixing a similar/same issue, but the problem is that truncateLog() throws IOException when it failes and never actually returns false.

I'm looking for the related. ticket.;;;","22/Jan/20 15:42;andor;ZOOKEEPER-38

It has been implemented for ages ago, but maybe never actually worked.

What do you think about catching IOException in truncateLog() (FileTxnSnapLog or FileTxnLog) and return false in the catch branch. Sounds like the right behaviour.;;;","22/Jan/20 17:11;ikelly;That should do it, but to be defensive I would also make the other changes suggested too though (nulling the references in close & throwing an exception in serialize if close is true).;;;","22/Jan/20 19:25;andor;Of course, I was talking about your first point only.;;;","22/Jan/20 20:46;ikelly;(y);;;","22/Jan/20 22:03;andor;[~ikelly]

PTAL.

https://github.com/apache/zookeeper/pull/1233;;;","29/Jan/20 15:42;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4337//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4337//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4337//console

This message is automatically generated.;;;","14/Feb/20 19:31;mmerli;[~andor] Shouldn't this be marked as fixed for 3.5.7 ?;;;","06/Jan/21 11:33;ztzg;Resolving this as the PR has been merged in 3.5, 3.6 and 3.7.  Holler up if it should stay open!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
upgrade jackson-databind to address CVE-2019-20330,ZOOKEEPER-3699,13280315,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,phunt,phunt,phunt,18/Jan/20 19:20,14/Feb/20 15:23,13/Jul/23 09:08,23/Jan/20 10:20,3.5.6,3.6.0,3.7.0,,,,,,,3.5.7,3.6.0,3.7.0,,,security,,,,0,pull-request-available,,"owasp is flagging 
https://builds.apache.org/view/S-Z/view/ZooKeeper/job/zookeeper-master-maven-owasp/329/console

> [ERROR] jackson-databind-2.9.10.1.jar: CVE-2019-20330

""FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking""

I don't believe we use ""ehcache"" but we should upgrade asap.",,eolivelli,nkalmar,,,,,,,,,,,,,,,,,,"phunt commented on pull request #1232: ZOOKEEPER-3699: upgrade jackson-databind to address CVE-2019-20330
URL: https://github.com/apache/zookeeper/pull/1232
 
 
   Latest version of jackson-databind is 2.9.10.2.
   
   Change-Id: Id2b0f17c2dfa9a9765fd4893643007b49f06816d
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/20 16:54;githubbot;600","phunt commented on issue #1232: ZOOKEEPER-3699: upgrade jackson-databind to address CVE-2019-20330
URL: https://github.com/apache/zookeeper/pull/1232#issuecomment-577281470
 
 
   This should be applied to all applicable branches (3.5/3.6/master)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/20 16:54;githubbot;600","asfgit commented on pull request #1232: ZOOKEEPER-3699: upgrade jackson-databind to address CVE-2019-20330
URL: https://github.com/apache/zookeeper/pull/1232
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:15;githubbot;600","nkalmar commented on issue #1232: ZOOKEEPER-3699: upgrade jackson-databind to address CVE-2019-20330
URL: https://github.com/apache/zookeeper/pull/1232#issuecomment-577616527
 
 
   Thanks @phunt , merged to master, 3.6 and 3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 10:17;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jan 23 10:20:44 UTC 2020,,,,,,,,,,"0|z0ands:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/20 22:39;eolivelli;We should step away from Jackson.
Btw it is the very most used library, so maybe in the mid term we could see it come back again.

In the short term doing it will save us a few cycles for this kind of issues;;;","22/Jan/20 16:56;phunt;[~eolivelli] sounds reasonable, can you create a separate jira for that activity?

In the mean time I've submitted a PR to move to the latest databind version available (2.9.10.2) at the moment.;;;","23/Jan/20 10:20;nkalmar;I closed this jira, the upgrade is on master, 3.6 and 3.5 branches, this should fix the CVE for now.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NoRouteToHostException when starting large ZooKeeper cluster on localhost,ZOOKEEPER-3698,13280106,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,symat,symat,17/Jan/20 10:15,28/Mar/21 08:55,13/Jul/23 09:08,23/Jan/20 12:44,,,,,,,,,,3.6.0,3.7.0,,,,,,,,0,pull-request-available,,"During testing RC for 3.6.0, we found that ZooKeeper cluster with large number of ensemble members (e.g. 23) can not start properly. We see a lot of warnings in the log:
{code:java}
2020-01-15 20:02:13,431 [myid:13] - WARN
 [ListenerHandler-phunt-MBP13.local/192.168.1.91:4193:QuorumCnxManager@691]
- None of the addresses (/192.168.1.91:4190) are reachable for sid 10
java.net.NoRouteToHostException: No valid address among [/192.168.1.91:4190]
{code}
 and also:
{code:java}
2020-01-17 11:02:26,177 [myid:4] - WARN  [Thread-2531:QuorumCnxManager$SendWorker@1269] - destination address /127.0.0.1 not reachable anymore, shutting down the SendWorker for sid 6
{code}
The exceptions are happening when the new MultiAddress feature tries to filter the unreachable hosts from the address list. This involves the calling of the InetAddress.isReachable method with a default timeout of 500ms, which goes down to a native call in java and basically try to do a ping (an ICMP echo request) to the host. Naturally, the localhost should be always reachable. For some reason, this call gets failed (timeouted or simly refused) on mac if we have many ensemble members. I tested with 9 members and the cluster started properly. With 11-13-15 members it took more and more time to get the cluster to start, and the ""NoRouteToHostException"" started to appear in the logs. After around 1 minute the 15 ensemble members cluster started, but obviously this is not good this way. (I also tried with JDK 11 but the I found the same behaviour)

 

On linux, I haven't been able to reproduce the problem. I tried with 5, 9, 15 and 23 ensemble members and the quorum always seems to start properly in a few seconds. (I used OpenJDK 1.8.232 on Ubuntu 18.04)

*Update*:

On mac, we we have the ICMP rate limit set to 250 by default. You can turn this off using the following command: sudo sysctl -w net.inet.icmp.icmplim=0
 (see [https://krypted.com/mac-os-x/disable-icmp-rate-limiting-os-x/])

Using the above command before starting the 23 ensemble members cluster locally seems to solve the problem for me. (can someone verify?) The question is if this workaround is enough or not.

As far as I can tell, the current code will generate {{2*A*(M-1)}} ICMP calls in each ZooKeeper server during startup, if {{'M'}} is the number of ensemble members and {{'A'}} is the number of election addresses provided for each member. This is not that high, if each ZooKeeper server is started on a different machine, but if we start a lot of ZooKeeper servers on a single machine, then it can quickly go beyond the predefined limit of 250 for mac.",,andor,eolivelli,symat,,,,,,,,,,,,,,,,,"symat commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228
 
 
   When we tested RC 3.6.0, we had a problem of starting ZooKeeper cluster with large
   number (11+) of ensemble members locally on mac. We found exceptions in the logs
   when the new MultiAddress feature tries to filter the unreachable hosts from the
   address list. This involves the calling of the InetAddress.isReachable method with
   a default timeout of 500ms, which goes down to a native call in java and basically
   try to do a ping (an ICMP echo request) to the host. Naturally, the localhost should
   be always reachable.
   
   The problem was that on mac we have the ICMP rate limit set to 250 by default.
   
   In this patch we:
   - changed the reachability check behavior by disabling the check if there is only
   a single address provided (so we wouldn't be able to filter the unreachable
   addresses anyway).
   - added and documented a configuration parameter to disable the reachability check
   for testing. (default: enabled)
   - added and documented a configuration parameter to set the timeout for the
   reachability checks. (default: 1000ms)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 12:58;githubbot;600","anmolnar commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#discussion_r368551678
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/MultipleAddresses.java
 ##########
 @@ -150,6 +150,12 @@ public InetSocketAddress getReachableAddress() throws NoRouteToHostException {
      */
     public InetSocketAddress getReachableOrOne() {
         InetSocketAddress address;
+
+        // if there is only a single address provided then we don't do any reachability check
+        if (addresses.size() == 1) {
 
 Review comment:
   This is a very nice improvement.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 13:52;githubbot;600","anmolnar commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#discussion_r368557610
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1542,6 +1555,22 @@ the variable does.
     ZAB protocol and the Fast Leader Election protocol. Default
     value is **false**.
 
+* *multiAddress.reachabilityCheckEnabled* :
+    (Java system property: **zookeeper.multiAddress.reachabilityCheckEnabled**)
+    **New in 3.6.0:**
+    Since ZooKeeper 3.6.0 you can also [specify multiple addresses](#id_multi_address) 
+    for each ZooKeeper server instance (this can increase availability when multiple physical 
+    network interfaces can be used parallel in the cluster). ZooKeeper will perform ICMP ECHO requests
+    or try to establish a TCP connection on port 7 (Echo) of the destination host in order to find 
+    the reachable addresses. This happens only if you provide multiple addresses in the configuration.
+    The reachable check can fail if you hit some ICMP rate-limitation, (e.g. on MacOS) when you try to 
+    start a large (e.g. 11+) ensemble members cluster on a single machine for testing. 
+    
+    Default value is **true**. By setting this parameter to 'false' you can disable the reachability checks. 
+    Please note, disabling the reachability check will cause the cluster not to be able to reconfigure 
+    itself properly during network problems, so the disabling is advised only during testing. 
 
 Review comment:
   Would you please elaborate a little bit on this? Why will the cluster not able to reconfigure if the ping check is disabled?
   On the other hand, does that mean that multi-address feature only works properly if hosts respond to ICMP Echo requests?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 13:52;githubbot;600","symat commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#discussion_r368575308
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1542,6 +1555,22 @@ the variable does.
     ZAB protocol and the Fast Leader Election protocol. Default
     value is **false**.
 
+* *multiAddress.reachabilityCheckEnabled* :
+    (Java system property: **zookeeper.multiAddress.reachabilityCheckEnabled**)
+    **New in 3.6.0:**
+    Since ZooKeeper 3.6.0 you can also [specify multiple addresses](#id_multi_address) 
+    for each ZooKeeper server instance (this can increase availability when multiple physical 
+    network interfaces can be used parallel in the cluster). ZooKeeper will perform ICMP ECHO requests
+    or try to establish a TCP connection on port 7 (Echo) of the destination host in order to find 
+    the reachable addresses. This happens only if you provide multiple addresses in the configuration.
+    The reachable check can fail if you hit some ICMP rate-limitation, (e.g. on MacOS) when you try to 
+    start a large (e.g. 11+) ensemble members cluster on a single machine for testing. 
+    
+    Default value is **true**. By setting this parameter to 'false' you can disable the reachability checks. 
+    Please note, disabling the reachability check will cause the cluster not to be able to reconfigure 
+    itself properly during network problems, so the disabling is advised only during testing. 
 
 Review comment:
   Thanks for checking! :)
   
   The whole purpose of the multi-address feature is to always try to use an address which works. The current implementation is (in case of the leader election) always filters the address list using `InetAddress.isReachable()` calls to find out which is the working server address. This will cause ICMP calls (or TCP connections on port 7 (Echo) of the destination host), depending on the native implementation (see: https://docs.oracle.com/javase/7/docs/api/java/net/InetAddress.html#isReachable(int) )
   
   So if the `InetAddress.isReachable` can not reach the host, then the current multi-address feature will not able to take the given address as a working one. Basically right now it can not distinguish between the case of a broken network link (when the whole node is unreachable) and the case of a disabled ICMP (when only the ICMP port and the port 7 is disabled in the firewall of the destination host). I am not an expert in cluster / firewall operation, so I can not tell how serious is this limitation.
   
   One way to improve this could be to implement something like the `ruok` 4LW command for the server ports. Some simple request-response messages that only shows that the server is alive and listen on the given election / quorum port. Then we could use that instead of the ICMP calls. I think this would be a reasonable improvement, but maybe more like a separate task, out of the scope of 3.6.0.
   
   What do you think?
   
   (also: do you think I should extend the documentation, or you just wanted to elaborate here in the PR?)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 14:28;githubbot;600","symat commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#discussion_r368626386
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1542,6 +1555,22 @@ the variable does.
     ZAB protocol and the Fast Leader Election protocol. Default
     value is **false**.
 
+* *multiAddress.reachabilityCheckEnabled* :
+    (Java system property: **zookeeper.multiAddress.reachabilityCheckEnabled**)
+    **New in 3.6.0:**
+    Since ZooKeeper 3.6.0 you can also [specify multiple addresses](#id_multi_address) 
+    for each ZooKeeper server instance (this can increase availability when multiple physical 
+    network interfaces can be used parallel in the cluster). ZooKeeper will perform ICMP ECHO requests
+    or try to establish a TCP connection on port 7 (Echo) of the destination host in order to find 
+    the reachable addresses. This happens only if you provide multiple addresses in the configuration.
+    The reachable check can fail if you hit some ICMP rate-limitation, (e.g. on MacOS) when you try to 
+    start a large (e.g. 11+) ensemble members cluster on a single machine for testing. 
+    
+    Default value is **true**. By setting this parameter to 'false' you can disable the reachability checks. 
+    Please note, disabling the reachability check will cause the cluster not to be able to reconfigure 
+    itself properly during network problems, so the disabling is advised only during testing. 
 
 Review comment:
   After thinking a bit more:
   
   One other improvement can be to implement something like how the Learner is doing this right now (if I remember correctly, it basically starts to connect to all known Quorum ports in parallel, then keep the connection which is established first). However, it might be more tricky in case of the Leader Election protocol...
   
   An other way would be just to try to establish a connection to the election addresses one-by-one, and go to the next one if the call fails. It would be slower, but we wouldn't rely on `InetAddress.isReachable()`.
   
   However, in both cases, it can be tricky to detect if the current election address become unavailable. This is an other edge case where we use `InetAddress.isReachable()`. (this is why we call the `SendWorker.asyncValidateIfSocketIsStillReachable()`)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 16:09;githubbot;600","eolivelli commented on issue #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#issuecomment-576886852
 
 
   @anmolnar are you okay with this patch?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/20 21:19;githubbot;600","symat commented on issue #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#issuecomment-577369701
 
 
   FYI: I just rebased to the current branch-3.6, as there was a conflict in the `zookeeperAdmin.md` file (as the recently pushed ZOOKEEPER-3482 changed that too)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jan/20 20:25;githubbot;600","anmolnar commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#discussion_r370094227
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1542,6 +1555,22 @@ the variable does.
     ZAB protocol and the Fast Leader Election protocol. Default
     value is **false**.
 
+* *multiAddress.reachabilityCheckEnabled* :
+    (Java system property: **zookeeper.multiAddress.reachabilityCheckEnabled**)
+    **New in 3.6.0:**
+    Since ZooKeeper 3.6.0 you can also [specify multiple addresses](#id_multi_address) 
+    for each ZooKeeper server instance (this can increase availability when multiple physical 
+    network interfaces can be used parallel in the cluster). ZooKeeper will perform ICMP ECHO requests
+    or try to establish a TCP connection on port 7 (Echo) of the destination host in order to find 
+    the reachable addresses. This happens only if you provide multiple addresses in the configuration.
+    The reachable check can fail if you hit some ICMP rate-limitation, (e.g. on MacOS) when you try to 
+    start a large (e.g. 11+) ensemble members cluster on a single machine for testing. 
+    
+    Default value is **true**. By setting this parameter to 'false' you can disable the reachability checks. 
+    Please note, disabling the reachability check will cause the cluster not to be able to reconfigure 
+    itself properly during network problems, so the disabling is advised only during testing. 
 
 Review comment:
   @symat Agreed. All suggestions would be nice improvements, but we definitely need separate Jira / patch for it. `isReachable()` is suitable for now.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:40;githubbot;600","asfgit commented on pull request #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:44;githubbot;600","anmolnar commented on issue #1228: ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally
URL: https://github.com/apache/zookeeper/pull/1228#issuecomment-577666069
 
 
   Merged to master and branch-3.6
   Thanks @symat !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 12:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3758,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jan 23 12:44:13 UTC 2020,,,,,,,,,,"0|z0am3c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/20 15:14;eolivelli;In my opinion we could address this issue working on the following items:
1) do not use a ""parallelStream"" to perform the reachability test (https://github.com/apache/zookeeper/blob/9053f7c431bb17ed79c2be129b6ba4ba18d15ab1/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/MultipleAddresses.java#L124)
2) make the timeout configurable, and maybe default to 1second  (https://github.com/apache/zookeeper/blob/9053f7c431bb17ed79c2be129b6ba4ba18d15ab1/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/MultipleAddresses.java#L43)
3) make che reachabilty test configurabile, in a way the it is not done by default
4) do not make the reachability test in case of ONE single address (this will make the behaviour similar to 3.5 in case of one single address per server, that is the very common configuration)

I would go for 3 and/or 4 this new reachability test adds new burden to the system and by default if you have only a single route to the other peer it is not needed, our code is already handling the case of connection failure.


;;;","18/Jan/20 19:18;eolivelli;Thinking a bit more....parallelStream() in this case is not the problem, we have only 1 address per peer, so parallelStream is not doing something special, it is using only one thread;;;","20/Jan/20 08:31;symat;I can agree with 3) and 4).

Regarding 3) I will add to the documentation, that disabling the reachability check will cause the cluster not to be able to reconfigure itself properly during network problems, so the disabling is useful only during testing. For the same reason I would keep it enabled by default. (of course, if there is only a single address, then it should be disabled, as you proposed in 4) )

Also I don't think 1), the parallel stream would be an issue here.

Regarding 2) I think it won't hurt, but won't really help either. I tested it by raising the hardcoded timeout value up to 5 sec, and it didn't solve the problem. (My hypothesis is that the ICMP calls might fail quickly on mac, not waiting / retrying during the timeout period.) Still, being able to fine-tune this parameter might be a good idea on production environment. I also agree with the slightly higher default value of 1 sec. Exactly because of the parallel stream, we should get back the address from the list with the quickest ping time.

 ;;;","23/Jan/20 12:44;andor;Issue resolved by pull request 1228
[https://github.com/apache/zookeeper/pull/1228];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zookeeper.ssl.clientAuth ignored,ZOOKEEPER-3674,13277752,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,rndgstn,rndgstn,06/Jan/20 18:22,16/Aug/20 21:55,13/Jul/23 09:08,18/Feb/20 15:14,3.5.5,3.5.6,,,,,,,,3.5.7,,,,,security,server,,,0,,,"Setting zookeeper.ssl.clientAuth currently has no impact; a client certificate is currently always required.",,eprabab,Mohan.Ingole,rndgstn,sankalpbhatia,yuzhihong@gmail.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Aug 16 21:55:32 UTC 2020,,,,,,,,,,"0|z0a8a8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jan/20 15:48;rndgstn;I believe this has already been fixed for the upcoming 3.6.0 release but would appreciate confirmation.;;;","10/Jul/20 05:53;Mohan.Ingole;[~eprabab] [~rndgstn]

Is this issue resolved? . In which release ?

We need to use ZK server authentication only by ignoring client authentication.;;;","16/Aug/20 21:55;sankalpbhatia;This has been fixed in 3.5.7.  Check conversation on [https://github.com/apache/zookeeper/pull/1405];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
set jute.maxbuffer hexadecimal number throw parseInt error,ZOOKEEPER-3667,13276615,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,sujithsimon22,zgw,zgw,27/Dec/19 12:46,14/Feb/20 15:23,13/Jul/23 09:08,20/Jan/20 07:42,3.5.6,,,,,,,,,3.5.7,3.6.0,3.7.0,,,java client,,,,0,pull-request-available,,,,arshad.mohammad,loghijiaha,sujithsimon22,zgw,,,,,,,,,,,,,,,,"sujithsimon22 commented on pull request #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jan/20 10:12;githubbot;600","arshadmohammad commented on pull request #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222#discussion_r367382264
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/client/ZKClientConfigTest.java
 ##########
 @@ -185,4 +185,35 @@ public void testIntegerRetrievalFromProperty() {
         assertEquals(value, result);
     }
 
+    @Test
+    public void testIntegerRetrievalFromHexadecimalProperty() {
+        int hexaValue = 0x3000000;
+        String wrongValue = ""0xwel"";
+        int defaultValue = 100;
+        // property is set in hexadecimal value
+        ZKClientConfig zkClientConfig = new ZKClientConfig();
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                Integer.toString(hexaValue));
+        int result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+        assertEquals(result, hexaValue);
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                wrongValue);
+        try {
+            result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+            fail(""NumberFormatException is expected"");
+        } catch (NumberFormatException exception) {
+            // do nothing
+        }
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                "" "" + hexaValue + "" "");
+        zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
 
 Review comment:
   assign returned value to result otherwise old result will be used.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jan/20 12:06;githubbot;600","arshadmohammad commented on pull request #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222#discussion_r367383251
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/client/ZKClientConfigTest.java
 ##########
 @@ -185,4 +185,35 @@ public void testIntegerRetrievalFromProperty() {
         assertEquals(value, result);
     }
 
+    @Test
+    public void testIntegerRetrievalFromHexadecimalProperty() {
+        int hexaValue = 0x3000000;
+        String wrongValue = ""0xwel"";
+        int defaultValue = 100;
+        // property is set in hexadecimal value
+        ZKClientConfig zkClientConfig = new ZKClientConfig();
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                Integer.toString(hexaValue));
+        int result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+        assertEquals(result, hexaValue);
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                wrongValue);
+        try {
+            result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+            fail(""NumberFormatException is expected"");
+        } catch (NumberFormatException exception) {
+            // do nothing
+        }
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                "" "" + hexaValue + "" "");
+        zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+        assertEquals(result, hexaValue);
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER, "" "" + hexaValue);
 
 Review comment:
   this many trim scenario testing is not required. Its look like we are testing java trim functionality. I think one trim scenario is sufficient other two can be removed.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jan/20 12:08;githubbot;600","sujithsimon22 commented on pull request #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222#discussion_r367771889
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/client/ZKClientConfigTest.java
 ##########
 @@ -185,4 +185,35 @@ public void testIntegerRetrievalFromProperty() {
         assertEquals(value, result);
     }
 
+    @Test
+    public void testIntegerRetrievalFromHexadecimalProperty() {
+        int hexaValue = 0x3000000;
+        String wrongValue = ""0xwel"";
+        int defaultValue = 100;
+        // property is set in hexadecimal value
+        ZKClientConfig zkClientConfig = new ZKClientConfig();
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                Integer.toString(hexaValue));
+        int result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+        assertEquals(result, hexaValue);
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                wrongValue);
+        try {
+            result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+            fail(""NumberFormatException is expected"");
+        } catch (NumberFormatException exception) {
+            // do nothing
+        }
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                "" "" + hexaValue + "" "");
+        zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+        assertEquals(result, hexaValue);
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER, "" "" + hexaValue);
 
 Review comment:
   Done, thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 05:11;githubbot;600","sujithsimon22 commented on pull request #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222#discussion_r367772007
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/client/ZKClientConfigTest.java
 ##########
 @@ -185,4 +185,35 @@ public void testIntegerRetrievalFromProperty() {
         assertEquals(value, result);
     }
 
+    @Test
+    public void testIntegerRetrievalFromHexadecimalProperty() {
+        int hexaValue = 0x3000000;
+        String wrongValue = ""0xwel"";
+        int defaultValue = 100;
+        // property is set in hexadecimal value
+        ZKClientConfig zkClientConfig = new ZKClientConfig();
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                Integer.toString(hexaValue));
+        int result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+        assertEquals(result, hexaValue);
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                wrongValue);
+        try {
+            result = zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
+            fail(""NumberFormatException is expected"");
+        } catch (NumberFormatException exception) {
+            // do nothing
+        }
+        zkClientConfig.setProperty(ZKConfig.JUTE_MAXBUFFER,
+                "" "" + hexaValue + "" "");
+        zkClientConfig.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);
 
 Review comment:
   Done, thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 05:12;githubbot;600","arshadmohammad commented on issue #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222#issuecomment-576145095
 
 
   LGTM +1
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 07:38;githubbot;600","asfgit commented on pull request #1222: ZOOKEEPER-3667: Set jute.maxbuffer hexadecimal number throw parseInt error
URL: https://github.com/apache/zookeeper/pull/1222
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 07:40;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"27/Dec/19 12:46;zgw;20191227-204631(eSpace).png;https://issues.apache.org/jira/secure/attachment/12989539/20191227-204631%28eSpace%29.png",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jan 20 07:42:56 UTC 2020,,,,,,,,,,"0|z0a1a8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Dec/19 07:40;zgw;have checked:

3.5.1 use Integer.getInteger

3.5.6 use Integer.parseInt;;;","02/Jan/20 16:07;loghijiaha;I have some experience of using zookeeper. I am interested in this issue.;;;","16/Jan/20 10:16;sujithsimon22;I can take this issue up :);;;","20/Jan/20 07:42;arshad.mohammad;Issue resolved by pull request 1222
[https://github.com/apache/zookeeper/pull/1222];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SyncRequestProcessor doesn't update lastFlushTime correctly on observers,ZOOKEEPER-3656,13275381,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,hammerlefb,hammerlefb,19/Dec/19 00:36,28/Mar/21 08:55,13/Jul/23 09:08,07/Jan/20 19:39,,,,,,,,,,3.7.0,,,,,,,,,0,pull-request-available,,"This issues was introduced in [ZOOKEEPER-3311|https://github.com/apache/zookeeper/pull/851]. The lastFlushTime used to decide the batch window is not updated correctly for the observer case when the nextProcessor is always be null.

This can cause observers to fall behind and their sync queue to grow indefinitely.",,hammerlefb,hanm,lvfangmin,,,,,,,,,,,,,,,,,"hammerlefb commented on pull request #1189: ZOOKEEPER-3656: Properly set lastFlushTime when flushing
URL: https://github.com/apache/zookeeper/pull/1189
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 00:57;githubbot;600","asfgit commented on pull request #1189: ZOOKEEPER-3656: Properly set lastFlushTime when flushing
URL: https://github.com/apache/zookeeper/pull/1189
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jan/20 19:39;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jan 07 19:39:46 UTC 2020,,,,,,,,,,"0|z09to0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jan/20 19:39;lvfangmin;Issue resolved by pull request 1189
[https://github.com/apache/zookeeper/pull/1189];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect *_CFLAGS handling in Automake,ZOOKEEPER-3654,13275280,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,ztzg,ztzg,ztzg,18/Dec/19 14:56,28/Mar/21 08:54,13/Jul/23 09:08,25/Mar/20 11:10,,,,,,,,,,3.7.0,,,,,c client,,,,0,pull-request-available,,"The {{Makefile.am}} distributed with the C client defines some per-target {{\*_CFLAGS}} and {{\*_CXXFLAGS}} variables.  These however, do not reference {{AM_CFLAGS}} (resp. AM_CXXFLAGS}}, which means that some options (notably {{-Wall}}) are missing when building subsets of the code.

Dixit the [Automake docs|https://www.gnu.org/software/automake/manual/html_node/Program-and-Library-Variables.html]:

{quote}
In compilations with per-target flags, the ordinary ‘AM_’ form of
the flags variable is _not_ automatically included in the
compilation (however, the user form of the variable _is_ included).
So for instance, if you want the hypothetical ‘maude’ compilations
to also use the value of ‘AM_CFLAGS’, you would need to write:

     maude_CFLAGS = ... your flags ... $(AM_CFLAGS)
{quote}

Restoring the flags, however, causes compilation failures (in the library) and a slew of new warnings (in the tests) which had not been noticed because of the missing options.  These errors/warnings have to be fixed before the flags can be tightened up.

(I have a preliminary patch, and am planning to submit a ""pull request"" soon.)",,ztzg,,,,,,,,,,,,,,,,,,,"ztzg commented on pull request #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186
 
 
   The `Makefile.am` distributed with the C client defines some per-target `*_CFLAGS` and `*_CXXFLAGS` variables.  These however, do not reference `AM_CFLAGS` (resp. AM_CXXFLAGS`, which means that some options (notably `-Wall`) are missing when building subsets of the code.
   
   Dixit the [Automake docs](https://www.gnu.org/software/automake/manual/html_node/Program-and-Library-Variables.html):
   
   > In compilations with per-target flags, the ordinary ‘AM_’ form of
   > the flags variable is _not_ automatically included in the
   > compilation (however, the user form of the variable _is_ included).
   > So for instance, if you want the hypothetical ‘maude’ compilations
   > to also use the value of ‘AM_CFLAGS’, you would need to write:
   > 
   >      maude_CFLAGS = ... your flags ... $(AM_CFLAGS)
   
   Restoring the flags, however, causes compilation failures (in the library) and a slew of new warnings (in the tests) which had not been noticed because of the missing options.
   
   This series of patches (all ""tagged"" ZOOKEEPER-3654) fix these warnings and errors before re-enabling `-Wall` and friends for all targets.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Dec/19 15:32;githubbot;600","ztzg commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-577763816
 
 
   @eolivelli: There you are :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jan/20 16:38;githubbot;600","ztzg commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-602489242
 
 
   Hi @eolivelli, @anmolnar,
   
   I have refreshed this series on top of the latest `master`.  Could one of you pull this in, as it has the required number of approvals?
   
   Cheers, -D
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 09:48;githubbot;600","eolivelli commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-602577026
 
 
   Merging as soon as CI ends
   Sorry for this taking so long
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 13:06;githubbot;600","ztzg commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-602623087
 
 
   @eolivelli: Okay, and no problem—but it looks like GitHub and Travis are now conspiring to annoy us :)  The status box has been in the ""Pending"" state for a while, yet following its ""Details"" link shows that it finished ~1h ago.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 14:15;githubbot;600","ztzg commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-602637488
 
 
   retest this please
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/20 14:41;githubbot;600","ztzg commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-603107252
 
 
   @eolivelli: It finally went through!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/20 08:44;githubbot;600","eolivelli commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-603469171
 
 
   I will merge as soon as possible. 
   Sorry for taking so long
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/20 19:47;githubbot;600","eolivelli commented on pull request #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/20 11:09;githubbot;600","ztzg commented on issue #1186: ZOOKEEPER-3654: Incorrect *_CFLAGS handling in Automake
URL: https://github.com/apache/zookeeper/pull/1186#issuecomment-603976594
 
 
   Thank you!  (And sorry for the nagging; I understand that you have many other things on your plate!)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/20 17:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-12-18 14:56:40.0,,,,,,,,,,"0|z09t1k:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Audit Log feature fails in a stand alone zookeeper setup,ZOOKEEPER-3653,13274991,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,sujithsimon22,sujithsimon22,sujithsimon22,17/Dec/19 13:12,28/Mar/21 08:54,13/Jul/23 09:08,19/Dec/19 08:55,,,,,,,,,,3.6.0,3.7.0,,,,audit,,,,0,pull-request-available,,"When the Audit Log feature is enabled in a standalone zookeeper setup, an error pops up which states ""Failed to audit log request"" with an EndOfFile exception due to an issue with the  deserialization in the AuditHelper.java when the request.request.slice() returns an empty pointer.",,arshad.mohammad,sujithsimon22,,,,,,,,,,,,,,,,,,"sujithsimon22 commented on pull request #1185: ZOOKEEPER-3653: Audit Log feature fails in a stand alone zookeeper setup
URL: https://github.com/apache/zookeeper/pull/1185
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 13:27;githubbot;600","asf-ci commented on issue #1185: ZOOKEEPER-3653: Audit Log feature fails in a stand alone zookeeper setup
URL: https://github.com/apache/zookeeper/pull/1185#issuecomment-566564731
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1746/<h2>Build result: FAILURE</span></h2>[...truncated 794.01 KB...][JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/pom.xml to org.apache.zookeeper/parent/3.7.0-SNAPSHOT/parent-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-recipes/zookeeper-recipes-lock/pom.xml to org.apache.zookeeper/zookeeper-recipes-lock/3.7.0-SNAPSHOT/zookeeper-recipes-lock-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-contrib/pom.xml to org.apache.zookeeper/zookeeper-contrib/3.7.0-SNAPSHOT/zookeeper-contrib-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/pom.xml to org.apache.zookeeper/zookeeper-client/3.7.0-SNAPSHOT/zookeeper-client-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/pom.xml to org.apache.zookeeper/zookeeper-jute/3.7.0-SNAPSHOT/zookeeper-jute-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/target/zookeeper-jute-3.7.0-SNAPSHOT.jar to org.apache.zookeeper/zookeeper-jute/3.7.0-SNAPSHOT/zookeeper-jute-3.7.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/target/zookeeper-jute-3.7.0-SNAPSHOT-tests.jar to org.apache.zookeeper/zookeeper-jute/3.7.0-SNAPSHOT/zookeeper-jute-3.7.0-SNAPSHOT-tests.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/target/zookeeper-jute-3.7.0-SNAPSHOT-sources.jar to org.apache.zookeeper/zookeeper-jute/3.7.0-SNAPSHOT/zookeeper-jute-3.7.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/target/zookeeper-jute-3.7.0-SNAPSHOT-javadoc.jar to org.apache.zookeeper/zookeeper-jute/3.7.0-SNAPSHOT/zookeeper-jute-3.7.0-SNAPSHOT-javadoc.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-recipes/zookeeper-recipes-queue/pom.xml to org.apache.zookeeper/zookeeper-recipes-queue/3.7.0-SNAPSHOT/zookeeper-recipes-queue-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-docs/pom.xml to org.apache.zookeeper/zookeeper-docs/3.7.0-SNAPSHOT/zookeeper-docs-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-docs/target/zookeeper-docs-3.7.0-SNAPSHOT.jar to org.apache.zookeeper/zookeeper-docs/3.7.0-SNAPSHOT/zookeeper-docs-3.7.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-docs/target/zookeeper-docs-3.7.0-SNAPSHOT-tests.jar to org.apache.zookeeper/zookeeper-docs/3.7.0-SNAPSHOT/zookeeper-docs-3.7.0-SNAPSHOT-tests.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-docs/target/zookeeper-docs-3.7.0-SNAPSHOT-sources.jar to org.apache.zookeeper/zookeeper-docs/3.7.0-SNAPSHOT/zookeeper-docs-3.7.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-recipes/pom.xml to org.apache.zookeeper/zookeeper-recipes/3.7.0-SNAPSHOT/zookeeper-recipes-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/pom.xml to org.apache.zookeeper/zookeeper-client-c/3.7.0-SNAPSHOT/zookeeper-client-c-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-contrib/zookeeper-contrib-rest/pom.xml to org.apache.zookeeper/zookeeper-contrib-rest/3.7.0-SNAPSHOT/zookeeper-contrib-rest-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-assembly/pom.xml to org.apache.zookeeper/zookeeper-assembly/3.7.0-SNAPSHOT/zookeeper-assembly-3.7.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-contrib/zookeeper-contrib-zooinspector/pom.xml to org.apache.zookeeper/zookeeper-contrib-zooinspector/3.7.0-SNAPSHOT/zookeeper-contrib-zooinspector-3.7.0-SNAPSHOT.pomchannel stopped[SpotBugs] Skipping execution of recorder since overall result is 'FAILURE'Setting status of c628baebba14bc1909941402710a9386d44752ef to FAILURE with url https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1746/ and message: 'FAILURE 'Using context: JenkinsMaven
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 14:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Dec 19 08:55:12 UTC 2019,,,,,,,,,,"0|z09r9c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/19 08:55;arshad.mohammad;Issue resolved by pull request 1185
[https://github.com/apache/zookeeper/pull/1185];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improper synchronization in ClientCnxn,ZOOKEEPER-3652,13274776,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,sylvain,sylvain,16/Dec/19 14:31,17/Apr/23 23:10,13/Jul/23 09:08,30/Mar/22 18:30,3.5.6,,,,,,,,,3.5.10,3.6.4,3.7.1,3.8.1,3.9.0,java client,,,,1,pull-request-available,,"ZOOKEEPER-2111 introduced {{synchronized(state)}} statements in {{ClientCnxn}} and {{ClientCnxn.SendThread}} to coordinate insertion in {{outgoingQueue}} and draining it when the client connection isn't alive.

There are several issues with this approach:
 - the value of the {{state}} field is not stable, meaning we don't always synchronize on the same object.
 - the {{state}} field is an enum value, which are global objects. So in an application with several ZooKeeper clients connected to different servers, this causes some contention between clients.

An easy fix is change those {{synchronized(state)}} statements to {{synchronized(outgoingQueue)}} since it is local to each client and is what we want to coordinate.

I'll be happy to prepare a PR with the above change if this is deemed to be the correct way to fix it.

 

Another issue that makes contention worse is {{ClientCnxnSocketNIO.cleanup()}} that is called from within the above synchronized block and contains {{Thread.sleep(100)}}. Why is this sleep statement needed, and can we remove it?

 ",,arshad.mohammad,maoling,sylvain,sylvain@apache.org,symat,,,,,,,,,,,,,,,"swallez commented on pull request #1257: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1257
 
 
   When packets are added to ClientCnxn's outgoing packet queue we ensure there's no conflict with an ongoing flush of that queue because of connection loss.
   
   Synchronization used to be on the state field's value. This value is both not stable (its value changes over time), possibly causing improper synchronization, and global, which can cause contention in applications that run several ZooKeeper clients.
   
   We now synchronize on outgoingQueue which is both local to a ClientCnxn's instance and stable.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/20 14:00;githubbot;600","maoling commented on issue #1257: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-590867118
 
 
   @swallez 
   - `[ERROR] Synchronization performed on java.util.concurrent.LinkedBlockingDeque in org.apache.zookeeper.ClientCnxn.queuePacket(RequestHeader, ReplyHeader, Record, Record, AsyncCallback, String, String, Object, ZooKeeper$WatchRegistration, WatchDeregistration) [org.apache.zookeeper.ClientCnxn] At ClientCnxn.java:[line 1645] `
   
   - JLM_JSR166_UTILCONCURRENT_MONITORENTER: This method performs synchronization an object that is an instance of a class from the java.util.concurrent package  (or its subclasses). Instances of these classes have their own concurrency  control mechanisms that are orthogonal to the synchronization provided by the  Java keyword synchronized. For example, synchronizing on an AtomicBoolean  will not prevent other threads from modifying the AtomicBoolean. Such code may be correct, but should be  carefully reviewed and documented, and may confuse people who have to  maintain the code at a later date.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/20 13:30;githubbot;600","swallez commented on issue #1257: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-592004575
 
 
   @maoling I added a commit to instruct SpotBugs that we know what we're doing, following the approach used to allow `synchronized (waitingEvents)` in that same class.
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/20 14:39;githubbot;600","maoling commented on issue #1257: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-593204387
 
 
   looks good. I still have another thought(no binding for the following, you can ignore it):
   - Since the root cause is a narrow windows between `queuePacket` and `cleanup`, so synchronized `objectLock` is also an alternative way? which one is better? Since `outgoingQueue` is a critical Queue for client to talk with server, synchronized `outgoingQueue` will have performance and future program extensibility issue?
   
   Haha, I also test for the global and inner wording by the following way:
   - new two different zookeeper clients, create some znodes, printing the hashcode of `outgoingQueue` and `state`. They really hold different `outgoingQueue`, but the same `state`. 
   - synchronized `Enum` is also not thread-safe
   - In a word, `Enum` is a heresy:)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Mar/20 03:40;githubbot;600","swallez commented on issue #1257: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-595368157
 
 
   Thanks for the review @maoling!
   
   Synchronizing on `outgoingQueue` or a separate `objectLock` has the exact same performance since no other synchronization statement exists for `outgoingQueue`, including in its implementation (I checked the code for `LinkedBlockingDeque`).
   
   In terms of future extensibility I don't think this is a concern as `outgoingQueue` is used in very few places, which are where synchronization is needed.
   
   And yes, `enum` is great to represent enumerated values but not so great for thread synchronization 😉 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Mar/20 18:06;githubbot;600","maoling commented on issue #1257: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-593204387
 
 
   looks good. I still have another thought(no binding for the following, you can ignore it):
   - Since the root cause is a narrow windows between `queuePacket` and `cleanup`, so synchronized `objectLock` is also an alternative way? which one is better? Since `outgoingQueue` is a critical Queue for client to talk with server, synchronized `outgoingQueue` will have performance and future program extensibility issue?
   
   Haha, I also test for the `global` and `inner` wording by the following way:
   - new two different zookeeper clients, create some znodes, printing the `hashcode` of `outgoingQueue` and `state`. They really hold different `outgoingQueue`, but the same hashcode of `state`. it really confuses me.
   
   - I believe different clients will have different `state` instance, otherwise when one client calls `close()`(set `state` to `CLOSE`), it will affect another client. However, using following ways cannot reason about it.
   ```
   System.out.println(zk1.getState() == zk2.getState()); //true
   System.out.println(zk1.getState().equals(zk2.getState())); //true
   System.out.println(zk1.getState().hashCode() == zk2.getState().hashCode()); //true
   System.out.println(System.identityHashCode(zk1.getState()) == System.identityHashCode(zk2.getState().hashCode()); //true
   ```
   
   `javap` to see the bytecode, the value set to `state` is `public static final`, so it's really global-shared by multi-clients.
   ```
   public final class org.apache.zookeeper.States extends java.lang.Enum<org.apache.zookeeper.States> {
     public static final org.apache.zookeeper.States CONNECTING;
     public static final org.apache.zookeeper.States NOT_CONNECTED;
     ********************************************
     private static final org.apache.zookeeper.States[] $VALUES;
     public static org.apache.zookeeper.States[] values();
   ```
   
   - synchronized `Enum` is also not thread-safe. Look at my demo attached in JIRA.
   - In a word, `Enum` is a heresy:)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/20 12:35;githubbot;600","eolivelli commented on pull request #1257:
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-1081764502


   Can you please revase this patch into latest master?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/22 11:39;githubbot;600","swallez commented on pull request #1257:
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-1082145986


   @eolivelli rebase done.
   
   The `pr-merge` job failed on `zookeeper-client-c` because of a missing C header file, unrelated to this change.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/22 17:11;githubbot;600","asfgit closed pull request #1257:
URL: https://github.com/apache/zookeeper/pull/1257


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

To unsubscribe, e-mail: notifications-unsubscribe@zookeeper.apache.org

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/22 18:27;githubbot;600","symat opened a new pull request, #1850:
URL: https://github.com/apache/zookeeper/pull/1850

   When packets are added to ClientCnxn's outgoing packet queue we ensure there's no conflict with an ongoing flush of that queue because of connection loss.
   
   Synchronization used to be on the state field's value. This value is both not stable (its value changes over time), possibly causing improper synchronization, and global, which can cause contention in applications that run several ZooKeeper clients.
   
   We now synchronize on outgoingQueue which is both local to a ClientCnxn's instance and stable.
   
   Author: Sylvain Wallez <sylvain@bluxte.net>
   
   Reviewers: maoling <maoling@apache.org>, Mohammad Arshad <arshad@apache.org>
   
   Closes #1257 from swallez/ZOOKEEPER-3652 and squashes the following commits:
   
   82e2cad2c [Sylvain Wallez] Instruct SpotBugs that we know what we're doing when synchronizing on outgoingQueue
   b0bc03d6f [Sylvain Wallez] ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
   
   (cherry picked from commit 91e0520133b82acb87ab60962fce5eae992d87e8)


;05/Apr/22 06:44;githubbot;600","symat commented on PR #1850:
URL: https://github.com/apache/zookeeper/pull/1850#issuecomment-1089851366

   hello @arshadmohammad  and @maoling !
   you already reviewed this fix on newer branches. Can you also review this one? (we were facing thread leak issues in NiFI with ZooKeeper client 3.5.5 and we think this commit might cause the problem. I want this fix to be released in the next 3.5 version.)


;06/Apr/22 05:55;githubbot;600","arshadmohammad commented on code in PR #1850:
URL: https://github.com/apache/zookeeper/pull/1850#discussion_r843497422


##########
zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java:
##########
@@ -178,7 +178,7 @@
      * operation)
      */
     private volatile boolean closing = false;
-    
+

Review Comment:
   Please revert formatting changes.



;06/Apr/22 06:03;githubbot;600","arshadmohammad commented on PR #1850:
URL: https://github.com/apache/zookeeper/pull/1850#issuecomment-1089856365

   Changes look good to me but there are many formatting related change. Please revert all formatting changes


;06/Apr/22 06:04;githubbot;600","symat commented on PR #1850:
URL: https://github.com/apache/zookeeper/pull/1850#issuecomment-1089858016

   true, sorry (blaming it on IntelliJ :) ) - will fix it soon


;06/Apr/22 06:07;githubbot;600","arshadmohammad commented on PR #1850:
URL: https://github.com/apache/zookeeper/pull/1850#issuecomment-1089948669

   merged. Thanks @symat  for raising the PR


;06/Apr/22 07:53;githubbot;600","arshadmohammad closed pull request #1850: ZOOKEEPER-3652: Synchronize ClientCnxn outgoing queue flush on a stable internal value
URL: https://github.com/apache/zookeeper/pull/1850


;06/Apr/22 07:53;githubbot;600","symat commented on PR #1850:
URL: https://github.com/apache/zookeeper/pull/1850#issuecomment-1090124423

   thanks for the quick review - merge!


;06/Apr/22 10:44;githubbot;600","laxmanprabhu commented on PR #1257:
URL: https://github.com/apache/zookeeper/pull/1257#issuecomment-1512214435

   The `cleanUp` method is also called by `cleanAndNotifyState()`. Is there a reason why `cleanUp` method call isn't synchronized in this code path as well.
   
   When `cleanAndNotifyState()` calls cleanUp, the outgoingQueue is iterated without any synchronization. During this stage more callers can queue requests to the outgoingQueue. This causes the cleanUp method to keep iterating and possible take long time to complete.


;17/Apr/23 23:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,ZOOKEEPER-2111,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Apr 05 06:33:31 UTC 2022,,,,,,,,,,"0|z09pxk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Feb/20 04:02;maoling;[~sylvain]

*synchronized(outgoingQueue）*may be an alternative way to fix *--**ZOOKEEPER-2111*--

but I cannot understand this : In an application with several ZooKeeper clients, {{*outgoingQueue* is local}} and *{{state}}* field is an enum value, which are global objects ?

Could plz explain this for me ?;;;","20/Feb/20 17:53;sylvain;We synchronize on the +value+ of the {{state}} field, which is one of the members of the {{States}} enumeration.

Since a member of an enumeration is a {{public static final}} instance of the enumeration class, this means that {{synchronize(state)}} effectively synchronizes on a global object (the enum member), shared by all ZooKeeper clients that may be running.

Now things get worse as beyond being a shared global object, the value of {{state}} changes over time. Which means that the object on which we synchronize may not always be the same, thus defeating the purpose of using synchronization to coordinate access between threads.

The suggested fix {{synchronized(outgoingQueue)}} uses an object that is internal to the client instance and is doesn't change over time to fix these issues.

I hope I was clear.;;;","21/Feb/20 10:21;maoling;_*--->the value of {{state}} changes over time. Which means that the object on which we synchronize may not always be the same, thus defeating the purpose of using synchronization to coordinate access between*_ *threads**.*

I write an example to check this. Yes, I can read *Thread name:A-thread, the state is:B*
{code:java}
public class EnumTest {

    static volatile States state = States.C;

    static Object object = new Object();

    public enum States {
        A,
        B,
        C;
    }

    public static void main(String[] args) {

        Thread a = new MyThreadA(""A-thread"");
        a.start();

        Thread b = new MyThreadB(""B-thread"");
        b.start();
    }

    static class MyThreadB extends Thread {

        private String name;

        public MyThreadB(String name) {
            this.name = name;
        }

        Random r = new Random(1);
        @Override
        public void run() {
            while (true) {
                synchronized (state) {
                    state = States.B;
                    try {
                        TimeUnit.MILLISECONDS.sleep(r.nextInt(1000));
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println(""Thread name:"" + name + "", the state is:"" + state);
                }
                try {
                    TimeUnit.MILLISECONDS.sleep(r.nextInt(1000));
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    static class MyThreadA extends Thread {

        private String name;

        public MyThreadA(String name) {
            this.name = name;
        }

        Random r = new Random(1);
        @Override
        public void run() {
            while (true) {
                synchronized (state) {
                    state = States.A;
                    try {
                        TimeUnit.MILLISECONDS.sleep(r.nextInt(1000));
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println(""Thread name:"" + name + "", the state is:"" + state);
                }
                try {
                    TimeUnit.MILLISECONDS.sleep(r.nextInt(1000));
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
{code}
[~sylvain] 

Could you please help us improve this?

Zookeeper uses the github workflow. The contributor guideline
 is [here](https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute]);;;","21/Feb/20 14:04;sylvain;[~maoling] I submitted a [pull request|https://github.com/apache/zookeeper/pull/1257] with a fix!;;;","29/Mar/22 10:21;arshad.mohammad;Good finding [~sylvain]. I will review and merge your PR.;;;","29/Mar/22 17:19;arshad.mohammad;Some how wrong version number ""3.6.4,3.7.1,3.8.0,3.9.0"" got created into the jira system. I will delete this version number;;;","30/Mar/22 18:30;arshad.mohammad;Issue resolved by pull request 1257
[https://github.com/apache/zookeeper/pull/1257];;;","30/Mar/22 18:31;arshad.mohammad;Merged. Thanks [~sylvain] for the contribution.;;;","31/Mar/22 07:41;sylvain@apache.org;Awesome! Thanks a lot!;;;","05/Apr/22 06:28;symat;Great catch, thanks for the fix!

Is there a reason why not to backport this to branch-3.5? (it is an important bugfix and 3.5 is not EoL yet);;;","05/Apr/22 06:33;symat;I'll submit a PR for branch-3.5;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
NettyServerCnxnFactoryTest is flaky,ZOOKEEPER-3651,13274727,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,symat,symat,16/Dec/19 10:25,28/Mar/21 08:54,13/Jul/23 09:08,16/Dec/19 21:13,3.5.6,,,,,,,,,3.6.0,3.7.0,,,,,,,,0,pull-request-available,,"NettyServerCnxnFactoryTest is flaky, it fails from time to time on jenkins.

e.g. [https://builds.apache.org/view/ZK%20All/job/zookeeper-master-maven/557/org.apache.zookeeper$zookeeper/testReport/org.apache.zookeeper.server/NettyServerCnxnFactoryTest/testOutstandingHandshakeLimit/]

 
{code:java}
INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.apache.zookeeper.server.NettyServerCnxnFactoryTest
[ERROR] Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed:
7.339 s <<< FAILURE! - in
org.apache.zookeeper.server.NettyServerCnxnFactoryTest
[ERROR]
testOutstandingHandshakeLimit(org.apache.zookeeper.server.NettyServerCnxnFactoryTest)
 Time elapsed: 6.569 s  <<< FAILURE!
java.lang.AssertionError:

Expected: is <true>
     but: was <false>
at
org.apache.zookeeper.server.NettyServerCnxnFactoryTest.testOutstandingHandshakeLimit(NettyServerCnxnFactoryTest.java:142)
{code}",,symat,,,,,,,,,,,,,,,,,,,"symat commented on pull request #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184
 
 
   The testOutstandingHandshakeLimit is flaky, I tried to fix it in this commit.
   - I added extra comments and did some restructuring in the code.
   - Avoiding to start unnecessary ZooKeeper servers for tests don't require it
   - Decreasing the number of client connections the test tries to initiate
   - Increasing the timeout to make sure the connections get established
   - Filtering the 'SyncConnected' events in the client watcher to make sure
   the given connection is really established before counting it
   
   I think the last two points above should fix the flakiness. I tried to run the
   test in docker, and before the fix it failed for me once in every 4-5 execution.
   After applying these changes I re-executed it 100 times without failure.
   
   If these fixes are not enough, then we can introduce some only-visible-by-test
   method to add sleep in the SSLHandshake process in the production code to 
   force to have handshakes in parallel. However, it would be nice to avoid that.
   Let's hope that these fixes will be enough.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 16:30;githubbot;600","asf-ci commented on issue #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184#issuecomment-566153998
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1741/<h2>Failed Tests: <span class='status-failure'>2</span></h2><h3><a name='PreCommit-ZOOKEEPER-github-pr-build-maven/org.apache.zookeeper:zookeeper' /><a href='https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1741/org.apache.zookeeper$zookeeper/testReport'>PreCommit-ZOOKEEPER-github-pr-build-maven/org.apache.zookeeper:zookeeper</a>: <span class='status-failure'>2</span></h3><ul><li><a href='https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1741/org.apache.zookeeper$zookeeper/testReport/org.apache.zookeeper.server/NettyServerCnxnFactoryTest/testRebindIPv4IPv6/'><strong>org.apache.zookeeper.server.NettyServerCnxnFactoryTest.testRebindIPv4IPv6</strong></a></li><li><a href='https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1741/org.apache.zookeeper$zookeeper/testReport/org.apache.zookeeper.server/NettyServerCnxnFactoryTest/testRebind/'><strong>org.apache.zookeeper.server.NettyServerCnxnFactoryTest.testRebind</strong></a></li></ul>
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 17:12;githubbot;600","asf-ci commented on issue #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184#issuecomment-566170286
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1742/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 17:54;githubbot;600","eolivelli commented on pull request #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 21:09;githubbot;600","eolivelli commented on issue #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184#issuecomment-566246017
 
 
   @symat the pach does not apply to branch-3.5, I did not see this problem on such branch.
   If you want to port it please open a new PR
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 21:14;githubbot;600","symat commented on issue #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184#issuecomment-566430418
 
 
   cool, I am happy that it seems to be fixing the issues :)
   thanks for the quick reviews!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 08:07;githubbot;600","symat commented on issue #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184#issuecomment-566430599
 
 
   > If you want to port it please open a new PR
   
   sure, happy to do so
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 08:08;githubbot;600","symat commented on issue #1184: ZOOKEEPER-3651: try to fix flaky NettyServerCnxnFactoryTest
URL: https://github.com/apache/zookeeper/pull/1184#issuecomment-566433896
 
 
   > If you want to port it please open a new PR
   
   I just checked and I think I won't... 
   this test class (and the whole test scenario) was introduced by ZOOKEEPER-3473, which was a new feature added in this November. If for some reason we will cherry-pick ZOOKEEPER-3473 to 3.5 then it make sense to add my fix as well, but until then I think we should skip it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Dec/19 08:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-12-16 10:25:39.0,,,,,,,,,,"0|z09pmo:",9223372036854775807,"committed to master branch as 20daae7d5fa934629e7825ed72e66ad76a94d6aa

committed also to branch-3.6

But I cannot merge it to branch-3.5 as the patch does not apply cleanly",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data loss after upgrading standalone ZK server 3.4.14 to 3.5.6 with snapshot.trust.empty=true,ZOOKEEPER-3644,13273647,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,hanm,omkreddy,omkreddy,10/Dec/19 15:38,14/Feb/20 15:23,13/Jul/23 09:08,05/Jan/20 21:19,3.5.6,,,,,,,,,3.5.7,3.6.0,3.7.0,,,server,,,,2,pull-request-available,,"We have tried to upgrade single node *standalone* ZK server from 3.4.14 to 3.5.6.  There were no snapshot files, so as suggested in ZOOKEEPER-3056, we have set snapshot.trust.empty to true. After server startup, when we tried to list the znodes, we found that znodes are missing.

Steps to reproduce:
 # Start a single node ZK 3.4.14 server and create few znodes
 # Upgrade the server to 3.5.6 with  snapshot.trust.empty=true config
 # try to list the znodes using zkShell

Looking into the [source code|https://github.com/apache/zookeeper/blob/release-3.5.6/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java#L224], looks like we are not reading transaction log if there are no snapshot files and snapshot.trust.empty is set to true.

ZK 3.5.6 logs:
{quote}[2019-12-07 12:13:35,007] INFO Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 datadir /var/lib/zookeeper/version-2 snapdir /var/lib/zookeeper/version-2
  (org.apache.zookeeper.server.ZooKeeperServer)
 [2019-12-07 12:13:35,012] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
 [2019-12-07 12:13:35,014] INFO Configuring NIO connection handler with 10s sessionless connection timeout, 1 selector thread(s), 12 worker threads, and 64 kB direct buffers. (org.apache
 .zookeeper.server.NIOServerCnxnFactory)
 [2019-12-07 12:13:35,017] INFO binding to port [0.0.0.0/0.0.0.0:2181|http://0.0.0.0/0.0.0.0:2181] (org.apache.zookeeper.server.NIOServerCnxnFactory)
 [2019-12-07 12:13:35,027] INFO zookeeper.snapshotSizeFactor = 0.33 (org.apache.zookeeper.server.ZKDatabase)
 [2019-12-07 12:13:35,029] DEBUG Created new input stream /var/lib/zookeeper/version-2/log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
 [2019-12-07 12:13:35,031] DEBUG Created new input archive /var/lib/zookeeper/version-2/log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
 [2019-12-07 12:13:35,035] DEBUG EOF exception java.io.EOFException: Failed to read /var/lib/zookeeper/version-2/log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
 [2019-12-07 12:13:35,035] WARN No snapshot found, but there are log entries. This should only be allowed during upgrading. (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
 [2019-12-07 12:13:35,035] INFO Snapshotting: 0x0 to /var/lib/zookeeper/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
 [2019-12-07 12:13:35,036] INFO Snapshotting: 0x0 to /var/lib/zookeeper/version-2/snapshot.0 (org.apache.zookeeper.server.persistence.FileTxnSnapLog)
 [2019-12-07 12:13:35,050] INFO Using checkIntervalMs=60000 maxPerMinute=10000 (org.apache.zookeeper.server.ContainerManager)
 [2019-12-07 12:15:07,137] DEBUG Accepted socket connection from /[127.0.0.1:38888|http://127.0.0.1:38888/] (org.apache.zookeeper.server.NIOServerCnxnFactory)
 [2019-12-07 12:15:07,144] DEBUG Session establishment request from client /[127.0.0.1:38888|http://127.0.0.1:38888/] client's lastZxid is 0x0 (org.apache.zookeeper.server.ZooKeeperServer)
 [2019-12-07 12:15:07,145] DEBUG Adding session 0x100006e15fb0000 (org.apache.zookeeper.server.SessionTrackerImpl)
 [2019-12-07 12:15:07,148] TRACE SessionTrackerImpl — Adding session 0x100006e15fb0000 30000 (org.apache.zookeeper.server.SessionTrackerImpl)
 [2019-12-07 12:15:07,149] DEBUG Client attempting to establish new session: session = 0x100006e15fb0000, zxid = 0x0, timeout = 30000, address = /[127.0.0.1:38888|http://127.0.0.1:38888/] (org.apache.zookeeper.server.ZooKeeperServer)
 [2019-12-07 12:15:07,155] TRACE :Psessionid:0x100006e15fb0000 type:createSession cxid:0x0 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a (org.apache.zookeeper.server.PrepRequestProcessor)
 [2019-12-07 12:15:07,155] TRACE SessionTrackerImpl — Existing session 0x100006e15fb0000 30000 (org.apache.zookeeper.server.SessionTrackerImpl)
 [2019-12-07 12:15:07,155] INFO Creating new log file: log.1 (org.apache.zookeeper.server.persistence.FileTxnLog)
 [2019-12-07 12:15:07,170] DEBUG Processing request:: sessionid:0x100006e15fb0000 type:createSession cxid:0x0 zxid:0x1 txntype:-10 reqpath:n/a (org.apache.zookeeper.server.FinalRequestProcessor)
{quote}",,andor,hanm,ijuma,lasaro,omkreddy,rng,symat,,,,,,,,,,,,,"hanm commented on pull request #1177: ZOOKEEPER-3644: Data loss after upgrading standalone ZK server 3.4.14 to 3.5.6 with snapshot.trust.empty=true
URL: https://github.com/apache/zookeeper/pull/1177
 
 
   We didn't replay transactions during recovery when snapshot files are missing and snapshot.trust.empty is set to true; this leads to no actual data being applied to the deserialized in memory data tree. We should make sure always replay the transactions after snapshot loading is done.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Dec/19 23:14;githubbot;600","asf-ci commented on issue #1177: ZOOKEEPER-3644: Data loss after upgrading standalone ZK server 3.4.14 to 3.5.6 with snapshot.trust.empty=true
URL: https://github.com/apache/zookeeper/pull/1177#issuecomment-565247504
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1723/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Dec/19 00:24;githubbot;600","asfgit commented on pull request #1177: ZOOKEEPER-3644: Data loss after upgrading standalone ZK server 3.4.14 to 3.5.6 with snapshot.trust.empty=true
URL: https://github.com/apache/zookeeper/pull/1177
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Dec/19 07:52;githubbot;600","eolivelli commented on issue #1177: ZOOKEEPER-3644: Data loss after upgrading standalone ZK server 3.4.14 to 3.5.6 with snapshot.trust.empty=true
URL: https://github.com/apache/zookeeper/pull/1177#issuecomment-565339867
 
 
   @hanm I have merged the patch to master.
   The patch does not apply cleanly to branch-3.5,
   can you please create a new PR ?
   
   we should also start an hotfix release 3.5.7 as soon as possible, this is an hard problem
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Dec/19 07:53;githubbot;600","ijuma commented on issue #1177: ZOOKEEPER-3644: Data loss after upgrading standalone ZK server 3.4.14 to 3.5.6 with snapshot.trust.empty=true
URL: https://github.com/apache/zookeeper/pull/1177#issuecomment-565340959
 
 
   Glad to hear about the hotfix release!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Dec/19 07:57;githubbot;600","hanm commented on pull request #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 06:14;githubbot;600","hanm commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-565921049
 
 
   @eolivelli fyi
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 06:15;githubbot;600","asf-ci commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-565937418
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1732/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 07:25;githubbot;600","eolivelli commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-566140406
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 16:39;githubbot;600","ijuma commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-566195642
 
 
   Thanks for backporting this to 3.5. There was a discussion about a hotfix release in the original PR for this fix. If that is planned, any thoughts on the expected release date?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 19:00;githubbot;600","eolivelli commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-566242738
 
 
   @ijuma
   We have this patch and a few other ones to commit to branch-3.5
   
   Next step would be to find a volunteer release manager.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Dec/19 21:05;githubbot;600","anmolnar commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-570948813
 
 
   Committed to `branch-3.5`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jan/20 21:19;githubbot;600","anmolnar commented on pull request #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jan/20 21:19;githubbot;600","ijuma commented on issue #1182: ZOOKEEPER-3644: cherry pick PR 1177 to branch-3.5
URL: https://github.com/apache/zookeeper/pull/1182#issuecomment-575671322
 
 
   Nice to see this merged. Hopefully a release is not far behind. :) We upgraded Apache Kafka to ZK 3.5.6 in the last release and a number of people ran onto this issue. We're looking forward to ZK 3.5.7.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 15:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3056,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Jan 05 21:19:10 UTC 2020,,,,,,,,,,"0|z09iyo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Dec/19 01:09;hanm;Thanks for reporting the issue [~omkreddy]. This should be a bug. After we skip the validation of the empty snapshot, we didn't replay the transactions which leads to the loss of the data. I'll try to put up a patch this week. 

Though, the data is not lost (provided the transaction logs are intact) - I believe if you restart your server after the upgrade finishes the data will be visible in the data tree, because after upgrade, when restarting we should have a valid snapshot file locally and ZK will hit a different code path which will actually load and replay the transactions. Still, it's not acceptable for end user and should be fixed, but could be used as a temp workaround.
;;;","16/Dec/19 06:40;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4295//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4295//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4295//console

This message is automatically generated.;;;","05/Jan/20 21:19;andor;Issue resolved by pull request 1182
[https://github.com/apache/zookeeper/pull/1182];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Data inconsistency when the leader crashes right after sending SNAP sync,ZOOKEEPER-3642,13273469,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,lvfangmin,mirg,mirg,09/Dec/19 21:13,17/May/22 08:07,13/Jul/23 09:08,23/Nov/20 11:53,3.5.5,3.5.6,3.6.0,3.7.0,,,,,,3.5.10,3.7.0,,,,server,,,,0,pull-request-available,,"If the leader crashes after sending a SNAP sync to a learner, but before sending the NEWLEADER message, the learner will not save the snapshot to disk. But it will advance its lastProcessedZxid to that from the snapshot (call it Zxid X)

A new leader will get elected, and it will resync our learner again immediately. But this time, it will use the incremental DIFF method, starting from Zxid X. A DIFF-based resync does not trigger snapshots, so the learner is still holding the original snapshot purely in memory. If the learner restarts after that, it will silently lose all the data up to Zxid X.

An easy way to reproduce is to insert System.exit into LearnerHandler.java right before sending the NEWLEADER message (on the one instance that is currently running the leader, but not the others):
{noformat}
             LOG.debug(""Sending NEWLEADER message to "" + sid);
+            if (leader.self.getId() == 1 && sid == 3) {
+               LOG.debug(""Bail when server.1 resyncs server.3"");
+               System.exit(0);
+            }
{noformat}
If I remember right, the repro steps are as follows. Run with that patch in a 4-instance ensemble where server.3 is an Observer, the rest are voting members, and server.1 is the current Leader. Start server.3 after the other instances are up. It will get the initial snapshot from server.1 and server.1 will stop immediately because of the patch. Say, server.2 takes over as the new Leader. Server.3 will receive a Diff resync from server.2, but will skip persisting the snapshot. A subsequent restart of server.3 will make that instance come up with a blank data tree.

The above steps assumed that server.3 is an Observer, but it can presumably happen for voting members too. Just need a 5-instance ensemble.

Our workaround is to take the snapshot unconditionally on receiving NEWLEADER:
{noformat}
-                   if (snapshotNeeded) {
+                   // Take the snapshot unconditionally. The first leader may have crashed
+                   // after sending us a SNAP, but before sending NEWLEADER. The second leader will
+                   // send us a DIFF, and we'd still like to take a snapshot, even though
+                   // the upstream code used to skip it.
+                   if (true || snapshotNeeded) {
                        zk.takeSnapshot();
                    }
{noformat}
This is what 3.4.x series used to do. But I assume it is not the ideal fix, since it essentially disables the ""snapshotNeeded"" optimization.",Linux 4.19.29 x86_64,apurtell,eolivelli,hanm,kezhuw,lvfangmin,mirg,symat,,,,,,,,,,,,,"lvfangmin commented on pull request #1224: [ZOOKEEPER-3642] Fix potential data inconsistency due to DIFF sync after partial SNAP sync
URL: https://github.com/apache/zookeeper/pull/1224
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 01:45;githubbot;600","lvfangmin commented on issue #1224: [ZOOKEEPER-3642] Fix potential data inconsistency due to DIFF sync after partial SNAP sync
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-585461950
 
 
   @eolivelli @hanm interested to take a look at this, the potential issue is mentioned in the description of the Jira.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Feb/20 23:01;githubbot;600","hanm commented on pull request #1224: [ZOOKEEPER-3642] Fix potential data inconsistency due to DIFF sync after partial SNAP sync
URL: https://github.com/apache/zookeeper/pull/1224#discussion_r378646737
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -778,6 +778,9 @@ public void shutdown() {
      */
     public synchronized void shutdown(boolean fullyShutDown) {
         if (!canShutdown()) {
+            if (fullyShutDown && zkDb != null) {
+                zkDb.clear();
 
 Review comment:
   It's not obvious to me how we could end up in this code path - if we are here then the shutdown must have been called *and* that specific shut down must not be a full shutdown. Do we have a concrete example when we will hit this code path?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/20 04:36;githubbot;600","hanm commented on pull request #1224: [ZOOKEEPER-3642] Fix potential data inconsistency due to DIFF sync after partial SNAP sync
URL: https://github.com/apache/zookeeper/pull/1224#discussion_r378647035
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
 ##########
 @@ -1620,11 +1620,139 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
         assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
     }
 
+    /**
+     * If learner failed to do SNAP sync with leader before it's writing
+     * the snapshot to disk, it's possible that it might have DIFF sync
+     * with new leader or itself being elected as a leader.
+     *
+     * This test is trying to guarantee there is no data inconsistency for
+     * this case.
+     */
+    @Test
+    public void testDiffSyncAfterSnap() throws Exception {
+        final int ENSEMBLE_SERVERS = 3;
+        MainThread[] mt = new MainThread[ENSEMBLE_SERVERS];
+        ZooKeeper[] zk = new ZooKeeper[ENSEMBLE_SERVERS];
+
+        try {
+            // 1. start a quorum
+            final int[] clientPorts = new int[ENSEMBLE_SERVERS];
+            StringBuilder sb = new StringBuilder();
+            String server;
+
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                clientPorts[i] = PortAssignment.unique();
+                server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique()
+                         + "":"" + PortAssignment.unique()
+                         + "":participant;127.0.0.1:"" + clientPorts[i];
+                sb.append(server + ""\n"");
+            }
+            String currentQuorumCfgSection = sb.toString();
+
+            // start servers
+            Context[] contexts = new Context[ENSEMBLE_SERVERS];
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                final Context context = new Context();
+                contexts[i] = context;
+                mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                    @Override
+                    public TestQPMain getTestQPMain() {
+                        return new CustomizedQPMain(context);
+                    }
+                };
+                mt[i].start();
+                zk[i] = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, this);
+            }
+            waitForAll(zk, States.CONNECTED);
+            LOG.info(""all servers started"");
+
+            final String nodePath = ""/testDiffSyncAfterSnap"";
+
+            // 2. find leader and a follower
+            int leaderId = -1;
+            int followerA = -1;
+            for (int i = ENSEMBLE_SERVERS - 1; i >= 0; i--) {
+                if (mt[i].main.quorumPeer.leader != null) {
+                    leaderId = i;
+                } else if (followerA == -1) {
+                    followerA = i;
+                }
+            }
+
+            // 3. stop follower A
+            LOG.info(""shutdown follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+
+            // 4. issue some traffic
+            int index = 0;
+            int numOfRequests = 10;
+            for (int i = 0; i < numOfRequests; i++) {
+                zk[leaderId].create(nodePath + index++,
+                   new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
+
+            CustomQuorumPeer leaderQuorumPeer = (CustomQuorumPeer) mt[leaderId].main.quorumPeer;
+
+            // 5. inject fault to cause the follower exit when received NEWLEADER
+            contexts[followerA].newLeaderReceivedCallback = new NewLeaderReceivedCallback() {
+                boolean processed = false;
+                @Override
+                public void process() throws IOException {
+                    if (processed) {
+                        return;
+                    }
+                    processed = true;
+                    System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""false"");
+                    throw new IOException(""read timedout"");
+                }
+            };
+
+            // 6. force snap sync once
+            LOG.info(""force snapshot sync"");
+            System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
+
+            // 7. start follower A
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+            LOG.info(""verify the nodes are exist in memory"");
+            for (int i = 0; i < index; i++) {
+                assertNotNull(zk[followerA].exists(nodePath + i, false));
+            }
+
+            // 8. issue another request which will be persisted on disk
+            zk[leaderId].create(nodePath + index++,
+               new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            // wait some time to let this get written to disk
+            Thread.sleep(500);
 
 Review comment:
   I think in general we advocate not using sleep (at least, not using sleep alone) in unit tests as it's not reliable and proved to be a source of flaky-ness. Is there a better approach to wait for the log being flushed to disk (preferably also verify that fact in test)?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Feb/20 04:36;githubbot;600","lvfangmin commented on pull request #1224: [ZOOKEEPER-3642] Fix potential data inconsistency due to DIFF sync after partial SNAP sync
URL: https://github.com/apache/zookeeper/pull/1224#discussion_r384787614
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
 ##########
 @@ -1620,11 +1620,139 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
         assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
     }
 
+    /**
+     * If learner failed to do SNAP sync with leader before it's writing
+     * the snapshot to disk, it's possible that it might have DIFF sync
+     * with new leader or itself being elected as a leader.
+     *
+     * This test is trying to guarantee there is no data inconsistency for
+     * this case.
+     */
+    @Test
+    public void testDiffSyncAfterSnap() throws Exception {
+        final int ENSEMBLE_SERVERS = 3;
+        MainThread[] mt = new MainThread[ENSEMBLE_SERVERS];
+        ZooKeeper[] zk = new ZooKeeper[ENSEMBLE_SERVERS];
+
+        try {
+            // 1. start a quorum
+            final int[] clientPorts = new int[ENSEMBLE_SERVERS];
+            StringBuilder sb = new StringBuilder();
+            String server;
+
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                clientPorts[i] = PortAssignment.unique();
+                server = ""server."" + i + ""=127.0.0.1:"" + PortAssignment.unique()
+                         + "":"" + PortAssignment.unique()
+                         + "":participant;127.0.0.1:"" + clientPorts[i];
+                sb.append(server + ""\n"");
+            }
+            String currentQuorumCfgSection = sb.toString();
+
+            // start servers
+            Context[] contexts = new Context[ENSEMBLE_SERVERS];
+            for (int i = 0; i < ENSEMBLE_SERVERS; i++) {
+                final Context context = new Context();
+                contexts[i] = context;
+                mt[i] = new MainThread(i, clientPorts[i], currentQuorumCfgSection, false) {
+                    @Override
+                    public TestQPMain getTestQPMain() {
+                        return new CustomizedQPMain(context);
+                    }
+                };
+                mt[i].start();
+                zk[i] = new ZooKeeper(""127.0.0.1:"" + clientPorts[i], ClientBase.CONNECTION_TIMEOUT, this);
+            }
+            waitForAll(zk, States.CONNECTED);
+            LOG.info(""all servers started"");
+
+            final String nodePath = ""/testDiffSyncAfterSnap"";
+
+            // 2. find leader and a follower
+            int leaderId = -1;
+            int followerA = -1;
+            for (int i = ENSEMBLE_SERVERS - 1; i >= 0; i--) {
+                if (mt[i].main.quorumPeer.leader != null) {
+                    leaderId = i;
+                } else if (followerA == -1) {
+                    followerA = i;
+                }
+            }
+
+            // 3. stop follower A
+            LOG.info(""shutdown follower {}"", followerA);
+            mt[followerA].shutdown();
+            waitForOne(zk[followerA], States.CONNECTING);
+
+            // 4. issue some traffic
+            int index = 0;
+            int numOfRequests = 10;
+            for (int i = 0; i < numOfRequests; i++) {
+                zk[leaderId].create(nodePath + index++,
+                   new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+            }
+
+            CustomQuorumPeer leaderQuorumPeer = (CustomQuorumPeer) mt[leaderId].main.quorumPeer;
+
+            // 5. inject fault to cause the follower exit when received NEWLEADER
+            contexts[followerA].newLeaderReceivedCallback = new NewLeaderReceivedCallback() {
+                boolean processed = false;
+                @Override
+                public void process() throws IOException {
+                    if (processed) {
+                        return;
+                    }
+                    processed = true;
+                    System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""false"");
+                    throw new IOException(""read timedout"");
+                }
+            };
+
+            // 6. force snap sync once
+            LOG.info(""force snapshot sync"");
+            System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
+
+            // 7. start follower A
+            mt[followerA].start();
+            waitForOne(zk[followerA], States.CONNECTED);
+            LOG.info(""verify the nodes are exist in memory"");
+            for (int i = 0; i < index; i++) {
+                assertNotNull(zk[followerA].exists(nodePath + i, false));
+            }
+
+            // 8. issue another request which will be persisted on disk
+            zk[leaderId].create(nodePath + index++,
+               new byte[1], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+
+            // wait some time to let this get written to disk
+            Thread.sleep(500);
 
 Review comment:
   That's a reasonable concern, I'll try to find ways to check that in the test here. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 21:51;githubbot;600","lvfangmin commented on pull request #1224: [ZOOKEEPER-3642] Fix potential data inconsistency due to DIFF sync after partial SNAP sync
URL: https://github.com/apache/zookeeper/pull/1224#discussion_r384788556
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -778,6 +778,9 @@ public void shutdown() {
      */
     public synchronized void shutdown(boolean fullyShutDown) {
         if (!canShutdown()) {
+            if (fullyShutDown && zkDb != null) {
+                zkDb.clear();
 
 Review comment:
   In case the follower exited before finish syncing with leader, the ZK server will not start, canShutdown will return false, but we still need to clear the db here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/20 21:51;githubbot;600","hanm commented on pull request #1224:
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-711490127


   @eolivelli do you want to give a look at this given you were tagged? 
   
   If no issues I will merge this once we get a green build on per-merge job (I think my nits are addressed - the sleeping in test is not ideal but I would not consider it's blocking). 


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Oct/20 03:26;githubbot;600","hanm commented on pull request #1224:
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-712525497


   ok, I will merge after CI is back to good shape.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Oct/20 01:06;githubbot;600","eolivelli commented on pull request #1224:
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-712759480


   @hanm I have sent a fix for CI
   https://github.com/apache/zookeeper/pull/1510


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Oct/20 10:38;githubbot;600","hanm commented on pull request #1224:
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-713266070


   thanks for quick fix on CI issue @eolivelli ; looks like the test needs update to work with latest master. I'll do a rebase if @lvfangmin didn't have a chance to rebase.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Oct/20 03:09;githubbot;600","eolivelli commented on pull request #1224:
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-713674017


   thank you @hanm 
   the fix should be pretty simple, ping me when you are ready
   
   ```
   [2020-10-21T02:26:03.778Z] [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:testCompile (default-testCompile) on project zookeeper: Compilation failure
   
   [2020-10-21T02:26:03.778Z] [ERROR] /home/jenkins/jenkins-home/workspace/eper-precommit-github-pr_PR-1224/zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java:[1733,17] no suitable method found for assertNotNull(java.lang.String,org.apache.zookeeper.data.Stat)
   
   [2020-10-21T02:26:03.778Z] [ERROR]     method org.junit.jupiter.api.Assertions.assertNotNull(java.lang.Object,java.util.function.Supplier<java.lang.String>) is not applicable
   
   [2020-10-21T02:26:03.778Z] [ERROR]       (argument mismatch; org.apache.zookeeper.data.Stat cannot be converted to java.util.function.Supplier<java.lang.String>)
   
   [2020-10-21T02:26:03.778Z] [ERROR]     method org.junit.jupiter.api.Assertions.assertNotNull(java.lang.Object,java.lang.String) is not applicable
   
   [2020-10-21T02:26:03.778Z] [ERROR]       (argument mismatch; org.apache.zookeeper.data.Stat cannot be converted to java.lang.String)
   
   [2020-10-21T02:26:03.778Z] [ERROR] 
   
   [2020-10-21T02:26:03.778Z] [ERROR] -> [Help 1]
   ```


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Oct/20 15:49;githubbot;600","hanm opened a new pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515


   Based on https://github.com/apache/zookeeper/pull/1224 ; fixed unit test build issue.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Oct/20 01:15;githubbot;600","hanm commented on pull request #1224:
URL: https://github.com/apache/zookeeper/pull/1224#issuecomment-715650149


   @eolivelli https://github.com/apache/zookeeper/pull/1515 is rebased version, thanks.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Oct/20 01:16;githubbot;600","eolivelli commented on pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515#issuecomment-716555264


   I have restarted manually the CI job
   https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1515/2/pipeline


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Oct/20 13:44;githubbot;600","hanm commented on pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515#issuecomment-716967155


   > I have restarted manually the CI job
   > https://ci-hadoop.apache.org/blue/organizations/jenkins/zookeeper-precommit-github-pr/detail/PR-1515/2/pipeline
   
   I tried multiple times and can't get a green CI build. All JVM tests pass, and the build failed at C client build step:
   `[2020-10-26T14:14:15.576Z] autoreconf: cannot create /tmp/user/910/ar4585.2200: No such file or directory
   
   [2020-10-26T14:14:15.576Z]  at /usr/bin/autoreconf line 691.
   
   [2020-10-26T14:14:15.576Z] [ERROR] Command execution failed.
   
   [2020-10-26T14:14:15.576Z] org.apache.commons.exec.ExecuteException: Process exited with an error: 2 (Exit value: 2)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.commons.exec.DefaultExecutor.executeInternal (DefaultExecutor.java:404)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.commons.exec.DefaultExecutor.execute (DefaultExecutor.java:166)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.mojo.exec.ExecMojo.executeCommandLine (ExecMojo.java:804)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.mojo.exec.ExecMojo.executeCommandLine (ExecMojo.java:751)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.mojo.exec.ExecMojo.execute (ExecMojo.java:313)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)
   
   [2020-10-26T14:14:15.576Z]     at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)
   
   [2020-10-26T14:14:15.576Z]     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
   
   [2020-10-26T14:14:15.576Z]     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
   
   [2020-10-26T14:14:15.576Z]     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
   
   [2020-10-26T14:14:15.576Z]     at java.lang.reflect.Method.invoke (Method.java:498)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
   
   [2020-10-26T14:14:15.576Z]     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
   
   [2020-10-26T14:14:15.576Z] [INFO] ------------------------------------------------------------------------`
   
   Not exactly sure what went wrong ... this patch is not supposed to impact C client build (or test)..


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Oct/20 04:10;githubbot;600","hanm commented on pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515#issuecomment-722650296


   @eolivelli this is ready to merge now we finally get a green build.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Nov/20 21:17;githubbot;600","ztzg commented on pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515#issuecomment-732103840


   @hanm, @eolivelli: Should I take care of this?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 11:32;githubbot;600","eolivelli closed pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 11:53;githubbot;600","eolivelli commented on pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515#issuecomment-732115254


   thank you @ztzg for the remained. I have merged the patch.
   
   The original author was @lvfangmin 
   I have set @hanm and added a reference to @lvfangmin in the commit message.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 11:54;githubbot;600","ztzg commented on pull request #1515:
URL: https://github.com/apache/zookeeper/pull/1515#issuecomment-732293156


   @eolivelli: I did not mean to push you.  But, LGTM :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Nov/20 17:02;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,11400,,,0,11400,,,,,,,,,,,,,,ZOOKEEPER-4225,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 17 07:56:06 UTC 2022,,,,,,,,,,"0|z09huw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"20/Dec/19 19:19;lvfangmin;[~mirg] thanks for reporting this, always taking snapshot is not an ideal solution, which will cause long quorum unavailable time in case the snapshot is more than a few GB. 

Internally, we solved this issue via force cleaning the in-memory DB if the previous SNAP sync failed before persisted with NEWLEADER packet, I'll upstream our internal patch for this.;;;","12/Feb/20 23:02;lvfangmin;[~mirg] I've sent a PR for fixing this issue, please take a look when you have time.;;;","23/Nov/20 11:53;eolivelli;Issue resolved by pull request 1515
[https://github.com/apache/zookeeper/pull/1515];;;","17/May/22 07:56;symat;this is an important bugfix I want to push to the next 3.5 release. I'll cherry-pick and test this commit on branch-3.5.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
New ZOO_VERSION define breaks Perl & Python contribs,ZOOKEEPER-3641,13273291,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,ztzg,ztzg,09/Dec/19 09:22,10/Dec/19 11:22,13/Jul/23 09:08,10/Dec/19 11:21,3.6.0,,,,,,,,,3.6.0,,,,,c client,,,,0,pull-request-available,,"ZOOKEEPER-3635 changed the versioning scheme for the C client from integer-valued {{ZOO_\{MAJOR,MINOR,PATCH\}_VERSION}} definitions to a single string-valued {{#define ZOO_VERSION ""3.6.0""}}.

This causes the Perl and Python contribs to fail to build.

(I'm looking into it.)",,symat,ztzg,,,,,,,,,,,,,,,,,,"ztzg commented on pull request #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169
 
 
   [ZOOKEEPER-3635](https://issues.apache.org/jira/browse/ZOOKEEPER-3635) changed the versioning scheme for the C client from integer-valued `ZOO_{MAJOR,MINOR,PATCH}_VERSION` definitions to a single string-valued `#define ZOO_VERSION ""3.6.0""`.
   
   This caused the Perl and Python contribs to fail to build.  The attached patches should repair the issue.
   
   @eolivelli, @nkalmar: What do you think?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 09:57;githubbot;600","asf-ci commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563169398
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1698/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 10:33;githubbot;600","ztzg commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563266706
 
 
   Hi @eolivelli,
   
   (Github tells me you ""requested changes,"" but I cannot find review notes.  Is it only about the questions below, or am I missing something?)
   
   > My bad! I did not check the contrib modules!
   
   Right; this is bound to happen if they are not part of the release checklist.
   
   > Let's commit this fix and fix master branch.
   
   Okay :)
    
   > Is there any way to create a script (or use Maven) to build these modules in Travis?
   
   I suppose this is the ""change"" you are requesting?  I can have a look, but should such a thing not be done as another PR/ticket?  (I'm not familiar with the plumbing of the Apache/Maven CI, and have no idea of how many iterations it will require.)
   
   > It would be good to move this 'official' clients to the zookeeper-clients module and move them out of 'contrib'
   > I thought they were quite unused but id there is interested we should bring them to the front row together with the C client
   
   I am aware of some users of the ""official"" Perl client.  I don't know any users of the ""official"" Python client; most seem to be using [Kazoo](https://github.com/python-zk/kazoo) instead.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 14:36;githubbot;600","symat commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563280006
 
 
   > Is there any way to create a script (or use Maven) to build these modules in Travis?
   
   in https://github.com/apache/zookeeper/pull/1121 I did some changes to be able to build zkpython at least with ant (it broke after the ant removal). I think it would be relatively easy to implement the maven-based build jobs as well (at least for zkpython). Although I am not sure how long do we want to keep these contrib projects in the main ZooKeeper repo.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 15:04;githubbot;600","eolivelli commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563290813
 
 
   @nkalmar PTAL and merge if you approve this patch
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 15:25;githubbot;600","ztzg commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563294346
 
 
   > > Is there any way to create a script (or use Maven) to build these modules in Travis?
   > 
   > in #1121 I did some changes to be able to build zkpython at least with ant (it broke after the ant removal). I think it would be relatively easy to implement the maven-based build jobs as well (at least for zkpython).
   
   Right.  I can cargo-cult Maven stanzas, but I don't have the slightest idea of how to get ""native"" dependencies installed on build hosts at this point.
   
   I see this in the [build log](https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1698/consoleText):
   
       checking for perl... /usr/bin/perl
   
   and I suppose Python is there too—but I don't know if development headers are available.  I guess I could ""just try.""  But given a build host such as [Agent H14](https://builds.apache.org/computer/H14/), would you know if it is possible to retrieve a manifest of installed packages?
   
   > Although I am not sure how long do we want to keep these contrib projects in the main ZooKeeper repo.
   
   Note that @eolivelli was suggesting to *promote* them from `zookeeper-contrib/*` to `zookeeper-client/*`, not to get rid of them :)
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 15:33;githubbot;600","eolivelli commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563314230
 
 
   It is better to use Travis.
   With travis you can install your dependencies, like we do for cppunit
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 16:18;githubbot;600","ztzg commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563325788
 
 
   Okay—noted!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Dec/19 16:43;githubbot;600","asfgit commented on pull request #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/19 11:20;githubbot;600","nkalmar commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563988994
 
 
   Thanks @ztzg , merged to master (3.6.0)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/19 11:21;githubbot;600","nkalmar commented on issue #1169: ZOOKEEPER-3641: New ZOO_VERSION define breaks Perl & Python contribs
URL: https://github.com/apache/zookeeper/pull/1169#issuecomment-563988994
 
 
   Thanks @ztzg , merged to master (3.6.0)
   
   The travis integration can be done in a separate Jira.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Dec/19 11:22;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Dec 09 15:00:35 UTC 2019,,,,,,,,,,"0|z09grc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Dec/19 15:00;symat;nice catch!

FYI: I had to change a few things in ZOOKEEPER-3567 (https://github.com/apache/zookeeper/pull/1121) in order to make the python code to build (e.g. after the ant removal). Although I don't think it is related to the version definitions.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AdminServer commands throw NPE when only secure client port is used,ZOOKEEPER-3633,13271261,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,symat,symat,symat,28/Nov/19 16:08,14/Feb/20 15:23,13/Jul/23 09:08,03/Dec/19 09:02,3.5.5,3.5.6,,,,,,,,3.5.7,3.6.0,,,,,,,,0,pull-request-available,,"*thanks for Mike Smotritsky for reporting this bug!*

when only secureClientPort is defined in the config and there is no regular clientPort, then both the {{stat}} and the {{conf}} commands result in 500 Server Error caused by NullPointerExceptions. The problem is that no {{serverCnxFactory}} is defined in the {{ZooKeeperServer}} in this case, we have only {{secureServerCnxnFactory}}.

see the attached stacktraces about the exceptions (reproduced on the current master branch)

The stat and conf admin commands should actually provide info about both secure and unsecure connections, and should handle the case when any of these are missing.",,symat,,,,,,,,,,,,,,,,,,,"symat commented on pull request #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161
 
 
   When only secureClientPort is defined in the config and there is no regular clientPort,
   then both the stat and the conf commands result in 500 Server Error caused by
   NullPointerExceptions. The problem is that no serverCnxFactory is defined in the
   ZooKeeperServer in this case, we have only secureServerCnxnFactory.
   
   In the fix we return info about both the secure and unsecure connections.
   Example of the stat command output for secure-only configuration:
   ```
   {
     ""version"" : ""3.6.0-SNAPSHOT-8e8905069f4bff670c0492fe9e28ced0f86bca00, built on 11/29/2019 08:04 GMT"",
     ""read_only"" : false,
     ""server_stats"" : {
       ""packets_sent"" : 1,
       ""packets_received"" : 1,
       ""fsync_threshold_exceed_count"" : 0,
       ""client_response_stats"" : {
         ""last_buffer_size"" : -1,
         ""min_buffer_size"" : -1,
         ""max_buffer_size"" : -1
       },
       ""data_dir_size"" : 671094270,
       ""log_dir_size"" : 671094270,
       ""last_processed_zxid"" : 20,
       ""outstanding_requests"" : 0,
       ""server_state"" : ""standalone"",
       ""avg_latency"" : 5.0,
       ""max_latency"" : 5,
       ""min_latency"" : 5,
       ""num_alive_client_connections"" : 1,
       ""provider_null"" : false,
       ""uptime"" : 15020
     },
     ""client_response"" : {
       ""last_buffer_size"" : -1,
       ""min_buffer_size"" : -1,
       ""max_buffer_size"" : -1
     },
     ""node_count"" : 6,
     ""connections"" : [ ],
     ""secure_connections"" : [ {
       ""remote_socket_address"" : ""127.0.0.1:57276"",
       ""interest_ops"" : 1,
       ""outstanding_requests"" : 0,
       ""packets_received"" : 1,
       ""packets_sent"" : 1
     } ],
     ""command"" : ""stats"",
     ""error"" : null
   }
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Nov/19 08:22;githubbot;600","asf-ci commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-559712012
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1667/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Nov/19 08:56;githubbot;600","eolivelli commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-560013097
 
 
   Thank you @symat!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Nov/19 19:12;githubbot;600","asfgit commented on pull request #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 09:01;githubbot;600","nkalmar commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-561067619
 
 
   Merged to master (3.6.0), thanks @symat !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 09:01;githubbot;600","eolivelli commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-561158359
 
 
   @nkalmar we should cherry pick to 3.5 as well, do you agree?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 13:06;githubbot;600","nkalmar commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-561200496
 
 
   @eolivelli sure, it just didn't rebase clean to 3.5, and saw in the jira it was meant to be fixed in 3.6.
   But makes sense, I merged to 3.5 after fixing it up.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 14:48;githubbot;600","symat commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-561205072
 
 
   I am also happy to rebase it, let me know if you don't have time
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 14:58;githubbot;600","symat commented on issue #1161: ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used
URL: https://github.com/apache/zookeeper/pull/1161#issuecomment-561242716
 
 
   oh, never mind... I see you did it :)
   thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 16:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Nov/19 16:07;symat;npe.txt;https://issues.apache.org/jira/secure/attachment/12987081/npe.txt",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2019-11-28 16:08:11.0,,,,,,,,,,"0|z0948o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZKConfig fails to return proper value on getBoolean() when user accidentally includes spaces at the end of the value,ZOOKEEPER-3613,13267793,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sujithsimon22,scott.guminy@syncsort.com,scott.guminy@syncsort.com,12/Nov/19 18:14,14/Feb/20 15:23,13/Jul/23 09:08,20/Jan/20 08:10,3.5.5,,,,,,,,,3.5.7,3.6.0,3.7.0,,,server,,,,0,pull-request-available,,"I was using ZooKeeper client in WebSphere Liberty and attempting to configure SSL/TLS for client connections.

To do so, I must add the system property {{zookeeper.client.secure=true}}.  In WebSphere Liberty, java system properties are placed in a file called bootstrap.properties - each property on a separate line.  I accidentally added a space at the end of the line.  When {{ZKConfig.getBoolean()}} attempted to convert this string to a {{boolean}}, it returned {{false}} due to the space at the end.

{{ZKConfig.getBoolean()}} should trim the string before attempting to convert to a boolean.",,arshad.mohammad,maoling,scott.guminy@syncsort.com,sujithsimon22,,,,,,,,,,,,,,,,"sujithsimon22 commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Dec/19 09:12;githubbot;600","arshadmohammad commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r361331795
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
 
 Review comment:
   I think this is not required. you can delete it . init method also can be deleted.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Dec/19 18:29;githubbot;600","arshadmohammad commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r361331900
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
+    X509Util x509Util;
+    @Rule
+    public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);
+
+    @BeforeClass
+    public static void init() {
+        if (!testData.exists()) {
+            testData.mkdirs();
+        }
+    }
+
+    // property is not set we should get the default value
+    @Test
+    public void testBooleanRetrievalFromPropertyDefault() {
+        ZKConfig conf = new ZKConfig();
+        String prop = ""UnSetProperty"" + System.currentTimeMillis();
+        boolean defaultValue = false;
+        boolean result = conf.getBoolean(prop, defaultValue);
+        assertEquals(defaultValue, result);
+    }
+
+    // property is set to an valid boolean, we should get the set value
+    @Test
+    public void testBooleanRetrievalFromProperty() {
+        boolean value = true;
+        boolean defaultValue = false;
+        x509Util = new ClientX509Util();
+        System.setProperty(x509Util.getSslProtocolProperty(), Boolean.toString(value));
+        ZKConfig conf = new ZKConfig();
+        boolean result = conf.getBoolean(x509Util.getSslProtocolProperty(), defaultValue);
+        assertEquals(value, result);
+        System.clearProperty(x509Util.getSslProtocolProperty());
 
 Review comment:
   Clear properties in tearDown method
   @After    
   public void tearDown() throws Exception {       }
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Dec/19 18:34;githubbot;600","sujithsimon22 commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r364641702
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
 
 Review comment:
   Done, thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/20 09:43;githubbot;600","sujithsimon22 commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#discussion_r364641959
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/common/ZKConfigTest.java
 ##########
 @@ -0,0 +1,107 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper.common;
+
+
+import static org.junit.Assert.assertEquals;
+import java.io.File;
+import java.util.concurrent.TimeUnit;
+import org.junit.BeforeClass;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.rules.Timeout;
+
+
+
+public class ZKConfigTest {
+
+    private static final File testData = new File(System.getProperty(""test.data.dir"", ""src/test/resources/data""));
+    X509Util x509Util;
+    @Rule
+    public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);
+
+    @BeforeClass
+    public static void init() {
+        if (!testData.exists()) {
+            testData.mkdirs();
+        }
+    }
+
+    // property is not set we should get the default value
+    @Test
+    public void testBooleanRetrievalFromPropertyDefault() {
+        ZKConfig conf = new ZKConfig();
+        String prop = ""UnSetProperty"" + System.currentTimeMillis();
+        boolean defaultValue = false;
+        boolean result = conf.getBoolean(prop, defaultValue);
+        assertEquals(defaultValue, result);
+    }
+
+    // property is set to an valid boolean, we should get the set value
+    @Test
+    public void testBooleanRetrievalFromProperty() {
+        boolean value = true;
+        boolean defaultValue = false;
+        x509Util = new ClientX509Util();
+        System.setProperty(x509Util.getSslProtocolProperty(), Boolean.toString(value));
+        ZKConfig conf = new ZKConfig();
+        boolean result = conf.getBoolean(x509Util.getSslProtocolProperty(), defaultValue);
+        assertEquals(value, result);
+        System.clearProperty(x509Util.getSslProtocolProperty());
 
 Review comment:
   Done, thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/20 09:43;githubbot;600","arshadmohammad commented on issue #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190#issuecomment-575471237
 
 
   +1
   I will merge it in master branch-3.6 and branch-3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/20 05:30;githubbot;600","asfgit commented on pull request #1190: ZOOKEEPER-3613: ZKConfig fails to return proper value on getBoolean()when user accidentally includes spaces at the end of the value
URL: https://github.com/apache/zookeeper/pull/1190
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jan/20 08:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jan 20 08:10:25 UTC 2020,,,,,,,,,,"0|z08iug:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"13/Nov/19 08:14;maoling;[~scott.guminy@syncsort.com]

Could you plz help us fix this issue?

the contributor guideline is [here]
(https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute]);;;","19/Dec/19 06:21;sujithsimon22;I can take up this issue;;;","20/Jan/20 08:10;arshad.mohammad;Issue resolved by pull request 1190
[https://github.com/apache/zookeeper/pull/1190];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZOOKEEPER-3242 add a connection throttle. Default constructor needs to set it,ZOOKEEPER-3605,13265895,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,randgalt,randgalt,02/Nov/19 14:18,06/Nov/19 19:09,13/Jul/23 09:08,06/Nov/19 14:21,3.6.0,,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,ZOOKEEPER-3242 add a connection throttle. It gets set in the main constructor but not the alternate constructor. This is breaking Apache Curator's testing framework. It should also be set in the alternate constructor to avoid an NPE.,,eolivelli,hudson,randgalt,,,,,,,,,,,,,,,,,"Randgalt commented on pull request #1132: ZOOKEEPER-3605 - connThrottle needs to be assigned in alternate consructor
URL: https://github.com/apache/zookeeper/pull/1132
 
 
   `connThrottle` needs to be assigned in alternate consructor to avoid NPEs
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Nov/19 14:20;githubbot;600","Randgalt commented on issue #1132: ZOOKEEPER-3605 - connThrottle needs to be assigned in alternate consructor
URL: https://github.com/apache/zookeeper/pull/1132#issuecomment-549083682
 
 
   @eolivelli test added
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Nov/19 21:40;githubbot;600","Randgalt commented on issue #1132: ZOOKEEPER-3605 - connThrottle needs to be assigned in alternate consructor
URL: https://github.com/apache/zookeeper/pull/1132#issuecomment-550300292
 
 
   @anmolnar 
   
   - I moved the assignment to the field declaration
   - ""We only use the default constructor in tests. Is it valid that's part of the public API?"" - Curator uses it for its Testing module (which is used more than Curator itself). So, it's part of the public API for testing anyway.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 13:05;githubbot;600","asfgit commented on pull request #1132: ZOOKEEPER-3605 - connThrottle needs to be assigned in alternate consructor
URL: https://github.com/apache/zookeeper/pull/1132
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Nov/19 14:21;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Nov 06 19:09:28 UTC 2019,,,,,,,,,,"0|z0874o:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Nov/19 14:21;eolivelli;Issue resolved by pull request 1132
[https://github.com/apache/zookeeper/pull/1132];;;","06/Nov/19 18:44;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #601 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/601/])
ZOOKEEPER-3605: connThrottle needs to be assigned in alternate (enrico.olivelli: rev e41cac853de416026e0c2011e0429e858e5823b8)
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerCreationTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
;;;","06/Nov/19 19:09;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #762 (See [https://builds.apache.org/job/ZooKeeper-trunk/762/])
ZOOKEEPER-3605: connThrottle needs to be assigned in alternate (enrico.olivelli: rev e41cac853de416026e0c2011e0429e858e5823b8)
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerCreationTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system variable,ZOOKEEPER-3590,13263855,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,aristotelhs,aristotelhs,22/Oct/19 17:59,14/Feb/20 15:23,13/Jul/23 09:08,22/Nov/19 22:43,3.5.6,,,,,,,,,3.5.7,3.6.0,,,,java client,,,,0,pull-request-available,,"After some reworking on the Zookeeper Sasl implementation (https://issues.apache.org/jira/browse/ZOOKEEPER-3156) the knob of zookeeper.sasl.client.canonicalize.hostname was introduced in order to disable the host name canonicalization. However in ZKClientConfig in handleBackwardCompatibility() this option is not included, which I assume is due to omission. This creates an issue if the zookeeper library is hidden behind another library that does provide an interface to change this value.

Therefore it should also be set by the system properties like the rest of the variables.",,andor,aristotelhs,,,,,,,,,,,,,,,,,,"aristotelhs commented on pull request #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124
 
 
   See https://issues.apache.org/jira/browse/ZOOKEEPER-3590
   
   This is a very small patch that gives sets the option after reading it from the system.getProperty(). 
   
   There should not be any side effects since this is mostly copy paste.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 18:15;githubbot;600","eolivelli commented on issue #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124#issuecomment-545122585
 
 
   Looks good.
   Thank you for providing this patch.
   I guess you would like to see in in 3.5.x, is that correct?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 19:44;githubbot;600","aristotelhs commented on issue #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124#issuecomment-545123556
 
 
   Yes, besides master I think it is suitable for 3.5.x
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 19:47;githubbot;600","asfgit commented on pull request #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/19 22:42;githubbot;600","anmolnar commented on issue #1124: ZOOKEEPER-3590: Zookeeper is unable to set the zookeeper.sasl.client.canonicalize.hostname using system property
URL: https://github.com/apache/zookeeper/pull/1124#issuecomment-557721665
 
 
   Merged to both. Thanks @aristotelhs !
   Please pick up the Jira.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/19 22:43;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3000,,,0,3000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Nov 22 22:43:14 UTC 2019,,,,,,,,,,"0|z07ujc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Nov/19 22:43;andor;Issue resolved by pull request 1124
[https://github.com/apache/zookeeper/pull/1124];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handle NPE gracefully when the watch parameter of zookeeper java client is null,ZOOKEEPER-3579,13262136,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,tison,maoling,maoling,14/Oct/19 10:47,28/Mar/21 08:54,13/Jul/23 09:08,16/Apr/20 10:52,,,,,,,,,,3.7.0,,,,,java client,,,,1,pull-request-available,,"When we use the native java client
{code:java}
try {
  zk = new ZooKeeper(connectString, (int) sessionTimeout, null);
} catch (IOException e) {
  throw new DBException(""Creating connection failed."");
}
{code}
We will get the following, this issue had existed in all the zookeeper releases for a long time
{code:java}
2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcher2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)2019-10-14 18:41:50 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)
{code}",,maoling,symat,tison,,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1119: ZOOKEEPER-3579: Exclude defaultWatcher if it is not set from WatcherSetEventPair
URL: https://github.com/apache/zookeeper/pull/1119
 
 
   See also https://issues.apache.org/jira/browse/ZOOKEEPER-3579
   
   Prevent error logs noise like
   
   >2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcher2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)2019-10-14 18:41:50 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:20;githubbot;600","TisonKun commented on pull request #1119: ZOOKEEPER-3579: Exclude defaultWatcher if it is not set from WatcherSetEventPair
URL: https://github.com/apache/zookeeper/pull/1119
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:22;githubbot;600","TisonKun commented on issue #1119: ZOOKEEPER-3579: Exclude defaultWatcher if it is not set from WatcherSetEventPair
URL: https://github.com/apache/zookeeper/pull/1119#issuecomment-542208898
 
 
   I have another thought. Wait a minute.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:22;githubbot;600","TisonKun commented on pull request #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120
 
 
   See also https://issues.apache.org/jira/browse/ZOOKEEPER-3579
   
   Prevent error logs noise like
   
   >2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcher2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)2019-10-14 18:41:50 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:26;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-542212460
 
 
   Although the solution in https://github.com/apache/zookeeper/pull/1119/files can also resolve this issue since in other case we exclude null defaultWatcher like in `exists`
   
   ```java
   // the watch contains the un-chroot path
           WatchRegistration wcb = null;
           if (watcher != null) {
               wcb = new ExistsWatchRegistration(watcher, clientPath);
           }
   ```
   
   this pull request follows a self-reasoned style that we ensure we never process a null defaultWatcher. Although it introduces a dummy process cycle I don't think it matters too much.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:30;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-542222006
 
 
   With current codebase it seems https://github.com/apache/zookeeper/pull/1119/files is more reasonable since when calling `exists(..., true)` and defaultWatcher is null, it prevents register dummy watcher for it. But in that case we silence on not register watcher when set `watcher == true`.
   
   It might be better to revisit what `defaultWatcher` used which I think only used for react to connection event. Confused to be used for exists `defaultWatcher`...User can always keep a default watcher for `exists` in their own scope.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:50;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-542222006
 
 
   With current codebase it seems https://github.com/apache/zookeeper/pull/1119/files is more reasonable since when calling `exists(..., true)` and defaultWatcher is null, it prevents register dummy watcher for it. But in that case we silence on not register watcher when set `watcher == true`.
   
   It might be better to revisit what `defaultWatcher` used which I think only used for react to connection event(before any requests). Confused to be used for exists `defaultWatcher`...User can always keep a default watcher for `exists` in their own scope.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Oct/19 13:51;githubbot;600","maoling commented on issue #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-544325713
 
 
   - Is there any possibility that you can provide a unit case to cover this?
   - When users set watch is null(`zk = new ZooKeeper(connectString, (int) sessionTimeout, null)`)  means that they only needs base read/write operation without watch feature. After applying this patch, what's the following behavior will be? 
   ` data = zk.getData(path, true, stat);`
   just a quick comment 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Oct/19 02:34;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-544775518
 
 
   Thanks for your review, I will try to back to the original way and find if there is a better solution. Will updates in today.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Oct/19 01:45;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Initialize defaultWatcher as dummy watcher to prevent it from NPE
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-545249684
 
 
   Hi @maoling & @eolivelli I updated the pull request.
   
   @maoling I'm afraid we'd better avoid adding a test for logging and the NPE already swallow. Fortunately the behavior is easy to reason so that we're able to ensure that null default watcher excluded from watcher triggered set. (For any operation, it is filtered by null checker, see also #exist and so on; for `EventType.None`, it is filtered by our added null checker)
   
   @eolivelli here comes a point that null default watcher is a business null which means user doesn't want to set a context watcher...so that either we tolerate a dummy watcher for each trigger to make it non-null or we do null checking.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Oct/19 03:31;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-545250253
 
 
   Besides, it is effectively final since we set it exactly once, although the initialization are separated as
   
   ```java
   watchManager = defaultWatchManager();
   watchManager.defaultWatcher = watcher;
   ```
   
   we can do further factor but let's do it as a follow up.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Oct/19 03:33;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-545250253
 
 
   Besides, it is effectively final since we set it exactly once, although the initialization are separated as
   
   ```java
   watchManager = defaultWatchManager();
   watchManager.defaultWatcher = watcher;
   ```
   
   we can do further refactor but let's do it as a follow up.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Oct/19 03:34;githubbot;600","anmolnar commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-560018065
 
 
   @TisonKun @maoling Tbh I don't really understand how that WatchManager works and what's the point of `defaultWatcher`? That's the watcher which the user defines when first instantiates the client. Is that right?
   And this (bad) behaviour gets triggered when the user provides `null` as defaultWatcher?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Nov/19 20:23;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-560048732
 
 
   @anmolnar yes and if user doesn't provides defaultWatcher. The default is `null`. We can make it non-null by setting as dummy watcher but it will cause cycles always trigger a dummy watcher.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Dec/19 03:37;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-560048732
 
 
   @anmolnar yes. We can make it non-null by setting as dummy watcher but it will cause cycles always trigger a dummy watcher.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/19 02:45;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-560048732
 
 
   @anmolnar yes. We can make it non-null by setting as dummy watcher but it will cause cycles always trigger a dummy watcher. Or we can just check not null when constructing `ZooKeeper` Object and fail if user provide `null` watcher.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Dec/19 02:45;githubbot;600","maoling commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-583222885
 
 
   @TisonKun Can we move on?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Feb/20 03:55;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-589461496
 
 
   @maoling  sure! I'm back to this issue and will work on it now.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/20 01:57;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-589477777
 
 
   @maoling @anmolnar @eolivelli I just have an easy solution to prevent the NPE error that filter out null watchers before we actually add it to the result set . Please review if you have time :-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/20 03:13;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-589477777
 
 
   @maoling @anmolnar @eolivelli I just have an easy solution to prevent the NPE error that filter out null default watcher before we actually add it to the result set . Please review if you have time :-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Feb/20 03:13;githubbot;600","maoling commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-596068723
 
 
   - Yes, it works well to fix that issue. I test it. +1
   - Further, just as I said previously, when users call api like this:
   ```
   zk = new ZooKeeper(connectString, sessionTimeout, null); 
   data = zk.getData(path, true, stat);
   ```
   `getData` should throw an exception to tell users flag can't be true when default watch they don't set
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 09:51;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-596072497
 
 
   Thanks for your review @maoling ! I push a follow-up commit https://github.com/apache/zookeeper/pull/1120/commits/9e47bcf3973597cc8a7c1cba819875a3a53937ac to address your comment. Yes I think it should throw an exception.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/20 10:29;githubbot;600","maoling commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-605744436
 
 
   Is it easy to add an unit case to assert the change of these getData, exist .......?
   ```
   zk = new ZooKeeper(connectString, sessionTimeout, null); 
   data = zk.getData(path, true, stat);
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 02:07;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-605749364
 
 
   > Is it easy to add an unit case to assert the change of these getData, exist .......?
   > 
   > ```
   > zk = new ZooKeeper(connectString, sessionTimeout, null); 
   > data = zk.getData(path, true, stat);
   > ```
   
   I've pushed a new commit for it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Mar/20 02:28;githubbot;600","eolivelli commented on pull request #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#discussion_r406742469
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
 ##########
 @@ -3398,6 +3403,26 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         }
     }
 
+    /**
+     * Return the default watcher of this instance if requested.
+     *
+     * @param requested if the default watcher requested
+     * @return the default watcher if request, otherwise {@code null}.
+     * @throws IllegalStateException if a null default watcher is requested
+     */
+    @Nullable
+    private Watcher requestDefaultWatcher(boolean requested) {
 
 Review comment:
   I would name this method
   getDefaultWatcher
   and the parameter 'required'
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 12:49;githubbot;600","eolivelli commented on pull request #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#discussion_r406742609
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
 ##########
 @@ -3398,6 +3403,26 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         }
     }
 
+    /**
+     * Return the default watcher of this instance if requested.
+     *
+     * @param requested if the default watcher requested
+     * @return the default watcher if request, otherwise {@code null}.
+     * @throws IllegalStateException if a null default watcher is requested
+     */
+    @Nullable
 
 Review comment:
   I am not sure about this.
   Are we using it in ZK?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 12:49;githubbot;600","TisonKun commented on pull request #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#discussion_r406745421
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
 ##########
 @@ -3398,6 +3403,26 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         }
     }
 
+    /**
+     * Return the default watcher of this instance if requested.
+     *
+     * @param requested if the default watcher requested
+     * @return the default watcher if request, otherwise {@code null}.
+     * @throws IllegalStateException if a null default watcher is requested
+     */
+    @Nullable
+    private Watcher requestDefaultWatcher(boolean requested) {
 
 Review comment:
   Done.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 12:56;githubbot;600","TisonKun commented on pull request #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#discussion_r406745940
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
 ##########
 @@ -3398,6 +3403,26 @@ private ClientCnxnSocket getClientCnxnSocket() throws IOException {
         }
     }
 
+    /**
+     * Return the default watcher of this instance if requested.
+     *
+     * @param requested if the default watcher requested
+     * @return the default watcher if request, otherwise {@code null}.
+     * @throws IllegalStateException if a null default watcher is requested
+     */
+    @Nullable
 
 Review comment:
   I do a global check and find there isn't anywhere else using it. Possibly annotate `@Nullable` is a good idea which helps notify users taking care of nullable value but let's discuss in another thread.
   
   In short, reverted.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Apr/20 12:58;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-612278234
 
 
   Thanks for your review @eolivelli !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Apr/20 00:24;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-613981877
 
 
   @symat @anmolnar could you have a look at this PR?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Apr/20 11:28;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-614508497
 
 
   Thanks for your review @christ @symat !
   
   @symat javadoc updated. Good catch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 08:49;githubbot;600","ctubbsii commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-614545217
 
 
   > Thanks for your review @christ @symat !
   
   FWIW, I am @ctubbsii ; @christ is a different person. :smiley_cat: 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 09:57;githubbot;600","TisonKun commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-614562444
 
 
   > > Thanks for your review @christ @symat !
   > 
   > FWIW, I am @ctubbsii ; @christ is a different person. 😺
   
   Aha. Sorry that I don't check it accurate >_<
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 10:29;githubbot;600","symat commented on issue #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120#issuecomment-614566546
 
 
   I'll merge this to master
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 10:36;githubbot;600","asfgit commented on pull request #1120: ZOOKEEPER-3579: Handle null default watcher gracefully
URL: https://github.com/apache/zookeeper/pull/1120
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Apr/20 10:51;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,20400,,,0,20400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Apr 16 11:06:16 UTC 2020,,,,,,,,,,"0|z07keg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Oct/19 11:47;tison;Nice catch [~maoling]. I think it can be resolved by filtering out null default watcher in {{ClientWatchManager#materialize}}. Would you like to send a pull request to it?;;;","15/Oct/19 02:37;tison;It happens I have spare time to keep on working this issue. I will take this one hours later if the original reporter doesn't take it.;;;","15/Oct/19 09:38;maoling;[~tison] 

Thanks a lot.Pleas go ahead.;;;","16/Apr/20 10:52;symat;Issue resolved by pull request 1120
[https://github.com/apache/zookeeper/pull/1120];;;","16/Apr/20 10:54;symat;thanks [~maoling] for reporting the issue and thanks [~tison] for the fix!
I merged PR  https://github.com/apache/zookeeper/pull/1120 to the master branch.;;;","16/Apr/20 11:06;tison;Thanks for reviewing and merging [~symat]!;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
dependency check failing on 3.4 and 3.5 branches - CVE-2019-16869 on Netty,ZOOKEEPER-3563,13259737,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,,phunt,phunt,30/Sep/19 18:25,16/Oct/19 18:59,13/Jul/23 09:08,08/Oct/19 13:17,3.4.14,3.5.5,,,,,,,,3.5.6,3.6.0,,,,security,,,,0,pull-request-available,,"The mvn dependency check is failing on 3.4 and 3.5:

3.4:
[ERROR] netty-3.10.6.Final.jar: CVE-2019-16869

3.5:
[ERROR] netty-transport-4.1.29.Final.jar: CVE-2019-16869
",,andor,hudson,,,,,,,,,,,,,,,,,,"phunt commented on pull request #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102
 
 
   …E-2019-16869 on Netty
   
   Updated netty to 4.1.42.Final to address CVE-2019-16869
   
   Change-Id: Ia14d695815143cdfcda1d2efcc0d83211cb356dd
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Sep/19 23:45;githubbot;600","phunt commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-536797180
 
 
   Tests passed for me on my Mac.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Sep/19 23:45;githubbot;600","phunt commented on pull request #1103: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1103
 
 
   …E-2019-16869 on Netty
   
   Updated netty to 4.1.42.Final to address CVE-2019-16869
   
   Change-Id: Ie95c38a459fb896566ddf7b5df38180bfee7c07c
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Sep/19 23:46;githubbot;600","phunt commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-537060830
 
 
   @eolivelli I didn't notice the snapshot being committed - what's up with that? Is it a known issue or should I enter a jira? (should new/modified files be in target directory?)
   
   I'll commit an updated patch momentarily.
   
   trunk is on a newer version (but not newest) of netty for some reason compared with 3.5 - not sure why that is but probably not a good idea. That said it seems like if this is a new issue owasp should be flagging, however I did see some back/forth upstream about what version of netty this impacted. Regardless I figured we just update to the very latest netty available.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Oct/19 14:24;githubbot;600","eolivelli commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-537090502
 
 
   @phunt I think we should log a JIRA for the snapshot file. But I did not track down to the root cause, it happens when you are switching from one branch to the other one (I don't know the sequence).
   
   We should update to latest netty master branch.
   Shall we do it in the context of this JIRA ? can you provide a patch for master branch please ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Oct/19 15:26;githubbot;600","phunt commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-537104547
 
 
   I will create a separate jira for the snapfile issue.
   
   PR already filed for master: #1103 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Oct/19 15:57;githubbot;600","phunt commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-537106078
 
 
   snapfile: https://issues.apache.org/jira/browse/ZOOKEEPER-3565
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Oct/19 16:01;githubbot;600","asfgit commented on pull request #1103: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1103
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/19 13:39;githubbot;600","nkalmar commented on issue #1103: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1103#issuecomment-537950098
 
 
   Pushed to master (a flaky failed on ant, maven passed)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/19 13:40;githubbot;600","nkalmar commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-537951120
 
 
   Merged to 3.5 and 3.5.6 branch. Thanks @phunt , ping @eolivelli 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/19 13:42;githubbot;600","nkalmar commented on pull request #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/19 13:42;githubbot;600","eolivelli commented on issue #1102: ZOOKEEPER-3563: dependency check failing on 3.4 and 3.5 branches - CV…
URL: https://github.com/apache/zookeeper/pull/1102#issuecomment-537952954
 
 
   Thanks @nkalmar 
   I will create a new RC during the weekend
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Oct/19 13:47;githubbot;600","eolivelli commented on pull request #1111: ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files
URL: https://github.com/apache/zookeeper/pull/1111
 
 
   Fix licence files not changed in 874aaf136ccda2759cc61f4c48ff9d15f6433e07 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Oct/19 17:58;githubbot;600","eolivelli commented on issue #1111: ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files
URL: https://github.com/apache/zookeeper/pull/1111#issuecomment-539132291
 
 
   Please cherry pick to branch-3.5 and branch-3.5.6
   
   @phunt @nkalmar or @anmolnar or any other committer
   
   I will send out a new 3.5.6 RC4 as soon as this patch lands to 3.5.6 branch
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Oct/19 17:59;githubbot;600","eolivelli commented on issue #1111: ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files
URL: https://github.com/apache/zookeeper/pull/1111#issuecomment-539373653
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 07:07;githubbot;600","asfgit commented on pull request #1111: ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files
URL: https://github.com/apache/zookeeper/pull/1111
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 13:16;githubbot;600","anmolnar commented on issue #1111: ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files
URL: https://github.com/apache/zookeeper/pull/1111#issuecomment-539508598
 
 
   All done.
   Thanks @eolivelli !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 13:17;githubbot;600","eolivelli commented on issue #1111: ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files
URL: https://github.com/apache/zookeeper/pull/1111#issuecomment-539509058
 
 
   Thank you @anmolnar 
   I will cut the new release tonight
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 13:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Oct 08 17:33:03 UTC 2019,,,,,,,,,,"0|z07600:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/Sep/19 23:50;phunt;I submitted patches for 3.5 and trunk. 3.4 is currently on 3.10.6.Final which is very different base vs 4.1 (current dev line for netty). Someone would need to backport what we did for 3.5/trunk if we want to fix that.
;;;","01/Oct/19 00:12;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4169//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4169//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4169//console

This message is automatically generated.;;;","01/Oct/19 14:52;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4175//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4175//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4175//console

This message is automatically generated.;;;","03/Oct/19 15:25;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #560 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/560/])
ZOOKEEPER-3563: Update Netty to address CVE-2019-16869 (nkalmar: rev 874aaf136ccda2759cc61f4c48ff9d15f6433e07)
* (edit) build.xml
* (edit) pom.xml
;;;","03/Oct/19 16:00;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #722 (See [https://builds.apache.org/job/ZooKeeper-trunk/722/])
ZOOKEEPER-3563: Update Netty to address CVE-2019-16869 (nkalmar: rev 874aaf136ccda2759cc61f4c48ff9d15f6433e07)
* (edit) pom.xml
* (edit) build.xml
;;;","08/Oct/19 13:17;andor;Issue resolved by pull request 1111
[https://github.com/apache/zookeeper/pull/1111];;;","08/Oct/19 15:15;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #566 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/566/])
ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files (andor: rev 2dcb5e799ec02a2c6a6c7bad80c47169dc095271)
* (add) zookeeper-server/src/main/resources/lib/netty-buffer-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-codec-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-transport-native-epoll-4.1.42.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-transport-native-unix-common-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-transport-native-epoll-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-handler-4.1.42.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-resolver-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-transport-native-unix-common-4.1.29.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-buffer-4.1.29.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-transport-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-transport-4.1.42.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-common-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-handler-4.1.29.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-resolver-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-codec-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-common-4.1.29.Final.LICENSE.txt
;;;","08/Oct/19 17:33;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #728 (See [https://builds.apache.org/job/ZooKeeper-trunk/728/])
ZOOKEEPER-3563: Update Netty to 4.1.42.Final - fix license files (andor: rev 2dcb5e799ec02a2c6a6c7bad80c47169dc095271)
* (delete) zookeeper-server/src/main/resources/lib/netty-handler-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-transport-native-epoll-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-transport-native-unix-common-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-handler-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-transport-4.1.29.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-resolver-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-transport-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-transport-native-epoll-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-codec-4.1.42.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-common-4.1.42.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-resolver-4.1.42.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-buffer-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-codec-4.1.29.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-common-4.1.29.Final.LICENSE.txt
* (add) zookeeper-server/src/main/resources/lib/netty-transport-native-unix-common-4.1.42.Final.LICENSE.txt
* (delete) zookeeper-server/src/main/resources/lib/netty-buffer-4.1.29.Final.LICENSE.txt
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Jackson to 2.9.10,ZOOKEEPER-3559,13258876,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,coheigea,coheigea,coheigea,25/Sep/19 18:37,16/Oct/19 18:59,13/Jul/23 09:08,27/Sep/19 11:22,,,,,,,,,,3.5.6,3.6.0,,,,,,,,0,pull-request-available,,Jackson should be updated to the latest version to pick up a fix for CVE-2019-14540,,coheigea,hudson,,,,,,,,,,,,,,,,,,"coheigea commented on pull request #1097: ZOOKEEPER-3559 - Update Jackson to 2.9.10
URL: https://github.com/apache/zookeeper/pull/1097
 
 
   Jackson should be updated to the latest version to pick up a fix for CVE-2019-14540
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 18:38;githubbot;600","maoling commented on issue #1097: ZOOKEEPER-3559 - Update Jackson to 2.9.10
URL: https://github.com/apache/zookeeper/pull/1097#issuecomment-535297398
 
 
   Link to [CVE-2019-14540](https://nvd.nist.gov/vuln/detail/CVE-2019-14540) 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 02:03;githubbot;600","coheigea commented on issue #1097: ZOOKEEPER-3559 - Update Jackson to 2.9.10
URL: https://github.com/apache/zookeeper/pull/1097#issuecomment-535426868
 
 
   @eolivelli Done, although ""ant tar"" fails due to what looks like a Jetty dependency issue.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 09:44;githubbot;600","eolivelli commented on issue #1097: ZOOKEEPER-3559 - Update Jackson to 2.9.10
URL: https://github.com/apache/zookeeper/pull/1097#issuecomment-535838613
 
 
   Thank you @maoling  for checkin and reporting the usage in HBase
   
   @nkalmar  o @anmolnar please take a look merge and cherry pick to branch-3.5 (and branch-3.5.6)
   
   I would like to cut the new 3.5.6 RC during this weekend
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/19 08:07;githubbot;600","asfgit commented on pull request #1097: ZOOKEEPER-3559 - Update Jackson to 2.9.10
URL: https://github.com/apache/zookeeper/pull/1097
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/19 11:18;githubbot;600","nkalmar commented on issue #1097: ZOOKEEPER-3559 - Update Jackson to 2.9.10
URL: https://github.com/apache/zookeeper/pull/1097#issuecomment-535899315
 
 
   Merged to master, branch-3.5 and branch-3.5.6
   Thanks @coheigea 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Sep/19 11:21;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Sep 27 15:10:48 UTC 2019,,,,,,,,,,"0|z070og:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Sep/19 14:45;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #552 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/552/])
ZOOKEEPER-3559: Update Jackson to 2.9.10 (nkalmar: rev 63a825372eaa745cf117f53b0f9b263a0db05a4f)
* (edit) build.xml
* (edit) pom.xml
;;;","27/Sep/19 15:10;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #714 (See [https://builds.apache.org/job/ZooKeeper-trunk/714/])
ZOOKEEPER-3559: Update Jackson to 2.9.10 (nkalmar: rev 63a825372eaa745cf117f53b0f9b263a0db05a4f)
* (edit) build.xml
* (edit) pom.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file",ZOOKEEPER-3552,13257753,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,eolivelli,eolivelli,eolivelli,19/Sep/19 18:13,16/Oct/19 18:58,13/Jul/23 09:08,20/Sep/19 08:20,3.5.6,,,,,,,,,3.5.6,,,,,build,c client,,,0,pull-request-available,,"During the Rc0 VOTE of 3.5.6 we found that the 'configure' file inside the source tarball does not have the right permissions.

",,eolivelli,,,,,,,,,,,,,,,,,,,"eolivelli commented on pull request #1093: ZOOKEEPER-3552 Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file
URL: https://github.com/apache/zookeeper/pull/1093
 
 
   Remove explicit permissions for the binary tarbal, this way Maven will pick up the current file permissions.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Sep/19 18:16;githubbot;600","eolivelli commented on issue #1093: ZOOKEEPER-3552 Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file
URL: https://github.com/apache/zookeeper/pull/1093#issuecomment-533249556
 
 
   This patch is for branch-3.5, master has bigger problems, the source tarbal does not build at all because it does not include the metrics provider packages.
   
   I would like to have a different approach for 3.6 release package, as we should use the default ""apache-release"" profile for building the source package and use the Maven release plugin.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Sep/19 18:18;githubbot;600","eolivelli commented on issue #1093: ZOOKEEPER-3552 Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file
URL: https://github.com/apache/zookeeper/pull/1093#issuecomment-533291045
 
 
   @nkalmar can you merge the patch as soon as CI is green?
   You can also cherry pick to branch-3.5.6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Sep/19 20:12;githubbot;600","eolivelli commented on issue #1093: ZOOKEEPER-3552 Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file
URL: https://github.com/apache/zookeeper/pull/1093#issuecomment-533306407
 
 
   Green lights 
   
   Thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Sep/19 20:57;githubbot;600","nkalmar commented on issue #1093: ZOOKEEPER-3552 Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file
URL: https://github.com/apache/zookeeper/pull/1093#issuecomment-533458183
 
 
   Merged to 3.5 and branch-3.5.6
   Thanks @eolivelli 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 08:20;githubbot;600","nkalmar commented on pull request #1093: ZOOKEEPER-3552 Source tarbal for branch-3.5 does not set execution permissions to ""configure"" file
URL: https://github.com/apache/zookeeper/pull/1093
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 08:21;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 19 20:01:07 UTC 2019,,,,,,,,,,"0|z06trc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Sep/19 20:01;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4146//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4146//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4146//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Containers that never have children stay forever,ZOOKEEPER-3546,13256877,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,randgalt,sylvain@apache.org,sylvain@apache.org,16/Sep/19 13:21,03/Dec/19 18:37,13/Jul/23 09:08,25/Nov/19 14:38,3.5.3,3.5.5,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"{{ContainerManager}} does not delete containers whose cversion is zero to avoid situations where a container would be deleted before the application had the chance to create children.

This caused issues in our application where the process stopped between container creation and child creation: the containers were never deleted.

To avoid this while giving applications the time to create children, empty containers with a cversion of zero should be deleted after a grace period, e.g. not when they are first collected, but the second time.",,eolivelli,randgalt,sylvain@apache.org,,,,,,,,,,,,,,,,,"swallez commented on pull request #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091
 
 
   Ensures empty containers that never had children added are deleted after a grace period.
   
   The grace period ensures that such empty containers live at for one full collection period. This gives clients time to create the container and add children in separate transactions even if the container is created right before the collection task is run.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Sep/19 15:31;githubbot;600","maoling commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-532091523
 
 
   - If I create a container node which has not any children yet, it will never be deleted by the cleaning task, this behavior is expected.
   - the doc in the **zookeeperProgrammers.md**
   
   > ZooKeeper has the notion of container znodes. Container znodes are
   special purpose znodes useful for recipes such as leader, lock, etc.
   When the last child of a container is deleted, the container becomes
   a candidate to be deleted by the server at some point in the future.
   Given this property, you should be prepared to get
   KeeperException.NoNodeException when creating children inside of
   container znodes. i.e. when creating child znodes inside of container znodes
   always check for KeeperException.NoNodeException and recreate the container
   znode when it occurs.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/19 07:09;githubbot;600","eolivelli commented on pull request #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#discussion_r325115877
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -139,14 +140,22 @@ protected long getMinIntervalMs() {
         Set<String> candidates = new HashSet<String>();
         for (String containerPath : zkDb.getDataTree().getContainers()) {
             DataNode node = zkDb.getDataTree().getNode(containerPath);
-            /*
-                cversion > 0: keep newly created containers from being deleted
-                before any children have been added. If you were to create the
-                container just before a container cleaning period the container
-                would be immediately be deleted.
-             */
-            if ((node != null) && (node.stat.getCversion() > 0) && (node.getChildren().isEmpty())) {
-                candidates.add(containerPath);
+            boolean wasNewWithNoChildren = noChildrenAtLastCheck.remove(containerPath);
+
+            if (node != null && node.getChildren().isEmpty()) {
+                if (node.stat.getCversion() == 0) {
+                    // Give newly created containers a grace period and avoid deleting
+                    // them before any children could be added. If you were to create the
+                    // container just before a container cleaning period the container
+                    // would be immediately be deleted.
+                    if (wasNewWithNoChildren) {
+                        candidates.add(containerPath);
+                    } else {
+                        noChildrenAtLastCheck.add(containerPath);
 
 Review comment:
   At a first glance we are only adding elements and never clearing the collection
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/19 11:31;githubbot;600","eolivelli commented on pull request #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#discussion_r325116122
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/CreateContainerTest.java
 ##########
 @@ -237,6 +237,22 @@ public Void call() throws Exception {
         assertEquals(queue.poll(5, TimeUnit.SECONDS), ""/four"");
     }
 
+    @Test(timeout = 30000)
+    public void testContainerWithNoChildGracePeriod() throws KeeperException, InterruptedException {
+        zk.create(""/foo"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.CONTAINER);
+
+        ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(), serverFactory.getZooKeeperServer().firstProcessor, 1, 100);
+        containerManager.checkContainers();
+        Thread.sleep(1000);
+
+        assertNotNull(""Container should still be there"", zk.exists(""/foo"", false));
+
+        containerManager.checkContainers();
 
 Review comment:
   Can we avoid this sleep?
   This test may turn into a flaky one
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/19 11:31;githubbot;600","swallez commented on pull request #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#discussion_r325126124
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -139,14 +140,22 @@ protected long getMinIntervalMs() {
         Set<String> candidates = new HashSet<String>();
         for (String containerPath : zkDb.getDataTree().getContainers()) {
             DataNode node = zkDb.getDataTree().getNode(containerPath);
-            /*
-                cversion > 0: keep newly created containers from being deleted
-                before any children have been added. If you were to create the
-                container just before a container cleaning period the container
-                would be immediately be deleted.
-             */
-            if ((node != null) && (node.stat.getCversion() > 0) && (node.getChildren().isEmpty())) {
-                candidates.add(containerPath);
+            boolean wasNewWithNoChildren = noChildrenAtLastCheck.remove(containerPath);
+
+            if (node != null && node.getChildren().isEmpty()) {
+                if (node.stat.getCversion() == 0) {
+                    // Give newly created containers a grace period and avoid deleting
+                    // them before any children could be added. If you were to create the
+                    // container just before a container cleaning period the container
+                    // would be immediately be deleted.
+                    if (wasNewWithNoChildren) {
+                        candidates.add(containerPath);
+                    } else {
+                        noChildrenAtLastCheck.add(containerPath);
 
 Review comment:
   Yes, we do it outside of the `getChildren().isEmpty()` test. Children may have been added since the container was added to that collection, so we need to make sure that containers with children don't stay in it forever.
   
   ```java
   boolean wasNewWithNoChildren = noChildrenAtLastCheck.remove(containerPath);
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/19 11:58;githubbot;600","swallez commented on pull request #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#discussion_r325136948
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/CreateContainerTest.java
 ##########
 @@ -237,6 +237,22 @@ public Void call() throws Exception {
         assertEquals(queue.poll(5, TimeUnit.SECONDS), ""/four"");
     }
 
+    @Test(timeout = 30000)
+    public void testContainerWithNoChildGracePeriod() throws KeeperException, InterruptedException {
+        zk.create(""/foo"", new byte[0], ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.CONTAINER);
+
+        ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(), serverFactory.getZooKeeperServer().firstProcessor, 1, 100);
+        containerManager.checkContainers();
+        Thread.sleep(1000);
+
+        assertNotNull(""Container should still be there"", zk.exists(""/foo"", false));
+
+        containerManager.checkContainers();
 
 Review comment:
   I used the same approach as other tests in that class, where I understand that these `sleep` after each call to `checkContainers` are precisely there to avoid flakiness by giving time to the ZK server to asynchronously delete the nodes that have been selected for removal.
   
   Did I miss something?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Sep/19 12:26;githubbot;600","TisonKun commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-532491203
 
 
   I second @maoling here that ""If I create a container node which has not any children yet, it will never be deleted by the cleaning task, this behavior is expected.""
   
   When a user create a container node he must prepare to create several children of it. Otherwise it is a misuse that the user should take care of the clean-up by himself. In an edge case that the creation of child fails, it is the responsibility of users to tolerate the failing case.
   
   Mainly my concern is if we introduce such grace period it becomes even worse users are now enforced to take care of an edge case caused by ZooKeeper: if they create a container first, following a creation of child which suffer network traffic and fails because of the grace period expire.
   
   Besides, I'm afraid it also affects how downstream project like Curator takes care of container znodes. cc @Randgalt 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 02:28;githubbot;600","maoling commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-532502795
 
 
   - this change has violated the semantic of CONTAINER node designed from [ZOOKEEPER-2163](https://issues.apache.org/jira/browse/ZOOKEEPER-2163),
   making the behavior of CONTAINER node very weird.
   
   > This proposal adds a new node type, CONTAINER. A CONTAINER node **is the same as a PERSISTENT node** with the additional property that when its last child is deleted, it is deleted (and CONTAINER nodes recursively up the tree are deleted if empty).
   
   - Further:the exist of CONTAINER node is an important flag for the developers to implement their recipes.how can I distinguish the Non-existent of that CONTAINER node is because of all her children have been deleted or she has no children at all.
   - What a scene I can image is: I have a main task which has many sub-tasks, then I can create a container node` /main-task`, then create ephemeral sequence nodes for every sub-tasks(e.g:`/main-task/sub-task1,/main-task/sub-task2`), a sub-task deleted its node after finishing its task.the main task will observer the existent of `/main-task` to judge whether the main task has finished successfully. If we pick up this patch, if all the sub-threads have all failed, after some time, the main task will also observer the in-existent of` /main-task`, mistakenly consider the state of main-task.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 03:27;githubbot;600","swallez commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-540078037
 
 
   Ok, I understand this is a feature rather than an unwanted side effect of giving time for application to create childrens, and I won't dispute that.
   
   What led to proposing this change is a problem we encountered when using Curator's `PersistentTtlNode` that creates a container and adds a child to it, but doesn't do it as a transaction. This led to the issue we encountered.
   
   I'm therefore closing this PR and the associated issue and will address this issue in Curator.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:24;githubbot;600","swallez commented on pull request #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:24;githubbot;600","TisonKun commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-540079430
 
 
   Thanks for your update @swallez . Sounds interesting what Curator's `PersistentTtlNode` does. Will check it out :-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:27;githubbot;600","Randgalt commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-540080880
 
 
   Sorry - I missed the cc on this. I'll follow on Curator if @swallez opens an issue there.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:31;githubbot;600","swallez commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-540083089
 
 
   @TisonKun `PersistentTtlNode` creates a container as a `PersistentNode` and then adds a TTL node in it named `touch` that is refreshed periodically. This means the application can use the parent as a regular node and won't be polluted by watch event triggered by the periodic refresh required by the TTL.
   
   The problem in Curator is that those two nodes (container and `touch` child) are created separately. So if there's a crash between these two requests and `touch` is never created, the parent container stays forever. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:36;githubbot;600","swallez commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-540083736
 
 
   @Randgalt creating an issue on Curator right now ;-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:38;githubbot;600","Randgalt commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-540084075
 
 
   Yeah - I think it can be done in a transaction. The transaction APIs support TTL I'm pretty sure.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 16:39;githubbot;600","henrikno commented on issue #1091: ZOOKEEPER-3546: Delete empty containers with cversion == 0 after a grace period
URL: https://github.com/apache/zookeeper/pull/1091#issuecomment-546185954
 
 
   Curator issue for reference: https://issues.apache.org/jira/browse/CURATOR-545
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Oct/19 03:29;githubbot;600","Randgalt commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138
 
 
   Edge cases can cause Container Nodes to never be deleted. i.e. if the container node is created and then the client that create the node crashes the container will not get deleted unless another client creates a node inside of it. This is because the initial implementation does not delete container nodes with a cversion of 0. This PR adds a new system property, ""znode.container.maxZeroChildrenIntervalMs"", that can be set to delete containers with a cversion of 0 that have been retained for a period of time. This is a backward compatible change as the default value for this is Long.MAX_VALUE - i.e. never.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Nov/19 21:55;githubbot;600","maoling commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-552317347
 
 
   Link to [PR-1091](https://github.com/apache/zookeeper/pull/1091) 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 06:55;githubbot;600","maoling commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r344577829
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -58,10 +59,25 @@
      *                     herding of container deletions
      */
     public ContainerManager(ZKDatabase zkDb, RequestProcessor requestProcessor, int checkIntervalMs, int maxPerMinute) {
+        this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, Integer.MAX_VALUE);
+    }
 
 Review comment:
   Long.MAX_VALUE ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 07:14;githubbot;600","maoling commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r344580946
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -139,12 +160,26 @@ protected long getMinIntervalMs() {
         Set<String> candidates = new HashSet<String>();
         for (String containerPath : zkDb.getDataTree().getContainers()) {
             DataNode node = zkDb.getDataTree().getNode(containerPath);
-            /*
-                cversion > 0: keep newly created containers from being deleted
-                before any children have been added. If you were to create the
-                container just before a container cleaning period the container
-                would be immediately be deleted.
-             */
+            if ((node != null) && node.getChildren().isEmpty()) {
+                /*
+                    cversion > 0: keep newly created containers from being deleted
+                    before any children have been added. If you were to create the
+                    container just before a container cleaning period the container
+                    would be immediately be deleted.
+                 */
+                if (node.stat.getCversion() > 0) {
+                    candidates.add(containerPath);
+                } else {
+                    /*
+                        Users may not want unused containers to live indefinitely. Allow a system
+                        property to be set that sets the max time for a cversion-0 container
+                        to stay before being deleted
+                     */
+                    if (getElapsed(node) > maxNeverUsedIntervalMs) {
+                        candidates.add(containerPath);
+                    }
 
 Review comment:
   > This is a backward compatible change as the default value for this is Long.MAX_VALUE - i.e. never.
   
   9223372036854775807/1000/60/60/24/365=292471209 years
   200 million years are not equal to never in the context of love storys :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 07:14;githubbot;600","maoling commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r344582558
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -58,10 +59,25 @@
      *                     herding of container deletions
      */
     public ContainerManager(ZKDatabase zkDb, RequestProcessor requestProcessor, int checkIntervalMs, int maxPerMinute) {
+        this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, Integer.MAX_VALUE);
+    }
+
+    /**
+     * @param zkDb the ZK database
+     * @param requestProcessor request processer - used to inject delete
+     *                         container requests
+     * @param checkIntervalMs how often to check containers in milliseconds
+     * @param maxPerMinute the max containers to delete per second - avoids
+     *                     herding of container deletions
+     * @param maxNeverUsedIntervalMs the max time in milliseconds that a container that has never had
+     *                                  any children is retained
+     */
+    public ContainerManager(ZKDatabase zkDb, RequestProcessor requestProcessor, int checkIntervalMs, int maxPerMinute, long maxNeverUsedIntervalMs) {
         this.zkDb = zkDb;
         this.requestProcessor = requestProcessor;
         this.checkIntervalMs = checkIntervalMs;
         this.maxPerMinute = maxPerMinute;
+        this.maxNeverUsedIntervalMs = maxNeverUsedIntervalMs;
         timer = new Timer(""ContainerManagerTask"", true);
 
         LOG.info(""Using checkIntervalMs={} maxPerMinute={}"", checkIntervalMs, maxPerMinute);
 
 Review comment:
    `maxNeverUsedIntervalMs` also needs to be logged ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 07:20;githubbot;600","Randgalt commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-552438248
 
 
   > I believe the TTL node may also cover this use case?
   
   You know - I think you're right. Good call. Let me give this some thought. If so, I'll cancel this PR.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 13:07;githubbot;600","Randgalt commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-552438248
 
 
   > I believe the TTL node may also cover this use case?
   
   You know - I think you're right. Good call. Let me give this some thought. If so, I'll cancel this PR.
   
   Update... It's true that TTL nodes can simulate this behavior but maybe we should still have it? Thoughts @maoling or other committers? It seems odd that if there's a client crash that a new container can live forever. It feels like it goes against the intent of the feature. So, even though this could be simulated with TTL nodes, I think this new feature should be added. Thoughts?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 13:22;githubbot;600","Randgalt commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r344708111
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -58,10 +59,25 @@
      *                     herding of container deletions
      */
     public ContainerManager(ZKDatabase zkDb, RequestProcessor requestProcessor, int checkIntervalMs, int maxPerMinute) {
+        this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, Integer.MAX_VALUE);
+    }
 
 Review comment:
   Good catch
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Nov/19 13:23;githubbot;600","eolivelli commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-553384222
 
 
   Can't an application look for orphan nodes during some recovery procedure?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 12:31;githubbot;600","Randgalt commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-553479421
 
 
   > Can't an application look for orphan nodes during some recovery procedure?
   
   Curator has a class that does that. But, it requires a dedicated thread and ends up iterating over the  entire ZK DB in a loop. It's not ideal. The point of Container nodes was to eliminate the need for this.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Nov/19 16:26;githubbot;600","lvfangmin commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-554002507
 
 
   > This is because the initial implementation does not delete container nodes with a cversion of 0
   
   It seems to me we're trying to add a 'TTL' for the container besides the behavior of deleting the container node when the children are all deleted. It seems changed the semantic of this API, and the 'maxNeverUsedIntervalMs' setting is hard to define, set it too small may cause problem for the users. Also, different users may have different expectations on that, have a single value may not work for multi-tenant ensemble.
   
   I also have the same question as eolivelli, if the client crashed, they'll try to create the same container, right? Are they're creating some unique container name every time?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/19 17:51;githubbot;600","Randgalt commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-554003321
 
 
   >  if the client crashed, they'll try to create the same container, right?
   
   No - not necessarily. This could be containers associated with a particular client. The client could have some random (UUID-based) ID and the container could be based on that ID. If the client crashes the container will never go away. Elastic search is having this very problem right now.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/19 17:54;githubbot;600","Randgalt commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-554003942
 
 
   > It seems to me we're trying to add a 'TTL' for the container besides the behavior of deleting the container node when the children are all deleted.
   
   They're not the same. At a high level, container nodes aren't needed at all. TTL nodes provide nearly equivalent functionality but require that the client specify a ""ttl"" when creating the node. I guess we could deprecate container nodes but if we're going to continue to support them this edge case should be handled better than it is now.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Nov/19 17:55;githubbot;600","swallez commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-554448994
 
 
   Indeed Elastic is having this issue (for more context see also [CURATOR-545](https://issues.apache.org/jira/browse/CURATOR-545)). I initially submitted PR https://github.com/apache/zookeeper/pull/1091 to fix it, but the approach was a bit too radical as it was not configurable and thus caused a change in documented behavior.
   
   This PR provides a nice solution to the issue by guarding it with a configuration option. It may indeed not be applicable to multi-tenant environments where individual tenants may have different requirements, but for all other deployment types it solves the problem.
   
   So a non-binding +1 😉 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Nov/19 17:18;githubbot;600","eolivelli commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r348196962
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java
 ##########
 @@ -163,7 +163,9 @@ public void runFromConfig(ServerConfig config) throws IOException, AdminServerEx
                 zkServer.getZKDatabase(),
                 zkServer.firstProcessor,
                 Integer.getInteger(""znode.container.checkIntervalMs"", (int) TimeUnit.MINUTES.toMillis(1)),
-                Integer.getInteger(""znode.container.maxPerMinute"", 10000));
+                Integer.getInteger(""znode.container.maxPerMinute"", 10000),
+                Long.getLong(""znode.container.maxNeverUsedIntervalMs"", Long.MAX_VALUE)
 
 Review comment:
   what about using zero a value for 'disabled'?
   It is very common to use zero as special value in order to 'not enable' features
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Nov/19 22:13;githubbot;600","Randgalt commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r348200463
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java
 ##########
 @@ -163,7 +163,9 @@ public void runFromConfig(ServerConfig config) throws IOException, AdminServerEx
                 zkServer.getZKDatabase(),
                 zkServer.firstProcessor,
                 Integer.getInteger(""znode.container.checkIntervalMs"", (int) TimeUnit.MINUTES.toMillis(1)),
-                Integer.getInteger(""znode.container.maxPerMinute"", 10000));
+                Integer.getInteger(""znode.container.maxPerMinute"", 10000),
+                Long.getLong(""znode.container.maxNeverUsedIntervalMs"", Long.MAX_VALUE)
 
 Review comment:
   OK with me - or maybe `-1`?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Nov/19 22:20;githubbot;600","eolivelli commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r348307433
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerMain.java
 ##########
 @@ -163,7 +163,9 @@ public void runFromConfig(ServerConfig config) throws IOException, AdminServerEx
                 zkServer.getZKDatabase(),
                 zkServer.firstProcessor,
                 Integer.getInteger(""znode.container.checkIntervalMs"", (int) TimeUnit.MINUTES.toMillis(1)),
-                Integer.getInteger(""znode.container.maxPerMinute"", 10000));
+                Integer.getInteger(""znode.container.maxPerMinute"", 10000),
+                Long.getLong(""znode.container.maxNeverUsedIntervalMs"", Long.MAX_VALUE)
 
 Review comment:
   Personally I would go for 0. Not so important.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Nov/19 06:20;githubbot;600","eolivelli commented on issue #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#issuecomment-557165106
 
 
   It looks like Travis crashed. I am closing/reopening this PR in order to restart automatic QA tests
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/19 16:31;githubbot;600","eolivelli commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/19 16:31;githubbot;600","Randgalt commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138
 
 
   Edge cases can cause Container Nodes to never be deleted. i.e. if the container node is created and then the client that create the node crashes the container will not get deleted unless another client creates a node inside of it. This is because the initial implementation does not delete container nodes with a cversion of 0. This PR adds a new system property, ""znode.container.maxNeverUsedIntervalMs"", that can be set to delete containers with a cversion of 0 that have been retained for a period of time. This is a backward compatible change as the default value for this is Long.MAX_VALUE - i.e. never.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Nov/19 16:31;githubbot;600","lvfangmin commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138#discussion_r349825800
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ContainerManager.java
 ##########
 @@ -139,12 +160,26 @@ protected long getMinIntervalMs() {
         Set<String> candidates = new HashSet<String>();
         for (String containerPath : zkDb.getDataTree().getContainers()) {
             DataNode node = zkDb.getDataTree().getNode(containerPath);
-            /*
-                cversion > 0: keep newly created containers from being deleted
-                before any children have been added. If you were to create the
-                container just before a container cleaning period the container
-                would be immediately be deleted.
-             */
+            if ((node != null) && node.getChildren().isEmpty()) {
+                /*
+                    cversion > 0: keep newly created containers from being deleted
+                    before any children have been added. If you were to create the
+                    container just before a container cleaning period the container
+                    would be immediately be deleted.
+                 */
+                if (node.stat.getCversion() > 0) {
+                    candidates.add(containerPath);
+                } else {
+                    /*
+                        Users may not want unused containers to live indefinitely. Allow a system
+                        property to be set that sets the max time for a cversion-0 container
+                        to stay before being deleted
+                     */
+                    if ((maxNeverUsedIntervalMs != 0) && (getElapsed(node) > maxNeverUsedIntervalMs)) {
+                        candidates.add(containerPath);
 
 Review comment:
   It would be great if we can add some visibility to track container being deleted because of this? Maybe add a log or metric?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Nov/19 22:52;githubbot;600","asfgit commented on pull request #1138: ZOOKEEPER-3546 - Allow optional deletion of never used Container Nodes
URL: https://github.com/apache/zookeeper/pull/1138
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/19 14:38;githubbot;600","Randgalt commented on pull request #1158: ZOOKEEPER-3546 - fix missed change, default should be 0 not Long.MAX_VALUE
URL: https://github.com/apache/zookeeper/pull/1158
 
 
   fix missed change, default should be 0 not Long.MAX_VALUE
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/19 15:15;githubbot;600","asf-ci commented on issue #1158: ZOOKEEPER-3546 - fix missed change, default should be 0 not Long.MAX_VALUE
URL: https://github.com/apache/zookeeper/pull/1158#issuecomment-558227880
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1656/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/19 16:16;githubbot;600","eolivelli commented on issue #1158: ZOOKEEPER-3546 - fix missed change, default should be 0 not Long.MAX_VALUE
URL: https://github.com/apache/zookeeper/pull/1158#issuecomment-558228953
 
 
   @lvfangmin this is a left over of the related patch.
   You approved the initial patch.
   I would like to merge this part as well.
   
   Can you please take a look?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Nov/19 16:19;githubbot;600","asfgit commented on pull request #1158: ZOOKEEPER-3546 - fix missed change, default should be 0 not Long.MAX_VALUE
URL: https://github.com/apache/zookeeper/pull/1158
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 18:36;githubbot;600","lvfangmin commented on issue #1158: ZOOKEEPER-3546 - fix missed change, default should be 0 not Long.MAX_VALUE
URL: https://github.com/apache/zookeeper/pull/1158#issuecomment-561299544
 
 
   Merged, thanks @Randgalt!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Dec/19 18:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,25200,,,0,25200,,,,,,,,,,,,,,,,,CURATOR-545,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Nov 25 14:38:11 UTC 2019,,,,,,,,,,"0|z06odc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Oct/19 16:28;sylvain@apache.org;I understand from the discussion that this is a feature rather than an unwanted side effect of giving time for application to create childrens, and I won't dispute that.

What led to reporting this is a problem we encountered when using Curator's {{PersistentTtlNode}} that creates a container and adds a child to it, but doesn't do it as a transaction.

So I'll address this issue in Curator.;;;","09/Nov/19 16:07;randgalt;I believe this should be solved in the server. I have an idea for a backward compatible way of handling this. PR coming soon.;;;","25/Nov/19 14:38;eolivelli;Issue resolved by pull request 1138
[https://github.com/apache/zookeeper/pull/1138];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client port unavailable after binding the same client port during reconfig,ZOOKEEPER-3540,13255694,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,lvfangmin,lvfangmin,lvfangmin,09/Sep/19 16:41,11/Sep/19 00:58,13/Jul/23 09:08,10/Sep/19 16:51,3.6.0,,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"When dynamically replace a server with IPv4/IPv6 with the same port, the server will complain about 'address already in use', and cause the client port not available anymore.",,hudson,lvfangmin,,,,,,,,,,,,,,,,,,"lvfangmin commented on pull request #1083: [ZOOKEEPER-3540] Avoid client port unavailable by skip binding the same client port during reconfig
URL: https://github.com/apache/zookeeper/pull/1083
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Sep/19 16:43;githubbot;600","eolivelli commented on issue #1083: [ZOOKEEPER-3540] Avoid client port unavailable by skip binding the same client port during reconfig
URL: https://github.com/apache/zookeeper/pull/1083#issuecomment-529570983
 
 
   @lvfangmin the change looks good to me
   please fix Checkstyle issues, then this patch is okay for me.
   
   ```
   [INFO] There are 10 errors reported by Checkstyle 8.17 with checkstyle-strict.xml ruleset.
   
   [ERROR] src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:[627,85] (whitespace) OperatorWrap: '&&' should be on a new line.
   
   [ERROR] src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java:[628,67] (whitespace) OperatorWrap: '&&' should be on a new line.
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[21,8] (imports) UnusedImports: Unused import: io.netty.channel.Channel.
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[23] (imports) ImportOrder: Extra separation in import group before 'org.apache.zookeeper.PortAssignment'
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[25] (imports) ImportOrder: Extra separation in import group before 'org.junit.After'
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[25,8] (imports) UnusedImports: Unused import: org.junit.After.
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[27,8] (imports) UnusedImports: Unused import: org.junit.Before.
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[30] (imports) ImportOrder: Extra separation in import group before 'java.io.IOException'
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[30] (imports) ImportOrder: Import java.io.IOException appears after other imports that it should precede
   
   [ERROR] src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java:[30,8] (imports) UnusedImports: Unused import: java.io.IOException.
   ```
   
   Is it a good idea to add it to 3.5 branch ? I feel this is a desirable change.
   I didn't notice  that we always perform re-bind during reconfig even the address is not changed.
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Sep/19 16:55;githubbot;600","lvfangmin commented on issue #1083: [ZOOKEEPER-3540] Avoid client port unavailable by skip binding the same client port during reconfig
URL: https://github.com/apache/zookeeper/pull/1083#issuecomment-529772466
 
 
   Thanks @eolivelli for review, I've updated based on the check style, we could merge this back to 3.5 as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:11;githubbot;600","asfgit commented on pull request #1083: [ZOOKEEPER-3540] Avoid client port unavailable by skip binding the same client port during reconfig
URL: https://github.com/apache/zookeeper/pull/1083
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 16:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 11 00:58:01 UTC 2019,,,,,,,,,,"0|z06h2g:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Sep/19 23:56;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #526 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/526/])
ZOOKEEPER-3540: Avoid client port unavailable by skip binding the same (eolivelli: rev 8460f4ed48c5f9018d882bee2be748de42e965f9)
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
;;;","11/Sep/19 00:58;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #689 (See [https://builds.apache.org/job/ZooKeeper-trunk/689/])
ZOOKEEPER-3540: Avoid client port unavailable by skip binding the same (eolivelli: rev 8460f4ed48c5f9018d882bee2be748de42e965f9)
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnFactoryTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Synchronization on ACLCache cause cluster to hang when network/disk issues happen during datatree serialization,ZOOKEEPER-3531,13254299,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,chlou,chlou,chlou,02/Sep/19 21:02,09/Oct/19 19:28,13/Jul/23 09:08,09/Oct/19 14:39,3.5.2,3.5.3,3.5.4,3.5.5,,,,,,3.6.0,,,,,,,,,0,pull-request-available,,"During our ZooKeeper fault injection testing, we observed that sometimes the ZK cluster could hang (requests time out, node status shows ok). After inspecting the issue, we believe this is caused by I/O (serializing ACLCache) inside a critical section. The bug is essentially similar to what is described in ZooKeeper-2201.

org.apache.zookeeper.server.DataTree#serialize calls the aclCache.serialize when doing dataree serialization, however, org.apache.zookeeper.server.ReferenceCountedACLCache#serialize could get stuck at OutputArchieve.writeInt due to potential network/disk issues. This can cause the system experiences hanging issues similar to ZooKeeper-2201 (any attempt to create/delete/modify the DataNode will cause the leader to hang at the beginning of the request processor chain). The root cause is the lock contention between:
 * org.apache.zookeeper.server.DataTree#serialize -> org.apache.zookeeper.server.ReferenceCountedACLCache#serialize 
 * PrepRequestProcessor#getRecordForPath -> org.apache.zookeeper.server.DataTree#getACL(org.apache.zookeeper.server.DataNode) -> org.apache.zookeeper.server.ReferenceCountedACLCache#convertLong

When the snapshot gets stuck in acl serialization, it would prevent all other operations to ReferenceCountedACLCache. Since getRecordForPath calls ReferenceCountedACLCache#convertLong, any op triggering getRecordForPath will cause the leader to hang at the beginning of the request processor chain:
{code:java}
org.apache.zookeeper.server.ReferenceCountedACLCache.convertLong(ReferenceCountedACLCache.java:87)
org.apache.zookeeper.server.DataTree.getACL(DataTree.java:734)
   - locked org.apache.zookeeper.server.DataNode@4a062b7d
org.apache.zookeeper.server.ZKDatabase.aclForNode(ZKDatabase.java:371)
org.apache.zookeeper.server.PrepRequestProcessor.getRecordForPath(PrepRequestProcessor.java:170)
   - locked java.util.ArrayDeque@3f7394f7
org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:417)
org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:757)
org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:145)
{code}
Similar to ZooKeeper-2201, the leader can still send out heartbeats so the cluster will not recover until the network/disk issue resolves.  

Steps to reproduce this bug:
 # start a cluster with 1 leader and n followers
 # manually create some ACLs, to enlarge the window of dumping acls so it would be more likely to hang at serializing ACLCache when delay happens. (we wrote a script to generate such workloads, see attachments)
 # inject long network/disk write delays and run some benchmarks to trigger snapshots
 # once stuck, you should observe new requests to the cluster would fail.

Essentially the core problem is the OutputArchive write should not be kept inside this synchronization block. So a straightforward solution is to move writes out of sync block: do a copy inside the sync block and perform vulnerable network writes afterwards. The patch for this solution is attached and verified.  Another more systematic fix is perhaps replacing all synchronized methods in the ReferenceCountedACLCache with ConcurrentHashMap. 

We double checked that the issue remains in the latest version of master branch (68c21988d55c57e483370d3ee223c22da2d1bbcf). 

Attachments are 1) patch for fix and regression test 2) scripts to generate workloads to fill ACL cache",,andor,chlou,hanm,hudson,lvfangmin,,,,,,,,,,,,,,,"mcfatealan commented on pull request #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077
 
 
   …n network/disk issues happen during datatree serialization
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 02:19;githubbot;600","maoling commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-527844340
 
 
   Looking
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 10:35;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-528928031
 
 
   Hi @lvfangmin thanks for pointing out the potential risks here!
   I totally agree that we should always be careful about potential correctness issue when dealing with changes to synchronization. Meanwhile, in this case (plz correct me if I'm wrong here) I think the proposed fix is rather safe that: 1) it does not break existing fixes in ZOOKEEPER-3306 2) it does not introduce new problems.
   
   ### 1)
   The race condition mentioned in the ZOOKEEPER-3306 exists before the fix mentioned in this thread. We carefully inspect the issue you mentioned in ZOOKEEPER-3306. And the fix introduced in ZOOKEEPER-3306 is not to prevent this race condition to avoid the fuzzy snapshot, but to add the missing ACL during replay. New transactions are always possible between `serializeACL` and `serializeNodes`, and our fix would not create a new race condition here.
   
   After the fix we can still pass the test `testACLCreatedDuringFuzzySnapshotSync`.
   
   ### 2)
   Essentially the proposed fix is finer-grained synchronization. The original codes look like:
   **v1**
   ```java
   synchronized public void serialize(OutputArchive oa) throws IOException {
       writeACL(longKeyMap);
   }
   ```
   
   which is equilvalent to: 
   **v1.b=v1**
   
   ```java
   public void serialize(OutputArchive oa) throws IOException {
       synchronized (this) {
           clonedLongKeyMap = copyACL(longKeyMap);
           writeACL(clonedLongKeyMap);
       }
   }
   ```
   
   This is how codes look like after our fix:
   **v2**
   
   ```java
   public void serialize(OutputArchive oa) throws IOException {
       synchronized (this) {
           clonedLongKeyMap = copyACL(longKeyMap);
       }
       writeACL(clonedLongKeyMap);
   }
   ```
   Because `clonedLongKeyMap` is a local, immutable data structure, it would not create new correctness issues even we move it out of synchronization blocks. Suppose right now we have a thread `t2` coming in when `t1` is doing `writeACL`, it is still not gonna changing the in-memory state or on-disk records. The only difference this change made is when `writeACL` gets stuck, it would get stuck outside the synchronization block so it would not block other access to ACLCache.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 16:44;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-528928942
 
 
   @lvfangmin @maoling Thanks so much for your thoughts and any feedbacks are appreciated. 👍 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 16:48;githubbot;600","lvfangmin commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-529770379
 
 
   Thanks @mcfatealan for double checking on the correctness issue, it seems correct to me, but let's have more people review on this.
   
   Btw, let's change the deserialize function to avoid similar stall.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:01;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-529772062
 
 
   @lvfangmin sure, I'll submit a patch for deserialize shortly after
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:09;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-530112725
 
 
   @lvfangmin @maoling deserialize is refactored following a similar approach (move I/O out of sync blocks), the regression test is also attached. Any comments are appreciated :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 20:47;githubbot;600","maoling commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-527844340
 
 
   Loooooooooking!, this weekend(at the latest:D).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 03:19;githubbot;600","maoling commented on pull request #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#discussion_r326935498
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java
 ##########
 @@ -125,10 +125,14 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
         }
     }
 
-    public synchronized void serialize(OutputArchive oa) throws IOException {
-        oa.writeInt(longKeyMap.size(), ""map"");
-        Set<Map.Entry<Long, List<ACL>>> set = longKeyMap.entrySet();
-        for (Map.Entry<Long, List<ACL>> val : set) {
+    public void serialize(OutputArchive oa) throws IOException {
+        Map<Long, List<ACL>> clonedLongKeyMap;
+        synchronized (this)
+        {
+            clonedLongKeyMap = new HashMap<Long, List<ACL>>(longKeyMap);
+        }
+        oa.writeInt(clonedLongKeyMap.size(), ""map"");
 
 Review comment:
           synchronized (this) {
               clonedLongKeyMap = new HashMap<>(longKeyMap);
           }
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/19 02:37;githubbot;600","maoling commented on pull request #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#discussion_r326935293
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java
 ##########
 @@ -98,14 +99,14 @@ private long incrementIndex() {
         return ++aclIndex;
     }
 
-    public synchronized void deserialize(InputArchive ia) throws IOException {
+    public void deserialize(InputArchive ia) throws IOException {
         clear();
         int i = ia.readInt(""map"");
+
+        LinkedHashMap<Long, List<ACL>> deserializedMap = new LinkedHashMap<Long, List<ACL>>();
+        // keep read operations out of synchronization block
 
 Review comment:
    Map<Long, List<ACL>> clonedDeserializedMap = new LinkedHashMap<>();
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/19 02:37;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-533948867
 
 
   @maoling thx a lot for the reviewing work! I've pushed a new commit to address two places of lengthy codes you point out. 
   
   As for fault injections for distributed systems, I haven't done a comprehensive survey yet. But there are some related papers off top of my head, some of them claim direct supports on ZooKeeper: 
   PREFAIL: A Programmable Tool for Multiple-Failure Injection [OOPSLA'11]
   Redundancy Does Not Imply Fault Tolerance: Analysis of Distributed Storage Reactions to Single Errors and Corruptions[FAST'17]
   FATE and DESTINI: A Framework for Cloud Recovery Testing [NSDI'11]
   
   Hope it helps :) I'll update the list if I could remember more
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/19 03:19;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-534328771
 
 
   @maoling I came across two other related ones today:  
   Lineage-driven Fault Injection [SIGMOD '15]
   On Fault Resilience of OpenStack [SoCC '13]
   
   Actually right now we are working on a systematic fault injector and runtime checker framework using program analysis techniques for catching these type of failures. We have a short paper [HotOS '19](https://www.cs.jhu.edu/~chlou/paper/watchdog-hotos19-preprint.pdf) describing our approach and some preliminary results and plan to release the tool to the open-source community when it is mature. We could let you know when it's available if you are interested. 
    (sorry for a little self-promotion here 😸 ) Any feedback will be highly appreciated :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/19 23:52;githubbot;600","mcfatealan commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-536365842
 
 
   @maoling @lvfangmin My pleasure, thanks for the reviewing work!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Sep/19 01:30;githubbot;600","lvfangmin commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-539635659
 
 
   We have two +1 on this, will merge it today.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 18:11;githubbot;600","lvfangmin commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-539636325
 
 
   @eolivelli @hanm @anmolnar Wanna to take a look at this as well? I'll wait for you guys to review before merging.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 18:12;githubbot;600","asfgit commented on pull request #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 14:39;githubbot;600","anmolnar commented on issue #1077: ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe…
URL: https://github.com/apache/zookeeper/pull/1077#issuecomment-540031849
 
 
   Merged to master branch. Thanks @mcfatealan !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 14:39;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10200,,,0,10200,,,,,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/19 21:00;chlou;fix.patch;https://issues.apache.org/jira/secure/attachment/12979174/fix.patch","02/Sep/19 21:01;chlou;generator.py;https://issues.apache.org/jira/secure/attachment/12979173/generator.py",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Oct 09 19:28:00 UTC 2019,,,,,,,,,,"0|z069bk:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Sep/19 01:55;hanm;[~chlou] thanks for detailed analysis of the issue. do you mind creating a pull request from your patch? see instructions here: https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute;;;","04/Sep/19 01:58;chlou;[~hanm] No problem, I'm happy to. I'll attach the link shortly after.;;;","04/Sep/19 02:33;chlou;Pull request created.;;;","04/Sep/19 20:24;lvfangmin;Thanks [~chlou] for reporting the issue, I've commented in the PR.;;;","06/Sep/19 16:46;chlou;Hi [~lvfangmin] I updated my comments in the github PR, any feedbacks are appreciated, thx!;;;","09/Oct/19 14:39;andor;Issue resolved by pull request 1077
[https://github.com/apache/zookeeper/pull/1077];;;","09/Oct/19 14:41;andor;Thanks [~chlou]!

I added you to the contributors list. Now you can assign ZooKeeper tickets to yourself.;;;","09/Oct/19 17:10;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #730 (See [https://builds.apache.org/job/ZooKeeper-trunk/730/])
ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe… (andor: rev f4c7b698bd239bcd15ee380d2ee38814dba432cd)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java
;;;","09/Oct/19 19:10;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #568 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/568/])
ZOOKEEPER-3531: Synchronization on ACLCache cause cluster to hang whe… (andor: rev f4c7b698bd239bcd15ee380d2ee38814dba432cd)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ReferenceCountedACLCache.java
;;;","09/Oct/19 19:28;chlou;Thanks [~andor]! I'm looking into some open issues particularly close to our on-going failure study and see if I could start to help from there.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
owasp check flagging jackson-databind 2.9.9.1,ZOOKEEPER-3518,13252838,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,phunt,phunt,phunt,25/Aug/19 01:50,16/Oct/19 18:58,13/Jul/23 09:08,25/Aug/19 19:34,3.5.5,3.6.0,,,,,,,,3.5.6,3.6.0,,,,security,,,,0,pull-request-available,,"owasp check is flagging jackson-databind 2.9.9.1 - upgrade to 2.9.9.3

CVE-2019-14379, CVE-2019-14439, CVE-2019-12384",,hudson,,,,,,,,,,,,,,,,,,,"phunt commented on pull request #1061: ZOOKEEPER-3518: owasp check flagging jackson-databind 2.9.9.1
URL: https://github.com/apache/zookeeper/pull/1061
 
 
   Fix is to upgrade to latest - 2.9.9.3
   
   Change-Id: Ibedbe434def73959c1e5209d5321e9e66c151929
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/19 01:53;githubbot;600","asfgit commented on pull request #1061: ZOOKEEPER-3518: owasp check flagging jackson-databind 2.9.9.1
URL: https://github.com/apache/zookeeper/pull/1061
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/19 18:43;githubbot;600","eolivelli commented on issue #1061: ZOOKEEPER-3518: owasp check flagging jackson-databind 2.9.9.1
URL: https://github.com/apache/zookeeper/pull/1061#issuecomment-524654279
 
 
   committed to master branch
   
   cherry pick to branch 3.5 failed.
   maybe it is worth to upgrade 3.5 as well
   
   Honestly I don't know why something the ant PR validation starts even for pull requests that target master branch, in theory master branch is excluded
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Aug/19 18:46;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Aug 26 15:44:54 UTC 2019,,,,,,,,,,"0|z060b4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Aug/19 12:56;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4104//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4104//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4104//console

This message is automatically generated.;;;","25/Aug/19 19:34;phunt;I cherry-picked it onto 3.5 branch, resolved the conflict, and pushed. Thanks all!;;;","26/Aug/19 12:28;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #508 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/508/])
ZOOKEEPER-3518: owasp check flagging jackson-databind 2.9.9.1 (eolivelli: rev b5399da61d305da2fe80dc9be6f9bba5037209cf)
* (edit) build.xml
* (edit) pom.xml
;;;","26/Aug/19 15:44;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #673 (See [https://builds.apache.org/job/ZooKeeper-trunk/673/])
ZOOKEEPER-3518: owasp check flagging jackson-databind 2.9.9.1 (eolivelli: rev b5399da61d305da2fe80dc9be6f9bba5037209cf)
* (edit) pom.xml
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Frequent 'zkServer.sh stop' failures when running C test suite,ZOOKEEPER-3510,13250969,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,ztzg,ztzg,15/Aug/19 08:18,16/Oct/19 18:59,13/Jul/23 09:08,23/Aug/19 10:16,,,,,,,,,,3.5.6,3.6.0,,,,,,,,0,pull-request-available,,"As mentioned in https://github.com/apache/zookeeper/pull/1054#discussion_r314208678 :

There is a {{sleep 3}} statement in {{zkServer.sh restart}}.  I am unable to unearth the history of that particular line, but I believe part—if not all—of that {{sleep}} should be part of {{zkServer.sh stop}}.

I frequently observe {{FAILED TO START}} errors in the C test suite; the logs consistently show that those are caused by {{java.net.BindException: Address already in use}}.  Adding a simple {{sleep 1}} before {{echo STOPPED}} ""fixes"" it for me.  I will submit an initial PR with the corresponding change and a commit message akin to:

----

ZOOKEEPER-XXXX: Make zkServer.sh stop more reliable

Kill is asynchronous, and without the sleep, the server's TCP port can still be busy when the next server is started—causing flaky runs of the C client's test suite.

(It would probably be better to spin a few times, probing with ps -p.)

----

As noted above, the sleep is far from optimal, an adaptive mechanism would be better—but I do not want to make the first iteration too complicated.",,hudson,nkalmar,ztzg,,,,,,,,,,,,,,,,,"ztzg commented on pull request #1055: ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable
URL: https://github.com/apache/zookeeper/pull/1055
 
 
   As mentioned in https://github.com/apache/zookeeper/pull/1054#discussion_r314208678 :
   
   There is a `sleep 3` statement in `zkServer.sh restart`. I am unable to unearth the history of that particular line, but I believe part—if not all—of that sleep should be part of `zkServer.sh stop`.
   
   I frequently observe `FAILED TO START` errors in the C test suite; the logs consistently show that those are caused by `java.net.BindException: Address already in use`. Adding a simple `sleep 1` before `echo STOPPED` ""fixes"" it for me.
   
   As noted in the commit message, the `sleep` is far from optimal, an adaptive mechanism would be better—but I do not want to make the first iteration too complicated.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Aug/19 08:22;githubbot;600","ztzg commented on issue #1055: ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable
URL: https://github.com/apache/zookeeper/pull/1055#issuecomment-523413905
 
 
   Should this be merged in?  (I don't have commit rights.)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Aug/19 11:21;githubbot;600","eolivelli commented on issue #1055: ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable
URL: https://github.com/apache/zookeeper/pull/1055#issuecomment-523419051
 
 
   Our rules are that at least 2 'commiters' must approve a patch.
   
   I need support from another committer
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Aug/19 11:39;githubbot;600","asfgit commented on pull request #1055: ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable
URL: https://github.com/apache/zookeeper/pull/1055
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Aug/19 10:15;githubbot;600","nkalmar commented on issue #1055: ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable
URL: https://github.com/apache/zookeeper/pull/1055#issuecomment-524260279
 
 
   Merged to master and 3.5. Thanks @ztzg 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Aug/19 10:17;githubbot;600","ztzg commented on issue #1055: ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable
URL: https://github.com/apache/zookeeper/pull/1055#issuecomment-524565071
 
 
   Thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Aug/19 16:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 23 14:53:12 UTC 2019,,,,,,,,,,"0|z05owo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/19 10:16;nkalmar;Issue resolved by pull request 1055
[https://github.com/apache/zookeeper/pull/1055];;;","23/Aug/19 10:48;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #671 (See [https://builds.apache.org/job/ZooKeeper-trunk/671/])
ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable (nkalmar: rev 942213dfe28e464f068f8a195d1424c4b29af585)
* (edit) bin/zkServer.sh
;;;","23/Aug/19 14:53;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #506 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/506/])
ZOOKEEPER-3510: Make 'zkServer.sh stop' more reliable (nkalmar: rev 942213dfe28e464f068f8a195d1424c4b29af585)
* (edit) bin/zkServer.sh
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
In zookeeper-jute project generated source should not be in target\classes folder,ZOOKEEPER-3498,13249335,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,tison,arshad.mohammad,arshad.mohammad,07/Aug/19 11:49,16/Oct/19 18:59,13/Jul/23 09:08,08/Aug/19 15:05,3.5.5,,,,,,,,,3.5.6,3.6.0,,,,build,,,,0,pull-request-available,,"Currently in zookeeper-jute project jute generated source  code are put in target\classes folder. In eclipse when project is refreshed/cleaned this folder content will get deleted which results in compilation error in other projects
",,andor,arshad.mohammad,hudson,tison,,,,,,,,,,,,,,,,"TisonKun commented on pull request #1043: ZOOKEEPER-3498: Move jute generated sources to generated-source/java
URL: https://github.com/apache/zookeeper/pull/1043
 
 
   Avoid mixup with class files.
   
   cc @phunt @anmolnar @eolivelli @nkalmar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Aug/19 15:44;githubbot;600","dineshappavoo commented on issue #1043: ZOOKEEPER-3498: Move jute generated sources to generated-source/java
URL: https://github.com/apache/zookeeper/pull/1043#issuecomment-519315165
 
 
   nice. LGTM. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 00:22;githubbot;600","asfgit commented on pull request #1043: ZOOKEEPER-3498: Move jute generated sources to generated-source/java
URL: https://github.com/apache/zookeeper/pull/1043
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 15:01;githubbot;600","anmolnar commented on issue #1043: ZOOKEEPER-3498: Move jute generated sources to generated-source/java
URL: https://github.com/apache/zookeeper/pull/1043#issuecomment-519558515
 
 
   Committed to master and 3.5 branches. Thanks @TisonKun !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 15:05;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,2400,,,0,2400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Aug 08 19:58:12 UTC 2019,,,,,,,,,,"0|z05eu0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/19 11:56;arshad.mohammad;source code generated from zookeeper.jute should go in target/generated-sources folder instead of target/classes;;;","07/Aug/19 14:02;tison;[~arshad.mohammad] Thanks for filing this issue. It sounds reasonable to me. Would you like to send a pull request to this issue? Otherwise I can take this issue and provide a patch. Basically modify {{outputDirectory}} inside zookeeper-jute's pom.xml.;;;","07/Aug/19 17:25;arshad.mohammad;Please take it.Thanks:-);;;","08/Aug/19 01:00;tison;[~arshad.mohammad] Yes. I have sent a pull request for this [GH-1043|https://github.com/apache/zookeeper/pull/1043].;;;","08/Aug/19 15:05;andor;Issue resolved by pull request 1043
[https://github.com/apache/zookeeper/pull/1043];;;","08/Aug/19 16:24;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #653 (See [https://builds.apache.org/job/ZooKeeper-trunk/653/])
ZOOKEEPER-3498: Move jute generated sources to generated-source/java (andor: rev abf1865c3a0701beef1dddd128e9ad25712a4c33)
* (edit) zookeeper-jute/pom.xml
;;;","08/Aug/19 19:58;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #488 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/488/])
ZOOKEEPER-3498: Move jute generated sources to generated-source/java (andor: rev abf1865c3a0701beef1dddd128e9ad25712a4c33)
* (edit) zookeeper-jute/pom.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transaction larger than jute.maxbuffer makes ZooKeeper unavailable,ZOOKEEPER-3496,13249278,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,07/Aug/19 08:26,14/Feb/20 15:23,13/Jul/23 09:08,26/Sep/19 06:56,3.4.14,3.5.5,,,,,,,,3.5.7,3.6.0,,,,,,,,0,pull-request-available,,"*Problem:*
ZooKeeper server fails to start, logs following error
{code:java}
Exception in thread ""main"" java.io.IOException: Unreasonable length = 1001025
         at org.apache.jute.BinaryInputArchive.checkLength(BinaryInputArchive.java:127)
         at org.apache.jute.BinaryInputArchive.readBuffer(BinaryInputArchive.java:92)
{code}
This indicates that one of the transactions size is more than the configured 	jute.maxbuffer values. But how transaction more than jute.maxbuffer size is allowed to write? 


*Analysis:*
At ZooKeeper server jute.maxbuffer specifies the maximum size of a transaction. By default it is 1 MB at the server
jute.maxbuffer is used for following:
# Size sanity check of incoming request. Incoming requests size must not be more than jute.maxbuffer
# Size sanity check of the transaction while reading from transaction or snapshot file. Transaction size must not be more than jute.maxbuffer+1024
# Size sanity check of transaction while reading data from the leader. Transaction size must not be more than jute.maxbuffer+1024

Request size sanity check is done in the beginning of a request processing but later request processing adds additional information into request then writes to transaction file. This additional information size is not considered in sanity check. This is how transaction larger than jute.maxbuffer are accepted into ZooKeeper.  

If this additional information size is less than 1024 Bytes then it is OK as ZooKeeper already takes care of it. 
But if this additional information size is more than 1024 bytes it allows the request, But while reading from transaction/snapshot file and while reading from leader it fails and make the ZooKeeper service unavailable  

+Example:+
Suppose incoming request size is 1000000 Bytes
Configured jute.maxbuffer is 1000000
After processing the request ZooKeeper server adds 1025 more bytes
In this case, request will be processed successfully, and 1000000+1025 bytes will be written to transaction file
But while reading from the transaction log 1000000+1025 bytes cannot be read as max allowed length is 1000000(effectively 1000000+1024).

*Solutions:*
If incoming request size sanity check is done after populating all additional information then this problem is solved. But doing sanity check in the later stage of request processing will defeat the purpose of sanity check itself. So this we can not do

Currently additional information size is constant 1024 Bytes [Code Reference|https://github.com/apache/zookeeper/blob/branch-3.5/zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java#L126]. We should increase this value and make it more reasonable. I propose to make this additional information size to same as the jute.maxbuffer. Also make additional information size configurable.

",,arshad.mohammad,eolivelli,hanm,hudson,kezhuw,lvfangmin,t.deml,,,,,,,,,,,,,"arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 07:52;githubbot;600","eolivelli commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321176409
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,14 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public int readExtraSize = Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"",
 
 Review comment:
   please make it final
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 10:04;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321253539
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,14 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public int readExtraSize = Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"",
 
 Review comment:
   variable readExtraSize is reinitialized at line number 93.  So it think it cannot be marked final.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 13:21;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321253539
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,14 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public int readExtraSize = Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"",
 
 Review comment:
   variable readExtraSize is reinitialized at line number 93.  So I think it cannot be marked final.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 13:23;githubbot;600","eolivelli commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321357025
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
 
 Review comment:
   This trick won't work, because the variable will be inizialized only at the first loading of the class.
   Once you assign a value you cannot change it
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 16:15;githubbot;600","eolivelli commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321357155
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
+    }
+
+    /**
+     * ZOOKEEPER-3496
+     */
+    @Test
+    public void testServerAllowsTransactionMoreThanMaxBufferSize() throws Exception {
+        // in this test case, multi operation request size is 6196 bytes
+        int clientPort = PortAssignment.unique();
+        String quorumCfgSection = ""server.1=127.0.0.1:"" + (PortAssignment.unique()) + "":""
+                + (PortAssignment.unique()) + "":participant;"" + clientPort + ""\n"";
+
+        mt = new MainThread(1, clientPort, quorumCfgSection, false);
+        mt.start();
+        Assert.assertTrue(""waiting for server 1 being up"",
+                ClientBase.waitForServerUp(""127.0.0.1:"" + clientPort, CONNECTION_TIMEOUT));
+
+        ZooKeeper zk = ClientBase.createZKClient(""127.0.0.1:"" + clientPort);
+        String parent = ""/parent"";
+        zk.create(parent, """".getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.addAuthInfo(""digest"", ""pat:test"".getBytes());
+        List<Op> ops = new ArrayList<Op>();
+        int numberOfNodes = 100;
+        for (int i = 0; i < numberOfNodes; i++) {
+            ops.add(Op.create(parent + ""/child"" + i, (""data"" + i).getBytes(), Ids.CREATOR_ALL_ACL,
+                    CreateMode.PERSISTENT));
+        }
+        /**
+         * Have set jute.maxbuffer to 6197. 100 znode size is 6197, so creation will be
+         * success
+         */
+        zk.multi(ops);
+        List<String> children = zk.getChildren(parent, false);
+        // check nodes are created successfully.
+        assertEquals(numberOfNodes, children.size());
+
+        /**
+         * Server added some additional information(ACL in this case) in those 100
+         * znodes. So total size of 100 records in transaction log file is more than
+         * 6197. Total size is around 9616. So it added 3419 extra bytes. If extrasize
+         * is kept 1024, then test case will fail (earlier default scenario). Now the
+         * extraSize default value is same as jute buffer size. In this case it will be
+         * 6197. So 9616 less than (6197+6197) will pass.
+         */
+        File dataDir = new File(mt.getConfFile().getParentFile(), ""data"");
+        assertTrue(""data directory does not exist"", dataDir.exists());
+        ZKDatabase database = new ZKDatabase(new FileTxnSnapLog(dataDir, dataDir));
+        database.loadDataBase();
+    }
+
+    /**
+     * ZOOKEEPER-3496. This test is normal jute.maxbuffer functionality test. It
+     * should pass before and after fix
+     */
+    @Test
+    public void testZKOperationRequestOfSizeGreaterThanMaxBuffer() throws Exception {
+        int clientPort = PortAssignment.unique();
+        String quorumCfgSection = ""server.1=127.0.0.1:"" + (PortAssignment.unique()) + "":""
+                + (PortAssignment.unique()) + "":participant;"" + clientPort + ""\n"";
+
+        mt = new MainThread(1, clientPort, quorumCfgSection, false);
+        mt.start();
+        Assert.assertTrue(""waiting for server 1 being up"",
+                ClientBase.waitForServerUp(""127.0.0.1:"" + clientPort, CONNECTION_TIMEOUT));
+
+        ZooKeeper zk = ClientBase.createZKClient(""127.0.0.1:"" + clientPort);
+        String parent = ""/parent"";
+        zk.create(parent, """".getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.addAuthInfo(""digest"", ""pat:test"".getBytes());
+        List<Op> ops = new ArrayList<Op>();
+
+        /**
+         * This code will create 101 Nodes , 100 node size is 6197 Bytes. So this
+         * operation should fail
+         */
+        int numberOfNodes = 101;
+        for (int i = 0; i < numberOfNodes; i++) {
+            ops.add(Op.create(parent + ""/child"" + i, (""data"" + i).getBytes(), Ids.CREATOR_ALL_ACL,
+                    CreateMode.PERSISTENT));
+        }
+        try {
+            zk.multi(ops);
+            fail(""KeeperException is expected as request size is more than jute.maxbuffer size"");
+        } catch (KeeperException e) {
+            System.out.println(""Expected to fail as request size exceeded jute max buffer size""
+                    + e.getMessage());
+            // do nothing, Exception is expected
+        }
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        System.clearProperty(ZKConfig.JUTE_MAXBUFFER);
 
 Review comment:
   Same here
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 16:15;githubbot;600","eolivelli commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321356483
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,14 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public int readExtraSize = Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"",
+            maxBuffer);
+    static {
+        // Earlier hard coded value is 1024, So the value should not be less than that
+        if (readExtraSize < 1024) {
 
 Review comment:
   Assign an initial value to a temp variable here, do this small computation, then assign the value to the variable.
   It is legal to assign a value in a static block to a final static field, the only constraint is that you do the assignement only once
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Sep/19 16:15;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321764604
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,14 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public int readExtraSize = Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"",
+            maxBuffer);
+    static {
+        // Earlier hard coded value is 1024, So the value should not be less than that
+        if (readExtraSize < 1024) {
 
 Review comment:
   ok, changed it
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 14:35;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321765848
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
 
 Review comment:
   ZKConfig.JUTE_MAXBUFFER is initialized with only one value that is why it was working, anyway I moved initialization to class level so it is initialized only once
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 14:37;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321766270
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
+    }
+
+    /**
+     * ZOOKEEPER-3496
+     */
+    @Test
+    public void testServerAllowsTransactionMoreThanMaxBufferSize() throws Exception {
+        // in this test case, multi operation request size is 6196 bytes
+        int clientPort = PortAssignment.unique();
+        String quorumCfgSection = ""server.1=127.0.0.1:"" + (PortAssignment.unique()) + "":""
+                + (PortAssignment.unique()) + "":participant;"" + clientPort + ""\n"";
+
+        mt = new MainThread(1, clientPort, quorumCfgSection, false);
+        mt.start();
+        Assert.assertTrue(""waiting for server 1 being up"",
+                ClientBase.waitForServerUp(""127.0.0.1:"" + clientPort, CONNECTION_TIMEOUT));
+
+        ZooKeeper zk = ClientBase.createZKClient(""127.0.0.1:"" + clientPort);
+        String parent = ""/parent"";
+        zk.create(parent, """".getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.addAuthInfo(""digest"", ""pat:test"".getBytes());
+        List<Op> ops = new ArrayList<Op>();
+        int numberOfNodes = 100;
+        for (int i = 0; i < numberOfNodes; i++) {
+            ops.add(Op.create(parent + ""/child"" + i, (""data"" + i).getBytes(), Ids.CREATOR_ALL_ACL,
+                    CreateMode.PERSISTENT));
+        }
+        /**
+         * Have set jute.maxbuffer to 6197. 100 znode size is 6197, so creation will be
+         * success
+         */
+        zk.multi(ops);
+        List<String> children = zk.getChildren(parent, false);
+        // check nodes are created successfully.
+        assertEquals(numberOfNodes, children.size());
+
+        /**
+         * Server added some additional information(ACL in this case) in those 100
+         * znodes. So total size of 100 records in transaction log file is more than
+         * 6197. Total size is around 9616. So it added 3419 extra bytes. If extrasize
+         * is kept 1024, then test case will fail (earlier default scenario). Now the
+         * extraSize default value is same as jute buffer size. In this case it will be
+         * 6197. So 9616 less than (6197+6197) will pass.
+         */
+        File dataDir = new File(mt.getConfFile().getParentFile(), ""data"");
+        assertTrue(""data directory does not exist"", dataDir.exists());
+        ZKDatabase database = new ZKDatabase(new FileTxnSnapLog(dataDir, dataDir));
+        database.loadDataBase();
+    }
+
+    /**
+     * ZOOKEEPER-3496. This test is normal jute.maxbuffer functionality test. It
+     * should pass before and after fix
+     */
+    @Test
+    public void testZKOperationRequestOfSizeGreaterThanMaxBuffer() throws Exception {
+        int clientPort = PortAssignment.unique();
+        String quorumCfgSection = ""server.1=127.0.0.1:"" + (PortAssignment.unique()) + "":""
+                + (PortAssignment.unique()) + "":participant;"" + clientPort + ""\n"";
+
+        mt = new MainThread(1, clientPort, quorumCfgSection, false);
+        mt.start();
+        Assert.assertTrue(""waiting for server 1 being up"",
+                ClientBase.waitForServerUp(""127.0.0.1:"" + clientPort, CONNECTION_TIMEOUT));
+
+        ZooKeeper zk = ClientBase.createZKClient(""127.0.0.1:"" + clientPort);
+        String parent = ""/parent"";
+        zk.create(parent, """".getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);
+        zk.addAuthInfo(""digest"", ""pat:test"".getBytes());
+        List<Op> ops = new ArrayList<Op>();
+
+        /**
+         * This code will create 101 Nodes , 100 node size is 6197 Bytes. So this
+         * operation should fail
+         */
+        int numberOfNodes = 101;
+        for (int i = 0; i < numberOfNodes; i++) {
+            ops.add(Op.create(parent + ""/child"" + i, (""data"" + i).getBytes(), Ids.CREATOR_ALL_ACL,
+                    CreateMode.PERSISTENT));
+        }
+        try {
+            zk.multi(ops);
+            fail(""KeeperException is expected as request size is more than jute.maxbuffer size"");
+        } catch (KeeperException e) {
+            System.out.println(""Expected to fail as request size exceeded jute max buffer size""
+                    + e.getMessage());
+            // do nothing, Exception is expected
+        }
+    }
+
+    @After
+    public void tearDown() throws Exception {
+        System.clearProperty(ZKConfig.JUTE_MAXBUFFER);
 
 Review comment:
   moved to class level clean up
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 14:38;githubbot;600","eolivelli commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321794023
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
 
 Review comment:
   @arshadmohammad if you run this test together with the other ones you will see that the system property does not  have effect. 
   You can add an assertion in your test case that the value of *readExtraSize* is the expected value and it is different from the default one. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 15:38;githubbot;600","eolivelli commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-528905353
 
 
   The failure of Maven build is due to a problem on the C client, not related to this patch
   
   ```
   client/zookeeper-client-c/generated -Wall -Werror -Wdeclaration-after-statement -fprofile-arcs -ftest-coverage -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c  -fPIC -DPIC -o .libs/zookeeper.o
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c: In function 'print_completion_queue':
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2560:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]      fprintf(LOGSTREAM,""Completion queue: "");
        [exec]      ^~~~~~~
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2562:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]          fprintf(LOGSTREAM,""empty\n"");
        [exec]          ^~~~~~~
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2568:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]          fprintf(LOGSTREAM,""%d,"",cptr->xid);
        [exec]          ^~~~~~~
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2571:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]      fprintf(LOGSTREAM,""end\n"");
        [exec]      ^~~~~~~
        [exec] Makefile:1032: recipe for target 'zookeeper.lo' failed
        [exec] cc1: all warnings being treated as errors
        [exec] make: *** [zookeeper.lo] Error 1
   [INFO] ----------------------------------------------------
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 15:40;githubbot;600","eolivelli commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-528906816
 
 
   @arshadmohammad Do you want this fix to go in 3.5.6 ? I am going to cut the release, I can wait for you
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 15:43;githubbot;600","eolivelli commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-528908771
 
 
   Oh I see now that you are targeting branch 3.5.
   Please target the PR to ""master"" then we will cherry-pick/backport to 3.5
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 15:48;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321839124
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
 
 Review comment:
   Thanks @eolivelli for your suggestions. I had run this test in ant build setup and it was working fine. I think in ant it was forking new jvm for every test class. that is why it might have passed. 
   But yes , if in one jvm multiple tests are running, value assigned to org.apache.jute.BinaryInputArchive#maxBuffer can not be changed from this test case.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 17:38;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321839313
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/JuteMaxBufferTest.java
 ##########
 @@ -0,0 +1,146 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * ""License""); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an ""AS IS"" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.zookeeper;
+
+import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import org.apache.zookeeper.ZooDefs.Ids;
+import org.apache.zookeeper.common.ZKConfig;
+import org.apache.zookeeper.server.ZKDatabase;
+import org.apache.zookeeper.server.persistence.FileTxnSnapLog;
+import org.apache.zookeeper.server.quorum.QuorumPeerTestBase;
+import org.apache.zookeeper.test.ClientBase;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+
+public class JuteMaxBufferTest extends QuorumPeerTestBase {
+    private MainThread mt;
+
+    @Before
+    public void setup() throws Exception {
+        // Request size for 100 nodes in this test class is 6197 bytes
+        System.setProperty(ZKConfig.JUTE_MAXBUFFER, Integer.toString(6197));
 
 Review comment:
   So what shall we do, shall we commit without test case? any other idea?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Sep/19 17:38;githubbot;600","arshadmohammad commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-529076577
 
 
   > @arshadmohammad Do you want this fix to go in 3.5.6 ? I am going to cut the release, I can wait for you
   
   Please go ahead, we can take this issue in the next version
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Sep/19 05:53;githubbot;600","eolivelli commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r321999985
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,18 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
 
 Review comment:
   In order to have better testing we can do as follows:
   - make maxBuffer and readExtraSize two instance variables
   - add two new constants (final static) DEFAULT_MAX_BUFFER and DEFAULT_READEXTRASIZE initialized with the system properties
   - in the constructor initialize the value using DEFAULT_MAX_BUFFER and DEFAULT_READEXTRASIZE
   - add a new constructor that allows to initialize maxBuffer and readExtraSize
   - add only unit tests about BinaryInputArchive, and not end to end tests
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Sep/19 09:33;githubbot;600","hanm commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r323568403
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,18 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public final int readExtraSize;
+
+    static {
+        Integer configuredValue =
+            Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"", maxBuffer);
+        if (configuredValue < 1024) {
+            // Earlier hard coded value is 1024, So the value should not be less than that
+            readExtraSize = 1024;
 
 Review comment:
   Do we have a reasonable estimate of an upper bound of the extra field padding which could reasonably cover more practice use cases, so users don't have to configure this value themselves? Obviously it's not tractable to find a single value that cover all cases (unless we use infinity), but it seems reasonable to increase this value - say by 10x while still be safeguarding requests with unreasonable length.
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 06:06;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r326497254
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,18 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
 
 Review comment:
   I liked the approach. thanks.  Addressed the comments more or less same way. Please have a look.  
   maxBuffer is used many places and it is not the default value, it is the configured value. So leaving this variable as it is. created other instance variable as suggested but with different name, hope it is ok.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 07:09;githubbot;600","arshadmohammad commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-533439882
 
 
   
   
   
   > I am wondering ....
   
   - Request actual size is known very late in the request processing chain. If very validate request size this time, purpose of sanity check is defeated..
   - If we try to create the request at the beginning of the request processing, i think sufficient data would not be available, also as you pointed out it would slower the performance for not good enough reasons.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 07:19;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r326506377
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -85,6 +85,18 @@ public String readString(String tag) throws IOException {
     }
     
     static public final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    static public final int readExtraSize;
+
+    static {
+        Integer configuredValue =
+            Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"", maxBuffer);
+        if (configuredValue < 1024) {
+            // Earlier hard coded value is 1024, So the value should not be less than that
+            readExtraSize = 1024;
 
 Review comment:
   In this patch we have changed the default value of extra size to same as max buffer value.  I do not foresee any scenario where record extra size is more than the actual record size.
   	So this value is going to be sufficient and possibly there would not be any need to configure jute.maxbuffer.extrasize.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 07:40;githubbot;600","hanm commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r326796321
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -27,8 +27,23 @@
  *
  */
 public class BinaryInputArchive implements InputArchive {
-    static public final String UNREASONBLE_LENGTH= ""Unreasonable length = "";
+    public static final String UNREASONBLE_LENGTH= ""Unreasonable length = "";
+    public static final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    private static final int extraMaxBuffer;
+
+    static {
+        Integer configuredExtraMaxBuffer =
+            Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"", maxBuffer);
 
 Review comment:
   one suggestion: existing maxbuffer has a name of ""jute.maxbuffer"" (note, without zookeeper prefix), so it might be better
   that we name this extra size property as ""jute.maxbuffer.extrasize"" to be consistent with existing style.
   
   also, we need documentation on this new property. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 20:44;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r326800956
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -27,8 +27,23 @@
  *
  */
 public class BinaryInputArchive implements InputArchive {
-    static public final String UNREASONBLE_LENGTH= ""Unreasonable length = "";
+    public static final String UNREASONBLE_LENGTH= ""Unreasonable length = "";
+    public static final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    private static final int extraMaxBuffer;
+
+    static {
+        Integer configuredExtraMaxBuffer =
+            Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"", maxBuffer);
 
 Review comment:
   There is big problem with jute.maxbuffer. It can not be configured in zoo.cfg.  We are forced to configure it though java system property like -Djute.maxbuffer=someValue.
   
   When we are giving property name zookeeper.jute.maxbuffer.extrasize. it can be configured in zoo.cfg as jute.maxbuffer.extrasize=someValue
   
   This is the reason I do not want to be consistent with jute.maxbuffer.  is it OK?
   
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 20:59;githubbot;600","hanm commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r326805524
 
 

 ##########
 File path: zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
 ##########
 @@ -27,8 +27,23 @@
  *
  */
 public class BinaryInputArchive implements InputArchive {
-    static public final String UNREASONBLE_LENGTH= ""Unreasonable length = "";
+    public static final String UNREASONBLE_LENGTH= ""Unreasonable length = "";
+    public static final int maxBuffer = Integer.getInteger(""jute.maxbuffer"", 0xfffff);
+    private static final int extraMaxBuffer;
+
+    static {
+        Integer configuredExtraMaxBuffer =
+            Integer.getInteger(""zookeeper.jute.maxbuffer.extrasize"", maxBuffer);
 
 Review comment:
   i see - sounds reasonable. I am ok with current name.
   
   side note - I never really remember why we have a few configuration options that's only available through java system properties and what's the criteria of choosing one versus another. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Sep/19 21:14;githubbot;600","hanm commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r327309721
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1077,6 +1077,17 @@ the variable does.
     problems will arise. This is really a sanity check. ZooKeeper is
     designed to store data on the order of kilobytes in size.
 
+* *jute.maxbuffer.extrasize*:
+    (Java system property: **zookeeper.jute.maxbuffer.extrasize**)
+    **New in 3.5.7:**
+    While processing client requests ZooKeeper server adds some additional information into 
+    the requests before persisting it as a transaction. Earlier this additional information size 
+    was fixed to 1024 bytes. For many scenarios, specially scenarios where jute.maxbuffer value
+    is more than 1 MB and request type is multi, this fixed size was sufficient.
 
 Review comment:
   replace `sufficient` with `insufficient` ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/19 20:18;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#discussion_r327741410
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1077,6 +1077,17 @@ the variable does.
     problems will arise. This is really a sanity check. ZooKeeper is
     designed to store data on the order of kilobytes in size.
 
+* *jute.maxbuffer.extrasize*:
+    (Java system property: **zookeeper.jute.maxbuffer.extrasize**)
+    **New in 3.5.7:**
+    While processing client requests ZooKeeper server adds some additional information into 
+    the requests before persisting it as a transaction. Earlier this additional information size 
+    was fixed to 1024 bytes. For many scenarios, specially scenarios where jute.maxbuffer value
+    is more than 1 MB and request type is multi, this fixed size was sufficient.
 
 Review comment:
   right, corrected it
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Sep/19 17:29;githubbot;600","hanm commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-534715062
 
 
   @arshadmohammad 
   
   can you also open a pull request to master branch? this pull request was targeting 3.5 instead of master and has a couple of merge conflicts with master branch.
   
   this pul request is now merged to 3.5: 7d263d0af62fbba6fa6e2e2464129bd959d81067, please close the pull request, thank you. 
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Sep/19 19:35;githubbot;600","arshadmohammad commented on pull request #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 06:03;githubbot;600","eolivelli commented on issue #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#issuecomment-534874159
 
 
   on master we have checkstyle, please fix the errors
   
   [INFO] 
   [INFO] --- maven-checkstyle-plugin:3.1.0:check (default-cli) @ zookeeper-jute ---
   [INFO] Starting audit...
   [ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/src/test/java/org/apache/jute/BinaryInputArchiveTest.java:143: First sentence should end with a period. [JavadocStyle]
   [ERROR] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-jute/src/test/java/org/apache/jute/BinaryInputArchiveTest.java:163: First sentence should end with a period. [JavadocStyle]
   Audit done.
   [INFO] There are 2 errors reported by Checkstyle 8.17 with checkstyle-strict.xml ruleset.
   [ERROR] src/test/java/org/apache/jute/BinaryInputArchiveTest.java:[143] (javadoc) JavadocStyle: First sentence should end with a period.
   [ERROR] src/test/java/org/apache/jute/BinaryInputArchiveTest.java:[163] (javadoc) JavadocStyle: First sentence should end with a period.
   [INFO] ------------------------------------------------------------------------
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 06:27;githubbot;600","arshadmohammad commented on issue #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#issuecomment-534878045
 
 
   Seems check style is running on test  classes. I think checkstyle should not run on test classes.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 06:41;githubbot;600","eolivelli commented on issue #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#issuecomment-534888803
 
 
   We have checkstyle everywhere.
   Test classes are first class citizens IMHO
   Please fix
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 07:18;githubbot;600","eolivelli commented on pull request #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#discussion_r328064856
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1387,6 +1387,17 @@ the variable does.
     problems will arise. This is really a sanity check. ZooKeeper is
     designed to store data on the order of kilobytes in size.
 
+* *jute.maxbuffer.extrasize*:
+    (Java system property: **zookeeper.jute.maxbuffer.extrasize**)
+    **New in 3.6.0:**
 
 Review comment:
   You have committed **New in 3.5.7** for branch-3.5.
   
   I feel we should stick to 3.5.7, though I don't know which ever we will release first 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 11:19;githubbot;600","arshadmohammad commented on pull request #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#discussion_r328147177
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1387,6 +1387,17 @@ the variable does.
     problems will arise. This is really a sanity check. ZooKeeper is
     designed to store data on the order of kilobytes in size.
 
+* *jute.maxbuffer.extrasize*:
+    (Java system property: **zookeeper.jute.maxbuffer.extrasize**)
+    **New in 3.6.0:**
 
 Review comment:
   What should be the version in branch-3.4? 3.4.15 or 3.5.7?
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 14:13;githubbot;600","eolivelli commented on pull request #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#discussion_r328208988
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1387,6 +1387,17 @@ the variable does.
     problems will arise. This is really a sanity check. ZooKeeper is
     designed to store data on the order of kilobytes in size.
 
+* *jute.maxbuffer.extrasize*:
+    (Java system property: **zookeeper.jute.maxbuffer.extrasize**)
+    **New in 3.6.0:**
 
 Review comment:
   I think we won't port it to 3.4, it is a maintenance only version
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 16:02;githubbot;600","arshadmohammad commented on pull request #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096#discussion_r328209885
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1387,6 +1387,17 @@ the variable does.
     problems will arise. This is really a sanity check. ZooKeeper is
     designed to store data on the order of kilobytes in size.
 
+* *jute.maxbuffer.extrasize*:
+    (Java system property: **zookeeper.jute.maxbuffer.extrasize**)
+    **New in 3.6.0:**
 
 Review comment:
   OK
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Sep/19 16:04;githubbot;600","asfgit commented on pull request #1096: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1096
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 06:55;githubbot;600","arshadmohammad commented on issue #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080#issuecomment-535379558
 
 
   Thanks @eolivelli @hanm and @lvfangmin for the reviews.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 07:36;githubbot;600","arshadmohammad commented on pull request #1080: ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper service unavailable
URL: https://github.com/apache/zookeeper/pull/1080
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Sep/19 07:36;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,22800,,,0,22800,,,,,,,,,,,,ZOOKEEPER-2101,,,,,,,,,,,,,,,,"07/Aug/19 12:53;arshad.mohammad;ZOOKEEPER-3496-001.patch;https://issues.apache.org/jira/secure/attachment/12976934/ZOOKEEPER-3496-001.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 26 10:20:49 UTC 2019,,,,,,,,,,"0|z05ehc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/19 08:27;arshad.mohammad;This problem is same as ZOOKEEPER-2101. Created new JIRA to start fresh discussion.;;;","07/Aug/19 12:54;arshad.mohammad;Attached Fixed ZOOKEEPER-3496-001.patch for reference, will create PR later;;;","04/Sep/19 20:42;lvfangmin;[~arshad.mohammad] thanks for reporting the issue and providing the patch, it looks good to me, do you mind to create a PR for this.;;;","05/Sep/19 07:53;arshad.mohammad;PR Created;;;","20/Sep/19 12:28;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4148//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4148//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4148//console

This message is automatically generated.;;;","23/Sep/19 19:15;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4150//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4150//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4150//console

This message is automatically generated.;;;","24/Sep/19 17:45;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4152//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4152//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4152//console

This message is automatically generated.;;;","26/Sep/19 06:56;eolivelli;Committed to master branch
Thank you [~arshad.mohammad];;;","26/Sep/19 07:42;arshad.mohammad;[~hanm] had committed to branch-3.5. This issue is committed to branch-3.5 and master
;;;","26/Sep/19 07:43;arshad.mohammad;Thanks [~eolivelli], [~hanm], [~lvfangmin] for the reviews.;;;","26/Sep/19 08:22;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #548 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/548/])
ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper (enrico.olivelli: rev 4279758ead655aff34cdff21c9f2c71d66030d14)
* (edit) zookeeper-jute/src/test/java/org/apache/jute/BinaryInputArchiveTest.java
* (edit) zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
;;;","26/Sep/19 10:20;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #711 (See [https://builds.apache.org/job/ZooKeeper-trunk/711/])
ZOOKEEPER-3496: Transaction larger than jute.maxbuffer makes ZooKeeper (enrico.olivelli: rev 4279758ead655aff34cdff21c9f2c71d66030d14)
* (edit) zookeeper-jute/src/test/java/org/apache/jute/BinaryInputArchiveTest.java
* (edit) zookeeper-jute/src/main/java/org/apache/jute/BinaryInputArchive.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
;;;",,,,,,,,,,,,,,,,,,,,,,,,,
Logging false leader election times,ZOOKEEPER-3479,13247975,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,karolos,karolos,karolos,31/Jul/19 01:23,23/Jul/20 05:12,13/Jul/23 09:08,02/Aug/19 18:09,3.5.5,,,,,,,,,3.6.0,,,,,leaderElection,,,,0,pull-request-available,,"There seems to be a problem with the logging of leader election times: the logged times are much smaller than the actual time it took for the leader election to complete.

This bug can be easily reproduced by following these steps:

1) Run a ZK cluster of 3 servers

2) Kill the server that is currently the leader

3) The log files of the remaining 2 servers contain false leader election times

 

In the attached files you can see the log files of the remaining 2 serve. For brevity, I removed the parts before and after the leader election from the log files.

For example, in {{server1.txt}} we can see that:

 
{code:java}
2019-07-31 00:57:31,852 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1318] - PeerState set to LOOKING
2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1193] - LOOKING
2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):FastLeaderElection@885] - New election. My id = 1, proposed zxid=0x100000001
[...]
2019-07-31 00:57:32,272 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 1 MS{code}
Leader election supposedly took only 1ms, but in reality it took (32,272 - 31,853) = 419ms!

The reason for this bug seems to be the introduction of this line
{code:java}
start_fle = Time.currentElapsedTime();{code}
(seen here [https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1402]) 

back in this commit [https://github.com/apache/zookeeper/commit/5428cd4bc963c2e653a260c458a8a8edf3fa08ef].

 

 

 

 ",,hanm,hudson,karolos,,,,,,,,,,,,,,,,,"insumity commented on pull request #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031
 
 
   See https://issues.apache.org/jira/browse/ZOOKEEPER-3479 here for the issue.
   
   The problem is that the logged leader election times are much smaller than in reality. For example, we have log files that contain the following lines:
   ```
   2019-07-31 00:57:31,852 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1318] - PeerState set to LOOKING
   2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):QuorumPeer@1193] - LOOKING
   2019-07-31 00:57:31,853 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):FastLeaderElection@885] - New election. My id = 1, proposed zxid=0x100000001
   [...]
   2019-07-31 00:57:32,272 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2791)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 1 MS
   ```
   Leader election took more than 400ms, not 1ms!
   
   
   The reason this logging bug exists has to do with this [line](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1402) in `QuorumPeer`. The computation of the leader election time starts inside [`FastLeaderElection.lookForLeader` ](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L915) where `start_fle` is set. After a server has found a leader, it repeats the `QuorumPeer` [loop](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1288) and resets the `start_fle` value. Hence, when, for example, a follower [logs](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/Follower.java#L75) how much time it took for the leader election, it logs a much smaller time than it actually took for the leader election to complete. To be precise, it just logs the time it took to loop inside [`QuorumPeer`](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1288).
   
   Furthermore, if we remove the problematic [line](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java#L1402), then there is no reason to check whether `start_fle == 0` in [`FastLeaderElection`](https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java#L914), since `start_fle` is always `0` at that point. I'm not sure if this `if` statement is needed in the first place.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 01:48;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-516694171
 
 
   LGTM.
   
   @lvfangmin Any feedback for this patch? I am curious if you guys use something different internally to measure LE time, as the current LE metrics is not very reliable.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 04:49;githubbot;600","lvfangmin commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517127249
 
 
   @hanm internally, we're tracking the quorum unavailable time, which is the time between server first went to LOOKING state and set ZAB state to leading broadcast state. This is close to real quorum unavailable time in general, which includes leader election time + leader activation time (syncing with majority).
   
   This metric is more useful than the leader election itself, and we're using this instead of the leader election metric, we'll contribute that back as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:37;githubbot;600","lvfangmin commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517127681
 
 
   Jenkins failed due to flaky test in CommitProcessorMetricsTest, tracked in JIRA ZOOKEEPER-3480.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:38;githubbot;600","lvfangmin commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517127713
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:38;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365560
 
 
   test maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:39;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365560
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:39;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365560
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:39;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517365866
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 16:40;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517397943
 
 
   thanks @lvfangmin.
   
   >> which includes leader election time + leader activation time
   
   Agree. Since this also include LE time, unless you guys are using something different to measure LE, this patch should improve your metrics accuracy as well, though it probably would not make a big difference if the leader activation time costs a lot more than LE. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 18:08;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517397994
 
 
   test maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 18:08;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517398734
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 18:10;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517453247
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 20:51;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517488865
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 23:07;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517753659
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 15:56;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517753659
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 16:45;githubbot;600","insumity commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517769682
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 16:45;githubbot;600","hanm commented on issue #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-517794803
 
 
   Thanks @insumity , the build is green now, and I am landing this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 18:05;githubbot;600","asfgit commented on pull request #1031: ZOOKEEPER-3479: Logging false leader election times
URL: https://github.com/apache/zookeeper/pull/1031
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 18:09;githubbot;600","karanmehta93 commented on pull request #1031:
URL: https://github.com/apache/zookeeper/pull/1031#issuecomment-662821654


   > This metric is more useful than the leader election itself, and we're using this instead of the leader election metric, we'll contribute that back as well.
   
   @lvfangmin Your point makes sense. Did you contribute that metric back? I am interested in it.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/20 05:12;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,12000,,,0,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,"31/Jul/19 01:09;karolos;server1.txt;https://issues.apache.org/jira/secure/attachment/12976286/server1.txt","31/Jul/19 01:09;karolos;server2.txt;https://issues.apache.org/jira/secure/attachment/12976285/server2.txt",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 02 23:38:30 UTC 2019,,,,,,,,,,"0|z056g8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"02/Aug/19 18:09;hanm;Issue resolved by pull request 1031
[https://github.com/apache/zookeeper/pull/1031];;;","02/Aug/19 21:31;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #643 (See [https://builds.apache.org/job/ZooKeeper-trunk/643/])
ZOOKEEPER-3479: Logging false leader election times (hanm: rev 3882a0171f91280bf1adbbd4ffaeb17cb5131316)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
;;;","02/Aug/19 23:38;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #479 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/479/])
ZOOKEEPER-3479: Logging false leader election times (hanm: rev 3882a0171f91280bf1adbbd4ffaeb17cb5131316)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential lock unavailable due to dangling ephemeral nodes left during local session upgrading,ZOOKEEPER-3471,13247541,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,lvfangmin,lvfangmin,lvfangmin,28/Jul/19 17:50,16/Oct/19 22:12,13/Jul/23 09:08,09/Oct/19 14:49,3.6.0,,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"There is a race condition which might be triggered if the client create session, upgrading the session with ephemeral node, then immediately issued close session request before it's removed from local session tracker.
 
The close session request will be treated as a local session close request since it still exists in the local session tracker, which goes through the ZK pipeline and delete the session from both local and global session tracker. Since the session is not tracked anymore, it will leave the ephemeral nodes there.
 
 ",,andor,hanm,hudson,lvfangmin,,,,,,,,,,,,,,,,"lvfangmin commented on pull request #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jul/19 18:07;githubbot;600","dineshappavoo commented on pull request #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#discussion_r310332083
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -992,6 +990,7 @@ public void submitRequestNow(Request si) {
             touch(si.cnxn);
             boolean validpacket = Request.isValid(si.type);
             if (validpacket) {
+                setLocalSessionFlag(si);
 
 Review comment:
   I might be missing some info here (Please correct me if I am). So this happening only for requests going through RequestThrottler? And not the requests going through RequestProcessor? (Since this `submitRequestNow` function is being called only in RequestThrottler)
   Appreciate if you could explain little bit more. Thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Aug/19 00:54;githubbot;600","lvfangmin commented on pull request #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#discussion_r312105620
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -992,6 +990,7 @@ public void submitRequestNow(Request si) {
             touch(si.cnxn);
             boolean validpacket = Request.isValid(si.type);
             if (validpacket) {
+                setLocalSessionFlag(si);
 
 Review comment:
   I'm not quite sure I understand your question here, all the requests will go through RequestThrottler, and then being put into RequestProcessor now.
   
   So no request will be put into RequestProcessor directly, right? Let me know if I didn't get your question.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 15:39;githubbot;600","dineshappavoo commented on pull request #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#discussion_r313177914
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
 ##########
 @@ -992,6 +990,7 @@ public void submitRequestNow(Request si) {
             touch(si.cnxn);
             boolean validpacket = Request.isValid(si.type);
             if (validpacket) {
+                setLocalSessionFlag(si);
 
 Review comment:
   Thanks @lvfangmin . I think I misunderstood. It was good to clarify and I checked little deeper after that. Yes, now I understood all the requests go through `RequestThrottler`. 
   
   And the change looks good to me.  Thanks for fixing it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/19 00:10;githubbot;600","eolivelli commented on issue #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#issuecomment-530278844
 
 
   @hanm  @anmolnar do you have cycles for a review?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 08:30;githubbot;600","hanm commented on issue #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#issuecomment-530676903
 
 
   I left a comment in JIRA a while ago. Basically, the change looks fine but I failed to reason about the exact race condition and why this change could fix it, thus was asking a little bit clarification in JIRA.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 05:55;githubbot;600","lvfangmin commented on issue #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#issuecomment-539633878
 
 
   @hanm sorry for the lately reply, was fighting for a serials of prod issues due to strange JVM AVX bugs. 
   
   I've added the detailed flow about the race condition in the JIRA, let me know if it's not clear.
   
   Checked the Jenkins, it's failed due to a flaky metric test, this PR shouls be ready to go.
   
   @eolivelli @hanm @anmolnar please help merge it if it looks good.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Oct/19 18:06;githubbot;600","asfgit commented on pull request #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 14:49;githubbot;600","anmolnar commented on issue #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#issuecomment-540036401
 
 
   Committed to master branch. Thanks @lvfangmin !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Oct/19 14:49;githubbot;600","hanm commented on issue #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#issuecomment-542912927
 
 
   >> @hanm sorry for the lately reply, was fighting for a serials of prod issues due to strange JVM AVX bugs.
   @lvfangmin 
   NP, and sorry for late reply on my side as well (similar situations here, was fighting prod issues). 
   The comments on JIRA make sense. Really appreciate your follow ups on this. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Oct/19 22:11;githubbot;600","hanm commented on issue #1025: [ZOOKEEPER-3471] Fix potential lock unavailable due to dangling ephemeral nodes left during local session upgrading
URL: https://github.com/apache/zookeeper/pull/1025#issuecomment-542912927
 
 
   >> @hanm sorry for the lately reply, was fighting for a serials of prod issues due to strange JVM AVX bugs.
   
   @lvfangmin 
   NP, and sorry for late reply on my side as well (similar situations here, was fighting prod issues). 
   The comments on JIRA make sense. Really appreciate your follow ups on this. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Oct/19 22:12;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Oct 16 22:08:22 UTC 2019,,,,,,,,,,"0|z053s8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Jul/19 18:42;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4076//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4076//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4076//console

This message is automatically generated.;;;","12/Aug/19 22:30;hanm;[~lvfangmin] I feel I get the race condition you described at a high level, but I had a hard time to actually construct a conceptual model on the race that maps to the code (due to the convoluted session handling codes). 

Do you mind to provide a little bit more concrete examples on where exactly the race happening? In particular:

bq. delete the session from both local and global session tracker

Does this happen before or after the session upgrade finish? As we know, the session upgrade finishing by commit a session in quorum, so if this delete from session tracker finishes before session upgrading finish, then the commit session will re-add the session back; if this delete is finished after session upgrading finish, then we still have the session on other quorum servers. So every case seems ok?;;;","08/Oct/19 18:03;lvfangmin;Hi Michael, sorry for the lately reply, just saw your comment here.

Here is the detailed flow for this issue:
 # client created a local session s1
 # it then issued create ephemeral node request, which will go through the FollowerRequestProcessor, check and upgrade the session
 # but before it's finished checking, the client issued close session request immediately, which will be treated as a local session
 # in case the previous upgrading session is finished and committed, then executing the local close session in step 3 in FinalRequestProcessor, [LearnerSessionTracker|[https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java#L76]] will remove it from both local session and global session
 # so the global session will miss on this learner, but exists on others.

Let me know if this is not clear.;;;","09/Oct/19 14:49;andor;Issue resolved by pull request 1025
[https://github.com/apache/zookeeper/pull/1025];;;","09/Oct/19 17:10;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #730 (See [https://builds.apache.org/job/ZooKeeper-trunk/730/])
ZOOKEEPER-3471: Fix potential lock unavailable due to dangling ephemeral (andor: rev 4951a090d7c946f57ac5ab09b5d48a5d7831001d)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/SessionUpgradeQuorumTest.java
;;;","09/Oct/19 19:10;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #568 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/568/])
ZOOKEEPER-3471: Fix potential lock unavailable due to dangling ephemeral (andor: rev 4951a090d7c946f57ac5ab09b5d48a5d7831001d)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/SessionUpgradeQuorumTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
;;;","16/Oct/19 22:08;hanm;Thanks [~lvfangmin] for getting back on this. Your reply explained well on the race condition. My initial understanding after reading problem description was that this was a quorum level problem (where my confusions came from) but it actually is a local (learner specific) problem, which now makes sense to me.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Apache RAT check by excluding binary files (images),ZOOKEEPER-3440,13241072,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,eolivelli,eolivelli,eolivelli,22/Jun/19 22:37,16/Oct/19 18:58,13/Jul/23 09:08,28/Jun/19 22:38,3.6.0,,,,,,,,,3.5.6,3.6.0,,,,build,documentation,,,0,pull-request-available,,"I see this error on Jenkins as we are missing the exclusion for the images of the docs.

{code:java}
Unapproved licenses:

  /home/jenkins/jenkins-slave/workspace/zookeeper-master-maven/zookeeper-docs/src/main/resources/markdown/images/state_dia.dia
{code}

We should also add this check to the precommit job on Travis (this will be part of the commit) and on CI (this is a manual configuration, to be done after fixing this issue)",,eolivelli,hanm,hudson,nkalmar,,,,,,,,,,,,,,,,"eolivelli commented on pull request #998: ZOOKEEPER-3440 Fix Apache RAT check by excluding binary files (images)
URL: https://github.com/apache/zookeeper/pull/998
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/19 22:41;githubbot;600","eolivelli commented on issue #998: ZOOKEEPER-3440 Fix Apache RAT check by excluding binary files (images)
URL: https://github.com/apache/zookeeper/pull/998#issuecomment-504705480
 
 
   @anmolnar @nkalmar the patch is now ready, as already said on JIRA (https://issues.apache.org/jira/browse/ZOOKEEPER-3440)  I don't like that exclusions we should take care of cleaning up the contrib module
   
   By now we can fix the pom as I am suggesting
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/19 23:20;githubbot;600","eolivelli commented on issue #998: ZOOKEEPER-3440 Fix Apache RAT check by excluding binary files (images)
URL: https://github.com/apache/zookeeper/pull/998#issuecomment-504705480
 
 
   @anmolnar @nkalmar @phunt   the patch is now ready, as already said on JIRA (https://issues.apache.org/jira/browse/ZOOKEEPER-3440)  I don't like that exclusions we should take care of cleaning up the contrib module
   
   By now we can fix the pom as I am suggesting
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jun/19 23:20;githubbot;600","nkalmar commented on issue #998: ZOOKEEPER-3440 Fix Apache RAT check by excluding binary files (images)
URL: https://github.com/apache/zookeeper/pull/998#issuecomment-506705380
 
 
   Should this fix go to 3.5 as well? Looks to me it should have the same problem.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/19 11:46;githubbot;600","eolivelli commented on issue #998: ZOOKEEPER-3440 Fix Apache RAT check by excluding binary files (images)
URL: https://github.com/apache/zookeeper/pull/998#issuecomment-506719531
 
 
   @nkalmar I image so, as we are using Maven in zk 3.5 it is better to apply the fix there.
   I don't think the patch will apply cleanly to branch-3.5 but I will be on vacation from tomorrow, I can send another patch but after coming back :-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/19 12:41;githubbot;600","asfgit commented on pull request #998: ZOOKEEPER-3440 Fix Apache RAT check by excluding binary files (images)
URL: https://github.com/apache/zookeeper/pull/998
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/19 22:38;githubbot;600","eolivelli commented on pull request #1086: ZOOKEEPER-3440 Fix Apache RAT on branch 3.5
URL: https://github.com/apache/zookeeper/pull/1086
 
 
   Partial port of commit 1e6edc9229c418b8bea46ccc5d603ea1c4a47a9e to branch-3.5 in order to make Apache RAT check pass before release 3.5.6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 21:09;githubbot;600","eolivelli commented on issue #1086: ZOOKEEPER-3440 Fix Apache RAT on branch 3.5
URL: https://github.com/apache/zookeeper/pull/1086#issuecomment-530567437
 
 
   I will cherry pick to 3.5.6 once this patch lands to branch-3.5.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 21:11;githubbot;600","eolivelli commented on issue #1086: ZOOKEEPER-3440 Fix Apache RAT on branch 3.5
URL: https://github.com/apache/zookeeper/pull/1086#issuecomment-530567572
 
 
   Original reviewers were @anmolnar @hanm @nkalmar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 21:11;githubbot;600","eolivelli commented on issue #1086: ZOOKEEPER-3440 Fix Apache RAT on branch 3.5
URL: https://github.com/apache/zookeeper/pull/1086#issuecomment-530687984
 
 
   @hanm @lvfangmin would you please merge this patch ?
   as usual it is better to not commit committer's own patches
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 06:38;githubbot;600","hanm commented on issue #1086: ZOOKEEPER-3440 Fix Apache RAT on branch 3.5
URL: https://github.com/apache/zookeeper/pull/1086#issuecomment-531021504
 
 
   merged as https://github.com/apache/zookeeper/commit/7eb4cca1c44d62768de60185345b6ab344785556, please close PR.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Sep/19 21:53;githubbot;600","eolivelli commented on pull request #1086: ZOOKEEPER-3440 Fix Apache RAT on branch 3.5
URL: https://github.com/apache/zookeeper/pull/1086
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Sep/19 05:17;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 11 21:42:29 UTC 2019,,,,,,,,,,"0|z040gw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jun/19 23:17;eolivelli;In the patch I had to clean up the exclusions list as rat was not passing on ""C client"" and on ""cotrib"" module.

I never dug into contrib but now I see that those modules are full of unlicensed files.
We really should take care of this problem and fix the files (or drop the unused contrib modules).

Personally I would keep only the zkpython module on the repository and move it out of ""contrib"", making it a first class citizen next to the C client

;;;","28/Jun/19 11:45;nkalmar;This file is also available on 3.5, shouldn't this patch also go into 3.5 branch?;;;","28/Jun/19 22:38;hanm;Issue resolved by pull request 998
[https://github.com/apache/zookeeper/pull/998];;;","29/Jun/19 01:00;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #592 (See [https://builds.apache.org/job/ZooKeeper-trunk/592/])
ZOOKEEPER-3440: Fix Apache RAT check by excluding binary files (images) (hanm: rev 1e6edc9229c418b8bea46ccc5d603ea1c4a47a9e)
* (edit) .travis.yml
* (edit) pom.xml
;;;","29/Jun/19 02:17;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #426 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/426/])
ZOOKEEPER-3440: Fix Apache RAT check by excluding binary files (images) (hanm: rev 1e6edc9229c418b8bea46ccc5d603ea1c4a47a9e)
* (edit) pom.xml
* (edit) .travis.yml
;;;","11/Sep/19 21:42;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4135//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4135//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4135//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zkpython build broken after maven migration,ZOOKEEPER-3433,13240326,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,phunt,phunt,phunt,19/Jun/19 01:07,16/Oct/19 18:59,13/Jul/23 09:08,25/Jun/19 13:51,3.4.14,3.5.5,3.6.0,,,,,,,3.5.6,3.6.0,,,,contrib-bindings,,,,0,pull-request-available,,zkpython is not building after the migration to maven directory structure.,,hudson,nkalmar,,,,,,,,,,,,,,,,,,"phunt commented on pull request #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991
 
 
   Fixed the build and test infrastructure for zkpython.
   
   Verified the build and tests all passing under both ubuntu and macos.
   
   Change-Id: I3c80774a2712f280d1f14739d1eb78baa066fdc6
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/19 01:10;githubbot;600","eolivelli commented on pull request #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#discussion_r295120734
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-zkpython/src/test/run_tests.sh
 ##########
 @@ -30,9 +30,9 @@ else
 fi
 
 # Find the build directory containing zookeeper.so
-SO_PATH=`find ../../../build/ -name ""zookeeper.so"" | head -1`
+SO_PATH=`find ../../build/ -name ""zookeeper.so"" | head -1`
 
 Review comment:
   Isn't any 'target' directory name?
   Did you build with raw 'make' the c client?
   
   There are multiple ways to build the C client
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/19 04:57;githubbot;600","phunt commented on pull request #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#discussion_r295125793
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-zkpython/src/test/run_tests.sh
 ##########
 @@ -30,9 +30,9 @@ else
 fi
 
 # Find the build directory containing zookeeper.so
-SO_PATH=`find ../../../build/ -name ""zookeeper.so"" | head -1`
+SO_PATH=`find ../../build/ -name ""zookeeper.so"" | head -1`
 
 Review comment:
   I used ant to build the c client as maven doesn't seem to be working (the c client is not being built even with ""full-build"" profile). That's the way it was always done on the past - just continuing until we have a maven based approach. So with this we get back to status quo - after the directory structure changes for maven I mean.
   
   I did a ""ant clean compile compile-native"" at the toplevel, then ""ant compile"" and ""ant test"" within the zookeeper-contrib-zkpython directory.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;19/Jun/19 05:30;githubbot;600","phunt commented on issue #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#issuecomment-504114090
 
 
   @eolivelli can you +1 this (or @anmolnar ) or give me addl feedback? I have some addl patches for python3 that i'd like to land. thanks.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jun/19 17:30;githubbot;600","eolivelli commented on issue #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#issuecomment-504130695
 
 
   @phunt we should commit  #993 that is fixing the C client build as said on the ML
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jun/19 18:20;githubbot;600","eolivelli commented on issue #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#issuecomment-504148151
 
 
   How can I test this patch locally?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Jun/19 19:14;githubbot;600","phunt commented on issue #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#issuecomment-504245120
 
 
   > we should commit #993 that is fixing the C client build as said on the ML
   
   I provided some feedback. Let's work on #993 separately and not block progress here as the legacy (pre-mvn) is still working.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/19 00:27;githubbot;600","phunt commented on issue #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#issuecomment-504245362
 
 
   > How can I test this patch locally?
   
   I did a ""ant clean compile compile-native"" at the toplevel, then ""ant compile"" and ""ant test"" within the zookeeper-contrib-zkpython directory.
   
   You need to have python2 installed and the dev libraries available.
   
   That runs all the tests for zkpython (with this patch applied)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jun/19 00:28;githubbot;600","asfgit commented on pull request #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jun/19 13:48;githubbot;600","nkalmar commented on issue #991: ZOOKEEPER-3433 zkpython build broken after maven migration
URL: https://github.com/apache/zookeeper/pull/991#issuecomment-505455691
 
 
   Committed to master and 3.5 (tested, this patch also solves it on 3.5, which has the same problem)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jun/19 13:54;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6000,,,0,6000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jun 25 16:46:01 UTC 2019,,,,,,,,,,"0|z03vvs:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/Jun/19 13:51;nkalmar;Issue resolved by pull request 991
[https://github.com/apache/zookeeper/pull/991];;;","25/Jun/19 16:19;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #420 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/420/])
ZOOKEEPER-3433: zkpython build broken after maven migration (nkalmar: rev 2711d69297ce45cb6fc5beab482e4ec36d07249f)
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/python/setup.py
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/test/zkServer.sh
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/test/run_tests.sh
;;;","25/Jun/19 16:46;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #584 (See [https://builds.apache.org/job/ZooKeeper-trunk/584/])
ZOOKEEPER-3433: zkpython build broken after maven migration (nkalmar: rev 2711d69297ce45cb6fc5beab482e4ec36d07249f)
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/test/zkServer.sh
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/python/setup.py
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/test/run_tests.sh
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZK prime_connection(the Handshake) can complete without reading all the payload.,ZOOKEEPER-3426,13238847,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,ztzg,suhas.dantkale,suhas.dantkale,11/Jun/19 19:11,28/Mar/21 08:55,13/Jul/23 09:08,13/Jan/21 08:29,,,,,,,,,,3.7.0,,,,,c client,,,,0,pull-request-available,,"/* returns:

 * -1 if recv call failed,

 * 0 if recv would block,

 * 1 if success

 */

static int recv_buffer(zhandle_t *zh, buffer_list_t *buff)

{

  int off = buff->curr_offset;

  int rc = 0;

[................]

 if (buff == &zh->primer_buffer && rc == buff->len - 1) ++rc; <====== Handshake prematurely complete.





On non-blocking socket, it's possible that socket has exactly ""buff->len - 1"" bytes to read.
Because of the above line, the Handshake is prematurely completed.
What this can lead to is:
There will be one outstanding byte left on the socket and it might go as part of next message which could get corrupted.

I think this can lead to ZRUNTIMEINCONSISTENCY issues later.",,suhas.dantkale,ztzg,,,,,,,,,,,,,,,,,,"ztzg opened a new pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576


   Suhas Dantkale noticed that the C client, which uses non-blocking sockets, could end up reading only the first 40 bytes of a 41-byte connection response and concluding that its handshake was complete, leaving one byte in the pipe.
       
   Similarly (though even less likely), the library could be left hanging waiting for a 41th byte after having received a fragmented 40-byte response from an old server.
       
   This patch makes the logic resistant to fragmentation by considering the server-provided length encoded in the response packet.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 16:54;githubbot;600","ztzg commented on pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576#issuecomment-757507453


   Cc: @suhasdantkale.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/21 16:54;githubbot;600","symat commented on pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576#issuecomment-757686302


   also nice tests! :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jan/21 07:59;githubbot;600","ztzg commented on pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576#issuecomment-757908038


   @symat: Okay, noted. Will probably merge tomorrow, then.
   
   Cc: @fpj and @phunt, in case they want to take a look.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jan/21 12:02;githubbot;600","ztzg commented on pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576#issuecomment-757918965


   > also nice tests! :)
   
   Using the framework which was crashing @ctubbsii's Fedora tests :)  Having the `_st` variant of the client is quite useful, as well.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jan/21 12:24;githubbot;600","ztzg closed pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 08:28;githubbot;600","ztzg commented on pull request #1576:
URL: https://github.com/apache/zookeeper/pull/1576#issuecomment-759293666


   > I agree with Enrico, I would also like to see this fix to land in 3.7
   
   Okay, merged this into `master`.  (Still haven't officially branched 3.7.)
   
   I'm considering pulling this into 3.6.  (And, possibly, 3.5.)  This is an important fix in theory, but I'm not sure it ever happens in practice. @suhasdantkale, have you actually experienced the problem, or did you just spot it in the code?
   
   All: what do you think?
   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Jan/21 08:35;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jan 13 08:29:16 UTC 2021,,,,,,,,,,"0|z03mso:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Jan/21 20:48;ztzg;Hi [~suhas.dantkale],

That is a nasty one, indeed.  Have you actually experienced the problem, or did you just spot it in the code?  In any case, I agree with your analysis.

I have a proposed fix, but I still have to figure out how to include tests.  (I will submit a ""pull request"" once I am done.)  In the meantime, here is a sneak peek:

{code:c}
rc = zookeeper_recv(zh->fd, buff->buffer+off, buff->len-off, 0);

/* dirty hack to make new client work against old server
 * old server sends 40 bytes to finish connection handshake,
 * while we're expecting 41 (1 byte for read-only mode data) */
if (rc > 0 && buff == &zh->primer_buffer) {
    /* primer_buffer's curr_offset starts at 4 (see prime_connection) */
    int avail = buff->curr_offset - sizeof(buff->len) + rc;

    /* exactly 40 bytes (out of 41 expected) collected? */
    if (avail == buff->len - 1) {
        int32_t reply_len;

        /* extract length of ConnectResponse (+ 1-byte flag?) */
        memcpy(&reply_len, buff->buffer, sizeof(reply_len));
        reply_len = ntohl(reply_len);

        /* if 1-byte flag was not sent, fake it (value 0) */
        if ((int)(reply_len + sizeof(reply_len)) == buff->len - 1) {
            ++rc;
        }
    }
}
{code}

The gist of it is:

# We look at how much data has accumulated in the buffer (as opposed to checking {{rc}});
# If the amount is sufficient, we look at the encoded {{length}} at offset 0.

Comments welcome!;;;","13/Jan/21 08:29;ztzg;Issue resolved by pull request 1576
[https://github.com/apache/zookeeper/pull/1576];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
owasp flagging jackson-databind,ZOOKEEPER-3405,13236106,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,phunt,phunt,phunt,28/May/19 21:21,16/Oct/19 18:58,13/Jul/23 09:08,30/May/19 13:56,3.5.5,3.6.0,,,,,,,,3.5.6,3.6.0,,,,,,,,0,pull-request-available,,"Owasp job is flagging jackson-databind for update:

CVE-2019-12086	CWE-200 Information Exposure	Medium(5.0)	jackson-databind-2.9.8.jar",,hudson,nkalmar,,,,,,,,,,,,,,,,,,"phunt commented on pull request #962: ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP CVE
URL: https://github.com/apache/zookeeper/pull/962
 
 
   Upgraded the library to the latest version.
   
   Change-Id: I94743e7f7817202fff25c757730ba05fe0a9cc17
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 21:29;githubbot;600","eolivelli commented on issue #962: ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP CVE
URL: https://github.com/apache/zookeeper/pull/962#issuecomment-496789395
 
 
   retest maven buiild
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 05:26;githubbot;600","eolivelli commented on issue #962: ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP CVE
URL: https://github.com/apache/zookeeper/pull/962#issuecomment-496946298
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 13:53;githubbot;600","phunt commented on issue #962: ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP CVE
URL: https://github.com/apache/zookeeper/pull/962#issuecomment-497200481
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 04:45;githubbot;600","asfgit commented on pull request #962: ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP CVE
URL: https://github.com/apache/zookeeper/pull/962
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 13:54;githubbot;600","nkalmar commented on issue #962: ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP CVE
URL: https://github.com/apache/zookeeper/pull/962#issuecomment-497338561
 
 
   Thanks Patrick, committed to 3.5 and master. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 13:57;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 30 23:33:06 UTC 2019,,,,,,,,,,"0|z035yo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"30/May/19 13:56;nkalmar;Issue resolved by pull request 962
[https://github.com/apache/zookeeper/pull/962];;;","30/May/19 23:10;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #381 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/381/])
ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP (nkalmar: rev ca4b12430ef579f67785146a195ebfed5ca73f39)
* (edit) build.xml
* (edit) pom.xml
;;;","30/May/19 23:33;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #546 (See [https://builds.apache.org/job/ZooKeeper-trunk/546/])
ZOOKEEPER-3405: Upgrade the version of Jackson-databind to address OWASP (nkalmar: rev ca4b12430ef579f67785146a195ebfed5ca73f39)
* (edit) pom.xml
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BouncyCastle upgrade to 1.61 might cause flaky test issues,ZOOKEEPER-3404,13235871,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,andor,andor,27/May/19 20:48,16/Oct/19 18:59,13/Jul/23 09:08,28/May/19 14:08,3.6.0,,,,,,,,,3.5.6,3.6.0,,,,tests,,,,0,pull-request-available,,"I've seen a lot of test timeout errors with QuorumSSL tests since I upgraded master to BouncyCastle 1.61 due to a Java 9 warning. The warning has been reported by [~eolivelli] which we tried to solve by the upgrade, but the warning message is still present so I don't see any harm in downgrading to the previous version. 

The timeout errors are very frequent with recent Java versions (11+) and quite rare with Java 8.

I think it's worth a try to downgrade and see if tests will be in a better shape.",,andor,hudson,nkalmar,,,,,,,,,,,,,,,,,"anmolnar commented on pull request #961: ZOOKEEPER-3404. Downgrade BouncyCastle to 1.60
URL: https://github.com/apache/zookeeper/pull/961
 
 
   I've seen a lot of test timeout errors with QuorumSSL tests since I upgraded master to BouncyCastle 1.61 due to a Java 9 warning. The warning has been reported by Enrico Olivelli which we tried to solve by the upgrade, but the warning message is still present so I don't see any harm in downgrading to the previous version. 
   
   https://issues.apache.org/jira/browse/ZOOKEEPER-3404
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/19 20:51;githubbot;600","eolivelli commented on issue #961: ZOOKEEPER-3404. Downgrade BouncyCastle to 1.60
URL: https://github.com/apache/zookeeper/pull/961#issuecomment-496307315
 
 
   As we are using BC only for tests it is okay to downgrade in order to make tests more stable.
   
   btw if we have these problems now someday we will see them again when we will need to upgrade.
   Aren't we using BC only for generating certs and keys ? it is not used by the runtime.
   
   BC comes with its own Security Providers, **I am afraid that  it not polluting the classpath during tests** executions. The JVM (Javax Crypto) selects Security Providers by using what is on the classpath.
   **It is a problem if during tests execution we are using a Security Provider that it is not used in production.**
   
   We should add debug in every security-related utility and dump which Security Provider is in use.
   In order to be sure about the security provider we are using every Javax Crypto utility has a way to force the provider without using auto discovery.
   
   We should also add Netty (Google) Boring SSL library in order to be sure about the SSL implementation we are using.
   
   Unfortunately we are not using Netty yet on server to server communication, as so I guess we are more fragile in this Security Provider selection.
   
   cc @enixon
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/May/19 21:18;githubbot;600","anmolnar commented on issue #961: ZOOKEEPER-3404. Downgrade BouncyCastle to 1.60
URL: https://github.com/apache/zookeeper/pull/961#issuecomment-496370179
 
 
   > btw if we have these problems now someday we will see them again when we will need to upgrade.
   Aren't we using BC only for generating certs and keys ? it is not used by the runtime.
   
   @eolivelli This is valid. BC is for testing only currently and we'll face this problem again once we need to upgrade to address a CVE for example. However that could be a more recent version of BC where they identify and fix the performance regression.
   
   Other option could be to improve `QuorumSSL` tests: it's already running for 5-6 minutes which is kinda odd for unit tests. I'll do some research on that side to find where the bottleneck is.
   
   Wrt to Security Providers I think you're right, though I'm not an expert of Java Security, so not sure how to address the problem properly. I suggest to keep this patch for the performance problem only for now. 
   
   Please see my comments / evidence in Jira too.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 05:28;githubbot;600","asfgit commented on pull request #961: ZOOKEEPER-3404. Downgrade BouncyCastle to 1.60
URL: https://github.com/apache/zookeeper/pull/961
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 14:04;githubbot;600","nkalmar commented on issue #961: ZOOKEEPER-3404. Downgrade BouncyCastle to 1.60
URL: https://github.com/apache/zookeeper/pull/961#issuecomment-496532806
 
 
   Thanks @anmolnar , merged to master and 3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/May/19 14:09;githubbot;600","enixon commented on issue #961: ZOOKEEPER-3404. Downgrade BouncyCastle to 1.60
URL: https://github.com/apache/zookeeper/pull/961#issuecomment-497431778
 
 
   @eolivelli @anmolnar - one of you want to open a ticket for the improvements mentioned above? Getting the dependencies clarified and reducing the running time of the SSL tests are good improvements.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 18:21;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 29 02:05:44 UTC 2019,,,,,,,,,,"0|z034ig:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/May/19 21:18;andor;I see a big jump in QuorumSSLTest runtime when the Java 9 patch was applied: (trunk JDK8)

[https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk/lastCompletedBuild/testReport/org.apache.zookeeper.server.quorum/QuorumSSLTest/history/];;;","27/May/19 21:21;andor;Similar with Java 13:

[https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-java13/94/testReport/org.apache.zookeeper.server.quorum/QuorumSSLTest/history/]

and Java 12:

[https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-java12/77/]

Looks like the patch has doubled the test execution time and sometimes it's just not able to finish within the timeout.;;;","28/May/19 14:08;nkalmar;Issue resolved by pull request 961
[https://github.com/apache/zookeeper/pull/961];;;","28/May/19 16:09;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #377 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/377/])
ZOOKEEPER-3404: Downgrade BouncyCastle to 1.60 (nkalmar: rev 78b3d1a8c1ea8453423682ad09675dfb1df04384)
* (edit) pom.xml
* (edit) build.xml
;;;","29/May/19 02:05;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #543 (See [https://builds.apache.org/job/ZooKeeper-trunk/543/])
ZOOKEEPER-3404: Downgrade BouncyCastle to 1.60 (nkalmar: rev 78b3d1a8c1ea8453423682ad09675dfb1df04384)
* (edit) build.xml
* (edit) pom.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove logging in getGlobalOutstandingLimit for optimal performance.,ZOOKEEPER-3399,13234770,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,hanm,hanm,hanm,22/May/19 01:42,25/May/19 20:27,13/Jul/23 09:08,25/May/19 17:46,3.6.0,,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"Recently we have moved some of our production clusters to the top of the trunk. One issue we found is a performance regression on read and write latency on the clusters where the quorum is also serving traffic. The average read latency increased by 50x, p99 read latency increased by 300x. 

The root cause is a log statement introduced in ZOOKEEPER-3177 (PR711), where we added a LOG.info statement in getGlobalOutstandingLimit. getGlobalOutstandingLimit is on the critical code path for request processing and for each request, it will be called twice (one at processing the packet, one at finalizing the request response). This not only degrades performance of the server, but also bloated the log file, when the QPS of a server is high.

This only impacts clusters when the quorum (leader + follower) is serving traffic. For clusters where only observers are serving traffic no impact is observed.

 

 ",,eolivelli,hanm,hudson,,,,,,,,,,,,,,,,,"hanm commented on pull request #956: ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal performance.
URL: https://github.com/apache/zookeeper/pull/956
 
 
   Please refer https://issues.apache.org/jira/browse/ZOOKEEPER-3399 for detailed description. This PR removes the LOG statement which was the state of the code path before ZOOKEEPER-3177. The original patch of ZOOKEEPER-3177 had the LOG statement in right place, but that was changed in the second pull request (711) that reverted part of the original patch due to a find bug warning.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/May/19 01:47;githubbot;600","eolivelli commented on issue #956: ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal performance.
URL: https://github.com/apache/zookeeper/pull/956#issuecomment-494716596
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/May/19 08:58;githubbot;600","eolivelli commented on issue #956: ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal performance.
URL: https://github.com/apache/zookeeper/pull/956#issuecomment-495337360
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/May/19 18:42;githubbot;600","eolivelli commented on issue #956: ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal performance.
URL: https://github.com/apache/zookeeper/pull/956#issuecomment-495380507
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/May/19 20:51;githubbot;600","nkalmar commented on issue #956: ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal performance.
URL: https://github.com/apache/zookeeper/pull/956#issuecomment-495567490
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/May/19 10:39;githubbot;600","asfgit commented on pull request #956: ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal performance.
URL: https://github.com/apache/zookeeper/pull/956
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/May/19 17:44;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat May 25 20:27:57 UTC 2019,,,,,,,,,,"0|z02xq8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"25/May/19 17:48;eolivelli;{quote}
Recently we have moved some of our production clusters to the top of the trunk
{quote}

This is encouraging !
I think it is time to think to cut a release for 3.6.0;;;","25/May/19 19:05;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #538 (See [https://builds.apache.org/job/ZooKeeper-trunk/538/])
ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal (eolivelli: rev 968f5f365e53d0bcbbe0225cc382327badbd8380)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java
;;;","25/May/19 20:27;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #373 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/373/])
ZOOKEEPER-3399: Remove logging in getGlobalOutstandingLimit for optimal (eolivelli: rev 968f5f365e53d0bcbbe0225cc382327badbd8380)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"need change description for ""Single System Image"" guarantee in document",ZOOKEEPER-3373,13230535,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,ihavenoemail@163.com,ihavenoemail@163.com,ihavenoemail@163.com,28/Apr/19 09:19,12/Nov/20 15:56,13/Jul/23 09:08,05/Aug/19 23:51,3.4.14,,,,,,,,,3.6.0,,,,,documentation,,,,0,pull-request-available,,"In website, ""Single System Image"" is ""A client will see the same view of the service regardless of the server that it connects to.""

I want to change it to ""Once connected, a client will see the same view of the service even if it switchs to another server""

Because the old one is a little misleading, if cluster has a outdated follower and a normal follower, I not think a client will see the same view of the service regardless of the server that it connects to at its first connection.",,hanm,hudson,ihavenoemail@163.com,,,,,,,,,,,,,,,,,"kabike commented on pull request #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931
 
 
   In website, ""Single System Image"" is ""A client will see the same view of the service regardless of the server that it connects to.""
   
   I want to change it to ""Once connected, a client will see the same view of the service even if it switchs to another server""
   
   Because the old one is a little misleading, if cluster has a outdated follower and a normal follower, I do not think a client will see the same view of the service regardless of the server that it connects to at its first connection.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/May/19 13:04;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-489897367
 
 
   funny story, I just changed some MD documents, why checks faild?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 03:53;githubbot;600","maoling commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-489963241
 
 
   @kabike
   - the CI failure is not related.due to `Installing oraclejdk11 `, don't worry about this.
   - Yep,the description is a little misleading.IMO,What the ""Single System Image"" means is that a client cannot read the stale data that it had ever read regardless of the server that it connects to.   e.g:
   `set /key v1-->v2-->v3`
   A client's view of the /key cannot be like: `v1-->v3-->v2.`
   - For the implement, when the client reconnect to another server, that server will refuse the connection when his current zxid is less than the client's lastZxid.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 07:16;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-490307991
 
 
   @maoling yes, it is quite misleading. see https://stackoverflow.com/questions/40797443/how-zookeeper-guarantees-single-system-image. That is why I made this pull request
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/19 01:03;githubbot;600","anmolnar commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-496963385
 
 
   @hanm @phunt Do you agree with this change?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 14:34;githubbot;600","hanm commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-497152729
 
 
   I agree the original statement is not very clear, but instead of changing it, how about actually clarify it with this:
   
   A client will see the same view of the service regardless of the server that it connects to, and a client will never see an older view of the system even if the client fails over to a different server with the same session.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/May/19 00:10;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-498082733
 
 
   @hanm ""A client will see the same view of the service regardless of the server that it connects to"" sounds like ""A client will see the same view of the service regardless of the server that it connects to at the first time"", IMO
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jun/19 01:12;githubbot;600","maoling commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-516681286
 
 
   
   
   > A client will see the same view of the service regardless of the server that it connects to. i.e., a client will never see an older view of the system even if the client fails over to a different server with the same session
   
   Clarifying it is better than changing it, WDYT? @kabike Can we move on?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 03:38;githubbot;600","kabike commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-517077920
 
 
   @maoling What should I do to move on?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 01:06;githubbot;600","maoling commented on issue #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-517090109
 
 
   @kabike 
   Keep the original statement still and add a clarification behind it, just like this:
   
   > A client will see the same view of the service regardless of the server that it connects to. i.e., a client will never see an older view of the system even if the client fails over to a different server with the same session
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 02:12;githubbot;600","asfgit commented on pull request #931: ZOOKEEPER-3373:need change description for ""Single System Image"" guarantee in document
URL: https://github.com/apache/zookeeper/pull/931
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/19 23:52;githubbot;600","Michealwwx commented on pull request #931:
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-726162504


   It is very misleading


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:49;githubbot;600","eolivelli commented on pull request #931:
URL: https://github.com/apache/zookeeper/pull/931#issuecomment-726166603


   @Michealwwx can you please tell us more ?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Nov/20 15:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Aug 06 04:49:35 UTC 2019,,,,,,,,,,"0|z027m8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Aug/19 23:51;hanm;Issue resolved by pull request 931
[https://github.com/apache/zookeeper/pull/931];;;","06/Aug/19 01:58;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #649 (See [https://builds.apache.org/job/ZooKeeper-trunk/649/])
ZOOKEEPER-3373: need change description for ""Single System Image"" (hanm: rev f252c769206a9ed9688998a1608bcbd2840a90f4)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperProgrammers.md
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperOver.md
;;;","06/Aug/19 04:49;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #484 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/484/])
ZOOKEEPER-3373: need change description for ""Single System Image"" (hanm: rev f252c769206a9ed9688998a1608bcbd2840a90f4)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperProgrammers.md
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperOver.md
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Request throttling in Netty is not working as expected and could cause direct buffer OOM issue ,ZOOKEEPER-3356,13226990,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,lvfangmin,lvfangmin,lvfangmin,09/Apr/19 16:20,24/Jul/19 19:45,13/Jul/23 09:08,23/Jul/19 13:56,3.5.4,3.6.0,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"The current implementation of Netty enable/disable recv logic may cause the direct buffer OOM because we may enable read a large chunk of packets and disabled again after consuming a single ZK request. We have seen this problem on prod occasionally.
 
Need a more advanced flow control in Netty instead of using AUTO_READ. Have improved it internally by enable/disable recv based on the queuedBuffer size, will upstream this soon.
 
With this implementation, the max Netty queued buffer size (direct memory usage) will be 2 * recv_buffer size. It's not the per message size because in epoll ET mode it will try to read until the socket is empty, and because of SslHandler will trigger another read when it's not a full encrypt packet and haven't issued any decrypt message.",,eolivelli,hudson,lvfangmin,,,,,,,,,,,,,,,,,"lvfangmin commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919
 
 
   The current implementation of enable/disable recv logic may cause the direct buffer OOM because we may enable read a large chunk and disabled again after consume a single ZK request.
   
   This implementation disabled AUTO_READ and controls the READ depends on whether the SslHandler has issued a READ and what's the queuedBuffer status.
   
   With this implementation, the max Netty queued buffer size (direct memory usage) will be 2 * recv_buffer size. It's not the per message size because in EPoll ET mode it will try to read until the socket is empty, and because of SslHandler will trigger another read when it's not a full encrypt packet and haven't issued any decrypt message.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Apr/19 23:46;githubbot;600","anmolnar commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r281657160
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnTest.java
 ##########
 @@ -184,4 +191,135 @@ public void run() {
             assertArrayEquals(""unexpected data"", ""test"".getBytes(StandardCharsets.UTF_8), contents);
         }
     }
+
+    @Test
+    public void testEnableDisableThrottling_secure_random() throws Exception {
 
 Review comment:
   Perhaps I've asked this before, but why don't you use junit's parameterized tests?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 14:27;githubbot;600","normanmaurer commented on issue #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#issuecomment-490160967
 
 
   @anmolnar will check this week
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 16:50;githubbot;600","lvfangmin commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r281913876
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnTest.java
 ##########
 @@ -184,4 +191,135 @@ public void run() {
             assertArrayEquals(""unexpected data"", ""test"".getBytes(StandardCharsets.UTF_8), contents);
         }
     }
+
+    @Test
+    public void testEnableDisableThrottling_secure_random() throws Exception {
 
 Review comment:
   Yes, you mentioned that in a separate PR before :)
   
   Parameterized test will run the combination for every tests in the class, which makes sense if it's a class wide test which is for testing classes implementing the same interface. Here it's just a test combination for the specific test scenario with enable/disable throttling, so that's why I think using a help method is better. Let me know if this makes sense or not.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/May/19 05:03;githubbot;600","anmolnar commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r282937308
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnTest.java
 ##########
 @@ -184,4 +191,135 @@ public void run() {
             assertArrayEquals(""unexpected data"", ""test"".getBytes(StandardCharsets.UTF_8), contents);
         }
     }
+
+    @Test
+    public void testEnableDisableThrottling_secure_random() throws Exception {
 
 Review comment:
   Makes sense. You would have to create a separate class for it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/May/19 15:41;githubbot;600","lvfangmin commented on issue #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#issuecomment-491459874
 
 
   Added doc for the new property. @normanmaurer please take a look when you have time.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/May/19 23:55;githubbot;600","eolivelli commented on issue #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#issuecomment-496948152
 
 
   @lvfangmin we need to rebase.
   
   I hope @normanmaurer have cycles to take a look
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/May/19 13:58;githubbot;600","lvfangmin commented on issue #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#issuecomment-499269620
 
 
   Rebased onto latest master to resolve conflict. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Jun/19 21:53;githubbot;600","normanmaurer commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r291781559
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   nit: this should be a singleton instance... 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/19 23:37;githubbot;600","normanmaurer commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r291781673
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnTest.java
 ##########
 @@ -184,4 +191,135 @@ public void run() {
             assertArrayEquals(""unexpected data"", ""test"".getBytes(StandardCharsets.UTF_8), contents);
         }
     }
+
+    @Test
+    public void testEnableDisableThrottling_secure_random() throws Exception {
+        runEnableDisableThrottling(true, true);
+    }
+
+    @Test
+    public void testEnableDisableThrottling_secure_sequentially() throws Exception {
+        runEnableDisableThrottling(true, false);
+    }
+
+    @Test
+    public void testEnableDisableThrottling_nonSecure_random() throws Exception {
+        runEnableDisableThrottling(false, true);
+    }
+
+    @Test
+    public void testEnableDisableThrottling_nonSecure_sequentially() throws Exception {
+        runEnableDisableThrottling(false, false);
+    }
+
+    public void runEnableDisableThrottling(boolean secure, boolean randomDisableEnable) throws Exception {
 
 Review comment:
   nit: private
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Jun/19 23:37;githubbot;600","lvfangmin commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r292289954
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   @normanmaurer I'm not sure I understand your suggestion about the singleton here, can you give more detail or example?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jun/19 06:08;githubbot;600","normanmaurer commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r292557813
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   You can reuse the same instance of this class across different channels. Just create one instance and reuse it
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jun/19 16:50;githubbot;600","lvfangmin commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r297412877
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   That's what it is doing now, in the current code, there is only a single instance.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jun/19 22:04;githubbot;600","normanmaurer commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r297510129
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   I was more talking about something like this:
   
   ```
   static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
       static final ReadIssuedTrackingHandler INSTANCE = new ReadIssuedTrackingHandler();
       private ReadIssuedTrackingHandler() { }
      
      ...
   }
   ```
   
   And then use `ReadIssuedTrackingHandler.INSTANCE` when you add it to the pipeline. This way you only need one instance per JVM... That said it is basically just a nit and if it matters depends on how often you create new clients / servers etc. So feel free to ignore. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jun/19 07:00;githubbot;600","anmolnar commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r298980017
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   I like this approach. What do you think @lvfangmin ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Jul/19 10:32;githubbot;600","lvfangmin commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#discussion_r305995160
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
 ##########
 @@ -378,8 +411,33 @@ public void operationComplete(Future<Channel> future) {
             }
         }
     }
+
+    @Sharable
+    static class ReadIssuedTrackingHandler extends ChannelDuplexHandler {
+
 
 Review comment:
   Currently, there is only a single instance of ReadIssuedTrackingHandler created in NettyServerCnxnFactory, and there is only a single instance of NettyServerCnxnFactory per JVM lifecycle, so ReadIssuedTrackingHandler is only 1 instance per JVM.
   
   Personally, I don't see there is value to create a static instance in ReadIssuedTrackingHandler, I'll keep the current implementation here.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 19:29;githubbot;600","lvfangmin commented on issue #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#issuecomment-513922243
 
 
   Rebased to resolve the conflict, @anmolnar do you mind to help merge this back?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 19:31;githubbot;600","eolivelli commented on issue #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919#issuecomment-514219443
 
 
   merging
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/19 13:52;githubbot;600","asfgit commented on pull request #919: ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback from ZK
URL: https://github.com/apache/zookeeper/pull/919
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Jul/19 13:56;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jul 24 19:45:05 UTC 2019,,,,,,,,,,"0|z01luo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Apr/19 04:57;eolivelli;Can this be a blocker for 3.5.5?l as 'stable'?
I think this affects 3.5.5 and not 3.5.4;;;","24/Apr/19 22:09;lvfangmin;[~eolivelli] The OOM issue happened when there are lots of continuous traffic beyond what we can support in ZK. It would be nice to have in 3.5, but I don't think it's a blocker.;;;","22/Jul/19 19:55;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 12 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4066//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4066//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/4066//console

This message is automatically generated.;;;","23/Jul/19 13:56;eolivelli;Issue resolved by pull request 919
[https://github.com/apache/zookeeper/pull/919];;;","24/Jul/19 04:38;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #461 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/461/])
ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback (eolivelli: rev ce33b7faed60ea0b7c6f2eb1edbf56eec20a8bc2)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerMetrics.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/SSLAuthTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
;;;","24/Jul/19 19:45;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #627 (See [https://builds.apache.org/job/ZooKeeper-trunk/627/])
ZOOKEEPER-3356: Implement advanced Netty flow control based on feedback (eolivelli: rev ce33b7faed60ea0b7c6f2eb1edbf56eec20a8bc2)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerMetrics.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/SSLAuthTest.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/NettyServerCnxnTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxnFactory.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/NettyServerCnxn.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Leader election port stop listen when hostname unresolvable for some time ,ZOOKEEPER-3320,13222125,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,lagrang,lagrang,lagrang,17/Mar/19 08:21,16/Oct/19 18:59,13/Jul/23 09:08,13/Aug/19 11:36,3.4.10,3.5.4,,,,,,,,3.5.6,3.6.0,,,,leaderElection,,,,0,pull-request-available,,"When trying to run Zookeeper 3.5.4 cluster on Kubernetes, I found out that in some circumstances Zookeeper node stop listening on leader election port. This cause unavailability of ZK cluster. 
Zookeeper deployed  as StatefulSet in term of Kubernetes and has following dynamic configuration:

{code:java}
zookeeper-0.zookeeper:2182:2183:participant;2181
zookeeper-1.zookeeper:2182:2183:participant;2181
zookeeper-2.zookeeper:2182:2183:participant;2181
{code}


Bind address contains DNS name which generated by Kubernetes for each StatefulSet pod.
These DNS names will become resolvable after container start, but with some delay. That delay cause stopping of leader election port listener in QuorumCnxManager.Listener class.
Error happens in QuorumCnxManager.Listener ""run"" method, it tries to bind leader election port to hostname which not resolvable at this moment. Retry count is hard-coded and equals to 3(with backoff of 1 sec). 

Zookeeper server log contains following errors:

{code:java}
2019-03-17 07:56:04,844 [myid:1] - WARN  [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1230] - Unexpected exception
java.net.SocketException: Unresolved address
	at java.base/java.net.ServerSocket.bind(ServerSocket.java:374)
	at java.base/java.net.ServerSocket.bind(ServerSocket.java:335)
	at org.apache.zookeeper.server.quorum.Leader.<init>(Leader.java:241)
	at org.apache.zookeeper.server.quorum.QuorumPeer.makeLeader(QuorumPeer.java:1023)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1226)
2019-03-17 07:56:04,844 [myid:1] - WARN  [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1261] - PeerState set to LOOKING
2019-03-17 07:56:04,845 [myid:1] - INFO  [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1136] - LOOKING
2019-03-17 07:56:04,845 [myid:1] - INFO  [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@893] - New election. My id =  1, proposed zxid=0x0
2019-03-17 07:56:04,846 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@687] - Notification: 2 (message format version), 1 (n.leader), 0x0 (n.zxid), 0xf (n.round), LOOKING (n.state), 1 (n.sid), 0x0 (n.peerEPoch), LOOKING (my state)0 (n.config version)
2019-03-17 07:56:04,979 [myid:1] - INFO  [zookeeper-0.zookeeper:2183:QuorumCnxManager$Listener@892] - Leaving listener
2019-03-17 07:56:04,979 [myid:1] - ERROR [zookeeper-0.zookeeper:2183:QuorumCnxManager$Listener@894] - As I'm leaving the listener thread, I won't be able to participate in leader election any longer: zookeeper-0.zookeeper:2183
{code}

This error happens on most nodes on cluster start and Zookeeper is unable to form quorum. This will leave cluster in unusable state.
As I can see, error present on branches 3.4 and 3.5. 
I think, this error can be fixed by configurable number of retries(instead of hard-coded value of 3). 
Other way to fix this is removing of max retries at all. Currently, ZK server only stop leader election listener and continue to serve on other ports. Maybe, if leader election halts, we should abort process.
",,andor,enixon,hudson,lagrang,nkalmar,Simon_poortman@icloud.com,,,,,,,,,,,,,,"Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Mar/19 06:56;githubbot;600","enixon commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r267946154
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -839,12 +839,17 @@ private void resetConnectionThreadCount() {
      */
     public class Listener extends ZooKeeperThread {
 
+        private final int portBindMaxRetry;
         volatile ServerSocket ss = null;
 
         public Listener() {
             // During startup of thread, thread name will be overridden to
             // specific election address
             super(""ListenerThread"");
+
+            // maximum retry count while trying to bind to election port
+            // see ZOOKEEPER-3320 for more details
+            portBindMaxRetry = Integer.getInteger(""zookeeper.electionPortBindRetry"", 3);
 
 Review comment:
   I'd recommend adding an info log that says what this property is set to when it reads and some validation in place to make sure the property is not negative.
   
   Overall change seems reasonable - let's see what the others think.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Mar/19 20:35;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r268053495
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -839,12 +839,17 @@ private void resetConnectionThreadCount() {
      */
     public class Listener extends ZooKeeperThread {
 
+        private final int portBindMaxRetry;
         volatile ServerSocket ss = null;
 
         public Listener() {
             // During startup of thread, thread name will be overridden to
             // specific election address
             super(""ListenerThread"");
+
+            // maximum retry count while trying to bind to election port
+            // see ZOOKEEPER-3320 for more details
+            portBindMaxRetry = Integer.getInteger(""zookeeper.electionPortBindRetry"", 3);
 
 Review comment:
   Add logs and validation
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 06:57;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475644114
 
 
   @Lagrang  if you're interested in the same issue, you can step into [this ](https://github.com/etcd-io/etcd/issues/10575)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 14:34;githubbot;600","enixon commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475707431
 
 
   LGTM! The test failure (NonRecoverableErrorTest::testZooKeeperServiceAvailableOnLeader) looks unrelated to me - if you close and reopen the pull request then it will be re-run.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 17:23;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 17:38;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 17:38;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 18:33;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 18:33;githubbot;600","enixon commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475741434
 
 
   Some thing is wrong with JenkinsMaven here. :(
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 18:56;githubbot;600","eolivelli commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475767323
 
 
   Even Travis
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 20:19;githubbot;600","eolivelli commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475788393
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Mar/19 21:24;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475885134
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Mar/19 16:45;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475965281
 
 
   @Lagrang 
   - you also need to doc this property in the `zookeeperAdmin.md`
   - Look back, this retry logic was firstly introduced by [ZOOKEEPER-512 ](https://issues.apache.org/jira/browse/ZOOKEEPER-512) 
   
   > This is for retrying. If there is a problem while listening or trying to bind to the socket, it tries again and gives up after 3 consecutive attempts.
   
   - An infinite loop is a better option, especially for the availability?  because the container will be self-healing just a few minutes after its DNS is unresolvable, we cannot have a good evaluation of the retry times.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/19 14:37;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-475969622
 
 
   > An infinite loop is a better option, especially for the availability? because the container will be self-healing just a few minutes after its DNS is unresolvable, we cannot have a good evaluation of the retry times.
   
   I proposed two solutions in [ZOOKEEPER-3320](https://issues.apache.org/jira/projects/ZOOKEEPER/issues/ZOOKEEPER-3320), one is configurable retry, other is to remove retries at all. @enixon noted that such kind of error happens mostly in container environment. I agree with him, in non-container environment port binding can fail, for instance, when port already in use and indefinitely retry has no meaning.
   But from another point of view, today QuorumCnxManager.Listener extends `ZooKeeperThread`and if ZK server can't bind election port, it stop trying and process remains alive(and mostly useless at this point). Maybe `QuorumCnxManager.Listener` should extends `ZookeeperCriticalThread`? 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Mar/19 15:27;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-476284089
 
 
   Add doc for introduced property to `zookeeperAdmin.md` file, `Cluster Options` section.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/19 16:48;githubbot;600","enixon commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-476324387
 
 
   Thanks for adding docs! 
   
   I'm wary of adding an infinite loop for the same reasons that I'd agree with this becoming a ZooKeeperCriticalThread. `QuorumCnxManager.Listener` is only instantiated once in the lifetime of a `QuorumPeer` and it doesn't seem good to allow it to fail silently - cutting the peer off from the election proceeds for the rest of its life.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Mar/19 18:32;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477172489
 
 
   Push changes to extends QuorumCnxManager.Listener from ZookeeperCriticalThread. Plus test into CnxManagerTest to check configurable retries and shutdown of quorum peer after max retries.  
   Also add call to `shutdown` method in finally block of QuorumPeer.run(), because I didn't find place where resources closed(connections, ZK DB, etc) on quorum peer exit. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/19 14:09;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477172489
 
 
   Push changes which extend `QuorumCnxManager.Listener` from `ZookeeperCriticalThread`. Add test into CnxManagerTest to check configurable retries and shutdown of quorum peer after max retries.  
   Also add call to `shutdown` method in finally block of `QuorumPeer.run()`, because I didn't find place where resources closed(connections, ZK DB, etc) on quorum peer exit. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/19 14:11;githubbot;600","enixon commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477303890
 
 
   Thanks for the new test. :)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/19 18:57;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477471802
 
 
   - There was a [sum-up](https://issues.apache.org/jira/browse/ZOOKEEPER-602?focusedCommentId=13117887&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-13117887) about which class should extend the ZooKeeperCriticalThread
   
   - After extending the `ZooKeeperCriticalThread`, When Listen-Thread had failed in listening to the LE port(a fatal one?), then ZooKeeperServer will shutdown and exit.
   Is it the behaviour what we want?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/19 06:53;githubbot;600","enixon commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477804567
 
 
   Good find @maoling ! I don't see any discussion in ZOOKEEPER-602 about criteria for what should and should not be a critical thread - I'm curious on how those decisions were made.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/19 23:13;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477839636
 
 
   I have reservations about extending `QuorumCnxManager.Listener `to the `ZooKeeperCriticalThread`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/19 02:16;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477882906
 
 
   @maoling Can you please describe your concerns?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/19 06:21;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477893575
 
 
   After extending the `ZooKeeperCriticalThread`, When `QuorumCnxManager.Listener `had failed in listening to the LE port（e.g that port had already been used),then ZooKeeperServer will shutdown and exit. 
   this suitation which `QuorumCnxManager.Listener` had exited is not a fatal one,even though she cannot take part in the new leader election), the zkServer can still take server for read/write request.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/19 07:11;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477946006
 
 
   Zookeeper binds to LE port on start, if you can't bind to it, I think fail-fast is more reliable behavior than ""silently"" catch error.  
   From monitoring point of view: process alive, port is bind(but by someone else). Also, not so very good:)
   In case of DNS issue in Kubernetes: I start a 3 ZK nodes, all containers in cluster alive, but 2 nodes stop listen LE port. Quorum not reached.
   
   But, I found another case when `QuorumCnxManager.Listener` can stop process: we can fail while accepting new connections.  I agree that this case should not stop a process.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/19 10:20;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-477946006
 
 
   Zookeeper binds to LE port on start, if you can't bind to it, I think fail-fast is more reliable behavior than ""silently"" catch error.  
   From monitoring point of view: process alive, port is bind(but by someone else). Also, not so very good:)
   In case of DNS issue in Kubernetes: I start a 3 ZK nodes, all containers in cluster alive, but 2 nodes stop listen LE port. Quorum not reached.
   
   But, I found another case when `QuorumCnxManager.Listener` can stop process: we can fail while accepting new connections.  I agree that this case should not stop a process. But errors while connection accepting can be handled separately. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Mar/19 10:22;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-506591427
 
 
   I'll be happy to hear other opinions about this patch:)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/19 04:02;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-506621203
 
 
   Let me revisit this issue.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Jun/19 06:38;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-506621203
 
 
   Looooooooooooooooooooooooooooooooooooooking:D
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jul/19 12:17;githubbot;600","maoling commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-510026145
 
 
   - Still have some reservations.
   - @Lagrang  don't be shy if you want your PR floating up. Let me teach you a unique skill :) (ping @anmolnar @eolivelli @nkalmar especially @fpj)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jul/19 11:41;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-510072445
 
 
   @Lagrang thanks for special attention:) 
   @nkalmar Sure, give me some time to do this
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jul/19 13:57;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-510427498
 
 
   @nkalmar Rebase on master finished. During merge, I found code which covers shutdown of server when listener fails, and I remove my similar changes.  
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 10:23;githubbot;600","nkalmar commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r302476101
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -853,12 +852,30 @@ private void resetConnectionThreadCount() {
      */
     public class Listener extends ZooKeeperThread {
 
 Review comment:
   Shouldn't listener extend ZKCriticalThread? I think this might have gotten lost in the rebase process?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 10:37;githubbot;600","nkalmar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-510432193
 
 
   Thanks, I left a comment, Listener extend ZKThread, I think it should still extend CriticalThread?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 10:38;githubbot;600","nkalmar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-510432193
 
 
   Thanks, I left a comment, Listener extend ZKThread, I think it should still extend CriticalThread?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 10:38;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r302487886
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -853,12 +852,30 @@ private void resetConnectionThreadCount() {
      */
     public class Listener extends ZooKeeperThread {
 
 Review comment:
   I reverted this change, because master branch has code which covers my error case. Current code calls System.exit() if(!shutdown and last_exception is SocketException). 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 11:13;githubbot;600","nkalmar commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r302489322
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -853,12 +852,30 @@ private void resetConnectionThreadCount() {
      */
     public class Listener extends ZooKeeperThread {
 
 Review comment:
   Ok, thanks.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jul/19 11:15;githubbot;600","eolivelli commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 21:49;githubbot;600","eolivelli commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-515227826
 
 
   closing and reopeing to trigger Travis
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 21:49;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 21:49;githubbot;600","eolivelli commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-515228272
 
 
   Let's ship this change as soon as CI is green
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 21:51;githubbot;600","nkalmar commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r307630270
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
 ##########
 @@ -290,6 +290,35 @@ public void testCnxManagerSpinLock() throws Exception {
         Assert.assertFalse(cnxManager.listener.isAlive());
     }
 
+    /**
+     * Test for bug described in {@link https://issues.apache.org/jira/browse/ZOOKEEPER-3320}.
+     * Test create peer with address which contains unresolvable DNS name,
+     * leader election listener thread should stop after N errors.
+     *
+     * @throws Exception
+     */
+    @Test
+    public void testCnxManagerListenerThreadConfigurableRetry() throws Exception {
+        final Map<Long,QuorumServer> unresolvablePeers = new HashMap<>();
+        final long myid = 1L;
+        unresolvablePeers.put(myid, new QuorumServer(myid, ""unresolvable-domain.org:2182:2183;2181""));
+        final QuorumPeer peer = new QuorumPeer(unresolvablePeers,
+                                               ClientBase.createTmpDir(),
+                                               ClientBase.createTmpDir(),
+                                               2181, 3, myid, 1000, 2, 2);
 
 Review comment:
   There is no constructor like this on master. You also need to add a ServerCnxnFactory.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Jul/19 08:03;githubbot;600","Lagrang commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#discussion_r308125031
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
 ##########
 @@ -290,6 +290,35 @@ public void testCnxManagerSpinLock() throws Exception {
         Assert.assertFalse(cnxManager.listener.isAlive());
     }
 
+    /**
+     * Test for bug described in {@link https://issues.apache.org/jira/browse/ZOOKEEPER-3320}.
+     * Test create peer with address which contains unresolvable DNS name,
+     * leader election listener thread should stop after N errors.
+     *
+     * @throws Exception
+     */
+    @Test
+    public void testCnxManagerListenerThreadConfigurableRetry() throws Exception {
+        final Map<Long,QuorumServer> unresolvablePeers = new HashMap<>();
+        final long myid = 1L;
+        unresolvablePeers.put(myid, new QuorumServer(myid, ""unresolvable-domain.org:2182:2183;2181""));
+        final QuorumPeer peer = new QuorumPeer(unresolvablePeers,
+                                               ClientBase.createTmpDir(),
+                                               ClientBase.createTmpDir(),
+                                               2181, 3, myid, 1000, 2, 2);
 
 Review comment:
   Fixed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 09:05;githubbot;600","asfgit commented on pull request #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 09:50;githubbot;600","nkalmar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-515925627
 
 
   Merged to master (3.6.0), thanks @Lagrang 
   Please create a seperate PR for 3.5 branch if needed. I did not try to apply to it as test needs different constructor.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 09:51;githubbot;600","anmolnar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516040724
 
 
   @Lagrang @nkalmar 
   Sorry for being late with the review, but I got the following problems with this patch:
   1. I set `electionPortBindRetry` to 0 and the instance hasn't tried to bind the election port at all. This is not a valid behaviour. Why is that a valid value?
   2. I think it would make sense to force ZooKeeper trying to bind the port indefinitely with a value of 0 or -1 for instance. It could be useful in a containerised environment.
   3. Small doc issue: name of the setting is `electionPortBindRetry` while Java system property is `zookeeper.electionPortBindRetry`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/19 15:29;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516247828
 
 
   1/2: yes, you right, that's a mistake. I agree that we should handle 0 value as infinite retry.
   3. As I can see, setting name and Java system property have same name in docs. Can you please clarify this for me:)
   
   Also I realize(too late:() that my test case doesn't work properly after rebase on master. Current version of Listener class calls `System.exit()` if can't bind to election port. This call cause fail of tests.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jul/19 03:40;githubbot;600","nkalmar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516319192
 
 
   @Lagrang can you create a PR to fix the 0 / -1 port behaviour? Thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jul/19 08:26;githubbot;600","nkalmar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516319192
 
 
   @Lagrang can you create a PR to fix the 0 / -1 port behaviour? Thanks!
   
   Edit: Or I'm not sure if reopening this PR and adding another commit if that works. @anmolnar how do you wan't to handle this? A new patch is fine?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jul/19 08:27;githubbot;600","anmolnar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516764739
 
 
   @Lagrang @nkalmar 
   I reverted the patch on master. Please create new pull request with the test fix and everything else that you'd like to include.
   I added you to the contributors group in Jira and assigned the ticket to you.
   Thanks.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 09:06;githubbot;600","Lagrang commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516794768
 
 
   @anmolnar Sure, I will prepare new PR. But I not see new ticket in Jira:(
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 10:36;githubbot;600","nkalmar commented on issue #863: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/863#issuecomment-516797918
 
 
   @Lagrang there is no new jira, just use this one, it has been reopened. (ZOOKEEPER-3320)
   Thanks!
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jul/19 10:46;githubbot;600","Lagrang commented on pull request #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033
 
 
   Improvements and fixes of #863
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 06:36;githubbot;600","Lagrang commented on issue #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033#issuecomment-517610154
 
 
   @anmolnar @nkalmar This is new PR with changes proposed in #863.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 08:27;githubbot;600","anmolnar commented on pull request #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033#discussion_r310111244
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1088,6 +1088,19 @@ As an example, this will enable all four letter word commands:
     properly, check your operating system's options regarding TCP
     keepalive for more information.  Defaults to
     **false**.
+    
+* *zookeeper.electionPortBindRetry* :
 
 Review comment:
   Please change this to `electionPortBindRetry`
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 12:40;githubbot;600","Lagrang commented on pull request #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033#discussion_r310131684
 
 

 ##########
 File path: zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
 ##########
 @@ -1088,6 +1088,19 @@ As an example, this will enable all four letter word commands:
     properly, check your operating system's options regarding TCP
     keepalive for more information.  Defaults to
     **false**.
+    
+* *zookeeper.electionPortBindRetry* :
 
 Review comment:
   fixed
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Aug/19 13:30;githubbot;600","Lagrang commented on issue #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033#issuecomment-518252744
 
 
   @anmolnar @nkalmar Thanks for support! Will wait merge:)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Aug/19 14:16;githubbot;600","asfgit commented on pull request #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/19 10:52;githubbot;600","anmolnar commented on issue #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033#issuecomment-518619666
 
 
   Merged to master branch. Thanks @Lagrang !
   Would you please create separate PR for `branch-3.5`?
   It would be nice to backport the fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/19 10:53;githubbot;600","Lagrang commented on issue #1033: ZOOKEEPER-3320: Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1033#issuecomment-518641881
 
 
   @anmolnar ok, I will prepare PR in next few days(I hope:))
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Aug/19 12:09;githubbot;600","Lagrang commented on pull request #1053: ZOOKEEPER-3320(backport to branch-3.5): Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1053
 
 
   Backport of #1033 to branch-3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/19 07:30;githubbot;600","Lagrang commented on issue #1053: ZOOKEEPER-3320(backport to branch-3.5): Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1053#issuecomment-520211982
 
 
   @anmolnar backport ready:)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Aug/19 08:59;githubbot;600","anmolnar commented on issue #1053: ZOOKEEPER-3320(backport to branch-3.5): Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1053#issuecomment-520799235
 
 
   Merged. Thanks @Lagrang !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/19 11:36;githubbot;600","anmolnar commented on pull request #1053: ZOOKEEPER-3320(backport to branch-3.5): Leader election port stop listen when hostname unresolvable for some time
URL: https://github.com/apache/zookeeper/pull/1053
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Aug/19 11:37;githubbot;600",,,,,,,,,,,,,,,0,39000,,,0,39000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Aug 13 11:36:39 UTC 2019,,,,,,,,,,"0|z00s9c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Mar/19 17:49;enixon;This is an interesting error case!

I would expect an issue in QuorumCnxManager to bring the peer down if it cannot create the socket but it seems this only occurs with a BindException and not a generic SocketException. At the least, I think we ought to fix that.

Looking at this from the opposite direction, can you add the desired delay in the startup sequence of your Kubernetes container? My concern is that the pattern of ""DNS is currently unreliable but will be reliable soon"" seems specific to the container management and may result in strange behavior when applied to other environments.;;;","20/Mar/19 06:33;lagrang;??I would expect an issue in QuorumCnxManager to bring the peer down if it cannot create the socket but it seems this only occurs with a BindException and not a generic SocketException. At the least, I think we ought to fix that.??
As I can see, QuorumCnxManager.Listener.run() catches IOException, and consequently SocketException&BindException. In any case, ZK server will continue to run without leader election participation:)

??Looking at this from the opposite direction, can you add the desired delay in the startup sequence of your Kubernetes container? My concern is that the pattern of ""DNS is currently unreliable but will be reliable soon"" seems specific to the container management and may result in strange behavior when applied to other environments.??
Sure, I can integrate artificial delay to my container(or some DNS name check loop). 
But, it will be great if ZK can handle such temporary errors by itself. I agree, that ""retry forever"" is not best solution, but as I mention earlier, maybe we can make retry count configurable?  ;;;","20/Mar/19 23:29;enixon;A configurable retry seems like a good idea to me. Either something like ""election port bind time"" or ""dns unavailable time"" if we want to be more general. Do you want to contribute a short diff?

This may also be related to ZOOKEEPER-2982 (or may not, making a note to check later).;;;","21/Mar/19 07:03;lagrang;I attach link to pull request. It based on branch-3.5, but as far as a know, this error can happen on master branch. If needed, I can create another pull request for master.;;;","29/Jul/19 09:52;nkalmar;Merged to master.
Please create a seperate PR for 3.5.
Thank you!;;;","29/Jul/19 11:36;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #468 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/468/])
ZOOKEEPER-3320: Leader election port stop listen when hostname (nkalmar: rev 05ee9413e7a31703395b81fb8d72baf1cb09a46d)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;","29/Jul/19 13:16;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #634 (See [https://builds.apache.org/job/ZooKeeper-trunk/634/])
ZOOKEEPER-3320: Leader election port stop listen when hostname (nkalmar: rev 05ee9413e7a31703395b81fb8d72baf1cb09a46d)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
;;;","31/Jul/19 13:02;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #473 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/473/])
Revert ""ZOOKEEPER-3320: Leader election port stop listen when hostname (andor: rev a89c0942e45bb16e5282eee9d3a56ebbddbaae15)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;","31/Jul/19 13:59;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #638 (See [https://builds.apache.org/job/ZooKeeper-trunk/638/])
Revert ""ZOOKEEPER-3320: Leader election port stop listen when hostname (andor: rev a89c0942e45bb16e5282eee9d3a56ebbddbaae15)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;","06/Aug/19 14:36;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #485 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/485/])
ZOOKEEPER-3320: Leader election port stop listen when hostname (andor: rev 6692d7a5b4bc3f0dbd36677c06e782ef5240153a)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
;;;","06/Aug/19 15:41;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #650 (See [https://builds.apache.org/job/ZooKeeper-trunk/650/])
ZOOKEEPER-3320: Leader election port stop listen when hostname (andor: rev 6692d7a5b4bc3f0dbd36677c06e782ef5240153a)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
;;;","13/Aug/19 11:36;andor;Issue resolved by pull request 1053
[https://github.com/apache/zookeeper/pull/1053];;;",,,,,,,,,,,,,,,,,,,,,,,,,
Node may not accessible due the the inconsistent ACL reference map after SNAP sync ,ZOOKEEPER-3306,13220887,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,lvfangmin,lvfangmin,lvfangmin,11/Mar/19 17:16,20/Apr/23 04:12,13/Jul/23 09:08,29/Apr/19 14:49,3.4.13,3.5.4,3.6.0,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"This is a new bug we found on production.

ZooKeeper uses ACL reference id and count to save the space in snapshot. During fuzzy snapshot sync, the reference count may not be updated correctly in case like the znode is already exist.

When ACL reference count reaches 0, it will be deleted from the system, but actually there might be other nodes still using it. And when visiting a node with the deleted ACL id, it will be rejected because it doesn't exist anymore.

Here is the detailed flow for one of the scenario here:
 # Server A starts to have snap sync with leader
 # After serializing the ACL map to Server A, there is a txn T1 to create a node N1 with new ACL_1 which was not exist in ACL map
 # On leader, after this txn, the ACL map will be ID1 -> (ACL_1, COUNT: 1), and data tree N1 -> ID1
 # On server A, it will be empty ACL map, and N1 -> ID1 in fuzzy snapshot
 # When replaying the txn T1, it will skip at the beginning since the node is already exist, which leaves an empty ACL map, and N1 is referencing to a non-exist ACL ID1
 # Node N1 will be not accessible because the ACL not exist, and if it became leader later then all the write requests will be rejected as well with marshalling error.

We're still working on the fix, suggestions are welcome.",,adamyi,andor,hudson,kezhuw,lvfangmin,,,,,,,,,,,,,,,"lvfangmin commented on pull request #848: [ZOOKEEPER-3306] Fixing node may not accessible issue due the the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848
 
 
   Please check the Jira for more details of the bug.
   
   Need more opinion on this fix to see if there is other corner cases or side effect we didn't handle properly.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/19 19:06;githubbot;600","anmolnar commented on issue #848: ZOOKEEPER-3306: Fixing node not accessible issue due the the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848#issuecomment-474923661
 
 
   @lvfangmin Huh, this is not easy. Another edge case captured by FB. :)
   The fix seems fine to me, but not sure about the implications. You essentially touch the ACL to prevent garbage collecting it by incrementing the ref counter, right?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Mar/19 16:44;githubbot;600","lvfangmin commented on issue #848: ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848#issuecomment-475125918
 
 
   @anmolnar currently, we cannot tell if the ACL reference is already added or not during fuzzy snapshot sync and replaying a txn for a already exist node, this code change may count twice, but it's not a big deal since this is a rare case only happen during SNAP syncing, and we'll clean the ACL map if there is no node using it when deserializing the DataTree from disk.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Mar/19 06:37;githubbot;600","lvfangmin commented on issue #848: ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848#issuecomment-477719255
 
 
   We've released this fix onto prod for more than 2 weeks, haven't hit this corner case so far, but it says this is a really corner case which we may not even happen in 2 weeks before this fix.
   
   But this should be safe enough to merge in master. @anmolnar would you like to take another look?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/19 18:31;githubbot;600","anmolnar commented on issue #848: ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848#issuecomment-480287900
 
 
   @lvfangmin Where is the point in the code where we clear the ACL cache eventually?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Apr/19 14:05;githubbot;600","lvfangmin commented on issue #848: ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848#issuecomment-481325274
 
 
   @anmolnar it's here: https://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java#L1290.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Apr/19 16:29;githubbot;600","asfgit commented on pull request #848: ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 14:49;githubbot;600","anmolnar commented on issue #848: ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent ACL reference map after SNAP sync
URL: https://github.com/apache/zookeeper/pull/848#issuecomment-487610619
 
 
   Committed to master. Thanks @lvfangmin !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Apr/19 14:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Apr 20 04:12:18 UTC 2023,,,,,,,,,,"0|z00kmg:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"29/Apr/19 14:49;andor;Issue resolved by pull request 848
[https://github.com/apache/zookeeper/pull/848];;;","29/Apr/19 17:50;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #500 (See [https://builds.apache.org/job/ZooKeeper-trunk/500/])
ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent (andor: rev 46b2018dbe008e010462e0dc06ddb73981d19d2a)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
;;;","29/Apr/19 22:50;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #334 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/334/])
ZOOKEEPER-3306: Fixing node not accessible issue due the inconsistent (andor: rev 46b2018dbe008e010462e0dc06ddb73981d19d2a)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
;;;","20/Apr/23 04:12;adamyi;I think there's an issue with this patch and created ZOOKEEPER-4689;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Maven build of ""loggraph"" is broken on branch-3.4",ZOOKEEPER-3304,13220671,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,eolivelli,eolivelli,eolivelli,10/Mar/19 08:47,14/Mar/19 15:58,13/Jul/23 09:08,14/Mar/19 15:57,3.4.13,,,,,,,,,3.4.15,,,,,build,contrib,,,0,pull-request-available,,Loggraph uses Jetty and dependency is missing in branch-3.4.,,eolivelli,,,,,,,,,,,,,,,,,,,"eolivelli commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847
 
 
   Fix Jetty dependency.
   Move it only to loggraph package.
   It won't be subject to global dependecyManagement because it is not used by core zookeeper-server module
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/19 09:17;githubbot;600","eolivelli commented on issue #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#issuecomment-471270748
 
 
   cc @nkalmar @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/19 09:17;githubbot;600","eolivelli commented on issue #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#issuecomment-471340302
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/19 20:19;githubbot;600","eolivelli commented on issue #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#issuecomment-471475249
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/19 09:58;githubbot;600","nkalmar commented on issue #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#issuecomment-471484741
 
 
   Maven tests do not run on 3.4 :(
   ZOOKEEPER-3284
   
   Thanks for the change, I will take a look soon.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/19 10:27;githubbot;600","phunt commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#discussion_r265272360
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-loggraph/pom.xml
 ##########
 @@ -33,6 +33,9 @@
   <description>
     LogGraph is an application for viewing and filtering zookeeper logs. It can handle transaction logs and message logs.
   </description>
+  <properties>
+    <jetty.version>9.4.14.v20181114</jetty.version>
 
 Review comment:
   Latest jetty is 9.4.15.v20190215 - any reason we wouldn't use that?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 18:29;githubbot;600","eolivelli commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#discussion_r265339393
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-loggraph/pom.xml
 ##########
 @@ -33,6 +33,9 @@
   <description>
     LogGraph is an application for viewing and filtering zookeeper logs. It can handle transaction logs and message logs.
   </description>
+  <properties>
+    <jetty.version>9.4.14.v20181114</jetty.version>
 
 Review comment:
   It is the same version we have in master
   @phunt
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Mar/19 21:29;githubbot;600","phunt commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#discussion_r265428602
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-loggraph/pom.xml
 ##########
 @@ -33,6 +33,9 @@
   <description>
     LogGraph is an application for viewing and filtering zookeeper logs. It can handle transaction logs and message logs.
   </description>
+  <properties>
+    <jetty.version>9.4.14.v20181114</jetty.version>
 
 Review comment:
   Should we update both of them? :-)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/19 05:59;githubbot;600","eolivelli commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#discussion_r265432628
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-loggraph/pom.xml
 ##########
 @@ -33,6 +33,9 @@
   <description>
     LogGraph is an application for viewing and filtering zookeeper logs. It can handle transaction logs and message logs.
   </description>
+  <properties>
+    <jetty.version>9.4.14.v20181114</jetty.version>
 
 Review comment:
   Good.
   I will update this patch and create an issue for master and 3.5
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/19 06:23;githubbot;600","phunt commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#discussion_r265639923
 
 

 ##########
 File path: zookeeper-contrib/zookeeper-contrib-loggraph/ivy.xml
 ##########
 @@ -36,8 +36,8 @@
   
     <!-- transitive false turns off dependency checking, log4j deps seem borked -->
     <dependency org=""log4j"" name=""log4j"" rev=""1.2.15"" transitive=""false""/>
-    <dependency org=""org.eclipse.jetty"" name=""jetty-server"" rev=""7.0.1.v20091125"" />
-    <dependency org=""org.eclipse.jetty"" name=""jetty-servlet"" rev=""7.0.1.v20091125"" />
+    <dependency org=""org.eclipse.jetty"" name=""jetty-server"" rev=""9.4.15.v20190215"" />
 
 Review comment:
   wow, that's a big jump. good to see, thx.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/19 15:54;githubbot;600","eolivelli commented on issue #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#issuecomment-472932481
 
 
   @phunt  Is there any known user of this module ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/19 15:55;githubbot;600","phunt commented on issue #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847#issuecomment-472933588
 
 
   Pushed to branch-3.4. Thanks @eolivelli !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/19 15:58;githubbot;600","phunt commented on pull request #847: ZOOKEEPER-3304 Maven build of ""loggraph"" is broken on branch-3.4
URL: https://github.com/apache/zookeeper/pull/847
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Mar/19 15:58;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Mar 14 15:57:24 UTC 2019,,,,,,,,,,"0|z00jao:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Mar/19 15:57;phunt;Issue resolved by pull request 847
[https://github.com/apache/zookeeper/pull/847];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot join quorum due to Quorum SSLSocket connection not closed explicitly when there is handshake issue,ZOOKEEPER-3296,13220273,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,lvfangmin,lvfangmin,lvfangmin,07/Mar/19 18:07,14/Jun/19 12:09,13/Jul/23 09:08,14/Jun/19 07:09,3.5.4,3.6.0,,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"Recently, on prod ensembles, we saw some peers failed to connect to others due to timed out when connecting to the other's leader election port. This was triggered by a network incident with lots of packet loss.

After investigation, we found it's because we doesn't close the socket explicitly when it timed out during ssl handshake in QuorumCnxManager.connectOne.

The quorum connection manager is handling connections sequentially with a default listen backlog queue size 50, during the network loss, there are socket read timed out, which is syncLimit * tickTime, and almost all the following connect requests in the backlog queue will timed out from the other side before it's being processed. Those timed out learners will try to connect to a different server, and leaves the connect requests on server side without sending the close_notify packet. The server is slowly consuming from these queue with syncLimit * tickTime timeout for each of those requests which haven't sent notify_close packet. Any new connect requests will be queued up again when there is spot in the listen backlog queue, but timed out before the server handles it, and it can never successfully finish any new connection, so it failed to join the quorum. And the peers are leaking FD because all those connections are in CLOSE-WAIT state.
  
 Restarting the servers to drain the listen backlog queue mitigated the issue.

Here are the steps to manually reproduce the issue:
 # issuing two telnet connect to server A in the quorum without sending any packet
 # stop all other servers
 # start those again
 # server A read timed out from those telnet connect request one by one and it cannot join the quorum anymore",,eolivelli,hudson,lvfangmin,,,,,,,,,,,,,,,,,"lvfangmin commented on pull request #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843
 
 
   The quorum connection manager is handling connections sequentially with a default listen backlog queue size 50, during the network loss, there are socket read timed out, which is syncLimit * tickTime, and almost all the following connect requests in the backlog queue will timed out from the other side before it's being processed. 
   
   Those timed out learners will try to connect to a different server, and leaves the connect requests on server side without sending the close_notify packet. The server is slowly consuming from these queue with syncLimit * tickTime timeout for each of those requests which haven't sent notify_close packet. Any new connect requests will be queued up again when there is spot in the listen backlog queue, but timed out before the server handles it, and it can never successfully finish any new connection, and it failed to join the quorum.
   
   Please check the Jira for more details.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/Mar/19 18:39;githubbot;600","eolivelli commented on pull request #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#discussion_r263909095
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -648,17 +650,16 @@ synchronized private boolean connectOne(long sid, InetSocketAddress electionAddr
         try {
             LOG.debug(""Opening channel to server "" + sid);
             if (self.isSslQuorum()) {
-                 SSLSocket sslSock = self.getX509Util().createSSLSocket();
-                 setSockOpts(sslSock);
-                 sslSock.connect(electionAddr, cnxTO);
-                 sslSock.startHandshake();
 
 Review comment:
   so the core of this fix is that you are assigning _sslSock_ to _sock_  before calling **startHandshake**
   this way in case of error we are closing properly the SSLSocket
   
   Am I correct ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 19:54;githubbot;600","lvfangmin commented on pull request #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#discussion_r264328572
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
 ##########
 @@ -648,17 +650,16 @@ synchronized private boolean connectOne(long sid, InetSocketAddress electionAddr
         try {
             LOG.debug(""Opening channel to server "" + sid);
             if (self.isSslQuorum()) {
-                 SSLSocket sslSock = self.getX509Util().createSSLSocket();
-                 setSockOpts(sslSock);
-                 sslSock.connect(electionAddr, cnxTO);
-                 sslSock.startHandshake();
 
 Review comment:
   Yes. During exception handling in the existing code, it will check and only close if the sock instance is not null.
   
   Previously, we only assign the sock instance when it finished handshake, which may leak the connection in case if failed there after connection is created.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Mar/19 16:52;githubbot;600","enixon commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-488369184
 
 
   Any concerns to this getting merged?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/May/19 18:29;githubbot;600","lvfangmin commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-490696659
 
 
   @anmolnar do you mind to take a look and merge this if it looks good to you?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/May/19 00:14;githubbot;600","lvfangmin commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-491464741
 
 
   @anmolnar I still need to change that from private to package level, if you prefer that then I can move it into the same package.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/May/19 00:39;githubbot;600","anmolnar commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-491621513
 
 
   @lvfangmin Thanks. I prefer to keep it at package level. The more strict, the better.
   Hope it won't make too much mess on the testing side.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/May/19 19:17;githubbot;600","lvfangmin commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-494248492
 
 
   @anmolnar the latest code moved the test to the same package.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/May/19 05:46;githubbot;600","anmolnar commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-500418040
 
 
   @lvfangmin Sorry for the delay (again). I'd like to merge this, please rebase.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jun/19 13:32;githubbot;600","lvfangmin commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-500699410
 
 
   @anmolnar no worries, I've just rebased onto latest master, please help review and merge when you have time.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jun/19 06:03;githubbot;600","eolivelli commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-500792897
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jun/19 11:02;githubbot;600","lvfangmin commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-501920940
 
 
   @anmolnar @eolivelli should we merge this one?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/19 00:04;githubbot;600","eolivelli commented on issue #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843#issuecomment-501972024
 
 
   Yes I will merge. Thanks
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/19 05:22;githubbot;600","asfgit commented on pull request #843: ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum
URL: https://github.com/apache/zookeeper/pull/843
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Jun/19 07:07;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jun 14 12:09:39 UTC 2019,,,,,,,,,,"0|z00gu8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Jun/19 07:09;eolivelli;Issue resolved by pull request 843
[https://github.com/apache/zookeeper/pull/843];;;","14/Jun/19 09:22;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #569 (See [https://builds.apache.org/job/ZooKeeper-trunk/569/])
ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed (eolivelli: rev 5874a0f355417024ce8ebe03ab2f6eaf5b9a228c)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
* (delete) zookeeper-server/src/test/java/org/apache/zookeeper/test/CnxManagerTest.java
;;;","14/Jun/19 12:09;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #403 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/403/])
ZOOKEEPER-3296: Explicitly closing the sslsocket when it failed (eolivelli: rev 5874a0f355417024ce8ebe03ab2f6eaf5b9a228c)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumPeer.java
* (delete) zookeeper-server/src/test/java/org/apache/zookeeper/test/CnxManagerTest.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CnxManagerTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Build failure on branch-3.4,ZOOKEEPER-3265,13213198,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,zsombor,zsombor,zsombor,31/Jan/19 22:17,02/Apr/19 10:40,13/Jul/23 09:08,04/Feb/19 16:10,3.4.14,,,,,,,,,3.4.14,3.5.5,3.6.0,,,build,,,,0,build-failure,pull-request-available,"Building Zookeeper branch-3.4 fails with Ant, if I try:
ant package:

{{package:
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue
   [mkdir] Created dir: /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue/src/test/java
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue/src/test/java
   [mkdir] Created dir: /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue/src/main/java
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue/src/main/java
   [mkdir] Created dir: /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue/src/main/c
    [copy] Copying 15 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/recipes/queue/src/main/c
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper
   [mkdir] Created dir: /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/dist-maven
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/dist-maven
    [copy] Copying 2 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/dist-maven
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/dist-maven
    [copy] Copying 2 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/bin
    [copy] Copying 2 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/libexec
    [copy] Copying 2 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/sbin
    [copy] Copying 3 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/conf
    [copy] Copying 304 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/docs
    [copy] Copying 7 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT
    [copy] Copying 72 files to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/src
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/templates/conf
    [copy] Copying 1 file to /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/share/zookeeper/templates/conf

BUILD FAILED
/Users/test/src/zookeeper/build.xml:973: /Users/test/src/zookeeper/build/zookeeper-3.4.14-SNAPSHOT/src/zookeeper-contrib does not exist.
}}

The fileset which tries to locate executables in the contrib area doesn't match anything.",,andor,hudson,zsombor,,,,,,,,,,,,,,,,,"gzsombor commented on pull request #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795
 
 
   …n contrib directory.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 22:21;githubbot;600","eolivelli commented on pull request #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795#discussion_r252872485
 
 

 ##########
 File path: build.xml
 ##########
 @@ -973,8 +973,9 @@ xmlns:cs=""antlib:com.puppycrawl.tools.checkstyle"">
       <chmod perm=""ugo+x"" type=""file"" parallel=""false"">
         <fileset dir=""${dist.dir}/bin""/>
         <fileset dir=""${dist.dir}/sbin""/>
-        <fileset dir=""${dist.dir}/src/zookeeper-contrib/"">
-          <include name=""*/bin/*"" />
+        <fileset dir=""${dist.dir}/contrib/"">
+          <include name=""**/*.sh"" />
+          <include name=""**/*.py"" />
 
 Review comment:
   Why not keeping 'bin' explicitly?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 22:48;githubbot;600","gzsombor commented on pull request #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795#discussion_r252874777
 
 

 ##########
 File path: build.xml
 ##########
 @@ -973,8 +973,9 @@ xmlns:cs=""antlib:com.puppycrawl.tools.checkstyle"">
       <chmod perm=""ugo+x"" type=""file"" parallel=""false"">
         <fileset dir=""${dist.dir}/bin""/>
         <fileset dir=""${dist.dir}/sbin""/>
-        <fileset dir=""${dist.dir}/src/zookeeper-contrib/"">
-          <include name=""*/bin/*"" />
+        <fileset dir=""${dist.dir}/contrib/"">
+          <include name=""**/*.sh"" />
+          <include name=""**/*.py"" />
 
 Review comment:
   There is no ""bin"" folder anymore.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 22:56;githubbot;600","anmolnar commented on issue #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795#issuecomment-459610298
 
 
   @nkalmar Please take a look at this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Feb/19 05:25;githubbot;600","nkalmar commented on issue #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795#issuecomment-459879262
 
 
   Yeah, that did point to a non-existent directory. Patch looks good, thanks @gzsombor nice catch!
   This would be also needed to fix in master and 3.5. It is present in 2 places there.
   
   Can you also do the fix on the other branches @gzsombor ? 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Feb/19 21:48;githubbot;600","gzsombor commented on issue #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795#issuecomment-459994956
 
 
   Sure, I'm going to push PRs
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Feb/19 20:03;githubbot;600","gzsombor commented on pull request #797: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/797
 
 
   …n contrib directory.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Feb/19 20:07;githubbot;600","gzsombor commented on pull request #798: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/798
 
 
   …n contrib directory.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Feb/19 20:07;githubbot;600","asfgit commented on pull request #798: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/798
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/19 16:09;githubbot;600","anmolnar commented on issue #798: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/798#issuecomment-460306412
 
 
   Merged to master and 3.5 branches. Thanks @gzsombor !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/19 16:09;githubbot;600","anmolnar commented on pull request #797: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/797
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/19 16:09;githubbot;600","anmolnar commented on issue #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795#issuecomment-460306928
 
 
   Cherry-picked the other PR #798 , closing this one.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/19 16:10;githubbot;600","anmolnar commented on pull request #795: ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i…
URL: https://github.com/apache/zookeeper/pull/795
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Feb/19 16:10;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Mon Feb 04 19:36:06 UTC 2019,,,,,,,,,,"0|yi0jqo:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Feb/19 16:10;andor;Issue resolved by pull request 798
[https://github.com/apache/zookeeper/pull/798];;;","04/Feb/19 17:06;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #384 (See [https://builds.apache.org/job/ZooKeeper-trunk/384/])
ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i… (andor: rev 190df6abd661dfd5b07bc0657b6f8b0b14f86a8c)
* (edit) build.xml
;;;","04/Feb/19 19:36;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #220 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/220/])
ZOOKEEPER-3265: Fix fileset to match shell scripts and python files i… (andor: rev 190df6abd661dfd5b07bc0657b6f8b0b14f86a8c)
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"client should not send requests with cxid=-4, -2, or -1",ZOOKEEPER-3253,13211130,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sjust2,sjust2,sjust2,22/Jan/19 23:21,16/Dec/19 08:07,13/Jul/23 09:08,08/Mar/19 04:10,3.4.9,3.5.4,3.6.0,,,,,,,3.4.15,3.5.5,3.6.0,,,java client,,,,0,pull-request-available,,"Once the cxid value increments to -4, the client will interpret the response as an auth packet rather than as a response to a request and will transparently drop the response and the request will hang.  Similarly, -2 will be seen as a ping and will be dropped hanging the request.  -1 shows up as a WatcherEvent and results in the error below.

 
{quote}2019-01-07T21:58:23.209+00:00 [INFO ] [main-SendThread(mnds1-2-phx.ops.sfdc.net:2181)] [ClientCnxn.java:1381] [:] - Session establishment complete on server mnds1-2-phx.ops.sfdc.net/10.246.244.71:2181, sessionid = 0x267859729d66320, negotiated timeout = 10000
 2019-01-07T21:58:22.281+00:00 20190107215822.281000 [WARN ] [main-SendThread(mnds1-3-phx.ops.sfdc.net:2181)] [ClientCnxn.java:1235] [:] - Session 0x267859729d66320 for server mnds1-3-phx.ops.sfdc.net/10.246.244.69:2181, unexpected error, closing socket connection and attempting reconnect
 java.io.IOException: Unreasonable length = 892612659
 at org.apache.jute.BinaryInputArchive.checkLength(BinaryInputArchive.java:127) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.jute.BinaryInputArchive.readString(BinaryInputArchive.java:81) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.proto.WatcherEvent.deserialize(WatcherEvent.java:66) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxn$SendThread.readResponse(ClientCnxn.java:839) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:101) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:363) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
 at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1214) ~[zookeeper-3.5.3-beta.jar:3.5.3-beta-8ce24f9e675cbefffb8f21a47e06b42864475a60]
{quote}
 ",,elserj,hudson,kezhuw,phunt,sjust2,,,,,,,,,,,,,,,"athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787
 
 
   - Add test for cxid rollover to 1
   - Modify ClientCnxn.SendThread.getXid() to increment from -5 to 1.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 20:49;githubbot;600","eolivelli commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-457723646
 
 
   Interesting.
   Are you interested in a back port to 3.4, 3.5?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 20:51;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-457724146
 
 
   Yeah, I've got the 3.4 one ready, 3.5 presumably also easy.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 20:53;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251139004
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   What about introducing constants for these special values ? (and replace in readResponse)
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:20;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251140151
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   Where do protocol level constants like that usually get put?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:22;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251141069
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   Also, that seems a bit intrusive for a patch I want to backport since it would also touch the server side.  I suppose I could add it as an additional commit and only backport the actual fix?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:26;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251143313
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   I am thinking about having constants only _locally_ to this file, this way it will be easier to understand the code and the patch wouldn't be so intrusive.
   In the (hopefully near) future we will separate client size code from server side code so introducing new shared constants would be overkilling.
   
   I don't fell strong about having such constants, it is only a thought/suggestion.
   
   cc @anmolnar @lvfangmin @hanm 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:34;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251145160
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   I'm inclined to keep the patch minimal since grepping for those identifiers wouldn't tell you where those packets get sent.  Also, the numerical values are useful to see here.  I don't feel strongly about it though.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 21:40;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251150405
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
 
 Review comment:
   no problem from my side, let's keep the patch simple
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 22:01;githubbot;600","eolivelli commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251150647
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
 ##########
 @@ -35,6 +36,39 @@ public TestableZooKeeper(String host, int sessionTimeout,
             Watcher watcher) throws IOException {
         super(host, sessionTimeout, watcher);
     }
+
+    class TestableClientCnxn extends ClientCnxn {
+        TestableClientCnxn(String chrootPath, HostProvider hostProvider, int sessionTimeout, ZooKeeper zooKeeper,
+            ClientWatchManager watcher, ClientCnxnSocket clientCnxnSocket, boolean canBeReadOnly)
+                throws IOException {
+            super(chrootPath, hostProvider, sessionTimeout, zooKeeper, watcher,
+                clientCnxnSocket, 0, new byte[16], canBeReadOnly);
+        }
+
+        void setXid(int newXid) {
+            xid = newXid;
+        }
+
+        int checkXid() {
+            return xid;
+        }
+    }
+
+    protected ClientCnxn createConnection(String chrootPath,
 
 Review comment:
   what about overriding this method only in your new testcase?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 22:02;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r251152973
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
 ##########
 @@ -35,6 +36,39 @@ public TestableZooKeeper(String host, int sessionTimeout,
             Watcher watcher) throws IOException {
         super(host, sessionTimeout, watcher);
     }
+
+    class TestableClientCnxn extends ClientCnxn {
+        TestableClientCnxn(String chrootPath, HostProvider hostProvider, int sessionTimeout, ZooKeeper zooKeeper,
+            ClientWatchManager watcher, ClientCnxnSocket clientCnxnSocket, boolean canBeReadOnly)
+                throws IOException {
+            super(chrootPath, hostProvider, sessionTimeout, zooKeeper, watcher,
+                clientCnxnSocket, 0, new byte[16], canBeReadOnly);
+        }
+
+        void setXid(int newXid) {
+            xid = newXid;
+        }
+
+        int checkXid() {
+            return xid;
+        }
+    }
+
+    protected ClientCnxn createConnection(String chrootPath,
 
 Review comment:
   I figured that the xid manipulation methods might be generally useful.  Also, createClient test helper method explicitly creates a TestableZooKeeper, so I'd have to create another version of that, I think.  Doesn't seem worthwhile.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jan/19 22:12;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-458640950
 
 
   Is this waiting on something from me?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/19 17:55;githubbot;600","eolivelli commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-458650488
 
 
   We need two committers to review and then merge.
   
   Tagging @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jan/19 18:22;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-461972654
 
 
   Anything I can do to move this along?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Feb/19 22:44;githubbot;600","eolivelli commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-462019934
 
 
   @anmolnar can we include this in 3.5.5 and 3.4.14?
   
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Feb/19 06:54;githubbot;600","anmolnar commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-462297767
 
 
   @eolivelli 3.5.5 is fine, but 3.4.14 is already cut, I wouldn't touch it anymore.
   
   We can make an exception if it's critical, but we need at least one more committer to review.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Feb/19 11:36;githubbot;600","phunt commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r259901448
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
+        // Skip from -5 to 1.
 
 Review comment:
   why are we allowing negative numbers at all? shouldn't we check for ""about to rollover"" prior to the increment and then reset to 1? It seems to me that that would be a whole lot easier to grok.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 16:17;githubbot;600","athanatos commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r259966632
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
+        // Skip from -5 to 1.
 
 Review comment:
   A reasonable point.  Nothing I could find directly compares cxid values or will otherwise notice the MAX to MIN wrap, so I chose to use the full range.  I'll switch it.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 18:49;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467140893
 
 
   Ok, I pushed a version that wraps from MAX to 1 avoiding negative values entirely. @phunt 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Feb/19 19:10;githubbot;600","phunt commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r260123920
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
 ##########
 @@ -1510,6 +1511,11 @@ public void close() throws IOException {
      * the server. Thus, getXid() must be public.
      */
     synchronized public int getXid() {
+        // xid values of -4, -2, and -1 are special, see SendThread.readResponse
+        // Skip from -5 to 1.
 
 Review comment:
   Sounds good, thanks. Essentially negative cxid are essentially ""reserved"" this way.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 04:45;githubbot;600","phunt commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467940965
 
 
   So here's my current concern, which I have not had time yet to look at and I think should be addressed before this is committed - what happens on the server side? Is it allowing the cxid to ""go back in time"", if so is that ok, if not then what happens? (does it disco the client session?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 16:53;githubbot;600","phunt commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467940965
 
 
   So here's my current concern, which I have not had time yet to look at and I think should be addressed before this is committed - what happens on the server side? Is it allowing the cxid to ""go back in time"", if so is that ok, if not then what happens? (e.g. does it disco the client session?)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 16:53;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467962868
 
 
   @phunt I was unable to find anything server side that actually compares cxids other than to check equality.  I believe this patch to be safe so long as two requests with the same cxid on the same session are not live at the same time -- which a 31 bit cxid is probably sufficient to ensure.  Note, the current implementation already permits wrapping from MAX to MIN.  This behavior occurs regularly in our environment and the only misbehavior it seems to cause is that the requests submitted with a cxid value of -4, -2, or -1 hang or cause a reconnect.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 17:51;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467962868
 
 
   @phunt I was unable to find anything server side that actually compares cxids other than to check equality.  I believe this patch to be safe so long as two requests with the same cxid on the same session are not live at the same time -- which a 31 bit cxid is probably sufficient to ensure.  Note, the current implementation already permits wrapping from MAX to MIN.  This behavior occurs regularly in our environment and the only misbehavior it seems to cause is that the requests submitted with a cxid value of -4, -2, or -1 hang or cause a reconnect.  The patch also includes a test to exercise the behavior specifically.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 17:53;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-467963738
 
 
   Pushed to fix the commit message -- forgot to update it before.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Feb/19 17:54;githubbot;600","phunt commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#discussion_r261877616
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientTest.java
 ##########
 @@ -868,4 +870,37 @@ public void testTryWithResources() throws Exception {
 
         Assert.assertFalse(zooKeeper.getState().isAlive());
     }
+
+    @Test
+    public void testCXidRollover() throws Exception {
+        TestableZooKeeper zk = null;
+        try {
+            zk = createClient();
+            zk.setXid(Integer.MAX_VALUE - 10);
+
+            zk.create(""/testnode"", """".getBytes(), Ids.OPEN_ACL_UNSAFE,
+                CreateMode.PERSISTENT);
+            for (int i = 0; i < 20; ++i) {
+                final CountDownLatch latch = new CountDownLatch(1);
+                final AtomicInteger rc = new AtomicInteger(0);
+                zk.setData(""/testnode"", """".getBytes(), -1,
+                    new AsyncCallback.StatCallback() {
+                        @Override
+                        public void processResult(int retcode, String path, Object ctx, Stat stat) {
+                            rc.set(retcode);
+                            latch.countDown();
+                        }
+                    }, null);
+                Assert.assertTrue(""setData should complete within 5s"",
+                    latch.await(5, TimeUnit.SECONDS));
 
 Review comment:
   this is generally an anti-pattern in the tests and leads to flakey tests. e.g. we can see on some test environments that are oversubscribed. I'd suggest something very large, e.g. 30 seconds or just using the session timeout.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Mar/19 17:30;githubbot;600","athanatos commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-469395692
 
 
   @phunt I pushed a version with that changed.  The JenkinsMaven failure doesn't appear related to this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Mar/19 19:49;githubbot;600","phunt commented on issue #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787#issuecomment-469939867
 
 
   +1, lgtm. thanks @athanatos 
   
   I also reviewed the server side code and it looks like client xid ""going back in time"" (my earlier concern) is fine.
   
   I did notice this however - notice negative client xids circumvent throttling! So we're fixing this bug as well by resetting the xid before it rolls over.
   
   ```
       public void incrOutstandingAndCheckThrottle(RequestHeader h) {
           if (h.getXid() <= 0) {
               return;
           }
           if (zkServer.shouldThrottle(outstandingCount.incrementAndGet())) {
               disableRecv(false);
           }
       }
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/19 02:18;githubbot;600","asfgit commented on pull request #787: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/787
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Mar/19 02:33;githubbot;600","athanatos commented on pull request #844: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/844
 
 
   - Add test for cxid rollover to 1
   - Modify ClientCnxn.SendThread.getXid() to increment from MAX to 1.
   
   Author: Samuel Just <sjust@salesforce.com>
   
   Reviewers: phunt@apache.org
   
   Closes #787 from athanatos/forupstream/ZOOKEEPER-3253
   
   Change-Id: Ib3d111170bb086d6982f2cf0ee5cf8afd5157588
   (cherry picked from commit e10c93a590cc1b73eebad48d18cfcbceb3ec0d4d)
   
   Includes backport of createConnection testability refactor
   from 9f82798415351a20136ceb1640b1781723e51cc1.
   
   Signed-off-by: Samuel Just <sjust@salesforce.com>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 00:22;githubbot;600","phunt commented on pull request #844: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/844
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 04:09;githubbot;600","phunt commented on issue #844: ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1
URL: https://github.com/apache/zookeeper/pull/844#issuecomment-470798289
 
 
   +1 thanks @athanatos !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Mar/19 04:09;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,172800,154200,18600,10%,172800,154200,18600,,,,,,,,,ZOOKEEPER-3280,,,,,,,,ZOOKEEPER-1277,,,,ZOOKEEPER-3650,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Fri Mar 08 04:10:40 UTC 2019,,,,,,,,,,"0|yi071c:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"22/Jan/19 23:27;sjust2;It seems to me that the fix is relatively simple – the rollover seems to be harmless so we simply need to tick from -5 to 0 in ClientCnxn.getXid().  I'm working on a test and a fix.;;;","06/Mar/19 02:40;phunt;Issue resolved by pull request 787
[https://github.com/apache/zookeeper/pull/787];;;","06/Mar/19 03:57;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #261 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/261/])
ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1 (phunt: rev e10c93a590cc1b73eebad48d18cfcbceb3ec0d4d)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientTest.java
;;;","06/Mar/19 06:50;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #427 (See [https://builds.apache.org/job/ZooKeeper-trunk/427/])
ZOOKEEPER-3253: client should not send requests with cxid=-4, -2, or -1 (phunt: rev e10c93a590cc1b73eebad48d18cfcbceb3ec0d4d)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/ClientTest.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/TestableZooKeeper.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
;;;","06/Mar/19 16:29;phunt;[~sjust2] - can you submit a new pull request for this against 3.4 branch? I had to revert from 3.4, while it compiled fine the test was failing consistently across the 3.4 jenkins jobs. Thanks!;;;","07/Mar/19 13:36;elserj;FWIW, I had pulled this change into a fork and ran into the same issue. I assumed it was an issue with my fork :)
{code:java}
diff --git a/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java b/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
index 03c8b0d7e..0577d5f15 100644
--- a/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
+++ b/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeper.java
@@ -448,12 +448,21 @@ public ZooKeeper(String connectString, int sessionTimeout, Watcher watcher,
                 connectString);
         HostProvider hostProvider = new StaticHostProvider(
                 connectStringParser.getServerAddresses());
-        cnxn = new ClientCnxn(connectStringParser.getChrootPath(),
+        cnxn = createConnection(connectStringParser.getChrootPath(),
                 hostProvider, sessionTimeout, this, watchManager,
                 getClientCnxnSocket(), canBeReadOnly);
         cnxn.start();
     }

+    // @VisibleForTesting
+    protected ClientCnxn createConnection(String chrootPath,
+            HostProvider hostProvider, int sessionTimeout, ZooKeeper zooKeeper,
+            ClientWatchManager watcher, ClientCnxnSocket clientCnxnSocket,
+            boolean canBeReadOnly) throws IOException {
+        return new ClientCnxn(chrootPath, hostProvider, sessionTimeout, this,
+                watchManager, clientCnxnSocket, canBeReadOnly);
+    }
+
     /**
      * To create a ZooKeeper client object, the application needs to pass a
      * connection string containing a comma separated list of host:port pairs,{code}
Just missing the ""hook"" to inject a custom {{ClientCnxn}} object that the test code relies on.

(Can send this as a PR, just didn't want to steal [~sjust2]'s thunder ;));;;","07/Mar/19 23:04;sjust2;Yeah, that's the right fix, I'll have a PR out today or tomorrow.;;;","08/Mar/19 04:10;phunt;Committed the updated patch to 3.4 - thanks [~sjust2] !;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Purge task may lost data when the recent snapshots are all invalid,ZOOKEEPER-3231,13206891,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,maoling,jiangjiafu,jiangjiafu,29/Dec/18 04:05,10/Sep/21 03:38,13/Jul/23 09:08,10/Sep/21 03:38,3.4.13,3.5.4,,,,,,,,3.7.0,,,,,server,,,,0,pull-request-available,,"I read the ZooKeeper source code, and I find the purge task use FileTxnSnapLog#findNRecentSnapshots to find snapshots, but the method does not check whether the snapshots are valid.

Consider a worse case, a ZooKeeper server may have many invalid snapshots, and when a purge task begins, it will use the zxid in the last snapshot's name to purge old snapshots and transaction logs, then we may lost data. 

I think we should use FileSnap#findNValidSnapshots(int) instead of FileSnap#findNRecentSnapshots in FileTxnSnapLog#findNRecentSnapshots, but I am not sure.

 ",,enixon,jiangjiafu,maoling,,,,,,,,,,,,,,,,,"maoling commented on pull request #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079
 
 
   - Purge task uses `FileTxnSnapLog#findNRecentSnapshot`, which's likely to lost data when the recent 3 snapshots are all invalid(a new valid snapshot has not generated yet) and at the same time, Purge task(`e.g ./zkCleanup.sh -n 3`) has started a new round work to clean up the preceding snapshots. we will lose all the data.that's a small probability events, but it's reproducible.
   - Overall, using `snaplog.findNValidSnapshots` to make sure the purge task tries to retain N valid snapshots(rather than N snapshots) to avoid a risk of data loss.
   - For the unit test, it's not easy to use the `mock` way for the following reasons:
      - when we want to test the `dataDir` which some Snapshots are valid, others not.Just writing a little data contents to the snapshot to make it valid/invalid has a better flexibility.
      - too much code changes in the `PurgeTxnTest.java`(pass the original UT) and `FileTxnSnapLog.java`(have some handles)
   - more details in the [ZOOKEEPER-3231](https://issues.apache.org/jira/browse/ZOOKEEPER-3231)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 10:31;githubbot;600","anmolnar commented on pull request #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#discussion_r325726899
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java
 ##########
 @@ -484,6 +494,48 @@ public void testPurgeDoesNotDeleteOverlappingLogFile() throws Exception {
         zks.shutdown();
     }
 
+    @Test
+    public void testPurgeTxnLogWhenRecentSnapshotsAreAllInvalid() throws Exception {
+        tmpDir = ClientBase.createTmpDir();
 
 Review comment:
   Please consider moving this in a `setUp()` method.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 14:59;githubbot;600","anmolnar commented on pull request #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#discussion_r325727027
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/server/PurgeTxnTest.java
 ##########
 @@ -484,6 +494,48 @@ public void testPurgeDoesNotDeleteOverlappingLogFile() throws Exception {
         zks.shutdown();
     }
 
+    @Test
+    public void testPurgeTxnLogWhenRecentSnapshotsAreAllInvalid() throws Exception {
+        tmpDir = ClientBase.createTmpDir();
+        File dataDir = new File(tmpDir, ""dataDir"");
+        File dataLogDir = new File(tmpDir, ""dataLogDir"");
+
+        File dataDirVersion2 = new File(dataDir, ""version-2"");
+        dataDirVersion2.mkdirs();
+        File dataLogDirVersion2 = new File(dataLogDir, ""version-2"");
+        dataLogDirVersion2.mkdirs();
+
+        // create dummy log and transaction file
+        int totalFiles = 10;
+        int numberOfSnapFilesToKeep = 3;
+
+        // create transaction and snapshot files in different-different
+        // directories
+        for (int i = 0; i < totalFiles; i++) {
+            // simulate log file
+            File logFile = new File(dataLogDirVersion2, ""log."" + Long.toHexString(i));
+            logFile.createNewFile();
+            // simulate snapshot file
+            File snapFile = new File(dataDirVersion2, ""snapshot."" + Long.toHexString(i));
+            snapFile.createNewFile();
+            if (i < (totalFiles - numberOfSnapFilesToKeep)) {
+                makeValidSnapshot(snapFile);
+            } else {
+                makeInvalidSnapshot(snapFile);
+            }
+        }
+
+        // scenario where four parameter are passed
+        String[] args = new String[]{dataLogDir.getAbsolutePath(), dataDir.getAbsolutePath(), ""-n"", Integer.toString(numberOfSnapFilesToKeep)};
+        PurgeTxnLog.main(args);
+        //Since the recent 3 snapshots are all invalid,when purging, we can assert that 6 snapshot files are retained(3 invalid snapshots and 3 retained valid snapshots)
+        assertEquals(numberOfSnapFilesToKeep + numberOfSnapFilesToKeep, dataDirVersion2.listFiles().length);
+        // Since for each snapshot we have a log file with same zxid, expect same # logs as snaps to be kept
+        assertEquals(numberOfSnapFilesToKeep + numberOfSnapFilesToKeep, dataLogDirVersion2.listFiles().length);
+        ClientBase.recursiveDelete(tmpDir);
 
 Review comment:
   Also this should be in `tearDown()`.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Sep/19 14:59;githubbot;600","maoling commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-533952451
 
 
   @anmolnar
   > Have you considered @enixon 's suggestion about removing invalid snapshot files to reclaim more disk space?
   
   - Since these invalid snapshots are all recent, if we remove them arbitrary, users will observe this easily, mistake we lose snapshots data, that will be very embarrassing. maybe renaming it to something like this:`invalid-snapshot.fa3200000013` is better?
   - On the other hand, these invalid snapshots are no need of special treatment.Because in the next round purge task, it will be deleted as normally. so it's not a problem.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Sep/19 03:52;githubbot;600","enixon commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-536814689
 
 
   I'm happy so long as the reading logic is the same as the purging logic - so we're never purging valid (albeit old) snapshots in order to retain invalid snapshots and we aren't accumulating a large number of invalid snapshots. 
   
   This looks good to me.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Oct/19 01:09;githubbot;600","maoling commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-541481610
 
 
   @anmolnar @enixon Any other concern?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/Oct/19 01:48;githubbot;600","anmolnar commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-554312259
 
 
   @enixon I'm still good with this patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;15/Nov/19 10:49;githubbot;600","asfgit commented on pull request #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 08:43;githubbot;600","anmolnar commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-580145903
 
 
   Merged to master and 3.6 branches.
   Cannot cherry pick to 3.5, please create another PR. Thanks @maoling !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 08:47;githubbot;600","maoling commented on pull request #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079
 
 
   - Purge task uses `FileTxnSnapLog#findNRecentSnapshot`, which's likely to lost data when the recent 3 snapshots are all invalid(a new valid snapshot has not generated yet) and at the same time, Purge task(`e.g ./zkCleanup.sh -n 3`) has started a new round work to clean up the preceding snapshots. we will lose all the data.that's a small probability events, but it's reproducible.
   - Overall, using `snaplog.findNValidSnapshots` to make sure the purge task tries to retain N valid snapshots(rather than N snapshots) to avoid a risk of data loss.
   - For the unit test, it's not easy to use the `mock` way for the following reasons:
      - when we want to test the `dataDir` which some Snapshots are valid, others not.Just writing a little data contents to the snapshot to make it valid/invalid has a better flexibility.
      - too much code changes in the `PurgeTxnTest.java`(pass the original UT) and `FileTxnSnapLog.java`(have some handles)
   - more details in the [ZOOKEEPER-3231](https://issues.apache.org/jira/browse/ZOOKEEPER-3231)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 13:46;githubbot;600","nkalmar commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-580262985
 
 
   SnapStream.getOutputStream(snapFile); should have a second boolean param according if fsync is needed immediately or not.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 13:52;githubbot;600","maoling commented on issue #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079#issuecomment-580275886
 
 
   @nkalmar  Oops, I see it. I will create a fix PR tomorrow quickly.
   Due to `ZOOKEEPER-3595: restore the handling of the fsync parameter` had merged recently, although no code conflicts, but have a compile error without rebuilding the CI to find this:)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 14:22;githubbot;600","nkalmar commented on pull request #1079: ZOOKEEPER-3231:Purge task may lost data when the recent snapshots are all invalid
URL: https://github.com/apache/zookeeper/pull/1079
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/20 20:57;githubbot;600","maoling commented on pull request #1239: [trivial bug] fix compile error in PurgeTxnTest introduced by ZOOKEEPER-3231
URL: https://github.com/apache/zookeeper/pull/1239
 
 
   - Link to [PR-1079](https://github.com/apache/zookeeper/pull/1079#issuecomment-580275886)
   - more details in the [ZOOKEEPER-3710](https://issues.apache.org/jira/browse/ZOOKEEPER-3710)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/20 04:14;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,8400,,,0,8400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jan 08 12:23:48 UTC 2019,,,,,,,,,,"0|u00du8:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Jan/19 01:15;enixon;It might also make sense to more aggressively delete invalid snapshots (in the mode of ZOOKEEPER-3082). If its straightforward to identify and purge such files then we won't have to worry about deleting valid snapshots in order to preserve invalid snapshots.;;;","08/Jan/19 12:23;maoling;[~jiangjiafu]

good issue.yep!
the data-loss situation can only happen when the retained count of snapshots were all invalid(very unfortunately，little probability) and at that time,zk server took any new snapshots.
the specific source codes about the *restore* can be found in:
{code:java}
FileTxnSnapLog#restore--->snapLog.deserialize{code};;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
zk server reopened，the interval for observer connect to the new leader is too long，then session expired,ZOOKEEPER-3218,13204989,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,q_zero,q_zero,17/Dec/18 20:55,18/Jan/19 06:28,13/Jul/23 09:08,18/Jan/19 02:45,,,,,,,,,,3.6.0,,,,,,,,,0,pull-request-available,,"two participants、one observer，zkclient connect to observer。

Then，close the two participants，the zookeeper server cloesed

Ten seconds later，reopen the two participants，and leader selected

----------------------------------------------------------------------------

But the observer can't connect to the new leader immediately。Because in lookForLeader, the observer use blockingQueue(recvqueue)  to offer/poll notifications，when the recvqueue is empty，poll from recvqueue will be blocked，and timeout is 200ms，400ms，800ms....60s。

For example，09:59:59 observer poll notification，recvqueue was empty and timeout was 60s；10:00:00 two participants reopened and reselected；10:00:59 observer polled notification，connected to the new leader

But the maxSessionTimeout default to 40s。The session expired

-----------------------------------------------------------------------------

Please improve it：observer should connect to the new leader as soon as possible","win7 32bits

zookeeper 3.4.6、3.4.13",enixon,hudson,lvfangmin,maoling,q_zero,,,,,,,,,,,,,,,"lvfangmin commented on pull request #747: ZOOKEEPER-3218: zk server reopened，the interval for observer connect …
URL: https://github.com/apache/zookeeper/pull/747#discussion_r246966748
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
 ##########
 @@ -68,7 +68,34 @@
      * the system up again after long partitions. Currently 60 seconds.
      */
 
-    final static int maxNotificationInterval = 60000;
+    private static int maxNotificationInterval = 60000;
+
+    /**
+     * Lower bound for notification check. The observer don't need to use
+     * the same lower bound as participant members
+     */
+    private static int minNotificationInterval = finalizeWait;
+
+    /**
+     * Minimum notification interval, default is equal to finalizeWait
+     */
+    public static final String MIN_NOTIFICATION_INTERVAL =
+            ""zookeeper.fastleader.minNotificationInterval"";
+
+    /**
+     * Maximum notification interval, default is 60s
+     */
+    public static final String MAX_NOTIFICATION_INTERVAL =
+            ""zookeeper.fastleader.maxNotificationInterval"";
+
+    static {
+        minNotificationInterval = Integer.getInteger(MIN_NOTIFICATION_INTERVAL,
+                minNotificationInterval);
 
 Review comment:
   Please use the {} logging format.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Jan/19 00:08;githubbot;600","asfgit commented on pull request #747: ZOOKEEPER-3218: zk server reopened，the interval for observer connect …
URL: https://github.com/apache/zookeeper/pull/747
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 02:42;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jan 18 06:28:31 UTC 2019,,,,,,,,,,"0|u002cw:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Dec/18 14:58;maoling;[~q_zero]

except increasing the *maxSessionTimeout*, Do you hava any good idea?;;;","26/Dec/18 20:54;enixon;We had similar issues which we addressed by making the polling interval configurable. Attaching our patch to this issue (it adds ""zookeeper.fastleader.minNotificationInterval"").

 ;;;","18/Jan/19 02:45;lvfangmin;Issue resolved by pull request 747
[https://github.com/apache/zookeeper/pull/747];;;","18/Jan/19 05:08;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #194 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/194/])
ZOOKEEPER-3218: Add min notification interval property for fast leader (fangmin: rev 0b504dec95b09acb05b40505588f7cda8131fea6)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
;;;","18/Jan/19 06:28;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #356 (See [https://builds.apache.org/job/ZooKeeper-trunk/356/])
ZOOKEEPER-3218: Add min notification interval property for fast leader (fangmin: rev 0b504dec95b09acb05b40505588f7cda8131fea6)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/FastLeaderElection.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
owasp job flagging slf4j on trunk,ZOOKEEPER-3217,13204603,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,eolivelli,phunt,phunt,15/Dec/18 00:26,02/Apr/19 10:40,13/Jul/23 09:08,03/Jan/19 15:34,,,,,,,,,,3.4.14,3.5.5,3.6.0,,,,,,,0,pull-request-available,,"https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-owasp/204/artifact/build/test/owasp/dependency-check-vulnerability.html

https://nvd.nist.gov/vuln/detail/CVE-2018-8088

We don't use EventData but should consider upgrading.",,andor,hudson,,,,,,,,,,,,,,,,,,"Humbedooh commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451108446
 
 
   one more test, found a bug :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 10:42;githubbot;600","Humbedooh commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451108446
 
 
   one more test, found a bug :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 10:42;githubbot;600","Humbedooh commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451108055
 
 
   Please ignore this comment, checking JIRA integration.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 10:42;githubbot;600","anmolnar commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451121539
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 11:46;githubbot;600","anmolnar commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451125713
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 12:07;githubbot;600","anmolnar commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451145230
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 13:39;githubbot;600","anmolnar commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451167996
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 14:59;githubbot;600","asfgit commented on pull request #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 15:33;githubbot;600","anmolnar commented on issue #736: ZOOKEEPER-3217 owasp job flagging slf4j on trunk
URL: https://github.com/apache/zookeeper/pull/736#issuecomment-451178971
 
 
   Committed to 3.4, 3.5 and master branches. Thanks @eolivelli !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Jan/19 15:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,5400,,,0,5400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jan 04 03:46:16 UTC 2019,,,,,,,,,,"0|s01jrc:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Dec/18 00:27;phunt;afaict there is no stable release of slf4j which includes this fix. There is a beta available though from the looks of it.;;;","03/Jan/19 15:34;andor;Issue resolved by pull request 736
[https://github.com/apache/zookeeper/pull/736];;;","03/Jan/19 21:37;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #172 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/172/])
ZOOKEEPER-3217: owasp job flagging slf4j on trunk (andor: rev 4a8fda7031d68236441b13bd878936b2607c5244)
* (edit) build.xml
* (add) owaspSuppressions.xml
;;;","04/Jan/19 03:46;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #335 (See [https://builds.apache.org/job/ZooKeeper-trunk/335/])
ZOOKEEPER-3217: owasp job flagging slf4j on trunk (andor: rev 4a8fda7031d68236441b13bd878936b2607c5244)
* (add) owaspSuppressions.xml
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle Java 9/11 additions of covariant return types to java.nio.ByteBuffer methods,ZOOKEEPER-3215,13204348,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,andor,softwareengg,softwareengg,13/Dec/18 20:54,11/May/20 15:41,13/Jul/23 09:08,30/Apr/20 07:30,3.4.13,,,,,,,,,3.5.8,3.6.2,3.7.0,,,,,,,0,pull-request-available,,"Java 9 introduces covariant return types which allows one to have different return types if return type in the overridden method is a sub type. Since Java 9, few functions return ByteBuffer, whereas the parent method return Buffer, resulting in causing issues for Java 8 and below since for them the method does not exist.

Steps To Reproduce:
1. Setup ZooKeeper Server with JDK11.
2. Setup ZooKeeper Client with JDK8.
3. Try connecting the client and server.

Results:
Cast ByteBuffer instances to Buffer before calling the method.

 

Notes:
There was a similar bug in the MongoDB community - [https://jira.mongodb.org/browse/JAVA-2559]

 

This is not a contribution.",,busbey,krisden,maoling,softwareengg,symat,,,,,,,,,,,,,,,"vivekpatani commented on pull request #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760
 
 
   …to java.nio.ByteBuffer methods
   
   Co-authored-by: Brandon Miles <brandon_miles@apple.com>
   
   Java 9 introduces covariant return types which allows one to have different return types if return type in the overridden method is a sub type. Since Java 9, few functions return ByteBuffer, whereas the parent method return Buffer, resulting in causing issues for Java 8 and below since for them the method does not exist.
   
   To fix this, we must cast the ByteBuffer instances to Buffer before we call the method. The methods that need this are:
   
   - position(int newPosition)
   - limit(int newLimit)
   - flip()
   - clear()
   - mark()
   - reset()
   - rewind()
   
   Signed-off-by: Vivek Patani <softwareengg@pm.me>
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jan/19 20:11;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452734142
 
 
   @vivekpatani Since Java 1.9 there's a `--release` switch for the javac compiler which sets the ""source"", ""target"" and ""bootclasspath"" properties in order to properly cross-compile.
   
   Wouldn't it be better to use that for cross-compile ZooKeeper instead of code change?
   I tested it on branch-3.4 and it works fine.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 15:21;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452734142
 
 
   @vivekpatani Since Java 9 there's a `--release` switch for the javac compiler which sets the ""source"", ""target"" and ""bootclasspath"" properties in order to properly cross-compile.
   
   Wouldn't it be better to use that for cross-compile ZooKeeper instead of code change?
   I tested it on branch-3.4 and it works fine.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 15:21;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452735551
 
 
   https://openjdk.java.net/jeps/247
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Jan/19 15:25;githubbot;600","vivekpatani commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452933177
 
 
   @anmolnar it builds just fine, passes tests, it's more about return types discrepancy post JDK9. Were you able to spin up a server/client and talk to each other? I'll give it a try as well.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/19 01:14;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-452977671
 
 
   @vivekpatani I tested it (cross-building with `--release 8` flag) on all major branches:
   - branch-3.4 works fine: compiling with Java 11, running on Java 8, client connected, able to execute commands,
   - branch-3.5 and master: code doesn't compile due to unavailability of `com.sun.nio.file.SensitivityWatchEventModifier` imported in `FileChangeWatcher.java`, but that's seems like a problem that we should deal with anyway.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Jan/19 05:43;githubbot;600","vivekpatani commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-454982760
 
 
   @anmolnar looks like it works for me. We can close this PR out and just comment on the issue if anyone comes across the same problem, they can use ```--release``` flag as a solution. Thank you.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/Jan/19 23:24;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-455232025
 
 
   Thanks @vivekpatani . I think a patch is needed anyway to modify ant/maven scripts to use release flag instead of javac.target. Because now one could mistakenly make the assumption of ZooKeeper correctly cross-compiles for JDK8. Would you mind creating or modifying your existing patch accordingly?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 16:16;githubbot;600","eolivelli commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-455237059
 
 
   @anmolnar  the 'release' flag is available only from JDK9+ 
   we need to put  a bunch of ""if/else"" in ant/maven configuration and it is quite complicated the resulting configuration.
   
    IMHO It is better to add the ""animal sniffer plugin "" in the maven build and leave Ant as it is now
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 16:29;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-455260317
 
 
   @eolivelli Sure. I like the idea.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;17/Jan/19 17:35;githubbot;600","anmolnar commented on issue #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760#issuecomment-606548661
 
 
   Branch-3.4 is locked already.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/20 10:48;githubbot;600","anmolnar commented on pull request #760: ZOOKEEPER-3215: Handle Java 9/11 additions of covariant return types …
URL: https://github.com/apache/zookeeper/pull/760
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Mar/20 10:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon May 11 15:41:14 UTC 2020,,,,,,,,,,"0|s01i6w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Dec/18 02:20;maoling;look at the patch:https://github.com/mongodb/mongo-java-driver/commit/21c91bd364d38489e0bbe2e390efdb3746ee3fff
just cast ByteBuffer to Buffer. Java 9 hasn't the good downward compatibility.
Thanks for telling us how to reproduce this issue.
[~softwareengg]
Could you give us a patch?;;;","26/Apr/20 15:14;busbey;I hit this issue when trying to use Zookeeper 3.5.7 installed via Homebrew.

The logs (after adjusting the log level in {{/usr/local/etc/zookeeper/log4j.properties}} from WARN to INFO) contain the tell-tale complaint:

{code}
2020-04-25 02:42:15 NIOServerCnxn [WARN] Unable to read additional data from client sessionid 0x0, likely client has closed socket
2020-04-25 02:42:16 ClientCnxn [INFO] Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)
2020-04-25 02:42:16 ClientCnxn [WARN] Session 0x0 for server localhost/127.0.0.1:2181, unexpected error, closing socket connection and attempting reconnect
java.lang.NoSuchMethodError: java.nio.ByteBuffer.clear()Ljava/nio/ByteBuffer;
        at org.apache.zookeeper.ClientCnxnSocketNIO.connect(ClientCnxnSocketNIO.java:296)
        at org.apache.zookeeper.ClientCnxn$SendThread.startConnect(ClientCnxn.java:1104)
        at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1139)
2020-04-25 02:42:16 NIOServerCnxn [WARN] Unable to read additional data from client sessionid 0x0, likely client has closed socket
2020-04-25 02:42:16 ZooKeeper [INFO] Session: 0x0 closed
2020-04-25 02:42:16 ClientCnxn [INFO] EventThread shut down for session: 0x0
{code}

My JAVA_HOME is set to jdk8 build 161, as is the bare ""javac"" command

{code}
echo $busbey-mba13:~ busbey$ echo $JAVA_HOME
/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/
busbey-mba13:~ busbey$ which javac
/usr/bin/javac
busbey-mba13:~ busbey$ /usr/bin/javac -version
javac 1.8.0_161
{code}

I do have other Javas installed
{code}
busbey-mba13:~ busbey$ ls /Library/Java/JavaVirtualMachines/
jdk-9.jdk		jdk1.8.0_161.jdk	jdk1.8.0_74.jdk		jdk8u172-b11		zulu-7.jdk
jdk1.7.0_80.jdk		jdk1.8.0_192.jdk	jdk1.9-ea-b102.jdk	openjdk-11.0.2.jdk
{code}

I'm checking to see now if homebrew installed from source and if so how it picked which JDK to compile with.;;;","26/Apr/20 15:48;busbey;the homebrew formula looks to come from the core homebrew project [defined over in homebrew-core's github|https://github.com/Homebrew/homebrew-core/blob/master/Formula/zookeeper.rb].

AFAICT it installs from source and builds via a bare invocation of ant. running {{ant -diagnostics}} on my system points to JDK8 as what ant is seeing
{code}
busbey-mba13:~ busbey$ ant -diagnostics | grep -E ""(ant.java.version|java.home|java.vm.vendor|java.vm.version|java.runtime.version)""
ant.java.version: 1.8
java.vm.version : 25.161-b12
java.vm.vendor : Oracle Corporation
java.runtime.version : 1.8.0_161-b12
java.home : /Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre
{code}

I'll try wiping everything, confirming jdk versions, and rerunning the install. maybe the console where I did my installation had a different jdk active.;;;","26/Apr/20 20:30;busbey;a verbose install showed that I'm not building from source but rather installing a prebuild homebrew ""bottle"" specific for my version of OS X. so that build must have happened with JDK9+.;;;","27/Apr/20 14:07;busbey;Now that I've gotten zookeeper 3.5.7 to build from source I get the same issue. I also worked out that the from source build is using an openjdk also from homebrew, which is totally different then all the other JDKs I have installed because it's keg-only (which means that by default it gets used within homebrew but not outside of it).

{code}
busbey-mba13:~ busbey$ /usr/local/opt/openjdk/bin/javac -version
javac 13.0.2
{code}

I would assume the bottle for zookeeper is made with this same jdk version, which explains why I hit the issue. The oldest homebrew openjdk version I can find is JDK11, which essentially means folks trying to use a homebrew installed Zookeeper client will need to use JDK9+ until this issue is addressed.;;;","27/Apr/20 14:13;busbey;For those willing to risk messing up their homebrew installation, I was able to work around things with the following high level steps:

* remove  the homebrew versions of zookeeper, ant, openjdk
* install the cask version of adoptopenjdk8
* symlink the {{adoptopenjdk-8.jdk/Contents/Home/}} directory into /usr/local/opt/openjdk
* install ant with the unsupported {{--ignore-dependencies}} flag
* use the info homebrew command to verify all the needed dependencies are present for zookeeper
* install zookeeper with the flags {{--build-from-source --ignore-dependencies}}

That got me a zookeeper that was compiled with JDK8 (currently build 252) and I could successfully use the {{zkCli}} from homebrew with JDK8 (specifically the JDK8 build 161 I previously was trying to use).

Alternatively you can keep JAVA_HOME unset when using {{zkCli}} and make sure whatever application you want to use with JDK8 has client libraries from somewhere other than homebrew.;;;","29/Apr/20 18:59;symat;[~busbey], Vivek Patani, thank you for raising this issues again! we had a discussion on the zookeeper dev mailing list and concluded on a fix proposed by [~ctubbsii] that introduces some maven magic: we are detecting now the Java compiler with maven and adding “--release 8” switch to all Java compilers with version 9+. It turned out that the master branch already contained the fix, now we are backporting it to the active 3.5 and 3.6 branches.

Just for the record, the verification steps we are using:
- build ZK from source with openjdk 13.0.2
- run server with JDK 8 (e.g. Oracle 1.8.0_201)
- connect zkcli with both java versions
- run some smoke tests
- make sure there is no exceptions like ""NoSuchMethodError"" in the logs

Once we tested the backports, I will resolve this ticket, marked as fixed in the next releases.;;;","30/Apr/20 07:30;symat;Thanks for [~andor] for investigating / fixing this issue on all branches!
;;;","11/May/20 15:41;symat;closed after releasing 3.5.8;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix website with adding doap.rdf back,ZOOKEEPER-3212,13203655,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,tamaas,tamaas,tamaas,11/Dec/18 09:15,11/Dec/18 10:15,13/Jul/23 09:08,11/Dec/18 10:06,,,,,,,,,,3.6.0,,,,,other,,,,0,pull-request-available,,During the website migration the doap.rdf file has been forgotten. Must be put back to its place.,,andor,tamaas,,,,,,,,,,,,,,,,,,"GitHub user tamaashu opened a pull request:

    https://github.com/apache/zookeeper/pull/734

    ZOOKEEPER-3212: Fix website with adding doap.rdf back

    During the website conversion the doap.rdf file got lost. Fix it with adding it back.
    
    Change-Id: I92f563ff633b638b3b0af6a2a08a0ce474478efb

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/tamaashu/zookeeper ZOOKEEPER-3212

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/734.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #734
    
----
commit 67a11d23c0ccca0c10ccbe97cb10a7bb88be3d70
Author: Tamas Penzes <tamaas@...>
Date:   2018-12-11T09:23:38Z

    ZOOKEEPER-3212: Fix website with adding doap.rdf back
    
    Change-Id: I92f563ff633b638b3b0af6a2a08a0ce474478efb

----
;11/Dec/18 09:25;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/734
  
    Committed. Thanks @tamaashu !
;11/Dec/18 10:07;githubbot;600","Github user tamaashu closed the pull request at:

    https://github.com/apache/zookeeper/pull/734
;11/Dec/18 10:15;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Dec 11 10:06:58 UTC 2018,,,,,,,,,,"0|s01dy0:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Dec/18 10:06;andor;Issue resolved by pull request 734
[https://github.com/apache/zookeeper/pull/734];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Typo in zookeeperInternals doc,ZOOKEEPER-3210,13203196,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,,sknot,sknot,08/Dec/18 09:33,02/Apr/19 10:40,13/Jul/23 09:08,08/Jan/19 16:23,,,,,,,,,,3.4.14,3.5.5,3.6.0,,,,,,,0,pull-request-available,,,,andor,hudson,sknot,,,,,,,,,,,,,,,,,"maoling commented on issue #732: [ZOOKEEPER-3210] typo in zookeeperInternals doc
URL: https://github.com/apache/zookeeper/pull/732#issuecomment-452344078
 
 
   ping @lvfangmin  @anmolnar 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jan/19 15:41;githubbot;600","asfgit commented on pull request #732: [ZOOKEEPER-3210] typo in zookeeperInternals doc
URL: https://github.com/apache/zookeeper/pull/732
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jan/19 16:21;githubbot;600","anmolnar commented on issue #732: [ZOOKEEPER-3210] typo in zookeeperInternals doc
URL: https://github.com/apache/zookeeper/pull/732#issuecomment-452360183
 
 
   Committed to all major branches: 3.4, 3.5, 3.6
   Thanks @stanlyDoge !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Jan/19 16:24;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jan 08 22:15:15 UTC 2019,,,,,,,,,,"0|s01b4w:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Dec/18 09:34;sknot;https://github.com/apache/zookeeper/pull/732;;;","08/Jan/19 16:23;andor;Issue resolved by pull request 732
[https://github.com/apache/zookeeper/pull/732];;;","08/Jan/19 19:19;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #178 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/178/])
ZOOKEEPER-3210: typo in zookeeperInternals doc (andor: rev c358dce653874ae4b97ce26629e3ddba00c8b669)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperInternals.md
;;;","08/Jan/19 22:15;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #341 (See [https://builds.apache.org/job/ZooKeeper-trunk/341/])
ZOOKEEPER-3210: typo in zookeeperInternals doc (andor: rev c358dce653874ae4b97ce26629e3ddba00c8b669)
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperInternals.md
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to produce verbose logs of Zookeeper,ZOOKEEPER-3199,13200338,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,ankit.kothana,ankit.kothana,24/Nov/18 07:35,26/Nov/18 09:22,13/Jul/23 09:08,26/Nov/18 09:22,,,,,,,,,,,,,,,,,,,0,,,"We are using Zookeeper in our system along with Apache Kafka. However, Zookeeper is not producing any relevant logs (even with lower log levels specified in log4j.properties) in the log file that could help us in identifying what is currently going on in ZK or Kafka cluster. 

Please let us know how to retrieve proper logs from ZK cluster.

Version of ZK : 3.4.13",,ankit.kothana,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Nov/18 08:04;ankit.kothana;log4j.properties;https://issues.apache.org/jira/secure/attachment/12949340/log4j.properties","24/Nov/18 08:04;ankit.kothana;zookeeper.log;https://issues.apache.org/jira/secure/attachment/12949339/zookeeper.log",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Nov 26 09:22:48 UTC 2018,,,,,,,,,,"0|s00tn4:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Nov/18 08:01;ankit.kothana;Took reference of https://issues.apache.org/jira/browse/ZOOKEEPER-2170 and updated zkEnv.sh to change root level of logging to DEBUG, but it didn't resolved the issue.

Attaching log4j.properties and zookeeper.log files

 ;;;","26/Nov/18 09:22;ankit.kothana;Closing issue. Resolved.;;;","26/Nov/18 09:22;ankit.kothana;Found a bug in our script.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java 9: X509UtilTest.testCreateSSLContextWithoutTrustStorePassword fails,ZOOKEEPER-3165,13191179,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,andor,andor,12/Oct/18 11:58,20/May/19 17:50,13/Jul/23 09:08,16/Oct/18 09:57,3.5.5,,,,,,,,,3.5.5,,,,,tests,,,,0,pull-request-available,,"*Error Message*

Failed to create TrustManager

*Stacktrace*

org.apache.zookeeper.common.X509Exception$SSLContextException: Failed to create TrustManager
	at org.apache.zookeeper.common.X509Util.createSSLContext(X509Util.java:210)
	at org.apache.zookeeper.common.X509Util.createSSLContext(X509Util.java:163)
	at org.apache.zookeeper.common.X509Util.getDefaultSSLContext(X509Util.java:147)
	at org.apache.zookeeper.common.X509UtilTest.testCreateSSLContextWithoutTrustStorePassword(X509UtilTest.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:79)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.lang.Thread.run(Thread.java:844)
Caused by: org.apache.zookeeper.common.X509Exception$TrustManagerException: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty
	at org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:299)
	at org.apache.zookeeper.common.X509Util.createSSLContext(X509Util.java:207)
Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty
	at java.base/java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)
	at java.base/java.security.cert.PKIXParameters.<init>(PKIXParameters.java:157)
	at java.base/java.security.cert.PKIXBuilderParameters.<init>(PKIXBuilderParameters.java:130)
	at org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:274)",,andor,,,,,,,,,,,,,,,,,,,"GitHub user anmolnar opened a pull request:

    https://github.com/apache/zookeeper/pull/668

    ZOOKEEPER-3165. Java 10: X509UtilTest.testCreateSSLContextWithoutTrustStorePassword fails

    We use JKS format explicitly, but the tests created the keystore and truststore with the default format. This has been changed in Java 9 from JKS to PKCS12 which caused the test failing on Java 9+ builds.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-3165

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/668.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #668
    
----
commit 545d7ad276a942cf763f3a81dc5595e2a200fdd6
Author: Andor Molnar <andor@...>
Date:   2018-10-12T13:58:55Z

    ZOOKEEPER-3165. Changed keystore/truststore format to JKS, because the default type has been changed in Java 9 to PKCS12

----
;12/Oct/18 14:01;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/668
  
    @ivmaykov
    You might be interested in this change. I wonder why only a single test was failing, because of this.
;12/Oct/18 14:04;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/668
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2426/

;12/Oct/18 14:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/668
  
    Looks like the reason is that Java API requires non-empty password for p12 files. That's why the only failing test is the one with empty password. JKS format still allows to store keys without password protection.
;13/Oct/18 10:46;githubbot;600","Github user ivmaykov commented on the issue:

    https://github.com/apache/zookeeper/pull/668
  
    Your fix looks fine to me. It's fixed in my stack of FB internal diffs too (#627 for the time being), where I am explicit about JKS or PEM format. Didn't realize that Java 9 supports PKCS12 key/trust stores now, cool.
;15/Oct/18 21:45;githubbot;600","Github user anmolnar closed the pull request at:

    https://github.com/apache/zookeeper/pull/668
;16/Oct/18 09:58;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/668
  
    Committed to branch-3.5
;16/Oct/18 09:58;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Oct 16 09:57:33 UTC 2018,,,,,,,,,,"0|i3z4n3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Oct/18 11:58;andor;This happens with Java 9 builds as well.;;;","16/Oct/18 09:57;andor;Issue resolved by pull request 668
[https://github.com/apache/zookeeper/pull/668];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broken lock semantics in C client lock-recipe,ZOOKEEPER-3162,13190396,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andrea.reale,andrea.reale,andrea.reale,09/Oct/18 15:18,02/Apr/19 10:40,13/Jul/23 09:08,12/Nov/18 22:21,3.0.0,3.4.13,,,,,,,,3.4.14,3.5.5,3.6.0,,,c client,,,,0,pull-request-available,,"As reported (but never fixed) in the past by ZOOKEEPER-2409, ZOOKEEPER-2038 and (partly) ZOOKEEPER-2878, the C client lock-recipe implementation is broken.

I identified three issues.

The main one (as also reported in the aforementioned reports) is that the logic that goes through the lock waiting list is broken. child_floor uses strcmp and compares the full node name (i.e., sessionID-sequence) rather than only comparing the sequence number. This makes it possible for two different clients to hold the lock at the same time: assume two clients, one associated with session A, the other with session B, with A < B lexicographically. Now assume that at some point a thread in B holds a lock and a thread in A tries to acquire the same lock. A will manage to get the lock because of the wrong comparison function, so now two guys hold the lock.

The second issue is a possible deadlock inside zkr_lock_operation. zkr_lock_operation is always called by holding the mutex associated to the client lock. In some cases, zkr_lock_operaton may decide to give-up locking and call zkr_lock_unlock to release the lock. When this happens, it will try to acquire again the same phtread mutex, which will lead to a deadlock.

The third issue relates to the return value of zkr_lock_lock. According to the API docs, the functions returns 0 when no errors. Then it is up to the invoker to check when the lock is held by calling zkr_lock_isowner. However, the implementation, in case of no error, returns zkr_lock_isowner. This is wrong because it becomes impossible to distinguish an error condition from a success (but not ownerhsip). Instead the API (as described in the docs, btw) should return always 0 when no errors occur.

Shortly I will add the link to a PR fixing the issues.

 ",,andor,andrea.reale,hudson,,,,,,,,,,,,,,,,,"GitHub user andreareale opened a pull request:

    https://github.com/apache/zookeeper/pull/662

    ZOOKEEPER-3162

    This PR fixes a few issues with the C client lock-recipe, as documented in more detailed in [ZOOKEEPER-3162](https://issues.apache.org/jira/browse/ZOOKEEPER-3162) on JIRA.
    
    Details are also provided in the individual commits, but in short:
    - Fix a bug in the choice of the predecessor node while trying to acquire the lock
    - Fix a possible deadlock in zkr_lock_operation
    - Fix the return value of zkr_lock_lock to abide to the prescribed semantics.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ibm-research-ireland/zookeeper ZOOKEEPER-3162

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/662.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #662
    
----
commit f5b0e09820fa0713d64119e4ba70fe0d07533a96
Author: Andrea Reale <realean2@...>
Date:   2018-10-09T09:23:50Z

    Fix wrong include path for C recipes
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

commit d6e1953840f56c2c42948ff1958be779465e2bb9
Author: Andrea Reale <realean2@...>
Date:   2018-08-03T16:35:56Z

    Bugfix on zookeeper-recipes-lock C implementation
    
    - Fixes ZOOKEEPER-2408,ZOOKEEPER-2038, and (partly) ZOOKEEPER-2878
    - Fixes child_floor by using strcmp_suffix instead of strcmp. This will
      do the correct lookups within the sorted waiters list. Without this
      the lock semantics are broken: e.g., assuming that session A < session
      B (alfanumerically), if a thread from session B holds the lock, and a
      thread from session A tries to acquire it it will find no predecessor
      in child_floor and get the lock as well.
    - Uses binary search to find child_floor (optimization)
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

commit e95da861ba0340949baa65b6f143d8a4e67aee6c
Author: Andrea Reale <realean2@...>
Date:   2018-08-15T16:35:07Z

    Fixes deadlock in zoo_lock_operation
    
    zkr_lock_operation is always called by holding the mutex associated to
    the client lock. In some cases, zkr_lock_operaton may decide to give-up
    locking and call zkr_lock_unlock to release the lock. When this happens,
    it will try to acquire again the same phtread mutex, which will lead to
    a deadlock.
    
    This commit fixes the issue by calling a non-protected version of
    zkr_lock_unlock from within zkr_lock_operatino.
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

commit 51ac01ecd06aca9d368519ff925a3539ddef35b4
Author: Andrea Reale <realean2@...>
Date:   2018-10-09T14:52:11Z

    Fix return semantics of zkr_lock_lock
    
    Returns 0 (on no-errors) from zkr_lock_lock. This matches the
    API documentation. Additionall, returning zkr_lock_isowner is also
    semantically wrong: a caller might be enqueued for lock acquision and
    still not the owner; in such a case the function should still return 0
    because that is the expected behavior.
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

----
;09/Oct/18 15:42;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2394/

;09/Oct/18 15:57;githubbot;600","Github user andreareale commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    retest this please
;09/Oct/18 16:12;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2397/

;09/Oct/18 16:37;githubbot;600","Github user nkalmar commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    Looks good, thanks @andreareale 
    The C test fail looks like it's the flaky one:
    *** Error in `./zktest-mt': free(): invalid pointer: 0x00002b913dcd5000 ***
    I think there's already a fix underway.
    
    This should also go into 3.5 as well (possibly to 3.4 especially the include path fix).
;10/Oct/18 09:17;githubbot;600","Github user nkalmar commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    retest this please
;10/Oct/18 14:05;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2417/

;10/Oct/18 14:21;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2437/

;15/Oct/18 17:02;githubbot;600","Github user andreareale commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    Thanks @nkalmar. There were some additional path issues in the recipes ant test targets. Updated the PR to fix them as well. Please, let me know if there is anything I can do to help with merging.
;16/Oct/18 09:03;githubbot;600","Github user tamaashu commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    looks okay, thanks for fixing build issues too
;18/Oct/18 13:59;githubbot;600","Github user andreareale commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    Hi @nkalmar, @tamaashu and thanks for the reviews. Any chance to see this merged any time soon?
;07/Nov/18 10:10;githubbot;600","Github user tamaashu commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    Since I'm not a committer I cannot do so. @anmolnar @hanm could you please review this PR? Thanks.
;07/Nov/18 10:35;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/662
;07/Nov/18 23:55;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/662
  
    Committed to 3.5 and master branches. Thanks @andreareale !
    Please create separate pull request for branch-3.4
;07/Nov/18 23:55;githubbot;600","GitHub user andreareale opened a pull request:

    https://github.com/apache/zookeeper/pull/699

    ZOOKEEPER-3162 (branch3.4). Broken lock semantics in C client lock-recipe.

    This is a new pull request that, as requested, ports PR #662 to branch-3.4
    
    This PR fixes a few issues with the C client lock-recipe, as documented in more detailed in ZOOKEEPER-3162 on JIRA.
    
    Details are also provided in the individual commits, but in short:
    - Fix a bug in the choice of the predecessor node while trying to acquire the lock
    - Fix a possible deadlock in zkr_lock_operation
    - Fix the return value of zkr_lock_lock to abide to the prescribed semantics.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ibm-research-ireland/zookeeper ZOOKEEPER-3162_branch3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/699.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #699
    
----
commit 07d5b8e3fb2b3ea5df9df9ea22fd9706da15e1d9
Author: Andrea Reale <realean2@...>
Date:   2018-10-09T09:23:50Z

    Fix wrong include path for C recipes
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

commit 38e7266089d62ffe4ddc0dd1b0cd7632a58641fa
Author: Andrea Reale <realean2@...>
Date:   2018-08-03T16:35:56Z

    Bugfix on zookeeper-recipes-lock C implementation
    
    - Fixes ZOOKEEPER-2408,ZOOKEEPER-2038, and (partly) ZOOKEEPER-2878
    - Fixes child_floor by using strcmp_suffix instead of strcmp. This will
      do the correct lookups within the sorted waiters list. Without this
      the lock semantics are broken: e.g., assuming that session A < session
      B (alfanumerically), if a thread from session B holds the lock, and a
      thread from session A tries to acquire it it will find no predecessor
      in child_floor and get the lock as well.
    - Uses binary search to find child_floor (optimization)
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

commit 99f5959efeb8049c5318515b5d87b6e80add35c0
Author: Andrea Reale <realean2@...>
Date:   2018-10-09T14:52:11Z

    Fix return semantics of zkr_lock_lock
    
    Returns 0 (on no-errors) from zkr_lock_lock. This matches the
    API documentation. Additionall, returning zkr_lock_isowner is also
    semantically wrong: a caller might be enqueued for lock acquision and
    still not the owner; in such a case the function should still return 0
    because that is the expected behavior.
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

commit b33a0bf8545f089a9f29c43414125032a2b5c1d3
Author: Andrea Reale <realean2@...>
Date:   2018-08-15T16:35:07Z

    Fixes deadlock in zoo_lock_operation
    
    zkr_lock_operation is always called by holding the mutex associated to
    the client lock. In some cases, zkr_lock_operaton may decide to give-up
    locking and call zkr_lock_unlock to release the lock. When this happens,
    it will try to acquire again the same phtread mutex, which will lead to
    a deadlock.
    
    This commit fixes the issue by calling a non-protected version of
    zkr_lock_unlock from within zkr_lock_operatino.
    
    Signed-off-by: Andrea Reale <realean2@ie.ibm.com>

----
;12/Nov/18 19:00;githubbot;600","Github user andreareale commented on the issue:

    https://github.com/apache/zookeeper/pull/699
  
    @anmolnar , as requested this is a duplicate of PR #662 ported onto branch-3.4.
    It applied cleanly except for the calls to the logging macros, which in 3.5 support logging by callback as far as I understood.
    Thanks!
;12/Nov/18 19:53;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/699
  
    Committed. Thanks @andreareale !
    Please assign the jira to yourself and close this PR.
;12/Nov/18 22:22;githubbot;600","anmolnar commented on pull request #699: ZOOKEEPER-3162 (branch3.4). Broken lock semantics in C client lock-recipe.
URL: https://github.com/apache/zookeeper/pull/699
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 22:00;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Mon Nov 12 22:21:18 UTC 2018,,,,,,,,,,"0|i3yztr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"08/Nov/18 02:22;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #99 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/99/])
ZOOKEEPER-3162: Broken lock semantics in C client lock-recipe. (andor: rev 477fa0724fa66cc41d14e8a974ab4ac2a1b68433)
* (edit) zookeeper-recipes/zookeeper-recipes-lock/src/main/c/tests/TestClient.cc
* (edit) zookeeper-recipes/zookeeper-recipes-lock/src/main/c/src/zoo_lock.c
* (edit) zookeeper-recipes/zookeeper-recipes-queue/build.xml
* (edit) zookeeper-recipes/zookeeper-recipes-lock/build.xml
* (edit) zookeeper-recipes/zookeeper-recipes-lock/src/main/c/configure.ac
* (edit) zookeeper-recipes/zookeeper-recipes-queue/src/main/c/configure.ac
;;;","08/Nov/18 03:18;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #261 (See [https://builds.apache.org/job/ZooKeeper-trunk/261/])
ZOOKEEPER-3162: Broken lock semantics in C client lock-recipe. (andor: rev 477fa0724fa66cc41d14e8a974ab4ac2a1b68433)
* (edit) zookeeper-recipes/zookeeper-recipes-queue/src/main/c/configure.ac
* (edit) zookeeper-recipes/zookeeper-recipes-lock/src/main/c/src/zoo_lock.c
* (edit) zookeeper-recipes/zookeeper-recipes-lock/build.xml
* (edit) zookeeper-recipes/zookeeper-recipes-lock/src/main/c/configure.ac
* (edit) zookeeper-recipes/zookeeper-recipes-lock/src/main/c/tests/TestClient.cc
* (edit) zookeeper-recipes/zookeeper-recipes-queue/build.xml
;;;","12/Nov/18 22:21;andor;Issue resolved by pull request 699
[https://github.com/apache/zookeeper/pull/699];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZOOKEEPER-2184 causes kerberos principal to not have resolved host name,ZOOKEEPER-3156,13187676,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,revans2,revans2,revans2,26/Sep/18 17:20,04/Oct/19 14:55,13/Jul/23 09:08,05/Nov/18 18:42,3.4.13,3.5.5,3.6.0,,,,,,,3.4.14,3.5.5,3.6.0,,,java client,,,,0,pull-request-available,,"Prior to ZOOKEEPER-2184 the zookeeper client would canonicalize a configured host name before creating the SASL client which is used to create the principal name.  After ZOOKEEPER-2184 that canonicalization does not happen so the principal that the ZK client tries to use when it is configured to talk to a CName is different between 3.4.13 and all previous versions of ZK.

 

For example

 

zk1.mycluster.mycompany.com maps to real-node.mycompany.com.

 

3.4.13 will want the server to have [zookeeper/zk1.mycluster.com@KDC.MYCOMPANY.COM|mailto:zookeeper/zk1.mycluster.com@KDC.MYCOMPANY.COM]

3.4.12 wants the server to have [zookeeper/real-node.mycompany.com@KDC.MYCOMPANY.COM|mailto:zookeeper/real-node.mycompany.com@KDC.MYCOMPANY.COM]

 

This makes 3.4.13 incompatible with many ZK setups currently in existence.  It would be nice to have that resolution be optional because in some cases it might be nice to have a single principal tied to the cname.",,andor,eolivelli,hanm,hudson,krisden,revans2,,,,,,,,,,,,,,"GitHub user revans2 opened a pull request:

    https://github.com/apache/zookeeper/pull/648

    ZOOKEEPER-3156: Add in option to canonicalize host name

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/revans2/zookeeper ZOOKEEPER-3156-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/648.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #648
    
----
commit 7ecd6c9151c0e7be749cfead5f141d673a8663f6
Author: Robert Evans <evans@...>
Date:   2018-09-26T20:40:26Z

    ZOOKEEPER-3156: Add in option to canonicalize host name

----
;28/Sep/18 19:43;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221367697
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -990,6 +992,27 @@ private void sendPing() {
             private boolean saslLoginFailed = false;
     
             private void startConnect(InetSocketAddress addr) throws IOException {
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +            } catch (IllegalArgumentException ea) {
    +                //ignored ...
    +            }
    +
    +            if (canonicalize) {
    --- End diff --
    
    You only want to do this if SASL client is enabled. Hence the name of the switch contains `sasl.client`. 
;28/Sep/18 20:16;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221367723
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -990,6 +992,27 @@ private void sendPing() {
             private boolean saslLoginFailed = false;
     
             private void startConnect(InetSocketAddress addr) throws IOException {
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +            } catch (IllegalArgumentException ea) {
    +                //ignored ...
    +            }
    +
    +            if (canonicalize) {
    +                try {
    +                    InetAddress ia = addr.getAddress();
    +                    LOG.warn(""ia {}"", ia);
    --- End diff --
    
    Debugging?
;28/Sep/18 20:16;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221367991
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -990,6 +992,27 @@ private void sendPing() {
             private boolean saslLoginFailed = false;
     
             private void startConnect(InetSocketAddress addr) throws IOException {
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +            } catch (IllegalArgumentException ea) {
    +                //ignored ...
    +            }
    +
    +            if (canonicalize) {
    +                try {
    +                    InetAddress ia = addr.getAddress();
    +                    LOG.warn(""ia {}"", ia);
    +                    if (ia == null) {
    +                        ia = InetAddress.getByName(addr.getHostName());
    --- End diff --
    
    If the original address is unresolved, you should throw exception immediately. That means HostProvider already tried to resolve the address, but failed. No point trying it again here.
;28/Sep/18 20:16;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221368841
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -990,6 +992,27 @@ private void sendPing() {
             private boolean saslLoginFailed = false;
     
             private void startConnect(InetSocketAddress addr) throws IOException {
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +            } catch (IllegalArgumentException ea) {
    +                //ignored ...
    +            }
    +
    +            if (canonicalize) {
    +                try {
    +                    InetAddress ia = addr.getAddress();
    +                    LOG.warn(""ia {}"", ia);
    +                    if (ia == null) {
    +                        ia = InetAddress.getByName(addr.getHostName());
    +                    }
    +                    String host = (ia != null) ? ia.getCanonicalHostName() : addr.getHostName();
    +                    addr = new InetSocketAddress(InetAddress.getByAddress(host, ia.getAddress()), addr.getPort());
    --- End diff --
    
    I'm thinking of how much value does it have to replace the address with the canonicalized version for the entire client. We might want to implement this strictly and only for `ZooKeeperSaslClient`.
    
    I'd rather move this logic to the creation of `ZooKeeperSaslClient`. 
    
    Something like:
    ```java
    zooKeeperSaslClient =  new ZooKeeperSaslClient(principalUserName + ""/"" + canonicalize ? addr.getAddress().getCanonicalHostName() : addr.getHostName());
    ```
;28/Sep/18 20:16;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2282/

;28/Sep/18 20:19;githubbot;600","Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221376870
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -990,6 +992,27 @@ private void sendPing() {
             private boolean saslLoginFailed = false;
     
             private void startConnect(InetSocketAddress addr) throws IOException {
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +            } catch (IllegalArgumentException ea) {
    +                //ignored ...
    +            }
    +
    +            if (canonicalize) {
    +                try {
    +                    InetAddress ia = addr.getAddress();
    +                    LOG.warn(""ia {}"", ia);
    +                    if (ia == null) {
    +                        ia = InetAddress.getByName(addr.getHostName());
    +                    }
    +                    String host = (ia != null) ? ia.getCanonicalHostName() : addr.getHostName();
    +                    addr = new InetSocketAddress(InetAddress.getByAddress(host, ia.getAddress()), addr.getPort());
    --- End diff --
    
    I put it here because there is a possible race.  The entire reason we have the setup we do is so that we can change the nodes in the cluster without changing the config on the client side.  If the code that establishes the connection uses a different address from the code that creates the principal there is the possibility, because of the magic of DNS caching, that the connection would be made to a different box from the one the SASL client is expecting.  If that happens, and we have the default Client section in the jaas conf, it will not result in an error.  Instead the ZK client logs something about SASL failed and still connects but is not authorized to do anything.  If it failed and retried a different node I would be happy to move it, but it does not and that failure would not be transparent to the end user.
;28/Sep/18 20:45;githubbot;600","Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221377101
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -990,6 +992,27 @@ private void sendPing() {
             private boolean saslLoginFailed = false;
     
             private void startConnect(InetSocketAddress addr) throws IOException {
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +            } catch (IllegalArgumentException ea) {
    +                //ignored ...
    +            }
    +
    +            if (canonicalize) {
    +                try {
    +                    InetAddress ia = addr.getAddress();
    +                    LOG.warn(""ia {}"", ia);
    +                    if (ia == null) {
    +                        ia = InetAddress.getByName(addr.getHostName());
    +                    }
    +                    String host = (ia != null) ? ia.getCanonicalHostName() : addr.getHostName();
    +                    addr = new InetSocketAddress(InetAddress.getByAddress(host, ia.getAddress()), addr.getPort());
    --- End diff --
    
    But you said that we already have the IP address, which is what it is going to use, so never mind, it should be fine.
;28/Sep/18 20:46;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    @anmolnar I think I have addressed all of your comments.  Please have another look.
;28/Sep/18 20:52;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2284/

;28/Sep/18 21:38;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221389383
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -997,12 +999,31 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                 setName(getName().replaceAll(""\\(.*\\)"",
                         ""("" + addr.getHostName() + "":"" + addr.getPort() + "")""));
                 if (ZooKeeperSaslClient.isEnabled()) {
    +                String hostName = addr.getHostName();
    +
    +                boolean canonicalize = true;
    +                try {
    +                    canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +                } catch (IllegalArgumentException ea) {
    +                    //ignored ...
    +                }
    +
    +                if (canonicalize) {
    +                    InetAddress ia = addr.getAddress();
    +                    if (ia == null) {
    +                        throw new IllegalArgumentException(""Connection address should have already been resolved by the HostProvider."");
    +                    }
    +                    //Update the actual address so we are
    +                    hostName = ia.getCanonicalHostName();
    +                    LOG.debug(""Canonicalized address to {}"", hostName);
    --- End diff --
    
    Nit: if LOG.isDebugEnabled
;28/Sep/18 21:51;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    @eolivelli I like your idea about the unit test.
;01/Oct/18 12:53;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221613169
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -997,12 +999,31 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                 setName(getName().replaceAll(""\\(.*\\)"",
                         ""("" + addr.getHostName() + "":"" + addr.getPort() + "")""));
                 if (ZooKeeperSaslClient.isEnabled()) {
    +                String hostName = addr.getHostName();
    +
    +                boolean canonicalize = true;
    +                try {
    +                    canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +                } catch (IllegalArgumentException ea) {
    +                    //ignored ...
    +                }
    +
    +                if (canonicalize) {
    +                    InetAddress ia = addr.getAddress();
    +                    if (ia == null) {
    +                        throw new IllegalArgumentException(""Connection address should have already been resolved by the HostProvider."");
    +                    }
    +                    //Update the actual address so we are
    +                    hostName = ia.getCanonicalHostName();
    --- End diff --
    
    You might want to do the following:
    ```java
    String canonicalHostName = ia.getCanonicalHostName();
    if (!canonicalHostName.equals(ia.getHostAddress())) {
        hostName = canonicalHostName;
    }
    ```
    
    In order to avoid using literal IP address when security check fails.
;01/Oct/18 13:45;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221612755
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -997,12 +999,31 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                 setName(getName().replaceAll(""\\(.*\\)"",
                         ""("" + addr.getHostName() + "":"" + addr.getPort() + "")""));
                 if (ZooKeeperSaslClient.isEnabled()) {
    +                String hostName = addr.getHostName();
    +
    +                boolean canonicalize = true;
    +                try {
    +                    canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +                } catch (IllegalArgumentException ea) {
    +                    //ignored ...
    +                }
    +
    +                if (canonicalize) {
    +                    InetAddress ia = addr.getAddress();
    +                    if (ia == null) {
    +                        throw new IllegalArgumentException(""Connection address should have already been resolved by the HostProvider."");
    --- End diff --
    
    Would you please change this to something like 'Unable to canonicalize address {}, because it's not resolveable'?
;01/Oct/18 13:45;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/648#discussion_r221612869
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -997,12 +999,31 @@ private void startConnect(InetSocketAddress addr) throws IOException {
                 setName(getName().replaceAll(""\\(.*\\)"",
                         ""("" + addr.getHostName() + "":"" + addr.getPort() + "")""));
                 if (ZooKeeperSaslClient.isEnabled()) {
    +                String hostName = addr.getHostName();
    +
    +                boolean canonicalize = true;
    +                try {
    +                    canonicalize = Boolean.parseBoolean(System.getProperty(ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""true""));
    +                } catch (IllegalArgumentException ea) {
    +                    //ignored ...
    +                }
    +
    +                if (canonicalize) {
    +                    InetAddress ia = addr.getAddress();
    +                    if (ia == null) {
    +                        throw new IllegalArgumentException(""Connection address should have already been resolved by the HostProvider."");
    +                    }
    +                    //Update the actual address so we are
    +                    hostName = ia.getCanonicalHostName();
    +                    LOG.debug(""Canonicalized address to {}"", hostName);
    --- End diff --
    
    +1
;01/Oct/18 13:45;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    I just addressed the review comments if things look good I am happy to squash commits.  I'll also put up pull requests to the other lines, now that it looks like we have the majority of the code worked out.
;01/Oct/18 20:12;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Overall looks good to me
    
    What about adding a test case ?

;01/Oct/18 20:30;githubbot;600","GitHub user revans2 opened a pull request:

    https://github.com/apache/zookeeper/pull/652

    ZOOKEEPER-3156: Add in option to canonicalize host name

    This is the master and 3.5 version of #648.  It should apply cleanly to both lines, but if you want a separate pull request for each I am happy to do it.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/revans2/zookeeper ZOOKEEPER-3156

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/652.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #652
    
----
commit 24aca04adf57d10df123e2d61f55e2eb1344c014
Author: Robert Evans <evans@...>
Date:   2018-09-26T20:40:26Z

    ZOOKEEPER-3156: Add in option to canonicalize host name

----
;01/Oct/18 20:32;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221747922
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -1102,7 +1103,32 @@ private void startConnect(InetSocketAddress addr) throws IOException {
             private String getServerPrincipal(InetSocketAddress addr) {
                 String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
                         ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    -            String serverPrincipal = principalUserName + ""/"" + addr.getHostString();
    +            String hostName = addr.getHostName();
    +
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    --- End diff --
    
    Isn't it clientConfig instead of System ?
;01/Oct/18 20:35;githubbot;600","Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221749153
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -1102,7 +1103,32 @@ private void startConnect(InetSocketAddress addr) throws IOException {
             private String getServerPrincipal(InetSocketAddress addr) {
                 String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
                         ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    -            String serverPrincipal = principalUserName + ""/"" + addr.getHostString();
    +            String hostName = addr.getHostName();
    +
    +            boolean canonicalize = true;
    +            try {
    +                canonicalize = Boolean.parseBoolean(System.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    --- End diff --
    
    Great point, missed that on the port.
;01/Oct/18 20:39;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Sorry yes. I'll get on the test case...
;01/Oct/18 20:44;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2300/

;01/Oct/18 20:53;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    Looks great now
    
    Like for branch-3.4 I think we'd better to have some test
;01/Oct/18 20:57;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    So I am running into some issues with the tests as all of the methods to InetSocketAddress are marked as final and as such I cannot mock them. This means I would need a set of host names that are real, and accessible from any build host you would want to run the test on and never going to be taken down, or I would need to create another class that wraps InetSocketAddress for the canonicalization that would allow me to do the mocking at that level.  Not sure which you would prefer. 
;01/Oct/18 21:07;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2299/

;01/Oct/18 21:11;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2301/

;01/Oct/18 21:15;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Do we have PowerMockito on ZK classpath for tests ? 
;01/Oct/18 21:16;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Looks like it is mockito-all not powermock-api-mockito.  I can try and change it and see.
;01/Oct/18 21:24;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    I tried to add in powermock too, but it conflicts with mockito (power mock uses a much older version of mockito-core).  I'll try and use a different API for powermock instead of mockito.
;01/Oct/18 21:50;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    I just added in a test and made the code match closer to how master/3.5 work for the canonical host name.
;01/Oct/18 23:11;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    Added in the test.
;01/Oct/18 23:11;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2303/

;01/Oct/18 23:34;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2302/

;01/Oct/18 23:43;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221835045
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    +        private final InetSocketAddress addr;
    +
    +        MockableInetSocketAddress(InetSocketAddress addr) {
    +            this.addr = addr;
    +        }
    +
    +        public String getHostName() {
    +            return addr.getHostName();
    +        }
    +
    +        public MockableInetAddress getAddress() {
    +            InetAddress ia = addr.getAddress();
    +            return ia == null ? null : new MockableInetAddress(ia);
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return addr.toString();
    +        }
    +    }
    +
    +    static class MockableInetAddress {
    +        private final InetAddress ia;
    +
    +        MockableInetAddress(InetAddress ia) {
    +            this.ia = ia;
    +        }
    +
    +        public String getCanonicalHostName() {
    +            return ia.getCanonicalHostName();
    +        }
    +
    +        public String getHostAddress() {
    +            return ia.getHostAddress();
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return ia.toString();
    +        }
    +    }
    +    /**
    +     * Get the name of the server principal for a SASL client.  This is visible for testing purposes.
    +     * @param addr the address of the host.
    +     * @param clientConfig the configuration for the client.
    +     * @return the name of the principal.
    +     */
    +    static String getServerPrincipal(MockableInetSocketAddress addr, ZKClientConfig clientConfig) {
    +        String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
    +            ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    +        String hostName = addr.getHostName();
    +
    +        boolean canonicalize = true;
    +        try {
    +            canonicalize = Boolean.parseBoolean(clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    +                ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME_DEFAULT));
    +        } catch (IllegalArgumentException ea) {
    --- End diff --
    
    Should we print the log when IllegalArgumentException throws? 
;02/Oct/18 06:31;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221836418
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    --- End diff --
    
    It's adding too much complexity to the code in order to test it, are we able to create the stub to extend the InetSocketAddress in the test case itself?
;02/Oct/18 06:31;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221928277
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    +        private final InetSocketAddress addr;
    +
    +        MockableInetSocketAddress(InetSocketAddress addr) {
    +            this.addr = addr;
    +        }
    +
    +        public String getHostName() {
    +            return addr.getHostName();
    +        }
    +
    +        public MockableInetAddress getAddress() {
    +            InetAddress ia = addr.getAddress();
    +            return ia == null ? null : new MockableInetAddress(ia);
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return addr.toString();
    +        }
    +    }
    +
    +    static class MockableInetAddress {
    +        private final InetAddress ia;
    +
    +        MockableInetAddress(InetAddress ia) {
    +            this.ia = ia;
    +        }
    +
    +        public String getCanonicalHostName() {
    +            return ia.getCanonicalHostName();
    +        }
    +
    +        public String getHostAddress() {
    +            return ia.getHostAddress();
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return ia.toString();
    +        }
    +    }
    +    /**
    +     * Get the name of the server principal for a SASL client.  This is visible for testing purposes.
    +     * @param addr the address of the host.
    +     * @param clientConfig the configuration for the client.
    +     * @return the name of the principal.
    +     */
    +    static String getServerPrincipal(MockableInetSocketAddress addr, ZKClientConfig clientConfig) {
    +        String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
    +            ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    +        String hostName = addr.getHostName();
    +
    +        boolean canonicalize = true;
    +        try {
    +            canonicalize = Boolean.parseBoolean(clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    +                ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME_DEFAULT));
    +        } catch (IllegalArgumentException ea) {
    --- End diff --
    
    IllegalArgumentException is thrown when you pass an empty string to `getProperty()` which is not going to happen, because we use a constant value for that, but must be caught according to Java. 
;02/Oct/18 12:22;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221936001
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    --- End diff --
    
    I agree. Unfortunately methods of `InetSocketAddress` and `InetAddress` are final and cannot be mocked. There's a Mockito extension which could help, but it's quite recent and an opt-in feature:
    https://github.com/mockito/mockito/wiki/What's-new-in-Mockito-2#mock-the-unmockable-opt-in-mocking-of-final-classesmethods
    
    Implementing wrapper classes is good approach, but I wouldn't put them into `ClientCnxn.java`. I suggest creating a new file with wrapper classes (nit: renaming them to \*Wrapper instead of Mockable\* would be better) and also put `getServerPrincipal()` into this file as well. 
;02/Oct/18 12:55;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221937931
  
    --- Diff: src/java/test/org/apache/zookeeper/ClientCanonicalizeTest.java ---
    @@ -0,0 +1,59 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper;
    +
    +import java.io.IOException;
    +import org.apache.zookeeper.client.ZKClientConfig;
    +import org.junit.Assert;
    +import org.junit.Test;
    +
    +import static org.mockito.Mockito.*;
    +
    +public class ClientCanonicalizeTest extends ZKTestCase {
    +    @Test
    +    public void testClientCanonicalization() throws IOException, InterruptedException {
    +        ClientCnxn.MockableInetSocketAddress addr = mock(ClientCnxn.MockableInetSocketAddress.class);
    +        ClientCnxn.MockableInetAddress ia = mock(ClientCnxn.MockableInetAddress.class);
    +
    +        when(addr.getHostName()).thenReturn(""zookeeper.apache.org"");
    +        when(addr.getAddress()).thenReturn(ia);
    +        when(ia.getCanonicalHostName()).thenReturn(""zk1.apache.org"");
    +        when(ia.getHostAddress()).thenReturn(""127.0.0.1"");
    +
    +        ZKClientConfig conf = new ZKClientConfig();
    +        String principal = ClientCnxn.getServerPrincipal(addr, conf);
    +        Assert.assertEquals(""zookeeper/zk1.apache.org"", principal);
    +    }
    +
    +    @Test
    +    public void testClientNoCanonicalization() throws IOException, InterruptedException {
    +        ClientCnxn.MockableInetSocketAddress addr = mock(ClientCnxn.MockableInetSocketAddress.class);
    +        ClientCnxn.MockableInetAddress ia = mock(ClientCnxn.MockableInetAddress.class);
    +
    +        when(addr.getHostName()).thenReturn(""zookeeper.apache.org"");
    +        when(addr.getAddress()).thenReturn(ia);
    +        when(ia.getCanonicalHostName()).thenReturn(""zk1.apache.org"");
    +        when(ia.getHostAddress()).thenReturn(""127.0.0.1"");
    +
    +        //when(addr.get)
    +        ZKClientConfig conf = new ZKClientConfig();
    +        conf.setProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME, ""false"");
    +        String principal = ClientCnxn.getServerPrincipal(addr, conf);
    +        Assert.assertEquals(""zookeeper/zookeeper.apache.org"", principal);
    --- End diff --
    
    Same here.
;02/Oct/18 12:55;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221937882
  
    --- Diff: src/java/test/org/apache/zookeeper/ClientCanonicalizeTest.java ---
    @@ -0,0 +1,59 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper;
    +
    +import java.io.IOException;
    +import org.apache.zookeeper.client.ZKClientConfig;
    +import org.junit.Assert;
    +import org.junit.Test;
    +
    +import static org.mockito.Mockito.*;
    +
    +public class ClientCanonicalizeTest extends ZKTestCase {
    +    @Test
    +    public void testClientCanonicalization() throws IOException, InterruptedException {
    +        ClientCnxn.MockableInetSocketAddress addr = mock(ClientCnxn.MockableInetSocketAddress.class);
    +        ClientCnxn.MockableInetAddress ia = mock(ClientCnxn.MockableInetAddress.class);
    +
    +        when(addr.getHostName()).thenReturn(""zookeeper.apache.org"");
    +        when(addr.getAddress()).thenReturn(ia);
    +        when(ia.getCanonicalHostName()).thenReturn(""zk1.apache.org"");
    +        when(ia.getHostAddress()).thenReturn(""127.0.0.1"");
    +
    +        ZKClientConfig conf = new ZKClientConfig();
    +        String principal = ClientCnxn.getServerPrincipal(addr, conf);
    +        Assert.assertEquals(""zookeeper/zk1.apache.org"", principal);
    --- End diff --
    
    Please add some comment to the assert to describe the scenario when it fails.
;02/Oct/18 12:55;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221938215
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    +        private final InetSocketAddress addr;
    +
    +        MockableInetSocketAddress(InetSocketAddress addr) {
    +            this.addr = addr;
    +        }
    +
    +        public String getHostName() {
    +            return addr.getHostName();
    +        }
    +
    +        public MockableInetAddress getAddress() {
    +            InetAddress ia = addr.getAddress();
    +            return ia == null ? null : new MockableInetAddress(ia);
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return addr.toString();
    +        }
    +    }
    +
    +    static class MockableInetAddress {
    +        private final InetAddress ia;
    +
    +        MockableInetAddress(InetAddress ia) {
    +            this.ia = ia;
    +        }
    +
    +        public String getCanonicalHostName() {
    +            return ia.getCanonicalHostName();
    +        }
    +
    +        public String getHostAddress() {
    +            return ia.getHostAddress();
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return ia.toString();
    +        }
    +    }
    +    /**
    +     * Get the name of the server principal for a SASL client.  This is visible for testing purposes.
    +     * @param addr the address of the host.
    +     * @param clientConfig the configuration for the client.
    +     * @return the name of the principal.
    +     */
    +    static String getServerPrincipal(MockableInetSocketAddress addr, ZKClientConfig clientConfig) {
    +        String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
    +            ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    +        String hostName = addr.getHostName();
    +
    +        boolean canonicalize = true;
    +        try {
    +            canonicalize = Boolean.parseBoolean(clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    +                ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME_DEFAULT));
    +        } catch (IllegalArgumentException ea) {
    +            //ignored ...
    +        }
    +
    +        if (canonicalize) {
    +            MockableInetAddress ia = addr.getAddress();
    +            if (ia == null) {
    +                throw new IllegalArgumentException(""Unable to canonicalize address "" + addr + "" because it's not resolvable"");
    +            }
    +
    +            String canonicalHostName = ia.getCanonicalHostName();
    +            //avoid using literal IP address when security check fails
    +            if (!canonicalHostName.equals(ia.getHostAddress())) {
    --- End diff --
    
    Would you please add test to cover this code path: canonicalization is ON, but getCanonicalHostName() returns IP address.
;02/Oct/18 12:55;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221937665
  
    --- Diff: src/java/test/org/apache/zookeeper/ClientCanonicalizeTest.java ---
    @@ -0,0 +1,59 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +package org.apache.zookeeper;
    +
    +import java.io.IOException;
    +import org.apache.zookeeper.client.ZKClientConfig;
    +import org.junit.Assert;
    +import org.junit.Test;
    +
    +import static org.mockito.Mockito.*;
    --- End diff --
    
    Please avoid using asterisk import.
;02/Oct/18 12:55;githubbot;600","Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221956355
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    +        private final InetSocketAddress addr;
    +
    +        MockableInetSocketAddress(InetSocketAddress addr) {
    +            this.addr = addr;
    +        }
    +
    +        public String getHostName() {
    +            return addr.getHostName();
    +        }
    +
    +        public MockableInetAddress getAddress() {
    +            InetAddress ia = addr.getAddress();
    +            return ia == null ? null : new MockableInetAddress(ia);
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return addr.toString();
    +        }
    +    }
    +
    +    static class MockableInetAddress {
    +        private final InetAddress ia;
    +
    +        MockableInetAddress(InetAddress ia) {
    +            this.ia = ia;
    +        }
    +
    +        public String getCanonicalHostName() {
    +            return ia.getCanonicalHostName();
    +        }
    +
    +        public String getHostAddress() {
    +            return ia.getHostAddress();
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return ia.toString();
    +        }
    +    }
    +    /**
    +     * Get the name of the server principal for a SASL client.  This is visible for testing purposes.
    +     * @param addr the address of the host.
    +     * @param clientConfig the configuration for the client.
    +     * @return the name of the principal.
    +     */
    +    static String getServerPrincipal(MockableInetSocketAddress addr, ZKClientConfig clientConfig) {
    +        String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
    +            ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    +        String hostName = addr.getHostName();
    +
    +        boolean canonicalize = true;
    +        try {
    +            canonicalize = Boolean.parseBoolean(clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    +                ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME_DEFAULT));
    +        } catch (IllegalArgumentException ea) {
    --- End diff --
    
    The IllegalArgumentException is coming from the `Boolean.parseBoolean`.  If it cannot understand the value as either true or false it will throw the exception and we end up with it being true, the default.  If you want a log I am happy to add it, because ""no"" will be interpreted as true, which might be confusing.
;02/Oct/18 13:46;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    There were some comments in the other pull request about the test code.  I will address them in both places.
;02/Oct/18 13:48;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221963829
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    +        private final InetSocketAddress addr;
    +
    +        MockableInetSocketAddress(InetSocketAddress addr) {
    +            this.addr = addr;
    +        }
    +
    +        public String getHostName() {
    +            return addr.getHostName();
    +        }
    +
    +        public MockableInetAddress getAddress() {
    +            InetAddress ia = addr.getAddress();
    +            return ia == null ? null : new MockableInetAddress(ia);
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return addr.toString();
    +        }
    +    }
    +
    +    static class MockableInetAddress {
    +        private final InetAddress ia;
    +
    +        MockableInetAddress(InetAddress ia) {
    +            this.ia = ia;
    +        }
    +
    +        public String getCanonicalHostName() {
    +            return ia.getCanonicalHostName();
    +        }
    +
    +        public String getHostAddress() {
    +            return ia.getHostAddress();
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return ia.toString();
    +        }
    +    }
    +    /**
    +     * Get the name of the server principal for a SASL client.  This is visible for testing purposes.
    +     * @param addr the address of the host.
    +     * @param clientConfig the configuration for the client.
    +     * @return the name of the principal.
    +     */
    +    static String getServerPrincipal(MockableInetSocketAddress addr, ZKClientConfig clientConfig) {
    +        String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
    +            ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    +        String hostName = addr.getHostName();
    +
    +        boolean canonicalize = true;
    +        try {
    +            canonicalize = Boolean.parseBoolean(clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    +                ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME_DEFAULT));
    +        } catch (IllegalArgumentException ea) {
    --- End diff --
    
    I don't see any of these methods (parseBoolean() and getProperty()) throw IllegalArgumentException, so you don't need to catch here.
    
    In your original PR, you used System.getProperty() which throws it:
    https://github.com/apache/zookeeper/pull/648/files#diff-ae38c175a23a47be52ae31ed1f1518a3R781
    
    But this is master and we use ZKConfig here.
;02/Oct/18 14:05;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/652#discussion_r221964223
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxn.java ---
    @@ -793,7 +794,87 @@ public RWServerFoundException(String msg) {
                 super(msg);
             }
         }
    -    
    +
    +    static class MockableInetSocketAddress {
    +        private final InetSocketAddress addr;
    +
    +        MockableInetSocketAddress(InetSocketAddress addr) {
    +            this.addr = addr;
    +        }
    +
    +        public String getHostName() {
    +            return addr.getHostName();
    +        }
    +
    +        public MockableInetAddress getAddress() {
    +            InetAddress ia = addr.getAddress();
    +            return ia == null ? null : new MockableInetAddress(ia);
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return addr.toString();
    +        }
    +    }
    +
    +    static class MockableInetAddress {
    +        private final InetAddress ia;
    +
    +        MockableInetAddress(InetAddress ia) {
    +            this.ia = ia;
    +        }
    +
    +        public String getCanonicalHostName() {
    +            return ia.getCanonicalHostName();
    +        }
    +
    +        public String getHostAddress() {
    +            return ia.getHostAddress();
    +        }
    +
    +        @Override
    +        public String toString() {
    +            return ia.toString();
    +        }
    +    }
    +    /**
    +     * Get the name of the server principal for a SASL client.  This is visible for testing purposes.
    +     * @param addr the address of the host.
    +     * @param clientConfig the configuration for the client.
    +     * @return the name of the principal.
    +     */
    +    static String getServerPrincipal(MockableInetSocketAddress addr, ZKClientConfig clientConfig) {
    +        String principalUserName = clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_USERNAME,
    +            ZKClientConfig.ZK_SASL_CLIENT_USERNAME_DEFAULT);
    +        String hostName = addr.getHostName();
    +
    +        boolean canonicalize = true;
    +        try {
    +            canonicalize = Boolean.parseBoolean(clientConfig.getProperty(ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME,
    +                ZKClientConfig.ZK_SASL_CLIENT_CANONICALIZE_HOSTNAME_DEFAULT));
    +        } catch (IllegalArgumentException ea) {
    --- End diff --
    
    `Boolean.parseBoolean()` returns true if the string is ""true"" (ignore case) and false otherwise. No exception thrown.
;02/Oct/18 14:05;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    @anmolnar and @lvfangmin I think I have addressed all of your review comments.  I named the new class SaslServerPrincipal but if you have a different idea for a name I am happy to change it.
;02/Oct/18 14:23;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2321/

;02/Oct/18 14:41;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2325/

;02/Oct/18 14:57;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2324/

;02/Oct/18 15:03;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2326/

;02/Oct/18 15:20;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2323/

;02/Oct/18 15:30;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2322/

;02/Oct/18 15:37;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    Ping @eolivelli @lvfangmin @anmolnar 
    
    I think I have addressed all of the concerns on both branches.  The test failure here looks unrelated to the changes that I made.
;03/Oct/18 18:30;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Thanks for all of the reviews I just rebased and squashed commits.
;04/Oct/18 15:41;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    Thanks for all of the reviews I just rebased and squashed commits.
;04/Oct/18 15:41;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    @lvfangmin are u happy with the change?
;04/Oct/18 15:46;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2348/

;04/Oct/18 16:02;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2347/

;04/Oct/18 16:06;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    I just rebased to deal with the directories being moved around.
;05/Oct/18 15:38;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2371/

;05/Oct/18 15:53;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    Ping any hope in getting this merged in?
;16/Oct/18 14:24;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    @revans2 We might need another committer to take a look.
    Also you probably need to trigger another build to get a green one.
;16/Oct/18 15:35;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    retest this please
;16/Oct/18 15:58;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2459/

;16/Oct/18 16:18;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2467/

;17/Oct/18 12:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    retest this please
;17/Oct/18 14:04;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2469/

;17/Oct/18 15:21;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    +1 
    
    The new change looks good to me, please rebase to resolve the conflict, will merge this in after that. Sorry for lately reply, somehow lost tracking this session.
;25/Oct/18 19:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    @revans2 Please rebase.
;26/Oct/18 12:38;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    @anmolnar sorry it took me so long.  I was out on vacation.
;31/Oct/18 17:22;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2549/

;31/Oct/18 22:03;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2550/

;31/Oct/18 22:23;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2551/

;31/Oct/18 22:50;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/652
;05/Nov/18 18:41;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/652
  
    Merged to 3.5 and master branches. Thanks @revans2 !
;05/Nov/18 18:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Committed. Thanks @revans2 !
    Please close this PR.
;05/Nov/18 19:16;githubbot;600","Github user revans2 closed the pull request at:

    https://github.com/apache/zookeeper/pull/648
;06/Nov/18 14:31;githubbot;600","Github user revans2 commented on the issue:

    https://github.com/apache/zookeeper/pull/648
  
    Thanks
;06/Nov/18 14:31;githubbot;600",,0,44400,,,0,44400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Nov 06 00:25:43 UTC 2018,,,,,,,,,,"0|i3yj5r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Sep/18 18:55;eolivelli;I see the problem.

Do you have already a patch?

Maybe a good idea is to add a client configuration flag or system property.

 ;;;","26/Sep/18 19:06;andor;I like the idea of having a configuration switch for that, because I'm not entirely sure what would be the right behaviour.

[~revans2] Do you have a patch already?;;;","26/Sep/18 19:15;andor;Is this the logic that we're talking about?
{code:java}
if (ZooKeeperSaslClient.isEnabled()) {
    try {
        String principalUserName = System.getProperty(
                ZK_SASL_CLIENT_USERNAME, ""zookeeper"");
        zooKeeperSaslClient =
            new ZooKeeperSaslClient(
                    principalUserName+""/""+addr.getHostName());
...{code};;;","26/Sep/18 20:12;andor;We should use getCanonicalHostName() to force reverse ip lookup and get the FQDN of the server according to this javadoc:
https://docs.oracle.com/javase/7/docs/api/java/net/InetAddress.html#getCanonicalHostName()

Introducing a switch to enable reverse dns lookups would be inline with Kerberos client behaviour:
http://web.mit.edu/kerberos/krb5-current/doc/admin/princ_dns.html

In the krb5 client you can disable canonicalization with rdns=false setting.

I can put together a patch tomorrow if needed.;;;","28/Sep/18 10:28;andor;[~revans2] Any thoughts?;;;","28/Sep/18 18:23;revans2;[~andor],

Sorry I was on a plane all day yesterday so I didn't respond sooner.  I have been doing some debugging trying to get a patch, but I have not come up with one yet.  I originally wanted to see if I could match the behavior from before by moving the host name resolution code later in the process, but despite the data structures being the same it is not possible as some information is lost in the current process.  I think having a flag that would optionally call {{getCannicalHostName}} would be great. If someone else has a patch I am happy to test it out, otherwise I will put together a patch myself.

Be aware though that a global flag is not 100% backwards compatible, and there is a very small possibility that a single process will want to talk to multiple different zookeeper ensembles, i.e. apache storm + older kafka client, which could run into an issue where each ensemble wants something different.  It is a small enough chance, and there are ways to work around it so I am fine with it, but it is possible.

 

 ;;;","28/Sep/18 19:36;andor;[~revans2] Thanks for looking into this. As long as you're the assignee of this Jira, I'm happy to wait for your pull request to review.

Regarding backwards compatibility: ""...could run into an issue where each ensemble wants something different""
This wasn't supported previously either: meaning that previous versions always did reverse IP lookups, so basically followed the behaviour that you mentioned as 3.4.12. Therefore I don't think the fix could cause backward compatibility issues as long as the default behaviour is the original (rnds=true).

Let's try to wrap up what I think happened here:
- Previous versions of ZooKeeper (up to 3.4.12) did DNS resolution upfront and returned the pure IP address to upper layers like the SASL client. The original implementation stripped the hostname from the InetSocketAddress after name resolution and created a new one with only IP address and port number,
- This was fine for connecting the client to the server, because it only needs the IP address,
- It forced the SASL client to do reverse DNS lookup by calling getHostName(),
- The current behaviour, which I think is the right approach, creates new InetSocketAddress with the resolved IP address and the original hostname, so upper layers don't need to do reverse lookup.

With the new switch and using getCanonicalHostName() in the SASL client we can enforce the reverse lookup which is needed here. ;;;","28/Sep/18 19:46;revans2;OK I have a patch up for 3.4 and if it looks good I am happy to port it to all release lines.

[https://github.com/apache/zookeeper/pull/648]

I have a few questions though.
 # I have canonicalization on by default, is that what we want?
 # Is there some place that I can document the new System property that I added?;;;","05/Nov/18 18:42;andor;Issue resolved by pull request 652
[https://github.com/apache/zookeeper/pull/652];;;","05/Nov/18 22:19;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #94 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/94/])
ZOOKEEPER-3156: Add in option to canonicalize host name (andor: rev 83fd6e298dda420125f8be35fda68cb226b0ee05)
* (add) zookeeper-server/src/main/java/org/apache/zookeeper/SaslServerPrincipal.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/client/ZKClientConfig.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java
;;;","06/Nov/18 00:25;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #256 (See [https://builds.apache.org/job/ZooKeeper-trunk/256/])
ZOOKEEPER-3156: Add in option to canonicalize host name (andor: rev 83fd6e298dda420125f8be35fda68cb226b0ee05)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/client/ZKClientConfig.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxn.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/ClientCanonicalizeTest.java
* (add) zookeeper-server/src/main/java/org/apache/zookeeper/SaslServerPrincipal.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Kerberos tests on branch 3.4 and JDK11,ZOOKEEPER-3148,13185166,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,eolivelli,eolivelli,eolivelli,14/Sep/18 15:01,02/Apr/19 10:40,13/Jul/23 09:08,25/Sep/18 11:25,3.4.13,,,,,,,,,3.4.14,,,,,kerberos,,,,0,pull-request-available,,"Branch 3.4 uses Apache Directory Service for Kerberos tests, this is not compatibile with JDK 11.

A simple ""upgrade"" is not enough.

The fix is to port Kerby based tests from branch-3.5 to branch-3.4 and make old tests run *only on JDK6* and new tests with Kerby run on JDK7 onwards.

 

There will be some duplicated code, but branch-3.4 is expected to be sent in be deprecated soon, as 3.5 will be released as ""stabile"".

Those ""old"" test would be dropped in case we decide to drop JDK6 support.

 

Additionally JDK6 VMs cannot download dependencies from Maven Central due to SSL policies:

[ivy:retrieve]     Server access error at url https://repo1.maven.org/maven2/net/minidev/json-smart/ (javax.net.ssl.SSLException: Received fatal alert: protocol_version)
[ivy:retrieve]     Server access error at url https://repo1.maven.org/maven2/net/minidev/json-smart/ (javax.net.ssl.SSLException: Received fatal alert: protocol_version)

 

 

 ",,andor,eolivelli,jadams,,,,,,,,,,,,,,,,,"GitHub user eolivelli opened a pull request:

    https://github.com/apache/zookeeper/pull/626

    ZOOKEEPER-3148 Add Kerberos tests for modern JDKs

    - This change is only for 3.4 branch, which MUST be compatible with JDK6
    - Add Kerby and upgrade commons-io to 2.6, as needed by Kerby
    - Copy Kerberos tests from branch-3.5 in a new package o.a.zookeeper.server.quorum.authnew
    - Mark Kerberos tests to be executed only on JDK6 VMs
    - Java version is done using system property, this is the safer way without introducing external libs

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/eolivelli/zookeeper fix/34-kerby-jdk11

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/626.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #626
    
----
commit 1fd6282aa6c139b84c1c6bc60fb738819d8e7574
Author: Enrico Olivelli <eolivelli@...>
Date:   2018-09-13T18:04:41Z

    ZOOKEEPER-3148 Add Kerberos tests for modern JDKs
    - This change is only for 3.4 branch, which MUST be compatible with JDK6
    - Add Kerby and upgrade commons-io to 2.6, as needed by Kerby
    - Copy Kerberos tests from branch-3.5 in a new package o.a.zookeeper.server.quorum.authnew
    - Mark Kerberos tests to be executed only on JDK6 VMs
    - Java version is done using system property, this is the safer way without introducing external libs

----
;14/Sep/18 15:05;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/626
  
    @anmolnar  @phunt @nkalmar 
    Green light from CI
    Can you please take a look ?
    So that we can archive this 'problem' and provide quick answers to users
;18/Sep/18 06:51;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/626
  
    Wow! This is huge. So basically we have a set of Kerberos tests for 1.6-only and another set for 1.7+, right?
    That's the only way currently to keep 1.6 support. I think I'm fine with that.
;18/Sep/18 11:08;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/626
  
    @anmolnar yes, I have just backported Kerby based tests from branch-3.5.
    ApacheDS based tests will be only for 1.6 JDK.
    Hopefully they will run only on CI.
;18/Sep/18 11:26;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/626
  
    Committed to 3.4
    @eolivelli Please close this PR.
;25/Sep/18 11:26;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/626
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2261/

;25/Sep/18 12:13;githubbot;600","Github user eolivelli closed the pull request at:

    https://github.com/apache/zookeeper/pull/626
;25/Sep/18 12:39;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4200,,,0,4200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Sep 25 11:25:58 UTC 2018,,,,,,,,,,"0|i3y3pz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/Sep/18 15:40;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 16 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2172//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2172//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2172//console

This message is automatically generated.;;;","16/Sep/18 09:10;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 27 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2187//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2187//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2187//console

This message is automatically generated.;;;","16/Sep/18 10:26;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 27 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2188//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2188//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2188//console

This message is automatically generated.;;;","25/Sep/18 11:25;andor;Issue resolved by pull request 626
[https://github.com/apache/zookeeper/pull/626];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot,ZOOKEEPER-3145,13184496,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,lvfangmin,lvfangmin,lvfangmin,11/Sep/18 23:47,11/Sep/19 13:30,13/Jul/23 09:08,11/Sep/19 08:27,3.4.13,3.5.4,3.6.0,,,,,,,3.6.0,,,,,server,,,,1,pull-request-available,,"This is another issue I found recently, we haven't seen this problem on prod (or maybe we don't notice).

 
Currently, the CloseSession is not idempotent, executing the CloseSession twice won't get the same result.
 
The problem is that closeSession will only check what's the ephemeral nodes associated with that session bases on current states. Nodes deleted during taking fuzzy snapshot won't be deleted again when replay the txn.
 
This looks fine, since it's already gone, but there is problem with the pzxid of the parent node. Snapshot is taken fuzzily, so it's possible that the parent had been serialized while the nodes are being deleted when executing the closeSession Txn. The pzxid will not be updated in the snapshot when replaying the closeSession txn, because doesn't know what's the paths being deleted, so it won't patch the pzxid like what we did in the deleteNode ZOOKEEPER-3125.
 
The inconsistent pzxid will lead to potential watch notification missing when client reconnect with setWatches because of the staleness. 
 
This JIRA is going to fix those issues by adding the CloseSessionTxn, it will record all those nodes being deleted in that CloseSession txn, so that we know which nodes to update when replaying the txn.",,eolivelli,hudson,kezhuw,lvfangmin,mkedwards,,,,,,,,,,,,,,,"GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/622

    [ZOOKEEPER-3145] Potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot

    Currently, the CloseSession txn is not idempotent, executing the CloseSession twice won't get the same result, which could cause pzxid inconsistent, which in turn cause watches missing.
    
    For more details, please check the description in ZOOKEEPER-3145.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3145

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/622.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #622
    
----
commit 9576e25ae1ecc09b8d17a144b9aa82604f03fdd0
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-09-12T18:30:05Z

    Add CloseSessionTxn to track the nodes being deleted when close session

----
;12/Sep/18 18:51;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/622
  
    Can I have some to help review this one as well, this is a new issue found recently, it would be great to have the community review here as well before we land it internally.
;13/Sep/18 17:08;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/622
  
    @lvfangmin Give me a chance. :)
    I'll review this tomorrow. ;)
;13/Sep/18 20:16;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217545459
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1057,22 +1065,49 @@ void killSession(long session, long zxid) {
             // so there is no need for synchronization. The list is not
             // changed here. Only create and delete change the list which
             // are again called from FinalRequestProcessor in sequence.
    -        Set<String> list = ephemerals.remove(session);
    -        if (list != null) {
    -            for (String path : list) {
    -                try {
    -                    deleteNode(path, zxid);
    -                    if (LOG.isDebugEnabled()) {
    -                        LOG
    -                                .debug(""Deleting ephemeral node "" + path
    -                                        + "" for session 0x""
    -                                        + Long.toHexString(session));
    -                    }
    -                } catch (NoNodeException e) {
    -                    LOG.warn(""Ignoring NoNodeException for path "" + path
    -                            + "" while removing ephemeral for dead session 0x""
    +        killSession(session, zxid, ephemerals.remove(session), null);
    +    }
    +
    +    void killSession(long session, long zxid, Set<String> paths2DeleteLocal,
    +            List<String> paths2DeleteInTxn) {
    +        if (paths2DeleteInTxn != null) {
    +            deleteNodes(session, zxid, paths2DeleteInTxn);
    +        }
    +
    +        if (paths2DeleteLocal == null) {
    +            return;
    +        }
    +
    +        if (paths2DeleteInTxn != null) {
    --- End diff --
    
    In case that paths2DeleteLocal is null we won't execute this block. Is it expected?
    

;13/Sep/18 22:00;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217546112
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java ---
    @@ -116,6 +120,10 @@ public static Record deserializeTxn(byte txnBytes[], TxnHeader hdr)
                         create.setAcl(createv0.getAcl());
                         create.setEphemeral(createv0.getEphemeral());
                         create.setParentCVersion(-1);
    +                } else if (hdr.getType() == OpCode.closeSession) {
    +                    // perhaps this is before CloseSessionTxn was added,
    --- End diff --
    
    Do we have a test case for this case?
;13/Sep/18 22:00;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217546649
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -60,14 +60,17 @@
     
         MainThread[] mt = null;
         ZooKeeper[] zk = null;
    +    int[] clientPorts = null;
         int leaderId;
         int followerA;
     
         @Before
         public void setup() throws Exception {
    +        ZooKeeperServer.setCloseSessionTxnEnabled(true);
    --- End diff --
    
    This test class will always be executed with this new option. It is an existing class, are we losing some coverage ?
;13/Sep/18 22:00;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217554958
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1057,22 +1065,49 @@ void killSession(long session, long zxid) {
             // so there is no need for synchronization. The list is not
             // changed here. Only create and delete change the list which
             // are again called from FinalRequestProcessor in sequence.
    -        Set<String> list = ephemerals.remove(session);
    -        if (list != null) {
    -            for (String path : list) {
    -                try {
    -                    deleteNode(path, zxid);
    -                    if (LOG.isDebugEnabled()) {
    -                        LOG
    -                                .debug(""Deleting ephemeral node "" + path
    -                                        + "" for session 0x""
    -                                        + Long.toHexString(session));
    -                    }
    -                } catch (NoNodeException e) {
    -                    LOG.warn(""Ignoring NoNodeException for path "" + path
    -                            + "" while removing ephemeral for dead session 0x""
    +        killSession(session, zxid, ephemerals.remove(session), null);
    +    }
    +
    +    void killSession(long session, long zxid, Set<String> paths2DeleteLocal,
    +            List<String> paths2DeleteInTxn) {
    +        if (paths2DeleteInTxn != null) {
    +            deleteNodes(session, zxid, paths2DeleteInTxn);
    +        }
    +
    +        if (paths2DeleteLocal == null) {
    +            return;
    +        }
    +
    +        if (paths2DeleteInTxn != null) {
    --- End diff --
    
    Yes, this is expected behavior when we disabled the CloseSessionTxn, I added that option for safety and quicker rollback.
;13/Sep/18 22:36;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217555258
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java ---
    @@ -116,6 +120,10 @@ public static Record deserializeTxn(byte txnBytes[], TxnHeader hdr)
                         create.setAcl(createv0.getAcl());
                         create.setEphemeral(createv0.getEphemeral());
                         create.setParentCVersion(-1);
    +                } else if (hdr.getType() == OpCode.closeSession) {
    +                    // perhaps this is before CloseSessionTxn was added,
    --- End diff --
    
    Yes, we do, check the QuorumPeerMainTest.testCloseSessionTxnCompatile, when leader disabled  the CloseSessionTxn, but follower enabled it, we'll hit this.
;13/Sep/18 22:40;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217555585
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -60,14 +60,17 @@
     
         MainThread[] mt = null;
         ZooKeeper[] zk = null;
    +    int[] clientPorts = null;
         int leaderId;
         int followerA;
     
         @Before
         public void setup() throws Exception {
    +        ZooKeeperServer.setCloseSessionTxnEnabled(true);
    --- End diff --
    
    Set this to false will reproduce inconsistent pzxid bug, which is what we're going to solve here by enabling CloseSessionTxn, so we're not missing anything, just to make sure the CloseSessionTxn solved the bug here.
;13/Sep/18 22:40;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217689225
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1057,22 +1065,49 @@ void killSession(long session, long zxid) {
             // so there is no need for synchronization. The list is not
             // changed here. Only create and delete change the list which
             // are again called from FinalRequestProcessor in sequence.
    -        Set<String> list = ephemerals.remove(session);
    -        if (list != null) {
    -            for (String path : list) {
    -                try {
    -                    deleteNode(path, zxid);
    -                    if (LOG.isDebugEnabled()) {
    -                        LOG
    -                                .debug(""Deleting ephemeral node "" + path
    -                                        + "" for session 0x""
    -                                        + Long.toHexString(session));
    -                    }
    -                } catch (NoNodeException e) {
    -                    LOG.warn(""Ignoring NoNodeException for path "" + path
    -                            + "" while removing ephemeral for dead session 0x""
    +        killSession(session, zxid, ephemerals.remove(session), null);
    +    }
    +
    +    void killSession(long session, long zxid, Set<String> paths2DeleteLocal,
    +            List<String> paths2DeleteInTxn) {
    +        if (paths2DeleteInTxn != null) {
    +            deleteNodes(session, zxid, paths2DeleteInTxn);
    +        }
    +
    +        if (paths2DeleteLocal == null) {
    +            return;
    +        }
    +
    +        if (paths2DeleteInTxn != null) {
    --- End diff --
    
    Ok
;14/Sep/18 12:02;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217689355
  
    --- Diff: src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java ---
    @@ -116,6 +120,10 @@ public static Record deserializeTxn(byte txnBytes[], TxnHeader hdr)
                         create.setAcl(createv0.getAcl());
                         create.setEphemeral(createv0.getEphemeral());
                         create.setParentCVersion(-1);
    +                } else if (hdr.getType() == OpCode.closeSession) {
    +                    // perhaps this is before CloseSessionTxn was added,
    --- End diff --
    
    That was my guess, but I just wanted a confirmation. Thanks
;14/Sep/18 12:03;githubbot;600","Github user eolivelli commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217689682
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -60,14 +60,17 @@
     
         MainThread[] mt = null;
         ZooKeeper[] zk = null;
    +    int[] clientPorts = null;
         int leaderId;
         int followerA;
     
         @Before
         public void setup() throws Exception {
    +        ZooKeeperServer.setCloseSessionTxnEnabled(true);
    --- End diff --
    
    This property won't impact other testcases in the class. Okay
;14/Sep/18 12:04;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217743312
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -60,14 +60,17 @@
     
         MainThread[] mt = null;
         ZooKeeper[] zk = null;
    +    int[] clientPorts = null;
         int leaderId;
         int followerA;
     
         @Before
         public void setup() throws Exception {
    +        ZooKeeperServer.setCloseSessionTxnEnabled(true);
    --- End diff --
    
    It would be slightly cleaner to set it back to false in @After method.
    Out of interest, I find it a little bit strange to implement a feature switch to a bugfix, but on the other side I understand the concerns.
;14/Sep/18 15:04;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217739881
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1057,22 +1065,49 @@ void killSession(long session, long zxid) {
             // so there is no need for synchronization. The list is not
             // changed here. Only create and delete change the list which
             // are again called from FinalRequestProcessor in sequence.
    -        Set<String> list = ephemerals.remove(session);
    -        if (list != null) {
    -            for (String path : list) {
    -                try {
    -                    deleteNode(path, zxid);
    -                    if (LOG.isDebugEnabled()) {
    -                        LOG
    -                                .debug(""Deleting ephemeral node "" + path
    -                                        + "" for session 0x""
    -                                        + Long.toHexString(session));
    -                    }
    -                } catch (NoNodeException e) {
    -                    LOG.warn(""Ignoring NoNodeException for path "" + path
    -                            + "" while removing ephemeral for dead session 0x""
    +        killSession(session, zxid, ephemerals.remove(session), null);
    +    }
    +
    +    void killSession(long session, long zxid, Set<String> paths2DeleteLocal,
    +            List<String> paths2DeleteInTxn) {
    +        if (paths2DeleteInTxn != null) {
    +            deleteNodes(session, zxid, paths2DeleteInTxn);
    +        }
    +
    +        if (paths2DeleteLocal == null) {
    +            return;
    +        }
    +
    +        if (paths2DeleteInTxn != null) {
    +            // explicitly check and remove to avoid potential performance
    +            // issue when using removeAll
    +            for (String path: paths2DeleteInTxn) {
    +                paths2DeleteLocal.remove(path);
    +            }
    +            if (!paths2DeleteLocal.isEmpty()) {
    --- End diff --
    
    In which case could this happen?
;14/Sep/18 15:04;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217741801
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1861,6 +1862,76 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
             Assert.assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
         }
     
    +    /**
    +     * Test leader/leader compatibility with/without CloseSessionTxn, so that
    +     * we can gradually rollout this code and rollback if there is problem.
    +     */
    +    @Test
    +    public void testCloseSessionTxnCompatile() throws Exception {
    --- End diff --
    
    Using parameterized tests instead?
    
    https://github.com/junit-team/junit4/wiki/parameterized-tests
;14/Sep/18 15:04;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/622
  
    Why be afraid enabling it right on?
    Jira is scoped for 3.6, but I think it should go into 3.5 too like the others.
;14/Sep/18 15:05;githubbot;600","Github user eolivelli commented on the issue:

    https://github.com/apache/zookeeper/pull/622
  
    Okay to enable by default on 3.6
;14/Sep/18 15:41;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217769719
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -1057,22 +1065,49 @@ void killSession(long session, long zxid) {
             // so there is no need for synchronization. The list is not
             // changed here. Only create and delete change the list which
             // are again called from FinalRequestProcessor in sequence.
    -        Set<String> list = ephemerals.remove(session);
    -        if (list != null) {
    -            for (String path : list) {
    -                try {
    -                    deleteNode(path, zxid);
    -                    if (LOG.isDebugEnabled()) {
    -                        LOG
    -                                .debug(""Deleting ephemeral node "" + path
    -                                        + "" for session 0x""
    -                                        + Long.toHexString(session));
    -                    }
    -                } catch (NoNodeException e) {
    -                    LOG.warn(""Ignoring NoNodeException for path "" + path
    -                            + "" while removing ephemeral for dead session 0x""
    +        killSession(session, zxid, ephemerals.remove(session), null);
    +    }
    +
    +    void killSession(long session, long zxid, Set<String> paths2DeleteLocal,
    +            List<String> paths2DeleteInTxn) {
    +        if (paths2DeleteInTxn != null) {
    +            deleteNodes(session, zxid, paths2DeleteInTxn);
    +        }
    +
    +        if (paths2DeleteLocal == null) {
    +            return;
    +        }
    +
    +        if (paths2DeleteInTxn != null) {
    +            // explicitly check and remove to avoid potential performance
    +            // issue when using removeAll
    +            for (String path: paths2DeleteInTxn) {
    +                paths2DeleteLocal.remove(path);
    +            }
    +            if (!paths2DeleteLocal.isEmpty()) {
    --- End diff --
    
    If there is no bug, I expect we won't hit this line, but I'd like to add the logs here to make sure this is true for now, we may remove it in the future.
;14/Sep/18 16:30;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217770370
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1861,6 +1862,76 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
             Assert.assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
         }
     
    +    /**
    +     * Test leader/leader compatibility with/without CloseSessionTxn, so that
    +     * we can gradually rollout this code and rollback if there is problem.
    +     */
    +    @Test
    +    public void testCloseSessionTxnCompatile() throws Exception {
    --- End diff --
    
    It's not a good practice to add parameter in the test class if only a single test is using it, have a test helper function like this seems better to me.
;14/Sep/18 16:30;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/622
  
    @anmolnar @eolivelli thanks for review. About the switch, I think we can enable it by default, I'll make that change. But I think it's better to keep the switch, it's easier to turn off if something goes wrong when deploy it, also it makes the backward compatible test easier.
    
    I'll have a clean up PR to remove this switch (in the same Jira) when everything is verified and run stably for a while internally, does that sounds good to you?
;14/Sep/18 16:35;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r217773472
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -60,14 +60,17 @@
     
         MainThread[] mt = null;
         ZooKeeper[] zk = null;
    +    int[] clientPorts = null;
         int leaderId;
         int followerA;
     
         @Before
         public void setup() throws Exception {
    +        ZooKeeperServer.setCloseSessionTxnEnabled(true);
    --- End diff --
    
    Btw, this has already been set back to false in @after.
;14/Sep/18 16:40;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/622
  
    Rebase to resolve conflict with latest code.
    
    Btw, internally we still disable the CloseSessionTxn by default, since we have too many ensembles, and we want to slowly rollout this feature even though it's quite straightforward.
;14/Sep/18 22:31;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r218055822
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1861,6 +1862,76 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
             Assert.assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
         }
     
    +    /**
    +     * Test leader/leader compatibility with/without CloseSessionTxn, so that
    +     * we can gradually rollout this code and rollback if there is problem.
    +     */
    +    @Test
    +    public void testCloseSessionTxnCompatile() throws Exception {
    --- End diff --
    
    Testing multiple things in a single unit test is not a good practice either. Also you could add more context to the method names like `testCloseSessionTxnCompatile_LeaderDisabled_FollowerEnabled()`.
    Why not refactoring out to a separate test file then? This file is already quite overloaded: ~2000 lines of code.
    
    From my experiences waiting for a refactoring ticket to fix these kind of issues doesn't lead to the resolution. Rectoring smaller chunks of code in PRs like this is essentially making progress. Following the existing bad practice is just increasing tech debt.
;17/Sep/18 12:52;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r218880876
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1861,6 +1862,76 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
             Assert.assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
         }
     
    +    /**
    +     * Test leader/leader compatibility with/without CloseSessionTxn, so that
    +     * we can gradually rollout this code and rollback if there is problem.
    +     */
    +    @Test
    +    public void testCloseSessionTxnCompatile() throws Exception {
    --- End diff --
    
    When I was looking for places to put these kind of tests, this is the classes where I found most suitable, although I agree it's kind of overloaded.
    
    This test is testing a single thing about compatibility, but that's debatable depends how much granularity you define a single purpose test. 
    
    I'm not against of moving this out, create a separate test file, but considering we'll remove the closeSessionTxnEnabled option (we have started roll out this code to prod, and haven't seen problem, so it's likely I'll remove it here soon), that means this test will only include a single case leaderEnabled and followerEnabled, let me know if you think it's still worth to move out.
;19/Sep/18 16:48;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r219104769
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1861,6 +1862,76 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
             Assert.assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
         }
     
    +    /**
    +     * Test leader/leader compatibility with/without CloseSessionTxn, so that
    +     * we can gradually rollout this code and rollback if there is problem.
    +     */
    +    @Test
    +    public void testCloseSessionTxnCompatile() throws Exception {
    --- End diff --
    
    Hm. Okay. I've created a pull request against your repo to visualize how I think these tests should be refactored: https://github.com/lvfangmin/zookeeper/pull/1
    
    I understand this looks like overkill in terms of these tests being temporary, but I think it would be beneficial for the testing side on the long run.
    
    I also would like to highlight that this is not the expected, final refactoring of `QuorumPeerMainTest` which will solve all of the related problems. This is just a small step that I was talking about which could be safely included into standards PRs like this and leads us to the ideal state of this big monster.
    
    I'm not telling we should do it this way, just interested in your opinion.
;20/Sep/18 10:04;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/622#discussion_r219104953
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1861,6 +1862,76 @@ public void testFaultyMetricsProviderOnConfigure() throws Exception {
             Assert.assertTrue(""complains about metrics provider MetricsProviderLifeCycleException"", found);
         }
     
    +    /**
    +     * Test leader/leader compatibility with/without CloseSessionTxn, so that
    +     * we can gradually rollout this code and rollback if there is problem.
    +     */
    +    @Test
    +    public void testCloseSessionTxnCompatile() throws Exception {
    --- End diff --
    
    @eolivelli I think you're interested in this too.
;20/Sep/18 10:05;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-455413226
 
 
   Rebase onto latest master. We've been enabling this code on prod for a while, will remove the flag when this is stably running on prod for a few months. This code is ready to get in.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;18/Jan/19 03:12;githubbot;600","anmolnar commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-456150659
 
 
   @lvfangmin Looks like you haven't incorporated my suggested refactorings in the testing code.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;21/Jan/19 17:36;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-458976267
 
 
   @anmolnar forgot that part, will post soon.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Jan/19 15:03;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-465729921
 
 
   @anmolnar have updated the test, please take a look again.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Feb/19 19:54;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-465736682
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;20/Feb/19 20:14;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-491458953
 
 
   Rebase to resolve conflict.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/May/19 23:47;githubbot;600","anmolnar commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-492211073
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 12:11;githubbot;600","anmolnar commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-492282970
 
 
   @lvfangmin This patch broke `org.apache.zookeeper.server.quorum.FuzzySnapshotRelatedTest.testPZxidUpdatedWhenLoadingSnapshot`. Please fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;14/May/19 15:17;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-513922735
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;22/Jul/19 19:33;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-515135518
 
 
   The Travis CI failed to build on JDK 11, looks like an environment issue?
   
   [31;1mThe command ""~/bin/install-jdk.sh --target ""/home/travis/oraclejdk11"" --workspace ""/home/travis/.cache/install-jdk"" --feature ""11"" --license ""BCL"""" failed and exited with 8 during .[0m
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 17:25;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-515164922
 
 
   Try to restart the build.
   Click on travis page and find the 'Restart build' button.
   If it fails again the same way try to switch to 'openjdk11'
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/Jul/19 18:38;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-517121270
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:07;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-517123756
 
 
   I have clicked on ""Restart build"" on Travis
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Aug/19 05:20;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-519632034
 
 
   Rebased. @eolivelli this  should be ready to go after the Jenkins finished build.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 18:18;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-519634165
 
 
   Sure. I will be happy to merge this useful fix
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;08/Aug/19 18:24;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-519953102
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Aug/19 15:02;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-519953551
 
 
   @lvfangmin I have kicked CI again, I am sorry I didn't notice the failure, I think it is unrelated to this change
   
   ```
   
   2019-08-08 20:33:36,523 [myid:] - INFO  [main:ZKTestCase$1@76] - FAILED testLeaderOutOfView
   java.lang.AssertionError
   	at org.junit.Assert.fail(Assert.java:86)
   	at org.junit.Assert.assertTrue(Assert.java:41)
   	at org.junit.Assert.assertTrue(Assert.java:52)
   	at org.apache.zookeeper.server.quorum.QuorumPeerMainTest.testLeaderOutOfView(QuorumPeerMainTest.java:976)
   	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
   	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
   	at java.lang.reflect.Method.invoke(Method.java:498)
   	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
   	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
   	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
   	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
   	at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:80)
   	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
   	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
   	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
   	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
   	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
   	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
   	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
   	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
   	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
   	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
   	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
   	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
   	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
   	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
   	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
   	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
   	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
   	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
   	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
   	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
   2019-08-08 20:33:36,524 [myid:] - INFO  [main:ZKTestCase$1@66] - FINISHED testLeaderOutOfView
   ```
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;09/Aug/19 15:03;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-529776872
 
 
   Thanks @eolivelli @anmolnar, the build and test passed. There is conflict, I'll rebase it again, please help merge after that.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:31;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-529777486
 
 
   Sure
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 05:34;githubbot;600","lvfangmin commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-530077448
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Sep/19 19:06;githubbot;600","asfgit commented on pull request #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 08:27;githubbot;600","eolivelli commented on issue #622: [ZOOKEEPER-3145] Fix potential watch missing issue due to stale pzxid when replaying CloseSession txn with fuzzy snapshot
URL: https://github.com/apache/zookeeper/pull/622#issuecomment-530278030
 
 
   done
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;11/Sep/19 08:28;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,26400,,,0,26400,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 11 13:30:40 UTC 2019,,,,,,,,,,"0|i3xzm7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"12/Sep/18 19:09;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2157//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2157//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2157//console

This message is automatically generated.;;;","14/Sep/18 17:28;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2173//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2173//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2173//console

This message is automatically generated.;;;","14/Sep/18 22:48;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 13 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2180//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2180//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2180//console

This message is automatically generated.;;;","22/Nov/18 00:51;mkedwards;Fix needed for 3.5.5?;;;","11/Sep/19 08:27;eolivelli;Issue resolved by pull request 622
[https://github.com/apache/zookeeper/pull/622];;;","11/Sep/19 10:31;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #690 (See [https://builds.apache.org/job/ZooKeeper-trunk/690/])
ZOOKEEPER-3145: Fix potential watch missing issue due to stale pzxid (enrico.olivelli: rev 42ea26b75105484ef0504396332c276952224158)
* (edit) zookeeper-jute/src/main/resources/zookeeper.jute
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/util/SerializeUtils.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CloseSessionTxnTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/PrepRequestProcessorTest.java
;;;","11/Sep/19 13:30;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #527 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/527/])
ZOOKEEPER-3145: Fix potential watch missing issue due to stale pzxid (enrico.olivelli: rev 42ea26b75105484ef0504396332c276952224158)
* (edit) zookeeper-jute/src/main/resources/zookeeper.jute
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/PrepRequestProcessor.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/util/SerializeUtils.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/PrepRequestProcessorTest.java
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServer.java
* (add) zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/CloseSessionTxnTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential ephemeral nodes inconsistent due to global session inconsistent with fuzzy snapshot,ZOOKEEPER-3144,13184492,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,lvfangmin,lvfangmin,lvfangmin,11/Sep/18 23:14,14/Sep/18 22:55,13/Jul/23 09:08,14/Sep/18 22:08,3.4.13,3.5.4,3.6.0,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"Found this issue recently when checking another prod issue, the problem is that the current code will update lastProcessedZxid before it's actually making change for the global sessions in the DataTree.
 
In case there is a snapshot taking in progress, and there is a small time stall between set lastProcessedZxid and update the session in DataTree due to reasons like thread context switch or GC, etc, then it's possible the lastProcessedZxid is actually set to the future which doesn't include the global session change (add or remove).
 
When reload this snapshot and it's txns, it will replay txns from lastProcessedZxid + 1, so it won't create the global session anymore, which could cause data inconsistent.
 
When global sessions are inconsistent, it might have ephemeral inconsistent as well, since the leader will delete all the ephemerals locally if there is no global sessions associated with it, and if someone have snapshot sync with it then that server will not have that ephemeral as well, but others will. It will also have global session renew issue for that problematic session.
 
The same issue exist for the closeSession txn, we need to move these global session update logic before processTxn, so the lastProcessedZxid will not miss the global session here.
 
 ",,hanm,hudson,lvfangmin,,,,,,,,,,,,,,,,,"GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/621

    [ZOOKEEPER-3144] Fix potential ephemeral nodes inconsistent due to global session inconsistent with fuzzy snapshot

    There is a race condition between update the lastProcessedZxid and the actual session change in DataTree, which could cause global session inconsistent, which then could cause ephemeral inconsistent. 
    
    For more details, please check the description in JIRA ZOOKEEPER-3144.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3144

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/621.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #621
    
----
commit 55427c045c23e9a06db0ceae2739a1a351e9b60b
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-09-11T23:36:18Z

    Fix potential ephemeral nodes inconsistent due to global session inconsistent with fuzzy snapshot

----
;11/Sep/18 23:38;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/621
  
    @hanm rebased onto latest.
;13/Sep/18 17:05;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/621
;14/Sep/18 22:08;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Sep 14 22:55:16 UTC 2018,,,,,,,,,,"0|i3xzlb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Sep/18 23:54;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2153//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2153//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2153//console

This message is automatically generated.;;;","13/Sep/18 17:28;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2162//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2162//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2162//console

This message is automatically generated.;;;","14/Sep/18 22:08;hanm;Issue resolved by pull request 621
[https://github.com/apache/zookeeper/pull/621];;;","14/Sep/18 22:55;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #191 (See [https://builds.apache.org/job/ZooKeeper-trunk/191/])
ZOOKEEPER-3144: Fix potential ephemeral nodes inconsistent due to global (hanm: rev b58791016424e662c816e2253de96f3771f5d301)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java
* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
org.apache.zookeeper.server.WatchManager resource leak,ZOOKEEPER-3131,13181545,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,lvfangmin,hw_wangchao,hw_wangchao,28/Aug/18 08:32,20/May/19 17:50,13/Jul/23 09:08,07/Sep/18 00:35,3.5.3,3.5.4,3.6.0,,,,,,,3.5.5,3.6.0,,,,server,,,,0,pull-request-available,,"In some cases, the variable _watch2Paths_ in _Class WatchManager_ does not remove the entry, even if the associated value ""HashSet"" is empty already. 

The type of key in Map _watch2Paths_ is Watcher, instance of _NettyServerCnxn._ If it is not removed when the associated set of paths is empty, it will cause the memory increases little by little, and OutOfMemoryError triggered finally. 

 

{color:#FF0000}*Possible Solution:*{color}

In the following function, the logic should be added to remove the entry.

org.apache.zookeeper.server.WatchManager#removeWatcher(java.lang.String, org.apache.zookeeper.Watcher)

if (paths.isEmpty())

{ watch2Paths.remove(watcher); }

For the following function as well:

org.apache.zookeeper.server.WatchManager#triggerWatch(java.lang.String, org.apache.zookeeper.Watcher.Event.EventType, java.util.Set<org.apache.zookeeper.Watcher>)

 

Please confirm this issue?",-Xmx512m ,enixon,hanm,hudson,hw_wangchao,jakem,kezhuw,lvfangmin,,,,,,,,,,,,,"GitHub user wangchaod opened a pull request:

    https://github.com/apache/zookeeper/pull/611

    ZOOKEEPER-3131

    org.apache.zookeeper.server.WatchManager resource leak

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/wangchaod/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/611.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #611
    
----
commit 36f1e786689f66d1044d6de96e8063dd6e828477
Author: wangchaod <wangchao815@...>
Date:   2018-08-29T13:50:51Z

    ZOOKEEPER-3131
    org.apache.zookeeper.server.WatchManager resource leak

----
;29/Aug/18 13:53;githubbot;600","Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    I see. It depends on what you are optimizing. The Watcher will be removed from watch2Paths when the ServerCnxn for it is closed. Keeping a set in the map for it strikes me as an optimization based on the heuristic that clients that create one watch are likely to make others and that the empty state of their watches is a temporary one. This is vulnerable to creep if connections only make single watches during their lifetime and do not renew when they're fired. 
    
    My inclination is to keep the current behavior. Far more often, a client workload requires re-establishing a watch after it has fired and the temporarily empty state of its watch set will soon pass. Aggressively cleaning up the map just makes more work in recreating entries and allocating new HashSets.
;29/Aug/18 21:33;githubbot;600","Github user wangchaod commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @enixon In my running environment, the temporarily empty state of its watch set will not pass soon. So then, the empty watcher increases to more than 10 thousand, and the OutOfMemoryError occurred in the end.   Is that because the corresponding ServerCnxn is not closed?
    Plus, the jvm parameter: -Xmx512m
;30/Aug/18 03:47;githubbot;600","GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/612

    [ZOOKEEPER-3131] Remove watcher when session closed in NettyServerCnxn

    Currently, it doesn't remove itself from ZK server when the cnxn is closed, which
    will leak watchers, close it to make it align with NIO implementation.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3131

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/612.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #612
    
----
commit 57756483957272588f8309f569781ff2550709a2
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-08-30T16:30:21Z

    remove watch when session closed

----
;30/Aug/18 16:31;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @wangchaod just send another PR for removing the watcher when closing netty cnxn: https://github.com/apache/zookeeper/pull/612.
    
    As I mentioned, this will also be fixed in PR of ZOOKEEPER-1177, but let's get this fixed separately.
;30/Aug/18 16:33;githubbot;600","Github user wangchaod commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @lvfangmin OK thanks
;01/Sep/18 03:24;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @enixon I think it leaks the map anyway, because when the new Watcher is added, new Watcher instance gets created which will be added to Map anyway and the empty one remains forever.
    
    @wangchaod Would you please consider adding a quick unit test for the patch. Otherwise, it looks good.
;05/Sep/18 13:51;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/612
  
    Is there any easy way to trigger the build? It's a bit painful to doing trigger this by adding empty commit.
;05/Sep/18 21:20;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/612
  
    Close and reopen the pull request could also trigger a build, which might be more convenient than amending the commit.
    
    For committers or those who have admin access to apache JIRA, just find the job associated with the PR, and click the ""Rebuild"" button.

;05/Sep/18 23:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/612
  
    I usually amend the latest commit and do a force push.
;06/Sep/18 08:36;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/612
  
    Thanks @hanm @anmolnar, I like the ""Rebuild"" button, it's more convenient than check out the branch (maybe you're working on other branch and need to stash), do amend, and force push. 
;06/Sep/18 18:13;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/612
  
    I just triggered a build through ""Rebuild"", it's passing. So I am committing this patch.
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2130/
    
    I am not sure why the result is not integrated in Jenkins check on github. I think this issue was reported before.
;07/Sep/18 00:33;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/612
;07/Sep/18 00:35;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    #612 is now merged. @wangchaod Do you know what was the root cause of your OOM issue? Were you using Netty instead of NIO? Would #612 fix your case? I am curious if #612 does not fix your case because that implies that you get a lot of connections with empty watchers and I am expecting you reach connection limit even before those watchers can cause OOM.
;07/Sep/18 00:45;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @wangchaod can we move on?
;13/Sep/18 12:20;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @hanm based on @wangchaod's description in the JIRA, #612 should fix the exact issue.
    
    @anmolnar as I commented in the JIRA, not removing the empty map is optimized from performance perspective, like not need to remove/add the entry for the same connection again after the watch triggered and client reset the watch, which will reduce the GC overhead, also it reduces the lock contention. 
    
    Since the maximum number of map entries in watch2Paths won't larger than the total connections number on that server, leave an empty map entry there won't cost too much memory overhead. 
    
    Without the fix in #612, the map will grow infinitely as the ZK runs and client reconnect going on, which will cause the OOM problem.
    
    This is actually a critical bug for NettyServerCnxn implementation, wondering why we didn't saw other people report this. 
    
    Internally, we're using NIO, but we're planning to move onto Netty to get the TLS support. So recently, I'm working on improving the Netty implementation, adding features missing compared to NIO, for example, the maximum cnxns per IP limit support, the ideal cnxn expirer, the session map to improve the performance, etc, I'll send out the diffs, please help review.
;13/Sep/18 15:59;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @wangchaod it would be great if you can confirm this is fixed, so that we can abandon the PR.
;13/Sep/18 22:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @lvfangmin Let me try to wrap what has been discussed with this issue so far.
    - You're saying that #611 is not needed, because this PR fixes it and don't need to maintain `watch2Paths` explicitly,
    - If that's true and this patch targets Netty only, which patch has fixed the NIO side?
    - One of our customers reported inconsistent watch reporting in 4lw commands which I successfully fixed with #611 . Are sure it's still not needed given that it should be only a reporting issue?
    (`wchc` command uses `watch2paths` for reporting, so if it still contains watchers which are not effective anymore, the report is meaningless and might be misleading) 
;21/Sep/18 08:46;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2221/

;21/Sep/18 09:22;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/611
  
    @anmolnar here are some clarifications based on your comments:
    
    * #611 is not needed anymore because the issue @wangchaod reported here is due to the 'leaking' watcher entry in watch2Paths after the cnxn is actually closed. And this patch fixed it by removing it from watch2Paths when closing.
    * NIO is already doing the right job, which will remove itself from watch2Paths when the cnxn is closed.  (this patch is actually following what we're doing in NIO).
    * Leaving an empty watcher entry in watch2paths shouldn't result in inconsistent watches. One thing I can think of which might cause the watch inconsistent is due to the race condition of closing cnxn and the on flying add watch request in pipeline, which should be fixed it in the #590 with the isDeadWatch check.
;25/Sep/18 00:57;githubbot;600","anmolnar commented on pull request #611: ZOOKEEPER-3131
URL: https://github.com/apache/zookeeper/pull/611
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Jan/19 22:17;githubbot;600","anmolnar commented on pull request #804: ZOOKEEPER-3131: Remove watcher when session closed in NettyServerCnxn
URL: https://github.com/apache/zookeeper/pull/804
 
 
   Backport of https://github.com/apache/zookeeper/commit/95557a30edbdfdf4479a1cb142e0d82a4ba6061d
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 21:16;githubbot;600","anmolnar commented on issue #804: ZOOKEEPER-3131: Remove watcher when session closed in NettyServerCnxn
URL: https://github.com/apache/zookeeper/pull/804#issuecomment-460807025
 
 
   @ivmaykov Here you are.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 21:17;githubbot;600","ivmaykov commented on issue #804: ZOOKEEPER-3131: Remove watcher when session closed in NettyServerCnxn
URL: https://github.com/apache/zookeeper/pull/804#issuecomment-460811736
 
 
   +1. If this is merged before #753 you will have to resolve merge conflicts, but that should be pretty simple to do.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 21:31;githubbot;600","anmolnar commented on issue #804: ZOOKEEPER-3131: Remove watcher when session closed in NettyServerCnxn
URL: https://github.com/apache/zookeeper/pull/804#issuecomment-460970776
 
 
   Merged.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/19 10:18;githubbot;600","anmolnar commented on pull request #804: ZOOKEEPER-3131: Remove watcher when session closed in NettyServerCnxn
URL: https://github.com/apache/zookeeper/pull/804
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;06/Feb/19 10:18;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,15600,,,0,15600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Sep 07 02:20:19 UTC 2018,,,,,,,,,,"0|i3xho7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"28/Aug/18 21:48;enixon;I'm not sure I follow what you're proposing. Do you want to put up a pull request with your suggested changes and we can discuss there?;;;","30/Aug/18 15:49;lvfangmin;[~hw_wangchao] it was by design to leave it as is to improve the performance, since the watcher number is usually related with the connections on that server, and we can rely on the connection close to clean it up. 

The problem here is that, NettyServerCnxn didn't remove itself from ZK server as what we did in NIOServerCnxn, that's why it starts to leak slowly. I have a patch to make the behavior consistent with NIOServerCnxn, I can send it out today.

There are also other features missing comparing to NIO, for example, it's missing the maximum cnxns per IP limit support, doesn't have cnxn expirer, the NettyServerCnxnFactory.closeSession is not that efficient, etc. I'm recently working on get netty prod ready, I'll send out other patches as well.;;;","30/Aug/18 15:53;lvfangmin;This one will be fixed if the ongoing optimized watch manager PR get landed: [https://github.com/apache/zookeeper/pull/590.] 

But that may take long time, I'll send a separate one just for this one.;;;","04/Sep/18 17:01;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2117//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2117//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2117//console

This message is automatically generated.;;;","07/Sep/18 00:35;hanm;Issue resolved by pull request 612
[https://github.com/apache/zookeeper/pull/612];;;","07/Sep/18 02:20;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #180 (See [https://builds.apache.org/job/ZooKeeper-trunk/180/])
ZOOKEEPER-3131: Remove watcher when session closed in NettyServerCnxn (hanm: rev 95557a30edbdfdf4479a1cb142e0d82a4ba6061d)
* (edit) src/java/main/org/apache/zookeeper/server/NettyServerCnxn.java
* (edit) src/java/test/org/apache/zookeeper/server/NettyServerCnxnTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Get CLI Command displays Authentication error for Authorization error,ZOOKEEPER-3128,13180882,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,arshad.mohammad,arshad.mohammad,arshad.mohammad,24/Aug/18 07:02,28/Mar/21 04:29,13/Jul/23 09:08,28/Mar/21 04:24,,,,,,,,,,3.6.3,3.7.1,3.8.0,,,server,,,,1,pull-request-available,,"CLI Get Command display ""org.apache.zookeeper.KeeperException$NoAuthException: KeeperErrorCode = NoAuth for /b"" when user does not have read access on the znode /b.

Steps to reproduce the bug:
{noformat}
[zk: vm1:2181(CONNECTED) 1] create /b
Created /b
[zk: vm1:2181(CONNECTED) 2] getAcl /b
'world,'anyone
: cdrwa
[zk: vm1:2181(CONNECTED) 3] setAcl /b world:anyone:wa
[zk: vm1:2181(CONNECTED) 4] getAcl /b
'world,'anyone
: wa
[zk: vm1:2181(CONNECTED) 5] get /b
org.apache.zookeeper.KeeperException$NoAuthException: KeeperErrorCode = NoAuth for /b
[zk: vm1:2181(CONNECTED) 6]
{noformat}

Expected output:
{noformat}
[zk: vm1:2181(CONNECTED) 0] get /b
Insufficient permission : /b
{noformat}
 

 ",,arshad.mohammad,maoling,riza,,,,,,,,,,,,,,,,,"arshadmohammad opened a new pull request #1634:
URL: https://github.com/apache/zookeeper/pull/1634


   Handled the scenario missed in ZOOKEEPER-3891


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;10/Mar/21 13:31;githubbot;600","arshadmohammad commented on pull request #1634:
URL: https://github.com/apache/zookeeper/pull/1634#issuecomment-808763963


   Test failures not related this PR change.


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 17:13;githubbot;600","asfgit closed pull request #1634:
URL: https://github.com/apache/zookeeper/pull/1634


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 17:21;githubbot;600","arshadmohammad opened a new pull request #1656:
URL: https://github.com/apache/zookeeper/pull/1656


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 17:41;githubbot;600","arshadmohammad commented on pull request #1634:
URL: https://github.com/apache/zookeeper/pull/1634#issuecomment-808767911


   Merged to master and branch-3.7. Created PR https://github.com/apache/zookeeper/pull/1656 for branch-3.6


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;27/Mar/21 17:41;githubbot;600","arshadmohammad closed pull request #1656:
URL: https://github.com/apache/zookeeper/pull/1656


   


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;28/Mar/21 04:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3891,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Mar 28 04:29:09 UTC 2021,,,,,,,,,,"0|i3xdl3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"10/Mar/21 11:15;arshad.mohammad;This issue is same as  ZOOKEEPER-3891. Get command scenario was missed in that fix.;;;","28/Mar/21 04:24;arshad.mohammad;Issue resolved by pull request 1656
[https://github.com/apache/zookeeper/pull/1656];;;","28/Mar/21 04:29;arshad.mohammad;Thanks [~ztzg], [~eolivelli]] for the reviews.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixing potential data inconsistency due to update last processed zxid with partial multi-op txn,ZOOKEEPER-3127,13180640,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,lvfangmin,lvfangmin,lvfangmin,23/Aug/18 06:36,04/Oct/19 14:55,13/Jul/23 09:08,05/Sep/18 20:36,3.4.13,3.5.4,3.6.0,,,,,,,3.5.5,3.6.0,,,,server,,,,0,pull-request-available,,"Found this issue while checking the code for another issue, this is a relatively rare case which we haven't seen it on prod so far.

Currently, the lastProcessedZxid is updated when applying the first txn of multi-op, if there is a snapshot in progress, it's possible that the zxid associated with the snapshot only include partial of the multi op.

When loading snapshot, it will only load the txns after the zxid associated with snapshot file, which could data inconsistency due to missing sub txns.

To avoid this, we only update the lastProcessedZxid when the whole multi-op txn is applied to DataTree.",,andor,hanm,hudson,kezhuw,lvfangmin,riza,,,,,,,,,,,,,,"GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/606

    [ZOOKEEPER-3127] Fixing potential data inconsistency due to update last processed zxid with partial multi-op txn

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3127

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/606.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #606
    
----
commit 750e14f5edf6f0244662bb3224dcf8dfab2df91b
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-08-23T06:49:00Z

    Fixing potential data inconsistency due to update last processed zxid with partial multi-op txn

----
;23/Aug/18 06:50;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/606
  
    +1 thank you @lvfangmin 
;25/Aug/18 00:37;githubbot;600","Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/606#discussion_r213189883
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -941,22 +945,41 @@ public ProcessTxnResult processTxn(TxnHeader header, Record txn)
                     LOG.debug(""Failed: "" + header + "":"" + txn, e);
                 }
             }
    +
    +
             /*
    -         * A snapshot might be in progress while we are modifying the data
    -         * tree. If we set lastProcessedZxid prior to making corresponding
    -         * change to the tree, then the zxid associated with the snapshot
    -         * file will be ahead of its contents. Thus, while restoring from
    -         * the snapshot, the restore method will not apply the transaction
    -         * for zxid associated with the snapshot file, since the restore
    -         * method assumes that transaction to be present in the snapshot.
    +         * Things we can only update after the whole txn is applied to data
    +         * tree.
              *
    -         * To avoid this, we first apply the transaction and then modify
    -         * lastProcessedZxid.  During restore, we correctly handle the
    -         * case where the snapshot contains data ahead of the zxid associated
    -         * with the file.
    +         * If we update the lastProcessedZxid with the first sub txn in multi
    +         * and there is a snapshot in progress, it's possible that the zxid
    +         * associated with the snapshot only include partial of the multi op.
    +         *
    +         * When loading snapshot, it will only load the txns after the zxid
    +         * associated with snapshot file, which could data inconsistency due
    --- End diff --
    
    nit: which could **cause** data inconsistency
;28/Aug/18 05:45;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/606
  
    Corrected the typo, and pushed to my branch, not sure why this is not got updated, maybe there is a delay.
;28/Aug/18 16:54;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/606
  
    The ReconfigRecoveryTest.testCurrentServersAreObserversInNextConfig is failing, I don't think it's related with this diff.
    
    @breed I think this is ready to get in now.
;31/Aug/18 23:38;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/606
;05/Sep/18 20:36;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/606
  
    committed to master @lvfangmin @breed 
;05/Sep/18 20:38;githubbot;600","GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/631

    [ZOOKEEPER-3127][branch-3.5] Fixing potential data inconsistency due to update last processed zxid with partial multi-op txn

    Port the same fix to 3.5.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3127-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/631.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #631
    
----
commit 6fdda317494003d1eedaad223ac9f2f1a93082dd
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-09-05T20:35:38Z

    ZOOKEEPER-3127: Fixing potential data inconsistency due to update last processed zxid with partial multi-op txn
    
    Author: Fangmin Lyu <allenlyu@fb.com>
    
    Reviewers: Benjamin Reed <breed@apache.org>, Michael Han <hanm@apache.org>
    
    Closes #606 from lvfangmin/ZOOKEEPER-3127

----
;18/Sep/18 22:01;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/631
  
    Merged to branch-3.5 Thanks @lvfangmin !
    Please close this PR.
;19/Sep/18 10:05;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/631
  
    Thanks @anmolnar, close after merged.
;19/Sep/18 16:29;githubbot;600","Github user lvfangmin closed the pull request at:

    https://github.com/apache/zookeeper/pull/631
;19/Sep/18 16:29;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,6600,,,0,6600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Sep 19 10:08:16 UTC 2018,,,,,,,,,,"0|i3xc3j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/18 07:11;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2084//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2084//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2084//console

This message is automatically generated.;;;","24/Aug/18 23:53;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2090//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2090//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2090//console

This message is automatically generated.;;;","28/Aug/18 17:13;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2096//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2096//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2096//console

This message is automatically generated.;;;","28/Aug/18 18:05;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2098//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2098//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2098//console

This message is automatically generated.;;;","05/Sep/18 20:36;hanm;Issue resolved by pull request 606
[https://github.com/apache/zookeeper/pull/606];;;","05/Sep/18 22:26;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #177 (See [https://builds.apache.org/job/ZooKeeper-trunk/177/])
ZOOKEEPER-3127: Fixing potential data inconsistency due to update last (hanm: rev e501d9cc67fbaa6e825292fd838711259b6c9789)
* (edit) src/java/main/org/apache/zookeeper/server/ZKDatabase.java
* (edit) src/java/main/org/apache/zookeeper/server/DataTree.java
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
* (add) src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java
;;;","12/Sep/18 09:01;andor;[~lvfangmin]

Would you please port this to 3.5 branch as well?;;;","12/Sep/18 21:16;lvfangmin;[~andor] what's the process for committer to port back the commits? If it cannot be clearly applied we always needs a PR for that? Or if it's very trivial conflict, we just resolve it when CP and commit directly?

I manually cherry-picked this one on my MAC, there is a very minor conflict in QuorumPeerMainTest which is about the private/public of logStates method, I'll provide the PR, but I'm more interested to know what's  the procedure here.;;;","12/Sep/18 21:46;hanm;If there is a conflict, it's expected that the author of the original PR create a new PR targeting the new branch. If there is no conflict then committer can cherry pick the patch to different branches. It's because the author has best knowledge of how to deal with the conflict regardless of it's trivial or not, plus a separate PR will test the patch again through precommit jenkins. I think this is consistent with what committers was doing in old days when contributions coming in as patches; it's expected the original author uploaded a new patch to Jira if there was a conflict. 

 

 ;;;","18/Sep/18 22:28;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2195//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2195//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2195//console

This message is automatically generated.;;;","19/Sep/18 10:08;andor;[~lvfangmin] I'm sorry, I didn't notice your comment here.

[~hanm] got it right. That's the process basically. Thanks for providing another PR, I've already committed it.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Pzxid inconsistent issue when replaying a txn for a deleted node,ZOOKEEPER-3125,13180055,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,lvfangmin,lvfangmin,lvfangmin,20/Aug/18 20:13,20/May/19 17:51,13/Jul/23 09:08,08/Nov/18 18:56,,,,,,,,,,3.5.5,3.6.0,,,,server,,,,0,pull-request-available,,"When taking snapshot or syncing snapshot from leader, it's having fuzzy snapshot, which means the parent node might already serialized before the child get deleted, during replay the txn it will skip update the parent pzxid in this case, which will cause inconsistency.",,andor,hanm,hudson,lvfangmin,,,,,,,,,,,,,,,,"GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/605

    [ZOOKEEPER-3125] Fix pzxid consistent issue when replaying a txn for a deleted node

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3125

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/605.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #605
    
----
commit b837988ba1921e14f7cce8390ad5ead4e440efe9
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-08-23T06:29:44Z

    Fix pzxid consistent issue when replaying a txn for a deleted node

----
;23/Aug/18 06:32;githubbot;600","Github user breed commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/605#discussion_r212781611
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -452,7 +452,7 @@ public void testElectionFraud() throws IOException, InterruptedException {
             Assert.assertTrue(""falseLeader never rejoins the quorum"", foundFollowing);
         }
     
    -    private void waitForOne(ZooKeeper zk, States state) throws InterruptedException {
    --- End diff --
    
    this are in the other change, so we are going to have to re-resolve depending on which one goes in.
;25/Aug/18 00:40;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/605#discussion_r213393785
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -452,7 +452,7 @@ public void testElectionFraud() throws IOException, InterruptedException {
             Assert.assertTrue(""falseLeader never rejoins the quorum"", foundFollowing);
         }
     
    -    private void waitForOne(ZooKeeper zk, States state) throws InterruptedException {
    --- End diff --
    
    @breed This is based on current master branch, we don't have dependency as far as I know, so it should be ready to go in. 
    
    (sorry for the lately reply, just came back from vocation)
;28/Aug/18 16:57;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/605#discussion_r215614171
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -0,0 +1,254 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.zookeeper.server.quorum;
    +
    +import java.io.IOException;
    +import java.util.HashMap;
    +import java.util.Map;
    +import javax.security.sasl.SaslException;
    +
    +import org.apache.jute.OutputArchive;
    +import org.apache.zookeeper.CreateMode;
    +import org.apache.zookeeper.PortAssignment;
    +import org.apache.zookeeper.ZooDefs.Ids;
    +import org.apache.zookeeper.ZooKeeper;
    +import org.apache.zookeeper.ZooKeeper.States;
    +import org.apache.zookeeper.data.Stat;
    +import org.apache.zookeeper.server.DataNode;
    +import org.apache.zookeeper.server.DataTree;
    +import org.apache.zookeeper.server.ZKDatabase;
    +import org.apache.zookeeper.server.ZooKeeperServer;
    +import org.apache.zookeeper.test.ClientBase;
    +
    +import org.junit.Assert;
    +import org.junit.After;
    +import org.junit.Before;
    +import org.junit.Test;
    +import org.slf4j.Logger;
    +import org.slf4j.LoggerFactory;
    +
    +/**
    + * Test cases used to catch corner cases due to fuzzy snapshot.
    + */
    +public class FuzzySnapshotRelatedTest extends QuorumPeerTestBase {
    +
    +    private static final Logger LOG = LoggerFactory.getLogger(FuzzySnapshotRelatedTest.class);
    +
    +    MainThread[] mt = null;
    +    ZooKeeper[] zk = null;
    +    int leaderId;
    +    int followerA;
    +
    +    @Before
    +    public void setup() throws Exception {
    --- End diff --
    
    I see this initialization logic pretty much everywhere in unit tests. Do you think we can do some clever code sharing here with (for example) `QuorumPeerMainTest.java`? Private method `LaunchServers` does the same thing as far as I could see.
;06/Sep/18 12:57;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/605#discussion_r215849976
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -0,0 +1,254 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.zookeeper.server.quorum;
    +
    +import java.io.IOException;
    +import java.util.HashMap;
    +import java.util.Map;
    +import javax.security.sasl.SaslException;
    +
    +import org.apache.jute.OutputArchive;
    +import org.apache.zookeeper.CreateMode;
    +import org.apache.zookeeper.PortAssignment;
    +import org.apache.zookeeper.ZooDefs.Ids;
    +import org.apache.zookeeper.ZooKeeper;
    +import org.apache.zookeeper.ZooKeeper.States;
    +import org.apache.zookeeper.data.Stat;
    +import org.apache.zookeeper.server.DataNode;
    +import org.apache.zookeeper.server.DataTree;
    +import org.apache.zookeeper.server.ZKDatabase;
    +import org.apache.zookeeper.server.ZooKeeperServer;
    +import org.apache.zookeeper.test.ClientBase;
    +
    +import org.junit.Assert;
    +import org.junit.After;
    +import org.junit.Before;
    +import org.junit.Test;
    +import org.slf4j.Logger;
    +import org.slf4j.LoggerFactory;
    +
    +/**
    + * Test cases used to catch corner cases due to fuzzy snapshot.
    + */
    +public class FuzzySnapshotRelatedTest extends QuorumPeerTestBase {
    +
    +    private static final Logger LOG = LoggerFactory.getLogger(FuzzySnapshotRelatedTest.class);
    +
    +    MainThread[] mt = null;
    +    ZooKeeper[] zk = null;
    +    int leaderId;
    +    int followerA;
    +
    +    @Before
    +    public void setup() throws Exception {
    --- End diff --
    
    The main difference is that I need to pass in Customized QuorumPeer to hook events in ZK, there might be something in common, like how we generate the connection string, we may do some refactor later, but I prefer to do that separately since we also need to touch other tests who may have similar logics.
;07/Sep/18 05:32;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    This could cause watch event not notified when setWatches because of stale pzxid, and all the tests have been passed, I think we should land this and port it back to other branches as early as possible.
;11/Sep/18 17:39;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    Just found there is conflict to merge, I'm updating it now.
    
    Btw, I just found 2 other potential data inconsistent issues about multi-op and ephemeral, will create Jiras and send out diffs soon.
;11/Sep/18 17:41;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    Just reported another pzxid inconsistent issue related to CloseSession, I found that issue recently, will wait this being merged before providing that patch, which will make adding the unit test easier.
;11/Sep/18 23:49;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/605
;12/Sep/18 11:29;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @lvfangmin Committed to master. Conflicting with branch-3.5, please create separate pull request for that.
;12/Sep/18 11:30;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    Thanks @anmolnar, will create a PR for 3.5.
;12/Sep/18 16:49;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @anmolnar the conflict is due to the missing of FuzzySnapshotRelatedTest class introduced in ZOOKEEPER-3127, which is fixing the data inconsistency due to multi-op txn.
    
    We need that in 3.5 as well, if you cherry pick that to 3.5 first, then we won't have conflict for this one.
    
    Manually tested cherry pick ZOOKEEPER-3127 to 3.5 branch, there is a very minor conflict in QuorumPeerMainTest, it should be trivial to change while cherry-picking.
;12/Sep/18 19:32;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @lvfangmin Cool, thanks for the info, but unfortunately the commit script is quite strict and works with PRs. Maybe I could circumvent the process and commit the change manually, but I think it would be a lot easier to just create a separate PR.
;12/Sep/18 20:11;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @anmolnar, sorry, just saw your comment, I'll send out a PR for 3.5 today.
;17/Sep/18 16:10;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @anmolnar I created a PR to port ZOOKEEPER-3127 to 3.5: #631, I'll port ZOOKEEPER-3125 back after that, because 3125 is depending on 3127.
;18/Sep/18 22:03;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @anmolnar after #631 being merged into 3.5, this patch can be cherry-picked back to 3.5 without conflict, can you help cherry-pick it back?
;19/Sep/18 16:34;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @lvfangmin Errm. I would be happy to do that, but not sure how to. The merge script is able to cherrry-pick in the middle of the process, but I cannot start it over without a pull request. Again, I can go the manual way, but that's a lot more cumbersome than creating a new pull request quickly. Plus it has the benefit of automatically running pre-commit tests against the target branch.
;20/Sep/18 09:15;githubbot;600","Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/605#discussion_r219628119
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -162,6 +167,98 @@ public void process(String path) {
                     new String(zk[followerA].getData(node2, null, null)));
         }
     
    +    /**
    +     * It's possibel during SNAP sync, the parent is serialized before the
    +     * child get deleted during sending the snapshot over.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when applying the txns received.
    +     */
    +    @Test
    +    public void testPZxidUpdatedDuringSnapSyncing() throws Exception {
    +        LOG.info(""Enable force snapshot sync"");
    +        System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
    +
    +        final String parent = ""/testPZxidUpdatedWhenDeletingNonExistNode"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[leaderId], parent);
    +        createEmptyNode(zk[leaderId], child);
    +
    +        LOG.info(""shutdown follower {}"", followerA);
    +        mt[followerA].shutdown();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTING);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(leaderId, parent, child);
    +
    +        LOG.info(""Restart follower A to trigger a SNAP sync with leader"");
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    /**
    +     * It's possible during taking fuzzy snapshot, the parent is serialized
    +     * before the child get deleted in the fuzzy range.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when replaying the txns.
    +     */
    +    @Test
    +    public void testPZxidUpdatedWhenLoadingSnapshot() throws Exception {
    +
    +        final String parent = ""/testPZxidUpdatedDuringTakingSnapshot"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[followerA], parent);
    +        createEmptyNode(zk[followerA], child);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(followerA, parent, child);
    +
    +        LOG.info(""Take snapshot on follower A"");
    +        ZooKeeperServer zkServer = mt[followerA].main.quorumPeer.getActiveServer();
    +        zkServer.takeSnapshot(true);
    +
    +        LOG.info(""Restarting follower A to load snapshot"");
    +        mt[followerA].shutdown();
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    private void addSerializeListener(int sid, String parent, String child) {
    +        final ZooKeeper zkClient = zk[followerA];
    +        CustomDataTree dt =
    +                (CustomDataTree) mt[sid].main.quorumPeer.getZkDb().getDataTree();
    +        dt.addListener(parent, new NodeSerializeListener() {
    +            @Override
    +            public void nodeSerialized(String path) {
    +                try {
    +                    zkClient.delete(child, -1);
    +                    LOG.info(""Deleted the child node after the parent is serialized"");
    +                } catch (Exception e) {
    +                    LOG.error(""Error when deleting node {}"", e);
    +                }
    +            }
    +        });
    +    }
    +
    +    private void compareStat(String path, int sid, int compareWithSid) throws Exception{
    +        Stat stat1 = new Stat();
    +        zk[sid].getData(path, null, stat1);
    +
    +        Stat stat2 = new Stat();
    +        zk[compareWithSid].getData(path, null, stat2);
    --- End diff --
    
    @lvfangmin we should add a try catch with retry here around `ConnectionLossException`. I noticed this when checking the flaky test dashboard. See one failure [example](https://builds.apache.org/job/ZooKeeper-trunk/198/testReport/junit/org.apache.zookeeper.server.quorum/FuzzySnapshotRelatedTest/testPZxidUpdatedWhenLoadingSnapshot/)
;21/Sep/18 21:09;githubbot;600","Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/605#discussion_r219628462
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -162,6 +167,98 @@ public void process(String path) {
                     new String(zk[followerA].getData(node2, null, null)));
         }
     
    +    /**
    +     * It's possibel during SNAP sync, the parent is serialized before the
    +     * child get deleted during sending the snapshot over.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when applying the txns received.
    +     */
    +    @Test
    +    public void testPZxidUpdatedDuringSnapSyncing() throws Exception {
    +        LOG.info(""Enable force snapshot sync"");
    +        System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
    +
    +        final String parent = ""/testPZxidUpdatedWhenDeletingNonExistNode"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[leaderId], parent);
    +        createEmptyNode(zk[leaderId], child);
    +
    +        LOG.info(""shutdown follower {}"", followerA);
    +        mt[followerA].shutdown();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTING);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(leaderId, parent, child);
    +
    +        LOG.info(""Restart follower A to trigger a SNAP sync with leader"");
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    /**
    +     * It's possible during taking fuzzy snapshot, the parent is serialized
    +     * before the child get deleted in the fuzzy range.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when replaying the txns.
    +     */
    +    @Test
    +    public void testPZxidUpdatedWhenLoadingSnapshot() throws Exception {
    +
    +        final String parent = ""/testPZxidUpdatedDuringTakingSnapshot"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[followerA], parent);
    +        createEmptyNode(zk[followerA], child);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(followerA, parent, child);
    +
    +        LOG.info(""Take snapshot on follower A"");
    +        ZooKeeperServer zkServer = mt[followerA].main.quorumPeer.getActiveServer();
    +        zkServer.takeSnapshot(true);
    +
    +        LOG.info(""Restarting follower A to load snapshot"");
    +        mt[followerA].shutdown();
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    private void addSerializeListener(int sid, String parent, String child) {
    +        final ZooKeeper zkClient = zk[followerA];
    +        CustomDataTree dt =
    +                (CustomDataTree) mt[sid].main.quorumPeer.getZkDb().getDataTree();
    +        dt.addListener(parent, new NodeSerializeListener() {
    +            @Override
    +            public void nodeSerialized(String path) {
    +                try {
    +                    zkClient.delete(child, -1);
    +                    LOG.info(""Deleted the child node after the parent is serialized"");
    +                } catch (Exception e) {
    +                    LOG.error(""Error when deleting node {}"", e);
    +                }
    +            }
    +        });
    +    }
    +
    +    private void compareStat(String path, int sid, int compareWithSid) throws Exception{
    +        Stat stat1 = new Stat();
    +        zk[sid].getData(path, null, stat1);
    +
    +        Stat stat2 = new Stat();
    +        zk[compareWithSid].getData(path, null, stat2);
    --- End diff --
    
    something like this (we should make a utility out of this)
    
    `for (int j = 0; j < 30; j++) {
                try {
                    zk[compareWithSid].getData(path, null, stat2);
                } catch (KeeperException.ConnectionLossException e) {
                    if (j < 29) {
                        Thread.sleep(1000);
                    } else {
                        Assert.fail(""fail to get data ......"");
                    }
                }
            }
    `
;21/Sep/18 21:10;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    Ooops, sorry @hanm , you're a little bit late, this one is already committed.
    Would you or @lvfangmin mind creating a separate Jira for the flaky test fix?
;22/Sep/18 06:03;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    @anmolnar thanks for the context, I'll provide a separate patch for 3.5 as well.
    
    Also I created a JIRA to improve the test: ZOOKEEPER-3157.
    
    As I mentioned in that JIRA, internally, we 'fixed' flaky test by adding junit.RetryRule in ZKTestCase, which is the base class for most of the tests. I'm not sure this is the right way to go, since it's actually 'hiding' the flaky tests, but this will help reducing the flaky tests a lot if we're not going to tackle it in short-term. And we can check the testing history to find out which tests are flaky and deal with them separately. So let me know if this is useful in short term, if it is I'll provide a patch to do that.
;28/Sep/18 06:00;githubbot;600","GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/647

    ZOOKEEPER-3125: Fixing pzxid consistent issue when replaying a txn for a deleted node

    Port this to 3.5, this also fixed the issue where the pzxid might be overwritten by a smaller one when replaying deleteNode txn, which will be fixed in a separate PR for 3.6.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3125-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/647.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #647
    
----
commit 90ef67cf79c0eaec4b8b3389a8711cce8ba25255
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-09-12T11:29:13Z

    ZOOKEEPER-3125: Fixing pzxid consistent issue when replaying a txn for a deleted node
    
    Author: Fangmin Lyu <allenlyu@fb.com>
    
    Reviewers: breed@apache.org, andor@apache.org
    
    Closes #605 from lvfangmin/ZOOKEEPER-3125

----
;28/Sep/18 06:26;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2279/

;28/Sep/18 06:40;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/647#discussion_r221200308
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -527,6 +527,24 @@ public void deleteNode(String path, long zxid)
             int lastSlash = path.lastIndexOf('/');
             String parentName = path.substring(0, lastSlash);
             String childName = path.substring(lastSlash + 1);
    +
    +        // The child might already be deleted during taking fuzzy snapshot,
    +        // but we still need to update the pzxid here before throw exception
    +        // for no such child
    +        DataNode parent = nodes.get(parentName);
    +        if (parent == null) {
    +            throw new KeeperException.NoNodeException();
    +        }
    +        synchronized (parent) {
    +            parent.removeChild(childName);
    +            // Only update pzxid when the zxid is larger than the current pzxid,
    +            // otherwise we might override higher pzxid set by a following create 
    +            // Txn, which could cause the cversion and pzxid inconsistent
    +            if (zxid > parent.stat.getPzxid()) {
    --- End diff --
    
    Looks like this is the fix you're talking about and which will be fixed separately in 3.6. Is that correct?
;28/Sep/18 09:56;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/647#discussion_r221201278
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -162,6 +167,98 @@ public void process(String path) {
                     new String(zk[followerA].getData(node2, null, null)));
         }
     
    +    /**
    +     * It's possibel during SNAP sync, the parent is serialized before the
    +     * child get deleted during sending the snapshot over.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when applying the txns received.
    +     */
    +    @Test
    +    public void testPZxidUpdatedDuringSnapSyncing() throws Exception {
    +        LOG.info(""Enable force snapshot sync"");
    +        System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
    +
    +        final String parent = ""/testPZxidUpdatedWhenDeletingNonExistNode"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[leaderId], parent);
    +        createEmptyNode(zk[leaderId], child);
    +
    +        LOG.info(""shutdown follower {}"", followerA);
    +        mt[followerA].shutdown();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTING);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(leaderId, parent, child);
    +
    +        LOG.info(""Restart follower A to trigger a SNAP sync with leader"");
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    /**
    +     * It's possible during taking fuzzy snapshot, the parent is serialized
    +     * before the child get deleted in the fuzzy range.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when replaying the txns.
    +     */
    +    @Test
    +    public void testPZxidUpdatedWhenLoadingSnapshot() throws Exception {
    +
    +        final String parent = ""/testPZxidUpdatedDuringTakingSnapshot"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[followerA], parent);
    +        createEmptyNode(zk[followerA], child);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(followerA, parent, child);
    +
    +        LOG.info(""Take snapshot on follower A"");
    +        ZooKeeperServer zkServer = mt[followerA].main.quorumPeer.getActiveServer();
    +        zkServer.takeSnapshot();
    +
    +        LOG.info(""Restarting follower A to load snapshot"");
    +        mt[followerA].shutdown();
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    private void addSerializeListener(int sid, String parent, String child) {
    +        final ZooKeeper zkClient = zk[followerA];
    +        CustomDataTree dt =
    +                (CustomDataTree) mt[sid].main.quorumPeer.getZkDb().getDataTree();
    +        dt.addListener(parent, new NodeSerializeListener() {
    +            @Override
    +            public void nodeSerialized(String path) {
    +                try {
    +                    zkClient.delete(child, -1);
    +                    LOG.info(""Deleted the child node after the parent is serialized"");
    +                } catch (Exception e) {
    +                    LOG.error(""Error when deleting node {}"", e);
    +                }
    +            }
    +        });
    +    }
    +
    +    private void compareStat(String path, int sid, int compareWithSid) throws Exception {
    +        Stat stat1 = new Stat();
    +        zk[sid].getData(path, null, stat1);
    +
    +        Stat stat2 = new Stat();
    +        zk[compareWithSid].getData(path, null, stat2);
    --- End diff --
    
    @hanm mentioned a flaky test issue related to this part:
    https://github.com/apache/zookeeper/pull/605/files#r219628119
    I don't see answer in the original PR, how are you dealing with the problem?
;28/Sep/18 09:56;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/647#discussion_r221200641
  
    --- Diff: src/java/test/org/apache/zookeeper/server/DataTreeTest.java ---
    @@ -153,6 +153,31 @@ public void testIncrementCversion() throws Exception {
                     (newCversion == prevCversion + 1 && newPzxid == prevPzxid + 1));
         }
     
    +    @Test
    +    public void testPzxidUpdatedWhenDeletingNonExistNode() throws Exception {
    --- End diff --
    
    This new test is also part of the fix.
;28/Sep/18 09:56;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    >> since it's actually 'hiding' the flaky tests
    
    This is my main concern. If we do this to all test cases, it's very likely there will be no follow ups or investigations on the flaky tests ever (it's just like a ""TODO"" in code that will never be done). Keep these flaky tests visible will remind us there are issues and keep a high bar for overall quality, as we've seen previously lots of flaky tests were caused by actual bugs. 
    
    So I am leaning towards not introducing `junit.RetryRule` to the tests, at least, not to all tests (there might be exception case. for example, if there is a test we don't know how to fix, and community think it's fine to silent it after evaluating the impact of the test).

;28/Sep/18 16:45;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    +1 for @hanm 's concern.
    Auto-retrying tests wouldn't be good here.
;28/Sep/18 19:41;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/605
  
    That seems reasonable to me, I'll provide a separate PR for improving the connection loss thing in ZOOKEEPER-3157.
;28/Sep/18 21:54;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/647#discussion_r221390760
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java ---
    @@ -162,6 +167,98 @@ public void process(String path) {
                     new String(zk[followerA].getData(node2, null, null)));
         }
     
    +    /**
    +     * It's possibel during SNAP sync, the parent is serialized before the
    +     * child get deleted during sending the snapshot over.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when applying the txns received.
    +     */
    +    @Test
    +    public void testPZxidUpdatedDuringSnapSyncing() throws Exception {
    +        LOG.info(""Enable force snapshot sync"");
    +        System.setProperty(LearnerHandler.FORCE_SNAP_SYNC, ""true"");
    +
    +        final String parent = ""/testPZxidUpdatedWhenDeletingNonExistNode"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[leaderId], parent);
    +        createEmptyNode(zk[leaderId], child);
    +
    +        LOG.info(""shutdown follower {}"", followerA);
    +        mt[followerA].shutdown();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTING);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(leaderId, parent, child);
    +
    +        LOG.info(""Restart follower A to trigger a SNAP sync with leader"");
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    /**
    +     * It's possible during taking fuzzy snapshot, the parent is serialized
    +     * before the child get deleted in the fuzzy range.
    +     *
    +     * In which case, we need to make sure the pzxid get correctly updated
    +     * when replaying the txns.
    +     */
    +    @Test
    +    public void testPZxidUpdatedWhenLoadingSnapshot() throws Exception {
    +
    +        final String parent = ""/testPZxidUpdatedDuringTakingSnapshot"";
    +        final String child = parent + ""/child"";
    +        createEmptyNode(zk[followerA], parent);
    +        createEmptyNode(zk[followerA], child);
    +
    +        LOG.info(""Set up ZKDatabase to catch the node serializing in DataTree"");
    +        addSerializeListener(followerA, parent, child);
    +
    +        LOG.info(""Take snapshot on follower A"");
    +        ZooKeeperServer zkServer = mt[followerA].main.quorumPeer.getActiveServer();
    +        zkServer.takeSnapshot();
    +
    +        LOG.info(""Restarting follower A to load snapshot"");
    +        mt[followerA].shutdown();
    +        mt[followerA].start();
    +        QuorumPeerMainTest.waitForOne(zk[followerA], States.CONNECTED);
    +
    +        LOG.info(""Check and make sure the pzxid of the parent is the same "" +
    +                ""on leader and follower A"");
    +        compareStat(parent, leaderId, followerA);
    +    }
    +
    +    private void addSerializeListener(int sid, String parent, String child) {
    +        final ZooKeeper zkClient = zk[followerA];
    +        CustomDataTree dt =
    +                (CustomDataTree) mt[sid].main.quorumPeer.getZkDb().getDataTree();
    +        dt.addListener(parent, new NodeSerializeListener() {
    +            @Override
    +            public void nodeSerialized(String path) {
    +                try {
    +                    zkClient.delete(child, -1);
    +                    LOG.info(""Deleted the child node after the parent is serialized"");
    +                } catch (Exception e) {
    +                    LOG.error(""Error when deleting node {}"", e);
    +                }
    +            }
    +        });
    +    }
    +
    +    private void compareStat(String path, int sid, int compareWithSid) throws Exception {
    +        Stat stat1 = new Stat();
    +        zk[sid].getData(path, null, stat1);
    +
    +        Stat stat2 = new Stat();
    +        zk[compareWithSid].getData(path, null, stat2);
    --- End diff --
    
    I made a comment on that before sending this diff out, I was trying to hear the opinion before making the test change here. Seems we agreed on not using RetryRule, I'll improve this test class.
;28/Sep/18 21:56;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/647#discussion_r221391402
  
    --- Diff: src/java/main/org/apache/zookeeper/server/DataTree.java ---
    @@ -527,6 +527,24 @@ public void deleteNode(String path, long zxid)
             int lastSlash = path.lastIndexOf('/');
             String parentName = path.substring(0, lastSlash);
             String childName = path.substring(lastSlash + 1);
    +
    +        // The child might already be deleted during taking fuzzy snapshot,
    +        // but we still need to update the pzxid here before throw exception
    +        // for no such child
    +        DataNode parent = nodes.get(parentName);
    +        if (parent == null) {
    +            throw new KeeperException.NoNodeException();
    +        }
    +        synchronized (parent) {
    +            parent.removeChild(childName);
    +            // Only update pzxid when the zxid is larger than the current pzxid,
    +            // otherwise we might override higher pzxid set by a following create 
    +            // Txn, which could cause the cversion and pzxid inconsistent
    +            if (zxid > parent.stat.getPzxid()) {
    --- End diff --
    
    This is a new bug I found recently, the previous change in ZOOKEEPER-3125 has a bug which could revert pzxid. Given it's a known issue in that Jira, I think it's reasonable to fix it in the same patch here before porting back to 3.5.
;28/Sep/18 22:00;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @anmolnar it's not fixing multiple issues but the same in ZOOKEEPER-3125, the fix on master has bug we found recently, I think we should include this when port back to 3.5
;28/Sep/18 22:01;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @anmolnar here is the scenario shows why the previous fix on master has problem:
    
    1. parent A is in it's parent's serializing list
    2. before it's being serialized, child 1 was deleted in txn T1, and child 2 was created in txn T2
    3. when parent A is serialized, it's cversion and pzxid is already updated correctly by T2
    4. when reloading from disk, T1 will update the pzxid and left cversion there
    5. T2 checked the node, and it's already there, then it goes to the patching process, and it found the parent's cversion is already up to date and skipped patching it, which leaves the pzxid in stale state
;28/Sep/18 22:23;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @lvfangmin Got it. Fine. Go ahead please. Just make sure that all patches go under the same Jira, so that they couldn't get lost.
;01/Oct/18 14:07;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    I'll commit this once the testing part is finalized.
;01/Oct/18 14:08;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @anmolnar @hanm I added a junit retry rule class to retry with specific exception, currently I only use it to catch the connection loss exception in FuzzySnapshotRelatedTest, we can use this in other tests if there is similar issue.
    
    If this looks good to you I'll add it to 3.6 as well.
;02/Oct/18 05:37;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2304/

;02/Oct/18 05:53;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    >>  I added a junit retry rule class to retry with specific exception
    
    LGTM, thanks @lvfangmin 
;04/Oct/18 22:51;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2376/

;06/Oct/18 07:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @lvfangmin Given that I've already provided a fix for the flakyness in #657 , do we still need this retry rule?
;08/Oct/18 10:30;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    I remember I commented in Jira ZOOKEEPER-3157, not sure why it didn't show up. 
    
    I mentioned that we still need RetryRule, because there might be temporary quorum unstable issues like what we found on our test environment. The quorum set up in the test might be down due to leader election in case there is heavy load/limited resources on that test environment. We have seen this happened internally, so it's better to have retry for ConnectionLoss in this case.
;09/Oct/18 01:32;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2389/

;09/Oct/18 05:37;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    retest this please
;16/Oct/18 15:10;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2454/

;16/Oct/18 15:11;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2458/

;16/Oct/18 15:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    I still have bad feelings about introducing `RetryRule` in this patch. I haven't seen connectionLoss errors recently on the builds, neither on this patch after the fix and not sure it's a good thing to introduce it on an ad-hoc basis. Given that this 3.5.
    @hanm What are your thoughts?
;16/Oct/18 15:55;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @anmolnar I can understand your concern, let's remove the RetryRule for now, we can add it when necessary.
;19/Oct/18 04:21;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2474/

;19/Oct/18 04:39;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    I think we can add Retry rules as long as the cause of the flaky is clear (e.g. this case, since ConnectionLoss is a well known flaky cause); what I worried previously was to apply it unanimously without analyzing the actual cause. 
;19/Oct/18 04:48;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @anmolnar what's your opinion with @hanm 's reply?
;22/Oct/18 19:35;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @lvfangmin Sounds acceptable.
    If the flaky cannot be fixed with my suggestion (waiting for client to disconnect), let's put the retry back in.
    I'll commit afterwards. Thanks.
;26/Oct/18 10:27;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    retest this please
;26/Oct/18 10:28;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2518/

;26/Oct/18 16:35;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    @anmolnar should we get this in?
;08/Nov/18 18:29;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    Merged. Thanks @lvfangmin !
;08/Nov/18 18:56;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/647
  
    Merged, close this PR.
;12/Nov/18 07:55;githubbot;600","Github user lvfangmin closed the pull request at:

    https://github.com/apache/zookeeper/pull/647
;12/Nov/18 07:55;githubbot;600","GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/701

    [ZOOKEEPER-3125] Only patching the pzxid when it's larger than the current pzxid

    This previous fix in #605 has a corner case which might revert the pzxid, it's being fixed when port to 3.5 in #647, update on master as well.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3125-Update

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/701.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #701
    
----
commit e74895f08a923450e8eb95a81abf0c703d505050
Author: Fangmin Lyu <fangmin@...>
Date:   2018-11-15T00:43:42Z

    Only patching the pzxid when it's larger than the current pzxid

----
;15/Nov/18 00:47;githubbot;600",,,,,,,,,,,,,,,,,,,,,,0,34200,,,0,34200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Dec 20 16:52:59 UTC 2018,,,,,,,,,,"0|i3x8if:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Aug/18 06:56;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 7 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2083//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2083//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2083//console

This message is automatically generated.;;;","11/Sep/18 18:14;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2151//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2151//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2151//console

This message is automatically generated.;;;","12/Sep/18 09:11;andor;Scoped to 3.5 branch too.;;;","12/Sep/18 13:33;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #188 (See [https://builds.apache.org/job/ZooKeeper-trunk/188/])
ZOOKEEPER-3125: Fixing pzxid consistent issue when replaying a txn for a (andor: rev 6651a126cd85ced8b26786875b81be140ad97c80)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/FuzzySnapshotRelatedTest.java
* (edit) src/java/main/org/apache/zookeeper/server/DataTree.java
;;;","08/Nov/18 18:56;andor;Issue resolved by pull request 647
[https://github.com/apache/zookeeper/pull/647];;;","20/Dec/18 16:52;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #317 (See [https://builds.apache.org/job/ZooKeeper-trunk/317/])
ZOOKEEPER-3125: Only patching the pzxid when it's larger than the (fangmin: rev db53d02869faa7c9819689315daa3933125c89a8)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/DataTree.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/DataTreeTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DELETE - test,ZOOKEEPER-3121,13179020,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,flukezaa1,flukezaa1,15/Aug/18 08:19,21/Aug/18 16:53,13/Jul/23 09:08,15/Aug/18 08:20,,,,,,,,,,,,,,,,,,,0,,,,,flukezaa1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2018-08-15 08:19:48.0,,,,,,,,,,"0|i3x25b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DELETE - test,ZOOKEEPER-3119,13178767,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,flukezaa1,flukezaa1,14/Aug/18 04:51,21/Aug/18 16:53,13/Jul/23 09:08,15/Aug/18 08:12,,,,,,,,,,,,,,,build,jmx,kerberos,,0,,,test,,flukezaa1,riza,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,2018-08-14 04:51:51.0,,,,,,,,,,"0|i3x0l3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Correct the LeaderBean.followerInfo to only return the followers list,ZOOKEEPER-3117,13178444,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,lvfangmin,lvfangmin,lvfangmin,11/Aug/18 20:58,17/Aug/18 13:40,13/Jul/23 09:08,17/Aug/18 12:40,,,,,,,,,,3.6.0,,,,,quorum,,,,0,pull-request-available,,"The LeaderBean.followerInfo are returning all the learners, which includes the observers, it's not only followers, correct it to match the name.",,andor,hudson,lvfangmin,,,,,,,,,,,,,,,,,"GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/595

    [ZOOKEEPER-3117] Correct the LeaderBean.followerInfo to only return the followers list

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3117

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/595.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #595
    
----
commit 2021e1fe68f206871282197eb8c813d68223e810
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-08-11T21:40:40Z

    Correct LeaderBean.followerInfo to only return followers

----
;11/Aug/18 21:41;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/595
;17/Aug/18 12:40;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/595
  
    Committed to master. Thanks @lvfangmin !
;17/Aug/18 12:40;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Aug 17 13:40:21 UTC 2018,,,,,,,,,,"0|i3wylj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Aug/18 21:59;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2042//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2042//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2042//console

This message is automatically generated.;;;","17/Aug/18 12:40;andor;Issue resolved by pull request 595
[https://github.com/apache/zookeeper/pull/595];;;","17/Aug/18 13:40;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #154 (See [https://builds.apache.org/job/ZooKeeper-trunk/154/])
ZOOKEEPER-3117: Correct the LeaderBean.followerInfo to only return the (andor: rev 290f1fc4b907c7d51ec81985e87ef46b8528b8f7)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/LeaderBeanTest.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java
* (edit) src/java/main/org/apache/zookeeper/server/admin/Commands.java
* (edit) src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EphemeralType.get() fails to verify ephemeralOwner when currentElapsedTime() is small enough,ZOOKEEPER-3113,13177431,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,andor,andor,andor,07/Aug/18 14:58,04/Oct/19 14:55,13/Jul/23 09:08,18/Oct/18 09:19,3.5.4,3.6.0,,,,,,,,3.5.5,3.6.0,,,,server,,,,1,pull-request-available,ttl_nodes,"EphemeralTypeTest.testServerIds() unit test fails on some systems that System.nanoTime() is smaller than a certain value.

The test generates ephemeralOwner in the old way (pre ZOOKEEPER-2901) without enabling the emulation flag and asserts for exception to be thrown when serverId == 255. This is right. ZooKeeper should fail on this case, because serverId cannot be larger than 254 if extended types are enabled. In this case ephemeralOwner with 0xff in the most significant byte indicates an extended type.

The logic which does the validation is in EphemeralType.get().

It checks 2 things:
 * the extended type byte is set: 0xff,
 * reserved bits (next 2 bytes) corresponds to a valid extended type.

Here is the problem: currently we only have 1 extended type: TTL with value of 0x0000 in the reserved bits.

Logic expects that if we have anything different from it in the reserved bits, the ephemeralOwner is invalid and exception should be thrown. That's what the test asserts for and it works on most systems, because the timestamp part of the sessionId usually have some bits in the reserved bits as well which eventually will be larger than 0, so the value is unsupported.

I think the problem is twofold:
 * Either if we have more extended types, we'll increase the possibility that this logic will accept invalid sessionIds (as long as reserved bits indicate a valid extended type),
 * Or (which happens on some systems) if the currentElapsedTime (timestamp part of sessionId) is small enough and doesn't occupy reserved bits, this logic will accept the invalid sessionId.

Unfortunately I cannot repro the problem yet: it constantly happens on a specific Jenkins slave, but even with the same distro and same JDK version I cannot reproduce the same nanoTime() values.",,andor,hudson,maoling,riza,,,,,,,,,,,,,,,,"GitHub user anmolnar opened a pull request:

    https://github.com/apache/zookeeper/pull/651

    ZOOKEEPER-3113 EphemeralType.get() fails to verify ephemeralOwner when currentElapsedTime() is small enough

    I refactored the unit test `testServerIds` to verify server id verification code explicitly instead of through `EphemeralType.get()` method. 
    
    Reasons:
    - The original test doesn't work on machines which booted recently, because the generated `Time.currentElapsedTime()` value is not high enough and it's possible to generate a valid ephemeralOwner even with high 0xff byte. Server ID cannot be verified reliably this way.
    - EphemeralType.get() is already covered in other unit tests,  
    - Unit tests should test the smallest piece of logic and call the method under testing directly.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-3113

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/651.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #651
    
----
commit 659fc9a4158fed6a6c9eaca8b6725bdbdb9435c0
Author: Andor Molnar <andor@...>
Date:   2018-10-01T14:42:02Z

    ZOOKEEPER-3113. Refactored unit test to validate server Id verification code explicitly

----
;01/Oct/18 14:48;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2298/

;01/Oct/18 15:07;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    Thanks folks for the review. 
    Need approval from a committer. @hanm ?
;02/Oct/18 08:53;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    @hanm No problem. I'll write some new tests to validate the edge cases of `EphemeralType.get()`.
;03/Oct/18 08:48;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2334/

;03/Oct/18 10:24;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;03/Oct/18 14:37;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2336/

;03/Oct/18 14:51;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2382/

;08/Oct/18 13:15;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;10/Oct/18 08:28;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    @hanm do you accept this patch with my recent changes?
;10/Oct/18 08:28;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2406/

;10/Oct/18 08:53;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;10/Oct/18 10:34;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2411/

;10/Oct/18 10:59;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;12/Oct/18 08:38;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2423/

;12/Oct/18 10:02;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;12/Oct/18 11:52;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2425/

;12/Oct/18 12:16;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;13/Oct/18 19:52;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2428/

;13/Oct/18 20:09;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    @hanm do you still -1 this?
;15/Oct/18 09:19;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    retest this please
;16/Oct/18 10:23;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2447/

;16/Oct/18 11:47;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/651
;18/Oct/18 09:19;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    Committed. Thanks for the reviews.
    @hanm If you still do have any concerns, please let me know, I'll address them in a separate patch.
;18/Oct/18 09:19;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    one comment - it would be good for the updated test of EphemeralType.get to cover the code path of throwing an IllegalArgumentException. This was what I referred to in my original comment about reduced code coverage, because neither of the new tests actually tests the presence of this exception under certain conditions.
;19/Oct/18 04:51;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    @hanm According to Clover report:
    https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-clover/184/clover-report/org/apache/zookeeper/server/EphemeralType.html
    The method in question (line 178) is already covered by `testEphemeralOwner_extendedFeature_extendedTypeUnsupported()`. (introduced in this patch)
    What else do we need here? 
;24/Oct/18 11:04;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/651
  
    LGTM. Did not notice the newly added method was actually covering that code path. Thanks @anmolnar for following up!
;25/Oct/18 02:20;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Oct 18 16:12:47 UTC 2018,,,,,,,,,,"0|i3wscf:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/18 14:58;andor;[~randgalt] [~phunt]

I believe you guys are interested in this.;;;","07/Aug/18 15:19;andor;Finally I've managed to repro the issue:

System.nanoTime() is calculated from system uptime, so the bug occurs with freshly booted machines as long as the value is small enough.;;;","19/Aug/18 11:54;maoling;[~andor]

yes.the Jenkins has complained about this

https://builds.apache.org/job/ZooKeeper_branch35_jdk8/1033/;;;","18/Oct/18 09:19;andor;Issue resolved by pull request 651
[https://github.com/apache/zookeeper/pull/651];;;","18/Oct/18 11:10;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #23 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/23/])
ZOOKEEPER-3113: EphemeralType.get() fails to verify ephemeralOwner when (andor: rev 5c85a236c9eb0805ea8389a52dab3b1bc0efadac)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/Emulate353TTLTest.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/EphemeralTypeTest.java
;;;","18/Oct/18 16:12;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #238 (See [https://builds.apache.org/job/ZooKeeper-trunk/238/])
ZOOKEEPER-3113: EphemeralType.get() fails to verify ephemeralOwner when (andor: rev 5c85a236c9eb0805ea8389a52dab3b1bc0efadac)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/EphemeralTypeTest.java
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/server/Emulate353TTLTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fd leak due to UnresolvedAddressException on connect.,ZOOKEEPER-3112,13177276,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,,w.vela,w.vela,07/Aug/18 00:46,10/Sep/20 10:43,13/Jul/23 09:08,28/Jul/20 08:42,3.4.13,3.5.4,,,,,,,,3.5.9,3.6.2,3.7.0,,,java client,,,,4,pull-request-available,,"if connecting domain fail to resolve and lead an UnresolvedAddressException, it would leak the fd.",,matan_a,mkedwards,riza,symat,w.vela,zhangzs,,,,,,,,,,,,,,"GitHub user PhantomThief opened a pull request:

    https://github.com/apache/zookeeper/pull/592

    ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on conn…

    …ect.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PhantomThief/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/592.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #592
    
----
commit 9ddf17813efd4a771b697a7883a1fbafe13b6ccd
Author: w.vela <wangtianzhou@...>
Date:   2018-08-07T00:47:03Z

    ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on connect.

----
;07/Aug/18 00:48;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/592
  
    Nice catch @PhantomThief 
    Do you think writing a unit test would worth to cover the issue?
;07/Aug/18 04:41;githubbot;600","Github user PhantomThief commented on the issue:

    https://github.com/apache/zookeeper/pull/592
  
    @anmolnar a bad news is, after my test case, it won't fix the fd leak...so I'm adding an another patch.
;08/Aug/18 07:10;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/592#discussion_r208814126
  
    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java ---
    @@ -280,10 +281,14 @@ void registerAndConnect(SocketChannel sock, InetSocketAddress addr)
         
         @Override
         void connect(InetSocketAddress addr) throws IOException {
    +        // if UnresolvedAddressException throw on connect and it would leak a SocketChannelImpl in cancelledKeys EVERY time.
    +        // it's hard to deal all situations on socks.cancel,
    +        // while an easy way is, ensure DNS resolve successful before register channel.
    +        InetAddress.getByName(addr.getHostName());
    --- End diff --
    
    Can you help me understand why sock.close won't clean up the fd?
    
    If we have to check before register, I would suggest to use explicit check here, like:
    
        if (addr.isUnresolved()) {
            throw new UnresolvedAddressException();
        }
    

;09/Aug/18 06:01;githubbot;600","brandon-miles commented on issue #592: ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on conn…
URL: https://github.com/apache/zookeeper/pull/592#issuecomment-488721187
 
 
   We were recently bitten by this.  Is there any reason why the original commit was updated?  It seemed like that was the right fix.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/May/19 15:35;githubbot;600","maoling commented on issue #592: ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on conn…
URL: https://github.com/apache/zookeeper/pull/592#issuecomment-489382498
 
 
   @PhantomThief 
   Can we move on ?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/May/19 02:34;githubbot;600","PhantomThief commented on issue #592: ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on conn…
URL: https://github.com/apache/zookeeper/pull/592#issuecomment-490107815
 
 
   > @PhantomThief
   > Can we move on ?
   
   I'm sorry that this patch cannot resolve this problem. I'm trying to make another patch.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;07/May/19 14:38;githubbot;600","anmolnar commented on issue #592: ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on conn…
URL: https://github.com/apache/zookeeper/pull/592#issuecomment-493084748
 
 
   Due to @PhantomThief 's comment, I'm closing this PR.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 14:13;githubbot;600","anmolnar commented on pull request #592: ZOOKEEPER-3112: fix fd leak due to UnresolvedAddressException on conn…
URL: https://github.com/apache/zookeeper/pull/592
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;16/May/19 14:13;githubbot;600","saltos opened a new pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410


   SocketChannel.connect() can throw different kind of exceptions but ClientCnxnSocketNIO.connect() handles only IOException. This could lead to FD leak when socked is opened but is not connected. We should handle some additional exception classes and close the socket.


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 08:23;githubbot;600","eolivelli commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-663560002


   @symat @anmolnar PTAL
   
   @hanm you may be interested as well


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 14:15;githubbot;600","saltos commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-663588117


   Jenkins build failed with an error ""FATAL: Remote call on H14 failed"". Could you rebuild please?


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 15:13;githubbot;600","eolivelli commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-663591186


   retest maven build


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 15:19;githubbot;600","eolivelli commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-663591596


   btw we are having troubles on CI, don't worry about that, your patch is in good shape, we will commit it as soon as we are ready.
   I also would like to ship it in 3.6.2 release.
   You can follow the discussion on dev@zookeeper.apache.org ML


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 15:20;githubbot;600","saltos commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-663630805


   Thank you!


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;24/Jul/20 16:46;githubbot;600","asfgit closed pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410


   


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 07:33;githubbot;600","hanm commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-665351308


   somewhat late but this LGTM


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 07:35;githubbot;600","symat commented on pull request #1410:
URL: https://github.com/apache/zookeeper/pull/1410#issuecomment-664871548


   I pushed it to all active branches (master, branch-3.6 and branch-3.5). Thanks @saltos for the fix! :)


----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;29/Jul/20 07:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,600,0,10800,"1,800%",600,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Aug/18 00:46;w.vela;patch.diff;https://issues.apache.org/jira/secure/attachment/12934567/patch.diff",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Tue Jul 28 08:42:39 UTC 2020,,,,,,,,,,"0|i3wrdz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"07/Aug/18 01:06;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2031//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2031//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2031//console

This message is automatically generated.;;;","08/Aug/18 09:29;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2037//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2037//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2037//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2037//console

This message is automatically generated.;;;","22/Nov/18 00:54;mkedwards;Fix needed for 3.5.5?;;;","28/Jul/20 08:42;symat;Issue resolved by pull request 1410
[https://github.com/apache/zookeeper/pull/1410];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Character coding problem occur when create a node using python3,ZOOKEEPER-3105,13174828,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,lordofkey,lordofkey,26/Jul/18 12:53,16/Oct/19 18:59,13/Jul/23 09:08,30/Jul/18 01:22,3.4.14,3.5.0,3.6.0,,,,,,,3.4.15,3.5.6,3.6.0,,,contrib,,,,0,,,"when creating a node using python3,  InvalidACLException occurs all the time. it`s caused by imcompatible way of parsing acl passed through python3 api.",linux,eribeiro,hudson,lordofkey,maoling,riza,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed Jun 19 09:19:01 UTC 2019,,,,,,,,,,"0|i3wckv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Jul/18 14:16;eribeiro;Could you please post a code snippet that reproduces this error?

Best,

Edward;;;","26/Jul/18 15:43;lordofkey;{code:java}
import zookeeper

zk=zookeeper.init(""localhost:2181"")
stat, acl = zookeeper.get_acl(zk, ""/"")
zookeeper.create(zk, ""/zk_imagesearch1"", ""fs"", acl, 0)
{code};;;","26/Jul/18 16:19;maoling;[~lordofkey]

It's a zkpython snippet which cannot reproduce this error after I test.

The validity of ACL parameters (e.g. must be an ASCII string) should be checked in your client side.

 ;;;","27/Jul/18 01:35;lordofkey;[~maoling]

do you test it on python3?

in my test, python2 is ok, and the error allways occurs in python3. in python3 there is no type of ASCII string

the solution has been pushed on github [https://github.com/apache/zookeeper/pull/585]  ;;;","27/Jul/18 03:44;maoling;[~lordofkey]

sorry I test it with python2.will test with python3 later.

some problem with PR-585.The contributor guide is [here]([https://cwiki.apache.org/confluence/display/ZOOKEEPER/HowToContribute])]

BTW,you can try to use *kazoo* when python3 don't work(:D);;;","19/Jun/19 07:35;hudson;FAILURE: Integrated in Jenkins build Zookeeper-trunk-single-thread #410 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/410/])
ZOOKEEPER-3105: Character coding problem occur when create a node using (phunt: rev 52dcf72b0a035116f83431e30c7acf7301982a28)
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/c/zookeeper.c
;;;","19/Jun/19 09:19;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #575 (See [https://builds.apache.org/job/ZooKeeper-trunk/575/])
ZOOKEEPER-3105: Character coding problem occur when create a node using (phunt: rev 52dcf72b0a035116f83431e30c7acf7301982a28)
* (edit) zookeeper-contrib/zookeeper-contrib-zkpython/src/c/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential data inconsistency due to NEWLEADER packet being sent too early during SNAP sync,ZOOKEEPER-3104,13174407,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,lvfangmin,lvfangmin,lvfangmin,25/Jul/18 16:27,09/Dec/19 21:24,13/Jul/23 09:08,03/Aug/18 16:53,3.4.13,3.5.4,3.6.0,,,,,,,3.5.5,3.6.0,,,,server,,,,0,pull-request-available,,"Currently, in SNAP sync, the leader will start queuing the proposal/commits and the NEWLEADER packet before sending over the snapshot over wire. So it's possible that the zxid associated with the snapshot might be higher than all the packets queued before NEWLEADER.
 
When the follower received the snapshot, it will apply all the txns queued before NEWLEADER, which may not cover all the txns up to the zxid in the snapshot. After that, it will write the snapshot out to disk with the zxid associated with the snapshot. In case the server crashed after writing this out, when loading the data from disk, it will use zxid of the snapshot file to sync with leader, and it could cause data inconsistent, because we only replayed partial of the historical data during previous syncing.
 
NEWLEADER packet means the learner now has the correct and almost up to data state as leader, so it makes more sense to move the NEWLEADER packet after sending over snapshot, and this is what we did in the fix.
 
Besides this, the socket timeout is changed to use smaller sync timeout after received NEWLEADER ack, in high write traffic ensembles with large snapshot, the follower might be timed out by leader before finishing sending over those queued txns after writing snapshot out, which could cause the follower staying in syncing state forever. Move the NEWLEADER packet after sending over snapshot can avoid this issue as well.",,abhishek.chouhan,andor,apurtell,bkanivets,breed,hanm,hudson,kezhuw,lvfangmin,mirg,riza,suyogmapara,yfx416,,,,,,,"GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/583

    [ZOOKEEPER-3104] Fix data inconsistency due to NEWLEADER being sent too early

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3104

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/583.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #583
    
----
commit 8f181934cecb07350c5b1b50b00f460ad071af6c
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-07-25T16:48:38Z

    Fix potential data inconsistency due to NEWLEADER packet being sent too early during SNAP sync

----
;26/Jul/18 01:52;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/583
  
    @nkalmar I can remove the white space in this diff, it do looks much cleaner after we remove the space though. 
    
    Do you know how often we need to ask people to format their code (remove the extra white space change, etc), maybe we should unify the format of coding and have a one time format to avoid this issue in the future.
    
    Please use ""Hide whitespace changes"" when reviewing the code before I removed those white space change.
;26/Jul/18 15:57;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/583
  
    @lvfangmin discard your vim,embrace IEDA(smirk)
;26/Jul/18 16:06;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/583
  
    @nkalmar i think fixing whitespace is good if it is in proximity of the code you are changing, which i think is the case in this diff.
    
    the logic looks good to me! thanx @lvfangmin !
    
    +1
;27/Jul/18 04:28;githubbot;600","Github user nkalmar commented on the issue:

    https://github.com/apache/zookeeper/pull/583
  
    It's not a blocker for me, I agree it would be nice to have a unified format, but that's pretty hard to achieve on an Apache I think :( 
    
    Anyway, that's why I wrote a ""comment"" review, not a request for change.
    
    Thanks for the fix @lvfangmin ! :)
;27/Jul/18 10:21;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/583
  
    ok @lvfangmin i'll commit this once the conflict is resolved.
;28/Jul/18 02:43;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/583
  
    Thanks @breed, the conflict is resolved.
;31/Jul/18 06:29;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/583
;03/Aug/18 16:53;githubbot;600","GitHub user lvfangmin opened a pull request:

    https://github.com/apache/zookeeper/pull/685

    [ZOOKEEPER-3104] Fix potential data inconsistency due to NEWLEADER packet being sent too early during SNAP sync

    Port this fix from master to 3.5.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-3104-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/685.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #685
    
----
commit 5703e334a1a775b9f8342409924fc3247475aa81
Author: Fangmin Lyu <allenlyu@...>
Date:   2018-11-02T20:08:07Z

    Fix potential data inconsistency due to NEWLEADER packet being sent too early during SNAP sync

----
;02/Nov/18 20:10;githubbot;600","Github user asfgit commented on the issue:

    https://github.com/apache/zookeeper/pull/685
  
    
    Refer to this link for build results (access rights to CI server needed): 
    https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2570/

;02/Nov/18 20:34;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/685
  
    This is merged. Thanks @lvfangmin !
    Please close this PR.
;06/Nov/18 18:33;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/685
  
    Thanks Andor, I'll close this one.
;08/Nov/18 18:27;githubbot;600","Github user lvfangmin closed the pull request at:

    https://github.com/apache/zookeeper/pull/685
;08/Nov/18 18:27;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Dec 09 21:24:41 UTC 2019,,,,,,,,,,"0|i3w9zj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Aug/18 16:53;breed;Issue resolved by pull request 583
[https://github.com/apache/zookeeper/pull/583];;;","03/Aug/18 17:46;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #133 (See [https://builds.apache.org/job/ZooKeeper-trunk/133/])
ZOOKEEPER-3104: Fix data inconsistency due to NEWLEADER being sent too (breed: rev 148c2cd6ba73e66b1879a2e10ecda4ce4e0e2c7b)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java
;;;","10/Aug/18 15:57;andor;[~breed] [~lvfangmin]

Given that this is a critical bug in 3.4 and 3.5 why have you committed to trunk only?;;;","11/Aug/18 19:38;lvfangmin;[~andor] I think [~breed] is planning to port this to other branch as well. Ben, it should be trivial to port this from 3.6 to 3.5, let me know if it needs more effort to port to 3.4, I can send out another patch to 3.4 if it takes more effort (mostly for testing I think).;;;","12/Sep/18 08:57;andor;Thanks [~lvfangmin]

We don't get too many (maybe not at all) data inconsistency reports with 3.4, so I would say fixing this in 3.5 additionally would be beneficial for us.;;;","22/Oct/19 07:27;yfx416;Actually it indeed exists in 3.4.13.

In our 3.4.13 cluster, the data inconsistency happens often.

After dig some txn logs and snapshot, I think ZOOKEEPER-3104 indeed contributes our data inconsistency in our product environment.

We already backport it in our internal fork.  I will open another issue for 3.4-branch and contribute our patch.

Hope someone can help review the backport;;;","07/Nov/19 02:47;mirg;We are using zk 3.5.5, and seem to have run twice into potential fallout from the fix itself.

If the leader crashes after sending a SNAP sync to a learner, but before sending the NEWLEADER message, the learner will not save the snapshot to disk. But it will advance its lastProcessedZxid to that from the snapshot (call it Zxid X)

A new leader will get elected, and it will resync our learner again immediately. But this time, it will use the incremental DIFF method, starting from Zxid X. A DIFF-based resync does not trigger snapshots, so the learner is still holding the original snapshot purely in memory. If the learner restarts after that, it will silently lose all the data up to Zxid X.

An easy way to reproduce is to insert System.exit into LearnerHandler.java right before sending the NEWLEADER message (on the one instance that is currently running the leader, but not the others):
{noformat}
             LOG.debug(""Sending NEWLEADER message to "" + sid);
+            if (leader.self.getId() == 1 && sid == 3) {
+               LOG.debug(""Bail when server.1 resyncs server.3"");
+               System.exit(0);
+            }{noformat}
A crude fix that appears to work is to defer setting lastProcessedZxid in Learner.java until it receives NEWLEADER and decides to actually persist the snap. Could someone comment on whether this is a valid approach?
{noformat}
                     LOG.error(""Missing signature. Got "" + signature);
                     throw new IOException(""Missing signature"");                   
                 }
-                zk.getZKDatabase().setlastProcessedZxid(qp.getZxid());
+                LOG.info(""Got the snapshot, but not setting lastProcessedZxid to "" + qp.getZxid());
             } else if (qp.getType() == Leader.TRUNC) {
                 //we need to truncate the log to the lastzxid of the leader
                 LOG.warn(""Truncating log to get in sync with the leader 0x""
@@ -555,6 +555,10 @@ else if (qp.getType() == Leader.SNAP) {
                    }
 
                    if (snapshotNeeded) {
+                       LOG.info(""Changing lastProcessedZxid from "" +
+                                zk.getZKDatabase().getDataTreeLastProcessedZxid() + "" to "" +
+                                qp.getZxid());
+                       zk.getZKDatabase().setlastProcessedZxid(qp.getZxid());
                        zk.takeSnapshot();
                    }
{noformat};;;","08/Nov/19 06:13;mirg;> We are using zk 3.5.5, and seem to have run twice into potential fallout from the fix itself.

Looking at it some more, the behavior we observed is not a fallout from the ZOOKEEPER-3104 fix. A similar problem existed even before. The NEWLEADER packet used to be added to queuedPackets before serializing the snapshot, but it was still being sent afterwards, in startSendingPackets.

So crashing the leader right before startSendingPackets would achieve the same effect. The learner would receive the snapshot, but not the NEWLEADER packet. It would not persist the snapshot to disk, but still advance lastProcessedZxid. Resyncing with a new leader would then be done via Diff, and the data from the original snapshot will remain purely in memory and unprotected.;;;","09/Dec/19 20:10;apurtell;Is there a JIRA open somewhere to address the issues mentioned at the tail of this one? ;;;","09/Dec/19 21:24;mirg;> Is there a JIRA open somewhere to address the issues mentioned at the tail of this one?

I've just opened [ZOOKEEPER-3642|https://issues.apache.org/jira/browse/ZOOKEEPER-3642] and copied that comment there, but provided a different workaround (It seems safe, but is still not the ideal way to fix it).;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
sync zerror(int rc) with newest error definitions,ZOOKEEPER-3093,13173018,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,sl4mmy,sl4mmy,sl4mmy,18/Jul/18 19:52,20/May/19 17:51,13/Jul/23 09:08,19/Jul/18 17:32,3.5.4,3.6.0,,,,,,,,3.5.5,3.6.0,,,,c client,,,,0,pull-request-available,,Add missing #define -> string translations to zerror(int),,hudson,sl4mmy,,,,,,,,,,,,,,,,,,"Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/575
  
    +1 
    
    If you have ZOOKEEPER-3093 in title, the pull request will auto linked to the jira.
;19/Jul/18 05:30;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/575
;19/Jul/18 17:29;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/575
  
    +1, LGTM. Nice catch @sl4mmy . Consider submitting a PR to add a comment to the bottom of ZOO_ERRORS warning folks that they should also update zerror(...) if they change/add to the enum.
;19/Jul/18 17:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-3101,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Jul 19 18:54:23 UTC 2018,,,,,,,,,,"0|i3w1fb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jul/18 20:13;sl4mmy;Created GitHub PR https://github.com/apache/zookeeper/pull/575;;;","19/Jul/18 17:32;phunt;Issue resolved by pull request 575
[https://github.com/apache/zookeeper/pull/575];;;","19/Jul/18 18:54;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #111 (See [https://builds.apache.org/job/ZooKeeper-trunk/111/])
ZOOKEEPER-3093: sync zerror with ZOO_ERRORS (phunt: rev 4c12f75a9dd546032eafb2d2840061399c2a6a5e)
* (edit) src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix server snapshot behavior when out of disk space,ZOOKEEPER-3082,13170332,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,enixon,enixon,enixon,05/Jul/18 18:53,04/Oct/19 14:55,13/Jul/23 09:08,30/Jul/18 04:23,3.4.12,3.5.5,3.6.0,,,,,,,3.6.0,,,,,server,,,,0,pull-request-available,,"When the ZK server tries to make a snapshot and the machine is out of disk space, the snapshot creation fails and throws an IOException. An empty snapshot file is created, (probably because the server is able to create an entry in the dir) but is not able to write to the file.
 
If snapshot creation fails, the server commits suicide. When it restarts, it will do so from the last known good snapshot. However, when it tries to make a snapshot again, the same thing happens. This results in lots of empty snapshot files being created. If eventually the DataDirCleanupManager garbage collects the good snapshot files then only the empty files remain. At this point, the server is well and truly screwed.",,andor,enixon,hanm,hudson,,,,,,,,,,,,,,,,"GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/560

    ZOOKEEPER-3082: Fix server snapshot behavior when out of disk space

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-3082

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/560.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #560
    
----
commit 7b6d575c92a076f8f2cb48510f82e3ab840d7c35
Author: Brian Nixon <nixon@...>
Date:   2018-07-05T18:55:42Z

    ZOOKEEPER-3082: Fix server snapshot behavior when out of disk space

----
;05/Jul/18 18:56;githubbot;600","Github user breed commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r200716591
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    this seems extra safe. i'm wondering if perhaps we should always delete the snapshot file on an exception. the snapshot file probably will not be valid if an exception occurred. right?
;06/Jul/18 17:15;githubbot;600","Github user enixon commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r203474532
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    I really like the idea! 
    
    Clearly this patch is aimed at closing one very particular kind of error case around snapshot writing and the idea generalizes to many more errors. My only concern with ""always delete"" is that I do not know how wide a net that casts and whether we might end up deleting a legitimately useful snapshot under some circumstances. Unfortunately, I don't have time to do the testing required to validate the safety of the more general approach.
    
    If that sounds reasonable, I'd propose that we commit on this patch and close the hole created from this particular issue (snapshot problems on no disk space) and I'll open a separate JIRA with details about extending the solution so someone can pick up the issue and do the necessary testing.
;18/Jul/18 17:59;githubbot;600","Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r205659448
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    >> If that sounds reasonable, I'd propose that we commit on this patch and close the hole created from this particular issue
    
    SGTM. @breed - ok with you? If so I'll commit this.
;27/Jul/18 03:35;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/560
  
    +1 i approve. thanx for handling the commit @hanm !
;27/Jul/18 05:11;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/560
;30/Jul/18 04:22;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/560
  
    committed to master. thanks @enixon !
;30/Jul/18 04:24;githubbot;600","Github user enixon commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/560#discussion_r208781421
  
    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---
    @@ -399,8 +399,30 @@ public void save(DataTree dataTree,
             File snapshotFile = new File(snapDir, Util.makeSnapshotName(lastZxid));
             LOG.info(""Snapshotting: 0x{} to {}"", Long.toHexString(lastZxid),
                     snapshotFile);
    -        snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    -
    +        try {
    +            snapLog.serialize(dataTree, sessionsWithTimeouts, snapshotFile, syncSnap);
    +        } catch (IOException e) {
    +            if (snapshotFile.length() == 0) {
    --- End diff --
    
    Created https://issues.apache.org/jira/browse/ZOOKEEPER-3115 to record this idea of deleting the snapshot file on general IOException's and we can continue the conversation there.
;09/Aug/18 01:13;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,4800,,,0,4800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Aug 09 13:08:35 UTC 2018,,,,,,,,,,"0|i3vl5b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jul/18 19:16;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1896//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1896//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1896//console

This message is automatically generated.;;;","30/Jul/18 04:24;hanm;Committed to 3.6. Merge conflicts with branch-3.5, need a separate pull request to get this in 3.5.;;;","30/Jul/18 06:42;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #128 (See [https://builds.apache.org/job/ZooKeeper-trunk/128/])
ZOOKEEPER-3082: Fix server snapshot behavior when out of disk space (hanm: rev 78e4a1047c701006dd4ec8d09065eda0e7adedb5)
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
* (add) src/java/test/org/apache/zookeeper/server/persistence/EmptySnapshotTest.java
;;;","30/Jul/18 20:09;andor;[~nixon] [~hanm]

Thanks for sorting this out. Do you think it fixes ZOOKEEPER-1621?;;;","01/Aug/18 19:27;enixon;[~andor] my (possibly incorrect) read on ZOOKEEPER-1621 is that the issue is related to this one but not strictly a subset. Here we've removed the possibility of the snapshot side of recovery being lost during a disk-full event. There, the issue seems to be in ensuring the transaction log side of recovery is not corrupted by writing empty/incomplete log files. That issue will continue to be present even with the patch from this file applied.;;;","09/Aug/18 13:08;andor;Thanks [~nixon];;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix unsafe use of sprintf(3) for creating IP address strings,ZOOKEEPER-3079,13169921,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,sl4mmy,sl4mmy,sl4mmy,03/Jul/18 20:41,10/Jul/18 19:55,13/Jul/23 09:08,10/Jul/18 11:04,3.5.4,,,,,,,,,3.6.0,,,,,c client,,,,0,pull-request-available,,The function format_endpoint_info in zookeeper.c causes compiler errors when building with GCC 8 due to a potentially unsafe use of sprintf(3).,,hudson,sl4mmy,,,,,,,,,,,,,,,,,,"GitHub user sl4mmy opened a pull request:

    https://github.com/apache/zookeeper/pull/559

    ZOOKEEPER-3079: avoid unsafe use of sprintf(3)

    The function format_endpoint_info declares both addrstr and buf as 128
    element char arrays, however on non-Windows platforms it calls
    sprintf(3) to write into buf the value of addrstr followed by ':'
    followed by the the port number.  This causes a compiler error when
    building with GCC 8 because this could potentially overflow buf if the
    value of addrstr was ever 127 characters long (or a little less
    depending on how many digits are in port).  Of course, this couldn't
    actually happen because addrstr is initialized by inet_ntop(3) which
    won't write more than INET6_ADDRSTRLEN bytes (defined in <netinet/in.h>
    on POSIX-compliant systems).  Of course, GCC doesn't know that, so let's
    just declare addrstr as a char array of only size INET6_ADDRSTRLEN
    instead of 128.
    
    Signed-off-by: Kent R. Spillner <kspillner@acm.org>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sl4mmy/zookeeper zookeeper-3079

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/559.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #559
    
----
commit cb26e2f8d0704e1b5074c3e89c20962c5fc7f7b5
Author: Kent R. Spillner <kspillner@...>
Date:   2018-07-03T20:44:54Z

    ZOOKEEPER-3079: avoid unsafe use of sprintf(3)
    
    The function format_endpoint_info declares both addrstr and buf as 128
    element char arrays, however on non-Windows platforms it calls
    sprintf(3) to write into buf the value of addrstr followed by ':'
    followed by the the port number.  This causes a compiler error when
    building with GCC 8 because this could potentially overflow buf if the
    value of addrstr was ever 127 characters long (or a little less
    depending on how many digits are in port).  Of course, this couldn't
    actually happen because addrstr is initialized by inet_ntop(3) which
    won't write more than INET6_ADDRSTRLEN bytes (defined in <netinet/in.h>
    on POSIX-compliant systems).  Of course, GCC doesn't know that, so let's
    just declare addrstr as a char array of only size INET6_ADDRSTRLEN
    instead of 128.
    
    Signed-off-by: Kent R. Spillner <kspillner@acm.org>

----
;03/Jul/18 21:05;githubbot;600","Github user nkalmar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/559#discussion_r200161012
  
    --- Diff: src/c/src/zookeeper.c ---
    @@ -4357,7 +4357,7 @@ int zoo_add_auth(zhandle_t *zh,const char* scheme,const char* cert,
     static const char* format_endpoint_info(const struct sockaddr_storage* ep)
     {
         static char buf[128] = { 0 };
    -    char addrstr[128] = { 0 };
    +    char addrstr[INET6_ADDRSTRLEN] = { 0 };
    --- End diff --
    
    Isn't this by default 46 as per POSIX? I don't see this overridden in ZK.
;04/Jul/18 15:35;githubbot;600","Github user sl4mmy commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/559#discussion_r200184176
  
    --- Diff: src/c/src/zookeeper.c ---
    @@ -4357,7 +4357,7 @@ int zoo_add_auth(zhandle_t *zh,const char* scheme,const char* cert,
     static const char* format_endpoint_info(const struct sockaddr_storage* ep)
     {
         static char buf[128] = { 0 };
    -    char addrstr[128] = { 0 };
    +    char addrstr[INET6_ADDRSTRLEN] = { 0 };
    --- End diff --
    
    Check and check, it is 46 and ZK does not override it.  I apologize if my wording wasn't clear enough, but the issue that GCC 8 errors on is the fact that buf and addrstr are both size 128, but later on in the call to `sprintf(3)` we write `addrstr + ':' + port` into buf.  GCC 8 sees that buf & addrstr are both potentially 128 characters long, so the `sprintf(3)` could *potentially* overflow buf when it tacks on the colon & port.  Of course, we know that will never happen, but GCC 8 doesn't.  So by resizing the declaration of addrstr we safely avoid any confusion or doubt.
;04/Jul/18 18:12;githubbot;600","Github user nkalmar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/559#discussion_r200190816
  
    --- Diff: src/c/src/zookeeper.c ---
    @@ -4357,7 +4357,7 @@ int zoo_add_auth(zhandle_t *zh,const char* scheme,const char* cert,
     static const char* format_endpoint_info(const struct sockaddr_storage* ep)
     {
         static char buf[128] = { 0 };
    -    char addrstr[128] = { 0 };
    +    char addrstr[INET6_ADDRSTRLEN] = { 0 };
    --- End diff --
    
    OK, thanks for clearing that up. Well, you were clear now that I understand the issue - probably the problem was that I'm not much of a C developer :)
;04/Jul/18 19:16;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/559
  
    +1 thanks for the submission. if there are no objections, i'll commit this tomorrow
;06/Jul/18 17:10;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/559
;10/Jul/18 10:50;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,3600,,,0,3600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 10 12:08:58 UTC 2018,,,,,,,,,,"0|i3vilz:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Jul/18 21:05;sl4mmy;Created GitHub PR: https://github.com/apache/zookeeper/pull/559;;;","03/Jul/18 21:28;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1892//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1892//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1892//console

This message is automatically generated.;;;","10/Jul/18 12:08;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #93 (See [https://builds.apache.org/job/ZooKeeper-trunk/93/])
ZOOKEEPER-3079: avoid unsafe use of sprintf(3) (breed: rev 5d187ff0adc836e6d18fd4c78188f52cdbb56c25)
* (edit) src/c/src/zookeeper.c
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in throttling,ZOOKEEPER-3072,13169167,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,botond.hejj,botond.hejj,botond.hejj,29/Jun/18 14:00,24/Nov/18 19:58,13/Jul/23 09:08,28/Jul/18 02:42,3.5.0,3.5.1,3.5.2,3.5.3,3.5.4,,,,,3.5.4,3.6.0,,,,server,,,,0,pull-request-available,,"There is a race condition in the server throttling code. It is possible that the disableRecv is called after enableRecv.

Basically, the I/O work thread does this in processPacket: [https://github.com/apache/zookeeper/blob/release-3.5.3/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L1102] 

                submitRequest(si);

            }

        }

        cnxn.incrOutstandingRequests(h);

    }

 

incrOutstandingRequests() checks for limit breach, and potentially turns on throttling, [https://github.com/apache/zookeeper/blob/release-3.5.3/src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java#L384]

 

submitRequest() will create a logical request and en-queue it so that Processor thread can pick it up. After being de-queued by Processor thread, it does necessary handling, and then calls this [https://github.com/apache/zookeeper/blob/release-3.5.3/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java#L459] :

 

            cnxn.sendResponse(hdr, rsp, ""response"");

 

and in sendResponse(), it first appends to outgoing buffer, and then checks if un-throttle is needed:  [https://github.com/apache/zookeeper/blob/release-3.5.3/src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java#L708]

 

However, if there is a context switch between submitRequest() and cnxn.incrOutstandingRequests(), so that Processor thread completes cnxn.sendResponse() call before I/O thread switches back, then enableRecv() will happen before disableRecv(), and enableRecv() will fail the CAS ops, while disableRecv() will succeed, resulting in a deadlock: un-throttle is needed for letting in requests, and sendResponse is needed to trigger un-throttle, but sendResponse() requires an incoming message. From that point on, ZK server will no longer select the affected client socket for read, leading to the observed client-side failure in the subject.

If you would like to reproduce this than setting the globalOutstandingLimit down to 1 makes this reproducible easier as throttling starts with less requests. 

 ",,apurtell,botond.hejj,hudson,ryan zang,,,,,,,,,,,,,,,,"GitHub user bothejjms opened a pull request:

    https://github.com/apache/zookeeper/pull/563

    Fix for ZOOKEEPER-3072

    Making the throttle check before passing over the request to the next thread will prevent the possibility of throttling code running after unthrottle
    
    Added an additional async hammer thread which is pretty reliably reproduces the race condition. The globalOutstandingLimit is decreased so throttling code is executed.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bothejjms/zookeeper ZOOKEEPER-3072

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/563.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #563
    
----
commit 0f19de8f8b95992d4e95e3ffa46208c1b12b8cb0
Author: Botond Hejj <botond.hejj@...>
Date:   2018-07-06T14:43:18Z

    Fix for ZOOKEEPER-3072
    Making the throttle check before passing over the request to the next thread will prevent the possibility of throttling code running after unthrottle

----
;06/Jul/18 14:52;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/563#discussion_r200956044
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---
    @@ -1124,6 +1124,7 @@ public void processPacket(ServerCnxn cnxn, ByteBuffer incomingBuffer) throws IOE
                 }
                 return;
             } else {
    +            cnxn.incrOutstandingRequests(h);
    --- End diff --
    
    I have 2 observations here which probably don't make a big difference but might worse to consider.
    - First, the return statements in the if branches are not required anymore, because there's no more statement at the end of the method anymore,
    - Second, moving `cnxn.incrOutstandingRequests(h)` here means that from now on you'll trigger throttling for `sasl` requests too, which was not the case previously. Same for `auth` packets which I believe was done intentionally.
;09/Jul/18 10:36;githubbot;600","Github user bothejjms commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/563#discussion_r200961680
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---
    @@ -1124,6 +1124,7 @@ public void processPacket(ServerCnxn cnxn, ByteBuffer incomingBuffer) throws IOE
                 }
                 return;
             } else {
    +            cnxn.incrOutstandingRequests(h);
    --- End diff --
    
    hmm right. That return was not there in 3.5.3 where I have spotted the issue. I have missed it when I have moved my change to master.
    I see ZOOKEEPER-2785 introduced it. I will update my pr and move incr to the else branch to avoid sasl throttling.
;09/Jul/18 10:59;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    @bothejjms What do you mean by ""pretty reliably"" exactly? 
    I see that the test has failed on Jenkins and also I've tested it and it basically killed my machine for 45 mins which seems to me a little bit overkill. 
    - Could we run the 100 threads in a ThreadPoolExecutor for example and see how it behaves? 
    - Do we need that many threads while setting `globalOutstandingLimit` to 1?
    - Also, I don't want to stick with covering this issue with test, if we could only do it pretty reliably and by introducing a new flaky test. :(
;09/Jul/18 12:24;githubbot;600","Github user bothejjms commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    On ""pretty reliably"" I mean the test has failed for me like 90% of the time with the original code but the result can differ on different machines since it is a race condition. 
    Reproducing race condition in a test is not simple. I am open to suggestions how to do it reliably. Do you recall any other tests for race conditions in the test suite? 
    
    After the fix the test passed on my machine always. I am not sure yet why it fails on jenkins.
    
    For me the test takes 40 sec on my VM which is not particularly strong. I am also not satisfied with this test. I just wanted to prove that the race condition is there. Instead of the test I could add a description on how to reproduce and skip permanent testing for it.

;09/Jul/18 12:45;githubbot;600","Github user nkalmar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/563#discussion_r201258688
  
    --- Diff: src/java/test/org/apache/zookeeper/test/ThrottleRaceTest.java ---
    @@ -0,0 +1,156 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * ""License""); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an ""AS IS"" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.zookeeper.test;
    +
    +import static org.apache.zookeeper.test.ClientBase.CONNECTION_TIMEOUT;
    +import static org.apache.zookeeper.test.ClientBase.verifyThreadTerminated;
    +
    +import org.apache.zookeeper.AsyncCallback.StatCallback;
    +import org.apache.zookeeper.KeeperException;
    +import org.apache.zookeeper.ZKTestCase;
    +import org.apache.zookeeper.TestableZooKeeper;
    +import org.apache.zookeeper.WatchedEvent;
    +import org.apache.zookeeper.data.Stat;
    +import org.apache.zookeeper.test.ClientBase.CountdownWatcher;
    +import org.junit.After;
    +import org.junit.Assert;
    +import org.junit.Before;
    +import org.junit.Test;
    +import org.slf4j.Logger;
    +import org.slf4j.LoggerFactory;
    +
    +public class ThrottleRaceTest extends ZKTestCase {
    +    private static final Logger LOG = LoggerFactory.getLogger(ThrottleRaceTest.class);
    +
    +    private QuorumBase qb = new QuorumBase();
    +
    +    private volatile boolean bang;
    +
    +    public void setUp() throws Exception {
    +        qb.setUp();
    +    }
    +
    +    public void tearDown() throws Exception {
    +        LOG.info(""Test clients shutting down"");
    +        qb.tearDown();
    +    }
    +
    +    /**
    +     * Send exists /zookeeper requests asynchronously, max 30 outstanding
    +     */
    +    class HammerThreadExists extends Thread implements StatCallback {
    +        private static final int MAX_OUTSTANDING = 30;
    +
    +        private TestableZooKeeper zk;
    +        private int outstanding;
    +
    +        private volatile boolean failed = false;
    +
    +        public HammerThreadExists(String name) {
    +            super(name);
    +        }
    +
    +        public void run() {
    +            try {
    +                CountdownWatcher watcher = new CountdownWatcher();
    +                zk = new TestableZooKeeper(qb.hostPort, CONNECTION_TIMEOUT,
    +                        watcher);
    +                watcher.waitForConnected(CONNECTION_TIMEOUT);
    +                while(bang) {
    +                    incOutstanding(); // before create otw race
    +                    zk.exists(""/zookeeper"", false, this, null);
    +                }
    +            } catch (InterruptedException e) {
    +                if (bang) {
    +                    LOG.error(""sanity check Assert.failed!!!""); // sanity check
    +                    return;
    +                }
    +            } catch (Exception e) {
    +                LOG.error(""Client create operation Assert.failed"", e);
    +                return;
    +            } finally {
    +                if (zk != null) {
    +                    try {
    +                        if (!zk.close(CONNECTION_TIMEOUT)) {
    +                            failed = true;
    +                            LOG.error(""Client did not shutdown"");
    +                        }
    +                    } catch (InterruptedException e) {
    +                        LOG.info(""Interrupted"", e);
    +                    }
    +                }
    +            }
    +        }
    +
    +        private synchronized void incOutstanding() throws InterruptedException {
    +            outstanding++;
    +            while(outstanding > MAX_OUTSTANDING) {
    +                wait();
    +            }
    +        }
    +
    +        private synchronized void decOutstanding() {
    +            outstanding--;
    +            Assert.assertTrue(""outstanding >= 0"", outstanding >= 0);
    +            notifyAll();
    +        }
    +
    +        public void process(WatchedEvent event) {
    +            // ignore for purposes of this test
    +        }
    +
    +        public void processResult(int rc, String path, Object ctx, Stat stat) {
    +            if (rc != KeeperException.Code.OK.intValue()) {
    +                if (bang) {
    +                    failed = true;
    +                    LOG.error(""Exists Assert.failed for 0x""
    +                            + Long.toHexString(zk.getSessionId())
    +                            + ""with rc:"" + rc + "" path:"" + path);
    +                }
    +                decOutstanding();
    +                return;
    +            }
    +            decOutstanding();
    +        }
    +    }
    +
    +    @Test
    +    public void testExistsHammer() throws Exception {
    +        System.setProperty(""zookeeper.globalOutstandingLimit"", ""1"");
    +        setUp();
    +        bang = true;
    +        LOG.info(""Starting hammers"");
    +        HammerThreadExists[] hammers = new HammerThreadExists[100];
    +        for (int i = 0; i < hammers.length; i++) {
    +            hammers[i] = new HammerThreadExists(""HammerThread-"" + i);
    +            hammers[i].start();
    +        }
    +        LOG.info(""Started hammers"");
    +        Thread.sleep(30000); // allow the clients to run for max 5sec
    --- End diff --
    
    nit: This is 3 seconds not five as in the comment
;10/Jul/18 08:38;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    @bothejjms Sorry, there's a typo in my previous comment: it was 45 seconds on my machine and it literally killed the entire machine which I think isn't acceptable on Jenkins slaves.
    
    I'd give it a try with ThreadPoolExecutor at the first place and dig into why it's not 100% reliable currently. If there's no success with a few days work, just skip adding test here.
;10/Jul/18 10:10;githubbot;600","Github user bothejjms commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    I have tweaked the test to use significantly less threads and be faster. Unfortunately it still fails on jenkins. :(
    
    I am not sure how ThreadPoolExecutor would help with this. It will spin up the same amount of threads in background, isn't it?
;10/Jul/18 15:48;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    @bothejjms It would spin up only a limited amount of threads, but that wouldn't help either as you said. You literally want 100 clients simultaneously sending request until test stops. `AsyncHammerTest` does pretty much the same, looks like you copied most of the logic implemented in there.
    
    I don't how to do this properly. I suspect `AsyncHammerTest` is also flaky which is another reason why not create another similar test.
;10/Jul/18 20:35;githubbot;600","Github user bothejjms commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    I have removed the test for now as I don't have a good way to test this race condition. I can be reproduced easily by starting a server where the globalOutstandingLimit is 1 and sending a lot exists requests. There is a good chance that one session will stuck in a throttled state despite it has no active requests.
;18/Jul/18 15:54;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    Thanks @bothejjms . I think the patch can be accepted now without the test.
    We need at least one more committer to approve. @hanm @phunt  ?
;19/Jul/18 21:15;githubbot;600","Github user breed commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/563#discussion_r205668951
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---
    @@ -1128,9 +1128,9 @@ public void processPacket(ServerCnxn cnxn, ByteBuffer incomingBuffer) throws IOE
                     Record rsp = processSasl(incomingBuffer,cnxn);
                     ReplyHeader rh = new ReplyHeader(h.getXid(), 0, KeeperException.Code.OK.intValue());
                     cnxn.sendResponse(rh,rsp, ""response""); // not sure about 3rd arg..what is it?
    -                return;
    --- End diff --
    
    it would be nice to keep this return since it matches the handling of the other auth logic above.
    
    it would also be nice if this was an
    
    `} else if (h.getType() == OpCode.sasl) {`
    
    clause and the
    `}
        else {`
    
    was done outside of the if since all the other blocks will have returned. i think it makes the logic easier to follow.
;27/Jul/18 05:09;githubbot;600","Github user bothejjms commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/563#discussion_r205778339
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---
    @@ -1128,9 +1128,9 @@ public void processPacket(ServerCnxn cnxn, ByteBuffer incomingBuffer) throws IOE
                     Record rsp = processSasl(incomingBuffer,cnxn);
                     ReplyHeader rh = new ReplyHeader(h.getXid(), 0, KeeperException.Code.OK.intValue());
                     cnxn.sendResponse(rh,rsp, ""response""); // not sure about 3rd arg..what is it?
    -                return;
    --- End diff --
    
    I have refactored like that.
    Returns are actually unnecessary but I have consistently added them now.
;27/Jul/18 13:48;githubbot;600","Github user bothejjms commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    I have refactored the branches as suggested.
;27/Jul/18 13:50;githubbot;600","Github user breed commented on the issue:

    https://github.com/apache/zookeeper/pull/563
  
    thank you @bothejjms !
;27/Jul/18 15:56;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/563
;28/Jul/18 02:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,9600,,,0,9600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sat Jul 28 03:55:07 UTC 2018,,,,,,,,,,"0|i3vdyn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Jul/18 15:10;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1899//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1899//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1899//console

This message is automatically generated.;;;","06/Jul/18 16:25;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1900//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1900//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1900//console

This message is automatically generated.;;;","09/Jul/18 09:59;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1903//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1903//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1903//console

This message is automatically generated.;;;","09/Jul/18 11:23;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1904//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1904//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1904//console

This message is automatically generated.;;;","10/Jul/18 15:30;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1920//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1920//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1920//console

This message is automatically generated.;;;","10/Jul/18 17:31;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1922//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1922//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1922//console

This message is automatically generated.;;;","18/Jul/18 17:24;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1962//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1962//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1962//console

This message is automatically generated.;;;","19/Jul/18 08:44;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1967//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1967//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1967//console

This message is automatically generated.;;;","28/Jul/18 03:55;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #125 (See [https://builds.apache.org/job/ZooKeeper-trunk/125/])
ZOOKEEPER-3072: Throttle race condition fix (breed: rev 2a372fcdce3c0142c0bb23f06098a2c1a49f807e)
* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
EventThread leak in case of Sasl AuthFailed,ZOOKEEPER-3059,13165377,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,abhishek.chouhan,abhishek.chouhan,abhishek.chouhan,11/Jun/18 17:21,04/Oct/19 14:55,13/Jul/23 09:08,25/Jun/18 10:31,3.4.12,,,,,,,,,3.5.5,3.6.0,,,,,,,,0,pull-request-available,,In case of an authFailed sasl event we shutdown the send thread however we never close the event thread. Even if the client tries to close the connection it results in a no-op since we check for cnxn.getState().isAlive() which results in negative for auth failed state and we return without cleaning up. For applications that retry in case of auth failed by closing the existing connection and then trying to reconnect(eg. hbase replication) this eventually ends up exhausting the system resources.,,abhishek.chouhan,andor,gjacoby,hudson,kezhuw,,,,,,,,,,,,,,,"GitHub user abhishek-chouhan opened a pull request:

    https://github.com/apache/zookeeper/pull/541

    ZOOKEEPER-3059 EventThread leak in case of Sasl AuthFailed

    Since authFailed is similar to session expired and is considered a fatal event, we should clean up after ourselves once we get a AuthFailed, other wise this results in an unavoidable and un-cleanable thread leak  of EventThread since the close operation is also a no-op (we return after checking for isAlive).

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/abhishek-chouhan/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/541.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #541
    
----
commit c1d9d7afe1de246ad32d43032df7bb428fcceae6
Author: Abhishek Singh Chouhan <abhishekchouhan121@...>
Date:   2018-06-11T17:31:42Z

    ZOOKEEPER-3059 EventThread leak in case of Sasl AuthFailed

----
;11/Jun/18 17:36;githubbot;600","Github user abhishek-chouhan commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    @anmolnar Sorry for the delay. Have written a test case for this. Do have a look.
;22/Jun/18 03:21;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    @abhishek-chouhan No problem, your test looking good. You've added `eventOfDeath` to 2 places in the code: line 824 and line 1168:
    When I remove 824, your test will fail which is good. But if I remove 1168, test will still pass.
    
    Under what conditions do we need the change at line 1168 and could you write unit test for that?
;22/Jun/18 11:59;githubbot;600","Github user abhishek-chouhan commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    @anmolnar  The second one happens when zooKeeperSaslClient.initialize(ClientCnxn.this) throws an sasl exception, which from the code looks like can happen in case of incomplete initialization. In zookeeperSaslClient's constructor we call createSaslClient which in case of anything apart from LoginException will swallow the exception and would initialize the saslClient object as null(which would cause initialize to throw sasl exception in the null check). It however looks hard to simulate an exception in the initialization part, since there are static methods involved and stubbing zookeepersaslclient itself doesn't look to be an option.
;22/Jun/18 14:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    Got it. Let's trigger a green build and I'll commit. 
;22/Jun/18 15:11;githubbot;600","Github user abhishek-chouhan commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    @anmolnar is there a way i could re trigger jenkins?
;23/Jun/18 06:00;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    @abhishek-chouhan close this PR and reopen it will retrigger jenkins.It seems the failures isn't related with this PR 
;23/Jun/18 11:33;githubbot;600","Github user abhishek-chouhan closed the pull request at:

    https://github.com/apache/zookeeper/pull/541
;23/Jun/18 12:36;githubbot;600","GitHub user abhishek-chouhan reopened a pull request:

    https://github.com/apache/zookeeper/pull/541

    ZOOKEEPER-3059 EventThread leak in case of Sasl AuthFailed

    Since authFailed is similar to session expired and is considered a fatal event, we should clean up after ourselves once we get a AuthFailed, other wise this results in an unavoidable and un-cleanable thread leak  of EventThread since the close operation is also a no-op (we return after checking for isAlive).

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/abhishek-chouhan/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/541.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #541
    
----
commit c1d9d7afe1de246ad32d43032df7bb428fcceae6
Author: Abhishek Singh Chouhan <abhishekchouhan121@...>
Date:   2018-06-11T17:31:42Z

    ZOOKEEPER-3059 EventThread leak in case of Sasl AuthFailed

commit c54a83a486e4b6372e7004d44d2dbd0ba7ab61bb
Author: Abhishek Singh Chouhan <abhishekchouhan121@...>
Date:   2018-06-22T03:12:18Z

    ZOOKEEPER-3059 EventThread leak in case of Sasl AuthFailed. Adding testcase for the scenario

----
;23/Jun/18 12:36;githubbot;600","Github user abhishek-chouhan commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    @maoling thanks, i also looked at the test failure and it looked unrelated and from the history of the test looked like a flapper. Have re triggered a test run anyways.
;23/Jun/18 12:38;githubbot;600","Github user abhishek-chouhan commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    Finally got a green build :)
;25/Jun/18 08:27;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/541
;25/Jun/18 10:31;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/541
  
    Committed to master and 3.5 branches. Thanks @abhishek-chouhan 

;25/Jun/18 10:31;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7800,,,0,7800,,,,,,,,,,,,ZOOKEEPER-2407,,,,,,,,,,,,,,,,"11/Jun/18 17:21;abhishek.chouhan;stack_dump;https://issues.apache.org/jira/secure/attachment/12927339/stack_dump",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Jun 25 12:21:36 UTC 2018,,,,,,,,,,"0|i3uqkn:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"11/Jun/18 17:49;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1826//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1826//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1826//console

This message is automatically generated.;;;","11/Jun/18 19:21;andor;[~abhishek.chouhan] Thanks for the contribution.

This one reminds me the other issue I've just linked. You might want to take a look at the patch attached to it.;;;","12/Jun/18 06:31;abhishek.chouhan;[~andor] Thanks for pointing out the jira. I was earlier thinking about taking a similar approach and making the close call less restrictive so as to work in the case of auth failed too, however going through the documentation a bit i see that auth_failed is considered similar to session expired (both are fatal events) and for session expire we do kill the event thread automatically, hence i went with a similar approach to kill the event thread in case of auth failed too, rather than leaving it to the user (by changing the close method and expecting the event thread to be shutdown when that is called post auth failed). What do you think? ;;;","19/Jun/18 07:03;abhishek.chouhan;[~hanm] [~phunt] [~andor] Can i bother you guys for a review? :);;;","19/Jun/18 07:11;andor;Of course, anytime [~abhishek.chouhan]

Sorry for the delayed feedback, I'm currently reviewing and trying your patch.;;;","22/Jun/18 03:35;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1850//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1850//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1850//console

This message is automatically generated.;;;","23/Jun/18 13:02;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1860//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1860//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1860//console

This message is automatically generated.;;;","25/Jun/18 10:31;andor;Issue resolved by pull request 541
[https://github.com/apache/zookeeper/pull/541];;;","25/Jun/18 12:21;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #74 (See [https://builds.apache.org/job/ZooKeeper-trunk/74/])
ZOOKEEPER-3059: EventThread leak in case of Sasl AuthFailed (andor: rev 1fb644662b8e0530dec2c5668a3e49b3f614e9de)
* (edit) src/java/main/org/apache/zookeeper/ClientCnxn.java
* (edit) src/java/test/org/apache/zookeeper/SaslAuthTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to load database with missing snapshot file but valid transaction log file,ZOOKEEPER-3056,13164196,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Critical,Fixed,hanm,hanm,hanm,05/Jun/18 15:03,19/Dec/20 07:59,13/Jul/23 09:08,03/Sep/19 06:54,3.5.3,3.5.4,,,,,,,,3.5.6,3.6.0,,,,server,,,,1,pull-request-available,,"[An issue|https://lists.apache.org/thread.html/cc17af6ef05d42318f74148f1a704f16934d1253f1472cccc1a93b4b@%3Cdev.zookeeper.apache.org%3E] was reported when a user failed to upgrade from 3.4.10 to 3.5.4 with missing snapshot file.

The code complains about missing snapshot file is [here|https://github.com/apache/zookeeper/blob/release-3.5.4/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java#L206] which is introduced as part of ZOOKEEPER-2325.

With this check, ZK will not load the db without a snapshot file, even the transaction log files are present and valid. This could be a problem for restoring a ZK instance which does not have a snapshot file but have a sound state (e.g. it crashes before being able to take the first snap shot with a large snapCount parameter configured).

 

*how to use this fix*

Add zookeeper.snapshot.trust.empty=true to your server configuration file and start the server.

This property will skip the check.

It is recommended to remove the property once you have a working server, because that check is important to ensure that the system is in good shape",,addisonj@gmail.com,breed,emaijala,enixon,eolivelli,hanm,hudson,ijuma,jchipmunk,knoguchi,marvin.lillehaug,mkedwards,mmerli,nikifa,purbon,rng,sijie@apache.org,tomncooper,vguptadub,"hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069
 
 
   ZOOKEEPER-2325 introduced a check on snapshot and transaction log files during recovery, which will treat empty or missing snapshot files with the presence of transaction log files illegal state, and abort start up process. 
   
   For old versions of ZooKeeper, it's possible to have valid transaction log files but no snapshot. For example, if snap count set too low, or server crashes before the first snapshot was taken. For new versions of ZooKeeper with ZOOKEEPER-2325, this is not a problem as ZooKeeper will make sure the presence of at least one snapshot file (e.g. on a fresh start with empty local data, ZooKeeper will create one snapshot file as part of the start up.).
   
   So we need provide a smooth upgrade path for users with old version of ZooKeeper. This patch introduces a system property flag, once set, will skip the empty snapshot validation during start up. The flag will reset itself once start up is finished, to allow the feature introduced in ZOOKEEPER-2325 continuing work without restart the ZooKeeper process. The default value of this flag is false, as we don't want to disable the features introduced in ZOOKEEPER-2325. We also want the flag to be explicitly set by admin, as ZooKeeper itself is not able to tell when to trust missing snapshot or not.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 19:08;githubbot;600","eolivelli commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319644836
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
 ##########
 @@ -119,7 +125,15 @@ public void testRestoreWithEmptySnapFiles() throws Exception {
      */
     @Test
     public void testRestoreWithNoSnapFiles() throws Exception {
-        runTest(false);
+        runTest(false, false);
+    }
+
+    @Test
+    public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
+        FileTxnSnapLog.setTrustEmptySnapshotFlag(true);
 
 Review comment:
   what about resetting the value to ""false"" in a finally block, this way if the test fails we will be sure that the rest of the tests are executed with the default value
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 19:44;githubbot;600","eolivelli commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319645045
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   I am not an expert of this part, just want to share my doubts
   
   Ideally we will hit the case of the issue only while the server is starting up, not during internal reloads of the database, it is allowed to have such lack of snapshot file only during bootstrap.
   For instance I see that this method (""restore"") is called in QuorumPeer#getLastLoggedZxid()
   if we refactor the code in the future and change the boot sequence this change won't take effect.
   
   
   I wonder if there is a cleaner way to allow this special case only during ""start"" and not during all of the other code paths that leads to the invocations of this method.
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 19:44;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319666491
 
 

 ##########
 File path: zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
 ##########
 @@ -119,7 +125,15 @@ public void testRestoreWithEmptySnapFiles() throws Exception {
      */
     @Test
     public void testRestoreWithNoSnapFiles() throws Exception {
-        runTest(false);
+        runTest(false, false);
+    }
+
+    @Test
+    public void testRestoreWithTrustedEmptySnapFiles() throws Exception {
+        FileTxnSnapLog.setTrustEmptySnapshotFlag(true);
 
 Review comment:
   good catch, and find bug complains about something similar. I changed the flag variable to an instance variable instead and move the set / check logic inside the shared test implementation. Tests will not be interfering with each other.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 20:34;githubbot;600","enixon commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319666986
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -102,6 +107,9 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {
         boolean enableAutocreate = Boolean.parseBoolean(
             System.getProperty(ZOOKEEPER_DATADIR_AUTOCREATE, ZOOKEEPER_DATADIR_AUTOCREATE_DEFAULT));
 
+        trustEmptySnapshot = Boolean.getBoolean(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY);
+        LOG.info(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY + "" : "" + trustEmptySnapshot);
 
 Review comment:
   nit on the log format
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 20:49;githubbot;600","enixon commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319670645
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +240,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
+                }
             }
 
             if (trustEmptyDB) {
 
 Review comment:
   If `trustEmptyDB` is not set does the code (1) load the transaction log and (2) create a snapshot? With the second question, can we have a scenario where clearing `trustEmptySnapshot` causes the Peer to shutdown because it cannot find a snapshot on a second pass?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 20:49;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319677093
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +240,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
+                }
             }
 
             if (trustEmptyDB) {
 
 Review comment:
   I thought about this, and I didn't get into `trustEmptyDB` because it seems create another problem for upgrading, which might require a separate discussion.
   
   Basically if we don't set `trustEmptyDB`, then it's possible to have zookeeper server in a valid state with no snapshot files but only transaction log files similar to older version of ZooKeeper. Since we treat such case as invalid, yet we essentially allow such case happen in first place, this seems self contradictory and inconsistent. Always creating at least one snapshot sounds like a good solution here, but that require we always execute the code path when `trustEmptyDB ` (which, is the default case).
   
   Is there any cases where we don't `trustEmptyDB ` ?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 21:14;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319677093
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +240,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
+                }
             }
 
             if (trustEmptyDB) {
 
 Review comment:
   I thought about this, and I didn't get into `trustEmptyDB` because it seems create another problem for upgrading, which might require a separate discussion.
   
   Basically if we don't set `trustEmptyDB`, then it's possible to have zookeeper server in a valid state with no snapshot files but only transaction log files similar to older version of ZooKeeper. Since we treat such case as invalid, yet we essentially allow such case happen in first place, this seems self contradictory and inconsistent. Always creating at least one snapshot sounds like a good solution here, but that require we always execute the code path when `trustEmptyDB ` is set (which, is the default case).
   
   Is there any cases where we don't want to set `trustEmptyDB ` ?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 21:15;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319677524
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -102,6 +107,9 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {
         boolean enableAutocreate = Boolean.parseBoolean(
             System.getProperty(ZOOKEEPER_DATADIR_AUTOCREATE, ZOOKEEPER_DATADIR_AUTOCREATE_DEFAULT));
 
+        trustEmptySnapshot = Boolean.getBoolean(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY);
+        LOG.info(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY + "" : "" + trustEmptySnapshot);
 
 Review comment:
   What would you recommend? I thought about `        LOG.info(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY + "" :  {}"", trustEmptySnapshot);
   `, but there is a `+` I can't get rid of, so why bother :)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 21:16;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319679426
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +240,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
+                }
             }
 
             if (trustEmptyDB) {
 
 Review comment:
   One concrete example:
   * Create a fresh zookeeper cluster with `zookeeper.db.autocreate` set to false.
   * Start a fresh cluster, create a client and issue some transactions.
   * The default snap count is 100000 so no snapshot will be created; `zookeeper.db.autocreate` is set to false so no snapshot will be created upon server start up.
   * Now restart all zookeeper servers. We can't load because there is no snapshot. 
   
   Does this sound a reasonable example to demonstrate the problem with `trustEmptyDB ` set to false?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 21:25;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319691423
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   >> during internal reloads of the database
   
   database will only be loaded once from disk during a process's life time now we don't clear the in memory data base anymore every time a server (object) restarts; so this is less a concern. 
   
   >> I wonder if there is a cleaner way to allow this special case only during ""start"" and not during all of the other code paths
   
   ""start"" and ""other code paths"" are no different, from server point of view they are all recovery cases, be it a first start up or recovery from faults. So if we care about empty snapshot, we should check in all places. If we ignore empty snapshot, we should ignore in all places. The check logic and the skip check logic should be co-located, so refactoring sequence of start ups will not impact that.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 22:32;githubbot;600","hanm commented on issue #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#issuecomment-526769441
 
 
   >> Maybe it is worth to add a full test case that fully starts a server
   
   The current `testRestoreWithTrustedEmptySnapFiles` already fully start a fresh server by creating a brand new `zk` object (on top of the data files left by previous server).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;30/Aug/19 22:35;githubbot;600","eolivelli commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319710493
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   If we call this method only once.
   Why should we reset this variable, as it won't be used anymore?
   
   Can you please give an example of multiple calls of this method?
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Aug/19 04:08;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319711331
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   >> we don't clear the in memory data base anymore
   
   Actually, we still clear database sometimes (the case I was referring to was the database retain introduced in ZOOKEEPER-2678 and following up jira). There are two cases we still clear database: a recovering server get a TRUNC from leader; or a recovering server get a SNAP sync from leader. Both cases will clear db, leads to reload local snap to initialize the database.
   
   In any case, one invariant here is the first invoke of `restore` will always happen when a fresh server is starting. I don't think a future refactoring will change this fact (if, there will be such refactoring at all) given the essence of this step during start up. With this invariant, we need reset the flag so further database reloading at run time does not accidentally skip the snapshot validation.
   
   Now, one alternative is instead of trying to be clever and reset the flag in code, we remove the reset, but require ops admin to restart the zookeeper process after upgrading by reset the flag manually. This means upgrading a cluster will trigger leader election at least twice, instead of once, which seems not too bad, with the benefit of making code easier to understand. Even in this case, we can still keep this reset logic in code as an extra layer of protection, as that logic will only introduce false negative instead of false positive in terms of the data safety of the system, in worst case.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Aug/19 04:46;githubbot;600","eolivelli commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319714113
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   I am okay with keeping this reset logic.
   
   In fact I found those other execution path that lead to calls to *restore*
   and I asked for confirmation.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;31/Aug/19 06:55;githubbot;600","enixon commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319742181
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -102,6 +107,9 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {
         boolean enableAutocreate = Boolean.parseBoolean(
             System.getProperty(ZOOKEEPER_DATADIR_AUTOCREATE, ZOOKEEPER_DATADIR_AUTOCREATE_DEFAULT));
 
+        trustEmptySnapshot = Boolean.getBoolean(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY);
+        LOG.info(ZOOKEEPER_SNAPSHOT_TRUST_EMPTY + "" : "" + trustEmptySnapshot);
 
 Review comment:
   I was thinking:
   
   `LOG.info(""{}:{}"", ZOOKEEPER_SNAPSHOT_TRUST_EMPTY, trustEmptySnapshot);`
   
   but just a nit
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 03:04;githubbot;600","enixon commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319742218
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   I'm tempted toward the unclever solution of not resetting the flag since this is easy to reason about. Unless we can guarantee that a snapshot is created by the server as the flag is flipped then it makes sense to have the admin bare the risk of operating in ""snapshot not required"" mode.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 03:07;githubbot;600","hanm commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#discussion_r319744328
 
 

 ##########
 File path: zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
 ##########
 @@ -232,11 +242,19 @@ public long restore(DataTree dt, Map<Long, Integer> sessions, PlayBackListener l
         } else {
             trustEmptyDB = autoCreateDB;
         }
+
         if (-1L == deserializeResult) {
             /* this means that we couldn't find any snapshot, so we need to
              * initialize an empty database (reported in ZOOKEEPER-2325) */
             if (txnLog.getLastLoggedZxid() != -1) {
-                throw new IOException(""No snapshot found, but there are log entries. "" + ""Something is broken!"");
+                // ZOOKEEPER-3056: provides an escape hatch for users upgrading
+                // from old versions of zookeeper (3.4.x, pre 3.5.3).
+                if (!trustEmptySnapshot) {
+                    throw new IOException(EMPTY_SNAPSHOT_WARNING + ""Something is broken!"");
+                } else {
+                    LOG.warn(EMPTY_SNAPSHOT_WARNING + ""This should only be allowed during upgrading."");
+                    trustEmptySnapshot = false;
 
 Review comment:
   removed reset logic and update doc to recommend an advisory flag reset after upgrade. 
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 05:45;githubbot;600","eolivelli commented on issue #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#issuecomment-526928840
 
 
   @hanm I have verified that with this patch it is possible to upgrade from 3.4 with empty snapshot to 3.6.0-SNAPSHOT.
   
   I have tried a cherrypick to branch-3.5 but there are conflicts (in docs and due to checkstyle stuff integrated in master).
   Can you please prepare a pull request against branch-3.5 ?
   
   This way as soon as @enixon reviews the patch again I can start preparing 3.5.6 release candidate ?
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 15:34;githubbot;600","enixon commented on issue #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#issuecomment-526948587
 
 
   @hanm @eolivelli I played with this patch a bit on my local machine and it performs well in standard scenarios. Happy to see it committed as is.
   
   +1
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 20:01;githubbot;600","eolivelli commented on issue #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#issuecomment-526951193
 
 
   Thank you @enixon
   I will commit this patch to master branch soon.
   
   But @hanm we need a version for 3.5. 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 20:39;githubbot;600","hanm commented on pull request #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072
 
 
   This is a port of patch https://github.com/apache/zookeeper/pull/1069
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 23:16;githubbot;600","hanm commented on issue #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069#issuecomment-526961601
 
 
   update PR description so the commit message will reflect the latest status of the patch.
   
   port the patch to branch-3.5 as https://github.com/apache/zookeeper/pull/1072
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;01/Sep/19 23:17;githubbot;600","eolivelli commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527017197
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/19 06:19;githubbot;600","eolivelli commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527017326
 
 
   ant build failed due to a problem on the machine:
   BUILD FAILED
   /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build/build.xml:1802: 'findbugs.home' is not defined. Please pass -Dfindbugs.home=<base of Findbugs installation>    to Ant on the command-line.
   
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/19 06:20;githubbot;600","eolivelli commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527017389
 
 
   retest ant build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/19 06:20;githubbot;600","asfgit commented on pull request #1069: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1069
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/19 06:23;githubbot;600","eolivelli commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527137029
 
 
   @hanm @anmolnar @nkalmar @phunt 
   
   it seems that Maven build failed due to an upgrade of gcc on Jenkins slaves, we should address those problems in separate tasks
   
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2560:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]      fprintf(LOGSTREAM,""Completion queue: "");
        [exec]      ^~~~~~~
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2562:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]          fprintf(LOGSTREAM,""empty\n"");
        [exec]          ^~~~~~~
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2568:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]          fprintf(LOGSTREAM,""%d,"",cptr->xid);
        [exec]          ^~~~~~~
        [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build-maven/zookeeper-client/zookeeper-client-c/src/zookeeper.c:2571:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
        [exec]      fprintf(LOGSTREAM,""end\n"");
        [exec]      ^~~~~~~
        [exec] Makefile:1032: recipe for target 'zookeeper.lo' failed
        [exec] cc1: all warnings being treated as errors
        [exec] make: *** [zookeeper.lo] Error 1
   
   and Ant build fails due to the fact that ""findbugs"" is missing
    
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/19 12:51;githubbot;600","eolivelli commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527214965
 
 
   retest ant build
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;02/Sep/19 17:56;githubbot;600","hanm commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527274762
 
 
   It should be ok to merge this as it's not the cause of the CI failures we observed here; plus the scope and impact of this patch is well understood. 
   
   Fixing of CI could be done on a separate track that's not blocking the release if we want to get the release out soon. I am ok either way. Your call @eolivelli.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/19 01:56;githubbot;600","eolivelli commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-527330116
 
 
   Merged to branch-3.5.
   We can fix CI stuff without hurry
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;03/Sep/19 06:55;githubbot;600","hanm commented on issue #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072#issuecomment-528135866
 
 
   merged as https://github.com/apache/zookeeper/commit/77496b948f1eec3f8fa243bb8003cc97839982e4
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 23:46;githubbot;600","hanm commented on pull request #1072: ZOOKEEPER-3056: Fails to load database with missing snapshot file but with valid transaction log file.
URL: https://github.com/apache/zookeeper/pull/1072
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;04/Sep/19 23:46;githubbot;600","hanm commented on pull request #1178: ZOOKEEPER-3056: fix documentation.
URL: https://github.com/apache/zookeeper/pull/1178
 
 
   snapshot.trust.empty can be used in both zoo.cfg file (with name snapshot.trust.empty), and as a system property (with name zookeeper.snapshot.trust.empty).
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;12/Dec/19 23:23;githubbot;600","asf-ci commented on issue #1178: ZOOKEEPER-3056: fix documentation.
URL: https://github.com/apache/zookeeper/pull/1178#issuecomment-565257847
 
 
   
   Refer to this link for build results (access rights to CI server needed): 
   https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build-maven/1724/
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;13/Dec/19 01:11;githubbot;600","asfgit commented on pull request #1178: ZOOKEEPER-3056: fix documentation.
URL: https://github.com/apache/zookeeper/pull/1178
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Dec/19 15:51;githubbot;600","eolivelli commented on issue #1178: ZOOKEEPER-3056: fix documentation.
URL: https://github.com/apache/zookeeper/pull/1178#issuecomment-568509979
 
 
   committed to all active branches (master, 3.6, 3.5)
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;23/Dec/19 15:52;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,21000,,,0,21000,,,,,,,,,,,,,,,,,ZOOKEEPER-3644,,,,ZOOKEEPER-4005,,,,ZOOKEEPER-3513,ZOOKEEPER-2325,,"21/Jun/18 23:03;enixon;snapshot.0;https://issues.apache.org/jira/secure/attachment/12928686/snapshot.0",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Dec 12 01:03:26 UTC 2019,,,,,,,,,,"0|i3ujan:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"05/Jun/18 15:05;hanm;cc [~nixon], [~breed] who introduced the check in ZOOKEEPER-2325.

What do you guys think about this? Do you always have valid snapshot files in your deployment?;;;","05/Jun/18 21:26;sijie@apache.org;[~hanm] [~nixon] [~breed]

 

 

Do you think it is worth reverting that change first? Or maybe put the validation in a if-else branch and controlled by a configuration setting. So people who is using 3.4.6 can turn the flag off for upgrading and turn the flag on after upgrade.;;;","06/Jun/18 05:22;hanm;I think we just need to differentiate the state of missing snapshot vs not taking a snapshot file. To do that, we can create a signal file under the dataLogDir whenever we are taking our first snapshot. The presence of that signal file indicates there is a dependency between transaction logs and snapshot and we can't just ignore the missing snapshot file. The conditional check now checks both the presence of that signal file and the snapshot file, and it only complains if it found the signal file but not found the snapshot file. This should cover all cases include upgrade. Note this is a best effort as it's still possible to subvert the effort but I think it's fine as we don't deal with Byzantine faults. ;;;","08/Jun/18 18:25;enixon;We have not run an ensemble without some form of ZOOKEEPER-2325 in years, as such we always have snapshots available and ZooKeeper being unable to load a valid snapshot is a sign that something is very wrong.

From my read on the mail thread there are two questions that we're trying to answer:
- how to update ensembles without snapshots from a pre-2325 to a post-2325 state
- what constitutes a stable db (and what role a snapshot plays in that)

The second ought to take more thought so I'll follow up on that after considering it.

Two possible interventions on the first:
- the base snapshot is very small and simple, one could copy/create a snapshot.0 file to the appropriate directory before upgrade
- property gate the entire ""-1L == deserializeResult"" conditional block in 3.4, 3.5, and master to allow a snapshot-less db. To the extent that we agree that snapshot-less is a degenerate mode, we also add a 4 letter or admin command to create a snapshot on demand (allowing the admin to quickly move out of this state post-upgrade);;;","08/Jun/18 18:46;mmerli;[~nixon] My concern is that in most cases there might not be an experienced ZK admin available, confortable in doing that operation. I would hope for a way to get a seamless migration path from 3.4 to 3.5 that doesn't require manual intervention. A flag to turn off that validation would be helpful. The risk is understood, but it would be the same behavior as in ZK-3.4.x.;;;","08/Jun/18 21:38;hanm;I agree we should try providing a seamless upgrade path. 

[~nixon] What do you think about my previous proposal on the signal file? I think it's pretty similar with the initialization marker file you introduced in ZK-261 whose presence indicate trust empty DB or not. The signal file's presence indicate trust of the transaction log alone or not (or, ignore the -1L == deserializeResult check or not).

This is like an automatic flag to turn on / off the deserializeResult check by ZK itself.;;;","08/Jun/18 23:17;enixon;[~mmerli] That's a very reasonable concern and I'd ideally have all upgrades be seamless in exactly the way you describe. Property gating the validation is only undesirable from a proliferation of config point of view.

[~hanm] I think the signal file is a very workable approach and pretty straightforward to implement. The first intervention that I scoped out (create a snapshot.0) was inspired by yours as it simplifies the path of ""signal file"" to ""database load with trust in the transaction log"" to ""create snapshot, delete signal file"". -- It's a trade-off between admin time and server side code complexity for sure.

In order of decreasing seamlessness/admin time:
 * property flag snapshot validation (default off)
 * property flag snapshot validation (default on)
 * signal file
 * admin script to create a snapshot.0 file in the snapshot directory
 * upgrade notes to create a snapshot.0 file in the snapshot directory

For the use cases that we maintain, it's far more likely that being unable to load a snapshot indicates corruption or machine malfeasance than a legitimate database so I'd like to expand that impression with more information from the community. Is a snapshot-less db expected/unremarkable under some reasonable workloads or is it something worth (politely) discouraging? I do believe ZOOKEEPER-2325 is a good feature and it would be a shame to set it off by default.;;;","11/Jun/18 17:57;breed;how are you getting in a state where you have log file but no snapshot? is it that a machine starts up with no data and then diff syncs with the leader? or is there another case that i'm missing.

trying to use a txn log with no base snapshot seems frought with danger.

 ;;;","11/Jun/18 18:04;mmerli;The main case is with ZK 3.4.x, for example with a single ZK quorum (though I think that would happen in the same way in a multi-node cluster).

 

 * Start ZK with 3.4.X

 * Create few z-nodes (not enough to trigger snapshot)

 * Stop ZK

 * Start with ZK 3.5.x --> Fail because snapshot is missing

 

 ;;;","12/Jun/18 05:12;hanm;{quote}It's a trade-off between admin time and server side code complexity for sure.
{quote}
I agree. If a snapshot-less use case is rare, it's better to provide an admin ool to force generate a snapshot before upgrade (or migrate data), to keep a simple server side code. 
{quote}I do believe ZOOKEEPER-2325is a good feature and it would be a shame to set it off by default.
{quote}
I agree, data consistency is important and even if we decide to provide such a flag, the check should be enabled by default.

 ;;;","21/Jun/18 23:22;enixon;As a work-around for anyone currently blocked on this issue, I've uploaded a empty snapshot file here.

To perform an upgrade (3.4 -> 3.5):
 * download the ""snapshot.0"" file attached
 * copy it to the versioned directory (e.g. ""version-2"") within your data directory (parameter ""dataDir"" in your config - this is the directory containing the ""myid"" file for a peer)
 * restart the peer
 * upgrade the peer (this can be combined with the above step if you like)

 ;;;","22/Nov/18 01:01;mkedwards;Fix needed for 3.5.5?;;;","21/Aug/19 17:00;hanm;Given enough people already complain about this, i am taking a stab and implementing the proposed solution to provide a seamless upgrade path.;;;","27/Aug/19 00:01;addisonj@gmail.com;Just ran into this myself... one thing to note is that in a cloud containerized environment, such as a k8s StatefulSet, this is extra tricky for users as they probably have volumes being dynamically attached and crash back-off loops that make getting to the volume a pain. The way I was able to fix this was to add another ""debug"" container with the same volume mounted that I could then copy the empty snapshot into.;;;","03/Sep/19 06:55;eolivelli;Committed to master branch as 68c21988d55c57e483370d3ee223c22da2d1bbcf
Committed to branch-3.5 branch as  77496b948f1eec3f8fa243bb8003cc97839982e4

Thank you [~hanm] and [~nixon];;;","04/Sep/19 22:01;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #678 (See [https://builds.apache.org/job/ZooKeeper-trunk/678/])
ZOOKEEPER-3056: Fails to load database with missing snapshot file but (enrico.olivelli: rev 68c21988d55c57e483370d3ee223c22da2d1bbcf)
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
;;;","05/Sep/19 00:47;hudson;ABORTED: Integrated in Jenkins build Zookeeper-trunk-single-thread #514 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/514/])
ZOOKEEPER-3056: Fails to load database with missing snapshot file but (enrico.olivelli: rev 68c21988d55c57e483370d3ee223c22da2d1bbcf)
* (edit) zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
* (edit) zookeeper-docs/src/main/resources/markdown/zookeeperAdmin.md
* (edit) zookeeper-server/src/test/java/org/apache/zookeeper/test/EmptiedSnapshotRecoveryTest.java
;;;","13/Nov/19 11:44;vguptadub;Hi Sorry but I don't see the workaround is working for me. I have zookeeper running in Statefulset in Kubernetes. I followed the steps and downloaded the snapshot.0 file and copied it under my dataDir under /var/lib/zookeeper/data/version-2 and I restarted the container via `kill 1` command. and then I upgraded the zookeeper image but still I see the below logs but container is still in crash loop state. please help.

 
{code:java}
2019-11-13 11:38:45,320 [myid:3] - INFO  [main:QuorumPeer@2183] - quorum.cnxn.threads.size set to 20
2019-11-13 11:38:45,399 [myid:3] - ERROR [main:QuorumPeer@955] - Unable to load database on disk
java.io.IOException: No snapshot found, but there are log entries. Something is broken!
	at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:211)
	at org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:240)
	at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:919)
	at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:905)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:205)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:123)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:82)
2019-11-13 11:38:45,404 [myid:3] - ERROR [main:QuorumPeerMain@101] - Unexpected exception, exiting abnormally
java.lang.RuntimeException: Unable to run quorum server 
	at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:956)
	at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:905)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:205)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:123)
	at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:82)
Caused by: java.io.IOException: No snapshot found, but there are log entries. Something is broken!
	at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:211)
	at org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:240)
	at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:919)
	... 4 more
{code};;;","15/Nov/19 06:11;nikifa;Faced the same issue when upgrade from 3.4.9 to 3.5.6

{noformat}

2019-11-15 06:04:18,455 [main] ERROR QuorumPeer.java (line 955) Unable to load database on disk
java.io.IOException: No snapshot found, but there are log entries. Something is broken!
 at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:222)
 at org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:240)
 at org.apache.zookeeper.server.quorum.QuorumPeer.loadDataBase(QuorumPeer.java:919)
 at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:905)
 at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:205)
 at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:123)
 at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:82)
2019-11-15 06:04:18,462 [main] ERROR QuorumPeerMain.java (line 101) Unexpected exception, exiting abnormally

{noformat};;;","15/Nov/19 06:43;vguptadub;[~hanm]  [~enixon] , I tried the workaround provided by you to copy the snapshot.0 file into the container file system. and then did the rolling update of my Statefulset in Kubernetes , it didn't still load the database snapshot and gave the error. 

May I please request you to re-check if the steps needs to be done any differently for container filesystem or if anything is missing there. It seems to have blocked my couple of projects. 

 

I sincerely appreciate the help !;;;","15/Nov/19 06:45;eolivelli;[~nikifa]

I am sorry, we did not update the description of the issue with the 'solution'

this is the link to the fix [https://github.com/apache/zookeeper/commit/68c21988d55c57e483370d3ee223c22da2d1bbcf]

 

You have to add this configuration entry zookeeper.snapshot.trust.empty=true  (it is actually a java system property, but it should work if you add it to zoo.cfg).

This way the system allows such empty snapshot.

Once you are able to perform the upgrade I suggest to remove the line because it is actually disabling an integrity check that we added in 3.5.x

 

I will update the description;;;","15/Nov/19 07:59;nikifa;[~eolivelli], 
Awesome! Thanks for the reply.

One more question. As I understand that option will help us to start zk without snapshot.
To automate that I can find by ""snapshot*"" in my shell script(which start zk instance) in zk data directory and set that option to ""true"" if there no snapshot files, right?

I'm not able to manually turn that option on/off on thousand of zk clusters. 

Should I force restart the instance which have that option? Which marker can I use to understand that snapshot successfully created and I can remove that option from config and restart instance?

Thanks!;;;","18/Nov/19 02:20;hanm;bq.   As I understand that option will help us to start zk without snapshot.

This option is an escape hatch for users upgrading from 3.4.x (where it's possible to have zookeeper clusters in valid state without the presence of snapshot) to 3.5.6+, and it's not intended to be used to work around the data integrity checks during start up. 

bq. To automate that I can find by ""snapshot*"" in my shell script(which start zk instance) in zk data directory and set that option to ""true"" if there no snapshot files, right?

This should work. My recommendation is to also at least check your zookeeper clusters before triggering this automation to make sure the missing of local snapshot files is caused by legitimate reasons (such as not enough transactions to trigger a snapshot file). If it's not legitimate - e.g. the snapshot files were missing because they were removed by mistake, then we should not proceed force restart which will compromise the data integrity of the cluster. Also please note, for 3.5.x, it should never happen that local snapshot files are missing.;;;","18/Nov/19 10:12;marvin.lillehaug;{quote}

You have to add this configuration entry zookeeper.snapshot.trust.empty=true  (it is actually a java system property, but it should work if you add it to zoo.cfg).

{quote}

I don't think this is possible to set from config. We had this problem when going from 3.4.14 to 3.5.6, and when setting this is zoo.cfg we still got the same error on startup.

zookeeper.snapshot.trust.empty is read in https://github.com/apache/zookeeper/blob/branch-3.5.6/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java#L102

So unless there is some part of Zookeeper that puts all properties in config as system properties there is no way it will take effekt from config file.;;;","10/Dec/19 13:27;tomncooper;As Marvin states above the setting to skip the checks cannot be supplied in the config file. It has to passed as a system property, for example as part of the KAFKA_OPTS variable when running zookeeper-server-start.sh:

KAFKA_OPTS=""$KAFKA_OPTS -Dzookeeper.snapshot.trust.empty=true""

The [upgrade FAQ|https://cwiki.apache.org/confluence/display/ZOOKEEPER/Upgrade+FAQ] should be update to state this.;;;","11/Dec/19 14:54;ijuma;The config `snapshot.trust.empty` works, I believe (note that naming is slightly different). However, it seems to cause other issues, see https://issues.apache.org/jira/browse/ZOOKEEPER-3644;;;","12/Dec/19 01:03;hanm;bq. The config `snapshot.trust.empty` works, I believe (note that naming is slightly different)

Yes, put the option name as *snapshot.trust.empty* (instead of *zookeeper.snapshot.trust.empty*) in the config file should generate a java system property named *zookeeper.snapshot.trust.empty* after ZK starts up. Though, I realized we had wrong documentation where we mentioned this is a java system property only (which it's not). i'll update doc soon.

bq. So unless there is some part of Zookeeper that puts all properties in config as system properties

Yes there actually is such code that generate java system property from (a subset of) configuration options parsed from cfg file. 

ZOOKEEPER-3644 is a real issue, I'll follow up there.
;;;",,,,,,,,,,
owasp complaining about jackson version used,ZOOKEEPER-3051,13160804,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,phunt,phunt,phunt,21/May/18 19:55,20/May/19 17:50,13/Jul/23 09:08,23/May/18 03:34,3.5.4,3.6.0,,,,,,,,3.5.5,3.6.0,,,,server,,,,0,pull-request-available,,The owasp target is complaining about jackson version. We should update to the latest.,,hanm,hudson,,,,,,,,,,,,,,,,,,"GitHub user phunt opened a pull request:

    https://github.com/apache/zookeeper/pull/527

    ZOOKEEPER-3051: Updated jackson to the latest version

    Change-Id: Iec76a7df76f8e1928828fd716c4c25f48e887ba1

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/phunt/zookeeper ZOOKEEPER-3051

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/527.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #527
    
----
commit 2af2138d3ae334bf5f0a6673caf42ae55174ddea
Author: Patrick Hunt <phunt@...>
Date:   2018-05-21T19:55:54Z

    ZOOKEEPER-3051: Updated jackson to the latest version
    
    Change-Id: Iec76a7df76f8e1928828fd716c4c25f48e887ba1

----
;21/May/18 19:57;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/527
  
    Done. Thanks @hanm 
;22/May/18 14:38;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/527
;23/May/18 03:34;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1800,,,0,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 23 07:45:47 UTC 2018,,,,,,,,,,"0|i3tyrb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/May/18 20:10;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1722//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1722//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1722//console

This message is automatically generated.;;;","22/May/18 14:52;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1725//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1725//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1725//console

This message is automatically generated.;;;","23/May/18 03:34;hanm;Issue resolved by pull request 527
[https://github.com/apache/zookeeper/pull/527];;;","23/May/18 07:45;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #36 (See [https://builds.apache.org/job/ZooKeeper-trunk/36/])
ZOOKEEPER-3051: Updated jackson to the latest version (hanm: rev 24f093b9c10bcfa5f890f378087e48736ed5bac5)
* (edit) ivy.xml
* (edit) src/java/main/org/apache/zookeeper/server/admin/JsonOutputter.java
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
owasp ant target is highlighting jetty version needs to be updated,ZOOKEEPER-3050,13160796,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,phunt,phunt,phunt,21/May/18 19:25,20/May/19 17:50,13/Jul/23 09:08,22/May/18 04:37,3.5.4,3.6.0,,,,,,,,3.5.5,3.6.0,,,,server,,,,0,pull-request-available,,The owasp target highlights that we need to update to new jetty version.,,hanm,hudson,,,,,,,,,,,,,,,,,,"GitHub user phunt opened a pull request:

    https://github.com/apache/zookeeper/pull/526

    ZOOKEEPER-3050: update to the newest version of Jetty

    Change-Id: I1f63c471e59a1ed9d1cf58e721fedf47452acc6b

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/phunt/zookeeper ZOOKEEPER-3050

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/526.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #526
    
----
commit b0f2291056284c72c8bb84f0c0d9d10a88cd3ced
Author: Patrick Hunt <phunt@...>
Date:   2018-05-21T19:26:34Z

    ZOOKEEPER-3050: update to the newest version of Jetty
    
    Change-Id: I1f63c471e59a1ed9d1cf58e721fedf47452acc6b

----
;21/May/18 19:29;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/526
;22/May/18 04:37;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue May 22 06:43:15 UTC 2018,,,,,,,,,,"0|i3typj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"21/May/18 19:44;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1721//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1721//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1721//console

This message is automatically generated.;;;","22/May/18 04:37;hanm;Issue resolved by pull request 526
[https://github.com/apache/zookeeper/pull/526];;;","22/May/18 06:43;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #34 (See [https://builds.apache.org/job/ZooKeeper-trunk/34/])
ZOOKEEPER-3050: update to the newest version of Jetty (hanm: rev ae6ee236658e8133b0f3cb950d6d4c97553b8eb7)
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
testFailedTxnAsPartOfQuorumLoss is flaky,ZOOKEEPER-3042,13158929,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,bkanivets,bkanivets,bkanivets,13/May/18 08:32,20/May/19 17:50,13/Jul/23 09:08,10/Jul/18 10:18,3.4.12,3.5.3,3.6.0,,,,,,,3.5.5,,,,,tests,,,,0,flaky,pull-request-available,"According to the [dashboard|https://builds.apache.org/job/ZooKeeper-Find-Flaky-Tests/lastSuccessfulBuild/artifact/report.html] testFailedTxnAsPartOfQuorumLoss is flaky. I've looked at some logs and there are multiple causes of flakiness. One of them is in this line after step 5
{code:java}
Assert.assertEquals(1, outstanding.size());
{code}
For example [this|https://builds.apache.org/job/ZooKeeper_branch35_java10/10/artifact/build/test/logs] build of 3.5

I was able to reproduce this particular issue in debug mode and the problem is that 'outstading' map can also have 'closeSession' entries that are expected.

I'll submit a patch to relax this check.",,andor,bkanivets,hudson,,,,,,,,,,,,,,,,,"GitHub user lavacat opened a pull request:

    https://github.com/apache/zookeeper/pull/521

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky

    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lavacat/zookeeper testFailedTxnAsPartOfQuorumLoss-fix

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/521.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #521
    
----
commit fb8d1cc8a5ce7dfe252726825e77030ab7e824af
Author: Bogdan Kanivets <bkanivets@...>
Date:   2018-05-14T18:08:55Z

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky
    
    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

----
;14/May/18 21:22;githubbot;600","Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/521#discussion_r188752138
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -967,9 +980,10 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
     
             // just make sure that we actually did get it in process at the
             // leader
    -        Assert.assertEquals(1, outstanding.size());
    -        Proposal p = outstanding.values().iterator().next();
    -        Assert.assertEquals(OpCode.create, p.request.getHdr().getType());
    +        // there can be extra sessionClose proposals
    +        Assert.assertTrue(outstanding.size() > 0);
    +        Proposal p = findProposalOfType(outstanding, OpCode.create);
    +        Assert.assertNotNull(p);
    --- End diff --
    
    Please add some message to the assert here to explain what could have gone wrong.
;16/May/18 19:56;githubbot;600","Github user lavacat commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @anmolnar thanks, updated
;17/May/18 22:14;githubbot;600","Github user lavacat commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @anmolnar Are there any concerns about this PR? I can remove ""ignore LETest"" commit. It was failing for me multiple times on PR test runs, but it's not on Flaky Dashboard.
    
    testFailedTxnAsPartOfQuorumLoss is still listed as flaky on Dashboard, and I think this will fix it
;31/May/18 20:22;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @lavacat I think you're good to go as it is now. I've just become a committer recently, once I learn how to use the commit script, I'm happy to merge this. ;)
;01/Jun/18 04:47;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    ping @anmolnar
;09/Jul/18 13:00;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @maoling Thanks for the heads-up.
    @lavacat What are the target branches of this patch? Is this 3.5-only?
;09/Jul/18 14:11;githubbot;600","Github user lavacat commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @anmolnar yes, only 3.5
    There are some trivial conflicts on 3.4 and master.  Change is still valid. I can create PRs. Do you want them now or after this is merged?
;09/Jul/18 19:58;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    Committed to 3.5 branch. Thanks @lavacat 
    Please create separate pull request for the branches you'd like to merge this too.
;10/Jul/18 10:18;githubbot;600","Github user lavacat closed the pull request at:

    https://github.com/apache/zookeeper/pull/521
;11/Jul/18 23:57;githubbot;600","Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @lavacat  [Jenkins](https://builds.apache.org/job/ZooKeeper_branch34_java10/79/testReport/junit/org.apache.zookeeper.server.quorum/QuorumPeerMainTest/testFailedTxnAsPartOfQuorumLoss/) still comlains about the flaky test in branch-3.4 and master.Could you plz fix them?
;15/Jul/18 12:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/521
  
    @lavacat I second that. It would be great to fix this on all branches.
;15/Jul/18 20:21;githubbot;600","GitHub user lavacat opened a pull request:

    https://github.com/apache/zookeeper/pull/570

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky

    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lavacat/zookeeper testFailedTxnAsPartOfQuorumLoss-fix-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/570.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #570
    
----
commit 52bd7ea1384ea84c08e37dce69d410048fa08697
Author: Bogdan Kanivets <bkanivets@...>
Date:   2018-05-14T18:08:55Z

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky
    
    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

----
;16/Jul/18 00:19;githubbot;600","GitHub user lavacat opened a pull request:

    https://github.com/apache/zookeeper/pull/571

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky

    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lavacat/zookeeper testFailedTxnAsPartOfQuorumLoss-fix-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/571.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #571
    
----
commit 3ad9dbcc44397a22b8a13e1c7627aa54fd1f357c
Author: Bogdan Kanivets <bkanivets@...>
Date:   2018-05-14T18:08:55Z

    ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky
    
    - relaxed check of outstanding proposals queue
    - close clients after restart
    - restart client after old leader restart

----
;16/Jul/18 06:50;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/570
  
    Merged. Thanks @lavacat !
    Please close this PR.
;17/Jul/18 08:40;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/571
  
    Merged. Thanks @lavacat !
;17/Jul/18 08:41;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/571
;17/Jul/18 08:41;githubbot;600","Github user lavacat closed the pull request at:

    https://github.com/apache/zookeeper/pull/570
;17/Jul/18 16:06;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,10800,,,0,10800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Jul 17 10:52:56 UTC 2018,,,,,,,,,,"0|i3tn9r:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"14/May/18 21:39;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1685//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1685//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1685//console

This message is automatically generated.;;;","14/May/18 22:08;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1686//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1686//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1686//console

This message is automatically generated.;;;","14/May/18 22:45;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1688//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1688//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1688//console

This message is automatically generated.;;;","15/May/18 00:02;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1690//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1690//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1690//console

This message is automatically generated.;;;","15/May/18 00:29;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1691//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1691//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1691//console

This message is automatically generated.;;;","15/May/18 00:54;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1692//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1692//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1692//console

This message is automatically generated.;;;","15/May/18 03:02;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1693//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1693//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1693//console

This message is automatically generated.;;;","15/May/18 17:52;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1694//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1694//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1694//console

This message is automatically generated.;;;","17/May/18 04:50;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1701//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1701//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1701//console

This message is automatically generated.;;;","17/May/18 05:23;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1702//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1702//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1702//console

This message is automatically generated.;;;","17/May/18 08:30;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1703//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1703//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1703//console

This message is automatically generated.;;;","17/May/18 08:59;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1704//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1704//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1704//console

This message is automatically generated.;;;","10/Jul/18 10:18;andor;Issue resolved by pull request 521
[https://github.com/apache/zookeeper/pull/521];;;","16/Jul/18 01:54;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1941//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1941//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1941//console

This message is automatically generated.;;;","16/Jul/18 07:12;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1942//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1942//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1942//console

This message is automatically generated.;;;","17/Jul/18 10:52;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #106 (See [https://builds.apache.org/job/ZooKeeper-trunk/106/])
ZOOKEEPER-3042: testFailedTxnAsPartOfQuorumLoss is flaky (andor: rev cea251a185435e88f54efc5defb92ec9584fc80f)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
;;;",,,,,,,,,,,,,,,,,,,,,
"Typo in error message, affects log analysis",ZOOKEEPER-3041,13158924,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,Hugh O'Brien,Hugh O'Brien,Hugh O'Brien,13/May/18 05:47,17/Jul/18 04:49,13/Jul/23 09:08,16/May/18 17:36,3.5.3,,,,,,,,,3.4.13,3.5.5,3.6.0,,,,,,,0,pull-request-available,,"simple typo

 

PR here: https://github.com/apache/zookeeper/pull/498/commits/a8cb7f668d31a7bcf12481409328a886231020f6",,hudson,Hugh O'Brien,,,,,,,,,,,,,,,,,,"Github user hughobrienjet commented on the issue:

    https://github.com/apache/zookeeper/pull/498
  
    Thanks @maoling , I created ZOOKEEPER-3041
;13/May/18 05:48;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Wed May 16 21:45:28 UTC 2018,,,,,,,,,,"0|i3tn8n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/18 17:36;phunt;+1 lgtm. Thanks Hugh!;;;","16/May/18 21:45;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #26 (See [https://builds.apache.org/job/ZooKeeper-trunk/26/])
ZOOKEEPER-3041: Typo in error message, affects log analysis; charater (phunt: rev dacd27568c0a20244d40f42ff8ee84b5f917128e)
* (edit) src/java/main/org/apache/zookeeper/common/PathUtils.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TxnLogToolkit uses Scanner badly,ZOOKEEPER-3039,13158320,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,andor,andor,09/May/18 23:12,17/Jul/18 04:49,13/Jul/23 09:08,15/May/18 16:58,3.4.13,3.5.4,3.6.0,,,,,,,3.4.13,3.5.4,3.6.0,,,,,,,0,pull-request-available,,"If more than 1 CRC error is found in the Txn log file, TxnLogToolkit fails to get an answer for the second one, because it has already closed the Scanner which was probably closed the input stream also, so exception is thrown:
{noformat}
ZooKeeper Transactional Log File with dbid 0 txnlog format version 2
CRC ERROR - 4/5/18 5:16:05 AM PDT session 0x16295bafcc40000 cxid 0x1 zxid 0x100000002 closeSession null
Would you like to fix it (Yes/No/Abort) ? y
CRC ERROR - 4/5/18 5:17:34 AM PDT session 0x26295bafcc90000 cxid 0x0 zxid 0x200000001 closeSession null
Would you like to fix it (Yes/No/Abort) ? Exception in thread ""main"" java.util.NoSuchElementException
at java.util.Scanner.throwFor(Scanner.java:862)
at java.util.Scanner.next(Scanner.java:1371)
at org.apache.zookeeper.server.persistence.TxnLogToolkit.askForFix(TxnLogToolkit.java:208)
at org.apache.zookeeper.server.persistence.TxnLogToolkit.dump(TxnLogToolkit.java:175)
at org.apache.zookeeper.server.persistence.TxnLogToolkit.main(TxnLogToolkit.java:101){noformat}",,andor,hudson,,,,,,,,,,,,,,,,,,"Github user anmolnar closed the pull request at:

    https://github.com/apache/zookeeper/pull/518
;11/May/18 01:58;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,600,,,0,600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Thu May 10 22:26:58 UTC 2018,,,,,,,,,,"0|i3tjjr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/May/18 23:21;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1670//testReport/
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1670//console

This message is automatically generated.;;;","10/May/18 18:32;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1672//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1672//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1672//console

This message is automatically generated.;;;","10/May/18 21:07;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #19 (See [https://builds.apache.org/job/ZooKeeper-trunk/19/])
ZOOKEEPER-3039: TxnLogToolkit uses Scanner badly (phunt: rev 2fa315b7d0ed65828479fcdcc9e76ca8552fba4a)
* (edit) src/java/test/org/apache/zookeeper/server/persistence/TxnLogToolkitTest.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/TxnLogToolkit.java
;;;","10/May/18 22:26;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1673//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1673//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1673//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup some nitpicks in TTL implementation,ZOOKEEPER-3038,13158315,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,andor,andor,09/May/18 22:39,21/Jan/19 14:54,13/Jul/23 09:08,10/May/18 04:14,3.5.3,,,,,,,,,3.5.4,3.6.0,,,,server,,,,0,ttl_nodes,,"A few nitpicks which needs to be cleaned up:

1. Rename OldEphemeralType --> EphemeralTypeEmulate353
 2. Remove unused method: getTTL()
3. Remove unused import from QuorumPeer

 ",,andor,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu May 10 06:28:09 UTC 2018,,,,,,,,,,"0|i3tjin:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/May/18 22:56;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1668//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1668//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1668//console

This message is automatically generated.;;;","10/May/18 04:14;phunt;Issue resolved by pull request 516
[https://github.com/apache/zookeeper/pull/516];;;","10/May/18 06:28;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #18 (See [https://builds.apache.org/job/ZooKeeper-trunk/18/])
ZOOKEEPER-3038: Cleanup some nitpicks in TTL implementation (phunt: rev 6e64125f2aafc29253904c43ee44233c907e5fca)
* (add) src/java/main/org/apache/zookeeper/server/EphemeralTypeEmulate353.java
* (edit) src/java/main/org/apache/zookeeper/server/EphemeralType.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
* (delete) src/java/main/org/apache/zookeeper/server/OldEphemeralType.java
* (edit) src/java/test/org/apache/zookeeper/server/Emulate353TTLTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Facing issues while building from source,ZOOKEEPER-3034,13157538,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,meszibalu,bhavenamrata,bhavenamrata,07/May/18 09:21,25/May/21 11:45,13/Jul/23 09:08,26/Feb/19 15:39,3.4.11,,,,,,,,,3.5.5,3.6.0,,,,build,,,,0,pull-request-available,,"Building Zookeeper from source using below steps:

{{git clone git://github.com/apache/zookeeper}}
 {{cd zookeeper}}
 {{git checkout tags/release-3.4.11}}
 {{ant compile}}
 {{cd src/c}}
 {{sudo apt-get install -y libcppunit-dev}}
 {{ACLOCAL=""aclocal -I /usr/share/aclocal"" autoreconf -if}}
 {{./configure && make && sudo make install}}
 {{sudo make distclean}}

 

The 'autoreconf -if' step fails with below error:
 + ACLOCAL='aclocal -I /usr/share/aclocal'
 + autoreconf -if
 configure.ac:37: warning: macro 'AM_PATH_CPPUNIT' not found in library
 libtoolize: putting auxiliary files in '.'.
 libtoolize: copying file './ltmain.sh'
 libtoolize: Consider adding 'AC_CONFIG_MACRO_DIRS([m4])' to configure.ac,
 libtoolize: and rerunning libtoolize and aclocal.
 libtoolize: Consider adding '-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
 configure.ac:37: warning: macro 'AM_PATH_CPPUNIT' not found in library
 configure.ac:37: error: possibly undefined macro: AM_PATH_CPPUNIT
 If this token and others are legitimate, please use m4_pattern_allow.
 See the Autoconf documentation.
 autoreconf: /usr/bin/autoconf failed with exit status: 1
 Build step 'Execute shell' marked build as failure
  

This is happening on Ubuntu 18.04. Can someone please help in resolving this error?","Linux x86_64, Ubuntu 18.04, Ubuntu 17.10.",andor,bhavenamrata,hudson,shahrs87,,,,,,,,,,,,,,,,"GitHub user anmolnar opened a pull request:

    https://github.com/apache/zookeeper/pull/528

    ZOOKEEPER-3034 Facing issues while building from source

    Unable to compile C++ test on Ubuntu 17.10+ because libcppunit-dev package doesn't ship the aclocal macro `cppunit.m4` anymore. I added explicitly to our codebase and made some necessary changes in configure.ac and Makefile.am.
    
    Please review.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-3034

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/528.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #528
    
----
commit e97c5c1295ff43cfac93f957a888f7795766ee60
Author: Andor Molnar <dolphy17@...>
Date:   2018-05-23T04:39:31Z

    ZOOKEEPER-3034. Added cppunit.m4, because from libcppunit-dev package doesn't ship from 1.14.0

----
;23/May/18 04:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Raised the question on libreoffice mailing list and from libcppunit-1.14.0 the recommended way to configure build flags is using `pkg-config`.
    I'm working on a patch to address this and will test it on CentOS 7 and Ubuntu 18.04. If both works fine, we could go forward with it.
;23/May/18 12:00;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Using pkg-config in the latest patch.
    I also removed unused method `print_completion_queue()`, because it doesn't compile under Ubuntu 18.04
    @rgs1 Would you care to take a look?

;24/May/18 21:34;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt @afine @hanm You guys might want to take a quick look at this in @rgs1 absence. It's kind of an infrastructural change only and would be useful in the long term.
;29/May/18 04:02;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Seems like it breaks ubuntu 14.04 (not sure what else, that's what I tried). This is working fine w/o the patch:
    
    ----
    ./configure
    checking for doxygen... no
    checking for perl... /usr/bin/perl
    checking for dot... no
    checking for a BSD-compatible install... /usr/bin/install -c
    checking whether build environment is sane... yes
    checking for a thread-safe mkdir -p... /bin/mkdir -p
    checking for gawk... no
    checking for mawk... mawk
    checking whether make sets $(MAKE)... yes
    checking whether make supports nested variables... yes
    ./configure: line 5034: syntax error near unexpected token `CPPUNIT,'
    ./configure: line 5034: `    PKG_CHECK_MODULES_STATIC(CPPUNIT, cppunit >= 1.10.2)'
;29/May/18 23:54;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    ps. you can try using my repos, makes it easy to try out various envs:
    https://hub.docker.com/r/phunt/
    See the readme on how to run - I typically map my zk source directory into the container directly to aid in testing.
    
    these images have cppunit installed - you can use the package manager to uninstall them if you want to test with and without --without-cppunit
;29/May/18 23:57;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Yeah, I see what the problem is: `pkg-config` package has to be installed, but there's another problem with the version that is shipped with 14.04: it doesn't have `PKG_CHECK_MODULES_STATIC` macro, because it has been added in a more recent version according to this bug:
    https://bugs.freedesktop.org/show_bug.cgi?id=19541
    
    Adding the definition of the macro to our `configure.ac` script solves the problem, but I don't want it to be effective if recent version of pkg-config is in use. Trying to add it as a conditional, but my autoconf knowledge doesn't seem to be enough here. Still looking.
;30/May/18 09:59;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt I ended up defining a custom macro to support static linking. Now the script works with older versions of `pkg-config` too.
;30/May/18 10:24;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    I'm afraid it still doesn't work for me. This is ubuntu 14.04 - the docker image I pointed to previously.
    
    ----
    # ./configure
    checking for doxygen... no
    checking for perl... /usr/bin/perl
    checking for dot... no
    checking for a BSD-compatible install... /usr/bin/install -c
    checking whether build environment is sane... yes
    checking for a thread-safe mkdir -p... /bin/mkdir -p
    checking for gawk... no
    checking for mawk... mawk
    checking whether make sets $(MAKE)... yes
    checking whether make supports nested variables... yes
    ./configure: line 5034: PKG_PROG_PKG_CONFIG: command not found
    ./configure: line 5039: syntax error near unexpected token `CPPUNIT,'
    ./configure: line 5039: `        PKG_CHECK_MODULES(CPPUNIT, cppunit >= 1.10.2, , , )'
    
    
    ----
    
    I also see all kinds of warnings popping up:
    
    # autoreconf -if
    configure.ac:39: warning: PKG_PROG_PKG_CONFIG is m4_require'd but not m4_defun'd
    configure.ac:28: ZK_PKG_CONFIG_STATIC is expanded from...
    ../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
    configure.ac:39: the top level
    configure.ac:39: warning: PKG_PROG_PKG_CONFIG is m4_require'd but not m4_defun'd
    configure.ac:28: ZK_PKG_CONFIG_STATIC is expanded from...
    ../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
    configure.ac:39: the top level
    libtoolize: putting auxiliary files in `.'.
    libtoolize: copying file `./ltmain.sh'
    libtoolize: Consider adding `AC_CONFIG_MACRO_DIR([m4])' to configure.ac and
    libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
    libtoolize: Consider adding `-I m4' to ACLOCAL_AMFLAGS in Makefile.am.
;31/May/18 18:15;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt have you installed `pkg-config`?
    Because your Ubuntu image doesn't include it.
;31/May/18 19:22;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Hm. It's not very clear that
    
    > ./configure: line 5034: PKG_PROG_PKG_CONFIG: command not found
    
    means that pkg-config needs to be installed. Esp given we've never needed it - it's a new dependency.
    
    Here's an example of some pushback in the curl community https://github.com/curl/curl/issues/972
    
    If you do want to add this you probably need to add something like:
    
    ```
    m4_ifndef([PKG_PROG_PKG_CONFIG],
      [m4_fatal([Could not locate the pkg-config autoconf macros.
    Please make sure pkg-config is installed and, if necessary, set the environment
    variable ACLOCAL=""aclocal -I/path/to/pkg.m4"".])])
    ```
    
    although I'm honestly not very psyched about this change. It's going to break a bunch of folk's builds.

;31/May/18 20:56;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Perhaps we could do this? -- check if the cppunit macro is defined, if not then check for pkg-config, if not then error out (or whatever we do today). otw use the first macro/approach available.
;31/May/18 21:13;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Hm. iiuc the m4 checks are during configure script creation itself, so perhaps that's not the best idea either. :-(
    

;31/May/18 22:47;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    I had no luck with verifying a specific macro existence for some reason. I'm not sure if there's a way at all. Maybe I should check how other projects are dealing with similar problems.
    
    On the other hand, it's up to us whether we want to support `cppunit` 1.14.0 and move to `pkg-config` or stay on m4 which means folks won't be able to build ZooKeeper on recent distros. 
;01/Jun/18 04:13;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    @phunt I ran a few cycles with the curl commit that you linked and here're my results:
    
    - there's no such thing with autotools that ""check for a macro existence and use it if present"", because macros must always be extracted even if they behind an if condition,
    - Curl circumvents this behaviour by directly calling commands like `pkg-config --libs MYLIB` instead of using the macro that package maintainer provides,
    - as a consequence we either can use the old AM_PATH_CPPUNIT macro or the new pkg-config macro, but not both.
    
    I'm not a fan of Curl approach: it runs custom code essentially which seems to me fragile.
    
    To make an end to this conversion I think we have 2 options.
    1. Replace the old macro with the new one and commit it to trunk only --> we stop supporting the old way from 3.6.0 and pkg-config will be required. Reward: ZK builds on new systems like Ubuntu 18.04.
    2. Don't do anything. 
;08/Aug/18 12:42;githubbot;600","Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    Btw. I think it's perfectly fine to choose option 2.
    I was able to build ZooKeeper C client and run the tests on Ubuntu 18.04 with CMake.
;08/Aug/18 13:50;githubbot;600","Github user anmolnar closed the pull request at:

    https://github.com/apache/zookeeper/pull/528
;11/Aug/18 18:00;githubbot;600","Github user mkedwards commented on the issue:

    https://github.com/apache/zookeeper/pull/528
  
    I'd like to see this brought back.  Not cool to drop autoconf when the CMake setup can't build shared libraries.  From `zookeeper-client/zookeeper-client-c/README`:
    ```
    Current limitations of the CMake build system include lack of Solaris support,
    no shared library option, no explicitly exported symbols (all are exported by
    default), no versions on the libraries, and no documentation generation.
    ```
;25/Nov/18 06:35;githubbot;600","meszibalu commented on pull request #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803
 
 
   Added a new macro (CHECK_CPPUNIT) which tries to use AM_PATH_CPPUNIT or
   PKG_CHECK_MODULES.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 12:40;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-460624439
 
 
   Thanks @meszibalu for the contribution. 
   
   @phunt You might want to take a look at this issue: I failed to fix Ubuntu 18.04 build problem a while ago, but now @meszibalu has found a fully backward compatible way hopefully.
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 12:43;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-460661098
 
 
   retest this please
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;05/Feb/19 14:39;githubbot;600","nkalmar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-467391257
 
 
   retest maven build
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 10:48;githubbot;600","asfgit commented on pull request #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:33;githubbot;600","asfgit commented on pull request #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803
 
 
   
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:33;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-467488057
 
 
   Committed to 3.5 and master branches. Thanks @meszibalu !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:40;githubbot;600","anmolnar commented on issue #803: ZOOKEEPER-3034: Facing issues while building from source
URL: https://github.com/apache/zookeeper/pull/803#issuecomment-467488057
 
 
   Committed to 3.5 and master branches. Thanks @meszibalu !
 
----------------------------------------------------------------
This is an automated message from the Apache Git Service.
To respond to the message, please log on GitHub and use the
URL above to go to the specific comment.
 
For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;26/Feb/19 15:40;githubbot;600","asellappen commented on pull request #528:
URL: https://github.com/apache/zookeeper/pull/528#issuecomment-847799789


   I am facing the same issue now , does this support now for other cpu arch like ppc64le ?


-- 
This is an automated message from the Apache Git Service.
To respond to the message, please log on to GitHub and use the
URL above to go to the specific comment.

For queries about this service, please contact Infrastructure at:
users@infra.apache.org
;25/May/21 11:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,16200,,,0,16200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Sep 12 17:40:46 UTC 2019,,,,,,,,,,"0|i3teq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"16/May/18 04:49;bhavenamrata;Can someone look into this issue?;;;","16/May/18 05:46;andor;Hi [~bhavenamrata], thanks for reporting the issue.

Ubuntu 18.04 is quite recent, I have some doubts about anyone has ever tried to to build ZooKeeper C++ unit tests since it's out, but given that it's an LTS release, we should start looking into it.

The error message is complaing about AM_PATH_CPPUNIT macro is missing. Have you installed any *cppunit* related package?

Is there a cppunit package available in Ubuntu 18.04 at all? I think it's quite an old tool and not actively maintained, maybe it has been removed from the distro.;;;","16/May/18 05:48;andor;Sorry, I missed your apt-get command.

So, libcppunit-dev is available and installed, maybe it's just the build process who's unable to find it and can be fixed by symlinking it to the right place. Need to look into it deeper.;;;","21/May/18 12:32;bhavenamrata;[~andor], the error is due to missing cppunit.m4 file. It was present in Ubuntu 16.04 but seems to be missing in Ubuntu 18.04.

Is Zookeeper supported on Ubuntu 18.04 as of now?;;;","22/May/18 20:05;andor;[~bhavenamrata] No, unfortunately we still don't support Ubuntu 18.04 officially. However, that was a good catch actually. I wonder how we could get round this problem, cppunit is an essential part of C++ testing code currently.

One thing you could potentially try is to compare the recent package version with the one in 16.04 and if it's reasonable get a copy of the missing file from the older package.;;;","23/May/18 04:45;andor;[~bhavenamrata] Please verify my patch [https://github.com/apache/zookeeper/pull/528]

I wonder if we need to polish it any further or it'd be just enough to support 18.04.;;;","23/May/18 05:02;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1730//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1730//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1730//console

This message is automatically generated.;;;","23/May/18 07:02;bhavenamrata;[~andor], verified your patch. Build/tests completed.

Looks like its good enough for Ubuntu 18.04.

 

Thank you for the help :);;;","24/May/18 12:41;andor;[~bhavenamrata] No probs.

Are u able to compile and run tests on Ubuntu 18.04? I got the following error message:

 
{noformat}
[exec] /bin/bash ./libtool --tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I/home/andor/git/my-zookeeper/src/c -I/home/andor/git/my-zookeeper/src/c/include -I/home/andor/git/my-zookeeper/src/c/tests -I/home/andor/git/my-zookeeper/src/c/generated -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo '/home/andor/git/my-zookeeper/src/c/'`src/zookeeper.c
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c: In function ‘print_completion_queue’:
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2530:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""Completion queue: "");
[exec] ^~~~~~~
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2532:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""empty\n"");
[exec] ^~~~~~~
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2538:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""%d,"",cptr->xid);
[exec] ^~~~~~~
[exec] /home/andor/git/my-zookeeper/src/c/src/zookeeper.c:2541:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]
[exec] fprintf(LOGSTREAM,""end\n"");
[exec] ^~~~~~~
[exec] libtool: compile: gcc -DHAVE_CONFIG_H -I. -I/home/andor/git/my-zookeeper/src/c -I/home/andor/git/my-zookeeper/src/c/include -I/home/andor/git/my-zookeeper/src/c/tests -I/home/andor/git/my-zookeeper/src/c/generated -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c /home/andor/git/my-zookeeper/src/c/src/zookeeper.c -fPIC -DPIC -o .libs/zookeeper.o
[exec] Makefile:1030: recipe for target 'zookeeper.lo' failed
[exec] cc1: all warnings being treated as errors
[exec] make: *** [zookeeper.lo] Error 1
{noformat}
{panel:title=GCC version}
$ gcc --version
gcc (Ubuntu 7.3.0-16ubuntu3) 7.3.0
{panel}
Looks like there's some additional plumbing work needed to fully support 18.04

 ;;;","24/May/18 12:47;bhavenamrata;[~andor], I had tried your patch from PR in older version of Zookeeper(3.4.11, which is the version of my interest) where it worked. I can try it out on master once.

 ;;;","24/May/18 12:55;andor;[~bhavenamrata] That would be useful, thanks. I'm working on the master branch at the first place.;;;","24/May/18 20:41;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1753//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1753//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1753//console

This message is automatically generated.;;;","24/May/18 21:29;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1754//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1754//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1754//console

This message is automatically generated.;;;","25/May/18 08:07;bhavenamrata;Master failing for me too :
{quote}{{$ make}}
{{make  all-am}}
{{make[1]: Entering directory '/root/zoo_master/zookeeper/src/c'}}
{{/bin/bash ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I./include -I./tests -I./generated   -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c}}
{{libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wall -Werror -Wdeclaration-after-statement -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c  -fPIC -DPIC -o .libs/zookeeper.o}}
{{src/zookeeper.c: In function 'print_completion_queue':}}
{{src/zookeeper.c:2530:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{     fprintf(LOGSTREAM,""Completion queue: "");}}
{{     ^~~~~~~}}
{{src/zookeeper.c:2532:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{         fprintf(LOGSTREAM,""empty\n"");}}
{{         ^~~~~~~}}
{{src/zookeeper.c:2538:9: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{         fprintf(LOGSTREAM,""%d,"",cptr->xid);}}
{{         ^~~~~~~}}
{{src/zookeeper.c:2541:5: error: null argument where non-null required (argument 1) [-Werror=nonnull]}}
{{     fprintf(LOGSTREAM,""end\n"");}}
{{     ^~~~~~~}}
{{cc1: all warnings being treated as errors}}
{{Makefile:1026: recipe for target 'zookeeper.lo' failed}}
{{make[1]: *** [zookeeper.lo] Error 1}}
{{make[1]: Leaving directory '/root/zoo_master/zookeeper/src/c'}}
{{Makefile:685: recipe for target 'all' failed}}
{{make: *** [all] Error 2}}{quote};;;","30/May/18 10:44;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1767//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1767//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1767//console

This message is automatically generated.;;;","11/Aug/18 18:00;andor;[~bhavenamrata]

I've verified that ZooKeeper C client can be built with CMake on Ubuntu 18.04. I successfully compiled and ran the C++ unit tests too.

As a consequence I close the pull request and this Jira as won't fix, because we don't need to maintain the legacy Autoconf.;;;","26/Feb/19 15:39;andor;Issue resolved by pull request 803
[https://github.com/apache/zookeeper/pull/803];;;","26/Feb/19 20:58;hudson;SUCCESS: Integrated in Jenkins build Zookeeper-trunk-single-thread #250 (See [https://builds.apache.org/job/Zookeeper-trunk-single-thread/250/])
ZOOKEEPER-3034: Facing issues while building from source (andor: rev b3577278ab23f142fdb104a07bd61fbc74a4f152)
* (edit) zookeeper-client/zookeeper-client-c/configure.ac
* (edit) zookeeper-client/zookeeper-client-c/Makefile.am
* (edit) zookeeper-client/zookeeper-client-c/acinclude.m4
;;;","26/Feb/19 23:00;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #416 (See [https://builds.apache.org/job/ZooKeeper-trunk/416/])
ZOOKEEPER-3034: Facing issues while building from source (andor: rev b3577278ab23f142fdb104a07bd61fbc74a4f152)
* (edit) zookeeper-client/zookeeper-client-c/Makefile.am
* (edit) zookeeper-client/zookeeper-client-c/configure.ac
* (edit) zookeeper-client/zookeeper-client-c/acinclude.m4
;;;","11/Sep/19 20:04;shahrs87;[~andor] Given that this bug exists is 3.4.11 branch, does it make sense to backport the patch to branch-3.4 ? Where do I see all the list of actively maintained branches ?;;;","12/Sep/19 15:06;andor;[~shahrs87]

branch-3.4 is still actively maintained, but we only backport security and critical bugfixes.

This is a minor bugfix, so I don't think we should submit this into 3.4

People should upgrade to 3.5.5 now.;;;","12/Sep/19 17:40;shahrs87;Thank you [~andor] for your response.;;;",,,,,,,,,,,,,,,
Accidently removed public API of FileTxnLog.setPreallocSize(),ZOOKEEPER-3027,13155722,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andor,andor,andor,27/Apr/18 14:31,17/Jul/18 04:50,13/Jul/23 09:08,27/Apr/18 18:35,3.4.13,3.5.4,3.6.0,,,,,,,3.4.13,3.5.4,3.6.0,,,server,,,,0,,,"In my latest commit regarding TxnLogToolkit there's a refactor to outsource file padding logic from FileTxnLog to a separate class:

[https://github.com/apache/zookeeper/commit/126fb0f22d701cad58bf3123bf7d8f2219e60387#diff-89717124564925d61d29dd817bcdd915]

Unfortunately public static method setPreallocSize(int) has also been moved to the new class, but it's being actively used by hadoop-common project too:

[https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/ClientBaseWithFixes.java#L384]

I'd like to submit a patch to revert the deleted method which is going to call the new one, but will keep backward compatibility with Hadoop.",,andor,githubbot,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Apr 27 19:12:44 UTC 2018,,,,,,,,,,"0|i3t3xb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"27/Apr/18 14:53;githubbot;GitHub user anmolnar opened a pull request:

    https://github.com/apache/zookeeper/pull/509

    ZOOKEEPER-3027 Accidently removed public API of FileTxnLog.setPreallocSize()

    In my latest commit regarding TxnLogToolkit there's a refactor to outsource file padding logic from FileTxnLog to a separate class:
    
    https://github.com/apache/zookeeper/commit/126fb0f22d701cad58bf3123bf7d8f2219e60387#diff-89717124564925d61d29dd817bcdd915
    
    Unfortunately public static method setPreallocSize(int) has also been moved to the new class, but it's being actively used by hadoop-common project too:
    
    https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/ClientBaseWithFixes.java#L384
    
    I'd like to submit a patch to revert the deleted method which is going to call the new one, but will keep backward compatibility with Hadoop.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-3027

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/509.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #509
    
----
commit 871480dff9b4b106a2a7bdfc6ab720436a6a5042
Author: Andor Molnar <andor@...>
Date:   2018-04-27T14:51:40Z

    ZOOKEEPER-3027. Added back FileTxnLog.setPreallocSize() + unit test

----
;;;","27/Apr/18 15:19;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1645//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1645//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1645//console

This message is automatically generated.;;;","27/Apr/18 18:29;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/509
;;;","27/Apr/18 18:35;phunt;Issue resolved by pull request 509
[https://github.com/apache/zookeeper/pull/509];;;","27/Apr/18 18:36;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/509
  
    +1, good catch. I committed this to all three active branches - please take a look at 3.4 branch commit as I did need to resolve a conflict. (seemed minor and tests are passing)
;;;","27/Apr/18 18:57;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #2 (See [https://builds.apache.org/job/ZooKeeper-trunk/2/])
ZOOKEEPER-3027: Accidently removed public API of (phunt: rev 5c96887643b2465caabbfd4763c7ebb3cd1aa024)
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
* (edit) src/java/test/org/apache/zookeeper/server/persistence/FileTxnLogTest.java
* (edit) src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java
;;;","27/Apr/18 19:12;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/509
  
    @phunt all commits lgtm +1
    thanks.

;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
cmake windows build is broken on jenkins,ZOOKEEPER-3025,13154618,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,andschwa,phunt,phunt,23/Apr/18 21:07,24/Apr/18 04:34,13/Jul/23 09:08,24/Apr/18 00:28,3.5.4,3.6.0,,,,,,,,3.5.4,3.6.0,,,,build,,,,0,,,"Jenkins build for windows cmake is failing:

started here:

[https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-windows-cmake/2717/console]
{noformat}
f:\jenkins\jenkins-slave\workspace\zookeeper-trunk-windows-cmake\src\c\src\hashtable\hashtable.h(6): fatal error C1083: Cannot open include file: 'winconfig.h': No such file or directory [F:\jenkins\jenkins-slave\workspace\ZooKeeper-trunk-windows-cmake\src\c\hashtable.vcxproj]
  hashtable.c{noformat}
 

Looks like one or the other or both of these commits are at issue (jenkins build broken on these two changes being committed)
h2. [#2717 (Apr 16, 2018 4:58:17 AM)|https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-windows-cmake/2717/changes]
 # ZOOKEEPER-3017: Link libm in CMake on FreeBSD. — [hanm|https://builds.apache.org/user/hanm/] / [detail|https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-windows-cmake/2717/changes#67378512285c4b8dc9be50b90bbd2967068fc24e]
 # ZOOKEEPER-2999: CMake build should use target-level commands — [hanm|https://builds.apache.org/user/hanm/] / [detail|https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-windows-cmake/2717/changes#9ba4aeb4f92c1fc3167ff8e2b56e02f3e344d3ba]

 ",,andschwa,githubbot,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,Reviewed,,,,Tue Apr 24 04:34:54 UTC 2018,,,,,,,,,,"0|i3sx7j:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"23/Apr/18 21:09;phunt;[~hanm] - could you take a look at this issue? Seems to be related to recent commit.

Also note original authors: [~andschwa] and [~dforsyth] may have insight?;;;","23/Apr/18 23:33;andschwa;Ah, my bad. Turns out to be caused by [https://github.com/apache/zookeeper/pull/486/commits/b030f29c02bd87f10c0ac995f4c8abf85eb7bf9b]

We'd tested on Linux, but not Windows, which has an extra include file. Writing a patch currently.;;;","24/Apr/18 00:06;githubbot;GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/505

    ZOOKEEPER-3025: Make `hashtable` search `include`

    When ZOOKEEPER-2999 removed the directory side-effect of
    `include_directories(include)`, and added it as a target-level include
    to the `zookeeper` library, this broke the Windows build. It worked on
    Linux (where the patch was tested) because `winconfig.h` and is not
    included, but on Windows, the `hashtable` library included
    `winconfig.h` (found in `include`) but no longer knew where to find
    it. The fix is to add `include` to the `hashtable` library's list of
    include directories.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-3025

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/505.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #505
    
----
commit 69afce4df5a5cc71999d67c87578e236b58d17a1
Author: Andrew Schwartzmeyer <andrew@...>
Date:   2018-04-23T23:38:03Z

    ZOOKEEPER-3025: Make `hashtable` search `include`
    
    When ZOOKEEPER-2999 removed the directory side-effect of
    `include_directories(include)`, and added it as a target-level include
    to the `zookeeper` library, this broke the Windows build. It worked on
    Linux (where the patch was tested) because `winconfig.h` and is not
    included, but on Windows, the `hashtable` library included
    `winconfig.h` (found in `include`) but no longer knew where to find
    it. The fix is to add `include` to the `hashtable` library's list of
    include directories.

----
;;;","24/Apr/18 00:11;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/505
  
    Built successfully both in-tree and out-of-tree on Windows using the VS generator, also successfully built with the Ninja generator 😉 
;;;","24/Apr/18 00:20;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1621//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1621//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1621//console

This message is automatically generated.;;;","24/Apr/18 00:22;phunt;No worries at all [~andschwa] - I'll take a look at the PR. Thanks for the followup.;;;","24/Apr/18 00:26;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/505
;;;","24/Apr/18 00:28;phunt;The patch fixed it, jenkins is green again:

 

https://builds.apache.org/view/S-Z/view/ZooKeeper/job/ZooKeeper-trunk-windows-cmake/;;;","24/Apr/18 00:29;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/505
  
    +1. Thanks @andschwa 
;;;","24/Apr/18 00:33;andschwa;No problem [~phunt]! I am very glad to see a working Windows CI system :D;;;","24/Apr/18 04:34;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3815 (See [https://builds.apache.org/job/ZooKeeper-trunk/3815/])
ZOOKEEPER-3025: cmake broken on windows - make `hashtable` search (phunt: rev cb6cae91c71b679d5bbc3fb48bf707fd1bb14493)
* (edit) src/c/CMakeLists.txt
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
Follower QuorumCnxManager$Listener thread died due to incorrect client packet,ZOOKEEPER-3016,13149663,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,,sumitagrawal,sumitagrawal,03/Apr/18 05:20,09/Apr/18 10:12,13/Jul/23 09:08,09/Apr/18 10:12,3.4.6,,,,,,,,,3.4.7,,,,,,,,,0,,,"While accepting connection from client, and message is incorrect, this causes NegativeArraySizeException while creating byte array of negative size.

 

~2018-03-02 23:51:21 [UTC:20180302T235121+0100]|INFO ||/xx.xx.xx.xx:3888hread|Coordination > Received connection request /yy.yy.yy.yy:18320 (QuorumCnxManager.java:511)~

~2018-03-02 23:51:21 [UTC:20180302T235121+0100]|ERROR||/xx.xx.xx.xx:3888hread|Coordination > Thread Thread[/xx.xx.xx.xx:3888,5,main] died (NIOServerCnxnFactory.java:44)~
 ~java.lang.NegativeArraySizeException~
 ~at org.apache.zookeeper.server.quorum.QuorumCnxManager.receiveConnection(QuorumCnxManager.java:242)~
 ~at org.apache.zookeeper.server.quorum.QuorumCnxManager$Listener.run(QuorumCnxManager.java:513)~

 

Below is code reference having the issue.

int num_remaining_bytes = din.readInt();
 byte[] b = new byte[num_remaining_bytes];

 

This makes other node in quorum unable to connect to this node. Here client is security scan app.

 

Check for invalid input must be present to avoid Node crashing and security.

 

 ",,andor,sumitagrawal,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-2186,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Tue Apr 03 09:51:12 UTC 2018,,,,,,,,,,"0|i3s2t3:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"03/Apr/18 07:20;sumitagrawal;If the thread dies due to any of reason, this node can not be used. There is no mechanism to bring back the thread. So:
 * Catch the generic exception like Throwable
 * AND/OR should have soft restart of Zookeeper node

 ;;;","03/Apr/18 09:51;andor;[~sumitagrawal]

This issue has already been fixed in 3.4.7:

https://issues.apache.org/jira/browse/ZOOKEEPER-2186

Please verify and close this one if it's a duplicate.;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE in NIOServerCnxnFactory,ZOOKEEPER-3009,13147860,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,xiaoheipangzi,xiaoheipangzi,xiaoheipangzi,26/Mar/18 07:46,04/Oct/19 14:55,13/Jul/23 09:08,15/Jun/18 06:03,3.4.12,3.6.0,,,,,,,,3.4.14,3.5.5,3.6.0,,,,,,,0,pull-request-available,,"Inspired by ZK-3006 , I develop a simple static analysis tool to find other Potential NPE like ZK-3006. This bug is found by this tool ,and I have carefully studied it.  But i am a newbie at here so i may be wrong, hope someone could confirm it and help me improve this tool.
h2. Bug description:

 class NIOServerCnxn has three method :getSocketAddress,getRemoteSocketAddress can return null just like :
{code:java}
// code placeholder
if (sock.isOpen() == false) {
  return null;
}
{code}
some of their caller give null checker, some(total 3 list in below) are not. 
{code:java}
// ServerCnxn#getConnectionInfo
Map<String, Object> info = new LinkedHashMap<String, Object>();
info.put(""remote_socket_address"", getRemoteSocketAddress());// Map.put will throw NPE if parameter is null

//IPAuthenticationProvider#handleAuthentication
tring id = cnxn.getRemoteSocketAddress().getAddress().getHostAddress();
cnxn.addAuthInfo(new Id(getScheme(), id));// finally call Set.add(it will throw NPE if parameter is null )

//NIOServerCnxnFactory#addCnxn
InetAddress addr = cnxn.getSocketAddress();
Set<NIOServerCnxn> set = ipMap.get(addr);// Map.get will throw NPE if parameter is null{code}
I think we should add null check in above three caller .

 ",,andor,hanm,hudson,leigong,xiaoheipangzi,,,,,,,,,,,,,,,"GitHub user lujiefsi opened a pull request:

    https://github.com/apache/zookeeper/pull/525

    [ZOOKEEPER-3009] Potential NPE in NIOServerCnxnFactory

    We have developed a static analysis tool NPEDetector to find some potential NPE. Our analysis shows that NPE reason can be simple:some callees may return null directly in corner case(e.g. node crash , IO exception), some of their callers have  !=null check but some do not have. 
    ### Bug:
    Callee getSocketAddress can return null, may caused by node crash, network exception....
    <pre>
        public InetAddress getSocketAddress() {
            if (sock.isOpen() == false) {
                return null;
            }
            return sock.socket().getInetAddress();
        }
    </pre>
    
    caller removeCnxn has null check
    <pre>
     public boolean removeCnxn(NIOServerCnxn cnxn) {
            //other code
            InetAddress addr = cnxn.getSocketAddress();
            if (addr != null) {
                Set<NIOServerCnxn> set = ipMap.get(addr);
                //other code
            }
         //other code
        }
    </pre>
    
    but caller addCnxn has them similar code, but don't have the null check:
    <pre>
         private void addCnxn(NIOServerCnxn cnxn) {
             InetAddress addr = cnxn.getSocketAddress();
             Set<NIOServerCnxn> set = ipMap.get(addr);
            //other code
          }
    </pre>

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lujiefsi/zookeeper ZOOKEEPER-3009

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/525.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #525
    
----
commit 8bfad14efaa885818dbf45a33c9ad8b55d3901e4
Author: LJ1043041006 <1239497420@...>
Date:   2018-05-21T01:41:13Z

    [ZOOKEEPER-3009] Potential NPE in NIOServerCnxnFactory

----
;21/May/18 01:52;githubbot;600","Github user phunt commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/525#discussion_r189666458
  
    --- Diff: src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java ---
    @@ -815,8 +815,11 @@ public void touchCnxn(NIOServerCnxn cnxn) {
             cnxnExpiryQueue.update(cnxn, cnxn.getSessionTimeout());
         }
     
    -    private void addCnxn(NIOServerCnxn cnxn) {
    +    private void addCnxn(NIOServerCnxn cnxn) throws IOException {
             InetAddress addr = cnxn.getSocketAddress();
    +        if (addr == null) {
    +            throw new IOException(""Scoket of "" + cnxn + "" has been closed"");
    --- End diff --
    
    fix the spelling.
;21/May/18 18:00;githubbot;600","Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/525
  
    These are useful fixes. However one of the burdens of recommending such a fix is to also prove that the fix really addresses the issue, rather than just moving the problem somewhere else. In particular it would be good if the description of this fix (and any such fix) included details on whether all of the callers to addCnxn handle the new error handling code properly. In this case throwing the IOException in addCnxn. ""some of their callers have !=null check but some do not have"" One of the things any committer will need to do is also verify, and having this thought out ahead of time will help.
    
    Another thing - are the null checks in the caller code still necessary? Should they be removed? If yes any such patch should include changes there as well.

;21/May/18 18:06;githubbot;600","Github user lujiefsi commented on the issue:

    https://github.com/apache/zookeeper/pull/525
  
    Hi: @phunt 
    Great suggestions for me!!!! I have update the bug description:
    (1) getSocketAddress only has two callers, just as shown in description.
    (2)addCnxn only has one caller, and has the exception handler.
;22/May/18 02:23;githubbot;600","Github user lvfangmin commented on the issue:

    https://github.com/apache/zookeeper/pull/525
  
    LGTM +1, the caller has handled the IOException properly.
;09/Jun/18 06:25;githubbot;600","Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/525
;15/Jun/18 06:03;githubbot;600","GitHub user lujiefsi opened a pull request:

    https://github.com/apache/zookeeper/pull/544

    ZOOKEEPER-3009 : fix the related bugs in branch-3.4

    The same problem that described in ZOOKEEPER-3009  also exists in branch-3.4, just as @hanm said. I pull a new request to fix it. The patch just make the related code of 3.4 be same as 3.5. please check!!!

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/lujiefsi/zookeeper ZOOKEEPER-3009-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/544.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #544
    
----
commit 82e310428268eedec58b0a88d1af9b9a265c999a
Author: lujie <lujiefsi@...>
Date:   2018-06-15T07:42:07Z

    fix the ZOOKEEPER-3009 in branch-3.4

----
;15/Jun/18 07:50;githubbot;600","Github user hanm commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/544#discussion_r195958750
  
    --- Diff: src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java ---
    @@ -165,9 +168,13 @@ public void removeCnxn(NIOServerCnxn cnxn) {
                 }
     
                 synchronized (ipMap) {
    -                Set<NIOServerCnxn> s =
    -                        ipMap.get(cnxn.getSocketAddress());
    -                s.remove(cnxn);
    +                InetAddress addr = cnxn.getSocketAddress();
    +            	if (addr != null) {
    --- End diff --
    
    coding style issue: need one more space before the if statement so it aligns with previous statement. Other than this, patch looks good.
;18/Jun/18 03:35;githubbot;600","Github user lujiefsi commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/544#discussion_r195967959
  
    --- Diff: src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java ---
    @@ -165,9 +168,13 @@ public void removeCnxn(NIOServerCnxn cnxn) {
                 }
     
                 synchronized (ipMap) {
    -                Set<NIOServerCnxn> s =
    -                        ipMap.get(cnxn.getSocketAddress());
    -                s.remove(cnxn);
    +                InetAddress addr = cnxn.getSocketAddress();
    +            	if (addr != null) {
    --- End diff --
    
    tabs led the bad coding style, I have removed it.
;18/Jun/18 05:32;githubbot;600","Github user lvfangmin commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/544#discussion_r204217429
  
    --- Diff: src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java ---
    @@ -129,11 +129,14 @@ public int getLocalPort(){
             return ss.socket().getLocalPort();
         }
     
    -    private void addCnxn(NIOServerCnxn cnxn) {
    +    private void addCnxn(NIOServerCnxn cnxn) throws IOException {
             synchronized (cnxns) {
                 cnxns.add(cnxn);
                 synchronized (ipMap){
    -                InetAddress addr = cnxn.sock.socket().getInetAddress();
    +                InetAddress addr = cnxn.getSocketAddress();
    +                if (addr == null) {
    +                	throw new IOException(""Socket of "" + cnxn + "" has been closed"");
    --- End diff --
    
    nit: keep indent.
;21/Jul/18 18:23;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/544
  
    committed to 3.4, thanks @lujiefsi !
    Please close this pull request.
;27/Jul/18 03:24;githubbot;600","Github user lujiefsi closed the pull request at:

    https://github.com/apache/zookeeper/pull/544
;27/Jul/18 03:26;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,7200,,,0,7200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Sun Jul 22 05:19:32 UTC 2018,,,,,,,,,,"0|i3rrq7:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Mar/18 13:54;andor;Hi [~xiaoheipangzi]

Thanks for the nice contribution, I really appreciate your enthusiasm to develop such a handy tool.

However, have you checked if it would be possible to similar check with our existing static analysis tool, findbugs?

In addition to that, there's an ongoing effort in [https://github.com/apache/zookeeper/pull/490] to integrate Google's error prone compiler for very similar purposes. I'm not sure if you've seen that, but I think it worth to consider bringing these existing tools up to speed before implementing something new from scratch.;;;","27/Mar/18 03:11;xiaoheipangzi;Hi [~andor]

Thinks for your pertinent suggestions.

I develop this tool from scratch because: 
 # I apply  findbugs to check this bug ,  but findbugs leave it out(I assume because it does not perform  interprocedural  analysis in this check).
 # i am not  very familiar with findbugs and  Google's error prone .
 # [WALA|https://github.com/wala/WALA](a famous static analysis tool developed by IBM) is my sidekicks, I have developed some static analysis tool based on  it , so I choose it again.

I will try my best to check if findbugs own this rule(eg. callee return null but caller does not check), if not, i will try my best to add this rule.

Anyway, I develop this tool based on my finding of zookeeper-3006 and _[Alibaba Java Coding Guidelines|https://github.com/alibaba/p3c]_ which clearly indicates that callee can return null but caller must check it.

On the other hand, massive non-null checker also bother me, just as talk in [Avoiding != null statements|https://stackoverflow.com/questions/271526/avoiding-null-statements/271874#271874] . Now i am at the crossroads(+)

 ;;;","21/May/18 02:05;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1718//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1718//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1718//console

This message is automatically generated.;;;","21/May/18 06:49;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1720//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1720//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1720//console

This message is automatically generated.;;;","22/May/18 02:36;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1723//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1723//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1723//console

This message is automatically generated.;;;","15/Jun/18 06:03;hanm;Issue resolved by pull request 525
[https://github.com/apache/zookeeper/pull/525];;;","15/Jun/18 06:17;hanm;I committed your patch to 3.5 and master, and leave this issue resolved for now.

The same problem existing in 3.4, however there is a little more work required to properly structure the exception handling in 3.4 so it's on par with 3.5. [~xiaoheipangzi] if you are interested, you can send a pull request targeting branch-3.4 with your fix (and make sure the exception is caught and socket closed etc). ;;;","15/Jun/18 08:04;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #62 (See [https://builds.apache.org/job/ZooKeeper-trunk/62/])
ZOOKEEPER-3009: Potential NPE in NIOServerCnxnFactory (hanm: rev 13dd5d0db7a5c4fa926d1e44fc2047c24d5d012c)
* (edit) src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java
;;;","15/Jun/18 08:48;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1832//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1832//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1832//console

This message is automatically generated.;;;","18/Jun/18 05:39;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1840//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1840//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1840//console

This message is automatically generated.;;;","18/Jun/18 05:39;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1841//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1841//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1841//console

This message is automatically generated.;;;","18/Jun/18 14:06;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1843//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1843//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1843//console

This message is automatically generated.;;;","22/Jul/18 05:19;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1985//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1985//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1985//console

This message is automatically generated.;;;",,,,,,,,,,,,,,,,,,,,,,,,
Potential NPE in ReferenceCountedACLCache#deserialize ,ZOOKEEPER-3007,13147853,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,xiaoheipangzi,xiaoheipangzi,xiaoheipangzi,26/Mar/18 07:30,17/Jul/18 04:50,13/Jul/23 09:08,26/Apr/18 22:24,3.6.0,,,,,,,,,3.4.13,3.5.4,3.6.0,,,,,,,0,,,"Inspired by ZK-3006 , I develop a simple static analysis tool to find other Potential NPE like ZK-3006. This bug is found by this tool ,and I have carefully studied it.  But i am a newbie at here so i may be wrong, hope someone could confirm it and help me improve this tool.
h3. Bug describtion:

callee BinaryInputArchive#startVector will return null:
{code:java}
// code placeholder
public Index startVector(String tag) throws IOException {
    int len = readInt(tag);
     if (len == -1) {
     return null;
}
{code}
and caller ReferenceCountedACLCache#deserialize  call it without null check
{code:java}
// code placeholder
Index j = ia.startVector(""acls"");
while (!j.done()) {
  ACL acl = new ACL();
  acl.deserialize(ia, ""acl"");
}{code}
but all the other 14 caller of BinaryInputArchive#startVector performs null checker like:
{code:java}
// code placeholder
Index vidx1 = a_.startVector(""acl"");
  if (vidx1!= null)
     for (; !vidx1.done(); vidx1.incr()){
     .....
    }
   }
}
{code}
so i think we also need add null check in caller ReferenceCountedACLCache#deserialize  just like other 14 caller

 ",,githubbot,hudson,leigong,xiaoheipangzi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Thu Apr 26 23:34:30 UTC 2018,,,,,,,,,,"0|i3rron:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"26/Mar/18 13:18;githubbot;GitHub user brettKK opened a pull request:

    https://github.com/apache/zookeeper/pull/495

    ZOOKEEPER-3007:Potential NPE in ReferenceCountedACLCache#deserialize

    @LJ1043041006 found a potential NPE in ZK
    ----
    callee BinaryInputArchive#startVector will return null:
    ```
    // code placeholder
    public Index startVector(String tag) throws IOException {
        int len = readInt(tag);
         if (len == -1) {
         return null;
    }
    ```
    
    -----
    and caller ReferenceCountedACLCache#deserialize  call it without null check
    ```
    // code placeholder
    Index j = ia.startVector(""acls"");
    while (!j.done()) {
      ACL acl = new ACL();
      acl.deserialize(ia, ""acl"");
    }
    ```


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/brettKK/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/495.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #495
    
----

----
;;;","26/Mar/18 13:32;githubbot;Github user LJ1043041006 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/495#discussion_r177089527
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---
    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
                 }
                 List<ACL> aclList = new ArrayList<ACL>();
                 Index j = ia.startVector(""acls"");
    -            while (!j.done()) {
    -                ACL acl = new ACL();
    -                acl.deserialize(ia, ""acl"");
    -                aclList.add(acl);
    -                j.incr();
    +            if (j != null) {
    +                while (!j.done()) {
    +                    ACL acl = new ACL();
    +                    acl.deserialize(ia, ""acl"");
    +                    aclList.add(acl);
    +                    j.incr();
    +                }
    +                longKeyMap.put(val, aclList);
    --- End diff --
    
    should we move 199~122 out of if to avoid endless loop?
;;;","27/Mar/18 02:56;githubbot;Github user maoling commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/495#discussion_r177294282
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---
    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
                 }
                 List<ACL> aclList = new ArrayList<ACL>();
                 Index j = ia.startVector(""acls"");
    -            while (!j.done()) {
    -                ACL acl = new ACL();
    -                acl.deserialize(ia, ""acl"");
    -                aclList.add(acl);
    -                j.incr();
    +            if (j != null) {
    --- End diff --
    
    - can we have a more elegant way to process this NPE ?
    - BTW. incorrect commit message.   `git commit --amend -m ""your new message""` to modify it
;;;","27/Mar/18 03:20;githubbot;Github user LJ1043041006 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/495#discussion_r177296763
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---
    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
                 }
                 List<ACL> aclList = new ArrayList<ACL>();
                 Index j = ia.startVector(""acls"");
    -            while (!j.done()) {
    -                ACL acl = new ACL();
    -                acl.deserialize(ia, ""acl"");
    -                aclList.add(acl);
    -                j.incr();
    +            if (j != null) {
    +                while (!j.done()) {
    +                    ACL acl = new ACL();
    +                    acl.deserialize(ia, ""acl"");
    +                    aclList.add(acl);
    +                    j.incr();
    +                }
    +                longKeyMap.put(val, aclList);
    --- End diff --
    
    Can we move code at line 119~123 out of null-checker, because it may cause endless loop due to i > 0 may always hold
;;;","27/Mar/18 08:21;githubbot;Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/495#discussion_r177343134
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---
    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
                 }
                 List<ACL> aclList = new ArrayList<ACL>();
                 Index j = ia.startVector(""acls"");
    -            while (!j.done()) {
    -                ACL acl = new ACL();
    -                acl.deserialize(ia, ""acl"");
    -                aclList.add(acl);
    -                j.incr();
    +            if (j != null) {
    +                while (!j.done()) {
    +                    ACL acl = new ACL();
    +                    acl.deserialize(ia, ""acl"");
    +                    aclList.add(acl);
    +                    j.incr();
    +                }
    +                longKeyMap.put(val, aclList);
    --- End diff --
    
    +1 
    Only the inner while-loop uses the `j` variable, so nothing else should be inside the check.
;;;","27/Mar/18 08:26;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    @brettKK Thanks for the fix. It'd be nice to add at least a unit test to cover the issue.
    
    I think adding the check alone is not enough here. Looking at the `serialize()` method, if `map` field is greater than 0, both `long` and `acls` fields must also be present.
    In other words, in `deserialize()` if (i>0) then both `long` and `acls` are mandatory. As a consequence  the else branch of the check should also be implemented and an exception should be thrown indicating that the archive cannot be deserialise, because the format is incorrect.
    
    Does it make sense?
;;;","27/Mar/18 08:37;githubbot;Github user LJ1043041006 commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    @brettKK 
    so if we change code like this :
    `Index j = ia.startVector(""acls"");
    if (j == null){
       throw new IOException(""errmessage"");
    }
    while (!j.done)
    ..........
    `
     @maoling this change can be elegant to check null?
    @anmolnar this change can be correct?
;;;","27/Mar/18 08:50;githubbot;Github user LJ1043041006 commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/495#discussion_r177351128
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---
    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
                 }
                 List<ACL> aclList = new ArrayList<ACL>();
                 Index j = ia.startVector(""acls"");
    -            while (!j.done()) {
    -                ACL acl = new ACL();
    -                acl.deserialize(ia, ""acl"");
    -                aclList.add(acl);
    -                j.incr();
    +            if (j != null) {
    --- End diff --
    
    just as @anmolnar  review, we should throw exception if j == null, so add code just like 
    
    if (j == null){
        throw Exception(error_message);
    }
    @maoling can this change be elegant? 

;;;","27/Mar/18 10:52;githubbot;Github user brettKK commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    yeah， I will fix it @anmolnar @maoling @LJ1043041006 
;;;","27/Mar/18 11:42;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    @LJ1043041006 Looking good.
    RuntimeException might suit better, but I'm not sure.
;;;","19/Apr/18 15:14;githubbot;Github user lujiefsi commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    Can we close it???
;;;","19/Apr/18 15:47;githubbot;Github user brettKK closed the pull request at:

    https://github.com/apache/zookeeper/pull/495
;;;","19/Apr/18 15:47;githubbot;GitHub user brettKK reopened a pull request:

    https://github.com/apache/zookeeper/pull/495

    ZOOKEEPER-3007:Potential NPE in ReferenceCountedACLCache#deserialize

    @LJ1043041006 found a potential NPE in ZK
    ----
    callee BinaryInputArchive#startVector will return null:
    ```
    // code placeholder
    public Index startVector(String tag) throws IOException {
        int len = readInt(tag);
         if (len == -1) {
         return null;
    }
    ```
    
    -----
    and caller ReferenceCountedACLCache#deserialize  call it without null check
    ```
    // code placeholder
    Index j = ia.startVector(""acls"");
    while (!j.done()) {
      ACL acl = new ACL();
      acl.deserialize(ia, ""acl"");
    }
    ```


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/brettKK/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/495.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #495
    
----
commit 7d8d5230c5a87faef94d038a258b159a322f3f5e
Author: gongleigl.gong <gongleigl.gong@...>
Date:   2018-03-26T13:16:06Z

    d

commit 700dfb7f48f774dd215e5bf19340a4b61eda3397
Author: gongleigl.gong <gongleigl.gong@...>
Date:   2018-03-27T16:38:28Z

    fix NPE bug

----
;;;","19/Apr/18 16:07;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1601//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1601//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1601//console

This message is automatically generated.;;;","22/Apr/18 07:15;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1612//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1612//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1612//console

This message is automatically generated.;;;","22/Apr/18 07:32;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1614//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1614//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1614//console

This message is automatically generated.;;;","25/Apr/18 00:42;githubbot;Github user phunt commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/495#discussion_r183918644
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---
    @@ -109,6 +109,10 @@ public synchronized void deserialize(InputArchive ia) throws IOException {
                 }
                 List<ACL> aclList = new ArrayList<ACL>();
                 Index j = ia.startVector(""acls"");
    +            if (j == null) {
    +                LOG.error(""ERROR: incorrent format of InputArchive"" + ia);
    --- End diff --
    
    You don't need an ERROR in the text here or on the next line. It's already LOG'd as an error. Same for the next line - it's a RTE.
    
    Also you need a space  ""... of InputArchive"" -> "".... of InputArchive "" (notice space at the end. Otw the text of ia is just appended w/o the space. Also notice that ia doesn't have a toString, so I'm not sure how helpful that is.... it's fine to leave I guess.
;;;","25/Apr/18 00:44;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    I ran out of time to answer this question, perhaps you can tell me - what happens when the RTE is thrown? Is the caller handling it appropriately/reasonably, or are we just pushing the problem somewhere else?
;;;","25/Apr/18 01:11;githubbot;Github user lujiefsi commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    @phunt :
    I think the reason that @brettKK  use RuntimeException to replace NullPointerException is :(1)NullPointerException  is subclass of RuntimeException (2) give the semantic reason instead  ugly NPE.(3)@brettkk may dost not think over what happens when the RTE is thrown. He/She may just do it due to (2) .
;;;","25/Apr/18 01:49;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    Understood on throwing the exception (1&2). I'm interested in 3 - when it is thrown is it handled correctly or some unexpected sideeffect. If we're going to try to fix we should really ensure we fix it.
;;;","25/Apr/18 02:26;githubbot;Github user lujiefsi commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    @phunt 
    I got it. I have found all ""deserialize"" root caller and callsite postion:
    (1)QuorumPeer#1208,#1154,#1152,#1182,#1154,#1194,#1195: their code have same format:
    ` try {
                       //root caller
                        } catch (Exception e) {
                            LOG.warn(""Unexpected exception"",e);
           }
    } `   
    So i think the RuntimeException in the patch  is ok in here
    (2)QuorumPeer#860,852:  there is another ""throw new RuntimeException"" at #520. So i think the RuntimeException in the patch  is ok in here
    (3)ZooKeeperServerMain#64  SnapshotFormatter#53 : these two caller are main function, when run into RuntimeException , it will exit, I am not sure the ""RuntimeException"" in the patch  whether is ok in here.

;;;","25/Apr/18 03:16;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1628//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1628//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1628//console

This message is automatically generated.;;;","25/Apr/18 21:15;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    Ok, that (call site analysis) makes sense. 
    
    I'm afraid I was unclear, when I said
    
    ""You don't need an ERROR in the text here or on the next line.""
    
    What I mean is that the text string should not start with ""ERROR"" given the error string is in an exception and the logging (from one of the callers) will determine the severity to assign. As such my recommendation would be something like:
    
    > throw new RuntimeException(""Incorrect format of InputArchive when deserialize DataTree - missing acls"");
    
    Notice: 1) the removal of ""ERROR"" and the addition of ""missing acls"" in order to give the person diagnosing the problem a bit more insight (otw they have to find the source line in order to get more insight into what they formatting issue might be).
    
    If you clear this up (this one line) I think we should be good for commit.
    
    Thanks!
;;;","26/Apr/18 02:33;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1632//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1632//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1632//console

This message is automatically generated.;;;","26/Apr/18 09:02;githubbot;Github user lujiefsi commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    Seems that unit test error is not caused by this patch?
;;;","26/Apr/18 22:22;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/495
;;;","26/Apr/18 22:24;phunt;Issue resolved by pull request 495
[https://github.com/apache/zookeeper/pull/495];;;","26/Apr/18 22:25;githubbot;Github user phunt commented on the issue:

    https://github.com/apache/zookeeper/pull/495
  
    +1. Yes, it looks like those failures are unrelated (tests passed for me). Thanks @lujiefsi and @brettKK 
;;;","26/Apr/18 23:34;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3821 (See [https://builds.apache.org/job/ZooKeeper-trunk/3821/])
ZOOKEEPER-3007: Potential NPE in ReferenceCountedACLCache#deserialize (phunt: rev 2c0168ad37b529447ac8cb1bf866d014f8a97981)
* (edit) src/java/test/org/apache/zookeeper/server/ReferenceCountedACLCacheTest.java
* (edit) src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java
;;;",,,,,,,,
Potential NPE in ZKDatabase#calculateTxnLogSizeLimit,ZOOKEEPER-3006,13147675,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,eribeiro,xiaoheipangzi,xiaoheipangzi,24/Mar/18 08:16,06/Apr/18 04:31,13/Jul/23 09:08,06/Apr/18 04:04,3.6.0,,,,,,,,,3.5.4,3.6.0,,,,,,,,0,,,"I have found a potential NPE in ZKDatabase#calculateTxnLogSizeLimit:

 
{code:java}
//ZKDatabase
public long calculateTxnLogSizeLimit() {
long snapSize = 0;
try {
snapSize = snapLog.findMostRecentSnapshot().length();
} catch (IOException e) {
LOG.error(""Unable to get size of most recent snapshot"");
}
return (long) (snapSize * snapshotSizeFactor);
}
{code}
 in FileTxnSnapLog#findMostRecentSnapshot(), it will return the result of  FileSnap#findMostRecentSnapshot:
{code:java}
// called by FileTxnSnapLog#findMostRecentSnapshot()
public File findMostRecentSnapshot() throws IOException {
List<File> files = findNValidSnapshots(1);
if (files.size() == 0) {
return null;
}
return files.get(0);
}
{code}
So it will return null when the files sizes is 0, but ZKDatabase#calculateTxnLogSizeLimit has no null checker

 

 ",,githubbot,hanm,hudson,leigong,maoling,xiaoheipangzi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Apr 06 04:31:58 UTC 2018,,,,,,,,,,"0|i3rqlj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"24/Mar/18 15:36;githubbot;GitHub user edwardoliveira opened a pull request:

    https://github.com/apache/zookeeper/pull/493

    ZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/eribeiro/zookeeper zk-3006-potential-npe

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/493.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #493
    
----
commit c0a9763c5a0fc63d2cad99ea9d219c08fd454d2e
Author: Edward Ribeiro <edward.ribeiro@...>
Date:   2018-03-24T15:35:27Z

    ZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit

----
;;;","25/Mar/18 03:02;githubbot;Github user LJ1043041006 commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    +1 lgtm,  but ""All checks have failed"" makes me wonder and i think the error is not cause by this patch, am i right.
;;;","25/Mar/18 03:33;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    @anmoldar thanks for the feedback! Gonna update the description and add a test case asap. Btw, I am not the one who found this potential npe, but I am glad to help. :) Last but not least, I opened the PR for master, but should we address this issue on previous branches too? 
    
    @LJ1043041006 yup, I don't think the failed tests are related to this patch at all. Gonna take a closer look really soon. ZK has some flaky tests, but looks like there was an exception that prevented any test from running.
;;;","25/Mar/18 04:49;githubbot;Github user LJ1043041006 commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    @eribeiro , I found this  potential npe  and open issue [zk-3006](https://issues.apache.org/jira/browse/ZOOKEEPER-3006), but i am not  very familiar with zookeeper code, so could you please add a unit test? thinks!
;;;","25/Mar/18 10:43;githubbot;Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    +1,LGTM
;;;","25/Mar/18 20:18;githubbot;Github user edwardoliveira commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    Hey, @LJ1043041006, I have just added a unit test. Cheers!
;;;","26/Mar/18 02:04;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    @edwardoliveira : could you please share your email so I can put it in commit message when merge this? 
    Also, could you please create a JIRA account if you don't have one on https://issues.apache.org/jira/projects/ZOOKEEPER so I can assign ZOOKEEPER-3006 to you? This is to make sure we distribute commit credits to contributors.
;;;","26/Mar/18 02:25;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    Hi @hanm,
    
    Excuse me for the mess up and subsequent confusion. @edwardoliveira is me, @eribeiro (on GH and JIRA), but I inadvertedly opened the PR using my second GH account. :(
    
    My e-mail is edward.ribeiro@gmail.com
    
    If you prefer, I may close this PR and open a new PR from my main account. The referenced branch comes from the right account, already.
    
    I have already assigned the issue to myself, btw. 
    
    Cheers!
;;;","26/Mar/18 08:25;githubbot;Github user LJ1043041006 commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    Hi guys, **one more thing**
    I have developed a very simple tool to find Potential NPE in Zookeeper(based on  [WALA](https://github.com/wala/WALA)), I list the result in ZK-3007~3010
    , so anyone can help me confirm them and  improve this tool (hopefully it can be open source  ) 
;;;","06/Apr/18 04:04;hanm;Issue resolved by pull request 493
[https://github.com/apache/zookeeper/pull/493];;;","06/Apr/18 04:04;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/493
;;;","06/Apr/18 04:05;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/493
  
    @edwardoliveira that's fine, I did not know that's you :-). Patch committed.
;;;","06/Apr/18 04:31;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3790 (See [https://builds.apache.org/job/ZooKeeper-trunk/3790/])
ZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit (hanm: rev fbd21329d32f185d198344f2d394175c92a82f9e)
* (edit) src/java/main/org/apache/zookeeper/server/ZKDatabase.java
* (edit) src/java/test/org/apache/zookeeper/test/ZkDatabaseCorruptionTest.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,
Incorrect log message when try to delete container node,ZOOKEEPER-3001,13146050,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,sel-fish,sel-fish,sel-fish,18/Mar/18 14:13,26/Mar/18 02:39,13/Jul/23 09:08,26/Mar/18 01:49,3.5.3,,,,,,,,,3.5.4,3.6.0,,,,server,,,,0,,,"The log message when trying to delete a container node is not proper, missing
*_String.format_*",,githubbot,hanm,hudson,sel-fish,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 26 02:39:54 UTC 2018,,,,,,,,,,"0|i3rglr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Mar/18 14:19;githubbot;GitHub user sel-fish opened a pull request:

    https://github.com/apache/zookeeper/pull/491

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

    Missing `String.format` when print the log.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sel-fish/zookeeper ZOOKEEPER-3001

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/491.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #491
    
----
commit 1f90b95f2e8ad73d58ac804aeec5cfdc13aeaf86
Author: 漠冰 <mobing.fql@...>
Date:   2018-03-18T14:17:17Z

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

----
;;;","18/Mar/18 14:19;githubbot;Github user sel-fish closed the pull request at:

    https://github.com/apache/zookeeper/pull/491
;;;","18/Mar/18 14:22;githubbot;GitHub user sel-fish opened a pull request:

    https://github.com/apache/zookeeper/pull/492

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

    Missing `String.format`.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sel-fish/zookeeper ZOOKEEPER-3001

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/492.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #492
    
----
commit 814b3b2eed398671b7d124509b4a2b5a87e3680d
Author: sel-fish <fqlgy@...>
Date:   2018-03-18T14:20:42Z

    ZOOKEEPER-3001: Incorrect log message when try to delete container node

----
;;;","18/Mar/18 15:54;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/492#discussion_r175293565
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---
    @@ -116,8 +116,8 @@ public void checkContainers()
                 Request request = new Request(null, 0, 0,
                         ZooDefs.OpCode.deleteContainer, path, null);
                 try {
    -                LOG.info(""Attempting to delete candidate container: %s"",
    -                        containerPath);
    +                LOG.info(String.format(""Attempting to delete candidate container: %s"",
    --- End diff --
    
    As this a log message you could use 
    `LOG.info(""Attempting to delete candidate container: {}"", container Path);`
;;;","19/Mar/18 00:55;githubbot;Github user sel-fish commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/492#discussion_r175313093
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---
    @@ -116,8 +116,8 @@ public void checkContainers()
                 Request request = new Request(null, 0, 0,
                         ZooDefs.OpCode.deleteContainer, path, null);
                 try {
    -                LOG.info(""Attempting to delete candidate container: %s"",
    -                        containerPath);
    +                LOG.info(String.format(""Attempting to delete candidate container: %s"",
    --- End diff --
    
    to use the same logging style as the other code.
    
                    LOG.error(String.format(""Could not delete container: %s"" ,
                            containerPath), e);
;;;","19/Mar/18 10:27;githubbot;Github user anmolnar commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/492#discussion_r175386273
  
    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---
    @@ -116,8 +116,8 @@ public void checkContainers()
                 Request request = new Request(null, 0, 0,
                         ZooDefs.OpCode.deleteContainer, path, null);
                 try {
    -                LOG.info(""Attempting to delete candidate container: %s"",
    -                        containerPath);
    +                LOG.info(String.format(""Attempting to delete candidate container: %s"",
    --- End diff --
    
    +1 for @eribeiro 
    We already use that form at various places in the codebase, so feel free to use the better one. Existing String.formats should be refactored in the long term, but that probably will happen in small refactorings like this.
;;;","24/Mar/18 17:40;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/492
  
    +1 lgtm
;;;","26/Mar/18 01:49;hanm;Issue resolved by pull request 492
[https://github.com/apache/zookeeper/pull/492];;;","26/Mar/18 01:49;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/492
;;;","26/Mar/18 02:39;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3777 (See [https://builds.apache.org/job/ZooKeeper-trunk/3777/])
ZOOKEEPER-3001: Incorrect log message when try to delete container node (hanm: rev 8cfca3add9c7fd705f9114daf4adaac9fc90f040)
* (edit) src/java/main/org/apache/zookeeper/server/ContainerManager.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,
CMake declares incorrect ZooKeeper version,ZOOKEEPER-2998,13143978,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,andschwa,andschwa,andschwa,09/Mar/18 21:05,26/Mar/18 03:37,13/Jul/23 09:08,26/Mar/18 02:17,3.6.0,,,,,,,,,3.6.0,,,,,,,,,0,,,The \{{CMakeLists.txt}} file in the master branch declares version 3.5.3 instead of 3.6.0.,,andschwa,githubbot,hanm,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 26 03:37:57 UTC 2018,,,,,,,,,,"0|i3r49b:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 21:11;githubbot;GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/484

    ZOOKEEPER-2998: CMake declares incorrect ZooKeeper version

    This was not updated for the current development branch; it should be
    3.6.0.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2998

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/484.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #484
    
----
commit 76d4f9708e9015438f5709cf19c866cd177314a5
Author: Andrew Schwartzmeyer <andrew@...>
Date:   2018-03-09T21:09:15Z

    ZOOKEEPER-2998: CMake declares incorrect ZooKeepeer version
    
    This was not updated for the current development branch; it should be
    3.6.0.

----
;;;","09/Mar/18 21:38;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/484
  
    That CI failure looks spurious...
;;;","09/Mar/18 21:41;andschwa;https://github.com/apache/zookeeper/pull/484;;;","09/Mar/18 21:42;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/484
  
    [JIRA: ZOOKEEPER-2998](https://issues.apache.org/jira/browse/ZOOKEEPER-2998)
;;;","26/Mar/18 02:17;hanm;Issue resolved by pull request 484
[https://github.com/apache/zookeeper/pull/484];;;","26/Mar/18 02:17;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/484
;;;","26/Mar/18 03:37;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3778 (See [https://builds.apache.org/job/ZooKeeper-trunk/3778/])
ZOOKEEPER-2998: CMake declares incorrect ZooKeeper version (hanm: rev 29a892907eb175adc0c6908a1fde3e7bf8d655b6)
* (edit) src/c/CMakeLists.txt
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CMake should not force static CRT linking,ZOOKEEPER-2997,13143975,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,andschwa,andschwa,andschwa,09/Mar/18 21:00,26/Mar/18 06:02,13/Jul/23 09:08,26/Mar/18 02:19,,,,,,,,,,3.5.4,3.6.0,,,,,,,,0,,,"When writing the CMake build, I erroneously forced ZooKeeper to link to the Windows CRT statically. Instead of setting this, we should rely on CMake's defaults, and let users override it if they choose to by configuring with  setting {{CMAKE_CXX_ARGS}}.",Windows,andschwa,githubbot,hanm,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 26 06:02:50 UTC 2018,,,,,,,,,,"0|i3r48n:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"09/Mar/18 21:03;githubbot;GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/483

    ZOOKEEPER-2997: CMake should not force static CRT linking

    By removing this code, CMake will use its own defaults for the CRT
    flags (e.g., `/MDd` for debug configurations). With it removed, the
    user can override this behavior by setting the `CMAKE_CXX_FLAGS`
    manually when configuring ZooKeeper.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/483.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #483
    
----
commit 45a997ad0e281d967460f4eb205a4b18e4219ecd
Author: Andrew Schwartzmeyer <andrew@...>
Date:   2018-03-09T21:00:48Z

    ZOOKEEPER-2997: CMake should not force static CRT linking
    
    By removing this code, CMake will use its own defaults for the CRT
    flags (e.g., `/MDd` for debug configurations). With it removed, the
    user can override this behavior by setting the `CMAKE_CXX_FLAGS`
    manually when configuring ZooKeeper.

----
;;;","09/Mar/18 21:17;githubbot;Github user andschwa closed the pull request at:

    https://github.com/apache/zookeeper/pull/483
;;;","09/Mar/18 21:17;githubbot;GitHub user andschwa opened a pull request:

    https://github.com/apache/zookeeper/pull/485

    ZOOKEEPER-2997: CMake should not force static CRT linking

    By removing this code, CMake will use its own defaults for the CRT
    flags (e.g., `/MDd` for debug configurations). With it removed, the
    user can override this behavior by setting the `CMAKE_CXX_FLAGS`
    manually when configuring ZooKeeper.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2997

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/485.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #485
    
----
commit 45a997ad0e281d967460f4eb205a4b18e4219ecd
Author: Andrew Schwartzmeyer <andrew@...>
Date:   2018-03-09T21:00:48Z

    ZOOKEEPER-2997: CMake should not force static CRT linking
    
    By removing this code, CMake will use its own defaults for the CRT
    flags (e.g., `/MDd` for debug configurations). With it removed, the
    user can override this behavior by setting the `CMAKE_CXX_FLAGS`
    manually when configuring ZooKeeper.

----
;;;","09/Mar/18 21:17;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/485
  
    I had to reopen this because I changed which branch it was from.
;;;","09/Mar/18 21:42;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/485
  
    [JIRA: ZOOKEEPER-2997](https://issues.apache.org/jira/browse/ZOOKEEPER-2997)
;;;","09/Mar/18 21:42;andschwa;https://github.com/apache/zookeeper/pull/485;;;","09/Mar/18 21:44;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/485
  
    CI errors look spurious...
;;;","26/Mar/18 02:19;hanm;Issue resolved by pull request 485
[https://github.com/apache/zookeeper/pull/485];;;","26/Mar/18 02:19;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/485
;;;","26/Mar/18 03:37;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3778 (See [https://builds.apache.org/job/ZooKeeper-trunk/3778/])
ZOOKEEPER-2997: CMake should not force static CRT linking (hanm: rev 13c9f899ff62be6a2eacb28e522d06703f1dab08)
* (edit) src/c/CMakeLists.txt
;;;","26/Mar/18 06:02;githubbot;Github user andschwa commented on the issue:

    https://github.com/apache/zookeeper/pull/485
  
    Thanks @hanm!
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,
.ignore file prevents adding src/java/main/org/apache/jute/compiler/generated dir to git repo,ZOOKEEPER-2993,13142642,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,taoist,taoist,taoist,05/Mar/18 19:48,17/Jul/18 04:49,13/Jul/23 09:08,23/May/18 03:44,3.4.10,,,,,,,,,3.4.13,3.5.5,3.6.0,,,build,,,,0,pull-request-available,,"There are Rcc.java and other required files under the src/java/main/org/apache/jute/compiler/generated directory.

However, when I tried to add the source distribution to our own git repo, the .gitignore file has ""generated"" as a key word in line 55 - which prevents the dir and files under that dir to be added to the repo.  The compilation later fails due to the missing dir and files.

*compile_jute*
 :*19:02:54* [mkdir] Created dir: /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/java/generated*

19:02:54* [mkdir] Created dir: /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/c/generated*

19:02:54* [java] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8

*19:02:54* [java] Error: Could not find or load main class org.apache.jute.compiler.generated.Rcc*

19:02:54* [java] Java Result: 1*19:02:54* [java] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8

*19:02:54* [java] Error: Could not find or load main class org.apache.jute.compiler.generated.Rcc*

19:02:54* [java] Java Result: 1*19:02:54* [touch] Creating /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/java/generated/.generated*

 

Fix is to remove or comment out the generated key word in line 55.

#
 #generated
 #

 ",,andor,githubbot,hanm,hudson,taoist,,,,,,,,,,,,,,,"Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/488
;23/May/18 03:43;githubbot;600","Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    Committed to master, 3.5, and 3.4.
;23/May/18 03:45;githubbot;600",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,1200,,,0,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 23 07:45:48 UTC 2018,,,,,,,,,,"0|i3qw0f:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"06/Mar/18 14:30;andor;[~taoist]

Nice catch, thanks for creating the Jira.

I think the name of the directory (generated) is a little bit misleading, because these files are part of the codebase since the very beginning and have mistakenly put on ignore by [~cnauroth] in [https://github.com/apache/zookeeper/commit/fa5955afa0962147268241163b7ca47dcdd074e0]

Are you happy to contribute and file a new PR on GitHub to address the issue as suggested?;;;","12/Mar/18 01:08;githubbot;GitHub user asutosh936 opened a pull request:

    https://github.com/apache/zookeeper/pull/488

    ZOOKEEPER-2993 - Removed 'generated' line from .gitignore

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/asutosh936/zookeeper ZOOKEEPER-2993

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/488.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #488
    
----
commit a02ef3db8d18cc738a1a3e24eafcaa0b5379d297
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-02-25T23:40:14Z

    ZOOKEEPER-2936 - Removed duplicate code

commit 6a17613be090835286f6fd15b3fb5c40e269a25f
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-01T01:22:30Z

    ZOOKEEPER-2936 - Deleted duplicate code

commit ad55832eafbe4e341e113a1bdeb0385674025b8e
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-03T18:09:01Z

    Merge branch 'master' of https://github.com/apache/zookeeper

commit 67d454b5ab91b72f20b878c90c7d9f7a45bcdf88
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-07T01:39:40Z

    Merge branch 'master' of https://github.com/apache/zookeeper

commit 13f8a235bad6f361120babf96f05aa2fc0cdcdb0
Author: asutosh936 <asutosh.pandya@...>
Date:   2018-03-12T01:06:57Z

    ZOOKEEPER-2993 - Removed 'generated' line from .gitignore

----
;;;","12/Mar/18 01:09;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @anmolnar - Please review
;;;","12/Mar/18 07:38;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @asutosh936 lgtm
    It would be nice to squash your commits into one. Thanks.
;;;","12/Mar/18 19:16;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    I agree with @anmolnar. This change should be fine from what I can tell but it would be nice to have a note as to why the change was made.
;;;","13/Mar/18 01:12;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @anmolnar @afine - Thank You for the review comments.
    
    The change is to remove 'generated' keyword from .gitignore because it prevents the dir and files under generated dir to be added to the repo.  The compilation later fails due to the missing dir and files.
    
    Also I am trying to squash the previous commits but somehow git is not allowing me to do so. Let me know if the changes looks good and to be merged or I need to close this PR and create new one.
;;;","13/Mar/18 20:14;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    > The change is to remove 'generated' keyword from .gitignore because it prevents the dir and files under generated dir to be added to the repo. The compilation later fails due to the missing dir and files.
    
    Which files are you referring to? I don't think we have any top level `generated` directory and I also don't think we would want to add such files to the repo.
    
    Don't worry about squashing, I should be able to take care of that when it comes time to commit.
;;;","13/Mar/18 20:31;githubbot;Github user asutosh936 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @afine - Currently there is a folder named 'generated' at below location.
    https://github.com/apache/zookeeper/tree/master/src/java/main/org/apache/jute/compiler/generated
    
    As per the defect any java file added to above location, it will be ignored by git to add to repository.
;;;","14/Mar/18 15:39;githubbot;Github user tamaashu commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @asutosh936 Sorry but I don't think that the generated directory is ignored by a defect.
    We should never add generated files to git, they must be ignored.
;;;","14/Mar/18 21:03;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @tamaashu Generally speaking I agree with you, but that directory is somewhat different. There is code in it which we don't generate during our build process, but it's been in git since the beginning of ZooKeeper.
    I have no idea why that directory named 'generated'. It's quite misleading.
    @afine @tamaashu please take a closer look before making a judgement.

;;;","15/Mar/18 18:17;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @asutosh936 I agree with @anmolnar That directory exists, it is currently in version control, and I don't think any generated files actually end up there. My guess is that it is there purely for historical reasons and to contain the rcc.jj file.
    
    In other words, I don't think your change to the gitignore will impact that directory. According to the gitignore documentation (https://git-scm.com/docs/gitignore):
    
    > If the pattern does not contain a slash /, Git treats it as a shell glob pattern and checks for a match against the pathname relative to the location of the .gitignore file (relative to the toplevel of the work tree if not from a .gitignore file).
    
    Since there are not any top level files called `generated` I don't think this line in the gitignore has any impact on the repository. Am I missing something here?
    

;;;","15/Mar/18 19:45;githubbot;Github user jason95 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    Hi folks,
    
    Sorry for not keeping up with the jira.
    @asutosh936 - thanks for the PR and others for reviewing.
    
    Here are some info - hope it will shed some clarity.
    
    - There exists in the repo/source code a dir named: src/java/main/org/apache/jute/compiler/generated
    - In that dir it has Rcc.java and other files
    - Files in that dir is required to for successful compilation
    
    - However, the .gitignore has the keyword ""generated""
    - when I add the source code tree into out company repo, the src/java/main/org/apache/jute/compiler/generated was effectively ignored - and thus not added into our company repo
    - I ran a jenkins job to compile the code from the repo - it failed - due to the missing Rcc and other required java sources under that excluded directory.
    
    When I did a git status - everything was in sync even though my workspace has the Rcc.java - but my company repo actually is missing that dir.  My local compile succeeds every time.  But jenkins job compile using company repo always fails.  After some comparison - then I noticed the missing dir on the company repo side.
    
    Once I removed the generated keyword from the .gitignore - git immediately detected the generated dir in my workspace as new.  I was able to git add/commit/push to make the jenkins compile successful.
    
    Hope this help clarify the situation.
    
    I prefer to have generated keyword removed.  In the future, if the compile will generate artifacts that should be ignored, then modify the .gitignore and rename the src/java/main/org/apache/jute/compiler/generated dir - so the 2 does not conflict.
    
    My 2 cents.
    
    Thanks

;;;","19/Mar/18 10:56;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @afine In the other way around: if there's no '/' at the beginning of the keyword, git will check the entire path relative to the root for the string `generated` and if it finds a match, it'll ignore all files underneath.
    
    My suggestion is to remove `generated` keyword from .gitignore - like in this PR -, because 'real' generated folders are already excluded explicitly. There could be other possible solutions to the problem, I'm open to them.
;;;","23/Mar/18 21:06;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    @anmolnar It looks like you are right. removing this line does not impact which files git ignores. Thanks for persisting @jason95 @asutosh936
;;;","23/Mar/18 21:07;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    I would like to have this change in 3.4 so I will merge after the 3.4.12 release.
;;;","27/Mar/18 14:41;githubbot;Github user jason95 commented on the issue:

    https://github.com/apache/zookeeper/pull/488
  
    Thanks everyone!! @afine @asutosh936 @anmolnar @tamaashu 
;;;","23/May/18 03:44;hanm;Issue resolved by pull request 488
[https://github.com/apache/zookeeper/pull/488];;;","23/May/18 07:45;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #36 (See [https://builds.apache.org/job/ZooKeeper-trunk/36/])
ZOOKEEPER-2993: Removed 'generated' line from .gitignore (hanm: rev 07228badc4691ca96f0d35e5aaa5ebcb2b9891cb)
* (edit) .gitignore
;;;",,,,,,,,,,,,,,,,,,,
The eclipse build target fails due to protocol redirection: http->https,ZOOKEEPER-2992,13142375,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Major,Fixed,elyograg,elyograg,elyograg,04/Mar/18 16:51,05/Mar/18 08:34,13/Jul/23 09:08,05/Mar/18 02:52,3.4.11,3.5.3,,,,,,,,3.4.12,3.5.4,3.6.0,,,build,,,,0,,,"The eclipse build target downloads a component from sourceforge.  It does this download with http, but sourceforge now requires https downloads.  The sourceforge page redirects to https, but ant is refusing to follow the redirect because it changes protocol.

The download in build.xml just needs to be changed to https and it will work.
",,elyograg,githubbot,hanm,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Mon Mar 05 08:34:47 UTC 2018,,,,,,,,,,"0|i3qucv:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"04/Mar/18 17:42;githubbot;GitHub user elyograg opened a pull request:

    https://github.com/apache/zookeeper/pull/479

    ZOOKEEPER-2992: Fix sourceforge download url

    ZOOKEEPER-2992 is the Jira issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/elyograg/zookeeper master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/479.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #479
    
----
commit 3c22cbdc8c34a372779135a392344317adc1dadc
Author: Shawn Heisey <elyograg@...>
Date:   2018-03-04T17:39:47Z

    ZOOKEEPER-2992: Fix sourceforge download url.

----
;;;","04/Mar/18 17:46;elyograg;Looks like you're not using a text changelog.  If there is any credit given somewhere else, please use my full name rather than my apache username.
;;;","04/Mar/18 18:16;githubbot;Github user eribeiro commented on the issue:

    https://github.com/apache/zookeeper/pull/479
  
    LGTM. Let's wait for a commiter's review and Merge.
;;;","05/Mar/18 02:52;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/479
;;;","05/Mar/18 02:52;hanm;Issue resolved by pull request 479
[https://github.com/apache/zookeeper/pull/479];;;","05/Mar/18 03:03;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/479
  
    merged to master: https://github.com/apache/zookeeper/commit/99c9bbb0ab1eef469e1662086532c58078b9909a
    3.5:
    https://github.com/apache/zookeeper/commit/005b3fb8ddb3ef03183fd0539a40ceb86fe8f4ac
    3.4:
    https://github.com/apache/zookeeper/commit/7b9176cbbe5878d7471b2ef02e1748d9229adb59
;;;","05/Mar/18 08:34;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3756 (See [https://builds.apache.org/job/ZooKeeper-trunk/3756/])
ZOOKEEPER-2992: The eclipse build target fails due to protocol (hanm: rev 99c9bbb0ab1eef469e1662086532c58078b9909a)
* (edit) build.xml
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE triggered if server receives a vote for a server id not in their voting view,ZOOKEEPER-2988,13141899,Bug,Closed,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,enixon,enixon,enixon,01/Mar/18 20:18,17/Jul/18 04:49,13/Jul/23 09:08,30/Apr/18 04:35,3.4.11,3.4.12,3.5.3,,,,,,,3.4.13,3.5.4,3.6.0,,,leaderElection,,,,0,,,"We've observed the following behavior in elections when a node is lagging behind the quorum in its view of the ensemble topology.

- Node A is operating with node B in its voting view, but without view of node C.

- B votes for C.

- A then switches its vote to C, but throws a NPE when attempting to connect.

This causes the QuorumPeer to spin up a Follower only to immediately have it shutdown by the exception.

Ideally, A would not advertise a vote for a server that it will not follow.",,enixon,githubbot,hanm,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 02 06:10:06 UTC 2018,,,,,,,,,,"0|i3qrfb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"01/Mar/18 20:29;githubbot;GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/476

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …

    …id not in their voting view

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/476.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #476
    
----
commit 1862a718168ee07287d0b9769a0f4ce20bd1bd32
Author: Brian Nixon <nixon@...>
Date:   2018-03-01T19:19:51Z

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view

----
;;;","01/Mar/18 20:30;githubbot;GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/477

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …

    …id not in their voting view

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.5

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/477.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #477
    
----
commit a1364d8c4ec9fdf1c4210b6485a6a143c1e14f5f
Author: Brian Nixon <nixon@...>
Date:   2018-03-01T19:21:47Z

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view

----
;;;","01/Mar/18 20:30;githubbot;GitHub user enixon opened a pull request:

    https://github.com/apache/zookeeper/pull/478

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server …

    …id not in their voting view

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.4

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/478.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #478
    
----
commit 6fc857a1cfe97a46a4f453613b95f9682adcce96
Author: Brian Nixon <nixon@...>
Date:   2018-03-01T19:19:51Z

    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view

----
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972029
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    +            q2.shutdown();
    +            q3.shutdown();
    +
    +            Assert.assertTrue(""waiting for server 1 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP1,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 2 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP2,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP3,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +
    +        } finally {
    +            qlogger.removeAppender(appender);
    +        }
    +
    +        // Verify that Node 1 never threw an exception
    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));
    +        String line;
    +        boolean found = false;
    +        Pattern p = Pattern.compile("".*java.lang.NullPointerException.*"");
    +        while ((line = r.readLine()) != null) {
    +            found = p.matcher(line).matches();
    +            if (found) {
    +                break;
    +            }
    +        }
    +
    +        Assert.assertFalse(""Node should not attempt connection to out of view leader"", found);
    +    }
    +
    +    private String getUniquePortCfgForId(int id) {
    +        return String.format(""server.%d=127.0.0.1:%d:%d"", id, PortAssignment.unique(), PortAssignment.unique());
    +    }
    +
    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {
    +        long start = Time.currentElapsedTime();
    +        while (true) {
    +            QuorumPeer quorumPeer = mainThread.getQuorumPeer();
    +            if (quorumPeer != null) {
    +                return quorumPeer;
    +            }
    +
    +            if (Time.currentElapsedTime() > start + timeout) {
    +                LOG.error(""Timed out while waiting for QuorumPeer"");
    +                break;
    +            }
    +
    +            try {
    +                Thread.sleep(250);
    +            } catch (InterruptedException e) {
    +                // ignore
    +            }
    +        }
    +        throw new NullPointerException();
    --- End diff --
    
    Can we use a better exception?
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972608
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    --- End diff --
    
    is there a way we can use the existing tearDown code. So we make sure we never leave any servers running even if an assertion fails?
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972228
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    +            q2.shutdown();
    +            q3.shutdown();
    +
    +            Assert.assertTrue(""waiting for server 1 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP1,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 2 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP2,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP3,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +
    +        } finally {
    +            qlogger.removeAppender(appender);
    +        }
    +
    +        // Verify that Node 1 never threw an exception
    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));
    +        String line;
    +        boolean found = false;
    +        Pattern p = Pattern.compile("".*java.lang.NullPointerException.*"");
    +        while ((line = r.readLine()) != null) {
    +            found = p.matcher(line).matches();
    +            if (found) {
    +                break;
    +            }
    +        }
    +
    +        Assert.assertFalse(""Node should not attempt connection to out of view leader"", found);
    +    }
    +
    +    private String getUniquePortCfgForId(int id) {
    +        return String.format(""server.%d=127.0.0.1:%d:%d"", id, PortAssignment.unique(), PortAssignment.unique());
    +    }
    +
    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {
    --- End diff --
    
    I believe this has the potential to be flaky since we can return `quorumPeer` before the thread actually starts. We should ensure that the thread started.
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171970721
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    --- End diff --
    
    It would be great if we did not specify the pattern as a literal. Take a look at some of the other tests and see if the way they get the patternlayout could apply here (`testElectionFraud` for example).
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171973588
  
    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---
    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {
                 Assert.assertNull(""server "" + i + "" should not have /zk"" + leader, servers.zk[i].exists(""/zk"" + leader, false));
             }
         }
    +
    +    /**
    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.
    +     */
    +    @Test
    +    public void testLeaderOutOfView() throws Exception {
    +        ClientBase.setupTestEnv();
    +
    +        Layout layout = new PatternLayout(""%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n"");
    +        ByteArrayOutputStream os = new ByteArrayOutputStream();
    +        WriterAppender appender = new WriterAppender(layout, os);
    +        appender.setThreshold(Level.DEBUG);
    +        Logger qlogger = Logger.getLogger(""org.apache.zookeeper.server.quorum"");
    +        qlogger.addAppender(appender);
    +
    +        try {
    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();
    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();
    +
    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + ""\n"" + getUniquePortCfgForId(2);
    +            String quorumCfgComplete = quorumCfgIncomplete + ""\n"" + getUniquePortCfgForId(3);
    +
    +            // Node 1 is started without the leader (3) in its config view
    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);
    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);
    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);
    +
    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3
    +            q1.start();
    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up
    +            q3.start();
    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);
    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);
    +
    +            // Node 2 started last, kicks off leader election
    +            q2.start();
    +
    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state
    +            Assert.assertTrue(""waiting for server 2 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 to start"",
    +                    ClientBase.waitForServerUp(""127.0.0.1:"" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));
    +
    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);
    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);
    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);
    +
    +            q1.shutdown();
    +            q2.shutdown();
    +            q3.shutdown();
    +
    +            Assert.assertTrue(""waiting for server 1 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP1,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 2 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP2,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +            Assert.assertTrue(""waiting for server 3 down"",
    +                    ClientBase.waitForServerDown(""127.0.0.1:"" + CLIENT_PORT_QP3,
    +                            ClientBase.CONNECTION_TIMEOUT));
    +
    +        } finally {
    +            qlogger.removeAppender(appender);
    +        }
    +
    +        // Verify that Node 1 never threw an exception
    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));
    +        String line;
    +        boolean found = false;
    +        Pattern p = Pattern.compile("".*java.lang.NullPointerException.*"");
    --- End diff --
    
    It would be great to have a more direct way of expressing that this member never enters the following state. Can we check the logs for `FOLLOWING` like in `testElectionFraud`?
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171972767
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
                             break;
                         }
                     } else {
    -                    LOG.warn(""Ignoring notification from non-cluster member "" + n.sid);
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {
    +                        LOG.warn(""Ignoring notification for non-cluster member sid {} from sid {}"", n.leader, n.sid);
    +                    }
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                        LOG.warn(""Ignoring notification from non-cluster member sid {}"", n.sid);
    --- End diff --
    
    nit: lets say ""quorum"" instead of ""cluster""
;;;","02/Mar/18 21:58;githubbot;Github user afine commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r171964902
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
                             break;
                         }
                     } else {
    -                    LOG.warn(""Ignoring notification from non-cluster member "" + n.sid);
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {
    +                        LOG.warn(""Ignoring notification for non-cluster member sid {} from sid {}"", n.leader, n.sid);
    +                    }
    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                        LOG.warn(""Ignoring notification from non-cluster member sid {}"", n.sid);
    --- End diff --
    
    lets log which member was voted for
;;;","28/Mar/18 10:12;githubbot;Github user maoling commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @enixon can we move on ?
;;;","10/Apr/18 17:12;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @maoling I was about 2/3 done with cleaning up this diff when I got dragged into different projects. Thanks for the ping, I'll try to update here this week.
;;;","13/Apr/18 07:04;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    Made all changes requested in comments, I can alter the pull requests for the other ZooKeeper branches once we reach agreement on this one.
;;;","17/Apr/18 04:53;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @enixon testLeaderOutOfView deterministically fails for me both locally and on Jenkins. Please take a look.
;;;","17/Apr/18 15:17;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    Tests passing again.
    
    This is what can happen when you use a different logging config and your tests rely on scraping the logs.  :(
;;;","17/Apr/18 15:49;githubbot;Github user eribeiro commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r182127687
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {
                                 tmpTimeOut : maxNotificationInterval);
                         LOG.info(""Notification time out: "" + notTimeout);
                     } 
    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&
    --- End diff --
    
    As this PR modifies this line and add similar ones, wouldn't be the case of creating a private method with a meaningful name like below?
    ```
    private boolean configVotersContains(long sid) {
        return self.getCurrentAndNextConfigVoters().contains(sid);
    }
    ```
    
    This makes this line and the lines below more readable, imho.
;;;","17/Apr/18 18:06;githubbot;Github user enixon commented on a diff in the pull request:

    https://github.com/apache/zookeeper/pull/476#discussion_r182175483
  
    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---
    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {
                                 tmpTimeOut : maxNotificationInterval);
                         LOG.info(""Notification time out: "" + notTimeout);
                     } 
    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {
    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&
    --- End diff --
    
    There are five uses of `getCurrentAndNextConfigVoters().contains` in the class, seems reasonable to make it a method.
;;;","18/Apr/18 05:56;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    What's the build failure on this commit?
;;;","18/Apr/18 06:30;githubbot;Github user anmolnar commented on the issue:

    https://github.com/apache/zookeeper/pull/476
  
    @enixon this: https://issues.apache.org/jira/browse/INFRA-16349
;;;","30/Apr/18 04:35;hanm;Issue resolved by pull request 476
[https://github.com/apache/zookeeper/pull/476];;;","30/Apr/18 04:35;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/476
;;;","30/Apr/18 04:45;hanm;I've committed this to 3.5 and master. Thanks for the patch [~nixon]. Is the patch also applicable to 3.4? I assume this happens only in 3.5+ with dynamic reconfiguration. ;;;","30/Apr/18 06:29;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #6 (See [https://builds.apache.org/job/ZooKeeper-trunk/6/])
ZOOKEEPER-2988: NPE triggered if server receives a vote for a server … (hanm: rev 2022766ec907f63b1b43fc5455e9e7761cd332f6)
* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
* (edit) src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
;;;","30/Apr/18 18:33;enixon;[~hanm] thanks for merging it to 3.5 too, I'll shut down that second pr. This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale. I'll fix up pr 478 for the 3.4 branch to reflect the comments I got on pr 476 so it can be ready for review.;;;","30/Apr/18 18:35;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//console

This message is automatically generated.;;;","30/Apr/18 20:31;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/477
  
    Change merged to branch-3.5 with https://github.com/apache/zookeeper/pull/476, closing this PR as redundant. 
;;;","30/Apr/18 20:31;githubbot;Github user enixon closed the pull request at:

    https://github.com/apache/zookeeper/pull/477
;;;","30/Apr/18 21:21;hadoopqa;-1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//console

This message is automatically generated.;;;","01/May/18 19:41;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/478
  
    The only failure report out of Jenkins is ""Test org.apache.zookeeper.test.FollowerResyncConcurrencyTest FAILED (crashed)"". I'm unable to repro any issue with that test on my branch locally, is there a good way to re-run the test?
;;;","02/May/18 04:19;githubbot;Github user hanm commented on the issue:

    https://github.com/apache/zookeeper/pull/478
  
    @enixon ""FollowerResyncConcurrencyTest "" is a known flaky test (and the error in this case is infrastructure issues - the JVM abnormally exit). I tested your patch using a Jenkins job and everything looks good. Committed, please close this pull request.
    
    >> is there a good way to re-run the test
    
    P.S. to kick off the pre-commit build bot, you can close the pull request and reopen it.
;;;","02/May/18 04:20;hanm;{quote}This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale.
{quote}
Make sense. Just committed the patch for branch-3.4, and updated the Jira fixed version to include 3.4.;;;","02/May/18 06:10;githubbot;Github user enixon commented on the issue:

    https://github.com/apache/zookeeper/pull/478
  
    Thanks, @hanm !
;;;","02/May/18 06:10;githubbot;Github user enixon closed the pull request at:

    https://github.com/apache/zookeeper/pull/478
;;;",,,,
Re-try DNS hostname -> IP resolution,ZOOKEEPER-2982,13139513,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Blocker,Fixed,fpj,eronwright,eronwright,19/Feb/18 19:28,31/Dec/19 19:46,13/Jul/23 09:08,08/May/18 22:57,3.5.0,3.5.1,3.5.3,,,,,,,3.5.4,3.6.0,,,,server,,,,0,,,"ZOOKEEPER-1506 fixed a DNS resolution issue in 3.4.  Some portions of the fix haven't yet been ported to 3.5.

To recap the outstanding problem in 3.5, if a given ZK server is started before all peer addresses are resolvable, that server may cache a negative lookup result and forever fail to resolve the address.    For example, deploying ZK 3.5 to Kubernetes using a StatefulSet plus a Service (headless) may fail because the DNS records are created lazily.

{code}
2018-02-18 09:11:22,583 [myid:0] - WARN  [QuorumPeer[myid=0](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):Follower@95] - Exception when following the leader
java.net.UnknownHostException: zk-2.zk.default.svc.cluster.local
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.zookeeper.server.quorum.Learner.sockConnect(Learner.java:227)
        at org.apache.zookeeper.server.quorum.Learner.connectToLeader(Learner.java:256)
        at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:76)
        at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1133)
{code}

In the above example, the address `zk-2.zk.default.svc.cluster.local` was not resolvable when the server started, but became resolvable shortly thereafter.    The server should eventually succeed but doesn't.",,abalur,andor,eronwright,fpj,githubbot,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ZOOKEEPER-1506,,,,,,,"21/Feb/18 17:33;eronwright;3.5.3-beta.zip;https://issues.apache.org/jira/secure/attachment/12911406/3.5.3-beta.zip","20/Feb/18 23:18;eronwright;fixed.log;https://issues.apache.org/jira/secure/attachment/12911293/fixed.log",,,,,,,,,2.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Wed May 09 01:05:42 UTC 2018,,,,,,,,,,"0|i3qcrj:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"19/Feb/18 19:31;eronwright;Looking at `Learner` in 3.4 versus 3.5, a necessary call within `findLeader` to `recreateSocketAddresses` was added in 3.4 but not ported to 3.5.  The suggested fix is to add the call.

Note that other elements of ZOOKEEPR-1506 were already ported:
https://github.com/apache/zookeeper/commit/d2a49163b7bc7c9589140dbba7f60e591028f908
;;;","19/Feb/18 23:13;githubbot;GitHub user EronWright opened a pull request:

    https://github.com/apache/zookeeper/pull/468

    ZOOKEEPER-2982: Re-try DNS hostname -> IP resolution if node connection fails

    This PR ports a fix from the 3.4 to the 3.5 branch, that was originally made in ZOOKEEPER-1506.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/EronWright/zookeeper ZOOKEEPER-2982

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/468.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #468
    
----
commit 4f8f3ce8074b878f2a6e32c15ec177f4dcd050e0
Author: Eron Wright <eron.wright@...>
Date:   2018-02-19T23:05:44Z

    ZOOKEEPER-2982 Re-try DNS hostname -> IP resolution if node connection fails

----
;;;","20/Feb/18 21:53;abrahamfine;I'm wondering if  [~rthille] can chime in on this.

It looks like the change this JIRA is talking about is referenced by https://issues.apache.org/jira/browse/ZOOKEEPER-1506?focusedCommentId=14711955&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-14711955

Is there a reason why this change was left out of branch-3.5 (and master)?

My guess is that in master and branch-3.5 we always call `recreateSocketAddresses` in `connectOne` which should be called during leader election of communication to another quorum member stops. Again, it would be great to have [~rthille] confirm/tell me how wrong I am.;;;","20/Feb/18 22:28;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/468
  
    @EronWright I left a comment in the JIRA. 
;;;","20/Feb/18 22:32;eronwright;I can confirm that the fix is effective in my K8s environment.  I discovered the problem while using 3.5.3-beta.;;;","20/Feb/18 22:36;fpj;I don't see a reason why it would be a problem to invoke \{recreateSocketAddresses} from \{Learner.findLeader}. That method is simply returning the \{QuorumServer} instance corresponding to the server it believes to be the leader.

The thing that is puzzling is how a server ended up voting for another server that it can't talk to (because the name doesn't resolve). Is it a race that eventually goes away?;;;","20/Feb/18 22:38;eronwright;Looking at the code a bit, the learner makes a raw socket connection (`connectToLeader` -> `sockConnect`) not involving `QuorumCnxManager`.   Sorry I don't know all the details.   ;;;","20/Feb/18 22:41;fpj;[~eronwright] a follower invokes followLeader after leader election completes. followLeader makes a call to connectToLeader.;;;","20/Feb/18 22:44;eronwright;Sorry I was just responding to [~abrahamfine] regarding why `connectOne` doesn't cover all cases.

Based on empirical evidence I think this patch is critical for ZK 3.5.;;;","20/Feb/18 22:45;fpj;[~eronwright] in your set up, once you get that exception, is it the case that the ensemble never recovers (it is never able to elect a leader)?;;;","20/Feb/18 22:47;eronwright;[~fpj] that is correct; without the patch, the ensemble never comes online.;;;","20/Feb/18 22:55;abrahamfine;[~eronwright] I think `connectToLeader` uses the address from `findLeader` which should read the `QuorumVerifier` updated by `recreateSocketAddresses` called in `connectOne`.

I have a feeling it would be tough, but if you could come up with a test to reproduce the issue you are facing or give us step by step instructions to reproduce (ideally outside of K8s) that would help us confirm the problem.;;;","20/Feb/18 23:01;eronwright;The step-by-step instructions are:
1. configure a three node ensemble (0,1,2).
2. by whatever means, configure 0 such that it cannot resolve the DNS address of 1 and/or 2.   Do likewise for other servers.
3. Start the ensemble, observing the {{UnknownHostException}} as shown in the description.
4. While the servers are running, fix the DNS issue so that the addresses may be resolved.
5. Observe that the exception continues to occur.;;;","20/Feb/18 23:08;fpj;[~eronwright] could you upload some server logs so that we can have a look, please?;;;","20/Feb/18 23:20;eronwright;Attached 'fixed.log' which demonstrates the behavior after the fix is applied.   Let me know if you also need to see the output from an unpatched cluster (I would prefer not to spend the time to get that).;;;","21/Feb/18 13:53;andor;[~eronwright]

I've tried this on localhost by adding fake dns names to /etc/hosts like this:
{noformat}
127.0.0.1 one.andor.org
127.0.0.1 two.andor.org
#127.0.0.1 three.andor.org{noformat}
First, all of the 3 entries were commented out and I started ZooKeeper nodes with the following server config:
{noformat}
server.1=one.andor.org:2222:2223
server.2=two.andor.org:3333:3334
server.3=three.andor.org:4444:4445
{noformat}
Nodes were unable to connect because of the following resolution error:
{noformat}
2018-02-21 14:33:25,509 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):QuorumPeer$QuorumServer@172] - Failed to resolve address: two.andor.org
java.net.UnknownHostException: two.andor.org
at java.net.InetAddress.getAllByName0(InetAddress.java:1273)
at java.net.InetAddress.getAllByName(InetAddress.java:1185)
at java.net.InetAddress.getAllByName(InetAddress.java:1119)
at java.net.InetAddress.getByName(InetAddress.java:1069)
at org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer.recreateSocketAddresses(QuorumPeer.java:170)
at org.apache.zookeeper.server.quorum.QuorumPeer.recreateSocketAddresses(QuorumPeer.java:726)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:686)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:720)
at org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:919)
at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1171){noformat}
Similar entries are keep repeated in both server logs. As I can see ZK is trying to call recreateSocketAddresses() and tries to re-resolve the address every time it's trying to connect.

This is the case _without_ your patch.

When I enabled the entries in /etc/hosts, the following error showed up in the logs:
{noformat}
2018-02-21 14:37:07,178 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):QuorumCnxManager@663] - Cannot open channel to 2 at election address two.andor.org/127.0.0.1:3334
java.net.ConnectException: Connection refused (Connection refused)
at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:580)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:641)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:692)
at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:720)
at org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:919)
at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1171){noformat}
The error shows that DNS resolution was successful (127.0.0.1) and the connection issue is different (Connection refused) which might be related to my silly test environment (socket has not been created on the other side), but the key takeaway here is that [~abrahamfine] is probably right and the re-resolution happens properly.

I repeated the test with your patch too and the results are the same. No difference.

Maybe I'm missing something and the test might not be relevant at all, but at least it's a little bit confusing.

[~eronwright]Would you please attach logs running the same ensemble _without_ your patch too?;;;","21/Feb/18 14:13;fpj;From the logs, we can see the same exception being raised when the server is trying to connect to elect a leader:

{noformat}
2018-02-20 20:41:25,669 [myid:1] - WARN  [QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):QuorumPeer$QuorumServer@173] - Failed to resolve address: pravega-zookeeper-2.pravega-zookeeper-headless.default.svc.cluster.local
java.net.UnknownHostException: pravega-zookeeper-2.pravega-zookeeper-headless.default.svc.cluster.local
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at java.net.InetAddress.getByName(InetAddress.java:1076)
	at org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer.recreateSocketAddresses(QuorumPeer.java:171)
	at org.apache.zookeeper.server.quorum.QuorumPeer.recreateSocketAddresses(QuorumPeer.java:727)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:682)
	at org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:716)
	at org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:919)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1190)
{noformat}

Once the address resolves and it can connect, the exception goes away and the notification messages flow regularly. The question is why the update performed during leader election to the quorum view in {{QuorumCnxManager.connectOne}} is not taking any effect in the view that {{Learner.findLeader}} uses to get the `QuorumServer` instance to connect to the leader. Two possibilities I can think of:

1- The server hasn't connected to the elected server during leader election, in which case the address wasn't updated.
2- The quorum view that the learner is using to get the quorum server instance is not the one that was updated in {{QuorumCnxManager}}.

;;;","21/Feb/18 17:38;eronwright;Thanks everyone for your patience.  I've attached a log showing the unpatched behavior (3.5.3-beta).   You'll observe two ongoing exceptions, one from {{QuorumCnxManager}}, the other from {{Learner}}.     Around {{2018-02-21 17:23:36,746}}, the DNS record finally comes up and {{QuorumCnxManager}} recovers whereas {{Learner}} doesn't.;;;","21/Feb/18 19:19;fpj;I think I know what's going on. It is correct that {{connectOne}} invokes {{recreateSocketAddresses}}, but that invocation won't happen in the case that the server receives a connection request rather than starting the connection. In fact, servers with larger ids are always supposed to start the connections.

I think the patch proposed here of invoking {{recreateSocketAddresses}} in {{findLeader}} in the learner class makes sense to compensate for {{recreateSocketAddresses}} not being invoked during leader election. Any other insight or anything I'm missing?

;;;","21/Feb/18 20:14;andor;[~fpj] I think you're right.

Looking at the logfile that [~eronwright]uploaded recently I see connections are being received from other members of the ensembe on the election port. myid=1 is just unable to initiate due to DNS error and doesn't either give up connection, because not realizing that myid=1 < id of the other connection.

I believe the ensembe looks like this:

myid=1 zookeeper-0.zookeeper-headless.default.svc.cluster.local 10.8.2.14
myid=2 zookeeper-1.zookeeper-headless.default.svc.cluster.local 10.8.0.6
myid=3 zookeeper-2.zookeeper-headless.default.svc.cluster.local 10.8.1.7

 

 ;;;","21/Feb/18 20:42;andor;Looks like that sock.connect() in connectToLeader() requires the address to be resolved already.

If QuorumCnxnManager() fails to do that, connectToLeader() should be able to detect & fix it by doing resolution explicitly when addr.isUnresolved() == true.

Not sure if it's any better than doing recreateSocketAddress() in findLeader(), but it may be another option to consider.;;;","22/Feb/18 08:33;fpj;I have tried your recipe for reproducing as well [~andor] by changing {{/etc/hosts}} and got the same issue. The problem is that the leader fails to bind to the port, which actually makes me wonder whether we need to do anything about the leader with respect to this issue:

{noformat}
java.net.SocketException: Unresolved address
	at java.net.ServerSocket.bind(ServerSocket.java:368)
	at java.net.ServerSocket.bind(ServerSocket.java:329)
	at org.apache.zookeeper.server.quorum.Leader.<init>(Leader.java:240)
	at org.apache.zookeeper.server.quorum.QuorumPeer.makeLeader(QuorumPeer.java:1023)
	at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1226)
{noformat}

Your suggestion of the alternative change is sensible, but I'd say that for consistency, it is better that we simply do the same that we have in 3.4, which is to make the change in {{findLeader}}.

One thing that I believe we haven't been able to do is to have a test case to report it. It would be good to have it, but I'm not sure what would be a good way.;;;","22/Feb/18 16:42;andor;[~fpj] Sounds reasonable to me.

I'll think about how to test this and will let you know when I can come up with something. ;;;","24/Feb/18 00:08;eronwright;[~fpj] ready to merge this fix?;;;","24/Feb/18 01:38;abrahamfine;[~fpj] I believe your diagnosis to be correct and I agree that [~eronwright]'s fix would solve the problem in the case that DNS eventually is fixed. My concern with the current solution is that it could cause us to jump back and forth between leader election and the quorum when the DNS stays in a bad state. For example, imagine a 3 node cluster {z1, z2, z3}. z3 is always offline and z2 has no entry in dns. z2 will connect to z1 and win the leader election. When it comes time to form the quorum z1 will be unable to follow z2 as it wont be able to resolve its address.

Just spitballing here, but what if we had z1 connect to the {{remoteSocketAddress}} of the socket created from the connection it received in {{QuorumCnxManager}}? I understand there are some security concerns here and I'm not sure how much we care about that since they would be cured by Kerberos or TLS (one day). We could also do a reverse dns lookup and reject the connection if the reverse lookup does not align with our expected hostname. 

What do you guys think?
;;;","26/Feb/18 17:35;eronwright;My humble opinion is that there's no risk in taking this patch as-is, since it fixes a regression.   Improvements could be made from there, on their own strength.;;;","09/Mar/18 17:40;eronwright;[~andor] are you driving this issue now?   Would you please assign the bug appropriately?

I'm keen to see the patch make it into 3.5.4.;;;","13/Mar/18 19:04;eronwright;[~abrahamfine] are you OK with accepting this patch as-is for now?  This would fix the regression between 3.4 and 3.5.  Thanks!;;;","14/Mar/18 12:30;fpj;hey guys, here are some comments based on the latest points:

[~abrahamfine] the improvement you are proposing requires further discussion. for one thing, the user has told us to use names and now we are trying to second-guess how to connect to the server. I'm not saying this is necessarily a bad idea, but I feel it needs to be addressed separately. I think we should go for now with the fix that [~eronwright] is proposing as it fixes an issue with the port.

[~andor] do you think you will be able to come up with a test case? To recap, I think we need to test that we are able to resolve names correctly despite changes in the mapping of name to address. I'm not sure what a good way of testing it would be.;;;","16/Apr/18 18:34;eronwright;Are we ready to accept this patch yet?   ;;;","23/Apr/18 22:53;eronwright;[~fpj] would you please assign this issue to someone and clarify what your expectations are? ;;;","02/May/18 09:27;abalur;Can someone please comment on whether this is getting merged in 3.5.4?? When is 3.5.4 expected?;;;","08/May/18 08:10;fpj;Based on this comment, I'm +1 from this change:

https://issues.apache.org/jira/browse/ZOOKEEPER-2982?focusedCommentId=16371886&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16371886

It would have been good to have a test case, but we haven't been able to come up with anything, so I suggest we leave it for future work. We also have a +1 from [~andor] in the pull request.;;;","08/May/18 22:02;hadoopqa;+1 overall.  GitHub Pull Request  Build
      

    +1 @author.  The patch does not contain any @author tags.

    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1665//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1665//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1665//console

This message is automatically generated.;;;","08/May/18 22:21;eronwright;Note that I opened two PRs - one for {{branch-3.5}} and the other for {{master}} branch.;;;","08/May/18 22:57;fpj;Issue resolved by pull request 513
[https://github.com/apache/zookeeper/pull/513];;;","09/May/18 01:05;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #15 (See [https://builds.apache.org/job/ZooKeeper-trunk/15/])
ZOOKEEPER-2982: Re-try DNS hostname -> IP resolution if node connection (fpj: rev b1f6279a8c4708d1df7dd1128dc4fdf41fc7e24a)
* (edit) src/java/main/org/apache/zookeeper/server/quorum/Learner.java
;;;"
fix potential null pointer exception when deleting node,ZOOKEEPER-2978,13137864,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Trivial,Fixed,,achimbab,achimbab,12/Feb/18 13:57,20/Feb/18 23:35,13/Jul/23 09:08,20/Feb/18 22:38,3.4.11,,,,,,,,,3.4.12,3.5.4,3.6.0,,,java client,,,,0,,,"At line 518, 'existWatches.remove(clientPath)' is null because watches for clientPath is already removed.

https://github.com/apache/zookeeper/pull/461/commits/a6044af23ae1096a8c5305633320fa139cf730b2

 ",,abrahamfine,achimbab,githubbot,hudson,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,Patch,,,,,,,,9223372036854775807,,,,,Tue Feb 20 23:35:21 UTC 2018,,,,,,,,,,"0|i3q2lb:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"15/Feb/18 22:06;githubbot;Github user afine commented on the issue:

    https://github.com/apache/zookeeper/pull/461
  
    @achimbab Thanks for the patch.
    
    I'm wondering if you ran into this bug while running ZooKeeper? This code is pretty old and should never actually be executed (for reasons described here: https://github.com/apache/zookeeper/pull/461/files#diff-e08c1cfd3802a0c3156847175ab8e24bR514). 
    
    I would be happy to merge in this fix but please rename the JIRA and the pull request to something more descriptive (as I do not have permissions to change the name of a Pull Request). Something like ""fix potential null pointer exception when deleting node"".
;;;","17/Feb/18 10:39;githubbot;Github user achimbab commented on the issue:

    https://github.com/apache/zookeeper/pull/461
  
    @afine 
    No, I didn't run into this bug.
    I'm renamed the JIRA, the pull request and the commit message.
    Thank you.
;;;","20/Feb/18 22:38;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/461
;;;","20/Feb/18 22:38;abrahamfine;Issue resolved by pull request 461
[https://github.com/apache/zookeeper/pull/461];;;","20/Feb/18 23:35;hudson;FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3733 (See [https://builds.apache.org/job/ZooKeeper-trunk/3733/])
ZOOKEEPER-2978: fix potential null pointer exception when deleting node (afine: rev f0b67b6e49acec5f022bee25e08f82a29572c97a)
* (edit) src/java/main/org/apache/zookeeper/ZooKeeper.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""Conf"" command returns dataDir and dataLogDir opposingly",ZOOKEEPER-2964,13129166,Bug,Resolved,ZOOKEEPER,ZooKeeper,software,phunt,Apache ZooKeeper is a service for coordinating processes of distributed applications.,http://zookeeper.apache.org,Minor,Fixed,,xuqihong,xuqihong,08/Jan/18 06:51,04/Oct/19 14:55,13/Jul/23 09:08,19/Jan/18 00:13,3.5.3,3.6.0,,,,,,,,3.5.4,3.6.0,,,,server,,,,0,,,"I foung a bug that ""conf"" command would return dataDir and dataLogDir opposingly.

This bug only exists in versions newer than 3.5. I only found dumpConf in [ZookeeperServer.java|https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L188] prints these two paths opposingly. Unlike ZOOKEEPER-2960, the actual paths are not affected and server function is ok.

I made a small patch to fix this bug. Any review is appreciated.",,abrahamfine,andor,githubbot,hudson,maoling,xuqihong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/18 07:00;xuqihong;ZOOKEEPER-2964.patch;https://issues.apache.org/jira/secure/attachment/12905035/ZOOKEEPER-2964.patch",,,,,,,,,,1.0,,,,,,,,,,,,,,,,,,,,,,false,,,,,,,,,,,,,,,,,,9223372036854775807,,,,,Fri Jan 19 00:33:39 UTC 2018,,,,,,,,,,"0|i3omfr:",9223372036854775807,,,,,,,,,,,,,,,,,,,,,"18/Jan/18 00:07;phunt;[~fournc] [~abrahamfine] is this related to the issue you recently resolved against 3.4.11?;;;","18/Jan/18 01:22;abrahamfine;[~andor] can you confirm?;;;","18/Jan/18 05:07;andor;[~phunt] [~abrahamfine]

No, the issue is similar, but it's completely unrelated. This one is caused by:

https://issues.apache.org/jira/browse/ZOOKEEPER-1423

It only applies to master and branch-3.5 branches, on branch-3.4 the conf command is right.

The attached patch fixes it.

[~xuqihong] are u happy to create github pull request?;;;","18/Jan/18 07:56;githubbot;GitHub user qihongxu opened a pull request:

    https://github.com/apache/zookeeper/pull/449

    ZOOKEEPER-2964: ""Conf"" command returns dataDir and dataLogDir opposingly

    See [https://issues.apache.org/jira/browse/ZOOKEEPER-2964](url) for details.
    
    The bug affects versions newer than 3.5. According to Andor Molnar‘s [review](https://issues.apache.org/jira/browse/ZOOKEEPER-2964?focusedCommentId=16330018&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16330018) this patch can be applied to master and branch-3.5 branches.
    
    Thanks all for reviewing this issue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/qihongxu/zookeeper ZOOKEEPER-2964

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/zookeeper/pull/449.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #449
    
----
commit d1b8824fe41dafeb2547b9497b62edd140fa320f
Author: Qihong Xu <qihongxu@...>
Date:   2018-01-18T07:34:01Z

    dataDir and dataLogDir are printed opposingly

----
;;;","19/Jan/18 00:12;githubbot;Github user asfgit closed the pull request at:

    https://github.com/apache/zookeeper/pull/449
;;;","19/Jan/18 00:13;phunt;Issue resolved by pull request 449
[https://github.com/apache/zookeeper/pull/449];;;","19/Jan/18 00:33;hudson;SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3697 (See [https://builds.apache.org/job/ZooKeeper-trunk/3697/])
ZOOKEEPER-2964: Conf"" command returns dataDir and dataLogDir opposingly (phunt: rev 78708a8587841ccdcb3d07f33d3114e0c8cfc380)
* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
;;;",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
